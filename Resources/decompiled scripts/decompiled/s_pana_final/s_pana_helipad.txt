void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = -1;
    l_U40 = {64536, 64536, 64536};
    l_U43 = {0, 0, 0};
    StrCopy( ref l_U46, "DUMMY", 32 );
    l_U54 = 1;
    l_U59 = 0;
    l_U60 = 0;
    l_U61 = 0;
    l_U64 = 0;
    l_U128 = 0;
    l_U129 = 0;
    l_U130 = 1500;
    l_U190 = 0;
    l_U192 = 0;
    l_U358 = {-8.78000000, 3.88800000, 8.20700000};
    l_U370 = -1;
    l_U468 = {-9.26000000, 1.05000000, 9.64700000};
    l_U471 = {-9.09000000, 1.02000000, 10.07000000};
    l_U474 = 0.00000000;
    l_U475 = 0;
    sub_454( "MF", "Script s_pana_HeliPad.sc is starting up...", 0 );
    sub_503();
    l_U190 = 1;
    while (NOT IS_EXITFLAG_SET())
    {
        sub_778();
        if (l_U192 == 0)
        {
            sub_9579();
        }
        WAIT( 0 );
    }
    sub_4489( 0 );
    sub_36788();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_pana_HeliPad" );
    sub_454( "MF", "Script s_pana_HeliPad.sc is terminating...", 0 );
    return;
}

void sub_454(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_503()
{
    sub_454( "GA", "P_HP_SETUP_DATA_ARRAYS start", 0 );
    l_U176[0] = g_U1583;
    l_U176[1] = g_U1573;
    l_U176[2] = g_U1572;
    l_U176[3] = 1454823397;
    l_U176[4] = 1422154951;
    l_U176[5] = g_U1520;
    l_U176[6] = g_U830;
    l_U176[7] = -1409914275;
    l_U176[8] = -1321101597;
    l_U176[9] = -1246378211;
    l_U187[0] = 1308526797;
    l_U187[1] = -184942895;
    sub_454( "GA", "P_HP_SETUP_DATA_ARRAYS end", 0 );
    return;
}

void sub_778()
{
    if (g_U834 == 7)
    {
        switch (l_U192)
        {
            case 0:
            sub_861( 1 );
            sub_2163();
            if ((sub_2329()) || (IS_PED_DEAD( sub_871() )))
            {
                l_U192 = 1;
                sub_454( "MF", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_2823())
            {
                if ((g_U835[8]._fU40 != 4) AND (g_U835[8]._fU40 != 0))
                {
                    sub_454( "GA", "Shutting down script for operations building 1.", 0 );
                    sub_2953( ref g_U835[8] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U835[8]._fU32 );
                }
                l_U192 = 3;
            }
            else if ((sub_3018( 0 )) == 1)
            {
                if ((g_U835[8]._fU40 != 4) AND (g_U835[8]._fU40 != 0))
                {
                    sub_454( "GA", "Shutting down script for operations building 1.", 0 );
                    sub_2953( ref g_U835[8] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U835[8]._fU32 );
                }
                l_U192 = 2;
            }
            break;
            case 2:
            if ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND ((NOT (IS_PED_DEAD( sub_871() ))) AND (NOT IS_LAST_MAN_STANDING_ACTIVE())))
            {
                l_U192 = 3;
                sub_454( "MF", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_454( "MF", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_871() ))) AND (NOT (IS_PLAYER_DEAD( sub_893() ))))
            {
                SET_PLAYER_CONTROL( sub_893(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_871() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_871(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            sub_4489( 1 );
            l_U192 = 4;
            sub_454( "MF", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_454( "MF", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            if (l_U140._fU0)
            {
                sub_5363( ref l_U140, sub_871() );
            }
            l_U192 = 5;
            sub_454( "MF", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_454( "MF", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U190 = 1;
            l_U192 = 0;
            sub_454( "MF", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_861(int iParam0)
{
    if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND ((NOT IS_BULLET_CAMERA_ACTIVE()) AND (NOT (IS_PED_DEAD( sub_871() )))))
    {
        if ((IS_PED_IN_WATER( sub_871() )) == 1)
        {
            if (NOT g_U3626._fU32)
            {
                sub_1002();
            }
            if (iParam0 == 1)
            {
                sub_1827();
            }
            sub_1885( 1, 1 );
            return 1;
        }
    }
    return 0;
}

int sub_871()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_893() );
    }
    return 0;
}

void sub_893()
{
    return GET_PLAYER_ID();
}

void sub_1002()
{
    sub_454( "MF", "P_GBL_QUICK_GAMEPLAY_CAM_COPY - START", 0 );
    sub_1070( ref g_U3626, 50 );
    sub_1403( 0, 0, 0, 1 );
    sub_1566( ref g_U3626 );
    sub_454( "MF", "P_GBL_QUICK_GAMEPLAY_CAM_COPY - END", 0 );
    return;
}

void sub_1070(int iParam0, unknown uParam1)
{
    iParam0->_fU4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_ROT()};
    iParam0->_fU16 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_COORD()};
    iParam0->_fU28 = GET_GAMEPLAY_CAM_FOV();
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam1;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU96 = 0;
    sub_1193( iParam0 + 48, uParam1, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U703, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_1193(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_1403(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_871() )))
        {
            SET_PLAYER_CONTROL( sub_893(), 0, uParam2 );
            SET_PED_DUCKING( sub_871(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_871() );
            }
            SET_PED_INVINCIBLE( sub_871(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_1566(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_1621( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

void sub_1621(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

void sub_1827()
{
    SET_PAD_SHAKE( 0, 100, 250 );
    WAIT( 90 );
    SET_PED_HEALTH( sub_871(), 0, 0 );
    return;
}

void sub_1885(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_871() )))
    {
        SET_PLAYER_CONTROL( sub_893(), 1, 0 );
        SET_PED_INVINCIBLE( sub_871(), 0 );
        if (bParam0)
        {
            sub_1966();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_1966()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_871() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_871(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_871(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_871(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_871(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_2163()
{
    if (sub_2184( sub_871(), g_U3657 ))
    {
        sub_2244( sub_871() );
    }
    return;
}

int sub_2184(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_2244(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

int sub_2329()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_871() )))
        {
            SET_PED_FORCED_TO_WALK( sub_871(), 0 );
            SET_PLAYER_FORCED_AIM( sub_893(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_893(), 1 );
            if ((IS_PED_VISIBLE( sub_871() )) == 0)
            {
                SET_PED_VISIBLE( sub_871(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_2823()
{
    return g_U648;
}

void sub_2953(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

int sub_3018(int iParam0)
{
    iParam0 = 1;
    switch (l_U129)
    {
        case 0:
        if (NOT (sub_3079( ref l_U131 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_871() )))
            {
                l_U130 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_1193( ref l_U131, l_U130, 1, 1 );
            sub_1621( ref l_U131 );
        }
        if (sub_3207( ref l_U131 ))
        {
            sub_454( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_871() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_893() )))
            {
                SET_PLAYER_CONTROL( sub_893(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U129 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U129 = 2;
            }
            else
            {
                l_U129 = 3;
            }
        }
        break;
        case 2:
        sub_454( "NS", "Player will QUIT", 0 );
        sub_3694();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_454( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_3694();
        return 1;
        break;
    }
    return 0;
}

int sub_3079(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

int sub_3207(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_3694()
{
    sub_454( "NS", "P_PostFailRetryCleanup", 0 );
    sub_3744( ref l_U131 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_893() )))
    {
        SET_PLAYER_CONTROL( sub_893(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U128 = 0;
    l_U128 = l_U128;
    l_U129 = 0;
    return;
}

void sub_3744(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_4489(int iParam0)
{
    sub_454( "MF", "P_CLEANUP_HELIPAD", 0 );
    sub_4536( l_U370, 0 );
    sub_4699( ref l_U370 );
    sub_4536( g_U4236, 0 );
    sub_4699( ref g_U4236 );
    sub_4536( g_U4235, 0 );
    sub_4699( ref g_U4235 );
    sub_4922( l_U372 );
    sub_4922( l_U373 );
    if (iParam0 == 1)
    {
        sub_4988( ref g_U3375 );
        sub_4988( ref g_U3379 );
        sub_5129( g_U3382 );
        sub_5129( g_U4226 );
        sub_5129( g_U4225 );
        sub_5129( g_U4231 );
        sub_5129( g_U4230 );
        sub_5129( g_U3383 );
        sub_4922( g_U773._fU0 );
    }
    return;
}

void sub_4536(int iParam0, unknown uParam1)
{
    if (iParam0 != -1)
    {
        sub_454( "MF", "P_SAFE_STOP_SOUND: Stopping Sound...", 0 );
        STOP_SOUND( iParam0, uParam1 );
    }
    else
    {
        sub_454( "MF", "P_SAFE_STOP_SOUND: Not stopping sound (SoundID = -1)", 0 );
    }
    return;
}

void sub_4699(unknown uParam0)
{
    if ((uParam0^) != -1)
    {
        sub_454( "MF", "P_SAFE_RELEASE_SOUND_ID: Releasing Sound...", 0 );
        RELEASE_SOUND_ID( (uParam0^) );
        (uParam0^) = -1;
    }
    else
    {
        sub_454( "MF", "P_SAFE_RELEASE_SOUND_ID: Not RELEASING sound (SoundID != -1)", 0 );
    }
    return;
}

void sub_4922(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_4988(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_5022( (uParam0^)[I] );
    }
    return;
}

void sub_5022(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_5129(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_5363(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_454( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_5547( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_6624( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_6916( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_7276( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_6916( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_7276( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_6916( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_7276( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_7561( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_7276( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_7561( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_7276( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_8054( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_8215( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_871(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_454( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_5547(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_5579( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_5579(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_6624(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_6916(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_7232( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_7232(unknown uParam0)
{
    return;
}

void sub_7276(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_7561(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_7232( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_8054(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_8215(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_5579( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_8287( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_8287(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_9579()
{
    int iVar2;

    iVar2 = l_U190;
    sub_9596();
    sub_9831();
    sub_10357();
    if (l_U193)
    {
        if ((g_U835[6]._fU40 == 4) || (g_U835[6]._fU40 == 0))
        {
            sub_10734( ref g_U835[8] );
        }
    }
    switch (l_U190)
    {
        case 0:
        sub_454( "MF", "eCheckpointState = CP_IDLE", 0 );
        break;
        case 1:
        sub_454( "MF", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
        sub_10979();
        sub_11155();
        l_U190 = 2;
        sub_454( "MF", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_454( "MF", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        sub_12448();
        sub_17743();
        l_U190 = 3;
        sub_454( "MF", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if ((sub_18339( ref g_U3026 )) AND ((sub_18212( ref g_U1975 )) AND ((sub_18091( ref g_U1829 )) AND (sub_17971( ref g_U1588 )))))
        {
            if ((NOT l_U140._fU0) AND (g_U833 == 7))
            {
                l_U190 = 4;
                sub_454( "MF", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
            }
            else
            {
                l_U190 = 7;
                sub_454( "MF", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
            }
        }
        break;
        case 4:
        sub_454( "MF", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        FREEZE_PED_POSITION( sub_871(), 0 );
        g_U1230[7] = 1;
        if ((sub_18709( ref l_U140 )) == 0)
        {
            sub_7561( sub_871(), 1308526797, 200, 0, 0 );
            sub_6916( sub_871(), -1404433099, 1, 200, 0 );
            sub_6916( sub_871(), -612753081, 0, 200, 0 );
            l_U190 = 6;
            sub_454( "MF", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U190 = 7;
            sub_454( "MF", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 6:
        if (NOT (IS_PED_DEAD( sub_871() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_871(), 0 ) )) AND ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_871(), 1 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_871(), 0, 0 ) ))))
            {
                l_U190 = 7;
                sub_454( "MF", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
            }
        }
        break;
        case 7:
        if (g_U1230[7])
        {
            if (NOT l_U140._fU0)
            {
                g_U834 = 7;
                sub_19329( ref l_U140, 7, sub_871(), g_U980[7], g_U1086[7], g_U1158[7], g_U1122[7], 1 );
            }
            sub_22951( ref g_U3890[1], 1 );
            sub_23157( ref g_U3890[1], 1 );
            l_U190 = 5;
        }
        break;
        case 5:
        if (NOT (DOES_OBJECT_EXIST( g_U3382 )))
        {
            sub_23315( 1 );
            sub_24638( 0, 1 );
        }
        if (NOT AUDIO_IS_SCRIPTED_MUSIC_PLAYING())
        {
            sub_454( "CR", "MUSIC: Playing PANAMA_FINAL Mood: PANAMA_FINAL_3_6", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_3_6", "PANAMA_FINAL_3_6", 0, -1, -1, -1082130432, 0 );
        }
        sub_25536();
        sub_27000();
        SET_PLAYER_CONTROL( sub_893(), 1, 0 );
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U190 = 8;
        break;
        case 8:
        if (l_U191 == 1)
        {
            DO_SCREEN_FADE_IN( 100 );
        }
        if (sub_27261())
        {
            if (NOT (sub_3079( ref g_U4240 )))
            {
                sub_454( "MF", "Starting... tmrGBL_HelipadInitialOpenDelay", 0 );
                sub_1621( ref g_U4240 );
            }
        }
        if (sub_3079( ref g_U4240 ))
        {
            if (NOT sub_27261())
            {
                sub_454( "MF", "Stopping... tmrGBL_HelipadInitialOpenDelay", 0 );
                sub_27520( ref g_U4240 );
            }
        }
        if ((g_U4240._fU16) || (sub_3207( ref g_U4240 )))
        {
            if (sub_27261())
            {
                sub_24638( 1, 0 );
                sub_27590( 0 );
                l_U190 = 9;
            }
        }
        break;
        case 9:
        if (l_U191)
        {
            sub_28107();
        }
        sub_28243();
        sub_29640();
        sub_29984();
        if (sub_30075( ref g_U3379, ref l_U331, -1, 1, 1, 0, 1 ))
        {
            sub_31520();
        }
        if ((sub_30075( ref g_U3375, ref l_U215, -1, 1, 1, 0, 1 )) == 1)
        {
            sub_32251();
        }
        if (sub_33408( ref l_U261, 0 ))
        {
            sub_1621( ref l_U361 );
            sub_33518();
            sub_27590( 0 );
        }
        if (sub_3207( ref l_U361 ))
        {
            sub_33701();
            l_U371 = 1;
            sub_34042();
            l_U190 = 10;
        }
        break;
        case 10:
        if (l_U191)
        {
            sub_28107();
        }
        sub_28243();
        sub_29640();
        sub_29984();
        if ((DOES_OBJECT_EXIST( g_U3383 )) AND (l_U371))
        {
            if (NOT (IS_OBJECT_PLAYING_ANIM( g_U3383, "P_BRDGDRSANIM_H", "pa_doors" )))
            {
                STOP_SOUND( l_U370, 0 );
                l_U371 = 0;
            }
        }
        if ((sub_9846( ref g_U3379, 0 )) AND ((sub_9846( ref g_U3375, 0 )) AND (NOT l_U193)))
        {
            if (sub_2184( sub_871(), l_U194 ))
            {
                sub_454( "CCB", "Pre-loading the Building checkpoint...", 0 );
                l_U193 = 1;
            }
        }
        if (sub_9846( ref g_U3375, 0 ))
        {
            if (sub_2184( sub_871(), l_U194 ))
            {
                if (IS_BULLET_CAMERA_RUNNING( 0 ))
                {
                    if (IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED())
                    {
                        sub_454( "CCB", "Disabling ALLOW_BULLET_CAMERA_TO_GAMEPLAY...", 0 );
                        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
                        BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
                    }
                }
            }
            sub_454( "CCB", "eHP_CurrState - eHP_BRIDGE_TRANSITION", 0 );
            l_U190 = 11;
        }
        break;
        case 11:
        sub_29640();
        sub_29984();
        if (NOT l_U374)
        {
            if (sub_2184( sub_871(), l_U385 ))
            {
                l_U374 = 1;
                g_U1244 = 1;
                sub_35104();
                sub_454( "CCB", "Pre-loading the Building checkpoint...", 0 );
                l_U193 = 1;
            }
        }
        if (NOT (sub_2184( sub_871(), l_U194 )))
        {
            if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
            {
                if (NOT IS_LAST_MAN_STANDING_ACTIVE())
                {
                    if (NOT IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED())
                    {
                        sub_454( "CCB", "Enabling bullet camera to gameplay...", 0 );
                        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
                    }
                }
                else
                {
                    sub_454( "CCB", "Waiting for last man standing to finish...", 0 );
                }
            }
            else
            {
                sub_454( "CCB", "Waiting for bulletcam to finish...", 0 );
            }
        }
        if (NOT (sub_3079( ref l_U457 )))
        {
            if (NOT IS_BULLET_CAMERA_ACTIVE())
            {
                sub_1621( ref l_U457 );
            }
        }
        if (NOT (sub_2184( sub_871(), l_U436 )))
        {
            if (sub_3207( ref l_U457 ))
            {
                sub_28518( "SPAN_MSTCBR", ref g_U1246 );
            }
        }
        if (((NOT IS_BULLET_CAMERA_ACTIVE()) AND (sub_27277( l_U194 ))) || (sub_35755( ref l_U375, l_U194, "11_02_PANAMA_concat", ref l_U376, 0, 1500 )))
        {
            sub_36788();
            sub_35104();
            g_U1245 = 1;
            g_U1244 = 1;
            g_U1230[8] = 1;
            if (sub_37942( g_U1246 ))
            {
                sub_454( "CCB", "Killing speech...", 0 );
                sub_38140( ref g_U1246, 0 );
            }
            sub_454( "CCB", "eHP_CurrState - eHP_OUT", 0 );
            l_U190 = 12;
        }
        break;
        case 12:
        sub_454( "MF", "eCheckpointState = CP_FINISHED", 0 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U190 = 0;
        sub_454( "MF", "eCheckpointState = CP_IDLE", 0 );
        break;
    }
    if (l_U190 != iVar2)
    {
        l_U191 = 1;
    }
    else
    {
        l_U191 = 0;
    }
    return;
}

void sub_9596()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;

    if (NOT l_U475)
    {
        if (DOES_OBJECT_EXIST( l_U467 ))
        {
            if ((GET_OBJECT_HEALTH( l_U467 )) < (l_U474 + 100))
            {
                FREEZE_OBJECT_POSITION( l_U467, 0 );
            }
            uVar2 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( l_U467 )};
            if (uVar2._fU8 < (l_U471._fU8 - 0.50000000))
            {
                sub_454( "CR", "P_HANDLE_SAFE CRACKED", 0 );
                if ((DOES_OBJECT_EXIST( l_U466 )) == 1)
                {
                    SET_OBJECT_ANIM_SPEED( l_U466, "P_PA_SafmainNEW_Aa_H", "pa_anim", 1.00000000 );
                }
                l_U475 = 1;
            }
        }
    }
    return;
}

void sub_9831()
{
    if (sub_9846( ref g_U3375, 0 ))
    {
        sub_10197( ref g_U3379 );
    }
    if (sub_9846( ref g_U3379, 0 ))
    {
        sub_10197( ref g_U3375 );
    }
    return;
}

int sub_9846(unknown uParam0, boolean bParam1)
{
    if ((sub_9859( uParam0, 0 )) == 1)
    {
        if (NOT bParam1)
        {
            if ((sub_9968( uParam0 )) == 0)
            {
                return 1;
            }
        }
        if (bParam1)
        {
            if ((sub_10068( uParam0 )) == (uParam0^))
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_9859(unknown uParam0, boolean bParam1)
{
    int I;
    int Result;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((DOES_PED_EXIST( (uParam0^)[I] )) == 1)
        {
            Result = 1;
            if (NOT bParam1)
            {
                return 1;
            }
        }
        else
        {
            Result = 0;
        }
    }
    return Result;
}

void sub_9968(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_10068(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

void sub_10197(unknown uParam0)
{
    int I;

    if ((sub_9968( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_10357()
{
    if (g_U4235 != -1)
    {
        if (NOT (sub_10413( g_U3382, "pa_anim", "P_PA_HelDor_Aa_H" )))
        {
            sub_454( "GA", "Stopping the Heli Door Opening Sound.", 0 );
            sub_4536( g_U4235, 0 );
            sub_4699( ref g_U4235 );
        }
    }
    if (g_U4236 != -1)
    {
        if (NOT (sub_10413( g_U3382, "pa_anim", "P_PA_HelDor_Aa_H" )))
        {
            sub_454( "GA", "Stopping the Heli Door Closing Sound.", 0 );
            sub_4536( g_U4236, 0 );
            sub_4699( ref g_U4236 );
        }
    }
    return;
}

int sub_10413(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if ((DOES_OBJECT_EXIST( uParam0 )) == 1)
    {
        if (IS_OBJECT_PLAYING_ANIM( uParam0, uParam2, uParam1 ))
        {
            return 1;
        }
    }
    return 0;
}

void sub_10734(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

void sub_10979()
{
    sub_454( "MF", "P_INITIALIZE_SCRIPT_DATA", 0 );
    l_U191 = 1;
    l_U193 = 0;
    l_U374 = 0;
    l_U370 = GET_SOUND_ID();
    sub_1193( ref l_U361, 500, 1, 0 );
    l_U371 = 0;
    sub_1193( ref l_U313, 100, 1, 0 );
    sub_1193( ref l_U322, 500, 1, 0 );
    sub_1193( ref l_U406, 10500, 1, 0 );
    sub_1193( ref l_U457, 1500, 1, 0 );
    sub_1193( ref l_U282, 6000, 1, 0 );
    return;
}

void sub_11155()
{
    sub_454( "MF", "P_SET_STATIC_DATA", 0 );
    sub_11235( ref l_U331[0], -3.77000000, 3.39000000, 8.19000000, -90.00000000, 48565103, 7, 3, 2, 0, 0 );
    sub_11235( ref l_U331[1], -1.64000000, 7.02000000, 8.19000000, -120.00000000, -115052442, 7, 3, 2, 0, 0 );
    sub_11235( ref l_U215[0], -12.77000000, 6.40000000, 9.07000000, 104.25000000, -1015903641, 7, 3, 2, 0, 0 );
    sub_11235( ref l_U215[1], -13.10000000, 1.59000000, 9.07000000, 63.86000000, 1636235874, 7, 3, 2, 0, 0 );
    sub_11235( ref l_U215[2], -14.77000000, 3.93000000, 9.07000000, 0.86000000, 1498683894, 7, 3, 2, 0, 0 );
    sub_11515();
    sub_11600( ref l_U385, "TRIGGER_BUILDING_PRELOAD", -13.12000000, 3.85000000, 8.13000000, 16.01000000, 9.61000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11600( ref l_U292, "Trigger_Helipad_Door_Sensor", 5.80000000, 3.87000000, 8.07000000, 9.52000000, 4.43000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11600( ref l_U261, "tbHP_OpenBridgeDoor", 3.01000000, 3.87000000, 8.07000000, 3.00000000, 10.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11600( ref l_U194, "TRIGGER_MID03_FORCEWALK", -17.70000000, 3.85000000, 9.00000000, 11.73000000, 9.61000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11600( ref l_U436, "TRIGGER_HP_BRIDGE_HINT", -16.20000000, 3.85000000, 9.00000000, 10.28000000, 10.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11600( ref l_U415, "Trigger_HPDeck_EngineMonologue", -5.89000000, 3.79000000, 8.51000000, 5.73000000, 4.95000000, 2.42000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12259( ref l_U291, "BRIDGE_REBEL_TETHER", -6.40000000, 3.93000000, 7.97000000, 20.86000000, 6.85000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    return;
}

void sub_11235(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_11515()
{
    sub_11600( ref g_U3657, "TRIGGER_MAIN_DECK_KILL", 37.94000000, 3.91000000, 1.60000000, 19.26000000, 15.05000000, 2.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    return;
}

void sub_11600(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_12259(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_12448()
{
    sub_454( "MF", "P_REQUEST_HELIPAD_PERSISTENT_ASSETS start", 0 );
    sub_12513();
    sub_14476( ref l_U176, ref g_U1588 );
    sub_15618( ref l_U187, ref g_U1829 );
    sub_16656( "SCRIPT_MISSION\S_PANA_YACHT_BRIDGE_DOOR", ref g_U3026 );
    sub_12591( "DAM_DEAD", ref g_U1975 );
    sub_12591( "pa_anim", ref g_U1975 );
    sub_454( "MF", "P_REQUEST_HELIPAD_PERSISTENT_ASSETS end", 0 );
    return;
}

void sub_12513()
{
    sub_454( "CR", "P_GLOBAL_LOAD_RIFLE_ANIMS - Start", 0 );
    sub_12591( "NPC_RIFLE_CORE", ref g_U1975 );
    sub_12591( "NPC_RIFLE_COVER", ref g_U1975 );
    sub_12591( "NPC_RIFLE_COVER_ENTER", ref g_U1975 );
    sub_12591( "NPC_RIFLE_COVER_RELOAD", ref g_U1975 );
    sub_12591( "NPC_RIFLE_DODGE", ref g_U1975 );
    sub_12591( "NPC_RIFLE_FLAVOR", ref g_U1975 );
    sub_12591( "NPC_RIFLE_FULLBODY", ref g_U1975 );
    sub_12591( "NPC_RIFLE_RELOAD", ref g_U1975 );
    sub_12591( "NPC_RIFLE_SEARCH", ref g_U1975 );
    sub_12591( "NPC_RIFLE_STAIRS", ref g_U1975 );
    sub_12591( "NPC_RIFLE_REACT", ref g_U1975 );
    sub_12591( "AMED_RIFL_PRONE", ref g_U1975 );
    sub_12591( "PLGE_RIFLE_CROUCH", ref g_U1975 );
    sub_12591( "PLGE_RIFLE_CORE", ref g_U1975 );
    sub_12591( "PLGE_RIFLE_CORE_RELOAD", ref g_U1975 );
    sub_12591( "PLGE_RIFLE_HANDSIG", ref g_U1975 );
    sub_12591( "PLGE_RIFLE_ACTIONS", ref g_U1975 );
    sub_12591( "PLGE_RIFLE_KNEE", ref g_U1975 );
    sub_12591( "PLGE_RIFLE_COVER", ref g_U1975 );
    sub_12591( "PLGE_RIFLE_REACT", ref g_U1975 );
    sub_12591( "PLGE_RIFLE_COVER_EXIT", ref g_U1975 );
    sub_454( "CR", "P_GLOBAL_LOAD_RIFLE_ANIMS - End", 0 );
    return;
}

void sub_12591(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_12612( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_12749( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_12612(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_12749( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_12749( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_12749( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_13420( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_12749( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_12749( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_12749(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_12771( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_12771(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_13420(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_14476(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_14511( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_14511(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_14546( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_14677( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_14546(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_14677( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_14677( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_14677( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_13420( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_14677( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_14677( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_14677(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_12771( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_15618(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_15653( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_15653(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_15674( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_15806( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_15674(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_15806( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_15806( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_15806( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_13420( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_15806( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_15806( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_15806(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_12771( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_16656(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_16677( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
        sub_16815( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_16677(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                sub_16815( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                sub_16815( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    sub_16815( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                    sub_13420( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                sub_16815( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
            sub_16815( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_16815(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_12771( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_17743()
{
    sub_454( "MF", "P_REQUEST_HELIPAD_NONPERSISTENT_ASSETS start", 0 );
    AUDIO_MUSIC_REQUEST_ONESHOT( "PANAMA_OS_4", 0 );
    sub_454( "MF", "P_REQUEST_HELIPAD_NONPERSISTENT_ASSETS end", 0 );
    return;
}

int sub_17971(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_18091(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_18212(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_18339(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_18709(unknown uParam0)
{
    sub_454( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_5363( uParam0, sub_871() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_19329(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_454( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_454( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_8215( iParam1 );
        sub_19588( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_20039( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_20039( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_20271( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_20039( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_20271( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_20271( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_20039( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_20271( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_20271( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_20271( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_20039( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_20271( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_20271( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_20271( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_20271( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_21829( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_454( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_19588(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_5579( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_454( "TEH", "Ending context", 0 );
        sub_454( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_20039(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_20271(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_21829(int iParam0)
{
    sub_7232( "CHECKPOINT DATA" );
    sub_21868( iParam0->_fU4 );
    sub_21891( iParam0->_fU16 );
    sub_21891( iParam0->_fU20 );
    sub_21891( iParam0->_fU24 );
    sub_21934( iParam0->_fU28 );
    sub_21934( iParam0->_fU56 );
    sub_21934( iParam0->_fU60 );
    sub_21934( iParam0->_fU64 );
    sub_21934( iParam0->_fU68 );
    sub_21934( iParam0->_fU72 );
    sub_21934( iParam0->_fU76 );
    sub_21934( iParam0->_fU80 );
    sub_21934( iParam0->_fU84 );
    sub_21934( iParam0->_fU88 );
    sub_21934( iParam0->_fU92 );
    sub_21891( iParam0->_fU32 );
    sub_21934( iParam0->_fU36 );
    sub_21934( iParam0->_fU40 );
    sub_21934( iParam0->_fU44 );
    sub_21891( iParam0->_fU136 );
    sub_22139( iParam0->_fU140 );
    sub_21934( iParam0->_fU52 );
    sub_7232( "---nRightHolsterAttachmentEnabled: " );
    sub_21934( iParam0->_fU96 );
    sub_7232( "---nRightHolsterAttachmentToggled: " );
    sub_21934( iParam0->_fU100 );
    sub_7232( "---nLeftHolsterAttachmentEnabled: " );
    sub_21934( iParam0->_fU104 );
    sub_7232( "---nLeftHolsterAttachmentToggled: " );
    sub_21934( iParam0->_fU108 );
    sub_7232( "---nRifleHolsterAttachmentEnabled: " );
    sub_21934( iParam0->_fU112 );
    sub_7232( "---nRifleHolsterAttachmentToggled: " );
    sub_21934( iParam0->_fU116 );
    sub_7232( "---nRightHandAttachmentEnabled: " );
    sub_21934( iParam0->_fU120 );
    sub_7232( "---nRightHandAttachmentToggled: " );
    sub_21934( iParam0->_fU124 );
    sub_7232( "---nLeftHandAttachmentEnabled: " );
    sub_21934( iParam0->_fU128 );
    sub_7232( "---nLeftHandAttachmentToggled: " );
    sub_21934( iParam0->_fU132 );
    sub_21934( l_U1 );
    sub_21934( 144 );
    return;
}

void sub_21868(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_21891(unknown uParam0)
{
    return;
}

void sub_21934(unknown uParam0)
{
    return;
}

void sub_22139(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_22951(int iParam0, int iParam1)
{
    if ((sub_22963( iParam0 )) == 0)
    {
        sub_23029( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

int sub_22963(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_23029(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_23157(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_22963( iParam0 )) == 0)
    {
        sub_23029( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

void sub_23315(boolean bParam0)
{
    sub_454( "MF", "P_GBL_CREATE_HELIPAD_DOOR_PROPS - START", 0 );
    g_U3382 = sub_23407( g_U1572, g_U4200, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U3382 ))
    {
        FREEZE_OBJECT_POSITION( g_U3382, 1 );
        PLAY_OBJECT_ANIM( g_U3382, "P_PA_HelDor_Aa_H", "pa_anim", 0.00000000, 0, 1 );
    }
    g_U4226 = sub_23897( 1454823397, g_U4227, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U4226 ))
    {
        FREEZE_OBJECT_POSITION( g_U4226, 1 );
        SET_OBJECT_VISIBLE( g_U4226, 0 );
    }
    g_U4225 = sub_23897( 1422154951, g_U4227, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U4225 ))
    {
        FREEZE_OBJECT_POSITION( g_U4225, 1 );
    }
    g_U4231 = sub_23897( 1454823397, g_U4232, 0.00000000, 0.00000000, 180.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U4231 ))
    {
        FREEZE_OBJECT_POSITION( g_U4231, 1 );
        SET_OBJECT_VISIBLE( g_U4231, 0 );
    }
    g_U4230 = sub_23897( 1422154951, g_U4232, 0.00000000, 0.00000000, 180.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U4230 ))
    {
        FREEZE_OBJECT_POSITION( g_U4230, 1 );
    }
    if (bParam0)
    {
        SET_OBJECT_ANIM_CURRENT_TIME( g_U3382, "P_PA_HelDor_Aa_H", "pa_anim", 0.00000000 );
    }
    else
    {
        SET_OBJECT_ANIM_CURRENT_TIME( g_U3382, "P_PA_HelDor_Aa_H", "pa_anim", 1.00000000 );
    }
    sub_11600( ref g_U4203, "TRIGGER_HELI_PAD_DOOR_SIGHT_CHECK", 16.30000000, 3.79000000, 8.16000000, 20.75000000, 15.60000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_454( "MF", "P_GBL_CREATE_HELIPAD_DOOR_PROPS - END", 0 );
    return;
}

void sub_23407(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_23517( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_23517(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_7232( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_23897(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_23517( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_24638(int iParam0, int iParam1)
{
    sub_454( "MF", "P_GBL_HELIPAD_DOOR_ANIMATE - START", 0 );
    if ((DOES_OBJECT_EXIST( g_U3382 )) == 1)
    {
        sub_4536( g_U4235, 0 );
        sub_4699( ref g_U4235 );
        sub_4536( g_U4236, 0 );
        sub_4699( ref g_U4236 );
        if (iParam0 == 1)
        {
            sub_7232( "OPENING DOOR..." );
            PLAY_OBJECT_ANIM( g_U3382, "P_PA_HelDor_Aa_H", "pa_anim", 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_SPEED( g_U3382, "P_PA_HelDor_Aa_H", "pa_anim", 0.65000000 );
            if (iParam1 == 1)
            {
                SET_OBJECT_ANIM_CURRENT_TIME( g_U3382, "P_PA_HelDor_Aa_H", "pa_anim", 1.00000000 );
            }
            else
            {
                SET_OBJECT_ANIM_CURRENT_TIME( g_U3382, "P_PA_HelDor_Aa_H", "pa_anim", 0.00000000 );
                g_U4235 = GET_SOUND_ID();
                PLAY_SOUND_FROM_OBJECT( g_U4235, "S_PANA_HELICOPTER_DOOR_OPEN", g_U3382 );
            }
        }
        else
        {
            sub_7232( "CLOSING DOOR..." );
            PLAY_OBJECT_ANIM( g_U3382, "P_PA_HelDor_Aa_H", "pa_anim", 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_SPEED( g_U3382, "P_PA_HelDor_Aa_H", "pa_anim", -0.65000000 );
            if (iParam1 == 1)
            {
                SET_OBJECT_ANIM_CURRENT_TIME( g_U3382, "P_PA_HelDor_Aa_H", "pa_anim", 0.00000000 );
            }
            else
            {
                SET_OBJECT_ANIM_CURRENT_TIME( g_U3382, "P_PA_HelDor_Aa_H", "pa_anim", 1.00000000 );
                g_U4235 = GET_SOUND_ID();
                PLAY_SOUND_FROM_OBJECT( g_U4235, "S_PANA_HELICOPTER_DOOR_OPEN", g_U3382 );
            }
        }
    }
    sub_454( "MF", "P_GBL_HELIPAD_DOOR_ANIMATE - END", 0 );
    return;
}

void sub_25536()
{
    sub_454( "CR", "P_CREATE_PLACEMENTS start", 0 );
    l_U372 = sub_25629( -4072149, -5.62500000, 8.35000000, 9.12000000, 0.00000000, 0.00000000, 34.00000000, 0, 0, 1, 100.00000000 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U372, ref g_U3311 );
    l_U373 = sub_25629( -4072149, -5.57500000, 8.25000000, 9.12000000, 0.00000000, 0.00000000, 34.00000000, 0, 0, 1, 100.00000000 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U373, ref g_U3311 );
    sub_25808();
    sub_26512();
    sub_454( "CR", "P_CREATE_PLACEMENTS end", 0 );
    return;
}

void sub_25629(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_25808()
{
    sub_454( "CO", "P_CREATE_S_PAN_GG_AK_01", 0 );
    sub_25918( ref g_U773, g_U830, -1858240064, 374013514, -9.15000000, 1.03000000, 9.42000000, 1.50000000, 0.00000000, 1.50000000, "Deck4_Room" );
    sub_26047( ref g_U773 );
    return;
}

void sub_25918(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_454( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_26047(int iParam0)
{
    sub_454( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_26108( iParam0->_fU12 )) == 1)
        {
            sub_454( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_454( "CO", "has never been collected.", 0 );
        }
        if ((sub_26108( iParam0->_fU12 )) == 0)
        {
            sub_4922( iParam0->_fU0 );
            iParam0->_fU0 = sub_25629( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_454( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_454( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_26108(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_26512()
{
    sub_454( "CO", "P_SETUP_SAFE start", 0 );
    sub_5129( l_U466 );
    sub_5129( l_U467 );
    l_U466 = CREATE_OBJECT_NO_OFFSET( -1321101597, l_U468, 0, 0 );
    l_U467 = CREATE_OBJECT_NO_OFFSET( -1246378211, l_U471, 0, 0 );
    l_U475 = 0;
    if ((DOES_OBJECT_EXIST( l_U466 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U466, ref g_U3311 );
        PLAY_OBJECT_ANIM( l_U466, "P_PA_SafmainNEW_Aa_H", "pa_anim", 0.10000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( l_U466, "P_PA_SafmainNEW_Aa_H", "pa_anim", 0.00100000 );
        SET_OBJECT_ANIM_SPEED( l_U466, "P_PA_SafmainNEW_Aa_H", "pa_anim", 0.00000000 );
        SET_OBJECT_PROOFS( l_U466, 1, 1, 1, 1, 1 );
        FREEZE_OBJECT_POSITION( l_U466, 1 );
    }
    if ((DOES_OBJECT_EXIST( l_U467 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U467, ref g_U3311 );
        SET_OBJECT_HEADING( l_U467, 90.00000000 );
        FREEZE_OBJECT_POSITION( l_U467, 1 );
        SET_OBJECT_PROOFS( l_U467, 0, 1, 1, 1, 1 );
        l_U474 = GET_OBJECT_HEALTH( l_U467 );
    }
    return;
}

void sub_27000()
{
    sub_454( "MF", "P_HP_PROPS_CREATE_BRIDGE_DOORS: START", 0 );
    g_U3383 = sub_23897( g_U1573, l_U358, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( g_U3383 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U3383, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U3383, ref g_U3311 );
    }
    sub_454( "MF", "P_HP_PROPS_CREATE_BRIDGE_DOORS: END", 0 );
    return;
}

int sub_27261()
{
    if (sub_27277( g_U4203 ))
    {
        if (IS_SPHERE_VISIBLE( g_U4237, 0.20000000, 0 ))
        {
            return 1;
        }
    }
    return 0;
}

void sub_27277(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_2184( sub_871(), uParam0 );
}

void sub_27520(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

void sub_27590(unknown uParam0)
{
    sub_454( "MF", "P_GBL_HELIPAD_DOOR_SET_LOCKED - START", 0 );
    g_U4224 = uParam0;
    sub_27663( g_U4224 );
    sub_454( "MF", "P_GBL_HELIPAD_DOOR_SET_LOCKED - END", 0 );
    return;
}

void sub_27663(boolean bParam0)
{
    sub_454( "GA", "P_GBL_HELIPAD_DOOR_SET_ACTIVE start", 0 );
    if (bParam0)
    {
        if (DOES_OBJECT_EXIST( g_U4226 ))
        {
            SET_OBJECT_VISIBLE( g_U4226, 0 );
        }
        if (DOES_OBJECT_EXIST( g_U4225 ))
        {
            SET_OBJECT_VISIBLE( g_U4225, 1 );
        }
        if (DOES_OBJECT_EXIST( g_U4231 ))
        {
            SET_OBJECT_VISIBLE( g_U4231, 0 );
        }
        if (DOES_OBJECT_EXIST( g_U4230 ))
        {
            SET_OBJECT_VISIBLE( g_U4230, 1 );
        }
    }
    else if (DOES_OBJECT_EXIST( g_U4226 ))
    {
        SET_OBJECT_VISIBLE( g_U4226, 1 );
    }
    if (DOES_OBJECT_EXIST( g_U4225 ))
    {
        SET_OBJECT_VISIBLE( g_U4225, 0 );
    }
    if (DOES_OBJECT_EXIST( g_U4231 ))
    {
        SET_OBJECT_VISIBLE( g_U4231, 1 );
    }
    if (DOES_OBJECT_EXIST( g_U4230 ))
    {
        SET_OBJECT_VISIBLE( g_U4230, 0 );
    }
    sub_454( "GA", "P_GBL_HELIPAD_DOOR_SET_ACTIVE end", 0 );
    return;
}

void sub_28107()
{
    sub_454( "CR", "P_GBL_REFRESH_PAYNE_KILLER_COUNT - START", 0 );
    g_U4062 = GET_PAYNEKILLER_AMT();
    sub_454( "CR", "P_GBL_REFRESH_PAYNE_KILLER_COUNT - END", 0 );
    return;
}

void sub_28243()
{
    if (NOT (sub_3079( ref g_U4052 )))
    {
        sub_28277( ref g_U4052, g_U4061 );
    }
    if (((g_U4052._fU16) || (sub_3207( ref g_U4052 ))) AND (sub_28313()))
    {
        sub_454( "MF", "Playing Speech: SPAN_MXFNDS1", 0 );
        sub_28518( ref g_U4063, ref g_U1246 );
        sub_3744( ref g_U4052 );
    }
    return;
}

void sub_28277(unknown uParam0, unknown uParam1)
{
    sub_1193( uParam0, uParam1, 1, 0 );
    sub_1621( uParam0 );
    return;
}

int sub_28313()
{
    if (GET_PAYNEKILLER_AMT() > g_U4062)
    {
        sub_454( "CR", "Player picked up Payne Killers!", 0 );
        sub_21934( g_U4062 );
        sub_21934( GET_PAYNEKILLER_AMT() );
        g_U4062 = GET_PAYNEKILLER_AMT();
        return 1;
    }
    g_U4062 = GET_PAYNEKILLER_AMT();
    return 0;
}

void sub_28518(unknown uParam0, unknown uParam1)
{
    sub_28530( uParam1 );
    sub_28610( 0, sub_871(), "MAX", uParam1, 2, 0 );
    sub_28610( 1, sub_871(), "MAX", uParam1, 2, 0 );
    sub_28835( uParam0, uParam1, 8, 1 );
    return;
}

void sub_28530(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_28610(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_28835(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_28859( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_28859(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_28914( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_28914(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_28949( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_29443( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_28949(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_29443(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_29640()
{
    if ((sub_2184( g_U3375[1], l_U292 )) || ((sub_2184( g_U3375[0], l_U292 )) || ((sub_2184( g_U3379[1], l_U292 )) || ((sub_2184( g_U3379[0], l_U292 )) || (sub_27277( l_U292 ))))))
    {
        if (sub_29746())
        {
            if (NOT (sub_3079( ref l_U313 )))
            {
                sub_1621( ref l_U313 );
            }
        }
    }
    else if (sub_29855())
    {
        if (NOT (sub_3079( ref l_U322 )))
        {
            sub_1621( ref l_U322 );
        }
    }
    return;
}

int sub_29746()
{
    if ((GET_OBJECT_ANIM_CURRENT_TIME( g_U3382, "P_PA_HelDor_Aa_H", "pa_anim" )) == 0.00000000)
    {
        return 1;
    }
    return 0;
}

int sub_29855()
{
    if (DOES_OBJECT_EXIST( g_U3382 ))
    {
        if ((GET_OBJECT_ANIM_CURRENT_TIME( g_U3382, "P_PA_HelDor_Aa_H", "pa_anim" )) == 1.00000000)
        {
            return 1;
        }
    }
    return 0;
}

void sub_29984()
{
    if (sub_3207( ref l_U313 ))
    {
        sub_24638( 1, 0 );
        sub_3744( ref l_U313 );
    }
    if (sub_3207( ref l_U322 ))
    {
        sub_24638( 0, 0 );
        sub_3744( ref l_U322 );
    }
    return;
}

int sub_30075(unknown uParam0, unknown uParam1, int iParam2, boolean bParam3, boolean bParam4, int iParam5, unknown uParam6)
{
    int iVar9;
    int iVar10;
    int Result;

    iVar9 = sub_30089( uParam0, uParam1 );
    if (iParam2 == -1)
    {
        iVar10 = (uParam0^);
    }
    else
    {
        iVar10 = iParam2;
    }
    if (iVar9 < iVar10)
    {
        if ((uParam1^)[iVar9]._fU16 == 0)
        {
            SCRIPT_ASSERT( "Invalid Ped Struct!  No Model Defined! Aborting Ped Spawn", 0 );
            sub_454( "MF", "Invalid Ped Struct!  No Model Defined! Aborting Ped Spawn", 0 );
            sub_21934( iVar9 );
            return 0;
        }
        if (NOT (DOES_PED_EXIST( (uParam0^)[iVar9] )))
        {
            sub_23517( (uParam1^)[iVar9]._fU16, uParam6 );
            (uParam0^)[iVar9] = sub_30442( ref (uParam1^)[iVar9] );
            if (NOT bParam4)
            {
                SET_PED_VISIBLE( (uParam0^)[iVar9], bParam4 );
                sub_7232( "SPAWNING INVISIBLE PED!!!" );
            }
            if (iParam5 == 1)
            {
                sub_31176( (uParam0^)[iVar9] );
                sub_7232( "Deactivating Ped..." );
            }
        }
    }
    if (bParam3)
    {
        if (iVar9 == (iVar10 - 1))
        {
            sub_454( "MF", "F_HANDLE_PED_ARRAY_SPAWN: Returning true Once.  If you see this looping, you likely have unitialized ped model data in your pedstruct array.", 0 );
            Result = 1;
        }
        return Result;
    }
    else if (iVar9 >= iVar10)
    {
        return 1;
    }
    return 0;
}

void sub_30089(unknown uParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = (uParam1^);
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (DOES_PED_EXIST( (uParam0^)[I] )))
        {
            if ((uParam1^)[I]._fU16 != 0)
            {
                if (I < Result)
                {
                    Result = I;
                }
            }
        }
    }
    return Result;
}

void sub_30442(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_23517( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_30921( iParam0->_fU40 );
    sub_31001( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_30921(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_31001(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_31176(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_31520()
{
    unknown uVar2;

    sub_454( "MF", "P_HP_HELIPAD_REBEL_ATTACK_PLAYER - START", 0 );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, 2.88000000, 3.59000000, 9.20000000, sub_871(), 0, 10.00000000, 20.00000000, -1082130432, 3 );
    TASK_COMBAT_PED( 0, sub_871() );
    CLOSE_SEQUENCE_TASK( uVar2 );
    if (sub_31668( g_U3379[0], 0 ))
    {
        sub_7561( g_U3379[0], 1308526797, 25000, 0, 0 );
        TASK_PERFORM_SEQUENCE( g_U3379[0], uVar2 );
        sub_31829( ref g_U3379[0], sub_871() );
        sub_31921( ref l_U291, g_U3379[0], 1 );
        SET_PED_AI_TEMPLATE( g_U3379[0], ref g_U1472 );
        SET_PED_ALERTNESS( g_U3379[0], 3 );
    }
    if (sub_31668( g_U3379[1], 0 ))
    {
        sub_7561( g_U3379[1], -184942895, 25000, 0, 0 );
        TASK_PERFORM_SEQUENCE( g_U3379[1], uVar2 );
        sub_31829( ref g_U3379[1], sub_871() );
        sub_31921( ref l_U291, g_U3379[1], 1 );
        SET_PED_AI_TEMPLATE( g_U3379[1], ref g_U1472 );
        SET_PED_ALERTNESS( g_U3379[1], 3 );
    }
    CLEAR_SEQUENCE_TASK( uVar2 );
    sub_454( "MF", "P_HP_HELIPAD_REBEL_ATTACK_PLAYER - END", 0 );
    return;
}

void sub_31668(unknown uParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((DOES_PED_EXIST( uParam0 )) == 1)
    {
        Result = 1;
    }
    else
    {
        Result = 0;
    }
    if (Result == 1)
    {
        if ((IS_PED_DEAD( uParam0 )) == 1)
        {
            if (iParam1 == 1)
            {
                Result = 1;
            }
            else
            {
                Result = 0;
            }
        }
        else
        {
            Result = 1;
        }
    }
    return Result;
}

void sub_31829(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( (uParam0^) ))) AND (NOT (IS_PED_DEAD( uParam1 ))))
    {
        CLEAR_LOCKED_TARGET( (uParam0^) );
        REGISTER_TARGET( (uParam0^), uParam1 );
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_31921(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_32251()
{
    int I;

    sub_454( "MF", "P_HP_BRIDGE_REBELS_SETUP: START", 0 );
    sub_32316( ref l_U255, 1.00000000, 0 );
    for ( I = 0; I < 3; I++ )
    {
        if (NOT (IS_PED_DEAD( g_U3375[I] )))
        {
            sub_32535( g_U3375[I], ref l_U255 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U3375[I], 1 );
            SET_ROOM_FOR_PED_BY_NAME( g_U3375[I], ref g_U3311 );
            SET_PED_ALERTNESS( g_U3375[I], 3 );
            sub_31921( ref l_U291, g_U3375[I], 1 );
            sub_31829( ref g_U3375[I], sub_871() );
        }
    }
    if (sub_31668( g_U3375[0], 0 ))
    {
        SET_PED_AI_TEMPLATE( g_U3375[0], ref g_U1480 );
        SET_PED_COMBAT_RANGE_MIN( g_U3375[0], 3 );
        SET_PED_COMBAT_RANGE_MAX( g_U3375[0], 15 );
        SET_PED_COMBAT_MOVEMENT( g_U3375[0], 2 );
        SET_PED_FIELD_OF_VIEW( g_U3375[0], 60.00000000, -1030356992, 1114636288 );
        sub_7561( g_U3375[0], -184942895, 25000, 0, 0 );
    }
    if (sub_31668( g_U3375[1], 0 ))
    {
        SET_PED_AI_TEMPLATE( g_U3375[1], ref g_U1504 );
        SET_PED_COMBAT_RANGE_MIN( g_U3375[1], 4 );
        SET_PED_COMBAT_RANGE_MAX( g_U3375[1], 15 );
        sub_7561( g_U3375[1], 1308526797, 25000, 0, 0 );
    }
    if (sub_31668( g_U3375[2], 0 ))
    {
        SET_PED_AI_TEMPLATE( g_U3375[2], ref g_U1504 );
        SET_PED_COMBAT_RANGE_MIN( g_U3375[2], 4 );
        SET_PED_COMBAT_RANGE_MAX( g_U3375[2], 15 );
        sub_7561( g_U3375[2], -184942895, 25000, 0, 0 );
    }
    sub_33258( ref g_U3375, "piGBL_BRIDGE_REBELS" );
    sub_454( "MF", "P_HP_BRIDGE_REBELS_SETUP: END", 0 );
    return;
}

void sub_32316(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_32535(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_7232( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_32316( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_32316( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_33258(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_33408(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_2184( sub_871(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_33518()
{
    sub_454( "MF", "P_HP_BRIDGE_DOOR_PLAY_SOUND start", 0 );
    if (DOES_OBJECT_EXIST( g_U3383 ))
    {
        PLAY_SOUND_FROM_OBJECT( l_U370, "BRIDGE_DOOR_OPEN", g_U3383 );
    }
    sub_454( "MF", "P_HP_BRIDGE_DOOR_PLAY_SOUND end", 0 );
    return;
}

void sub_33701()
{
    sub_454( "MF", "P_HP_PROPS_OPEN_BRIDGE_DOORS: START", 0 );
    if ((DOES_OBJECT_EXIST( g_U3383 )) == 1)
    {
        PLAY_OBJECT_ANIM( g_U3383, "P_BRDGDRSANIM_H", "pa_doors", 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U3383, "P_BRDGDRSANIM_H", "pa_doors", 0.00000000 );
        SET_OBJECT_ANIM_SPEED( g_U3383, "P_BRDGDRSANIM_H", "pa_doors", 1.20000000 );
    }
    sub_454( "CR", "Playing audio music one shot PANAMA_OS_4", 0 );
    AUDIO_MUSIC_PLAY_ONESHOT();
    sub_454( "MF", "P_HP_PROPS_OPEN_BRIDGE_DOORS: END", 0 );
    return;
}

void sub_34042()
{
    unknown uVar2;
    unknown uVar3;

    sub_454( "MF", "P_HP_BRIDGE_REBELS_START_COMBAT: START", 0 );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    TASK_PAUSE( 0, 750 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_COMBAT_PED( 0, sub_871() );
    CLOSE_SEQUENCE_TASK( uVar2 );
    sub_34184( g_U3375[0], -10.32000000, 3.82000000, 8.21000000, -90.00000000 );
    if ((NOT (IS_PED_DEAD( sub_871() ))) AND (NOT (IS_PED_DEAD( g_U3375[0] ))))
    {
        REGISTER_TARGET( g_U3375[0], sub_871() );
        TASK_PERFORM_SEQUENCE( g_U3375[0], uVar2 );
    }
    if ((NOT (IS_PED_DEAD( sub_871() ))) AND (NOT (IS_PED_DEAD( g_U3375[1] ))))
    {
        REGISTER_TARGET( g_U3375[1], sub_871() );
        TASK_PERFORM_SEQUENCE( g_U3375[1], uVar2 );
    }
    CLEAR_SEQUENCE_TASK( uVar2 );
    OPEN_SEQUENCE_TASK( ref uVar3 );
    TASK_COMBAT_MOVE_TO_COVER( 0, "GenCover", "981380D9_D680D911_Popover2", sub_871() );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_COMBAT_PED( 0, sub_871() );
    CLOSE_SEQUENCE_TASK( uVar3 );
    if (NOT (IS_PED_DEAD( g_U3375[2] )))
    {
        SET_PED_FLAG_BLOCK_BLINDFIRE_IN_COVER( g_U3375[2], 1 );
        TASK_PERFORM_SEQUENCE( g_U3375[2], uVar3 );
    }
    CLEAR_SEQUENCE_TASK( uVar3 );
    sub_454( "MF", "P_HP_BRIDGE_REBELS_START_COMBAT: END", 0 );
    return;
}

void sub_34184(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_35104()
{
    sub_4988( ref g_U3349 );
    sub_35128( g_U3359 );
    sub_35128( g_U3361 );
    sub_35128( g_U3360 );
    sub_5022( g_U3362 );
    sub_5022( g_U3363 );
    sub_5022( g_U3364 );
    sub_5022( g_U3365 );
    sub_4988( ref g_U3366 );
    sub_4988( ref g_U4148 );
    sub_4922( g_U3373 );
    sub_4922( g_U3374 );
    if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( "PANAMA_OS_4" ))
    {
        AUDIO_MUSIC_STOP_ONESHOT();
    }
    return;
}

void sub_35128(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

int sub_35755(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, boolean bParam24, unknown uParam25)
{
    if (NOT (IS_PED_DEAD( sub_871() )))
    {
        if (((uParam0^) < 3) AND ((uParam0^) > 1))
        {
            if (NOT (sub_27277( uParam1 )))
            {
                sub_454( "CCB", "Resetting Cutscene Blend In...", 0 );
                sub_454( "CCB", "Disabling forced walk...", 0 );
                SET_PED_FORCED_TO_WALK( sub_871(), 0 );
                sub_454( "CCB", "Disabling forced run...", 0 );
                SET_PED_FORCED_TO_RUN( sub_871(), 0 );
                sub_454( "CCB", "Enabling shootdodge...", 0 );
                SET_PLAYER_CAN_USE_SHOOTDODGE( sub_893(), 1 );
                sub_454( "CCB", "Unloading cutscene...", 0 );
                CLEAR_NAMED_CUTSCENE( uParam22 );
                sub_454( "CCB", "eCutsceneBlendInRef - STATE_CUTSCENE_BLEND_IN_INIT", 0 );
                (uParam0^) = 0;
            }
        }
        switch ((uParam0^))
        {
            case 0:
            sub_1193( uParam23, 0, 1, 0 );
            sub_1621( uParam23 );
            sub_454( "CCB", "eCutsceneBlendInRef - STATE_CUTSCENE_BLEND_IN_TRIGGER", 0 );
            (uParam0^) = 1;
            break;
            case 1:
            if (sub_27277( uParam1 ))
            {
                if (NOT bParam24)
                {
                    sub_454( "CCB", "Enabling forced walk...", 0 );
                    SET_PED_FORCED_TO_WALK( sub_871(), 1 );
                }
                else
                {
                    sub_454( "CCB", "Enabling forced run...", 0 );
                    SET_PED_FORCED_TO_RUN( sub_871(), 1 );
                }
                sub_454( "CCB", "Disabling shootdodge...", 0 );
                SET_PLAYER_CAN_USE_SHOOTDODGE( sub_893(), 0 );
                if (NOT (CUTSCENE_IS_LOADED( uParam22 )))
                {
                    sub_454( "CCB", "Loading the cutscene...", 0 );
                    PRE_STREAM_SEAMLESS_CUTSCENE( uParam22 );
                }
                else
                {
                    sub_454( "CCB", "The cutscene is already loaded.", 0 );
                }
                sub_1193( uParam23, uParam25, 1, 0 );
                sub_1621( uParam23 );
                sub_454( "CCB", "eCutsceneBlendInRef - STATE_CUTSCENE_BLEND_IN_WAIT", 0 );
                (uParam0^) = 2;
            }
            break;
            case 2:
            if (sub_3207( uParam23 ))
            {
                sub_454( "CCB", "eCutsceneBlendInRef - STATE_CUTSCENE_BLEND_IN_COMPLETE", 0 );
                (uParam0^) = 3;
            }
            break;
            case 3:
            return 1;
            break;
        }
    }
    return 0;
}

void sub_36788()
{
    sub_454( "MF", "P_RELEASE_HELIPAD_ASSETS", 0 );
    sub_4699( ref l_U370 );
    sub_36853( ref l_U176, ref g_U1588 );
    sub_37276( ref l_U187, ref g_U1829 );
    sub_37530( "SCRIPT_MISSION\S_PANA_YACHT_BRIDGE_DOOR", ref g_U3026 );
    sub_37714( "DAM_DEAD", ref g_U1975 );
    sub_37714( "pa_anim", ref g_U1975 );
    return;
}

void sub_36853(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_36888( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_36888(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_37000( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_37000(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_37276(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_37311( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_37311(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_37000( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_37530(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_37000( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_37714(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_37000( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

int sub_37942(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_37955( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

boolean sub_37955(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_38140(int iParam0, unknown uParam1)
{
    if (NOT (sub_37955( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}


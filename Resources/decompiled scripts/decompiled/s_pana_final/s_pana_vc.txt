void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U40 = 0;
    l_U41 = 0;
    l_U42 = 1500;
    l_U70 = {0, 0, 0};
    StrCopy( ref l_U73, "DUMMY", 32 );
    l_U81 = 1;
    l_U86 = 0;
    l_U87 = 0;
    l_U88 = 0;
    l_U91 = 0;
    l_U136 = -1;
    l_U137 = {64536, 64536, 64536};
    l_U141 = 0;
    l_U197 = 0;
    l_U199 = 1;
    l_U221 = 0;
    l_U271 = -1;
    l_U272 = -1;
    l_U1230 = {-124.88000000, -29.99000000, 21.10000000};
    l_U1233 = 218.00000000;
    l_U1234 = 7500;
    sub_426( "SP", "Script s_pana_VC.sc is starting up...", 0 );
    sub_475();
    l_U197 = 1;
    if (g_U833 == 11)
    {
        sub_875( g_U980[11], g_U1086[11], g_U1158[11], g_U1122[11] );
    }
    while (NOT IS_EXITFLAG_SET())
    {
        sub_1070();
        sub_1512();
        if (l_U221 == 0)
        {
            sub_11160();
        }
        WAIT( 0 );
    }
    sub_4708( 0 );
    sub_61123();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_pana_VC" );
    sub_426( "SP", "Script s_pana_VC.sc is terminating...", 0 );
    return;
}

void sub_426(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_475()
{
    sub_426( "GA", "P_VC_POPULATE_VARIABLE_ARRAYS start", 0 );
    l_U179[0] = 1914709263;
    l_U179[1] = 1942109258;
    l_U179[2] = -1324244056;
    l_U179[3] = -1199034430;
    l_U179[4] = -1096620032;
    l_U179[5] = 138784803;
    l_U179[6] = 1243768211;
    l_U179[7] = -2080896344;
    l_U179[8] = g_U829;
    l_U179[9] = g_U832;
    l_U179[10] = -1409914275;
    l_U191[0] = 1308526797;
    l_U191[1] = -184942895;
    l_U191[2] = 456708483;
    l_U191[3] = -612753081;
    l_U191[4] = -1404433099;
    l_U350[0] = 0;
    l_U350[1] = 0;
    l_U350[2] = 0;
    sub_426( "GA", "P_VC_POPULATE_VARIABLE_ARRAYS end", 0 );
    return;
}

void sub_875(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 = sub_885();
    sub_962( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

int sub_885()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_907() );
    }
    return 0;
}

void sub_907()
{
    return GET_PLAYER_ID();
}

void sub_962(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_1070()
{
    switch (l_U1245)
    {
        case 0:
        sub_426( "CCB", "eSPChallenge - STATE_CHALLENGE_IDLE", 0 );
        l_U1245 = 1;
        break;
        case 1:
        if (l_U197 >= 11)
        {
            if (SCRIPT_VAR_HASH_EXISTS( 1701971384 ))
            {
                SCRIPT_VAR_HASH_SET_INT( 1701971384, 1 );
            }
            else
            {
                sub_426( "CCB", "The OldPainless script variable is NOT valid!!!", 0 );
            }
            if (SCRIPT_VAR_HASH_EXISTS( -1343685014 ))
            {
                sub_426( "CCB", "The player completed the level...", 0 );
                SCRIPT_VAR_HASH_SET_INT( -1343685014, 1 );
            }
            else
            {
                sub_426( "CCB", "The PanamaComplete script variable is NOT valid!!!", 0 );
            }
            sub_426( "CCB", "eSPChallenge - STATE_CHALLENGE_COMPLETE", 0 );
            l_U1245 = 2;
        }
        break;
        case 2: break;
    }
    return;
}

void sub_1512()
{
    if (g_U834 == 11)
    {
        switch (l_U221)
        {
            case 0:
            sub_1595( 1 );
            if ((sub_2848()) || (IS_PED_DEAD( sub_885() )))
            {
                l_U221 = 1;
                sub_426( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_3342())
            {
                l_U221 = 3;
            }
            else if ((sub_3382( 0 )) == 1)
            {
                l_U221 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_885() )))
            {
                l_U221 = 3;
                sub_426( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_426( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_885() ))) AND (NOT (IS_PLAYER_DEAD( sub_907() ))))
            {
                SET_PLAYER_CONTROL( sub_907(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_885() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_885(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            sub_4708( 1 );
            SET_INTERIOR_ACTIVE( GET_INTERIOR_FROM_NAME( "Foyer", 0 ), 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( GET_INTERIOR_FROM_NAME( "Foyer", 0 ), GET_HASH_KEY( ref g_U3408 ) );
            SET_INTERIOR_ACTIVE( GET_INTERIOR_FROM_NAME( "vc1Right", 0 ), 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( GET_INTERIOR_FROM_NAME( "vc1Right", 0 ), GET_HASH_KEY( ref g_U3400 ) );
            SET_INTERIOR_ACTIVE( GET_INTERIOR_FROM_NAME( "vc1Left", 0 ), 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( GET_INTERIOR_FROM_NAME( "vc1Left", 0 ), GET_HASH_KEY( ref g_U3416 ) );
            LOAD_SCENE( -109.45960000, -15.33696000, 9.64765600 );
            LOAD_SCENE( -108.55380000, 20.68639000, 11.62371000 );
            l_U221 = 4;
            sub_426( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_426( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            if (l_U143._fU0)
            {
                sub_6938( ref l_U143, sub_885() );
            }
            l_U221 = 5;
            sub_426( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_426( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U197 = 1;
            l_U199 = 0;
            l_U221 = 0;
            sub_426( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_1595(int iParam0)
{
    if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND ((NOT IS_BULLET_CAMERA_ACTIVE()) AND (NOT (IS_PED_DEAD( sub_885() )))))
    {
        if ((IS_PED_IN_WATER( sub_885() )) == 1)
        {
            if (NOT g_U3626._fU32)
            {
                sub_1675();
            }
            if (iParam0 == 1)
            {
                sub_2500();
            }
            sub_2558( 1, 1 );
            return 1;
        }
    }
    return 0;
}

void sub_1675()
{
    sub_426( "MF", "P_GBL_QUICK_GAMEPLAY_CAM_COPY - START", 0 );
    sub_1743( ref g_U3626, 50 );
    sub_2076( 0, 0, 0, 1 );
    sub_2239( ref g_U3626 );
    sub_426( "MF", "P_GBL_QUICK_GAMEPLAY_CAM_COPY - END", 0 );
    return;
}

void sub_1743(int iParam0, unknown uParam1)
{
    iParam0->_fU4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_ROT()};
    iParam0->_fU16 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_COORD()};
    iParam0->_fU28 = GET_GAMEPLAY_CAM_FOV();
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam1;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU96 = 0;
    sub_1866( iParam0 + 48, uParam1, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U703, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_1866(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_2076(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_885() )))
        {
            SET_PLAYER_CONTROL( sub_907(), 0, uParam2 );
            SET_PED_DUCKING( sub_885(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_885() );
            }
            SET_PED_INVINCIBLE( sub_885(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_2239(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_2294( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

void sub_2294(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

void sub_2500()
{
    SET_PAD_SHAKE( 0, 100, 250 );
    WAIT( 90 );
    SET_PED_HEALTH( sub_885(), 0, 0 );
    return;
}

void sub_2558(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_885() )))
    {
        SET_PLAYER_CONTROL( sub_907(), 1, 0 );
        SET_PED_INVINCIBLE( sub_885(), 0 );
        if (bParam0)
        {
            sub_2639();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_2639()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_885() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_885(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_885(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_885(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_885(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

int sub_2848()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_885() )))
        {
            SET_PED_FORCED_TO_WALK( sub_885(), 0 );
            SET_PLAYER_FORCED_AIM( sub_907(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_907(), 1 );
            if ((IS_PED_VISIBLE( sub_885() )) == 0)
            {
                SET_PED_VISIBLE( sub_885(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_3342()
{
    return g_U648;
}

int sub_3382(int iParam0)
{
    iParam0 = 1;
    switch (l_U41)
    {
        case 0:
        if (NOT (sub_3443( ref l_U43 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_885() )))
            {
                l_U42 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_1866( ref l_U43, l_U42, 1, 1 );
            sub_2294( ref l_U43 );
        }
        if (sub_3571( ref l_U43 ))
        {
            sub_426( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_885() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_907() )))
            {
                SET_PLAYER_CONTROL( sub_907(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U41 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U41 = 2;
            }
            else
            {
                l_U41 = 3;
            }
        }
        break;
        case 2:
        sub_426( "NS", "Player will QUIT", 0 );
        sub_4058();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_426( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_4058();
        return 1;
        break;
    }
    return 0;
}

int sub_3443(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

int sub_3571(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_4058()
{
    sub_426( "NS", "P_PostFailRetryCleanup", 0 );
    sub_4108( ref l_U43 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_907() )))
    {
        SET_PLAYER_CONTROL( sub_907(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U40 = 0;
    l_U40 = l_U40;
    l_U41 = 0;
    return;
}

void sub_4108(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_4708(unknown uParam0)
{
    sub_426( "GA", "P_CLEANUP_VC start", 0 );
    ISEQ_TERMINATE( -1079385083 );
    sub_4771( -1079385083, ref g_U1878 );
    sub_5148( g_U1512, ref g_U1588 );
    sub_5148( -1710973172, ref g_U1588 );
    sub_5148( -1654523650, ref g_U1588 );
    if ((CUTSCENE_NAMED_IS_LOADING( "11_03_PANAMA_concat" )) || (CUTSCENE_IS_LOADED( "11_03_PANAMA_concat" )))
    {
        CLEAR_NAMED_CUTSCENE( "11_03_PANAMA_concat" );
    }
    sub_5491( l_U271, 0 );
    sub_5654( ref l_U271 );
    sub_5491( l_U272, 0 );
    sub_5654( ref l_U272 );
    sub_5857( l_U270 );
    sub_5935( ref l_U367 );
    sub_5935( ref l_U392 );
    sub_5935( ref l_U506 );
    sub_5935( ref l_U597 );
    sub_5935( ref l_U622 );
    sub_5935( ref l_U701 );
    sub_5935( ref l_U1061 );
    sub_6051( ref l_U222 );
    sub_6051( ref g_U4160 );
    sub_6156( ref g_U3517 );
    sub_6156( ref l_U348 );
    sub_6189( g_U809._fU0 );
    sub_6189( g_U755._fU0 );
    sub_6286( uParam0 );
    if ((AUDIO_MUSIC_IS_ONESHOT_PREPARED( "PANAMA_OS_2" )) || (AUDIO_MUSIC_IS_ONESHOT_PREPARED( "PANAMA_OS_4" )))
    {
        AUDIO_MUSIC_STOP_ONESHOT();
    }
    sub_426( "GA", "P_CLEANUP_VC end", 0 );
    return;
}

void sub_4771(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_4883( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

int sub_4883(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_5148(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_4883( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

void sub_5491(int iParam0, unknown uParam1)
{
    if (iParam0 != -1)
    {
        sub_426( "MF", "P_SAFE_STOP_SOUND: Stopping Sound...", 0 );
        STOP_SOUND( iParam0, uParam1 );
    }
    else
    {
        sub_426( "MF", "P_SAFE_STOP_SOUND: Not stopping sound (SoundID = -1)", 0 );
    }
    return;
}

void sub_5654(unknown uParam0)
{
    if ((uParam0^) != -1)
    {
        sub_426( "MF", "P_SAFE_RELEASE_SOUND_ID: Releasing Sound...", 0 );
        RELEASE_SOUND_ID( (uParam0^) );
        (uParam0^) = -1;
    }
    else
    {
        sub_426( "MF", "P_SAFE_RELEASE_SOUND_ID: Not RELEASING sound (SoundID != -1)", 0 );
    }
    return;
}

void sub_5857(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_5935(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_5857( (uParam0^)[I] );
    }
    return;
}

void sub_6051(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_6084( (uParam0^)[I] );
    }
    return;
}

void sub_6084(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_6156(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_6189( (uParam0^)[I] );
    }
    return;
}

void sub_6189(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_6286(boolean bParam0)
{
    sub_426( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    if (bParam0)
    {
        ;
    }
    else
    {
        sub_426( "CCB", "Stopping the Panama context...", 0 );
        END_CONTEXT( "Panama" );
    }
    sub_426( "CCB", "Stopping the Panama_Museum context...", 0 );
    END_CONTEXT( "Panama_Museum" );
    return;
}

void sub_6938(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_426( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_7122( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_8199( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_8491( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_8851( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_8491( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_8851( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_8491( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_8851( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_9136( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_8851( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_9136( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_8851( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_9629( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_9790( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_885(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_426( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_7122(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_7154( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_7154(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_8199(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_8491(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_8807( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_8807(unknown uParam0)
{
    return;
}

void sub_8851(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_9136(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_8807( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_9629(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_9790(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_7154( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_9862( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_9862(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_11160()
{
    int iVar2;

    iVar2 = l_U197;
    sub_11177();
    switch (l_U197)
    {
        case 0: break;
        case 1:
        sub_426( "SP", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
        sub_12270();
        sub_12528();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        sub_17660();
        l_U197 = 2;
        sub_426( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_426( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        sub_18536();
        sub_24530();
        l_U197 = 3;
        sub_426( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if ((sub_27047( ref g_U3026 )) AND ((sub_26920( ref g_U1975 )) AND ((sub_26799( ref g_U1829 )) AND (sub_26679( ref g_U1588 )))))
        {
            if ((NOT l_U143._fU0) AND (g_U833 == 11))
            {
                l_U197 = 4;
                sub_426( "SP", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
            }
            else
            {
                l_U197 = 6;
                sub_426( "SP", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
            }
        }
        break;
        case 4:
        sub_426( "GA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        l_U199 = 0;
        g_U1230[11] = 1;
        if (NOT (IS_PED_DEAD( sub_885() )))
        {
            FREEZE_PED_POSITION( sub_885(), 0 );
        }
        if ((sub_27441( ref l_U143 )) == 0)
        {
            sub_9136( sub_885(), 1308526797, 200, 0, 0 );
            sub_8491( sub_885(), -1404433099, 1, 200, 0 );
            sub_8491( sub_885(), 456708483, 0, 200, 0 );
            l_U197 = 5;
            sub_426( "GA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U197 = 6;
            sub_426( "SP", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD( sub_885() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_885(), 1 ) )) AND ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_885(), 0 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_885(), 0, 0 ) ))))
            {
                l_U197 = 6;
                sub_426( "GA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
            }
        }
        break;
        case 6:
        if (g_U1230[11])
        {
            l_U197 = 7;
            sub_426( "GA", "eCheckpointState = CP_NIS_GATE_OPENING", 0 );
        }
        break;
        case 7:
        if (l_U198)
        {
            if (g_U834 == 10)
            {
                sub_28083();
            }
            sub_28309();
            sub_29651();
            sub_30638();
            sub_31015( 0, 1 );
            sub_31472( 0 );
            if (l_U199)
            {
                sub_2076( 1, 0, 0, 1 );
                sub_31782( ref l_U226, -108.68000000, -34.31000000, 9.54000000, 12.74000000, 0.00000000, -75.64000000, 45.00000000, 5000 );
                sub_2239( ref l_U226 );
                sub_31999( 0 );
                sub_32272();
                if (DOES_OBJECT_EXIST( g_U4160[0] ))
                {
                    sub_426( "CCB", "Playing the sidMuseumGate soundID...", 0 );
                    l_U271 = GET_SOUND_ID();
                    PLAY_SOUND_FROM_OBJECT( l_U271, "S_PANA_VISITOR_CENTER_GATE", g_U4160[0] );
                }
                else
                {
                    sub_426( "CCB", "The oiMuseumGateObject_0 object is NOT valid!!!", 0 );
                }
                if (DOES_OBJECT_EXIST( g_U4160[1] ))
                {
                    sub_426( "CCB", "Playing the sidMuseumGateButton soundID...", 0 );
                    l_U272 = GET_SOUND_ID();
                    PLAY_SOUND_FROM_OBJECT( l_U272, "S_PANA_VISITOR_CENTER_BUTTON", g_U4160[1] );
                }
                else
                {
                    sub_426( "CCB", "The oiMuseumGateObject_1 object is NOT valid!!!", 0 );
                }
                sub_962( sub_885(), g_U980[11], g_U1086[11] );
                DO_SCREEN_FADE_IN( 0 );
            }
            else
            {
                sub_31999( 1 );
            }
            sub_426( "CR", "Playing audio music one shot PANAMA_OS_4", 0 );
            AUDIO_MUSIC_PLAY_ONESHOT();
        }
        if ((sub_32925( ref l_U226, 0 )) || (NOT l_U199))
        {
            if (NOT l_U143._fU0)
            {
                g_U834 = 11;
                sub_33131( ref l_U143, g_U834, sub_885(), g_U980[11], g_U1086[11], g_U1158[11], g_U1122[11], 1 );
            }
            sub_5857( l_U270 );
            sub_36775( 0, 0, 0, g_U1158[11], g_U1122[11], 0 );
            sub_2558( 1, 1 );
            sub_5491( l_U271, 0 );
            sub_5654( ref l_U271 );
            sub_5491( l_U272, 0 );
            sub_5654( ref l_U272 );
            if (NOT AUDIO_IS_MUSIC_PLAYING())
            {
                sub_426( "MF", "Playing 7.4(Forced): PANAMA_FINAL Mood: PANAMA_FINAL_2_5_6", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_2_5_6", "PANAMA_FINAL_2_5_6", 0, 4000, -1, -1082130432, 0 );
            }
            sub_37080();
            DO_SCREEN_FADE_IN( 0 );
            AUDIO_MUSIC_REQUEST_ONESHOT( "PANAMA_OS_2", 0 );
            l_U197 = 8;
            sub_426( "GA", "eCheckpointState = CP_GAMEPLAY_VISITOR_CENTER", 0 );
        }
        break;
        case 8:
        if (l_U198)
        {
            sub_37320();
            sub_38546();
            sub_38689( ref l_U370, 30000 );
            sub_2294( ref l_U275 );
        }
        sub_38738( ref l_U367 );
        sub_38738( ref l_U392 );
        sub_38738( ref l_U506 );
        sub_38738( ref l_U597 );
        sub_38738( ref l_U622 );
        sub_38738( ref l_U701 );
        sub_38924();
        sub_39507();
        sub_43467();
        if ((NOT l_U1101) AND ((sub_39522( ref l_U622, 0 )) AND ((sub_39522( ref l_U701, 0 )) AND (sub_39522( ref l_U506, 0 )))))
        {
            sub_2294( ref l_U1092 );
            l_U1101 = 1;
        }
        if (sub_3571( ref l_U1092 ))
        {
            sub_43711( "SPAN_AMGUTR2", ref g_U1246 );
            sub_426( "CR", "Playing monologue - SPAN_AMGUTR2 - I blocked out all my questions...", 0 );
        }
        if (NOT (IS_PED_DEAD( l_U367[0] )))
        {
            if (sub_3571( ref l_U275 ))
            {
                sub_426( "GA", "VIG_19_GP enemy spotting player.", 0 );
                if (NOT (IS_PED_DEAD( sub_885() )))
                {
                    REGISTER_TARGET( l_U367[0], sub_885() );
                }
            }
        }
        if (sub_44110( ref l_U327, 0 ))
        {
            sub_44211();
        }
        if (sub_44110( ref l_U404, 0 ))
        {
            sub_426( "GA", "Player has left first floor lobby, don't spawn 1st floor backup.", 0 );
            l_U394 = 1;
            sub_44829( ref l_U395 );
        }
        if (NOT l_U394)
        {
            if ((IS_PED_DEAD( l_U367[0] )) AND (DOES_PED_EXIST( l_U367[0] )))
            {
                sub_426( "GA", "Starting 1st floor backup timer.", 0 );
                sub_2294( ref l_U395 );
                l_U394 = 1;
            }
        }
        if (sub_3571( ref l_U395 ))
        {
            sub_426( "GA", "Spawning 1st floor backup.", 0 );
            sub_45021();
        }
        if (sub_44110( ref l_U519, 0 ))
        {
            l_U425 = 1;
        }
        if ((l_U425 != 4) AND (l_U425 != 0))
        {
            sub_45551();
        }
        if (l_U425 == 4)
        {
            if (NOT l_U541)
            {
                if (NOT (IS_PED_DEAD( l_U506[1] )))
                {
                    if (IS_PED_SHOOTING( l_U506[1] ))
                    {
                        sub_48329();
                        l_U541 = 1;
                    }
                }
            }
            if (sub_44110( ref l_U542, 0 ))
            {
                sub_48560();
            }
            if (sub_44110( ref l_U563, 0 ))
            {
                sub_48925();
                l_U599 = 1;
                sub_44829( ref l_U600 );
            }
            if (NOT l_U599)
            {
                if ((sub_39644( ref l_U506 )) == 0)
                {
                    sub_426( "GA", "Starting 2nd floor backup timer.", 0 );
                    sub_2294( ref l_U600 );
                    l_U599 = 1;
                }
            }
            if (sub_3571( ref l_U600 ))
            {
                sub_426( "GA", "Spawning 2nd floor backup.", 0 );
                sub_49320();
            }
        }
        if (sub_44110( ref l_U624, 0 ))
        {
            sub_49791();
            sub_50280();
        }
        if (sub_44110( ref l_U715, 0 ))
        {
            l_U646 = 1;
        }
        if ((l_U646 != 4) AND (l_U646 != 0))
        {
            sub_50516();
        }
        if (l_U646 == 4)
        {
            if (sub_44110( ref l_U736, 0 ))
            {
                sub_51676();
                sub_39343( ref l_U622 );
            }
            if (sub_44110( ref l_U757, 0 ))
            {
                sub_426( "GA", "Disabling tethers for first 4th floor enemies.", 0 );
                sub_52189( ref l_U713, l_U701[0] );
                sub_52189( ref l_U712, l_U701[1] );
                sub_52189( ref l_U712, l_U701[2] );
            }
            if (sub_44110( ref l_U778, 0 ))
            {
                sub_52298();
            }
            if ((NOT l_U967) AND (l_U778._fU64))
            {
                if ((NOT (IS_PED_DEAD( sub_885() ))) AND (NOT (IS_PED_DEAD( l_U701[3] ))))
                {
                    if ((sub_52633( l_U701[3], sub_885(), 1 )) < 3.00000000)
                    {
                        sub_426( "GA", "Player too close, unlocking last enemy on bridge corner from cover.", 0 );
                        SET_PED_FLAG_LOCK_TO_COVER( l_U701[3], 0 );
                        l_U967 = 1;
                    }
                }
            }
        }
        if (l_U646 == 4)
        {
            if (NOT l_U274)
            {
                if (((((((sub_39644( ref l_U367 )) + (sub_39644( ref l_U392 ))) + (sub_39644( ref l_U506 ))) + (sub_39644( ref l_U597 ))) + (sub_39644( ref l_U701 ))) + (sub_39644( ref l_U622 ))) <= 1)
                {
                    sub_426( "GA", "Assigning bullet cam.", 0 );
                    l_U274 = 1;
                    sub_53012( ref l_U367 );
                    sub_53012( ref l_U392 );
                    sub_53012( ref l_U506 );
                    sub_53012( ref l_U597 );
                    sub_53012( ref l_U622 );
                    sub_53012( ref l_U701 );
                }
            }
            if (NOT l_U273)
            {
                if (((((((sub_39644( ref l_U367 )) + (sub_39644( ref l_U392 ))) + (sub_39644( ref l_U506 ))) + (sub_39644( ref l_U597 ))) + (sub_39644( ref l_U701 ))) + (sub_39644( ref l_U622 ))) <= 0)
                {
                    sub_426( "CR", "MUSIC: Playing PANAMA_FINAL Mood: PANAMA_FINAL_2", 0 );
                    AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_2", "PANAMA_FINAL_2", 0.00000000, 0, 8000, -1082130432, 0 );
                    sub_426( "CR", "Playing audio music one shot PANAMA_OS_2", 0 );
                    AUDIO_MUSIC_PLAY_ONESHOT();
                    l_U273 = 1;
                }
            }
        }
        if (sub_44110( ref l_U968, 0 ))
        {
            sub_53481();
        }
        if (sub_44110( ref l_U989, 0 ))
        {
            if (IS_ARCADE_MODE_ACTIVE() == 1)
            {
                DISPLAY_ARCADE_MODE_LEVEL_END( "s_hotel" );
                l_U197 = 0;
                sub_426( "CR", "eCheckpointState = CP_IDLE", 0 );
            }
            else
            {
                sub_2294( ref l_U1010 );
                SET_PED_FORCED_TO_WALK( sub_885(), 1 );
                SET_PLAYER_CAN_USE_SHOOTDODGE( sub_907(), 0 );
            }
        }
        if (sub_3571( ref l_U1010 ))
        {
            l_U197 = 10;
            sub_426( "GA", "eCheckpointState = CP_LOAD_11_03_PANAMA", 0 );
        }
        break;
        case 9:
        if (l_U198)
        {
            sub_2076( 1, 0, 0, 0 );
            if (NOT (IS_PED_DEAD( sub_885() )))
            {
                sub_962( sub_885(), -124.67050000, -29.68563000, 19.22695000, 123.58790000 );
                sub_54185( sub_885(), 0 );
                sub_54306();
                RESET_PLAYER_INPUT_GAIT( 0 );
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( 21.34741000, 1065353216, 0 );
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( -9.84487700, 1065353216, 0 );
                TASK_CLEAR_LOOK_AT( sub_885() );
                CLEAR_PED_TASKS_IMMEDIATELY( sub_885() );
            }
            CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAM_WAL_45_F", 1, l_U1230, l_U1233, 0, 0 );
            if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "span_Display" )))
            {
                sub_54767( 0 );
                sub_43711( "SPAN_EXPTM", ref l_U1235 );
                FOUND_EXPLORATION_ITEM( "span_Display" );
            }
        }
        if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "EXPL_CAM", "EXPL_CAM_WAL_45_F" )) - l_U1234))
        {
            sub_54185( sub_885(), 1 );
            CAMERA_ANIMATED_STOP( 0, 0 );
            sub_2558( 1, 1 );
            sub_42208( ref l_U1102, 1 );
            l_U197 = 8;
            sub_426( "CR", "eCheckpointState = CP_GAMEPLAY_VISITOR_CENTER", 0 );
        }
        break;
        case 10:
        if (l_U198)
        {
            if (NOT l_U968._fU64)
            {
                sub_53481();
            }
            sub_55097();
        }
        if (sub_26679( ref g_U1588 ))
        {
            if (CUTSCENE_IS_LOADED( "11_03_PANAMA_concat" ))
            {
                l_U197 = 11;
                sub_426( "GA", "eCheckpointState = CP_HANDLE_11_03_PANAMA", 0 );
            }
            else if (CUTSCENE_NAMED_IS_LOADING( "11_03_PANAMA_concat" ))
            {
                sub_426( "GA", "Waiting for cutscene 11_03_PANAMA_concat to load.", 0 );
            }
            else
            {
                sub_426( "GA", "Requesting cutscene 11_03_PANAMA_concat to load.", 0 );
                PRE_STREAM_SEAMLESS_CUTSCENE( "11_03_PANAMA_concat" );
            }
        }
        break;
        case 11:
        if (l_U198)
        {
            sub_58791( ref l_U1065, "11_03_PANAMA_concat", 55667, 56248, 58179, 58770, 0, 1 );
            l_U1065._fU4 = 2;
        }
        if (sub_59223( ref l_U1065 ))
        {
            l_U197 = 12;
            sub_426( "GA", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 12:
        sub_426( "SP", "eCheckpointState = CP_FINISHED", 0 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U197 = 0;
        sub_426( "SP", "eCheckpointState = CP_IDLE", 0 );
        break;
    }
    if (l_U197 != iVar2)
    {
        l_U198 = 1;
    }
    else
    {
        l_U198 = 0;
    }
    return;
}

void sub_11177()
{
    if (sub_11197( ref l_U799, sub_885(), 0 ))
    {
        sub_11340();
    }
    if (sub_11197( ref l_U862, sub_885(), 0 ))
    {
        sub_11456();
    }
    if (sub_11197( ref l_U883, sub_885(), 0 ))
    {
        sub_11576();
    }
    if (sub_11197( ref l_U904, sub_885(), 0 ))
    {
        sub_426( "CO", "P_INITIALIZE_IMAGE_FX_STARIS", 0 );
        PLAY_IMAGEFX( "FLICKER_VIBRATE_LIGHTEN", 4, 0 );
        PLAY_IMAGEFX( "FLICKER_VIBRATE_LIGHTEN", 4, 0 );
    }
    if (sub_11197( ref l_U925, sub_885(), 0 ))
    {
        sub_426( "CO", "P_INITIALIZE_IMAGE_FX_STARIS", 0 );
        PLAY_IMAGEFX( "DISTORT_INTERLACE_MID_INVRT_01", 4, 0 );
    }
    if (sub_11197( ref l_U946, sub_885(), 0 ))
    {
        sub_426( "CO", "P_INITIALIZE_IMAGE_FX_STARIS", 0 );
        PLAY_IMAGEFX( "FLICKER_VIBRATE_LONG", 4, 0 );
        PLAY_IMAGEFX( "FLICKER_VIBRATE_LONG", 4, 0 );
    }
    return;
}

void sub_11197(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 = sub_11236( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

int sub_11236(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_11340()
{
    sub_426( "CO", "P_INITIALIZE_IMAGE_FX_BUTTON", 0 );
    PLAY_IMAGEFX( "FLICKER_VIBRATE_LIGHTEN", 4, 0 );
    return;
}

void sub_11456()
{
    sub_426( "CO", "P_INITIALIZE_IMAGE_FX_FIGHT", 0 );
    PLAY_IMAGEFX( "DOUBLE_MASK_INTERLACE_TWITCH", 4, 0 );
    return;
}

void sub_11576()
{
    sub_426( "CO", "P_INITIALIZE_IMAGE_FX_STARIS", 0 );
    PLAY_IMAGEFX( "FLICKER_VIBRATE_INTERLACE_M", 4, 0 );
    PLAY_IMAGEFX( "FLICKER_VIBRATE_INTERLACE_M", 4, 0 );
    return;
}

void sub_12270()
{
    sub_426( "GA", "P_INITIALIZE_SCRIPT_DATA start", 0 );
    l_U198 = 1;
    l_U274 = 0;
    l_U273 = 0;
    sub_1866( ref l_U275, 500, 1, 0 );
    l_U394 = 0;
    sub_1866( ref l_U395, 20000, 1, 0 );
    l_U425 = 0;
    l_U426 = 0;
    l_U541 = 0;
    l_U599 = 0;
    sub_1866( ref l_U600, 20000, 1, 0 );
    l_U646 = 0;
    l_U647 = 0;
    l_U967 = 0;
    sub_1866( ref l_U1010, 1500, 1, 0 );
    l_U1019 = 0;
    l_U1020 = 0;
    sub_1866( ref l_U1092, 7000, 1, 0 );
    l_U1101 = 0;
    sub_426( "GA", "P_INITIALIZE_SCRIPT_DATA end", 0 );
    return;
}

void sub_12528()
{
    sub_426( "GA", "P_SET_STATIC_DATA start", 0 );
    sub_12612( ref l_U257, -95.96900000, -30.17200000, 9.63800000, -135.00000000, -2146852479, 7, 3, 2, 0, 0 );
    sub_12612( ref l_U354, -95.96900000, -30.17200000, 9.63800000, -135.00000000, -2146852479, 7, 3, 2, 0, 0 );
    sub_12612( ref l_U379, -94.48000000, -29.28000000, 10.08000000, 90.00000000, 1954988170, 7, 3, 2, 0, 0 );
    sub_12612( ref l_U427[0], -108.75000000, -29.03000000, 12.85000000, -167.96000000, -1042782621, 7, 3, 2, 0, 0 );
    sub_12612( ref l_U427[1], -117.00000000, -32.05000000, 12.85000000, 0.00000000, 202055197, 7, 3, 2, 0, 0 );
    sub_12612( ref l_U427[2], -118.93000000, -32.87000000, 12.85000000, 0.00000000, 878408885, 7, 3, 2, 0, 0 );
    sub_12612( ref l_U427[3], -125.03000000, -40.42000000, 12.85000000, 0.00000000, -1736324039, 7, 3, 2, 0, 0 );
    sub_12612( ref l_U427[4], -114.90000000, -37.85000000, 12.85000000, -167.96000000, 751080381, 7, 3, 2, 0, 0 );
    sub_12612( ref l_U427[5], -104.26000000, -36.40000000, 12.85000000, -167.96000000, -552332044, 7, 3, 2, 0, 0 );
    sub_12612( ref l_U584, -103.20000000, -33.20000000, 13.17000000, -179.84000000, 1109101776, 7, 3, 2, 0, 0 );
    sub_12612( ref l_U609, -95.16000000, -30.88000000, 16.45000000, 114.30000000, -494023735, 7, 3, 2, 0, 0 );
    sub_12612( ref l_U648[0], -108.26000000, -29.50000000, 19.25000000, -87.70000000, 1181282166, 7, 3, 2, 0, 0 );
    sub_12612( ref l_U648[1], -108.86000000, -38.93000000, 19.62000000, 0.00000000, 1369736713, 7, 3, 2, 0, 0 );
    sub_12612( ref l_U648[2], -106.69000000, -39.68000000, 19.62000000, 0.00000000, -790815011, 7, 3, 2, 0, 0 );
    sub_12612( ref l_U648[3], -103.46000000, -40.59000000, 19.23000000, 114.30000000, -905651490, 7, 3, 2, 0, 0 );
    sub_12612( ref l_U1021[0], -115.82740000, -33.91691000, 22.66913000, 0.00000000, -559761207, 7, 3, 2, 0, 0 );
    sub_12612( ref l_U1021[1], -115.67540000, -30.15675000, 22.67002000, 0.00000000, 212786871, 7, 3, 2, 0, 0 );
    sub_12612( ref l_U1021[2], -121.87000000, -35.37000000, 22.96000000, -90.00000000, 434858133, 26, 0, 0, 0, 0 );
    sub_13548( ref l_U200, "TRIGGER_MUSEUM_CHECKPOINT_ZONE", -126.87000000, -31.99000000, -14.38000000, 164.17000000, 108.55000000, 43.62000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13548( ref l_U327, "Start Vig 19 Rebel", -101.00000000, -32.96000000, 8.06000000, 6.30000000, 2.15000000, 3.11000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13548( ref l_U404, "TRIGGER_ENTERED_HALLWAY", -99.88000000, -32.96000000, 8.06000000, 6.30000000, 2.15000000, 3.11000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13548( ref l_U519, "TRIGGER_1ST_FLOOR_STAIRS_MID", -94.98000000, -29.52000000, 9.54000000, 4.50000000, 4.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13548( ref l_U542, "TRIGGER_2NDFLOOR_DISPLAY_ENTER", -121.73000000, -36.86000000, 12.74000000, 12.00000000, 3.00000000, 3.11000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13548( ref l_U563, "TRIGGER_2NDFLOOR_DISPLAY_EXIT", -106.55000000, -38.51000000, 12.74000000, 5.00000000, 3.00000000, 3.11000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13548( ref l_U624, "tb_VC_StartBathroomEnemy", -103.29000000, -35.17000000, 12.85000000, 4.00000000, 1.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13548( ref l_U715, "TRIGGER_BAIT_REBEL", -97.91000000, -29.36000000, 15.72000000, 7.12000000, 5.00000000, 6.24000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13548( ref l_U736, "TRIGGER_3RD_FLOOR_STAIR_EXIT", -103.86000000, -29.78000000, 19.14000000, 5.55000000, 3.06000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13548( ref l_U757, "TRIGGER_JUNGLE_ROOM_REMOVE_TETHERS", -122.53000000, -32.86000000, 19.16000000, 13.24000000, 3.43000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13548( ref l_U778, "tb_VC_Start4thFloorHallwayCoverEnemy", -117.41000000, -37.80000000, 19.24000000, 2.98000000, 5.86000000, 2.48000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13548( ref l_U285, "tb_VCTopStairsMid", -95.90000000, -42.26000000, 21.26000000, 3.59000000, 7.12000000, 2.63000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13548( ref l_U306, "tb_VCTopStairsBottom", -102.75000000, -42.26000000, 19.23000000, 3.59000000, 7.12000000, 2.63000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13548( ref l_U968, "tb_VC_PreLoad1103", -95.90000000, -42.26000000, 21.26000000, 3.59000000, 7.12000000, 2.63000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13548( ref l_U989, "tb_VC_1103_Start", -109.36000000, -41.80000000, 22.59000000, 12.64000000, 7.03000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13548( ref l_U1188, "Trigger_POIDisplay_Activate", -126.00000000, -30.90000000, 19.00000000, 4.50000000, 4.50000000, 2.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13548( ref l_U1209, "Trigger_POIDisplay_Radius", -126.00000000, -30.90000000, 19.00000000, 6.00000000, 6.00000000, 2.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13548( ref l_U799, "tbImageFX_VC_01", -109.57700000, -37.46160000, 8.10295000, 3.50000000, 3.00000000, 5.00000000, 0.00000000, 0.00000000, -24.06530000, 1 );
    sub_13548( ref l_U820, "tbImageFX_VC_02", -108.30900000, -33.34650000, 8.10295000, 15.00000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13548( ref l_U841, "tbImageFX_VC_03", -111.65500000, -26.01380000, 8.10295000, 7.00000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13548( ref l_U862, "tbImageFX_VC_04", -100.06900000, -32.65440000, 8.10295000, 7.00000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13548( ref l_U883, "tbImageFX_VC_05", -103.53700000, -29.00870000, 11.74870000, 7.00000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13548( ref l_U904, "tmImageFX_STAIRS01", -100.24200000, -33.20210000, 12.47020000, 2.00000000, 2.50000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13548( ref l_U925, "tmImageFX_STAIRS02", -100.96100000, -29.37700000, 17.69550000, 2.00000000, 3.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13548( ref l_U946, "tmImageFX_STAIRS03", -96.62440000, -44.32550000, 21.04400000, 2.00000000, 3.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15663( ref l_U369, "TETHER_MUSEUM_LOBBY", -110.26000000, -38.57000000, 8.94000000, 11.08000000, 14.44000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15663( ref l_U540, "TETHER_DISPLAY_ROOM", -121.67000000, -35.30000000, 12.80000000, 11.58000000, 14.02000000, 2.66000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15663( ref l_U712, "TETHER_JUNGLE_BRIDGE", -110.26000000, -38.75000000, 18.95000000, 11.00000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15663( ref l_U713, "TETHER_JUNGLE_EXHIBIT", -121.81000000, -33.18000000, 19.19000000, 13.00000000, 18.00000000, 3.85000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15663( ref l_U714, "tether_VCTopStairsBottom", -103.09000000, -41.58000000, 19.23000000, 2.92000000, 8.44000000, 3.20000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15663( ref l_U645, "TETHER_OUTSIDE_BATHROOM", -94.50000000, -32.75000000, 16.00000000, 3.50000000, 10.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16158( ref l_U1102, 2, 0.00000000, 0.00000000, 0.00000000, l_U1188, l_U1209, 1, 0 );
    sub_17009( ref l_U1102, 30, "POI_PAN_DISPLAY" );
    sub_17170( ref l_U1102, 0 );
    sub_17202( ref l_U1102, 1 );
    sub_17234( ref l_U1102, 0 );
    sub_426( "GA", "P_SET_STATIC_DATA end", 0 );
    return;
}

void sub_12612(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_13548(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_15663(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_16158(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47, unknown uParam48)
{
    sub_16175( iParam0, uParam47 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU80 = 1;
    iParam0->_fU116 = {uParam5};
    iParam0->_fU88 = 1;
    iParam0->_fU216 = {uParam26};
    iParam0->_fU320 = uParam48;
    iParam0->_fU20 = {uParam2};
    sub_16541( iParam0 );
    return;
}

void sub_16175(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_16541(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_16620( iParam0 );
    return;
}

void sub_16620(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_16679( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_16679( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_16679( iParam0, 1 );
            }
            else
            {
                sub_16679( iParam0, 0 );
            };;;
        }
        else
        {
            sub_16679( iParam0, 0 );
        }
    }
    else
    {
        sub_16679( iParam0, 0 );
    }
    return;
}

void sub_16679(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_17009(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_17040( iParam0 );
    return;
}

void sub_17040(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_17170(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

void sub_17202(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

void sub_17234(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
    sub_17276( iParam0 );
    return;
}

void sub_17276(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_17337( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_17337( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_17337(int iParam0)
{
    if (((IS_PED_DEAD( sub_885() )) == 0) AND ((IS_PLAYER_DEAD( sub_907() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_885() )) == 1) || (((IS_PED_GETTING_UP( sub_885() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_885() )) == 1) || (((IS_PED_IN_COVER( sub_885() )) == 1) || (((IS_PED_DUCKING( sub_885() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_885() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_17660()
{
    sub_426( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U1245 = 0;
    l_U1246 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( -1343685014 )))
    {
        sub_426( "CCB", "Creating the PanamaComplete script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( -1343685014 );
        if (SCRIPT_VAR_HASH_EXISTS( -1343685014 ))
        {
            sub_426( "CCB", "The PanamaComplete script variable was successfully created...", 0 );
        }
        else
        {
            sub_426( "CCB", "The PanamaComplete script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
        sub_426( "CCB", "The PanamaComplete script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( -1343685014, 0 );
    }
    if (NOT (SCRIPT_VAR_HASH_EXISTS( 1701971384 )))
    {
        sub_426( "CCB", "Creating the OldPainless script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( 1701971384 );
        if (SCRIPT_VAR_HASH_EXISTS( 1701971384 ))
        {
            sub_426( "CCB", "The OldPainless script variable was successfully created...", 0 );
        }
        else
        {
            sub_426( "CCB", "The OldPainless script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
        sub_426( "CCB", "The OldPainless script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( 1701971384, 0 );
    }
    return;
}

void sub_18536()
{
    sub_426( "GA", "P_REQUEST_VC_PERSISTENT_ASSETS start", 0 );
    sub_18596();
    sub_20533();
    sub_21260( ref l_U179, ref g_U1588 );
    sub_22402( ref l_U191, ref g_U1829 );
    sub_18674( "LEVEL_S_PAN_CP_07", ref g_U1975 );
    sub_23467( "SCRIPT_MISSION\S_PANA_VISITORS_CENTER", ref g_U3026 );
    sub_18674( "EXPL_CAM", ref g_U1975 );
    sub_426( "GA", "P_REQUEST_VC_PERSISTENT_ASSETS end", 0 );
    return;
}

void sub_18596()
{
    sub_426( "CR", "P_GLOBAL_LOAD_PISTOL_ANIMS - Start", 0 );
    sub_18674( "NPC_PSTL_CORE", ref g_U1975 );
    sub_18674( "NPC_PSTL_COVER", ref g_U1975 );
    sub_18674( "NPC_PSTL_COVER_ENTER", ref g_U1975 );
    sub_18674( "NPC_PSTL_COVER_RELOAD", ref g_U1975 );
    sub_18674( "NPC_PSTL_DODGE", ref g_U1975 );
    sub_18674( "NPC_PSTL_FLAVOR", ref g_U1975 );
    sub_18674( "NPC_PSTL_FULLBODY", ref g_U1975 );
    sub_18674( "NPC_PSTL_RELOAD", ref g_U1975 );
    sub_18674( "NPC_PSTL_SEARCH", ref g_U1975 );
    sub_18674( "NPC_PSTL_STAIRS", ref g_U1975 );
    sub_18674( "NPC_PSTL_REACT", ref g_U1975 );
    sub_18674( "AMED_PSTL_PRONE", ref g_U1975 );
    sub_18674( "PLGE_PSTL_CROUCH", ref g_U1975 );
    sub_18674( "PLGE_PSTL_CORE", ref g_U1975 );
    sub_18674( "PLGE_PSTL_CORE_RELOAD", ref g_U1975 );
    sub_18674( "PLGE_PSTL_HANDSIG", ref g_U1975 );
    sub_18674( "PLGE_PSTL_ACTIONS", ref g_U1975 );
    sub_18674( "PLGE_PSTL_KNEE", ref g_U1975 );
    sub_18674( "PLGE_PSTL_COVER", ref g_U1975 );
    sub_18674( "PLGE_PSTL_REACT", ref g_U1975 );
    sub_18674( "PLGE_PSTL_COVER_EXIT", ref g_U1975 );
    sub_426( "CR", "P_GLOBAL_LOAD_PISTOL_ANIMS - End", 0 );
    return;
}

void sub_18674(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_18695( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_18832( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_18695(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_18832( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_18832( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_18832( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_19503( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_18832( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_18832( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_18832(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_18854( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_18854(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_19503(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_20533()
{
    sub_426( "CR", "P_GLOBAL_LOAD_RIFLE_ANIMS - Start", 0 );
    sub_18674( "NPC_RIFLE_CORE", ref g_U1975 );
    sub_18674( "NPC_RIFLE_COVER", ref g_U1975 );
    sub_18674( "NPC_RIFLE_COVER_ENTER", ref g_U1975 );
    sub_18674( "NPC_RIFLE_COVER_RELOAD", ref g_U1975 );
    sub_18674( "NPC_RIFLE_DODGE", ref g_U1975 );
    sub_18674( "NPC_RIFLE_FLAVOR", ref g_U1975 );
    sub_18674( "NPC_RIFLE_FULLBODY", ref g_U1975 );
    sub_18674( "NPC_RIFLE_RELOAD", ref g_U1975 );
    sub_18674( "NPC_RIFLE_SEARCH", ref g_U1975 );
    sub_18674( "NPC_RIFLE_STAIRS", ref g_U1975 );
    sub_18674( "NPC_RIFLE_REACT", ref g_U1975 );
    sub_18674( "AMED_RIFL_PRONE", ref g_U1975 );
    sub_18674( "PLGE_RIFLE_CROUCH", ref g_U1975 );
    sub_18674( "PLGE_RIFLE_CORE", ref g_U1975 );
    sub_18674( "PLGE_RIFLE_CORE_RELOAD", ref g_U1975 );
    sub_18674( "PLGE_RIFLE_HANDSIG", ref g_U1975 );
    sub_18674( "PLGE_RIFLE_ACTIONS", ref g_U1975 );
    sub_18674( "PLGE_RIFLE_KNEE", ref g_U1975 );
    sub_18674( "PLGE_RIFLE_COVER", ref g_U1975 );
    sub_18674( "PLGE_RIFLE_REACT", ref g_U1975 );
    sub_18674( "PLGE_RIFLE_COVER_EXIT", ref g_U1975 );
    sub_426( "CR", "P_GLOBAL_LOAD_RIFLE_ANIMS - End", 0 );
    return;
}

void sub_21260(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_21295( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_21295(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_21330( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_21461( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_21330(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_21461( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_21461( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_21461( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_19503( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_21461( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_21461( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_21461(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_18854( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_22402(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_22437( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_22437(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_22458( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_22590( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_22458(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_22590( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_22590( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_22590( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_19503( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_22590( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_22590( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_22590(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_18854( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_23467(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_23488( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
        sub_23626( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_23488(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                sub_23626( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                sub_23626( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    sub_23626( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                    sub_19503( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                sub_23626( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
            sub_23626( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_23626(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_18854( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_24530()
{
    sub_426( "GA", "P_REQUEST_VC_NONPERSISTENT_ASSETS start", 0 );
    sub_24602( -1079385083, ref g_U1878 );
    AUDIO_MUSIC_REQUEST_ONESHOT( "PANAMA_OS_4", 0 );
    sub_426( "GA", "P_REQUEST_VC_NONPERSISTENT_ASSETS end", 0 );
    return;
}

void sub_24602(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_24637( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_24789( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_24637(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_24789( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_24789( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_24789( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_24789( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_19503( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_19503( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_24789( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_24789( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_24789(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_18854( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_26679(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_26799(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_26920(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_27047(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_27441(unknown uParam0)
{
    sub_426( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_6938( uParam0, sub_885() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_28083()
{
    int I;

    sub_426( "GA", "P_VC_DETECT_PAYNEKILLERS_ON_MAIN_FLOOR start", 0 );
    for ( I = 0; I < g_U3517; I++ )
    {
        if (DOES_PLACEMENT_EXIST( g_U3517[I] ))
        {
            if (HAS_PLACEMENT_BEEN_COLLECTED( g_U3517[I] ))
            {
                l_U350[I] = 1;
            }
        }
        else
        {
            l_U350[I] = 1;
        }
    }
    sub_426( "GA", "P_VC_DETECT_PAYNEKILLERS_ON_MAIN_FLOOR end", 0 );
    return;
}

void sub_28309()
{
    sub_426( "CR", "P_CREATE_PLACEMENTS start", 0 );
    if ((NOT (DOES_PLACEMENT_EXIST( g_U3517[0] ))) AND (NOT l_U350[0]))
    {
        g_U3517[0] = sub_28434( -4072149, -119.10000000, -28.85000000, 9.93500000, 0.00000000, 0.00000000, 185.25000000, 0, 0, 1, 1119092736 );
        if (DOES_PLACEMENT_EXIST( g_U3517[0] ))
        {
            ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U3517[0], ref g_U3416 );
        }
    }
    if ((NOT (DOES_PLACEMENT_EXIST( g_U3517[1] ))) AND (NOT l_U350[1]))
    {
        g_U3517[1] = sub_28434( -4072149, -119.00000000, -28.90000000, 9.93500000, 0.00000000, 0.00000000, 185.25000000, 0, 0, 1, 1119092736 );
        if (DOES_PLACEMENT_EXIST( g_U3517[1] ))
        {
            ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U3517[1], ref g_U3416 );
        }
    }
    if ((NOT (DOES_PLACEMENT_EXIST( g_U3517[2] ))) AND (NOT l_U350[2]))
    {
        g_U3517[2] = sub_28434( -4072149, -108.40000000, -37.68000000, 9.71000000, 0.00000000, 0.00000000, 1.00000000, 0, 1, 1, 1119092736 );
        if (DOES_PLACEMENT_EXIST( g_U3517[2] ))
        {
            ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U3517[2], ref g_U3408 );
        }
    }
    sub_28825();
    sub_29520();
    return;
}

void sub_28434(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_28825()
{
    sub_426( "CO", "P_CREATE_S_PAN_GG_SS_03", 0 );
    sub_28926( ref g_U755, g_U829, 1352763079, -2029934837, -128.79000000, -24.16000000, 8.04000000, 0.00000000, 0.00000000, 1.00000000, "" );
    sub_29055( ref g_U755 );
    return;
}

void sub_28926(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_426( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_29055(int iParam0)
{
    sub_426( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_29116( iParam0->_fU12 )) == 1)
        {
            sub_426( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_426( "CO", "has never been collected.", 0 );
        }
        if ((sub_29116( iParam0->_fU12 )) == 0)
        {
            sub_6189( iParam0->_fU0 );
            iParam0->_fU0 = sub_28434( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_426( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_426( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_29116(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_29520()
{
    sub_426( "CO", "P_CREATE_S_PAN_GG_AK_03", 0 );
    sub_28926( ref g_U809, g_U831, 1810446104, 843757133, -107.13000000, -23.73000000, 11.07000000, 1.50000000, 0.00000000, 1.00000000, "" );
    sub_29055( ref g_U809 );
    return;
}

void sub_29651()
{
    int I;

    sub_426( "CCB", "P_GLOBAL_CREATE_MUSEUM_GATE_OBJECTS", 0 );
    for ( I = 0; I <= (g_U4160 - 1); I++ )
    {
        if (NOT (DOES_OBJECT_EXIST( g_U4160[I] )))
        {
            sub_29757( ref g_U4160, I );
            sub_30417( ref g_U4160, I );
        }
        else
        {
            sub_426( "CCB", "The poiMuseumGateObject_ object was already created.", 0 );
        }
    }
    return;
}

void sub_29757(unknown uParam0, int iParam1)
{
    if (NOT (DOES_OBJECT_EXIST( g_U4160[iParam1] )))
    {
        sub_426( "CCB", "Creating oiMuseumGateObject_:", 0 );
        if (iParam1 == 0)
        {
            (uParam0^)[iParam1] = sub_29882( 1942109258, -104.74700000, -32.02020000, 10.14970000, 0.00000000, 0.00000000, 180.00000000, 0, 0, 0 );
        }
        else if (iParam1 == 1)
        {
            (uParam0^)[iParam1] = sub_29882( -1324244056, -109.36000000, -35.89300000, 9.85600000, 0.00000000, 0.00000000, 176.05900000, 0, 0, 0 );
        }
    }
    else
    {
        sub_426( "CCB", "The oiMuseumGateObject_ object was already created.", 0 );
    }
    return;
}

void sub_29882(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_29992( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_29992(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_8807( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_30417(unknown uParam0, unknown uParam1)
{
    if (DOES_OBJECT_EXIST( (uParam0^)[uParam1] ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( (uParam0^)[uParam1], ref g_U3424 );
        FREEZE_OBJECT_POSITION( (uParam0^)[uParam1], 1 );
    }
    else
    {
        sub_426( "CCB", "The oiTempObject_ object is NOT valid!!!", 0 );
    }
    return;
}

void sub_30638()
{
    sub_426( "GA", "P_VC_CREATE_ZIPLINE_OBJECTS start", 0 );
    l_U222[0] = sub_29882( -1096620032, -109.00000000, 0.00000000, 15.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U222[0] ))
    {
        FREEZE_OBJECT_POSITION( l_U222[0], 1 );
    }
    l_U222[1] = sub_29882( 138784803, -108.03600000, -21.47000000, 11.61300000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U222[1] ))
    {
        FREEZE_OBJECT_POSITION( l_U222[1], 1 );
    }
    l_U222[2] = sub_29882( 1243768211, -109.71700000, 20.35620000, 17.49950000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U222[2] ))
    {
        FREEZE_OBJECT_POSITION( l_U222[2], 1 );
    }
    sub_426( "GA", "P_VC_CREATE_ZIPLINE_OBJECTS end", 0 );
    return;
}

void sub_31015(int iParam0, int iParam1)
{
    sub_426( "MF", "P_GLOBAL_CREATE_LOCKS start", "###" );
    sub_6084( g_U4167 );
    g_U4167 = sub_29882( g_U1583, g_U4168, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U4167 ))
    {
        FREEZE_OBJECT_POSITION( g_U4167, 1 );
        if (iParam0 == 1)
        {
            PLAY_OBJECT_ANIM( g_U4167, "P_LockGate", "pa_doors", 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U4167, "P_LockGate", "pa_doors", 1.00000000 );
        }
    }
    sub_6084( g_U4171 );
    g_U4171 = sub_29882( g_U1583, g_U4172, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( g_U4171 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U4171, 1 );
        if (iParam1 == 1)
        {
            PLAY_OBJECT_ANIM( g_U4171, "P_LockGate", "pa_doors", 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U4171, "P_LockGate", "pa_doors", 1.00000000 );
        }
    }
    sub_426( "MF", "P_GLOBAL_CREATE_LOCKS end", "###" );
    return;
}

void sub_31472(boolean bParam0)
{
    sub_426( "CCB", "P_SWAP_SECURITY_DOOR_BUTTON", 0 );
    sub_6084( g_U4160[1] );
    if (bParam0)
    {
        g_U4160[1] = sub_29882( -1199034430, -109.36000000, -35.89300000, 9.85600000, 0.00000000, 0.00000000, 176.05900000, 0, 0, 0 );
    }
    else
    {
        g_U4160[1] = sub_29882( -1324244056, -109.36000000, -35.89300000, 9.85600000, 0.00000000, 0.00000000, 176.05900000, 0, 0, 0 );
    }
    if (DOES_OBJECT_EXIST( g_U4160[1] ))
    {
        FREEZE_OBJECT_POSITION( g_U4160[1], 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U4160[1], ref g_U3408 );
    }
    return;
}

void sub_31782(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_1866( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U703, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_31999(boolean bParam0)
{
    sub_426( "CCB", "P_GLOBAL_MUSEUM_GATE_OPEN", 0 );
    if (DOES_OBJECT_EXIST( g_U4160[0] ))
    {
        PLAY_OBJECT_ANIM( g_U4160[0], "P_MI_GATE_H", "PA_DOORS", 0.00000000, 0, 1 );
        if (bParam0)
        {
            SET_OBJECT_ANIM_CURRENT_TIME( g_U4160[0], "P_MI_GATE_H", "PA_DOORS", 1.00000000 );
        }
        else
        {
            SET_OBJECT_ANIM_CURRENT_TIME( g_U4160[0], "P_MI_GATE_H", "PA_DOORS", 0.00000000 );
        }
        SET_OBJECT_ANIM_SPEED( g_U4160[0], "P_MI_GATE_H", "PA_DOORS", 1.00000000 );
    }
    return;
}

void sub_32272()
{
    sub_426( "CO", "P_INITIALIZE_IMAGE_FX_POI", 0 );
    PLAY_IMAGEFX( "FLICKER_VIBRATE_ZOOM_01", 4, 1 );
    PLAY_IMAGEFX( "FLICKER_VIBRATE_ZOOM_01", 4, 1 );
    return;
}

int sub_32925(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || (sub_3571( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || (sub_3571( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_33131(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_426( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_426( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_9790( iParam1 );
        sub_33390( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_33841( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_33841( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_34073( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_33841( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_34073( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_34073( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_33841( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_34073( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_34073( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_34073( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_33841( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_34073( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_34073( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_34073( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_34073( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_35631( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_426( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_33390(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_7154( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_426( "TEH", "Ending context", 0 );
        sub_426( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_33841(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_34073(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_35631(int iParam0)
{
    sub_8807( "CHECKPOINT DATA" );
    sub_35670( iParam0->_fU4 );
    sub_35693( iParam0->_fU16 );
    sub_35693( iParam0->_fU20 );
    sub_35693( iParam0->_fU24 );
    sub_35736( iParam0->_fU28 );
    sub_35736( iParam0->_fU56 );
    sub_35736( iParam0->_fU60 );
    sub_35736( iParam0->_fU64 );
    sub_35736( iParam0->_fU68 );
    sub_35736( iParam0->_fU72 );
    sub_35736( iParam0->_fU76 );
    sub_35736( iParam0->_fU80 );
    sub_35736( iParam0->_fU84 );
    sub_35736( iParam0->_fU88 );
    sub_35736( iParam0->_fU92 );
    sub_35693( iParam0->_fU32 );
    sub_35736( iParam0->_fU36 );
    sub_35736( iParam0->_fU40 );
    sub_35736( iParam0->_fU44 );
    sub_35693( iParam0->_fU136 );
    sub_35941( iParam0->_fU140 );
    sub_35736( iParam0->_fU52 );
    sub_8807( "---nRightHolsterAttachmentEnabled: " );
    sub_35736( iParam0->_fU96 );
    sub_8807( "---nRightHolsterAttachmentToggled: " );
    sub_35736( iParam0->_fU100 );
    sub_8807( "---nLeftHolsterAttachmentEnabled: " );
    sub_35736( iParam0->_fU104 );
    sub_8807( "---nLeftHolsterAttachmentToggled: " );
    sub_35736( iParam0->_fU108 );
    sub_8807( "---nRifleHolsterAttachmentEnabled: " );
    sub_35736( iParam0->_fU112 );
    sub_8807( "---nRifleHolsterAttachmentToggled: " );
    sub_35736( iParam0->_fU116 );
    sub_8807( "---nRightHandAttachmentEnabled: " );
    sub_35736( iParam0->_fU120 );
    sub_8807( "---nRightHandAttachmentToggled: " );
    sub_35736( iParam0->_fU124 );
    sub_8807( "---nLeftHandAttachmentEnabled: " );
    sub_35736( iParam0->_fU128 );
    sub_8807( "---nLeftHandAttachmentToggled: " );
    sub_35736( iParam0->_fU132 );
    sub_35736( l_U1 );
    sub_35736( 144 );
    return;
}

void sub_35670(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_35693(unknown uParam0)
{
    return;
}

void sub_35736(unknown uParam0)
{
    return;
}

void sub_35941(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_36775(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

void sub_37080()
{
    sub_426( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_426( "CCB", "Starting the Panama_Museum context...", 0 );
    START_CONTEXT( "Panama_Museum" );
    return;
}

void sub_37320()
{
    sub_426( "CR", "P_VC_CREATE_1ST_FLOOR_ENEMY start", 0 );
    l_U367[0] = sub_37381( ref l_U354 );
    sub_9136( l_U367[0], 1308526797, 25000, 0, 0 );
    sub_38094( ref l_U367[0], "AIT_EXPERT", 1.00000000, 40.00000000 );
    sub_38197( ref l_U369, l_U367[0], 3 );
    sub_38276( l_U367[0] );
    sub_38399( ref l_U367, "pi_VC_1stFloorEnemy" );
    sub_426( "CR", "P_VC_CREATE_1ST_FLOOR_ENEMY end", 0 );
    return;
}

void sub_37381(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_29992( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_37860( iParam0->_fU40 );
    sub_37940( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_37860(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_37940(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_38094(unknown uParam0, unknown uParam1, float fParam2, float fParam3)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    return;
}

void sub_38197(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_38276(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_38399(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_38546()
{
    sub_426( "CR", "P_GBL_REFRESH_PAYNE_KILLER_COUNT - START", 0 );
    g_U4062 = GET_PAYNEKILLER_AMT();
    sub_426( "CR", "P_GBL_REFRESH_PAYNE_KILLER_COUNT - END", 0 );
    return;
}

void sub_38689(unknown uParam0, unknown uParam1)
{
    sub_1866( uParam0, uParam1, 1, 0 );
    sub_2294( uParam0 );
    return;
}

void sub_38738(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            if (NOT (sub_11236( (uParam0^)[I], l_U200 )))
            {
                sub_426( "CCB", "Cleaning piTempPed ped!!!", 0 );
                sub_5857( (uParam0^)[I] );
            }
        }
    }
    return;
}

void sub_38924()
{
    if (NOT l_U284)
    {
        if (sub_38951( l_U285 ))
        {
            sub_426( "GA", "Player is going up to the cutscene trigger, stop the enemies from following.", 0 );
            sub_39087( ref l_U367, l_U714, 1 );
            sub_39087( ref l_U392, l_U714, 1 );
            sub_39087( ref l_U506, l_U714, 1 );
            sub_39087( ref l_U597, l_U714, 1 );
            sub_39087( ref l_U701, l_U714, 1 );
            sub_39087( ref l_U622, l_U714, 1 );
            l_U284 = 1;
        }
    }
    else if (sub_38951( l_U306 ))
    {
        sub_426( "GA", "Player came back down stairs, release enemies restricted from moving upstairs.", 0 );
        sub_39343( ref l_U367 );
        sub_39343( ref l_U392 );
        sub_39343( ref l_U506 );
        sub_39343( ref l_U597 );
        sub_39343( ref l_U701 );
        sub_39343( ref l_U622 );
        l_U284 = 0;
    }
    return;
}

void sub_38951(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_11236( sub_885(), uParam0 );
}

void sub_39087(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_38197( ref uParam1, (uParam0^)[I], uParam2 );
    }
    return;
}

void sub_39343(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_39374( (uParam0^)[I] );
    }
    return;
}

void sub_39374(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        RESET_PED_TETHERING( uParam0 );
    }
    return;
}

void sub_39507()
{
    if ((sub_39522( ref l_U622, 0 )) AND ((sub_39522( ref l_U701, 0 )) AND (sub_39522( ref l_U506, 0 ))))
    {
        if (NOT (sub_39895( ref l_U1102 )))
        {
            sub_17234( ref l_U1102, 1 );
        }
    }
    if ((sub_39940( ref l_U1102 )) == 1)
    {
        sub_40175( ref g_U1326 );
        sub_40257( 0, sub_885(), "MAX", ref g_U1326, 2, 0 );
        sub_40257( 1, sub_885(), "MAX", ref g_U1326, 2, 0 );
        sub_40499( "EXPLORE_ITEM", ref g_U1326, 8, 1 );
    }
    if ((sub_41283( ref l_U1102 )) == 1)
    {
        l_U197 = 9;
        sub_426( "CR", "eCheckpointState = CP_POI_DISPLAY", 0 );
    }
    return;
}

int sub_39522(unknown uParam0, boolean bParam1)
{
    if ((sub_39535( uParam0, 0 )) == 1)
    {
        if (NOT bParam1)
        {
            if ((sub_39644( uParam0 )) == 0)
            {
                return 1;
            }
        }
        if (bParam1)
        {
            if ((sub_39744( uParam0 )) == (uParam0^))
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_39535(unknown uParam0, boolean bParam1)
{
    int I;
    int Result;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((DOES_PED_EXIST( (uParam0^)[I] )) == 1)
        {
            Result = 1;
            if (NOT bParam1)
            {
                return 1;
            }
        }
        else
        {
            Result = 0;
        }
    }
    return Result;
}

void sub_39644(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_39744(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

void sub_39895(int iParam0)
{
    return iParam0->_fU56;
}

int sub_39940(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND ((sub_39895( iParam0 )) == 0)))
    {
        if ((sub_40096() == 1) AND (((IS_PED_RELOADING( sub_885() )) == 0) AND (((IS_PED_GETTING_UP( sub_885() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP( sub_885() )) == 0) AND (((IS_PED_IN_COVER( sub_885() )) == 0) AND (((IS_PED_DUCKING( sub_885() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

int sub_40096()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

void sub_40175(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_40257(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_40499(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_40523( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_40523(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_40578( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_40578(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_40613( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_41107( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_40613(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_41107(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

int sub_41283(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_885() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_885() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_11236( sub_885(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_11236( sub_885(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_17276( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_17337( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_40096() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_42208( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_16679( iParam0, 0 );
                            sub_42279( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_16679( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_885() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_885(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_16679( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_42279( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_885() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_885(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_885() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_885(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_885() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_885(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_16679( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_42279( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_885() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_885() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_885() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_885(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_42279( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

void sub_42208(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_16679( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_16679( iParam0, 0 );
        sub_42279( iParam0, 0 );
        if ((IS_PED_DEAD( sub_885() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_885() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_885(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_42279(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_17276( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_43467()
{
    if (NOT (sub_3443( ref g_U4052 )))
    {
        sub_38689( ref g_U4052, g_U4061 );
    }
    if (((g_U4052._fU16) || (sub_3571( ref g_U4052 ))) AND (sub_43506()))
    {
        sub_426( "MF", "Playing Speech: SPAN_MXFNDS1", 0 );
        sub_43711( ref g_U4067, ref g_U1246 );
        sub_4108( ref g_U4052 );
    }
    return;
}

int sub_43506()
{
    if (GET_PAYNEKILLER_AMT() > g_U4062)
    {
        sub_426( "CR", "Player picked up Payne Killers!", 0 );
        sub_35736( g_U4062 );
        sub_35736( GET_PAYNEKILLER_AMT() );
        g_U4062 = GET_PAYNEKILLER_AMT();
        return 1;
    }
    g_U4062 = GET_PAYNEKILLER_AMT();
    return 0;
}

void sub_43711(unknown uParam0, unknown uParam1)
{
    sub_40175( uParam1 );
    sub_40257( 0, sub_885(), "MAX", uParam1, 2, 0 );
    sub_40257( 1, sub_885(), "MAX", uParam1, 2, 0 );
    sub_40499( uParam0, uParam1, 8, 1 );
    return;
}

void sub_44110(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_11236( sub_885(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_44211()
{
    sub_426( "GA", "P_VC_START_1ST_FLOOR_ENEMY start", 0 );
    sub_44275( l_U367[0] );
    if (NOT (IS_PED_DEAD( l_U367[0] )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U367[0], ref g_U3424 );
        SET_PED_ALERTNESS( l_U367[0], 3 );
        sub_44435( ref l_U367[0] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U367[0], 0 );
        ISEQ_REGISTER_ENTITY( -1079385083, "GMED_STAIRWELL_PATROL", l_U367[0], 0 );
        ISEQ_START( -1079385083 );
    }
    sub_426( "GA", "P_VC_START_1ST_FLOOR_ENEMY end", 0 );
    return;
}

void sub_44275(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_44435(unknown uParam0)
{
    sub_44452( uParam0, sub_885() );
    return;
}

void sub_44452(unknown uParam0, unknown uParam1)
{
    sub_44466( uParam0, uParam1 );
    sub_44527( uParam0, uParam1 );
    return;
}

void sub_44466(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_44527(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_44829(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

void sub_45021()
{
    unknown uVar2;

    sub_426( "GA", "P_VC_START_1ST_FLOOR_BACKUP start", 0 );
    l_U392[0] = sub_37381( ref l_U379 );
    sub_9136( l_U392[0], -184942895, 25000, 0, 0 );
    sub_38197( ref l_U369, l_U392[0], 3 );
    sub_38094( ref l_U392[0], "AIT_EXPERT", 1.00000000, 40.00000000 );
    if (NOT (IS_PED_DEAD( l_U392[0] )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U392[0], "GtaMloRoom42" );
        SET_PED_ALERTNESS( l_U392[0], 3 );
        if (NOT (IS_PED_DEAD( sub_885() )))
        {
            REGISTER_TARGET( l_U392[0], sub_885() );
            SET_LOCKED_TARGET( l_U392[0], sub_885() );
        }
        OPEN_SEQUENCE_TASK( ref uVar2 );
        if (NOT (IS_PED_DEAD( sub_885() )))
        {
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, -104.00000000, -33.22000000, 9.13000000, 3, -1, 0.25000000, 64, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0, sub_885() );
        }
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( l_U392[0], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    sub_38399( ref l_U392, "pi_VC_1stFloorBackup" );
    sub_426( "GA", "P_VC_START_1ST_FLOOR_BACKUP end", 0 );
    return;
}

void sub_45551()
{
    switch (l_U425)
    {
        case 1:
        sub_426( "GA", "e_VC_2ndFloorEnemySpawn = ENTITY_STATE_INIT", 0 );
        sub_45664( ref l_U513, 1.00000000, 0 );
        l_U426 = 0;
        l_U425 = 2;
        sub_426( "GA", "e_VC_2ndFloorEnemySpawn = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U506[l_U426] = sub_37381( ref l_U427[l_U426] );
        sub_45958( l_U506[l_U426], ref l_U513 );
        sub_38094( ref l_U506[l_U426], "AIT_EXPERT", 1.00000000, 40.00000000 );
        if ((NOT (IS_PED_DEAD( sub_885() ))) AND (NOT (IS_PED_DEAD( l_U506[l_U426] ))))
        {
            SET_PED_ALERTNESS( l_U506[l_U426], 3 );
            REGISTER_TARGET( l_U506[l_U426], sub_885() );
            SET_LOCKED_TARGET( l_U506[l_U426], sub_885() );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U506[l_U426], 1 );
        }
        l_U426++;
        if (l_U426 >= 6)
        {
            l_U425 = 3;
            sub_426( "GA", "e_VC_2ndFloorEnemySpawn = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        sub_38399( ref l_U506, "pi_VC_2ndFloorEnemy" );
        if (NOT (IS_PED_DEAD( l_U506[0] )))
        {
            sub_9136( l_U506[0], -1404433099, 25000, 0, 0 );
        }
        if (NOT (IS_PED_DEAD( l_U506[1] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U506[1], "ExhibitRoom" );
            sub_9136( l_U506[1], 1308526797, 25000, 0, 0 );
        }
        if (NOT (IS_PED_DEAD( l_U506[2] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U506[2], "ExhibitRoom" );
            sub_9136( l_U506[2], -184942895, 25000, 0, 0 );
        }
        if (NOT (IS_PED_DEAD( l_U506[3] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U506[3], "ExhibitRoom" );
            sub_9136( l_U506[3], 456708483, 25000, 0, 0 );
        }
        if (NOT (IS_PED_DEAD( l_U506[4] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U506[4], ref g_U3440 );
            sub_9136( l_U506[4], -612753081, 25000, 0, 0 );
        }
        if (NOT (IS_PED_DEAD( l_U506[5] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U506[5], "TheatreRoom" );
            sub_9136( l_U506[5], 1308526797, 25000, 0, 0 );
        }
        sub_46926();
        l_U425 = 4;
        sub_426( "GA", "e_VC_2ndFloorEnemySpawn = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    return;
}

void sub_45664(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_45958(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_8807( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_45664( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_45664( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_46926()
{
    unknown uVar2;

    sub_426( "GA", "P_VC_ACTIVATE_2ND_FLOOR_ENEMIES start", 0 );
    if (NOT (IS_PED_DEAD( sub_885() )))
    {
        if (NOT (IS_PED_DEAD( l_U506[0] )))
        {
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -120.10090000, -30.51872000, 12.85271000, sub_885(), 1, 8.00000000, 1101004800, -1082130432, 3 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0, sub_885() );
            CLOSE_SEQUENCE_TASK( uVar2 );
            TASK_PERFORM_SEQUENCE( l_U506[0], uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
        }
        if (NOT (IS_PED_DEAD( l_U506[1] )))
        {
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            if (NOT (IS_PED_DEAD( sub_885() )))
            {
                TASK_ATTACK_MOVE( 0, -113.54000000, -29.66000000, 13.07000000, 1092616192, 1101004800, -1082130432, 3 );
                TASK_COMBAT_MOVE_TO_COVER( 0, "GenCover", "1300BAB3_FD5C2803_Corner1", sub_885() );
                TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            }
            CLOSE_SEQUENCE_TASK( uVar2 );
            TASK_PERFORM_SEQUENCE( l_U506[1], uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
        }
        if (NOT (IS_PED_DEAD( l_U506[2] )))
        {
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            if (NOT (IS_PED_DEAD( sub_885() )))
            {
                TASK_ATTACK_MOVE( 0, -117.08000000, -30.39000000, 13.07000000, 1092616192, 1101004800, -1082130432, 3 );
                TASK_FOLLOW_NAV_MESH_TO_COORD( 0, -117.40000000, -34.70000000, 13.07000000, 3, 20000, 1048576000, 0, 0 );
                TASK_COMBAT_MOVE_TO_COVER( 0, "GenCover", "1300BAB3_9E84A4DD_Corner2", sub_885() );
                TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            }
            CLOSE_SEQUENCE_TASK( uVar2 );
            TASK_PERFORM_SEQUENCE( l_U506[2], uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
            sub_38197( ref l_U540, l_U506[2], 1 );
        }
        if (NOT (IS_PED_DEAD( l_U506[3] )))
        {
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_SNAP_TO_COVER( 0, "GenCover", "1300BAB3_7B4C09BD_Corner2", sub_885() );
            CLOSE_SEQUENCE_TASK( uVar2 );
            TASK_PERFORM_SEQUENCE( l_U506[3], uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
            sub_38197( ref l_U540, l_U506[3], 1 );
            SET_PED_FLAG_LOCK_TO_COVER( l_U506[3], 1 );
            SET_PED_FLAG_BLOCK_BLINDFIRE_IN_COVER( l_U506[3], 1 );
            SET_PED_FLAG_FIRE_UNTIL_EMPTY_IN_COVER( l_U506[3], 1 );
            SET_PED_FORCE_START_FIRING_FROM_COVER( l_U506[3] );
        }
        if (NOT (IS_PED_DEAD( l_U506[4] )))
        {
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_COMBAT_SNAP_TO_COVER( 0, "GenCover", "1300BAB3_D680D911_Corner1", sub_885() );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0, sub_885() );
            CLOSE_SEQUENCE_TASK( uVar2 );
            TASK_PERFORM_SEQUENCE( l_U506[4], uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
            SET_PED_FLAG_LOCK_TO_COVER( l_U506[4], 1 );
        }
        if (NOT (IS_PED_DEAD( l_U506[5] )))
        {
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_SNAP_TO_COVER( 0, "GenCover", "1300BAB3_64ECDA1F_Corner1", sub_885() );
            CLOSE_SEQUENCE_TASK( uVar2 );
            TASK_PERFORM_SEQUENCE( l_U506[5], uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
            SET_PED_FLAG_LOCK_TO_COVER( l_U506[5], 1 );
            SET_PED_FORCE_START_FIRING_FROM_COVER( l_U506[5] );
            SET_PED_FLAG_FIRE_UNTIL_EMPTY_IN_COVER( l_U506[5], 1 );
        }
    }
    sub_426( "GA", "P_VC_ACTIVATE_2ND_FLOOR_ENEMIES end", 0 );
    return;
}

void sub_48329()
{
    sub_426( "GA", "P_VC_2ND_FLOOR_TETHER_DOOR_ENEMIES start", 0 );
    sub_38197( ref l_U540, l_U506[1], 1 );
    if (NOT (IS_PED_DEAD( l_U506[2] )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( l_U506[2], 1 );
        SET_PED_FORCE_START_FIRING_FROM_COVER( l_U506[2] );
        SET_PED_FLAG_FIRE_UNTIL_EMPTY_IN_COVER( l_U506[2], 1 );
    }
    sub_426( "GA", "P_VC_2ND_FLOOR_TETHER_DOOR_ENEMIES end", 0 );
    return;
}

void sub_48560()
{
    sub_426( "GA", "P_VC_2ND_FLOOR_ENGAGE_PLAYER_ENTERED_DISPLAY_ROOM start", 0 );
    if (NOT (IS_PED_DEAD( l_U506[1] )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( l_U506[1], 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U506[1], 0 );
    }
    if (NOT (IS_PED_DEAD( l_U506[2] )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( l_U506[2], 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U506[2], 0 );
    }
    if (NOT (IS_PED_DEAD( l_U506[3] )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( l_U506[3], 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U506[3], 0 );
    }
    if (NOT (IS_PED_DEAD( l_U506[4] )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( l_U506[4], 0 );
    }
    sub_426( "GA", "P_VC_2ND_FLOOR_ENGAGE_PLAYER_ENTERED_DISPLAY_ROOM end", 0 );
    return;
}

void sub_48925()
{
    sub_426( "GA", "P_VC_2ND_FLOOR_ENEMIES_UNTETHER start", 0 );
    sub_39343( ref l_U506 );
    if (NOT (IS_PED_DEAD( l_U506[2] )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( l_U506[2], 0 );
    }
    if (NOT (IS_PED_DEAD( l_U506[3] )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( l_U506[3], 0 );
    }
    if (NOT (IS_PED_DEAD( l_U506[5] )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( l_U506[5], 0 );
    }
    sub_426( "GA", "P_VC_2ND_FLOOR_ENEMIES_UNTETHER end", 0 );
    return;
}

void sub_49320()
{
    unknown uVar2;

    sub_426( "GA", "P_VC_START_2ND_FLOOR_BACKUP start", 0 );
    l_U597[0] = sub_37381( ref l_U584 );
    sub_9136( l_U597[0], -1404433099, 25000, 0, 0 );
    sub_38094( ref l_U597[0], "AIT_EXPERT", 1, 40 );
    if ((NOT (IS_PED_DEAD( sub_885() ))) AND (NOT (IS_PED_DEAD( l_U597[0] ))))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U597[0], "GtaMloRoom42" );
        SET_PED_ALERTNESS( l_U597[0], 3 );
        REGISTER_TARGET( l_U597[0], sub_885() );
        SET_LOCKED_TARGET( l_U597[0], sub_885() );
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -113.54000000, -29.66000000, 13.07000000, sub_885(), 0, 1092616192, 1101004800, -1082130432, 3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0, sub_885() );
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( l_U597[0], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    sub_38399( ref l_U597, "pi_VC_2ndFloorBackup" );
    sub_426( "GA", "P_VC_START_2ND_FLOOR_BACKUP end", 0 );
    return;
}

void sub_49791()
{
    unknown uVar2;

    sub_426( "GA", "P_VC_START_BATHROOM_ENEMY start", 0 );
    l_U622[0] = sub_37381( ref l_U609 );
    sub_9136( l_U622[0], -1404433099, 25000, 0, 0 );
    sub_38094( ref l_U622[0], "AIT_EXPERT", 1, 15 );
    sub_38197( ref l_U645, l_U622[0], 1 );
    if (NOT (IS_PED_DEAD( l_U622[0] )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U622[0], "GtaMloRoom42" );
        SET_PED_ALERTNESS( l_U622[0], 3 );
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_COMBAT_SNAP_TO_COVER( 0, "pana_GP_Museum", "Corner Position40", 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( l_U622[0], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
        SET_PED_FORCE_START_FIRING_FROM_COVER( l_U622[0] );
        SET_PED_FLAG_FIRE_UNTIL_EMPTY_IN_COVER( l_U622[0], 1 );
        if (NOT (IS_PED_DEAD( sub_885() )))
        {
            REGISTER_TARGET( l_U622[0], sub_885() );
            SET_LOCKED_TARGET( l_U622[0], sub_885() );
        }
    }
    sub_38399( ref l_U622, "pi_VC_BathroomEnemy_" );
    sub_426( "GA", "P_VC_START_BATHROOM_ENEMY end", 0 );
    return;
}

void sub_50280()
{
    sub_426( "CR", "P_CREATE_WASHROOM_PAINKILLERS - Start", 0 );
    l_U348[0] = sub_28434( -4072149, -99.60000000, -37.55000000, 17.34000000, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0, 90.00000000 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U348[0], ref g_U3456 );
    sub_426( "CR", "P_CREATE_WASHROOM_PAINKILLERS - End", 0 );
    return;
}

void sub_50516()
{
    unknown uVar2;

    switch (l_U646)
    {
        case 1:
        sub_426( "GA", "e_VC_4thFloorEnemySpawnState = ENTITY_STATE_INIT", 0 );
        sub_45664( ref l_U706, 1056964608, 0 );
        l_U647 = 0;
        l_U646 = 2;
        sub_426( "GA", "e_VC_4thFloorEnemySpawnState = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U701[l_U647] = sub_37381( ref l_U648[l_U647] );
        sub_45958( l_U701[l_U647], ref l_U706 );
        sub_38094( ref l_U701[l_U647], "AIT_EXPERT", 1, 40 );
        if (NOT (IS_PED_DEAD( l_U701[l_U647] )))
        {
            SET_PED_ALERTNESS( l_U701[l_U647], 3 );
            if (NOT (IS_PED_DEAD( sub_885() )))
            {
                REGISTER_TARGET( l_U701[l_U647], sub_885() );
                SET_LOCKED_TARGET( l_U701[l_U647], sub_885() );
            }
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U701[l_U647], 1 );
        }
        l_U647++;
        if (l_U647 >= 4)
        {
            l_U646 = 3;
            sub_426( "GA", "e_VC_4thFloorEnemySpawnState = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        sub_38399( ref l_U701, "pi_VC_4thFloorEnemy" );
        sub_9136( l_U701[0], -1404433099, 25000, 0, 0 );
        sub_9136( l_U701[1], -184942895, 25000, 0, 0 );
        sub_9136( l_U701[2], -184942895, 25000, 0, 0 );
        sub_9136( l_U701[3], -1404433099, 25000, 0, 0 );
        sub_38197( ref l_U712, l_U701[1], 1 );
        sub_38197( ref l_U712, l_U701[2], 1 );
        if (NOT (IS_PED_DEAD( l_U701[0] )))
        {
            sub_38197( ref l_U713, l_U701[0], 1 );
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_ATTACK_MOVE( 0, -118.80810000, -29.96964000, 19.22695000, 3.00000000, 6.00000000, -1082130432, 3 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            if (NOT (IS_PED_DEAD( sub_885() )))
            {
                TASK_COMBAT_PED( 0, sub_885() );
            }
            CLOSE_SEQUENCE_TASK( uVar2 );
            TASK_PERFORM_SEQUENCE( l_U701[0], uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
        }
        if (NOT (IS_PED_DEAD( l_U701[1] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U701[1], "Room_Lobby" );
        }
        if (NOT (IS_PED_DEAD( l_U701[2] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U701[2], "Room_Lobby" );
        }
        if (NOT (IS_PED_DEAD( l_U701[3] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U701[3], "Room_Offi_Stair" );
        }
        sub_38276( l_U701[1] );
        sub_38276( l_U701[2] );
        sub_38276( l_U701[3] );
        l_U646 = 4;
        sub_426( "GA", "e_VC_4thFloorEnemySpawnState = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    return;
}

void sub_51676()
{
    unknown uVar2;

    sub_426( "GA", "P_VC_ACTIVATE_4TH_FLOOR_BRIDGE_ENEMIES start", 0 );
    sub_44275( l_U701[1] );
    sub_44275( l_U701[2] );
    if (NOT (IS_PED_DEAD( sub_885() )))
    {
        if (NOT (IS_PED_DEAD( l_U701[1] )))
        {
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            if (NOT (IS_PED_DEAD( sub_885() )))
            {
                TASK_SHOOT_AT_COORD( 0, -108.95000000, -29.41000000, 20.71000000, 2000, 0, 1, 1 );
                TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
                TASK_COMBAT_PED( 0, sub_885() );
            }
            CLOSE_SEQUENCE_TASK( uVar2 );
            REGISTER_TARGET( l_U701[1], sub_885() );
            TASK_PERFORM_SEQUENCE( l_U701[1], uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
        }
        if (NOT (IS_PED_DEAD( l_U701[2] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U701[2], 0 );
            REGISTER_TARGET( l_U701[2], sub_885() );
            TASK_COMBAT_PED( l_U701[2], sub_885() );
        }
    }
    sub_426( "GA", "P_VC_ACTIVATE_4TH_FLOOR_BRIDGE_ENEMIES end", 0 );
    return;
}

void sub_52189(int iParam0, unknown uParam1)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_REMOVE_BOX( uParam1, iParam0->_fU0 );
    }
    return;
}

void sub_52298()
{
    sub_426( "GA", "P_VC_ACTIVATE_4TH_FLOOR_COVER_ENEMY start", 0 );
    if ((NOT (IS_PED_DEAD( sub_885() ))) AND (NOT (IS_PED_DEAD( l_U701[3] ))))
    {
        sub_44275( l_U701[3] );
        SET_PED_FLAG_LOCK_TO_COVER( l_U701[3], 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U701[3], 0 );
        TASK_COMBAT_SNAP_TO_COVER( l_U701[3], "GenCover", "1300BAB3_162BD872_Corner2", sub_885() );
    }
    sub_426( "GA", "P_VC_ACTIVATE_4TH_FLOOR_COVER_ENEMY end", 0 );
    return;
}

void sub_52633(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    }
    if (bParam2)
    {
        return VDIST( uVar5, uVar8 );
        break;
    }
    return VDIST( uVar5._fU0, uVar5._fU4, 0, uVar8._fU0, uVar8._fU4, 0 );
}

void sub_53012(unknown uParam0)
{
    int I;

    if ((sub_39644( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_53481()
{
    sub_426( "GA", "P_VC_PRELOAD_11_03_PANAMA start", 0 );
    sub_21295( g_U1512, ref g_U1588 );
    sub_21295( -1710973172, ref g_U1588 );
    sub_21295( -1654523650, ref g_U1588 );
    sub_53601( "11_03_PANAMA_concat", 0 );
    sub_426( "GA", "P_VC_PRELOAD_11_03_PANAMA end", 0 );
    return;
}

void sub_53601(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_54185(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_VISIBLE( uParam0, uParam1 );
    }
    else
    {
        sub_54271( "MAL_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

void sub_54271(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    return;
}

void sub_54306()
{
    sub_426( "GA", "P_RESET_MAX_ACTION_TREE start", 0 );
    if (NOT (IS_PED_DEAD( sub_885() )))
    {
        if (IS_PLAYER_SHOOTDODGING())
        {
            SCRIPT_ASSERT( "Do not try to reset Max's action tree when he is shoot dodging.", 0 );
            sub_426( "GA", "You cannot reset Max's action tree during a shoot dodge.", 0 );
        }
        else
        {
            PED_ACTION_TREE_PLAY_NODE( sub_885(), "/Global/Player" );
        }
    }
    sub_426( "GA", "P_RESET_MAX_ACTION_TREE end", 0 );
    return;
}

void sub_54767(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

void sub_55097()
{
    sub_426( "CCB", "P_MUSEUM_EARLY_CLEANUP", 0 );
    sub_5935( ref l_U367 );
    sub_5935( ref l_U392 );
    sub_5935( ref l_U506 );
    sub_5935( ref l_U597 );
    sub_5935( ref l_U701 );
    sub_5935( ref l_U622 );
    sub_5148( -2080896344, ref g_U1588 );
    sub_5148( g_U1524, ref g_U1588 );
    sub_6051( ref g_U4163 );
    sub_5148( g_U1574, ref g_U1588 );
    sub_5148( g_U1576, ref g_U1588 );
    sub_5148( g_U1578, ref g_U1588 );
    sub_6084( g_U4167 );
    sub_6084( g_U4171 );
    sub_5148( 1914709263, ref g_U1588 );
    return;
}

int sub_55667()
{
    if (l_U1065._fU52)
    {
        l_U1019 = 1;
    }
    if (sub_55697())
    {
        return 1;
        break;
    }
    return 0;
}

int sub_55697()
{
    switch (l_U1019)
    {
        case 1:
        sub_426( "GA", "e_VC_1103_PedSpawnState = ENTITY_STATE_INIT", 0 );
        l_U1020 = 0;
        l_U1019 = 2;
        sub_426( "GA", "e_VC_1103_PedSpawnState = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U1061[l_U1020] = sub_37381( ref l_U1021[l_U1020] );
        if (NOT (IS_PED_DEAD( l_U1061[l_U1020] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1061[l_U1020], 1 );
        }
        sub_38276( l_U1061[l_U1020] );
        l_U1020++;
        if (l_U1020 >= 3)
        {
            l_U1019 = 3;
            sub_426( "GA", "e_VC_1103_PedSpawnState = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        sub_38399( ref l_U1061, "pi_VC_1103_Ped" );
        sub_9136( l_U1061[2], -612753081, 25000, 0, 0 );
        l_U1019 = 4;
        sub_426( "GA", "e_VC_1103_PedSpawnState = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    if (l_U1019 == 4)
    {
        return 1;
        break;
    }
    return 0;
}

void sub_56248()
{
    unknown uVar2;

    sub_426( "GA", "P_VC_1103_CutsceneRegistration start", 0 );
    if (NOT (IS_PED_DEAD( sub_885() )))
    {
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( sub_56326(), "W_PI_Glk18_Aa_H", 0 );
    }
    sub_56738( ref l_U1061 );
    if (NOT (IS_PED_DEAD( l_U1061[2] )))
    {
        sub_426( "CCB", "Registering the piPassos ped.", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1061[2], "Pass_Yaht", 1 );
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( l_U1061[2], 0, 0 ) ))
        {
            sub_426( "CCB", "Registering the piPassos ped's weapon.", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U1061[2], 0, 0 ), "W_PI_Glk18_Aa_H^1", 1 );
        }
        else
        {
            sub_426( "CCB", "The piPassos's weapon is NOT valid!!!", 0 );
        }
    }
    else
    {
        sub_426( "CCB", "The piPassos ped is NOT valid!!!", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1061[0] )))
    {
        sub_426( "CCB", "Registering the piMuseum_11_03_Bodies[0] ped.", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1061[0], "M_PA_DEAD_A", 1 );
    }
    else
    {
        sub_426( "CCB", "The piMuseum_11_03_Bodies[0] ped is NOT valid!!!", 0 );
    }
    sub_426( "CCB", "Registering the piMuseum_11_03_Bodies[1] ped.", 0 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_PA_DEAD_A^1", 1563895224 );
    if (NOT (IS_PED_DEAD( l_U1061[1] )))
    {
        sub_426( "CCB", "Registering the piMuseum_11_03_Bodies[2] ped.", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1061[1], "FB_Daph_Dead", 1 );
    }
    else
    {
        sub_426( "CCB", "The piMuseum_11_03_Bodies[2] ped is NOT valid!!!", 0 );
    }
    uVar2 = DOOR_FIND_CLOSEST( 1463538732, -113.62910000, -38.41180000, 23.76593000 );
    if (DOES_OBJECT_EXIST( uVar2 ))
    {
        sub_426( "CCB", "Registering the dsMuseumRoofDoor_0 door.", 0 );
        REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( uVar2, "P_DR_RoofDr_H", 1 );
    }
    else
    {
        sub_426( "CCB", "The dsMuseumRoofDoor_0 object is NOT valid!!!", 0 );
        REGISTER_HIDE_ENTITY_AT_POSITION( 1463538732, -113.62910000, -38.41180000, 23.76593000 );
    }
    uVar2 = DOOR_FIND_CLOSEST( 1463538732, -111.22930000, -38.41180000, 23.76593000 );
    if (DOES_OBJECT_EXIST( uVar2 ))
    {
        sub_426( "CCB", "Registering the dsMuseumRoofDoor_1 door.", 0 );
        REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( uVar2, "P_DR_RoofDr_H^1", 1 );
    }
    else
    {
        sub_426( "CCB", "The dsMuseumRoofDoor_1 object is NOT valid!!!", 0 );
        REGISTER_HIDE_ENTITY_AT_POSITION( 1463538732, -111.22930000, -38.41180000, 23.76593000 );
    }
    if (AUDIO_IS_MUSIC_PLAYING())
    {
        sub_426( "MF", "MUSIC: Suspending Music over 8s....", 0 );
        AUDIO_MUSIC_SUSPEND( 8000 );
    }
    SET_HIGHEST_ARCADE_LEVEL_UNLOCKED( 14 );
    CUTSCENE_REGISTER_SWITCH_TO_LEVEL_NAME( "s_hotel" );
    CUTSCENE_ENABLE_SKIP( 0 );
    AUD_ENABLE_PRE_BINK_SHUTDOWN( 1 );
    sub_426( "GA", "P_VC_1103_CutsceneRegistration end", 0 );
    return;
}

int sub_56326()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_885() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_885(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_56389( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_885(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_885(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_885(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

int sub_56389(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_56738(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_44275( (uParam0^)[I] );
    }
    return;
}

void sub_58179()
{
    unknown uVar2;

    if (l_U1065._fU52)
    {
        sub_426( "CR", "P_VC_1103_HandleCutscene Start", 0 );
        DISABLE_FADE_BETWEEN_SP_LEVELS();
        sub_58255( 1 );
        uVar2 = GET_WEAPON_FROM_HOLSTER( sub_885(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            SET_WEAPON_VISIBLE( uVar2, 0 );
        }
        sub_426( "CCB", "Setting the weather to SUNNY...", 0 );
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
    }
    return;
}

void sub_58255(unknown uParam0)
{
    unknown Result;

    Result = nil;
    if (sub_58283( GET_WEAPON_FROM_HAND( sub_885(), 0, 0 ) ))
    {
        Result = GET_WEAPON_FROM_HAND( sub_885(), 0, 0 );
        SELECT_WEAPON_TO_HAND( sub_885(), 0, 0, uParam0 );
    }
    return Result;
}

int sub_58283(unknown uParam0)
{
    int iVar3;
    int[25] iVar4;
    int I;

    iVar3 = GET_WEAPON_TYPE( uParam0 );
    array(ref iVar4, 25);
    iVar4[0] = 162573582;
    iVar4[1] = -1659006841;
    iVar4[2] = 879300975;
    iVar4[3] = 377623895;
    iVar4[4] = 319712764;
    iVar4[5] = 427207702;
    iVar4[6] = -110877124;
    iVar4[7] = -1013714740;
    iVar4[8] = -1074756423;
    iVar4[9] = 1308526797;
    iVar4[10] = 840671040;
    iVar4[11] = 57534114;
    iVar4[12] = 724901397;
    iVar4[13] = 1992962408;
    iVar4[14] = -1312131151;
    iVar4[15] = 434544317;
    iVar4[16] = -168327769;
    iVar4[17] = -184942895;
    iVar4[18] = 514118749;
    iVar4[19] = 1478009203;
    iVar4[20] = 1224272620;
    iVar4[21] = 10648147;
    iVar4[22] = -1787162676;
    iVar4[23] = -2075384407;
    iVar4[24] = 1001413062;
    for ( I = 0; I < iVar4; I++ )
    {
        if (iVar3 == iVar4[I])
        {
            return 1;
        }
    }
    return 0;
}

int sub_58770()
{
    return 1;
}

void sub_58791(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    sub_426( "MSWW", "CutSys_CreateStandaloneCutscene", "###" );
    return sub_58945( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam7, 0, 58868, 58886, 0, 58906, 58924, uParam6 );
}

void sub_58868()
{
    return;
}

int sub_58886()
{
    return 1;
}

void sub_58906()
{
    return;
}

int sub_58924()
{
    return 1;
}

void sub_58945(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_59223(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_426( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_426( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_426( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_426( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_426( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_426( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_53601( iParam0->_fU0, 0 );
            sub_426( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_2076( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_2076( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_426( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_60464( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_2076( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_2558( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_2558( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_60464(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_885() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_885(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_885(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_885(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_885(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_885(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_61123()
{
    sub_426( "GA", "P_RELEASE_VC_ASSETS start", 0 );
    sub_61172();
    sub_62041();
    sub_62772( ref l_U179, ref g_U1588 );
    sub_62839( ref l_U191, ref g_U1829 );
    sub_61252( "LEVEL_S_PAN_CP_07", ref g_U1975 );
    sub_63120( "SCRIPT_MISSION\S_PANA_VISITORS_CENTER", ref g_U3026 );
    sub_61252( "EXPL_CAM", ref g_U1975 );
    sub_426( "GA", "P_RELEASE_VC_ASSETS end", 0 );
    return;
}

void sub_61172()
{
    sub_426( "CR", "P_GLOBAL_UNLOAD_PISTOL_ANIMS - Start", 0 );
    sub_61252( "NPC_PSTL_CORE", ref g_U1975 );
    sub_61252( "NPC_PSTL_COVER", ref g_U1975 );
    sub_61252( "NPC_PSTL_COVER_ENTER", ref g_U1975 );
    sub_61252( "NPC_PSTL_COVER_RELOAD", ref g_U1975 );
    sub_61252( "NPC_PSTL_DODGE", ref g_U1975 );
    sub_61252( "NPC_PSTL_FLAVOR", ref g_U1975 );
    sub_61252( "NPC_PSTL_FULLBODY", ref g_U1975 );
    sub_61252( "NPC_PSTL_RELOAD", ref g_U1975 );
    sub_61252( "NPC_PSTL_SEARCH", ref g_U1975 );
    sub_61252( "NPC_PSTL_STAIRS", ref g_U1975 );
    sub_61252( "NPC_PSTL_REACT", ref g_U1975 );
    sub_61252( "AMED_PSTL_PRONE", ref g_U1975 );
    sub_61252( "PLGE_PSTL_CROUCH", ref g_U1975 );
    sub_61252( "PLGE_PSTL_CORE", ref g_U1975 );
    sub_61252( "PLGE_PSTL_CORE_RELOAD", ref g_U1975 );
    sub_61252( "PLGE_PSTL_HANDSIG", ref g_U1975 );
    sub_61252( "PLGE_PSTL_ACTIONS", ref g_U1975 );
    sub_61252( "PLGE_PSTL_KNEE", ref g_U1975 );
    sub_61252( "PLGE_PSTL_COVER", ref g_U1975 );
    sub_61252( "PLGE_PSTL_REACT", ref g_U1975 );
    sub_61252( "PLGE_PSTL_COVER_EXIT", ref g_U1975 );
    sub_426( "CR", "P_GLOBAL_UNLOAD_PISTOL_ANIMS - End", 0 );
    return;
}

void sub_61252(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_4883( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_62041()
{
    sub_426( "CR", "P_GLOBAL_UNLOAD_RIFLE_ANIMS - Start", 0 );
    sub_61252( "NPC_RIFLE_CORE", ref g_U1975 );
    sub_61252( "NPC_RIFLE_COVER", ref g_U1975 );
    sub_61252( "NPC_RIFLE_COVER_ENTER", ref g_U1975 );
    sub_61252( "NPC_RIFLE_COVER_RELOAD", ref g_U1975 );
    sub_61252( "NPC_RIFLE_DODGE", ref g_U1975 );
    sub_61252( "NPC_RIFLE_FLAVOR", ref g_U1975 );
    sub_61252( "NPC_RIFLE_FULLBODY", ref g_U1975 );
    sub_61252( "NPC_RIFLE_RELOAD", ref g_U1975 );
    sub_61252( "NPC_RIFLE_SEARCH", ref g_U1975 );
    sub_61252( "NPC_RIFLE_STAIRS", ref g_U1975 );
    sub_61252( "NPC_RIFLE_REACT", ref g_U1975 );
    sub_61252( "AMED_RIFL_PRONE", ref g_U1975 );
    sub_61252( "PLGE_RIFLE_CROUCH", ref g_U1975 );
    sub_61252( "PLGE_RIFLE_CORE", ref g_U1975 );
    sub_61252( "PLGE_RIFLE_CORE_RELOAD", ref g_U1975 );
    sub_61252( "PLGE_RIFLE_HANDSIG", ref g_U1975 );
    sub_61252( "PLGE_RIFLE_ACTIONS", ref g_U1975 );
    sub_61252( "PLGE_RIFLE_KNEE", ref g_U1975 );
    sub_61252( "PLGE_RIFLE_COVER", ref g_U1975 );
    sub_61252( "PLGE_RIFLE_REACT", ref g_U1975 );
    sub_61252( "PLGE_RIFLE_COVER_EXIT", ref g_U1975 );
    sub_426( "CR", "P_GLOBAL_UNLOAD_RIFLE_ANIMS - End", 0 );
    return;
}

void sub_62772(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_5148( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_62839(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_62874( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_62874(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_4883( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_63120(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_4883( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U20 = 0;
    l_U21 = 0;
    DO_SCREEN_FADE_IN( 0 );
    sub_36();
    while (true)
    {
        sub_2966();
        WAIT( 0 );
    }
    return;
}

void sub_36()
{
    StrCopy( ref l_U55[10], "11_01_PANAMA_Concat", 32 );
    StrCopy( ref l_U55[0], "11_01_PANAMA_SH01", 32 );
    StrCopy( ref l_U55[1], "11_01_PANAMA_SH02", 32 );
    StrCopy( ref l_U55[2], "11_01_PANAMA_SH03", 32 );
    StrCopy( ref l_U55[3], "11_01_PANAMA_SH04", 32 );
    StrCopy( ref l_U55[4], "11_01_PANAMA_SH05", 32 );
    StrCopy( ref l_U55[5], "11_01_PANAMA_SH06", 32 );
    StrCopy( ref l_U55[6], "11_01_PANAMA_SH07", 32 );
    StrCopy( ref l_U55[7], "11_01_PANAMA_SH08", 32 );
    StrCopy( ref l_U55[8], "11_01_PANAMA_SH10", 32 );
    StrCopy( ref l_U55[9], "11_01_PANAMA_SH11", 32 );
    StrCopy( ref l_U55[11], "11_01_PANAMA_PT1", 32 );
    StrCopy( ref l_U55[12], "11_01_PANAMA_PT1_1", 32 );
    StrCopy( ref l_U55[13], "11_01_PANAMA_PT2", 32 );
    StrCopy( ref l_U55[14], "11_01_PANAMA_PT3", 32 );
    StrCopy( ref l_U55[33], "11_02_PAN_INTRO_P1", 32 );
    StrCopy( ref l_U55[34], "11_02_PAN_INTRO_P2", 32 );
    StrCopy( ref l_U55[35], "11_02_PAN_INTRO_P3", 32 );
    StrCopy( ref l_U55[36], "11_02_PAN_OUT_PT1", 32 );
    StrCopy( ref l_U55[37], "11_02_PAN_OUT_PT2", 32 );
    StrCopy( ref l_U55[38], "11_02_PANAMA", 32 );
    StrCopy( ref l_U55[15], "11_02_PANAMA_concat", 32 );
    StrCopy( ref l_U55[16], "11_02_PANAMA_SH01", 32 );
    StrCopy( ref l_U55[17], "11_02_PANAMA_SH02", 32 );
    StrCopy( ref l_U55[18], "11_02_PANAMA_SH03", 32 );
    StrCopy( ref l_U55[19], "11_02_PANAMA_SH04", 32 );
    StrCopy( ref l_U55[20], "11_02_PANAMA_SH05", 32 );
    StrCopy( ref l_U55[21], "11_02_PANAMA_SH06", 32 );
    StrCopy( ref l_U55[22], "11_02_PANAMA_SH07", 32 );
    StrCopy( ref l_U55[23], "11_02_PANAMA_SH08", 32 );
    StrCopy( ref l_U55[24], "11_02_PANAMA_SH09", 32 );
    StrCopy( ref l_U55[25], "11_02_PANAMA_SH10", 32 );
    StrCopy( ref l_U55[26], "11_02_PANAMA_SH11", 32 );
    StrCopy( ref l_U55[27], "11_02_PANAMA_SH12", 32 );
    StrCopy( ref l_U55[28], "11_02_PANAMA_SH13", 32 );
    StrCopy( ref l_U55[29], "11_02_PANAMA_SH14", 32 );
    StrCopy( ref l_U55[30], "11_02_PANAMA_SH15", 32 );
    StrCopy( ref l_U55[31], "11_02_PANAMA_SH16", 32 );
    StrCopy( ref l_U55[32], "11_02_PANAMA_SH17", 32 );
    StrCopy( ref l_U55[39], "11_03_PANAMA", 32 );
    StrCopy( ref l_U55[40], "11_03_PANAMA_concat", 32 );
    StrCopy( ref l_U55[41], "11_03_PANAMA_SH01", 32 );
    StrCopy( ref l_U55[42], "11_03_PANAMA_SH02", 32 );
    StrCopy( ref l_U55[43], "11_03_PANAMA_SH03", 32 );
    StrCopy( ref l_U55[44], "MID_00_PANAMA", 32 );
    StrCopy( ref l_U55[45], "MID_00_PANAMA_concat", 32 );
    StrCopy( ref l_U55[46], "MID_00_PANAMA_sh1", 32 );
    StrCopy( ref l_U55[47], "MID_00_PANAMA_sh2", 32 );
    StrCopy( ref l_U55[48], "MID_01_PANAMA_concat", 32 );
    StrCopy( ref l_U55[49], "MID_01_PANAMA_PT1A", 32 );
    StrCopy( ref l_U55[50], "MID_01_PANAMA_PT1B", 32 );
    StrCopy( ref l_U55[51], "MID_01_PANAMA_PT2A", 32 );
    StrCopy( ref l_U55[52], "MID_01_PANAMA_PT2B", 32 );
    StrCopy( ref l_U55[53], "MID_01_PANAMA_PT2C", 32 );
    StrCopy( ref l_U55[54], "MID_01_PANAMA_SH01", 32 );
    StrCopy( ref l_U55[55], "MID_01_PANAMA_SH02", 32 );
    StrCopy( ref l_U55[56], "MID_01_PANAMA_SH03", 32 );
    StrCopy( ref l_U55[57], "MID_01_PANAMA_SH04", 32 );
    StrCopy( ref l_U55[58], "MID_01_PANAMA_SH05", 32 );
    StrCopy( ref l_U55[59], "MID_01_PANAMA_SH06", 32 );
    StrCopy( ref l_U55[60], "MID_01_PANAMA_SH07", 32 );
    StrCopy( ref l_U55[61], "MID_01_PANAMA_SH08", 32 );
    StrCopy( ref l_U55[62], "MID_01_PANAMA_SH09", 32 );
    StrCopy( ref l_U55[63], "MID_01_PANAMA_SH10", 32 );
    StrCopy( ref l_U55[64], "MID_01_PANAMA_SH11", 32 );
    StrCopy( ref l_U55[65], "MID_01_PANAMA_SH12", 32 );
    StrCopy( ref l_U55[66], "MID_01_PANAMA_SH13", 32 );
    StrCopy( ref l_U55[67], "MID_01_PANAMA_SH14", 32 );
    StrCopy( ref l_U55[68], "MID_01C_PANAMA", 32 );
    StrCopy( ref l_U55[69], "MID_02_PANAMA_A", 32 );
    StrCopy( ref l_U55[70], "MID_02_PANAMA_B", 32 );
    StrCopy( ref l_U55[71], "MID_02_PANAMA_concat", 32 );
    StrCopy( ref l_U55[72], "MID_02_PANAMA_SH01", 32 );
    StrCopy( ref l_U55[73], "MID_02_PANAMA_SH02", 32 );
    StrCopy( ref l_U55[74], "MID_02_PANAMA_SH03", 32 );
    StrCopy( ref l_U55[75], "MID_02_PANAMA_SH04", 32 );
    StrCopy( ref l_U55[76], "MID_02_PANAMA_SH05", 32 );
    StrCopy( ref l_U55[77], "MID_02B_PANAMA", 32 );
    StrCopy( ref l_U55[78], "MID_03_PANAMA_A", 32 );
    StrCopy( ref l_U55[79], "MID_03_PANAMA_B", 32 );
    StrCopy( ref l_U55[80], "MID_03_PANAMA_concat", 32 );
    StrCopy( ref l_U55[81], "MID_04_PANAMA_concat", 32 );
    StrCopy( ref l_U55[82], "MID_04_PANAMA_SH01", 32 );
    StrCopy( ref l_U55[83], "MID_04_PANAMA_SH02", 32 );
    StrCopy( ref l_U55[84], "MID_04_PANAMA_SH03", 32 );
    StrCopy( ref l_U55[85], "MID_04_PANAMA_SH04", 32 );
    StrCopy( ref l_U55[86], "MID_04_PANAMA_SH05", 32 );
    StrCopy( ref l_U55[87], "MID_04_PANAMA_PT1", 32 );
    StrCopy( ref l_U55[88], "MID_04_PANAMA_PT2", 32 );
    StrCopy( ref l_U55[89], "MID_04_PANAMA_PT3A", 32 );
    StrCopy( ref l_U55[90], "MID_04_PANAMA_PT3B", 32 );
    StrCopy( ref l_U55[91], "MID_04_PANAMA_PT3B_ALT1", 32 );
    StrCopy( ref l_U55[92], "MID_05A_PAN_ALT2", 32 );
    StrCopy( ref l_U55[93], "MID_05B_PAN_ALT2", 32 );
    StrCopy( ref l_U55[94], "MID_06_PANAMA", 32 );
    return;
}

void sub_2966()
{
    int I;

    if (NOT l_U26)
    {
        sub_3025( "AT", "Creating Panama Cutscene widget", 0 );
        START_WIDGET_GROUP( "PANAMA CUTSCENES" );
        START_NEW_WIDGET_COMBO();
        for ( I = 0; I < 95; I++ )
        {
            ADD_TO_WIDGET_COMBO( ref l_U55[I] );
        }
        STOP_WIDGET_COMBO( "Cutscene to play: ", ref l_U25 );
        ADD_WIDGET_STRING( " " );
        ADD_WIDGET_BOOL( "Play Cutscene", ref l_U23 );
        ADD_WIDGET_BOOL( "Capture Cutscene", ref l_U24 );
        STOP_WIDGET_GROUP();
        l_U26 = 1;
    }
    if (l_U23)
    {
        l_U54 = l_U25;
        sub_3277( ref l_U54 );
        l_U23 = 0;
    }
    return;
}

void sub_3025(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_3277(unknown uParam0)
{
    sub_3297( ref l_U55[(uParam0^)], 1 );
    if (((uParam0^) == 9) || (((uParam0^) == 8) || (((uParam0^) == 7) || (((uParam0^) == 6) || (((uParam0^) == 5) || (((uParam0^) == 4) || (((uParam0^) == 3) || (((uParam0^) == 2) || (((uParam0^) == 1) || (((uParam0^) == 0) || (((uParam0^) == 14) || (((uParam0^) == 13) || (((uParam0^) == 12) || (((uParam0^) == 11) || ((uParam0^) == 10)))))))))))))))
    {
        sub_3641( uParam0 );
        sub_6418( ref l_U27, ref l_U55[(uParam0^)], 5766, 5783, 6381, 6397, 250, 0 );
    }
    if (((uParam0^) == 32) || (((uParam0^) == 31) || (((uParam0^) == 30) || (((uParam0^) == 29) || (((uParam0^) == 28) || (((uParam0^) == 27) || (((uParam0^) == 26) || (((uParam0^) == 25) || (((uParam0^) == 24) || (((uParam0^) == 23) || (((uParam0^) == 22) || (((uParam0^) == 21) || (((uParam0^) == 20) || (((uParam0^) == 19) || (((uParam0^) == 18) || (((uParam0^) == 17) || (((uParam0^) == 16) || (((uParam0^) == 15) || (((uParam0^) == 38) || (((uParam0^) == 37) || (((uParam0^) == 36) || (((uParam0^) == 35) || (((uParam0^) == 34) || ((uParam0^) == 33))))))))))))))))))))))))
    {
        sub_6994( uParam0 );
        sub_6418( ref l_U27, ref l_U55[(uParam0^)], 5766, 8671, 6381, 6397, 250, 0 );
    }
    if (((uParam0^) == 43) || (((uParam0^) == 42) || (((uParam0^) == 41) || (((uParam0^) == 40) || ((uParam0^) == 39)))))
    {
        sub_6418( ref l_U27, ref l_U55[(uParam0^)], 9372, 9777, 6381, 6397, 250, 0 );
    }
    if (((uParam0^) == 47) || (((uParam0^) == 46) || (((uParam0^) == 45) || ((uParam0^) == 44))))
    {
        sub_6418( ref l_U27, ref l_U55[(uParam0^)], 10393, 10483, 6381, 6397, 250, 0 );
    }
    if (((uParam0^) == 67) || (((uParam0^) == 66) || (((uParam0^) == 65) || (((uParam0^) == 64) || (((uParam0^) == 63) || (((uParam0^) == 62) || (((uParam0^) == 61) || (((uParam0^) == 60) || (((uParam0^) == 59) || (((uParam0^) == 58) || (((uParam0^) == 57) || (((uParam0^) == 56) || (((uParam0^) == 55) || (((uParam0^) == 54) || (((uParam0^) == 53) || (((uParam0^) == 52) || (((uParam0^) == 51) || (((uParam0^) == 50) || (((uParam0^) == 49) || ((uParam0^) == 48))))))))))))))))))))
    {
        sub_10752( uParam0 );
        sub_6418( ref l_U27, ref l_U55[(uParam0^)], 5766, 11150, 6381, 6397, 250, 0 );
    }
    if ((uParam0^) == 68)
    {
        sub_6418( ref l_U27, ref l_U55[(uParam0^)], 5766, 11391, 6381, 6397, 250, 0 );
    }
    if (((uParam0^) == 76) || (((uParam0^) == 75) || (((uParam0^) == 74) || (((uParam0^) == 73) || (((uParam0^) == 72) || (((uParam0^) == 71) || (((uParam0^) == 70) || ((uParam0^) == 69))))))))
    {
        sub_11519( uParam0 );
        sub_6418( ref l_U27, ref l_U55[(uParam0^)], 5766, 11728, 6381, 6397, 250, 0 );
    }
    if ((uParam0^) == 77)
    {
        sub_6418( ref l_U27, ref l_U55[(uParam0^)], 5766, 11391, 6381, 6397, 250, 0 );
    }
    if (((uParam0^) == 80) || (((uParam0^) == 79) || ((uParam0^) == 78)))
    {
        sub_12048( uParam0 );
        sub_6418( ref l_U27, ref l_U55[(uParam0^)], 5766, 12538, 6381, 6397, 250, 0 );
    }
    if (((uParam0^) == 91) || (((uParam0^) == 90) || (((uParam0^) == 89) || (((uParam0^) == 88) || (((uParam0^) == 87) || (((uParam0^) == 86) || (((uParam0^) == 85) || (((uParam0^) == 84) || (((uParam0^) == 83) || (((uParam0^) == 82) || ((uParam0^) == 81)))))))))))
    {
        sub_12945( uParam0 );
        sub_6418( ref l_U27, ref l_U55[(uParam0^)], 5766, 13823, 6381, 6397, 250, 0 );
    }
    if (((uParam0^) == 93) || ((uParam0^) == 92))
    {
        sub_6418( ref l_U27, ref l_U55[(uParam0^)], 14224, 14327, 6381, 6397, 250, 0 );
    }
    if ((uParam0^) == 94)
    {
        sub_6418( ref l_U27, ref l_U55[(uParam0^)], 14457, 14560, 6381, 6397, 250, 0 );
    }
    if (l_U24)
    {
        sub_4636( ref l_U55[(uParam0^)] );
        START_CUTSCENE_CAPTURE( ref l_U55[(uParam0^)] );
    }
    l_U27._fU4 = 2;
    while (NOT (sub_14713( ref l_U27 )))
    {
        WAIT( 0 );
        sub_4636( "HANDLING csys_Panama_ImgMetrics..." );
    }
    while (NOT HAS_CUTSCENE_UNLOADED())
    {
        WAIT( 0 );
    }
    if (l_U24)
    {
        sub_4636( ref l_U55[(uParam0^)] );
        STOP_CUTSCENE_CAPTURE();
        l_U24 = 0;
    }
    return;
}

void sub_3297(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

int sub_3641(unknown uParam0)
{
    int I;

    sub_3685( ref l_U826[0], 0.00000000, 0.00000000, 0.00000000, 0, 954817846, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U826[1], 0.00000000, 0.00000000, 0.00000000, 0, -266727822, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U826[2], 0.00000000, 0.00000000, 0.00000000, 0, -454789158, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U826[3], 0.00000000, 0.00000000, 0.00000000, 0, -1468341003, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U826[4], 0.00000000, 0.00000000, 0.00000000, 0, 594429392, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U826[5], 0.00000000, 0.00000000, 0.00000000, 0, -1120990114, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U826[6], 0.00000000, 0.00000000, 0.00000000, 0, -1874399280, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U826[7], 0.00000000, 0.00000000, 0.00000000, 0, 1535496661, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U826[8], 0.00000000, 0.00000000, 0.00000000, 0, -1669148536, 7, 3, 2, 0, 0 );
    if (g_U833 == 32)
    {
        if (sub_4185( sub_4118(), 0 ))
        {
            REMOVE_ALL_PED_WEAPONS( sub_4118() );
            sub_4320( sub_4118(), -1464892298, 0, 25000, 1 );
        }
    }
    if (((uParam0^) == 3) || (((uParam0^) == 1) || (((uParam0^) == 0) || (((uParam0^) == 11) || ((uParam0^) == 10)))))
    {
        for ( I = 0; I < l_U816; I++ )
        {
            l_U816[I] = sub_4723( ref l_U826[I] );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U816[I], 1 );
        }
    }
    if ((uParam0^) == 12)
    {
        l_U816[3] = sub_4723( ref l_U826[3] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U816[3], 1 );
        l_U816[7] = sub_4723( ref l_U826[7] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U816[7], 1 );
    }
    if ((uParam0^) == 2)
    {
        l_U816[3] = sub_4723( ref l_U826[3] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U816[3], 1 );
        l_U816[7] = sub_4723( ref l_U826[6] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U816[6], 1 );
    }
    WAIT( 500 );
    return 1;
}

void sub_3685(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

int sub_4118()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_4140() );
    }
    return 0;
}

void sub_4140()
{
    return GET_PLAYER_ID();
}

void sub_4185(unknown uParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((DOES_PED_EXIST( uParam0 )) == 1)
    {
        Result = 1;
    }
    else
    {
        Result = 0;
    }
    if (Result == 1)
    {
        if ((IS_PED_DEAD( uParam0 )) == 1)
        {
            if (iParam1 == 1)
            {
                Result = 1;
            }
            else
            {
                Result = 0;
            }
        }
        else
        {
            Result = 1;
        }
    }
    return Result;
}

void sub_4320(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_4636( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_4636(unknown uParam0)
{
    return;
}

void sub_4723(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_4893( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_5362( iParam0->_fU40 );
    sub_5442( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_4893(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_4636( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_5362(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_5442(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

int sub_5766()
{
    return 1;
}

void sub_5783()
{
    if ((sub_4185( l_U816[0], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U816[0], "FB_Daph_Yaht", 1 );
    }
    if ((sub_4185( l_U816[1], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U816[1], "Marc_Yaht", 1 );
    }
    if ((sub_4185( l_U816[2], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U816[2], "Pass_Yaht", 1 );
    }
    if ((sub_4185( l_U816[3], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U816[3], "M_PA_MISC_A", 1 );
    }
    if ((sub_4185( l_U816[4], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U816[4], "M_PA_MISC_A^1", 1 );
    }
    if ((sub_4185( l_U816[5], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U816[5], "M_PA_MISC_A^2", 1 );
    }
    if ((sub_4185( l_U816[6], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U816[6], "F_PA_MISC_A", 1 );
    }
    if ((sub_4185( l_U816[7], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U816[7], "F_PA_MISC_A^2", 1 );
    }
    if ((sub_4185( l_U816[8], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U816[8], "F_PA_MISC_A^1", 1 );
    }
    if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_4118(), 0 ) ))
    {
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HOLSTER( sub_4118(), 0 ), "W_PI_PT92_Aa_H", 1 );
    }
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U3713[1]._fU0, g_U3713[1]._fU4 ), "P_DR_BedRom_Ah_H", 0 );
    return;
}

void sub_6381()
{
    return;
}

int sub_6397()
{
    return 1;
}

void sub_6418(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    sub_3025( "MSWW", "CutSys_CreateStandaloneCutscene", "###" );
    return sub_6564( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam7, 0, 6495, 6511, 0, 6529, 6545, uParam6 );
}

void sub_6495()
{
    return;
}

int sub_6511()
{
    return 1;
}

void sub_6529()
{
    return;
}

int sub_6545()
{
    return 1;
}

void sub_6564(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

int sub_6994(unknown uParam0)
{
    int I;

    sub_3685( ref l_U951[0], 0.00000000, 0.00000000, 0.00000000, 0, -266727822, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U951[1], 0.00000000, 0.00000000, 0.00000000, 0, -454789158, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U951[2], 0.00000000, 0.00000000, 0.00000000, 0, -1133377339, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U951[3], 0.00000000, 0.00000000, 0.00000000, 0, 1454680750, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U951[4], 0.00000000, 0.00000000, 0.00000000, 0, -365193942, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U951[5], 0.00000000, 0.00000000, 0.00000000, 0, -1380862096, 7, 3, 2, 0, 0 );
    if (((uParam0^) == 23) || (((uParam0^) == 21) || (((uParam0^) == 17) || ((uParam0^) == 38))))
    {
        l_U944[0] = sub_4723( ref l_U951[0] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U944[0], 1 );
        l_U944[1] = sub_4723( ref l_U951[1] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U944[1], 1 );
    }
    if (((uParam0^) == 26) || ((uParam0^) == 24))
    {
        l_U944[0] = sub_4723( ref l_U951[1] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U944[1], 1 );
    }
    if ((uParam0^) == 25)
    {
        l_U944[2] = sub_4723( ref l_U951[2] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U944[2], 1 );
        l_U944[3] = sub_4723( ref l_U951[3] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U944[3], 1 );
        l_U944[4] = sub_4723( ref l_U951[4] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U944[4], 1 );
        l_U944[5] = sub_4723( ref l_U951[5] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U944[5], 1 );
    }
    if (((uParam0^) == 32) || (((uParam0^) == 31) || ((uParam0^) == 27)))
    {
        l_U944[1] = sub_4723( ref l_U951[1] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U944[1], 1 );
        l_U944[2] = sub_4723( ref l_U951[2] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U944[2], 1 );
        l_U944[3] = sub_4723( ref l_U951[3] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U944[3], 1 );
        l_U944[4] = sub_4723( ref l_U951[4] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U944[4], 1 );
    }
    if (((uParam0^) == 30) || (((uParam0^) == 29) || ((uParam0^) == 28)))
    {
        l_U944[2] = sub_4723( ref l_U951[2] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U944[2], 1 );
        l_U944[3] = sub_4723( ref l_U951[3] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U944[3], 1 );
        l_U944[4] = sub_4723( ref l_U951[4] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U944[4], 1 );
    }
    if ((uParam0^) == 15)
    {
        for ( I = 0; I < l_U944; I++ )
        {
            l_U944[I] = sub_4723( ref l_U951[I] );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U944[I], 1 );
        }
    }
    if ((uParam0^) == 37)
    {
        l_U944[1] = sub_4723( ref l_U951[1] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U944[1], 1 );
    }
    if (g_U833 == 32)
    {
        if (sub_4185( sub_4118(), 0 ))
        {
            REMOVE_ALL_PED_WEAPONS( sub_4118() );
            sub_4320( sub_4118(), -1464892298, 0, 25000, 1 );
        }
        if (sub_4185( l_U944[1], 0 ))
        {
            REMOVE_ALL_PED_WEAPONS( l_U944[1] );
            sub_8083( l_U944[1], 68019059, 25000, 0, 1 );
        }
        if (sub_4185( l_U944[2], 0 ))
        {
            REMOVE_ALL_PED_WEAPONS( l_U944[2] );
            sub_8083( l_U944[2], 1308526797, 25000, 0, 1 );
        }
        if (sub_4185( l_U944[3], 0 ))
        {
            REMOVE_ALL_PED_WEAPONS( l_U944[3] );
            sub_8083( l_U944[3], 1308526797, 25000, 0, 1 );
        }
        if (sub_4185( l_U944[4], 0 ))
        {
            REMOVE_ALL_PED_WEAPONS( l_U944[4] );
            sub_8083( l_U944[4], 1308526797, 25000, 0, 1 );
        }
        if (sub_4185( l_U944[5], 0 ))
        {
            REMOVE_ALL_PED_WEAPONS( l_U944[5] );
            sub_8083( l_U944[5], 1308526797, 25000, 0, 1 );
        }
    }
    WAIT( 500 );
    return 1;
}

void sub_8083(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_4636( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_8671()
{
    if ((sub_4185( l_U944[0], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U944[0], "Marc_Yaht", 1 );
    }
    if ((sub_4185( l_U944[1], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U944[1], "Pass_Yaht", 1 );
    }
    if ((sub_4185( l_U944[2], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U944[2], "M_PA_REBL_E", 1 );
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( l_U944[2], 0, 0 ) ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U944[2], 0, 0 ), "W_AR_97LC_Aa_H", 1 );
        }
    }
    if ((sub_4185( l_U944[3], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U944[3], "M_PA_REBL_E^1", 1 );
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( l_U944[3], 0, 0 ) ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U944[3], 0, 0 ), "W_AR_97LC_Aa_H^1", 1 );
        }
    }
    if ((sub_4185( l_U944[4], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U944[4], "M_PA_REBL_E^2", 1 );
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( l_U944[4], 0, 0 ) ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U944[4], 0, 0 ), "W_AR_97LC_Aa_H^2", 1 );
        }
    }
    if ((sub_4185( l_U944[5], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U944[5], "M_PA_REBL_E^3", 1 );
    }
    if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_4118(), 0 ) ))
    {
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HOLSTER( sub_4118(), 0 ), "W_PI_PT92_Aa_H", 1 );
    }
    return;
}

int sub_9372()
{
    int I;

    sub_3685( ref l_U1039[0], 0.00000000, 0.00000000, 0.00000000, 0, -454789158, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U1039[1], 0.00000000, 0.00000000, 0.00000000, 0, 212786871, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U1039[2], 0.00000000, 0.00000000, 0.00000000, 0, -1798744153, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U1039[3], 0.00000000, 0.00000000, 0.00000000, 0, -2069976983, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U1039[4], 0.00000000, 0.00000000, 0.00000000, 0, 811060514, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U1039[5], 0.00000000, 0.00000000, 0.00000000, 0, 1234277204, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U1039[6], 0.00000000, 0.00000000, 0.00000000, 0, 463701472, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U1039[7], 0.00000000, 0.00000000, 0.00000000, 0, -2099387653, 7, 3, 2, 0, 0 );
    for ( I = 0; I < l_U1030; I++ )
    {
        l_U1030[I] = sub_4723( ref l_U1039[I] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1030[I], 1 );
    }
    WAIT( 500 );
    return 1;
}

void sub_9777()
{
    if ((sub_4185( l_U1030[0], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1030[0], "Pass_Yacht", 1 );
    }
    if ((sub_4185( l_U1030[1], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1030[1], "FB_Daph_Yacht", 1 );
    }
    if ((sub_4185( l_U1030[2], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1030[2], "M_PA_MISC_B", 1 );
    }
    if ((sub_4185( l_U1030[3], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1030[3], "M_PA_MISC_B^1", 1 );
    }
    if ((sub_4185( l_U1030[4], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1030[4], "M_PA_MISC_B^2", 1 );
    }
    if ((sub_4185( l_U1030[5], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1030[5], "M_PA_MISC_B^3", 1 );
    }
    if ((sub_4185( l_U1030[6], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1030[6], "F_PA_MISC_D", 1 );
    }
    if ((sub_4185( l_U1030[7], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1030[7], "F_PA_MISC_D^1", 1 );
    }
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U3969._fU0, g_U3969._fU4 ), "P_DR_RoofDr_H", 0 );
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U3962._fU0, g_U3962._fU4 ), "P_DR_RoofDr_H^1", 0 );
    return;
}

int sub_10393()
{
    sub_3685( ref l_U1145, 0.00000000, 0.00000000, 0.00000000, 0, 1598522081, 7, 3, 2, 0, 0 );
    l_U1144 = sub_4723( ref l_U1145 );
    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1144, 1 );
    WAIT( 500 );
    return 1;
}

void sub_10483()
{
    if ((sub_4185( l_U1144, 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1144, "M_PA_REBL_A", 1 );
    }
    return;
}

int sub_10752(unknown uParam0)
{
    int I;

    sub_3685( ref l_U1162[0], 38.60815000, 6.01424200, -1.11228500, 0, 1598522081, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U1162[1], 38.84289000, 4.23026800, -1.11274800, 0, 270644968, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U1162[2], 38.95839000, 2.35947500, -0.90350300, 0, 636894405, 7, 3, 2, 0, 0 );
    if (((uParam0^) == 67) || (((uParam0^) == 66) || (((uParam0^) == 65) || (((uParam0^) == 64) || (((uParam0^) == 63) || (((uParam0^) == 62) || (((uParam0^) == 61) || (((uParam0^) == 60) || (((uParam0^) == 59) || (((uParam0^) == 58) || (((uParam0^) == 57) || (((uParam0^) == 56) || (((uParam0^) == 55) || (((uParam0^) == 53) || (((uParam0^) == 52) || (((uParam0^) == 51) || (((uParam0^) == 50) || ((uParam0^) == 48))))))))))))))))))
    {
        for ( I = 0; I < l_U1162; I++ )
        {
            l_U1158[I] = sub_4723( ref l_U1162[I] );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1158[I], 1 );
            SET_ROOM_FOR_PED_BY_NAME( l_U1158[I], ref g_U3215 );
        }
    }
    WAIT( 500 );
    return 1;
}

void sub_11150()
{
    if ((sub_4185( l_U1158[0], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1158[0], "M_PA_REBL_A", 1 );
    }
    if ((sub_4185( l_U1158[1], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1158[1], "M_PA_REBL_A^1", 1 );
    }
    if ((sub_4185( l_U1158[2], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1158[2], "M_PA_REBL_A^2", 1 );
    }
    return;
}

void sub_11391()
{
    return;
}

int sub_11519(unknown uParam0)
{
    int I;

    sub_3685( ref l_U1205[0], -0.03000000, 8.29000000, 2.17000000, 0, 1397855684, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U1205[1], 2.23000000, 2.69000000, 2.17000000, 0, 481632845, 7, 3, 2, 0, 0 );
    for ( I = 0; I < l_U1205; I++ )
    {
        l_U1202[I] = sub_4723( ref l_U1205[I] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1202[I], 1 );
        SET_ROOM_FOR_PED_BY_NAME( l_U1202[I], ref g_U3239 );
    }
    WAIT( 500 );
    return 1;
}

void sub_11728()
{
    if ((sub_4185( l_U1202[0], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1202[0], "M_PA_REBL_B", 1 );
    }
    if ((sub_4185( l_U1202[1], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1202[1], "M_PA_REBL_B^1", 1 );
    }
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U3777[0]._fU0, g_U3777[0]._fU4 ), "P_DR_YtDoorDk04_no", 0 );
    return;
}

int sub_12048(unknown uParam0)
{
    int I;

    sub_3685( ref l_U1238[0], -58.96000000, 30.40000000, 7.95000000, 0, -454789158, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U1238[1], -100.73000000, 30.68000000, 15.05000000, 0, -1133377339, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U1238[2], -102.95000000, 26.10000000, 15.05000000, 0, 1454680750, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U1238[3], -104.42000000, 21.24000000, 15.07000000, 0, -365193942, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U1238[4], -58.96000000, 30.40000000, 7.95000000, 0, -266727822, 7, 3, 2, 0, 0 );
    if ((uParam0^) == 80)
    {
        for ( I = 0; I < l_U1238; I++ )
        {
            l_U1232[I] = sub_4723( ref l_U1238[I] );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1232[I], 1 );
        }
    }
    else if ((uParam0^) == 78)
    {
        l_U1232[0] = sub_4723( ref l_U1238[0] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1232[0], 1 );
    }
    else if ((uParam0^) == 79)
    {
        l_U1232[1] = sub_4723( ref l_U1238[1] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1232[1], 1 );
        l_U1232[2] = sub_4723( ref l_U1238[2] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1232[2], 1 );
        l_U1232[3] = sub_4723( ref l_U1238[3] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1232[3], 1 );
    };;;
    return 1;
}

void sub_12538()
{
    if ((sub_4185( l_U1232[0], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1232[0], "Pass_Yaht", 1 );
    }
    if ((sub_4185( l_U1232[1], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1232[1], "M_PA_REBL_E", 1 );
    }
    if ((sub_4185( l_U1232[2], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1232[2], "M_PA_REBL_E^1", 1 );
    }
    if ((sub_4185( l_U1232[3], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1232[3], "M_PA_REBL_E^2", 1 );
    }
    if ((sub_4185( l_U1232[4], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1232[4], "MARC_YAHT", 1 );
    }
    return;
}

int sub_12945(unknown uParam0)
{
    int I;

    sub_3685( ref l_U1311[0], -58.96000000, 30.40000000, 7.95000000, 0, -454789158, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U1311[1], -100.73000000, 30.68000000, 15.05000000, 0, -2109614539, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U1311[2], -102.95000000, 26.10000000, 15.05000000, 0, -261936161, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U1311[3], -104.42000000, 21.24000000, 15.07000000, 0, -376400271, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U1311[4], -107.95000000, 26.10000000, 8.25000000, 0, -1467540445, 7, 3, 2, 0, 0 );
    sub_3685( ref l_U1311[5], -104.42000000, 21.24000000, 8.27000000, 0, 1423764257, 7, 3, 2, 0, 0 );
    if ((uParam0^) == 81)
    {
        for ( I = 0; I < l_U1311; I++ )
        {
            l_U1304[I] = sub_4723( ref l_U1311[I] );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1304[I], 1 );
            SET_ROOM_FOR_PED_BY_NAME( l_U1304[I], ref g_U3239 );
        }
    }
    if (((uParam0^) == 86) || (((uParam0^) == 83) || (((uParam0^) == 82) || (((uParam0^) == 88) || ((uParam0^) == 87)))))
    {
        l_U1304[0] = sub_4723( ref l_U1311[0] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1304[0], 1 );
    }
    if ((uParam0^) == 84)
    {
        l_U1304[1] = sub_4723( ref l_U1311[1] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1304[1], 1 );
        l_U1304[2] = sub_4723( ref l_U1311[2] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1304[2], 1 );
    }
    if ((uParam0^) == 85)
    {
        l_U1304[1] = sub_4723( ref l_U1311[1] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1304[1], 1 );
        l_U1304[2] = sub_4723( ref l_U1311[2] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1304[2], 1 );
        l_U1304[3] = sub_4723( ref l_U1311[3] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1304[3], 1 );
    }
    if ((uParam0^) == 89)
    {
        l_U1304[4] = sub_4723( ref l_U1311[4] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1304[4], 1 );
        l_U1304[5] = sub_4723( ref l_U1311[5] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1304[5], 1 );
    }
    if (((uParam0^) == 91) || ((uParam0^) == 90))
    {
        l_U1304[1] = sub_4723( ref l_U1311[1] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1304[1], 1 );
        l_U1304[2] = sub_4723( ref l_U1311[2] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1304[2], 1 );
        l_U1304[3] = sub_4723( ref l_U1311[3] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1304[3], 1 );
    }
    WAIT( 500 );
    return 1;
}

void sub_13823()
{
    if ((sub_4185( l_U1304[0], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1304[0], "Pass_Yaht", 1 );
    }
    if ((sub_4185( l_U1304[1], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1304[1], "M_PA_REBL_E", 1 );
    }
    if ((sub_4185( l_U1304[2], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1304[2], "M_PA_REBL_E^1", 1 );
    }
    if ((sub_4185( l_U1304[3], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1304[3], "M_PA_REBL_E^2", 1 );
    }
    if ((sub_4185( l_U1304[4], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1304[4], "M_PA_REBL_E^3", 1 );
    }
    if ((sub_4185( l_U1304[5], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1304[5], "M_PA_REBL_E^4", 1 );
    }
    return;
}

int sub_14224()
{
    sub_3685( ref l_U1392[0], -58.96000000, 30.40000000, 7.95000000, 0, -454789158, 7, 3, 2, 0, 0 );
    l_U1390[0] = sub_4723( ref l_U1392[0] );
    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1390[0], 1 );
    WAIT( 500 );
    return 1;
}

void sub_14327()
{
    if ((sub_4185( l_U1390[0], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1390[0], "Pass_Yaht", 1 );
    }
    return;
}

int sub_14457()
{
    sub_3685( ref l_U1408[0], -58.96000000, 30.40000000, 7.95000000, 0, -454789158, 7, 3, 2, 0, 0 );
    l_U1406[0] = sub_4723( ref l_U1408[0] );
    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1406[0], 1 );
    WAIT( 500 );
    return 1;
}

void sub_14560()
{
    if ((sub_4185( l_U1406[0], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1406[0], "Pass_Yaht", 1 );
    }
    return;
}

void sub_14713(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_3025( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_3025( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_3025( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_3025( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_3025( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_3025( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_3297( iParam0->_fU0, 0 );
            sub_3025( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_15580( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_15580( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_3025( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_16108( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_15580( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_16457( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_16457( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_15580(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_4118() )))
        {
            SET_PLAYER_CONTROL( sub_4140(), 0, uParam2 );
            SET_PED_DUCKING( sub_4118(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_4118() );
            }
            SET_PED_INVINCIBLE( sub_4118(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_16108(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_4118() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_4118(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_4118(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_4118(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_4118(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_4118(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_16457(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_4118() )))
    {
        SET_PLAYER_CONTROL( sub_4140(), 1, 0 );
        SET_PED_INVINCIBLE( sub_4118(), 0 );
        if (bParam0)
        {
            sub_16538();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_16538()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_4118() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_4118(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_4118(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_4118(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_4118(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}


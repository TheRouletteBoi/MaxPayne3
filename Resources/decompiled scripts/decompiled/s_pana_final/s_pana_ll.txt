void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U40 = 0;
    l_U41 = 0;
    l_U42 = 1500;
    l_U52 = {0, 0, 0};
    StrCopy( ref l_U55, "DUMMY", 32 );
    l_U63 = 1;
    l_U68 = 0;
    l_U69 = 0;
    l_U70 = 0;
    l_U73 = 0;
    l_U136 = -1;
    l_U137 = {64536, 64536, 64536};
    l_U185 = 0;
    l_U187 = 0;
    l_U216 = {-43.15000000, -2.60000000, 0.28000000};
    l_U230 = -1;
    l_U783 = {-38.45000000, 0.00000000, 1.72200000};
    l_U786 = -85.00000000;
    l_U787 = 5000;
    l_U927 = {-47.40000000, 9.20000000, 1.10000000};
    l_U930 = 90.00000000;
    l_U931 = 6000;
    sub_471( "SP", "Script s_pana_LL.sc is starting up...", 0 );
    sub_520();
    l_U185 = 1;
    while (NOT IS_EXITFLAG_SET())
    {
        sub_744();
        if (l_U187 == 0)
        {
            sub_9051();
        }
        WAIT( 0 );
    }
    sub_3271();
    sub_61315();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_pana_LL" );
    sub_471( "SP", "Script s_pana_LL.sc is terminating...", 0 );
    return;
}

void sub_471(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_520()
{
    sub_471( "GA", "P_LL_POPULATE_VARIABLE_ARRAYS start", 0 );
    l_U176[0] = g_U1514;
    l_U176[1] = g_U1537;
    l_U176[2] = g_U827;
    l_U176[3] = -1409914275;
    l_U181[0] = -1464892298;
    l_U181[1] = -612753081;
    l_U181[2] = -1404433099;
    sub_471( "GA", "P_LL_POPULATE_VARIABLE_ARRAYS end", 0 );
    return;
}

void sub_744()
{
    if ((g_U834 == 0) || (g_U834 == 1))
    {
        switch (l_U187)
        {
            case 0:
            if ((sub_907()) || (IS_PED_DEAD( sub_834() )))
            {
                l_U187 = 1;
                sub_471( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_1401())
            {
                if ((g_U835[2]._fU40 != 4) AND (g_U835[2]._fU40 != 0))
                {
                    sub_471( "GA", "Shutting down script for Visitor Center.", 0 );
                    sub_1524( ref g_U835[2] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U835[2]._fU32 );
                }
                l_U187 = 3;
            }
            else if ((sub_1589( 0 )) == 1)
            {
                if ((g_U835[2]._fU40 != 4) AND (g_U835[2]._fU40 != 0))
                {
                    sub_471( "GA", "Shutting down script for Visitor Center.", 0 );
                    sub_1524( ref g_U835[2] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U835[2]._fU32 );
                }
                l_U187 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_834() )))
            {
                l_U187 = 3;
                sub_471( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_471( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_834() ))) AND (NOT (IS_PLAYER_DEAD( sub_856() ))))
            {
                SET_PLAYER_CONTROL( sub_856(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_834() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_834(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            sub_3271();
            SET_INTERIOR_ACTIVE( GET_INTERIOR_FROM_NAME( "Deck1", 0 ), 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( GET_INTERIOR_FROM_NAME( "Deck1", 0 ), GET_HASH_KEY( ref g_U3135 ) );
            l_U187 = 4;
            sub_471( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_471( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            if (l_U140._fU0)
            {
                sub_4835( ref l_U140, sub_834() );
            }
            l_U187 = 5;
            sub_471( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_471( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U185 = 1;
            l_U187 = 0;
            sub_471( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_834()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_856() );
    }
    return 0;
}

void sub_856()
{
    return GET_PLAYER_ID();
}

int sub_907()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_834() )))
        {
            SET_PED_FORCED_TO_WALK( sub_834(), 0 );
            SET_PLAYER_FORCED_AIM( sub_856(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_856(), 1 );
            if ((IS_PED_VISIBLE( sub_834() )) == 0)
            {
                SET_PED_VISIBLE( sub_834(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_1401()
{
    return g_U648;
}

void sub_1524(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

int sub_1589(int iParam0)
{
    iParam0 = 1;
    switch (l_U41)
    {
        case 0:
        if (NOT (sub_1650( ref l_U43 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_834() )))
            {
                l_U42 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_1760( ref l_U43, l_U42, 1, 1 );
            sub_1896( ref l_U43 );
        }
        if (sub_2016( ref l_U43 ))
        {
            sub_471( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_834() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_856() )))
            {
                SET_PLAYER_CONTROL( sub_856(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U41 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U41 = 2;
            }
            else
            {
                l_U41 = 3;
            }
        }
        break;
        case 2:
        sub_471( "NS", "Player will QUIT", 0 );
        sub_2503();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_471( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_2503();
        return 1;
        break;
    }
    return 0;
}

int sub_1650(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_1760(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_1896(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_2016(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_2503()
{
    sub_471( "NS", "P_PostFailRetryCleanup", 0 );
    sub_2553( ref l_U43 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_856() )))
    {
        SET_PLAYER_CONTROL( sub_856(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U40 = 0;
    l_U40 = l_U40;
    l_U41 = 0;
    return;
}

void sub_2553(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_3271()
{
    sub_471( "GA", "P_CLEANUP_LL start", 0 );
    ISEQ_TERMINATE( -929423363 );
    sub_3334( -929423363, ref g_U1878 );
    ISEQ_TERMINATE( 945770955 );
    sub_3334( 945770955, ref g_U1878 );
    ISEQ_TERMINATE( 995399098 );
    sub_3334( 995399098, ref g_U1878 );
    sub_3760( l_U230, 0 );
    sub_3923( ref l_U230 );
    if ((CUTSCENE_NAMED_IS_LOADING( "MID_00_PANAMA_SH01" )) || (CUTSCENE_IS_LOADED( "MID_00_PANAMA_SH01" )))
    {
        CLEAR_NAMED_CUTSCENE( "MID_00_PANAMA_SH01" );
    }
    sub_4195( ref l_U388 );
    sub_4195( ref l_U455 );
    sub_4229( l_U529 );
    sub_4229( l_U543 );
    sub_4229( l_U557 );
    sub_4366( l_U215 );
    sub_4411( l_U333 );
    sub_4411( l_U334 );
    sub_4411( g_U719._fU0 );
    sub_4476();
    sub_471( "GA", "P_CLEANUP_LL end", 0 );
    return;
}

void sub_3334(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_3446( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

int sub_3446(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_3760(int iParam0, unknown uParam1)
{
    if (iParam0 != -1)
    {
        sub_471( "MF", "P_SAFE_STOP_SOUND: Stopping Sound...", 0 );
        STOP_SOUND( iParam0, uParam1 );
    }
    else
    {
        sub_471( "MF", "P_SAFE_STOP_SOUND: Not stopping sound (SoundID = -1)", 0 );
    }
    return;
}

void sub_3923(unknown uParam0)
{
    if ((uParam0^) != -1)
    {
        sub_471( "MF", "P_SAFE_RELEASE_SOUND_ID: Releasing Sound...", 0 );
        RELEASE_SOUND_ID( (uParam0^) );
        (uParam0^) = -1;
    }
    else
    {
        sub_471( "MF", "P_SAFE_RELEASE_SOUND_ID: Not RELEASING sound (SoundID != -1)", 0 );
    }
    return;
}

void sub_4195(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_4229( (uParam0^)[I] );
    }
    return;
}

void sub_4229(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_4366(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_4411(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_4476()
{
    sub_471( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    sub_471( "CCB", "Stopping the Panama_Lower_Level context...", 0 );
    END_CONTEXT( "Panama_Lower_Level" );
    return;
}

void sub_4835(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_471( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_5019( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_6096( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_6388( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_6748( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_6388( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_6748( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_6388( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_6748( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_7033( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_6748( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_7033( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_6748( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_7526( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_7687( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_834(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_471( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_5019(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_5051( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_5051(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_6096(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_6388(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_6704( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_6704(unknown uParam0)
{
    return;
}

void sub_6748(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_7033(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_6704( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_7526(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_7687(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_5051( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_7759( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_7759(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_9051()
{
    int iVar2;

    iVar2 = l_U185;
    sub_9068();
    switch (l_U185)
    {
        case 0: break;
        case 1:
        sub_471( "SP", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
        sub_9670();
        sub_9892();
        sub_14052();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        sub_18480();
        sub_18878();
        l_U185 = 2;
        sub_471( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_471( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        sub_19205();
        sub_24470();
        l_U185 = 3;
        sub_471( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if ((sub_27466( ref g_U3026 )) AND ((sub_27275( ref g_U1878 )) AND ((sub_27148( ref g_U1975 )) AND ((sub_27027( ref g_U1829 )) AND (sub_26907( ref g_U1588 ))))))
        {
            if (NOT l_U140._fU0)
            {
                l_U185 = 4;
                sub_471( "SP", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
            }
            else
            {
                l_U185 = 6;
                sub_471( "SP", "eCheckpointState = CP_LL_CREATE_ASSETS", 0 );
            }
        }
        break;
        case 4:
        sub_471( "GA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        if (NOT (IS_PED_DEAD( sub_834() )))
        {
            FREEZE_PED_POSITION( sub_834(), 0 );
        }
        SET_PAYNEKILLER_AMT( 0 );
        if ((sub_27842( ref l_U140 )) == 0)
        {
            sub_7033( sub_834(), -1464892298, 200, 0, 0 );
            l_U185 = 5;
            sub_471( "GA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U185 = 6;
            sub_471( "SP", "eCheckpointState = CP_LL_CREATE_ASSETS", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD( sub_834() )))
        {
            if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_834(), 0, 0 ) ))
            {
                l_U185 = 6;
                sub_471( "GA", "eCheckpointState = CP_LL_CREATE_ASSETS", 0 );
            }
        }
        break;
        case 6:
        if (l_U186)
        {
            sub_28306();
            sub_28456();
        }
        if (sub_29499( ref l_U388, ref l_U392, -1, 0, 1, 1, 1 ))
        {
            if (sub_29499( ref l_U455, ref l_U459, -1, 0, 1, 0, 1 ))
            {
                if (g_U834 == 0)
                {
                    if (CUTSCENE_IS_LOADED( "11_01_PANAMA_CONCAT" ))
                    {
                        l_U185 = 7;
                        sub_471( "GA", "eCheckpointState = CP_HANDLE_CUTSCENES", 0 );
                    }
                    else if (CUTSCENE_NAMED_IS_LOADING( "11_01_PANAMA_CONCAT" ))
                    {
                        sub_471( "GA", "Waiting for cutscene 11_01_PANAMA_CONCAT to load.", 0 );
                    }
                    else
                    {
                        sub_471( "GA", "Requesting cutscene 11_01_PANAMA_CONCAT to load.", 0 );
                        PRE_STREAM_SEAMLESS_CUTSCENE( "11_01_PANAMA_CONCAT" );
                    }
                }
                else
                {
                    l_U185 = 7;
                    sub_471( "GA", "eCheckpointState = CP_HANDLE_CUTSCENES", 0 );
                }
            }
        }
        break;
        case 7:
        if (l_U186)
        {
            sub_37535( ref l_U188, "11_01_PANAMA_CONCAT", 31546, 31563, 32124, 32938, 32957, 35402, 0, 0 );
            if (g_U834 == 0)
            {
                sub_37938();
                sub_38137( ref l_U188, "Deck1", ref g_U3135 );
                l_U188._fU4 = 1;
            }
            else
            {
                l_U188._fU4 = 7;
            }
        }
        if (sub_38220( ref l_U188 ))
        {
            if (NOT l_U140._fU0)
            {
                g_U834 = 1;
                sub_40379( ref l_U140, g_U834, sub_834(), g_U980[1], g_U1086[1], g_U1158[1], g_U1122[1], 1 );
            }
            l_U185 = 8;
            sub_471( "GA", "eCheckpointState = CP_LL_GAMEPLAY_REBELS_SEARCHING", 0 );
        }
        break;
        case 8:
        if (l_U186)
        {
            sub_44065();
            sub_44752();
        }
        sub_44898( ref l_U388, 65516, 1, 1 );
        sub_44898( ref l_U455, 65516, 1, 1 );
        sub_45060();
        sub_45421();
        sub_48666();
        sub_48942();
        if ((sub_2016( ref l_U231 )) == 1)
        {
            sub_35703();
            sub_1896( ref l_U240 );
        }
        if ((sub_2016( ref l_U240 )) == 1)
        {
            sub_37148();
        }
        if (NOT l_U454)
        {
            if (NOT (sub_49381( l_U433 )))
            {
                l_U454 = 1;
                sub_49462( "switching bunk rebels to AI walking" );
                sub_49503( l_U388[0], 47, 1000 );
                sub_49503( l_U388[1], 47, 1000 );
                if (NOT (IS_PED_DEAD( l_U388[1] )))
                {
                    SET_PED_DEFAULT_AIM_AT_PED( l_U388[1], sub_834() );
                }
                sub_49650( ref l_U388[1], -46.13449000, -1.43742000, -0.64778000, 24, 0, 2, 0, 1085905306 );
                sub_49818( ref l_U388[0], -46.93261000, -1.78720400, -0.66036900, 0, 2, 0 );
            }
        }
        if (NOT l_U432)
        {
            if (((NOT l_U454) AND (sub_49966( ref l_U388[1], 47, 1 ))) || ((NOT l_U454) AND (sub_49966( ref l_U388[0], 47, 1 ))))
            {
                sub_50143( 0 );
                l_U432 = 1;
            }
            if (sub_45484( ref l_U388, sub_834(), 0, 1, 1, 1, 1 ))
            {
                sub_50143( 1 );
                l_U432 = 1;
            }
        }
        if (l_U432)
        {
            sub_51084();
            sub_51375();
            sub_1896( ref l_U499 );
            l_U185 = 9;
            sub_471( "GA", "eCheckpointState = CP_LL_GAMEPLAY_REBELS_COMBAT", 0 );
        }
        break;
        case 9:
        if (l_U186)
        {
            sub_51719();
            sub_44752();
        }
        sub_44898( ref l_U388, 65516, 1, 1 );
        sub_44898( ref l_U455, 65516, 1, 1 );
        sub_44935( l_U529, 65516, 1, 1 );
        sub_44935( l_U543, 65516, 1, 1 );
        sub_44935( l_U557, 65516, 1, 1 );
        sub_45060();
        sub_52295();
        sub_45421();
        sub_48666();
        sub_48942();
        if (sub_2016( ref l_U499 ))
        {
            sub_53101();
        }
        if (sub_53540( ref l_U508, 0 ))
        {
            sub_53641();
        }
        if (sub_53886())
        {
            sub_53972();
            sub_54346();
        }
        if (sub_54686())
        {
            sub_54782();
            sub_55156();
        }
        if (sub_55336())
        {
            sub_55430();
            sub_56079();
        }
        if (sub_56259() == 1)
        {
            if (NOT IS_BULLET_CAMERA_ACTIVE())
            {
                l_U185 = 10;
                sub_471( "GA", "eCheckpointState = CP_LL_GAMEPLAY_SEARCH_FOR_RADIO", 0 );
            }
        }
        break;
        case 10:
        if (l_U186)
        {
            sub_26527( "MID_00_PANAMA_SH01", 0 );
            if (NOT (sub_1650( ref l_U1027 )))
            {
                sub_1896( ref l_U1027 );
            }
            sub_44752();
            AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_2", "PANAMA_FINAL_2", 0.00000000, 0, 5000, -1082130432, 0 );
            sub_471( "CR", "Playing: PANAMA_FINAL Mood: PANAMA_FINAL_2", 0 );
        }
        sub_56626();
        sub_56913();
        sub_45421();
        sub_48666();
        if ((NOT (sub_57170( g_U1246 ))) AND (l_U1027._fU16))
        {
            sub_48942();
        }
        if (NOT (sub_57170( g_U1246 )))
        {
            if (sub_57309( ref l_U270, ref l_U249, 0, 0 ))
            {
                l_U185 = 13;
                sub_471( "GA", "eCheckpointState = CP_LL_LOAD_MID_00_PANAMA", 0 );
            }
        }
        break;
        case 11:
        if (l_U186)
        {
            sub_39087( 1, 0, 0, 1 );
            if (NOT (IS_PED_DEAD( sub_834() )))
            {
                sub_34793( sub_834(), -37.75862000, -0.83430900, -0.66294900, 254.31480000 );
                sub_57624( sub_834(), 0 );
                sub_57723();
                RESET_PLAYER_INPUT_GAIT( 0 );
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( -3.05134600, 1065353216, 0 );
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( -9.28123300, 1065353216, 0 );
                TASK_CLEAR_LOOK_AT( sub_834() );
                CLEAR_PED_TASKS_IMMEDIATELY( sub_834() );
            }
            CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAMTLTGND_45_LFR", 1, l_U783, l_U786, 0, 0 );
            if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "span_PassosBed" )))
            {
                sub_58191( 0 );
                sub_49217( "SPAN_EXPLTTM", ref l_U789 );
                FOUND_EXPLORATION_ITEM( "span_PassosBed" );
            }
        }
        if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "EXPL_CAM", "EXPL_CAMTLTGND_45_LFR" )) - l_U787))
        {
            sub_57624( sub_834(), 1 );
            CAMERA_ANIMATED_STOP( 0, 0 );
            sub_39964( 1, 1 );
            sub_47401( ref l_U655, 1 );
            if (NOT l_U788)
            {
                l_U185 = 15;
                sub_471( "CR", "eCheckpointState = CP_LL_GAMEPLAY_GO_TO_ENGINE_DOOR", 0 );
            }
            else
            {
                l_U185 = 10;
                sub_471( "CR", "eCheckpointState = CP_LL_GAMEPLAY_SEARCH_FOR_RADIO", 0 );
            }
        }
        break;
        case 12:
        if (l_U186)
        {
            sub_39087( 1, 0, 0, 1 );
            if (NOT (IS_PED_DEAD( sub_834() )))
            {
                sub_34793( sub_834(), -47.01839000, 8.82454800, -0.66294900, 94.65299000 );
                sub_57624( sub_834(), 0 );
                sub_57723();
                RESET_PLAYER_INPUT_GAIT( 0 );
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( -12.01267000, 1065353216, 0 );
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( -10.52355000, 1065353216, 0 );
                TASK_CLEAR_LOOK_AT( sub_834() );
                CLEAR_PED_TASKS_IMMEDIATELY( sub_834() );
            }
            CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAM_GND_25_F_CAM", 1, l_U927, l_U930, 0, 0 );
            if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "span_Note" )))
            {
                sub_58191( 0 );
                sub_49217( "SPAN_MNYAPTA", ref l_U933 );
                FOUND_EXPLORATION_ITEM( "span_Note" );
            }
        }
        if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "EXPL_CAM", "EXPL_CAM_GND_25_F_CAM" )) - l_U931))
        {
            sub_57624( sub_834(), 1 );
            CAMERA_ANIMATED_STOP( 0, 0 );
            sub_39964( 1, 1 );
            sub_47401( ref l_U799, 1 );
            if (NOT l_U932)
            {
                l_U185 = 15;
                sub_471( "CR", "eCheckpointState = CP_LL_GAMEPLAY_GO_TO_ENGINE_DOOR", 0 );
            }
            else
            {
                l_U185 = 10;
                sub_471( "CR", "eCheckpointState = CP_LL_GAMEPLAY_SEARCH_FOR_RADIO", 0 );
            }
        }
        break;
        case 13:
        if (sub_59180( "MID_01_PANAMA_concat", "MID_00_PANAMA_SH01" ))
        {
            l_U185 = 14;
            sub_471( "GA", "eCheckpointState = CP_LL_HANDLE_MID_00_PANAMA", 0 );
        }
        break;
        case 14:
        if (l_U186)
        {
            sub_37535( ref l_U291, "MID_00_PANAMA_SH01", 59450, 59573, 59868, 60029, 60048, 60262, 250, 0 );
            l_U291._fU4 = 2;
        }
        if (sub_38220( ref l_U291 ))
        {
            l_U185 = 15;
            sub_471( "GA", "eCheckpointState = CP_LL_GAMEPLAY_GO_TO_ENGINE_DOOR", 0 );
        }
        break;
        case 15:
        if (l_U186)
        {
            sub_44752();
            sub_60904( ref g_U835[2] );
            if (NOT AUDIO_IS_MUSIC_PLAYING())
            {
                AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_2", "PANAMA_FINAL_2", 0, -1, -1, -1082130432, 0 );
                sub_471( "CR", "Playing: PANAMA_FINAL Mood: PANAMA_FINAL_2", 0 );
            }
        }
        sub_56626();
        sub_56913();
        sub_45421();
        sub_48666();
        sub_48942();
        if (sub_57309( ref l_U1036, ref l_U1057, 0, 0 ))
        {
            g_U1230[2] = 1;
            l_U185 = 16;
            sub_471( "GA", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 16:
        if ((g_U834 == 2) || (NOT HAS_CUTSCENE_FINISHED()))
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U185 = 0;
            sub_471( "SP", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
    }
    if (l_U185 != iVar2)
    {
        l_U186 = 1;
    }
    else
    {
        l_U186 = 0;
    }
    return;
}

void sub_9068()
{
    switch (l_U1078)
    {
        case 0:
        sub_471( "CCB", "eRoomService - STATE_CHALLENGE_IDLE", 0 );
        l_U1078 = 1;
        break;
        case 1:
        if (l_U185 >= 8)
        {
            if (NOT (IS_PED_DEAD( sub_834() )))
            {
                if (NOT (IS_PED_USING_MP3_COVER_TASK( sub_834() )))
                {
                    if (SCRIPT_VAR_HASH_EXISTS( -1452701025 ))
                    {
                        sub_471( "CCB", "The player left cover in the cabin entryway...", 0 );
                        SCRIPT_VAR_HASH_SET_INT( -1452701025, 1 );
                    }
                    else
                    {
                        sub_471( "CCB", "The RoomService script variable is NOT valid!!!", 0 );
                    }
                    sub_471( "CCB", "eRoomService - STATE_CHALLENGE_COMPLETE", 0 );
                    l_U1078 = 2;
                }
            }
        }
        break;
        case 2: break;
    }
    return;
}

void sub_9670()
{
    sub_471( "GA", "P_INITIALIZE_SCRIPT_DATA start", 0 );
    l_U186 = 1;
    l_U219 = 0;
    l_U220 = 0;
    sub_1760( ref l_U221, 6000, 1, 0 );
    sub_1760( ref l_U231, 10300, 1, 0 );
    sub_1760( ref l_U240, 1800, 1, 0 );
    l_U332 = 0;
    l_U345 = 0;
    l_U344 = 0;
    l_U432 = 0;
    l_U454 = 0;
    sub_1760( ref l_U499, 2500, 1, 0 );
    sub_1760( ref l_U1027, 2750, 1, 0 );
    sub_471( "GA", "P_INITIALIZE_SCRIPT_DATA end", 0 );
    return;
}

void sub_9892()
{
    sub_471( "GA", "P_SET_STATIC_DATA start", 0 );
    sub_9978( ref l_U392[0], -30.06700000, 0.70000000, -0.68000000, 355.00000000, -1104179593, 7, 3, 2, 0, 0 );
    sub_9978( ref l_U392[1], -30.50000000, 4.04000000, -0.68000000, 85.00000000, 2050619087, 7, 3, 2, 0, 0 );
    sub_9978( ref l_U392[2], -25.01575000, 10.07385000, -0.66181500, -165.09000000, -871676009, 7, 3, 2, 0, 0 );
    sub_9978( ref l_U459[0], 3.88000000, 6.26000000, -0.60000000, 84.04608000, 109161796, 7, 3, 2, 0, 0 );
    sub_9978( ref l_U459[1], -3.10000000, -0.78000000, -0.60000000, 73.60000000, -941588541, 7, 3, 2, 0, 0 );
    sub_9978( ref l_U459[2], 0.35000000, 5.48000000, -0.60000000, 113.92850000, 1598522081, 7, 3, 2, 0, 0 );
    sub_9978( ref l_U530, 0.12366500, 0.76264200, -0.66444000, 25.00000000, 270644968, 7, 3, 2, 0, 0 );
    sub_9978( ref l_U544, -0.79000000, 4.28000000, -0.66000000, 25.00000000, 1720257320, 7, 3, 2, 0, 0 );
    sub_9978( ref l_U558, -1.25000000, -0.99000000, -0.67000000, 25.00000000, -1215072851, 7, 3, 2, 0, 0 );
    sub_9978( ref l_U318, 13.35000000, 8.48000000, -0.40000000, 0, 1598522081, 26, 6, 0, 0, 0 );
    sub_10549( ref l_U346, "TRIGGER_LEFT_BUNK_PLAYER_WALK", -38.74000000, 8.21000000, -0.82000000, 21.56000000, 5.14000000, 2.82000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10549( ref l_U367, "TRIGGER_RIGHT_BUNK_PLAYER_WALK", -39.32000000, -0.48000000, -0.82000000, 21.56000000, 5.14000000, 2.82000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10549( ref l_U943, "Trigger_LowerDeck_Dialogue_Maxs", -46.00000000, -0.23000000, -1.00000000, 7.00000000, 5.00000000, 2.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10549( ref l_U964, "Trigger_LowerDeck_Dialogue_Passos", -45.93000000, 8.13000000, -0.67000000, 5.33000000, 4.49000000, 2.84000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10549( ref l_U985, "Trigger_LowerDeck_Dialogue_Marcelo", -38.45000000, -0.06000000, -0.67000000, 5.20000000, 4.30000000, 2.84000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10549( ref l_U1006, "Trigger_LowerDeck_Dialogue_NearRadio", 0.00000000, 8.18800000, -0.66600000, 10.00000000, 10.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10549( ref l_U433, "TRIGGER_MAX_HIDING", -42.11000000, 4.05000000, -0.61000000, 5.44000000, 8.14000000, 2.14000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10549( ref l_U508, "Release_Kitchen_Tether", -18.88000000, 3.88000000, -0.94000000, 5.85000000, 16.65000000, 2.84000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10549( ref l_U571, "KITCHEN", -10.36000000, 2.59000000, -0.94000000, 10.93000000, 11.70000000, 2.84000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10549( ref l_U592, "SIDE_HALL", -10.50000000, 9.99000000, -0.94000000, 11.15000000, 2.34000000, 2.84000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10549( ref l_U613, "FRIDGE", -1.65000000, -0.46000000, -0.94000000, 6.45000000, 5.95000000, 2.84000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10549( ref l_U634, "RADIO_AREA", -1.56000000, 6.87000000, -0.94000000, 5.79000000, 8.05000000, 2.84000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10549( ref l_U249, "Trigger_Radio_POI_Force", -0.48000000, 5.34000000, -0.94000000, 4.37000000, 3.21000000, 2.84000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10549( ref l_U270, "Trigger_Near_Radio_POI", -1.56000000, 5.96000000, -0.94000000, 5.79000000, 5.47000000, 2.84000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10549( ref l_U741, "Trigger_PassosBedPOI_Activate", -36.86000000, -1.90000000, -0.66000000, 2.50000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10549( ref l_U762, "Trigger_PassosBedPOI_Radius", -37.91000000, -1.33000000, -0.66000000, 4.50000000, 4.50000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10549( ref l_U885, "Trigger_NotePOI_Activate", -47.59400000, 9.26700000, -0.66300000, 2.00000000, 1.50000000, 2.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10549( ref l_U906, "Trigger_NotePOI_Radius", -47.59400000, 9.26700000, -0.66300000, 4.00000000, 3.50000000, 2.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10549( ref l_U1036, "tbLL_EngineRoomTrigger_ForceWalk", 9.97000000, 8.31000000, -3.85000000, 6.21000000, 6.78000000, 5.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10549( ref l_U1057, "tbLL_EngineRoomTrigger_Start", 11.54000000, 9.63000000, -3.85000000, 4.29000000, 4.60000000, 5.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12297( ref l_U342, "TetherBox_LowerLevelRebels", -10.73000000, 2.53000000, -0.70000000, 10.46000000, 11.75000000, 3.82000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12297( ref l_U343, "TetherBox_HallwayRebel", -16.53000000, 3.78000000, -0.70000000, 24.32000000, 14.41000000, 3.82000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12467( ref l_U655, 2, 0.00000000, 0.00000000, 0.00000000, l_U741, l_U762, 1, 0 );
    sub_13316( ref l_U655, 30, "POI_PAN_PASSO" );
    sub_13477( ref l_U655, 0 );
    sub_13509( ref l_U655, 1 );
    sub_13541( ref l_U655, 0 );
    sub_12467( ref l_U799, 2, 0.00000000, 0.00000000, 0.00000000, l_U885, l_U906, 1, 0 );
    sub_13316( ref l_U799, 30, "POI_PAN_NOTE" );
    sub_13477( ref l_U799, 0 );
    sub_13509( ref l_U799, 1 );
    sub_13541( ref l_U799, 0 );
    sub_471( "GA", "P_SET_STATIC_DATA end", 0 );
    return;
}

void sub_9978(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_10549(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_12297(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_12467(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47, unknown uParam48)
{
    sub_12484( iParam0, uParam47 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU80 = 1;
    iParam0->_fU116 = {uParam5};
    iParam0->_fU88 = 1;
    iParam0->_fU216 = {uParam26};
    iParam0->_fU320 = uParam48;
    iParam0->_fU20 = {uParam2};
    sub_12850( iParam0 );
    return;
}

void sub_12484(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_12850(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_12929( iParam0 );
    return;
}

void sub_12929(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_12988( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_12988( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_12988( iParam0, 1 );
            }
            else
            {
                sub_12988( iParam0, 0 );
            };;;
        }
        else
        {
            sub_12988( iParam0, 0 );
        }
    }
    else
    {
        sub_12988( iParam0, 0 );
    }
    return;
}

void sub_12988(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_13316(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_13347( iParam0 );
    return;
}

void sub_13347(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_13477(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

void sub_13509(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

void sub_13541(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
    sub_13583( iParam0 );
    return;
}

void sub_13583(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_13644( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_13644( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_13644(int iParam0)
{
    if (((IS_PED_DEAD( sub_834() )) == 0) AND ((IS_PLAYER_DEAD( sub_856() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_834() )) == 1) || (((IS_PED_GETTING_UP( sub_834() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_834() )) == 1) || (((IS_PED_IN_COVER( sub_834() )) == 1) || (((IS_PED_DUCKING( sub_834() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_834() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_14052()
{
    sub_471( "MF", "P_GLOBAL_CREATE_ALL_DOORS - START", 0 );
    sub_14165( ref g_U3713[0], g_U3689, -44.27758000, 5.32169000, 0.43664000, 0.00000000, 0.00000000, 0.00000000, -110.00000000, 110.00000000, 1, 0 );
    sub_14681( ref g_U3713[0], 1, 1, 1.00000000 );
    sub_14536( ref g_U3713[0], 1 );
    sub_14165( ref g_U3713[1], g_U3690, -44.37815000, 2.33806000, 0.43171000, 0.00000000, 0.00000000, 0.00000000, -110.00000000, 110.00000000, 1, 0 );
    sub_14681( ref g_U3713[1], 0, 1, 1.00000000 );
    sub_14536( ref g_U3713[1], 1 );
    sub_14165( ref g_U3713[2], g_U3687, -37.33594000, 5.32179000, 0.43720000, 0.00000000, 0.00000000, 0.00000000, -110.00000000, 110.00000000, 1, 0 );
    sub_14165( ref g_U3713[3], g_U3688, -37.33504000, 2.33680000, 0.43720000, 0.00000000, 0.00000000, 0.00000000, -110.00000000, 110.00000000, 1, 0 );
    sub_14681( ref g_U3713[3], 0, 1, 0.30000000 );
    sub_14165( ref g_U3713[4], g_U3685, -30.53626000, 5.32230000, 0.43720000, 0.00000000, 0.00000000, 0.00000000, -110.00000000, 110.00000000, 1, 0 );
    sub_14681( ref g_U3713[4], 1, 1, 1.00000000 );
    sub_14536( ref g_U3713[4], 1 );
    sub_14165( ref g_U3713[5], g_U3686, -30.53630000, 2.33804000, 0.43720000, 0.00000000, 0.00000000, 0.00000000, -110.00000000, 110.00000000, 1, 0 );
    sub_14681( ref g_U3713[5], 0, 1, 1.00000000 );
    sub_14536( ref g_U3713[5], 1 );
    sub_14165( ref g_U3713[6], g_U3694, 1.90790000, -0.24320000, 0.56350000, 0.00000000, 0.00000000, 0.00000000, -0.01000000, 0.00000000, 1, 0 );
    sub_15329( ref g_U3713[6], 1 );
    sub_14165( ref g_U3713[7], g_U3695, 12.53256000, -3.39169000, 0.49154000, 0.00000000, 0.00000000, 0.00000000, -90.00000000, 0.00000000, 0, 1 );
    sub_15329( ref g_U3713[7], 1 );
    sub_14165( ref g_U3713[8], g_U3696, 12.53157000, 10.52140000, 0.49412000, 0.00000000, 0.00000000, 0.00000000, -115.00000000, 0.00000000, 1, 0 );
    sub_15329( ref g_U3713[8], 1 );
    sub_14165( ref g_U3777[0], g_U3699, 24.75918000, -0.74805000, 3.24288000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 35.00000000, 1, 0 );
    sub_14681( ref g_U3777[0], 1, 1, 0.30000000 );
    sub_14165( ref g_U3777[1], g_U3703, -2.57487000, -0.57792000, 3.24329000, 0.00000000, 0.00000000, 0.00000000, 26.00000000, 27.00000000, 1, 0 );
    sub_15329( ref g_U3777[1], 1 );
    sub_14165( ref g_U3777[2], g_U3700, -2.54126000, 8.35078000, 3.25633000, 0.00000000, 0.00000000, 0.00000000, -110.00000000, 110.00000000, 1, 0 );
    sub_14681( ref g_U3777[2], 0, 1, 0.35000000 );
    sub_14165( ref g_U3777[3], g_U3699, -7.29046000, 1.42185000, 3.25776000, 0.00000000, 0.00000000, 0.00000000, -110.00000000, 110.00000000, 1, 0 );
    sub_14681( ref g_U3777[3], 0, 1, 1.00000000 );
    sub_14536( ref g_U3777[3], 1 );
    sub_14165( ref g_U3777[4], g_U3698, -10.64608000, 4.89107000, 3.24594000, 0.00000000, 0.00000000, 0.00000000, -89.00000000, 130.00000000, 1, 0 );
    sub_14681( ref g_U3777[4], 1, 1, 1.00000000 );
    sub_14536( ref g_U3777[4], 1 );
    sub_14165( ref g_U3777[5], g_U3699, -19.32917000, 0.72835000, 3.25671000, 0.00000000, 0.00000000, 0.00000000, -110.00000000, 110.00000000, 1, 0 );
    sub_14681( ref g_U3777[5], 1, 1, 1065353216 );
    sub_14536( ref g_U3777[5], 1 );
    sub_14165( ref g_U3777[6], g_U3700, -20.54160000, 0.65161000, 3.25298000, 0.00000000, 0.00000000, 0.00000000, -110.00000000, 110.00000000, 1, 0 );
    sub_14681( ref g_U3777[6], 0, 1, 1065353216 );
    sub_14536( ref g_U3777[6], 1 );
    sub_14165( ref g_U3777[7], g_U3698, -22.72606000, 4.14333000, 3.24594000, 0.00000000, 0.00000000, 0.00000000, -110.00000000, 110.00000000, 1, 0 );
    sub_14681( ref g_U3777[7], 1, 1, 1065353216 );
    sub_14536( ref g_U3777[7], 1 );
    sub_14165( ref g_U3777[8], g_U3700, -26.59765000, 0.63613000, 3.25294000, 0.00000000, 0.00000000, 0.00000000, -110.00000000, 110.00000000, 1, 0 );
    sub_14681( ref g_U3777[8], 0, 1, 0.20000000 );
    sub_14165( ref g_U3777[9], g_U3692, -33.21901000, 10.21093000, 3.24398000, 0.00000000, 0.00000000, 0.00000000, -90.00000000, 89.00000000, 1, 0 );
    sub_14681( ref g_U3777[9], 0, 1, 1065353216 );
    sub_14536( ref g_U3777[9], 1 );
    sub_14165( ref g_U3777[10], g_U3697, -37.06034000, -1.30501000, 3.42993000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 89.00000000, 1, 0 );
    sub_14681( ref g_U3777[10], 1, 1, 0.60000000 );
    sub_14165( ref g_U3777[11], g_U3691, -1.85550000, -1.59770000, 3.15740000, 0.00000000, 0.00000000, 0.00000000, -90.00000000, 90.00000000, 0, 1 );
    sub_15329( ref g_U3777[11], 1 );
    sub_14165( ref g_U3777[12], g_U3691, -0.65170000, 9.35870000, 3.15740000, 0.00000000, 0.00000000, 0.00000000, -90.00000000, 90.00000000, 0, 1 );
    sub_15329( ref g_U3777[12], 1 );
    sub_14165( ref g_U3777[13], g_U3691, -13.57990000, -3.15070000, 3.15440000, 0.00000000, 0.00000000, 0.00000000, -90.00000000, 90.00000000, 0, 1 );
    sub_15329( ref g_U3777[13], 1 );
    sub_14165( ref g_U3777[14], g_U3702, -13.57990000, 10.94360000, 3.15440000, 0.00000000, 0.00000000, 0.00000000, -90.00000000, 90.00000000, 0, 1 );
    sub_15329( ref g_U3777[14], 1 );
    sub_14165( ref g_U3777[15], g_U3696, 25.61931000, -3.35702000, 3.45269000, 0.00000000, 0.00000000, 0.00000000, -90.00000000, 90.00000000, 0, 1 );
    sub_15329( ref g_U3777[15], 1 );
    sub_14165( ref g_U3890[0], g_U3693, -8.45170000, 8.45730000, 6.32890000, 0.00000000, 0.00000000, 0.00000000, -110.00000000, 110.00000000, 1, 0 );
    sub_15329( ref g_U3890[0], 1 );
    sub_14165( ref g_U3890[1], g_U3704, -10.71540000, 9.35900000, 6.24680000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 80.00000000, 0, 0 );
    sub_14681( ref g_U3890[1], 1, 1, 0.40000000 );
    sub_14165( ref g_U3890[2], g_U3691, -10.71560000, -1.59800000, 6.24680000, 0.00000000, 0.00000000, 0.00000000, -90.00000000, 90.00000000, 0, 1 );
    sub_15329( ref g_U3890[2], 1 );
    sub_14165( ref g_U3912[0], g_U3693, 12.52281000, -0.64584000, 6.27399000, 0.00000000, 0.00000000, 0.00000000, -90.00000000, 90.00000000, 0, 1 );
    sub_15329( ref g_U3912[0], 1 );
    sub_14165( ref g_U3912[1], g_U3702, 12.26410000, 9.22190000, 6.22370000, 0.00000000, 0.00000000, 0.00000000, -100.00000000, 100.00000000, 0, 1 );
    sub_14681( ref g_U3912[1], 0, 1, 1065353216 );
    sub_14536( ref g_U3912[1], 1 );
    sub_14165( ref g_U3912[2], g_U3706, -1.53070000, -1.13090000, 9.18250000, 0.00000000, 0.00000000, 0.00000000, -90.00000000, 90.00000000, 0, 1 );
    sub_15329( ref g_U3912[2], 1 );
    sub_14165( ref g_U3912[3], g_U3706, -1.53120000, 8.90860000, 9.18250000, 0.00000000, 0.00000000, 0.00000000, -90.00000000, 90.00000000, 0, 1 );
    sub_15329( ref g_U3912[3], 1 );
    sub_14165( ref g_U3912[4], g_U3705, -13.57924000, -1.00988000, 10.05367000, 0.00000000, 0.00000000, 0.00000000, -90.00000000, 90.00000000, 1, 0 );
    sub_15329( ref g_U3912[4], 1 );
    sub_14165( ref g_U3912[5], g_U3705, -12.37852000, 8.77084000, 10.05367000, 0.00000000, 0.00000000, 0.00000000, -90.00000000, 90.00000000, 1, 0 );
    sub_15329( ref g_U3912[5], 1 );
    sub_14165( ref g_U3955, g_U3701, -45.48747000, 29.79249000, 9.53181000, 0.00000000, 0.00000000, 0.00000000, -1028390912, 1119092736, 1, 0 );
    sub_15329( ref g_U3955, 1 );
    sub_14185( ref g_U3969, g_U1587, -113.63000000, -38.41000000, 23.75000000, 0.00000000, 0.00000000, 0.00000000 );
    sub_15329( ref g_U3969, 1 );
    sub_14185( ref g_U3962, g_U1587, -111.23000000, -38.41000000, 23.75000000, 0.00000000, 0.00000000, 0.00000000 );
    sub_15329( ref g_U3962, 1 );
    sub_14185( ref g_U3991[0], g_U3709, -79.78369000, -21.98512000, 9.11832000, 0.00000000, 0.00000000, 0.00000000 );
    sub_15329( ref g_U3991[0], 1 );
    sub_14185( ref g_U3991[1], g_U3710, -79.78369000, -24.27071000, 9.11714000, 0.00000000, 0.00000000, 0.00000000 );
    sub_15329( ref g_U3991[1], 1 );
    sub_14185( ref g_U3976[0], g_U3708, -94.53243000, -37.65765000, 17.14219000, 0.00000000, 0.00000000, 0.00000000 );
    sub_15329( ref g_U3976[0], 1 );
    sub_14185( ref g_U3976[1], g_U3708, -97.90794000, -37.65969000, 17.14219000, 0.00000000, 0.00000000, 0.00000000 );
    sub_15329( ref g_U3976[1], 1 );
    sub_14185( ref g_U4006[0], g_U3711, -109.05910000, -45.77236000, 10.14501000, 0.00000000, 0.00000000, 0.00000000 );
    sub_15329( ref g_U4006[0], 1 );
    sub_14185( ref g_U4006[1], g_U3712, -111.30410000, -45.77237000, 10.14501000, 0.00000000, 0.00000000, 0.00000000 );
    sub_15329( ref g_U4006[1], 1 );
    sub_14185( ref g_U4006[2], g_U3711, -117.15460000, -44.32523000, 10.12627000, 0.00000000, 0.00000000, 0.00000000 );
    sub_15329( ref g_U4006[2], 1 );
    sub_14185( ref g_U4006[3], g_U3712, -117.15460000, -42.08017000, 10.12627000, 0.00000000, 0.00000000, 0.00000000 );
    sub_15329( ref g_U4006[3], 1 );
    sub_14185( ref g_U4006[4], g_U3711, -115.77770000, -39.97692000, 10.13279000, 0.00000000, 0.00000000, 0.00000000 );
    sub_15329( ref g_U4006[4], 1 );
    sub_14185( ref g_U4006[5], g_U3712, -115.77770000, -37.73186000, 10.13279000, 0.00000000, 0.00000000, 0.00000000 );
    sub_15329( ref g_U4006[5], 1 );
    sub_471( "MF", "P_GLOBAL_CREATE_ALL_DOORS - END", 0 );
    return;
}

void sub_14165(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    sub_14185( uParam0, uParam1, uParam2, uParam5 );
    sub_14231( uParam0, 1 );
    sub_14437( uParam0, uParam8, uParam9 );
    sub_14536( uParam0, uParam10 );
    sub_14600( uParam0, uParam11 );
    return;
}

void sub_14185(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

void sub_14231(int iParam0, int iParam1)
{
    if ((sub_14243( iParam0 )) == 0)
    {
        sub_14309( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

int sub_14243(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_14309(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_14437(int iParam0, float fParam1, float fParam2)
{
    if ((sub_14243( iParam0 )) == 0)
    {
        sub_14309( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        ;
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

void sub_14536(int iParam0, unknown uParam1)
{
    if ((sub_14243( iParam0 )) == 0)
    {
        sub_14309( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_LATCH( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

void sub_14600(int iParam0, unknown uParam1)
{
    if ((sub_14243( iParam0 )) == 0)
    {
        sub_14309( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_AUTO_CLOSE( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

void sub_14681(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_14243( iParam0 )) == 0)
    {
        sub_14309( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

void sub_15329(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_14243( iParam0 )) == 0)
    {
        sub_14309( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

void sub_18480()
{
    sub_471( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U1078 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( -1452701025 )))
    {
        sub_471( "CCB", "Creating the RoomService script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( -1452701025 );
        if (SCRIPT_VAR_HASH_EXISTS( -1452701025 ))
        {
            sub_471( "CCB", "The RoomService script variable was successfully created...", 0 );
        }
        else
        {
            sub_471( "CCB", "The RoomService script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
        sub_471( "CCB", "The RoomService script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( -1452701025, 0 );
    }
    return;
}

void sub_18878()
{
    sub_471( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_471( "CCB", "Starting the Panama context...", 0 );
    START_CONTEXT( "Panama" );
    sub_471( "CCB", "Starting the Panama_Lower_Level context...", 0 );
    START_CONTEXT( "Panama_Lower_Level" );
    return;
}

void sub_19205()
{
    sub_471( "GA", "P_REQUEST_LL_PERSISTENT_ASSETS start", 0 );
    sub_19265();
    sub_21210( ref l_U176, ref g_U1588 );
    if (g_U834 == 0)
    {
        sub_21245( g_U1536, ref g_U1588 );
    }
    sub_22378( ref l_U181, ref g_U1829 );
    sub_23378( ref g_U3071, ref g_U3026 );
    sub_19343( "LEVEL_S_PAN_CP_01", ref g_U1975 );
    sub_19343( "EXPL_CAM", ref g_U1975 );
    sub_471( "GA", "P_REQUEST_LL_PERSISTENT_ASSETS end", 0 );
    return;
}

void sub_19265()
{
    sub_471( "CR", "P_GLOBAL_LOAD_PISTOL_ANIMS - Start", 0 );
    sub_19343( "NPC_PSTL_CORE", ref g_U1975 );
    sub_19343( "NPC_PSTL_COVER", ref g_U1975 );
    sub_19343( "NPC_PSTL_COVER_ENTER", ref g_U1975 );
    sub_19343( "NPC_PSTL_COVER_RELOAD", ref g_U1975 );
    sub_19343( "NPC_PSTL_DODGE", ref g_U1975 );
    sub_19343( "NPC_PSTL_FLAVOR", ref g_U1975 );
    sub_19343( "NPC_PSTL_FULLBODY", ref g_U1975 );
    sub_19343( "NPC_PSTL_RELOAD", ref g_U1975 );
    sub_19343( "NPC_PSTL_SEARCH", ref g_U1975 );
    sub_19343( "NPC_PSTL_STAIRS", ref g_U1975 );
    sub_19343( "NPC_PSTL_REACT", ref g_U1975 );
    sub_19343( "AMED_PSTL_PRONE", ref g_U1975 );
    sub_19343( "PLGE_PSTL_CROUCH", ref g_U1975 );
    sub_19343( "PLGE_PSTL_CORE", ref g_U1975 );
    sub_19343( "PLGE_PSTL_CORE_RELOAD", ref g_U1975 );
    sub_19343( "PLGE_PSTL_HANDSIG", ref g_U1975 );
    sub_19343( "PLGE_PSTL_ACTIONS", ref g_U1975 );
    sub_19343( "PLGE_PSTL_KNEE", ref g_U1975 );
    sub_19343( "PLGE_PSTL_COVER", ref g_U1975 );
    sub_19343( "PLGE_PSTL_REACT", ref g_U1975 );
    sub_19343( "PLGE_PSTL_COVER_EXIT", ref g_U1975 );
    sub_471( "CR", "P_GLOBAL_LOAD_PISTOL_ANIMS - End", 0 );
    return;
}

void sub_19343(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_19364( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_19501( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_19364(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_19501( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_19501( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_19501( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_20172( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_19501( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_19501( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_19501(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_19523( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_19523(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_20172(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_21210(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_21245( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_21245(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_21280( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_21411( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_21280(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_21411( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_21411( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_21411( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_20172( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_21411( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_21411( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_21411(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_19523( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_22378(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_22413( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_22413(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_22434( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_22566( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_22434(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_22566( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_22566( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_22566( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_20172( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_22566( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_22566( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_22566(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_19523( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_23378(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_23399( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
        sub_23537( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_23399(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                sub_23537( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                sub_23537( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    sub_23537( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                    sub_20172( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                sub_23537( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
            sub_23537( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_23537(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_19523( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_24470()
{
    sub_471( "GA", "P_REQUEST_LL_NONPERSISTENT_ASSETS start", 0 );
    sub_24542( 945770955, ref g_U1878 );
    sub_24542( -929423363, ref g_U1878 );
    sub_24542( 995399098, ref g_U1878 );
    if (g_U834 == 0)
    {
        sub_26527( "11_01_PANAMA_CONCAT", 0 );
    }
    sub_471( "GA", "P_REQUEST_LL_NONPERSISTENT_ASSETS end", 0 );
    return;
}

void sub_24542(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_24577( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_24729( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_24577(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_24729( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_24729( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_24729( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_24729( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_20172( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_20172( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_24729( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_24729( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_24729(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_19523( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_26527(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

int sub_26907(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_27027(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_27148(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_27275(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

int sub_27466(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_27842(unknown uParam0)
{
    sub_471( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_4835( uParam0, sub_834() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_28306()
{
    sub_471( "MF", "P_LL_RADIO_STATIC: START", 0 );
    ENABLE_STATIC_EMITTER( "S_PANA_RADIO_A", 1 );
    ENABLE_STATIC_EMITTER( "S_PANA_RADIO_A_TALKING", 0 );
    sub_471( "MF", "P_LL_RADIO_STATIC: END", 0 );
    return;
}

void sub_28456()
{
    sub_471( "GA", "P_LL_CREATE_PLACEMENTS: START", 0 );
    l_U333 = sub_28547( -4072149, -47.80000000, 1.80000000, 0.27500000, 0, 0, 3.80000000, 1, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U333, ref g_U3135 );
    l_U334 = sub_28547( -4072149, -33.65000000, 5.75000000, 0.27000000, 0.00000000, 0.00000000, 0.00000000, 1, 0, 1, 90.00000000 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U334, ref g_U3167 );
    sub_28726();
    sub_471( "GA", "P_LL_CREATE_PLACEMENTS: END", 0 );
    return;
}

void sub_28547(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_28726()
{
    sub_471( "CO", "P_CREATE_S_PAN_GG_SS_01", 0 );
    sub_28843( ref g_U719, g_U827, 1963610008, -243401726, -4.50000000, 1.41000000, -0.64000000, 1.50000000, 0.00000000, 1.00000000, "Room_GalleyStore" );
    sub_28972( ref g_U719 );
    return;
}

void sub_28843(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_471( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_28972(int iParam0)
{
    sub_471( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_29033( iParam0->_fU12 )) == 1)
        {
            sub_471( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_471( "CO", "has never been collected.", 0 );
        }
        if ((sub_29033( iParam0->_fU12 )) == 0)
        {
            sub_4411( iParam0->_fU0 );
            iParam0->_fU0 = sub_28547( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_471( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_471( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_29033(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

int sub_29499(unknown uParam0, unknown uParam1, int iParam2, boolean bParam3, boolean bParam4, int iParam5, unknown uParam6)
{
    int iVar9;
    int iVar10;
    int Result;

    iVar9 = sub_29513( uParam0, uParam1 );
    if (iParam2 == -1)
    {
        iVar10 = (uParam0^);
    }
    else
    {
        iVar10 = iParam2;
    }
    if (iVar9 < iVar10)
    {
        if ((uParam1^)[iVar9]._fU16 == 0)
        {
            SCRIPT_ASSERT( "Invalid Ped Struct!  No Model Defined! Aborting Ped Spawn", 0 );
            sub_471( "MF", "Invalid Ped Struct!  No Model Defined! Aborting Ped Spawn", 0 );
            sub_29812( iVar9 );
            return 0;
        }
        if (NOT (DOES_PED_EXIST( (uParam0^)[iVar9] )))
        {
            sub_29867( (uParam1^)[iVar9]._fU16, uParam6 );
            (uParam0^)[iVar9] = sub_30039( ref (uParam1^)[iVar9] );
            if (NOT bParam4)
            {
                SET_PED_VISIBLE( (uParam0^)[iVar9], bParam4 );
                sub_6704( "SPAWNING INVISIBLE PED!!!" );
            }
            if (iParam5 == 1)
            {
                sub_30773( (uParam0^)[iVar9] );
                sub_6704( "Deactivating Ped..." );
            }
        }
    }
    if (bParam3)
    {
        if (iVar9 == (iVar10 - 1))
        {
            sub_471( "MF", "F_HANDLE_PED_ARRAY_SPAWN: Returning true Once.  If you see this looping, you likely have unitialized ped model data in your pedstruct array.", 0 );
            Result = 1;
        }
        return Result;
    }
    else if (iVar9 >= iVar10)
    {
        return 1;
    }
    return 0;
}

void sub_29513(unknown uParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = (uParam1^);
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (DOES_PED_EXIST( (uParam0^)[I] )))
        {
            if ((uParam1^)[I]._fU16 != 0)
            {
                if (I < Result)
                {
                    Result = I;
                }
            }
        }
    }
    return Result;
}

void sub_29812(unknown uParam0)
{
    return;
}

void sub_29867(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_6704( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_30039(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_29867( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_30518( iParam0->_fU40 );
    sub_30598( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_30518(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_30598(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_30773(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

int sub_31546()
{
    return 1;
}

void sub_31563()
{
    if (sub_31579( sub_834(), 0 ))
    {
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( sub_834(), 0, 0 ), "W_PI_Glk18_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( sub_834(), g_U980[1], g_U1086[1] );
        CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "pana_GP_LowerLevel", "Corner Position03", 1, 1 );
        ISEQ_REGISTER_ENTITY( -929423363, "Max", sub_834(), 0 );
    }
    if (sub_31579( l_U388[0], 0 ))
    {
        ISEQ_REGISTER_ENTITY( 945770955, "s_pan_rmsearch_gmed1", l_U388[0], 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U388[0], l_U392[0]._fU0, l_U392[0]._fU12 );
    }
    if (sub_31579( l_U388[1], 0 ))
    {
        ISEQ_REGISTER_ENTITY( 945770955, "s_pan_rmsearch_gmed2", l_U388[1], 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U388[1], l_U392[1]._fU0, l_U392[1]._fU12 );
    }
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U3713[1]._fU0, g_U3713[1]._fU4 ), "P_DR_BedRom_Ah_H", 0 );
    CUTSCENE_REGISTER_ISEQ( -929423363 );
    CUTSCENE_REGISTER_ISEQ( 945770955 );
    CUTSCENE_ENABLE_SKIP( 0 );
    return;
}

void sub_31579(unknown uParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((DOES_PED_EXIST( uParam0 )) == 1)
    {
        Result = 1;
    }
    else
    {
        Result = 0;
    }
    if (Result == 1)
    {
        if ((IS_PED_DEAD( uParam0 )) == 1)
        {
            if (iParam1 == 1)
            {
                Result = 1;
            }
            else
            {
                Result = 0;
            }
        }
        else
        {
            Result = 1;
        }
    }
    return Result;
}

void sub_32124()
{
    if ((GET_CUTSCENE_TIME_MS() > 38000) AND (NOT l_U219))
    {
        sub_471( "SA", "Swapping alarm clock.", 0 );
        l_U219 = 1;
        sub_32200();
        if (NOT l_U344)
        {
            sub_471( "CR", "MUSIC: Playing PANAMA_FINAL Mood: PANAMA_FINAL_2", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_2", "PANAMA_FINAL_2", 0.00000000, 10000, -1, -1082130432, 0 );
            l_U344 = 1;
        }
    }
    return;
}

void sub_32200()
{
    sub_471( "SA", "P_LL_SWAP_ALARM_CLOCK start", 0 );
    if (DOES_OBJECT_EXIST( l_U215 ))
    {
        sub_4366( l_U215 );
    }
    l_U215 = sub_32307( g_U1537, l_U216, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U215, ref g_U3135 );
    PLAY_OBJECT_ANIM( l_U215, "p_el_digclk_sb_h", "pa_anim", 0.00000000, 1, 0 );
    sub_32599( g_U1536 );
    sub_471( "SA", "P_LL_SWAP_ALARM_CLOCK end", 0 );
    return;
}

void sub_32307(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_29867( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_32599(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_6704( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

int sub_32938()
{
    return 1;
}

void sub_32957()
{
    sub_471( "MF", "P_LL_11_01_SetupBlendout - START", 0 );
    if (NOT (ISEQ_QUERY_ENTITY_STATE( -929423363, "Max", 3 )))
    {
        sub_471( "MF", "Starting 11_01 Blend out for Max...", 0 );
        SNAP_PLAYER_TO_COVERPOINT( sub_856(), "pana_GP_LowerLevel", "Corner Position03", 1 );
        ISEQ_REGISTER_ENTITY( -929423363, "Max", sub_834(), 0 );
        ISEQ_START( -929423363 );
    }
    sub_33179();
    if (NOT (ISEQ_QUERY_ENTITY_STATE( 945770955, "s_pan_rmsearch_gmed1", 3 )))
    {
        sub_471( "MF", "Starting 11_01 Blend out for Rebels...", 0 );
        sub_34610();
    }
    CAMERA_PLAY_ANIMATED( "LEVEL_S_PAN_CP_01", "BLEND_OUT_11_01_PANAMA_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
    if (sub_31579( l_U388[0], 0 ))
    {
        sub_34331( l_U388[0] );
    }
    if (sub_31579( l_U388[1], 0 ))
    {
        sub_34331( l_U388[1] );
    }
    if (sub_31579( sub_834(), 0 ))
    {
        SET_PED_EMOTION_STATE( sub_834(), 8 );
        SET_PED_AUTO_UPDATE_EMOTION_STATE( sub_834(), 0 );
    }
    sub_1896( ref l_U221 );
    sub_1896( ref l_U231 );
    if (NOT AUDIO_IS_MUSIC_PLAYING())
    {
        sub_471( "CR", "Playing: PANAMA_FINAL Mood: PANAMA_FINAL_2", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_2", "PANAMA_FINAL_2", 0, -1, -1, -1082130432, 0 );
    }
    if (NOT l_U219)
    {
        sub_471( "SA", "Swapping alarm clock.", 0 );
        l_U219 = 1;
        sub_32200();
    }
    sub_471( "MF", "P_LL_11_01_SetupBlendout - END", 0 );
    return;
}

void sub_33179()
{
    sub_471( "MF", "P_LL_BUNK_REBELS_SETUP - START", 0 );
    sub_33243( ref l_U335, 0.70000000, 0 );
    sub_33437( ref l_U388, "piLL_BunkRebels" );
    if (sub_31579( l_U388[0], 0 ))
    {
        sub_7033( l_U388[0], -1404433099, 25000, 0, 0 );
        SET_PED_AI_TEMPLATE( l_U388[0], ref g_U1472 );
        SET_PED_COMBAT_RANGE_MIN( l_U388[0], 3.50000000 );
        SET_PED_COMBAT_RANGE_MAX( l_U388[0], 7 );
        sub_33642( l_U388[0], ref l_U335 );
        SET_ROOM_FOR_PED_BY_NAME( l_U388[0], ref g_U3167 );
        SET_PED_CAN_INTERACT_WITH_DOORS( l_U388[0], 0 );
        SET_PED_COMBAT_ATTRIBUTES( l_U388[0], 1, 0 );
        SET_PED_SEEING_RANGE( l_U388[0], 60.00000000, 5 );
    }
    if (sub_31579( l_U388[1], 0 ))
    {
        sub_7033( l_U388[1], -1404433099, 25000, 0, 0 );
        SET_PED_AI_TEMPLATE( l_U388[1], ref g_U1472 );
        SET_PED_COMBAT_RANGE_MIN( l_U388[1], 1 );
        SET_PED_COMBAT_RANGE_MAX( l_U388[1], 7 );
        sub_33642( l_U388[1], ref l_U335 );
        SET_ROOM_FOR_PED_BY_NAME( l_U388[1], ref g_U3183 );
        SET_PED_CAN_INTERACT_WITH_DOORS( l_U388[1], 0 );
        SET_PED_COMBAT_ATTRIBUTES( l_U388[1], 1, 0 );
    }
    if (sub_31579( l_U388[2], 0 ))
    {
        SET_PED_AI_TEMPLATE( l_U388[2], ref g_U1480 );
        sub_7033( l_U388[2], -1404433099, 25000, 0, 0 );
        SET_ROOM_FOR_PED_BY_NAME( l_U388[2], ref g_U3183 );
        sub_34235( ref l_U342, l_U388[2], 1 );
        sub_33642( l_U388[2], ref l_U335 );
        sub_34331( l_U388[2] );
        SET_PED_CAN_INTERACT_WITH_DOORS( l_U388[2], 0 );
    }
    sub_33437( ref l_U388, "BunkRebels" );
    sub_471( "MF", "P_LL_BUNK_REBELS_SETUP - END", 0 );
    return;
}

void sub_33243(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_33437(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_33642(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_6704( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_33243( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_33243( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_34235(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_34331(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_34610()
{
    sub_471( "MF", "P_LL_BUNK_REBELS_START_SEARCH_ISS: START", 0 );
    ISEQ_REGISTER_ENTITY( 945770955, "s_pan_rmsearch_gmed1", l_U388[0], 0 );
    ISEQ_REGISTER_ENTITY( 945770955, "s_pan_rmsearch_gmed2", l_U388[1], 0 );
    sub_34793( l_U388[0], l_U392[0]._fU0, l_U392[0]._fU12 );
    sub_34793( l_U388[1], l_U392[1]._fU0, l_U392[1]._fU12 );
    ISEQ_START( 945770955 );
    sub_471( "MF", "P_LL_BUNK_REBELS_START_SEARCH_ISS: END", 0 );
    return;
}

void sub_34793(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

int sub_35402()
{
    if (l_U188._fU52)
    {
        DO_SCREEN_FADE_IN( 100 );
    }
    sub_35436();
    if ((sub_2016( ref l_U231 )) == 1)
    {
        sub_35703();
        sub_1896( ref l_U240 );
    }
    if ((sub_2016( ref l_U240 )) == 1)
    {
        sub_37148();
    }
    if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_PAN_CP_01", "BLEND_OUT_11_01_PANAMA_CAM" )) - 1))
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( -99.00000000, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( 0.00000000, 1065353216, 0 );
        CAMERA_FREEZE_FRAME( 1, 500, 0, 0 );
        return 1;
    }
    return 0;
}

void sub_35436()
{
    if ((sub_31579( l_U388[1], 0 )) == 1)
    {
        if ((sub_2016( ref l_U221 )) == 1)
        {
            sub_471( "MF", "P_LL_HANDLE_REBELS_KICK_IN_DOOR: Playing Door Kick FX", 0 );
            l_U230 = GET_SOUND_ID();
            PLAY_SOUND_FROM_PED( l_U230, "S_PAN_SEARCH_DOOR_KICK", l_U388[1] );
            START_PARTICLE_FX_NON_LOOPED_AT_COORD( "Pana_DoorFrameSplinters_S", -36.15923000, 5.28439100, 0.39699400, 0.00000000, 0.00000000, 0.00000000, 1.00000000 );
        }
    }
    return;
}

void sub_35703()
{
    sub_471( "MF", "P_LL_BUNK_REBEL_ROOM_SEARCH_SPEECH_1: START", 0 );
    sub_35775( ref g_U1246, 0 );
    sub_35927( ref g_U1246 );
    sub_36024( 3, l_U388[1], "M11_REBL_02_Mus", ref g_U1246, 2, 0 );
    sub_36024( 2, l_U388[0], "M11_REBL_01_Avg", ref g_U1246, 2, 0 );
    sub_36280( "SPAN_VIG01A", ref g_U1246, 8, 1 );
    sub_471( "MF", "P_LL_BUNK_REBEL_ROOM_SEARCH_SPEECH_1: END", 0 );
    return;
}

void sub_35775(int iParam0, unknown uParam1)
{
    if (NOT (sub_35789( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

boolean sub_35789(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_35927(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_36024(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_36280(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_36304( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_36304(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_36359( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_36359(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_36394( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_36888( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_36394(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_36888(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_37148()
{
    sub_471( "MF", "P_LL_BUNK_REBEL_ROOM_SEARCH_SPEECH_2: START", 0 );
    sub_35775( ref g_U1246, 1 );
    sub_35927( ref g_U1246 );
    sub_36024( 3, l_U388[0], "M11_REBL_02_Mus", ref g_U1246, 2, 0 );
    sub_36024( 2, l_U388[1], "M11_REBL_01_Avg", ref g_U1246, 2, 0 );
    sub_36280( "SPAN_VIG01B", ref g_U1246, 8, 1 );
    sub_471( "MF", "P_LL_BUNK_REBEL_ROOM_SEARCH_SPEECH_2: END", 0 );
    return;
}

void sub_37535(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_471( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return sub_37660( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 37620, 37638, uParam8 );
}

void sub_37620()
{
    return;
}

int sub_37638()
{
    return 1;
}

void sub_37660(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_37938()
{
    sub_471( "SA", "P_LL_CREATE_ALARM_CLOCK_PRE_CUTSCENE start", 0 );
    l_U215 = sub_32307( g_U1536, l_U216, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U215, ref g_U3135 );
    sub_471( "SA", "P_LL_CREATE_ALARM_CLOCK_PRE_CUTSCENE end", 0 );
    return;
}

void sub_38137(int iParam0, unknown uParam1, unknown uParam2)
{
    iParam0->_fU68 = 1;
    iParam0->_fU72 = 1;
    iParam0->_fU76 = uParam1;
    iParam0->_fU80 = uParam2;
    iParam0->_fU24 = 1;
    return;
}

void sub_38220(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_471( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_471( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_471( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_471( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_471( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_471( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_26527( iParam0->_fU0, 0 );
            sub_471( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_39087( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_39087( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_471( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_39615( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_39087( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_39964( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_39964( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_39087(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_834() )))
        {
            SET_PLAYER_CONTROL( sub_856(), 0, uParam2 );
            SET_PED_DUCKING( sub_834(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_834() );
            }
            SET_PED_INVINCIBLE( sub_834(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_39615(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_834() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_834(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_834(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_834(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_834(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_834(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_39964(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_834() )))
    {
        SET_PLAYER_CONTROL( sub_856(), 1, 0 );
        SET_PED_INVINCIBLE( sub_834(), 0 );
        if (bParam0)
        {
            sub_40045();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_40045()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_834() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_834(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_834(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_834(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_834(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_40379(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_471( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_471( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_7687( iParam1 );
        sub_40638( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_41089( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_41089( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_41321( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_41089( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_41321( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_41321( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_41089( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_41321( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_41321( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_41321( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_41089( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_41321( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_41321( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_41321( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_41321( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_42879( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_471( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_40638(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_5051( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_471( "TEH", "Ending context", 0 );
        sub_471( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_41089(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_41321(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_42879(int iParam0)
{
    sub_6704( "CHECKPOINT DATA" );
    sub_42918( iParam0->_fU4 );
    sub_42941( iParam0->_fU16 );
    sub_42941( iParam0->_fU20 );
    sub_42941( iParam0->_fU24 );
    sub_29812( iParam0->_fU28 );
    sub_29812( iParam0->_fU56 );
    sub_29812( iParam0->_fU60 );
    sub_29812( iParam0->_fU64 );
    sub_29812( iParam0->_fU68 );
    sub_29812( iParam0->_fU72 );
    sub_29812( iParam0->_fU76 );
    sub_29812( iParam0->_fU80 );
    sub_29812( iParam0->_fU84 );
    sub_29812( iParam0->_fU88 );
    sub_29812( iParam0->_fU92 );
    sub_42941( iParam0->_fU32 );
    sub_29812( iParam0->_fU36 );
    sub_29812( iParam0->_fU40 );
    sub_29812( iParam0->_fU44 );
    sub_42941( iParam0->_fU136 );
    sub_43176( iParam0->_fU140 );
    sub_29812( iParam0->_fU52 );
    sub_6704( "---nRightHolsterAttachmentEnabled: " );
    sub_29812( iParam0->_fU96 );
    sub_6704( "---nRightHolsterAttachmentToggled: " );
    sub_29812( iParam0->_fU100 );
    sub_6704( "---nLeftHolsterAttachmentEnabled: " );
    sub_29812( iParam0->_fU104 );
    sub_6704( "---nLeftHolsterAttachmentToggled: " );
    sub_29812( iParam0->_fU108 );
    sub_6704( "---nRifleHolsterAttachmentEnabled: " );
    sub_29812( iParam0->_fU112 );
    sub_6704( "---nRifleHolsterAttachmentToggled: " );
    sub_29812( iParam0->_fU116 );
    sub_6704( "---nRightHandAttachmentEnabled: " );
    sub_29812( iParam0->_fU120 );
    sub_6704( "---nRightHandAttachmentToggled: " );
    sub_29812( iParam0->_fU124 );
    sub_6704( "---nLeftHandAttachmentEnabled: " );
    sub_29812( iParam0->_fU128 );
    sub_6704( "---nLeftHandAttachmentToggled: " );
    sub_29812( iParam0->_fU132 );
    sub_29812( l_U1 );
    sub_29812( 144 );
    return;
}

void sub_42918(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_42941(unknown uParam0)
{
    return;
}

void sub_43176(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_44065()
{
    int I;

    sub_471( "MF", "P_LL_KITCHEN_REBELS_SETUP - START", 0 );
    for ( I = 0; I < l_U455; I++ )
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U455[I], 1 );
        sub_33642( l_U455[I], ref l_U335 );
        SET_PED_ALERTNESS( l_U455[I], 3 );
        SET_PED_AI_TEMPLATE( l_U455[I], ref g_U1504 );
        SET_PED_COMBAT_RANGE_MAX( l_U455[I], 17.00000000 );
        SET_PED_COMBAT_RANGE_MIN( l_U455[I], 4.00000000 );
    }
    if (NOT (IS_PED_DEAD( l_U455[0] )))
    {
        sub_7033( l_U455[0], -1404433099, 25000, 0, 0 );
        SET_ROOM_FOR_PED_BY_NAME( l_U455[0], ref g_U3207 );
        sub_34235( ref l_U342, l_U455[0], 1 );
        SET_PED_SUGGESTED_COVER_POINT( l_U455[0], "GenCover", "CDE695FF_8F839446_Popover4" );
    }
    if (NOT (IS_PED_DEAD( l_U455[1] )))
    {
        sub_7033( l_U455[1], -612753081, 25000, 0, 0 );
        SET_ROOM_FOR_PED_BY_NAME( l_U455[1], ref g_U3199 );
        sub_34235( ref l_U342, l_U455[1], 1 );
        SET_PED_SUGGESTED_COVER_POINT( l_U455[1], "GenCover", "CDE695FF_8F839446_Popover6" );
    }
    if (NOT (IS_PED_DEAD( l_U455[2] )))
    {
        sub_7033( l_U455[2], -1404433099, 25000, 0, 0 );
        SET_ROOM_FOR_PED_BY_NAME( l_U455[2], ref g_U3207 );
        sub_34235( ref l_U342, l_U455[2], 1 );
        SET_PED_SUGGESTED_COVER_POINT( l_U455[2], "GenCover", "CDE695FF_8F839446_Popover2" );
    }
    sub_33437( ref l_U455, "KitchenRebels" );
    sub_471( "MF", "P_LL_KITCHEN_REBELS_SETUP - END", 0 );
    return;
}

void sub_44752()
{
    sub_471( "CR", "P_GBL_REFRESH_PAYNE_KILLER_COUNT - START", 0 );
    g_U4062 = GET_PAYNEKILLER_AMT();
    sub_471( "CR", "P_GBL_REFRESH_PAYNE_KILLER_COUNT - END", 0 );
    return;
}

void sub_44898(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_44935( (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_44935(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                sub_4229( uParam0 );
            }
        }
    }
    return;
}

void sub_45060()
{
    if ((l_U345 == 0) AND (sub_45070() >= 3))
    {
        AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_2_4", "PANAMA_FINAL_2_4", 0.00000000, 5000, -1, -1082130432, 0 );
        sub_471( "CR", "P_LL_AUDIO_CHANGE_MOOD_DURING_GAMEPLAY: Changing to PANAMA_FINAL_2_4", 0 );
        l_U345 = 1;
    }
    return;
}

void sub_45070()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 2; I++ )
    {
        if (DOES_PED_EXIST( l_U455[I] ))
        {
            if (IS_PED_DEAD( l_U455[I] ))
            {
                Result++;
            }
        }
    }
    for ( I = 0; I <= 2; I++ )
    {
        if (DOES_PED_EXIST( l_U388[I] ))
        {
            if (IS_PED_DEAD( l_U388[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

void sub_45421()
{
    if (l_U185 == 10)
    {
        l_U788 = 1;
    }
    else
    {
        l_U788 = 0;
    }
    if ((NOT (sub_46037( ref l_U655 ))) AND (sub_45460()))
    {
        sub_13541( ref l_U655, 1 );
    }
    if ((sub_46037( ref l_U655 )) AND (NOT sub_45460()))
    {
        sub_13541( ref l_U655, 0 );
    }
    if ((sub_46114( ref l_U655 )) == 1)
    {
        sub_35927( ref g_U1266 );
        sub_36024( 0, sub_834(), "MAX", ref g_U1266, 2, 0 );
        sub_36024( 1, sub_834(), "MAX", ref g_U1266, 2, 0 );
        sub_36280( "EXPLORE_ITEM", ref g_U1266, 8, 1 );
    }
    if ((sub_46431( ref l_U655 )) == 1)
    {
        l_U185 = 11;
        sub_471( "CR", "eCheckpointState = CP_LL_POI_PASSOS_BED", 0 );
    }
    return;
}

int sub_45460()
{
    if ((NOT (sub_45529( ref l_U557, sub_834(), 1, 1, 1, 0, 1 ))) AND ((NOT (sub_45529( ref l_U543, sub_834(), 1, 1, 1, 0, 1 ))) AND ((NOT (sub_45529( ref l_U529, sub_834(), 1, 1, 1, 0, 1 ))) AND ((NOT (sub_45484( ref l_U455, sub_834(), 1, 1, 1, 0, 1 ))) AND (NOT (sub_45484( ref l_U388, sub_834(), 1, 1, 1, 0, 1 )))))))
    {
        return 1;
    }
    return 0;
}

int sub_45484(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((sub_45529( ref (uParam0^)[I], uParam1, uParam2, uParam3, uParam4, uParam5, uParam6 )) == 1)
        {
            return 1;
        }
    }
    return 0;
}

int sub_45529(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, int iParam6)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        if ((uParam3) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 1 )))
        {
            if (iParam6 == 1)
            {
                sub_471( "MF", "ped has SEEN target ped", 0 );
            }
            return 1;
        }
        else if ((uParam4) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 8 )))
        {
            if (iParam6 == 1)
            {
                sub_471( "MF", "ped has BEEN SHOT AT by target ped", 0 );
            }
            return 1;
        }
        else if ((uParam2) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 2 )))
        {
            if (iParam6 == 1)
            {
                sub_471( "MF", "ped has HEARD target ped", 0 );
            }
            return 1;
        }
        else if ((uParam5) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 4 )))
        {
            if (iParam6 == 1)
            {
                sub_471( "MF", "ped has BEEN TOLD ABOUT target ped", 0 );
            }
            return 1;
        };;;;
    }
    return 0;
}

void sub_46037(int iParam0)
{
    return iParam0->_fU56;
}

int sub_46114(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND ((sub_46037( iParam0 )) == 0)))
    {
        if ((sub_46270() == 1) AND (((IS_PED_RELOADING( sub_834() )) == 0) AND (((IS_PED_GETTING_UP( sub_834() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP( sub_834() )) == 0) AND (((IS_PED_IN_COVER( sub_834() )) == 0) AND (((IS_PED_DUCKING( sub_834() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

int sub_46270()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

int sub_46431(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_834() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_834() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_46517( sub_834(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_46517( sub_834(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_13583( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_13644( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_46270() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_47401( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_12988( iParam0, 0 );
                            sub_47472( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_12988( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_834() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_834(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_12988( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_47472( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_834() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_834(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_834() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_834(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_834() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_834(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_12988( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_47472( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_834() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_834() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_834() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_834(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_47472( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

int sub_46517(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_47401(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_12988( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_12988( iParam0, 0 );
        sub_47472( iParam0, 0 );
        if ((IS_PED_DEAD( sub_834() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_834() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_834(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_47472(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_13583( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_48666()
{
    if (l_U185 == 10)
    {
        l_U932 = 1;
    }
    else
    {
        l_U932 = 0;
    }
    if ((NOT (sub_46037( ref l_U799 ))) AND (sub_45460()))
    {
        sub_13541( ref l_U799, 1 );
    }
    if ((sub_46037( ref l_U799 )) AND (NOT sub_45460()))
    {
        sub_13541( ref l_U799, 0 );
    }
    if ((sub_46114( ref l_U799 )) == 1)
    {
        sub_35927( ref g_U1256 );
        sub_36024( 0, sub_834(), "MAX", ref g_U1256, 2, 0 );
        sub_36024( 1, sub_834(), "MAX", ref g_U1256, 2, 0 );
        sub_36280( "EXPLORE_ITEM", ref g_U1256, 8, 1 );
    }
    if ((sub_46431( ref l_U799 )) == 1)
    {
        l_U185 = 12;
        sub_471( "CR", "eCheckpointState = CP_LL_POI_NOTE", 0 );
    }
    return;
}

void sub_48942()
{
    if (NOT (sub_1650( ref g_U4052 )))
    {
        sub_48976( ref g_U4052, g_U4061 );
    }
    if (((g_U4052._fU16) || (sub_2016( ref g_U4052 ))) AND (sub_49012()))
    {
        sub_471( "MF", "Playing Speech: SPAN_MXFNDS1", 0 );
        sub_49217( ref g_U4063, ref g_U1246 );
        sub_2553( ref g_U4052 );
    }
    return;
}

void sub_48976(unknown uParam0, unknown uParam1)
{
    sub_1760( uParam0, uParam1, 1, 0 );
    sub_1896( uParam0 );
    return;
}

int sub_49012()
{
    if (GET_PAYNEKILLER_AMT() > g_U4062)
    {
        sub_471( "CR", "Player picked up Payne Killers!", 0 );
        sub_29812( g_U4062 );
        sub_29812( GET_PAYNEKILLER_AMT() );
        g_U4062 = GET_PAYNEKILLER_AMT();
        return 1;
    }
    g_U4062 = GET_PAYNEKILLER_AMT();
    return 0;
}

void sub_49217(unknown uParam0, unknown uParam1)
{
    sub_35927( uParam1 );
    sub_36024( 0, sub_834(), "MAX", uParam1, 2, 0 );
    sub_36024( 1, sub_834(), "MAX", uParam1, 2, 0 );
    sub_36280( uParam0, uParam1, 8, 1 );
    return;
}

void sub_49381(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_46517( sub_834(), uParam0 );
}

void sub_49462(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    return;
}

void sub_49503(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_SET_ACTION_INTENTION( uParam0, uParam1, uParam2, l_U52 );
    }
    return;
}

void sub_49650(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    unknown uVar11;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        OPEN_SEQUENCE_TASK( ref uVar11 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, uParam7 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uParam1, uParam6, -1, 1048576000, 0, 0 );
        TASK_ACHIEVE_HEADING( 0, uParam4, 0, uParam8 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, uParam5 );
        TASK_STAND_STILL( 0, -1 );
        CLOSE_SEQUENCE_TASK( uVar11 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar11 );
        CLEAR_SEQUENCE_TASK( uVar11 );
    }
    return;
}

void sub_49818(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    unknown uVar9;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        OPEN_SEQUENCE_TASK( ref uVar9 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, uParam6 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uParam1, uParam5, -1, 1048576000, 0, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, uParam4 );
        TASK_STAND_STILL( 0, -1 );
        CLOSE_SEQUENCE_TASK( uVar9 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar9 );
        CLEAR_SEQUENCE_TASK( uVar9 );
    }
    return;
}

int sub_49966(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if ((sub_49981( (uParam0^), uParam1 )) == 1)
    {
        if (bParam2)
        {
            sub_50047( uParam0, uParam1 );
        }
        return 1;
    }
    return 0;
}

int sub_49981(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 );
    }
    return 0;
}

void sub_50047(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

void sub_50143(unknown uParam0)
{
    unknown uVar3;

    sub_471( "MF", "P_LL_BUNK_REBELS_SPOT_PLAYER: START", 0 );
    sub_50211( ref l_U388, sub_834() );
    sub_50310( ref l_U388[0], 2, 0 );
    if (sub_46517( l_U388[1], l_U346 ))
    {
        if ((NOT (IS_PED_DEAD( sub_834() ))) AND (NOT (IS_PED_DEAD( l_U388[1] ))))
        {
            sub_471( "MF", "Telling rebel to take cover from player", 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U388[1], 0 );
            OPEN_SEQUENCE_TASK( ref uVar3 );
            TASK_COMBAT_PED( 0, sub_834() );
            CLOSE_SEQUENCE_TASK( uVar3 );
            SET_PED_ALERTNESS( l_U388[1], 2 );
            REGISTER_TARGET( l_U388[1], sub_834() );
            TASK_PERFORM_SEQUENCE( l_U388[1], uVar3 );
            CLEAR_SEQUENCE_TASK( uVar3 );
        }
    }
    else
    {
        sub_50310( ref l_U388[1], 2, 0 );
    }
    sub_49503( l_U388[0], 47, 1000 );
    sub_49503( l_U388[1], 47, 1000 );
    if (sub_31579( sub_834(), 0 ))
    {
        SET_PED_AUTO_UPDATE_EMOTION_STATE( sub_834(), 1 );
    }
    ENABLE_WALLA_ZONE( "S_PANA_WZ_LOWER_DECK_GET_READY", 1 );
    sub_471( "MF", "P_LL_BUNK_REBELS_SPOT_PLAYER: END", 0 );
    return;
}

void sub_50211(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (sub_31579( (uParam0^)[I], 0 ))
        {
            if (sub_31579( uParam1, 0 ))
            {
                REGISTER_TARGET( (uParam0^)[I], uParam1 );
            }
        }
    }
    return;
}

void sub_50310(unknown uParam0, unknown uParam1, unknown uParam2)
{
    sub_50331( uParam0, sub_834(), uParam1, uParam2 );
    return;
}

void sub_50331(unknown uParam0, unknown uParam1, unknown uParam2, boolean bParam3)
{
    unknown uVar6;

    sub_49462( "MAL_UnblockAndCombatPed" );
    OPEN_SEQUENCE_TASK( ref uVar6 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        sub_49462( "MAL_UnblockAndCombatPed: Victim is not dead" );
        TASK_COMBAT_PED( 0, uParam1 );
    }
    CLOSE_SEQUENCE_TASK( uVar6 );
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        sub_49462( "MAL_UnblockAndCombatPed: Ped is not dead" );
        if (bParam3)
        {
            CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        }
        else
        {
            CLEAR_PED_TASKS( (uParam0^) );
        }
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam2 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar6 );
    }
    CLEAR_SEQUENCE_TASK( uVar6 );
    return;
}

void sub_51084()
{
    unknown uVar2;

    sub_471( "MF", "P_LL_BUNK_HALLWAY_ENTRANCE_ATTACK: START", 0 );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
    TASK_COMBAT_MOVE_TO_COVER( 0, "pana_GP_LowerLevel", "Corner Position40", sub_834() );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_COMBAT_PED( 0, sub_834() );
    CLOSE_SEQUENCE_TASK( uVar2 );
    if (sub_31579( l_U388[2], 0 ))
    {
        REGISTER_TARGET( l_U388[2], sub_834() );
        TASK_PERFORM_SEQUENCE( l_U388[2], uVar2 );
    }
    CLEAR_SEQUENCE_TASK( uVar2 );
    sub_471( "MF", "P_LL_BUNK_HALLWAY_ENTRANCE_ATTACK: END", 0 );
    return;
}

void sub_51375()
{
    sub_471( "MF", "P_LL_BUNK_REBELS_SPOT_PLAYER_DIALOGUE: START", 0 );
    sub_35775( ref g_U1246, 0 );
    sub_35927( ref g_U1246 );
    sub_36024( 2, l_U388[1], "M11_REBL_01_Avg", ref g_U1246, 2, 0 );
    sub_36024( 3, l_U388[0], "M11_REBL_02_Mus", ref g_U1246, 2, 0 );
    sub_36280( "SPAN_VIG01C", ref g_U1246, 8, 1 );
    sub_471( "MF", "P_LL_BUNK_REBELS_SPOT_PLAYER_DIALOGUE: END", 0 );
    return;
}

void sub_51719()
{
    int I;

    sub_471( "MF", "P_LL_SETUP_AGRESSIVE_GROUP_ADVANCE - START", 0 );
    l_U341 = PEDGROUPTASK_ADVANCE_CREATE( l_U335._fU0 );
    for ( I = 0; I < l_U455; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U455[I] )))
        {
            PEDGROUPTASK_ADVANCE_ASSIGNPED( l_U335._fU0, l_U341, l_U455[I] );
            PEDGROUPTASK_ADVANCE_SETPEDCANADVANCE( l_U335._fU0, l_U341, l_U455[I], 0 );
        }
    }
    for ( I = 0; I < l_U388; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U388[I] )))
        {
            PEDGROUPTASK_ADVANCE_ASSIGNPED( l_U335._fU0, l_U341, l_U388[I] );
        }
    }
    if (NOT (IS_PED_DEAD( sub_834() )))
    {
        PEDGROUPTASK_ADVANCE_SETTARGET_PED( l_U335._fU0, l_U341, sub_834() );
    }
    PEDGROUPTASK_ADVANCE_SETTIMETOHIDE( l_U335._fU0, l_U341, 2.00000000 );
    PEDGROUPTASK_ADVANCE_SETTIMETOIDLE( l_U335._fU0, l_U341, 0.00000000 );
    PEDGROUPTASK_ADVANCE_SETTIMERANGEFORALLPEDSTOSTARTFIRING( l_U335._fU0, l_U341, 1.00000000 );
    PEDGROUPTASK_ADVANCE_SETADVANCEDISTANCE( l_U335._fU0, l_U341, 3.00000000 );
    PEDGROUPTASK_ADVANCE_SETNUMPEDSTOADVANCE( l_U335._fU0, l_U341, 2 );
    sub_471( "MF", "P_LL_SETUP_AGRESSIVE_GROUP_ADVANCE - END", 0 );
    return;
}

void sub_52295()
{
    if (((sub_52309( ref l_U388 )) + (sub_52309( ref l_U455 ))) == 1)
    {
        if ((sub_52410( ref l_U557 )) AND ((sub_52410( ref l_U543 )) AND (sub_52410( ref l_U529 ))))
        {
            sub_52488( ref l_U455 );
            sub_52488( ref l_U388 );
        }
    }
    if ((sub_52410( ref l_U543 )) AND ((sub_52410( ref l_U529 )) AND ((sub_52630( ref l_U455, 0 )) AND (sub_52630( ref l_U388, 0 )))))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U557, 1 );
    }
    if ((sub_52410( ref l_U557 )) AND ((sub_52410( ref l_U529 )) AND ((sub_52630( ref l_U455, 0 )) AND (sub_52630( ref l_U388, 0 )))))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U543, 1 );
    }
    if ((sub_52410( ref l_U557 )) AND ((sub_52410( ref l_U543 )) AND ((sub_52630( ref l_U455, 0 )) AND (sub_52630( ref l_U388, 0 )))))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U529, 1 );
    }
    return;
}

void sub_52309(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

int sub_52410(unknown uParam0)
{
    if ((IS_PED_DEAD( (uParam0^) )) AND (DOES_PED_EXIST( (uParam0^) )))
    {
        return 1;
    }
    return 0;
}

void sub_52488(unknown uParam0)
{
    int I;

    if ((sub_52309( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

int sub_52630(unknown uParam0, boolean bParam1)
{
    if ((sub_52643( uParam0, 0 )) == 1)
    {
        if (NOT bParam1)
        {
            if ((sub_52309( uParam0 )) == 0)
            {
                return 1;
            }
        }
        if (bParam1)
        {
            if ((sub_52777( uParam0 )) == (uParam0^))
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_52643(unknown uParam0, boolean bParam1)
{
    int I;
    int Result;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((DOES_PED_EXIST( (uParam0^)[I] )) == 1)
        {
            Result = 1;
            if (NOT bParam1)
            {
                return 1;
            }
        }
        else
        {
            Result = 0;
        }
    }
    return Result;
}

void sub_52777(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

void sub_53101()
{
    sub_49462( "P_LL_KITCHEN_WAVE_ATTACK: START" );
    sub_53163( ref l_U455[0], sub_834(), 0 );
    sub_53306( ref l_U455[1], sub_834(), -8.84041300, 1.08304900, -0.65335700, 0 );
    sub_53306( ref l_U455[2], sub_834(), -8.86820100, 4.16574800, -0.65335700, 0 );
    PEDGROUPTASK_ADVANCE_TRIGGER_MOVE( l_U335._fU0, l_U341 );
    sub_49462( "P_LL_KITCHEN_WAVE_ATTACK: END" );
    return;
}

void sub_53163(unknown uParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;

    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        OPEN_SEQUENCE_TASK( ref uVar5 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, uParam2 );
        TASK_COMBAT_PED( 0, uParam1 );
        CLOSE_SEQUENCE_TASK( uVar5 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar5 );
        CLEAR_SEQUENCE_TASK( uVar5 );
    }
    return;
}

void sub_53306(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        OPEN_SEQUENCE_TASK( ref uVar8 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, uParam5 );
        TASK_COMBAT_MOVE_TO_COVER_COORDS( 0, uParam2, uParam1 );
        TASK_COMBAT_PED( 0, uParam1 );
        CLOSE_SEQUENCE_TASK( uVar8 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar8 );
        CLEAR_SEQUENCE_TASK( uVar8 );
    }
    return;
}

void sub_53540(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_46517( sub_834(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_53641()
{
    int I;

    sub_471( "MF", "P_LL_KITCHEN_REBELS_UPDATE_TETHER - START", 0 );
    for ( I = 0; I < l_U455; I++ )
    {
        sub_53735( ref l_U342, l_U455[I] );
        sub_34235( ref l_U343, l_U455[I], 1 );
    }
    sub_471( "MF", "P_LL_KITCHEN_REBELS_UPDATE_TETHER - END", 0 );
    return;
}

void sub_53735(int iParam0, unknown uParam1)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_REMOVE_BOX( uParam1, iParam0->_fU0 );
    }
    return;
}

int sub_53886()
{
    if (NOT (DOES_PED_EXIST( l_U529 )))
    {
        if ((sub_49381( l_U592 )) || ((sub_49381( l_U571 )) || ((sub_52777( ref l_U455 )) > 0)))
        {
            return 1;
        }
    }
    return 0;
}

void sub_53972()
{
    sub_471( "MF", "P_LL_REBEL_REINFORCEMENT_A_CREATE - START", 0 );
    l_U529 = sub_30039( ref l_U530 );
    if (sub_31579( l_U529, 0 ))
    {
        sub_7033( l_U529, -612753081, 25000, 0, 0 );
        sub_34235( ref l_U342, l_U529, 1 );
        SET_PED_AI_TEMPLATE( l_U529, ref g_U1504 );
        SET_ROOM_FOR_PED_BY_NAME( l_U529, ref g_U3199 );
        sub_33642( l_U529, ref l_U335 );
        SET_PED_NAME_DEBUG( l_U529, "KitchenReinforcement_A" );
        SET_PED_ALERTNESS( l_U529, 3 );
        SET_PED_COMBAT_RANGE_MAX( l_U529, 17.00000000 );
        SET_PED_COMBAT_RANGE_MIN( l_U529, 4.00000000 );
        SET_PED_SUGGESTED_COVER_POINT( l_U529, "GenCover", "CDE695FF_8F839446_Popover6" );
    }
    sub_471( "MF", "P_LL_REBEL_REINFORCEMENT_A_CREATE - END", 0 );
    return;
}

void sub_54346()
{
    sub_471( "MF", "P_LL_REBEL_REINFORCEMENT_A_ATTACK - START", 0 );
    if ((sub_31579( sub_834(), 0 )) AND (sub_31579( l_U529, 0 )))
    {
        sub_54443( ref l_U529 );
        TASK_COMBAT_PED( l_U529, sub_834() );
    }
    sub_471( "MF", "P_LL_REBEL_REINFORCEMENT_A_ATTACK - END", 0 );
    return;
}

void sub_54443(unknown uParam0)
{
    sub_54460( uParam0, sub_834() );
    return;
}

void sub_54460(unknown uParam0, unknown uParam1)
{
    sub_54474( uParam0, uParam1 );
    sub_54535( uParam0, uParam1 );
    return;
}

void sub_54474(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_54535(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

int sub_54686()
{
    if (NOT (DOES_PED_EXIST( l_U543 )))
    {
        if ((sub_49381( l_U592 )) || ((sub_49381( l_U571 )) || ((sub_52410( ref l_U529 )) || ((sub_52777( ref l_U455 )) > 1))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_54782()
{
    sub_471( "MF", "P_LL_REBEL_REINFORCEMENT_B_CREATE - START", 0 );
    l_U543 = sub_30039( ref l_U544 );
    if (sub_31579( l_U543, 0 ))
    {
        sub_7033( l_U543, -612753081, 25000, 0, 0 );
        sub_34235( ref l_U342, l_U543, 1 );
        SET_PED_AI_TEMPLATE( l_U543, ref g_U1472 );
        SET_ROOM_FOR_PED_BY_NAME( l_U543, ref g_U3207 );
        sub_33642( l_U543, ref l_U335 );
        SET_PED_NAME_DEBUG( l_U543, "KitchenReinforcement_B" );
        SET_PED_ALERTNESS( l_U543, 3 );
        SET_PED_COMBAT_RANGE_MAX( l_U543, 17.00000000 );
        SET_PED_COMBAT_RANGE_MIN( l_U543, 4.00000000 );
        SET_PED_SUGGESTED_COVER_POINT( l_U543, "GenCover", "CDE695FF_8F839446_Popover2" );
    }
    sub_471( "MF", "P_LL_REBEL_REINFORCEMENT_B_CREATE - END", 0 );
    return;
}

void sub_55156()
{
    sub_471( "MF", "P_LL_REBEL_REINFORCEMENT_B_ATTACK - START", 0 );
    if ((sub_31579( sub_834(), 0 )) AND (sub_31579( l_U543, 0 )))
    {
        sub_54443( ref l_U543 );
        TASK_COMBAT_PED( l_U543, sub_834() );
    }
    sub_471( "MF", "P_LL_REBEL_REINFORCEMENT_B_ATTACK - END", 0 );
    return;
}

int sub_55336()
{
    if (NOT (DOES_PED_EXIST( l_U557 )))
    {
        if ((sub_49381( l_U634 )) || ((sub_49381( l_U613 )) || ((sub_52410( ref l_U543 )) AND (sub_52410( ref l_U529 )))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_55430()
{
    sub_471( "MF", "P_LL_REBEL_REINFORCEMENT_C_CREATE - START", 0 );
    if (sub_49381( l_U613 ))
    {
        sub_471( "MF", "Spawning REINFORCEMENT_C from Radio area...", 0 );
        l_U558._fU0 = {1.06672000, 5.58656200, -0.66559300};
    }
    l_U557 = sub_30039( ref l_U558 );
    if (sub_31579( l_U557, 0 ))
    {
        sub_7033( l_U557, -1404433099, 25000, 0, 0 );
        sub_34235( ref l_U342, l_U557, 1 );
        SET_PED_AI_TEMPLATE( l_U557, ref g_U1504 );
        if (sub_49381( l_U613 ))
        {
            sub_471( "MF", "Setting REINFORCEMENT_C room to : sRoomName_LL_PipeRoom", 0 );
            SET_ROOM_FOR_PED_BY_NAME( l_U557, ref g_U3207 );
        }
        else
        {
            sub_471( "MF", "Setting REINFORCEMENT_C room to : sRoomName_LL_GalleyStore", 0 );
            SET_ROOM_FOR_PED_BY_NAME( l_U557, ref g_U3199 );
        }
        sub_33642( l_U557, ref l_U335 );
        SET_PED_NAME_DEBUG( l_U557, "KitchenReinforcement_C" );
        SET_PED_ALERTNESS( l_U557, 3 );
        SET_PED_COMBAT_RANGE_MAX( l_U557, 17.00000000 );
        SET_PED_COMBAT_RANGE_MIN( l_U557, 4.00000000 );
        SET_PED_SUGGESTED_COVER_POINT( l_U557, "GenCover", "CDE695FF_8F839446_Popover4" );
    }
    sub_471( "MF", "P_LL_REBEL_REINFORCEMENT_C_CREATE - END", 0 );
    return;
}

void sub_56079()
{
    sub_471( "MF", "P_LL_REBEL_REINFORCEMENT_C_ATTACK - START", 0 );
    if ((sub_31579( sub_834(), 0 )) AND (sub_31579( l_U557, 0 )))
    {
        sub_54443( ref l_U557 );
        TASK_COMBAT_PED( l_U557, sub_834() );
    }
    sub_471( "MF", "P_LL_REBEL_REINFORCEMENT_C_ATTACK - END", 0 );
    return;
}

int sub_56259()
{
    if ((sub_52410( ref l_U557 )) AND ((sub_52410( ref l_U543 )) AND ((sub_52410( ref l_U529 )) AND ((sub_52630( ref l_U455, 0 )) AND (sub_52630( ref l_U388, 0 ))))))
    {
        return 1;
    }
    return 0;
}

void sub_56626()
{
    if (sub_56259() == 1)
    {
        sub_56652( ref l_U346 );
        sub_56652( ref l_U367 );
    }
    return;
}

void sub_56652(int iParam0)
{
    if (sub_53540( iParam0, 0 ))
    {
        SET_PED_FORCED_TO_WALK( sub_834(), 1 );
        sub_471( "MF", "P_HANDLE_PLAYER_FORCED_WALKING_TRIGGER: TELLING PLAYER TO WALK", 0 );
    }
    else if ((NOT (sub_49381( (iParam0^) ))) AND (iParam0->_fU64))
    {
        iParam0->_fU64 = 0;
        SET_PED_FORCED_TO_WALK( sub_834(), 0 );
        sub_471( "MF", "P_HANDLE_PLAYER_FORCED_WALKING_TRIGGER: TELLING PLAYER TO RUN", 0 );
    }
    return;
}

void sub_56913()
{
    if (sub_56259() == 1)
    {
        if (NOT IS_PLAYER_SHOOTDODGING())
        {
            if (sub_2016( ref l_U1027 ))
            {
                sub_49217( "SPAN_MKEVRNE", ref g_U1246 );
            }
            if (sub_53540( ref l_U943, 0 ))
            {
                sub_49217( "SPAN_MGTHOW", ref g_U1246 );
            }
            if (sub_53540( ref l_U964, 0 ))
            {
                sub_49217( "SPAN_MGTMRR", ref g_U1246 );
            }
            if (sub_53540( ref l_U985, 0 ))
            {
                sub_49217( "SPAN_MGTPSR", ref g_U1246 );
            }
            if (sub_53540( ref l_U1006, 0 ))
            {
                sub_49217( "SPAN_MSTHRAD", ref g_U1246 );
            }
        }
    }
    return;
}

int sub_57170(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_35789( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

int sub_57309(int iParam0, unknown uParam1, boolean bParam2, boolean bParam3)
{
    if ((sub_53540( iParam0, 0 )) == 1)
    {
        if (NOT bParam3)
        {
            SET_PED_FORCED_TO_WALK( sub_834(), 1 );
        }
        if (NOT bParam2)
        {
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_856(), 0 );
        }
    }
    if ((NOT (sub_49381( (iParam0^) ))) AND (iParam0->_fU64))
    {
        iParam0->_fU64 = 0;
        if (NOT bParam3)
        {
            SET_PED_FORCED_TO_WALK( sub_834(), 0 );
        }
        if (NOT bParam2)
        {
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_856(), 1 );
        }
    }
    if (sub_53540( uParam1, 0 ))
    {
        return 1;
    }
    return 0;
}

void sub_57624(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_VISIBLE( uParam0, uParam1 );
    }
    else
    {
        sub_49462( "MAL_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

void sub_57723()
{
    sub_471( "GA", "P_RESET_MAX_ACTION_TREE start", 0 );
    if (NOT (IS_PED_DEAD( sub_834() )))
    {
        if (IS_PLAYER_SHOOTDODGING())
        {
            SCRIPT_ASSERT( "Do not try to reset Max's action tree when he is shoot dodging.", 0 );
            sub_471( "GA", "You cannot reset Max's action tree during a shoot dodge.", 0 );
        }
        else
        {
            PED_ACTION_TREE_PLAY_NODE( sub_834(), "/Global/Player" );
        }
    }
    sub_471( "GA", "P_RESET_MAX_ACTION_TREE end", 0 );
    return;
}

void sub_58191(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

int sub_59180(unknown uParam0, unknown uParam1)
{
    if (CUTSCENE_IS_LOADED( uParam1 ))
    {
        sub_6704( " is loaded." );
        return 1;
    }
    else if ((CUTSCENE_NAMED_IS_LOADING( uParam0 )) || (CUTSCENE_IS_LOADED( uParam0 )))
    {
        sub_6704( uParam0 );
        CLEAR_NAMED_CUTSCENE( uParam0 );
    }
    else if (CUTSCENE_NAMED_IS_LOADING( uParam1 ))
    {
        sub_6704( " is loading." );
    }
    else
    {
        sub_6704( uParam1 );
        sub_26527( uParam1, 0 );
    };;;
    return 0;
}

int sub_59450()
{
    if (NOT (DOES_PED_EXIST( l_U331 )))
    {
        l_U331 = sub_30039( ref l_U318 );
    }
    if ((sub_31579( l_U331, 0 )) == 1)
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U331, 1 );
        sub_7033( l_U331, -612753081, 25000, 0, 0 );
        SET_ROOM_FOR_PED_BY_NAME( l_U331, ref g_U3215 );
        return 1;
    }
    return 0;
}

void sub_59573()
{
    unknown uVar2;

    sub_35775( ref g_U1246, 0 );
    if (sub_31579( sub_834(), 0 ))
    {
        CUTSCENE_OBJECT_OVERRIDE_VISIBILITY( "W_PI_PT92_Aa_H" );
        CUTSCENE_REGISTER_PED_TELEPORT( sub_834(), -1.30200000, 4.77600000, -0.67000000, 287.17520000 );
        ISEQ_REGISTER_ENTITY( 995399098, "Max", sub_834(), 0 );
        CUTSCENE_REGISTER_ISEQ( 995399098 );
    }
    if (NOT (IS_PED_DEAD( l_U331 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U331, "M_PA_REBL_A", 1 );
        uVar2 = GET_WEAPON_FROM_HAND( l_U331, 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_PI_608_Aa_H", 1 );
        }
    }
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U3713[8]._fU0, g_U3713[8]._fU4 ), "P_MI_BlkDor_ob_H", 0 );
    return;
}

void sub_59868()
{
    unknown uVar2;

    if (l_U291._fU52)
    {
        sub_14681( ref g_U3713[8], 0, 1, 1.00000000 );
        if ((NOT (IS_PLAYER_DEAD( sub_856() ))) AND (NOT (IS_PED_DEAD( sub_834() ))))
        {
            SET_PED_FORCED_TO_WALK( sub_834(), 0 );
            TASK_CLEAR_LOOK_AT( sub_834() );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_856(), 1 );
            uVar2 = GET_WEAPON_FROM_HAND( sub_834(), 1, 0 );
            if (GET_DOES_WEAPON_EXIST( uVar2 ))
            {
                SET_WEAPON_VISIBLE( uVar2, 0 );
            }
        }
    }
    return;
}

int sub_60029()
{
    return 1;
}

void sub_60048()
{
    sub_471( "GA", "P_LL_MID_00_PANAMA_PrepareBlendout start", 0 );
    CAMERA_PLAY_ANIMATED( "LEVEL_S_PAN_CP_01", "B_OUT_MID_00_PANAMA_FWD_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
    sub_4229( l_U331 );
    sub_471( "GA", "P_LL_MID_00_PANAMA_PrepareBlendout end", 0 );
    return;
}

int sub_60262()
{
    if (NOT l_U332)
    {
        if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_PAN_CP_01", "B_OUT_MID_00_PANAMA_FWD_CAM" )) - 2000))
        {
            sub_471( "GA", "Stopping animated camera B_OUT_MID_00_PANAMA_FWD_CAM in a freeze frame.", 0 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( 1.81551900, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( -7.05260200, 1065353216, 0 );
            CAMERA_ANIMATED_STOP( 2000, 1 );
            l_U332 = 1;
        }
    }
    if ((ISEQ_QUERY_ENTITY_STATE( 995399098, "Max", 6 )) || (ISEQ_QUERY_ENTITY_STATE( 995399098, "Max", 5 )))
    {
        sub_471( "GA", "MID_00_PAN blendout complete.", 0 );
        if (NOT l_U332)
        {
            sub_471( "GA", "Animated camera did not finish before interactive sequence, freezing now.", 0 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( 9.00000000, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( -7.00000000, 1065353216, 0 );
            CAMERA_ANIMATED_STOP( 2000, 1 );
            l_U332 = 1;
        }
        return 1;
    }
    return 0;
}

void sub_60904(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

void sub_61315()
{
    sub_471( "GA", "P_RELEASE_LL_ASSETS start", 0 );
    sub_61372( ref l_U176, ref g_U1588 );
    sub_61407( g_U1536, ref g_U1588 );
    sub_61664( ref l_U181, ref g_U1829 );
    sub_61880( ref g_U3071, ref g_U3026 );
    sub_62073( "LEVEL_S_PAN_CP_01", ref g_U1975 );
    sub_62073( "EXPL_CAM", ref g_U1975 );
    sub_471( "GA", "P_RELEASE_LL_ASSETS end", 0 );
    return;
}

void sub_61372(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_61407( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_61407(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_3446( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

void sub_61664(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_61699( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_61699(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_3446( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_61880(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_3446( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_62073(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_3446( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


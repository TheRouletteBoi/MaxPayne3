void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U58 = 0;
    l_U59 = 0;
    l_U60 = 1500;
    l_U70 = {0, 0, 0};
    StrCopy( ref l_U73, "DUMMY", 32 );
    l_U81 = 1;
    l_U86 = 0;
    l_U87 = 0;
    l_U88 = 0;
    l_U91 = 0;
    l_U136 = -1;
    l_U137 = {64536, 64536, 64536};
    l_U141 = 0;
    l_U189 = 0;
    l_U191 = 1;
    l_U192 = 0;
    l_U900 = {4.45000000, 7.35000000, 4.00000000};
    l_U903 = -140.00000000;
    l_U904 = 1000;
    l_U906 = {4.50000000, 6.05000000, 2.96000000};
    l_U909 = {0.00000000, 0.00000000, 180.00000000};
    l_U1050 = {-17.45000000, 10.12000000, 2.65000000};
    l_U1053 = 64.56000000;
    l_U1054 = 5500;
    l_U1056 = {-17.90000000, 10.30000000, 2.12500000};
    l_U1059 = {0.00000000, 0.00000000, 65.00000000};
    l_U1200 = {-31.00000000, 10.20000000, 4.00000000};
    l_U1203 = 65.00000000;
    l_U1204 = 4000;
    l_U1206 = {-31.40000000, 10.95000000, 3.04000000};
    l_U1209 = {0.00000000, 0.00000000, 10.00000000};
    l_U1345 = 0;
    sub_628( "SP", "Script s_pana_MD2.sc is starting up...", 0 );
    sub_677();
    l_U189 = 1;
    while (NOT IS_EXITFLAG_SET())
    {
        sub_912();
        if (l_U192 == 0)
        {
            sub_8800();
        }
        WAIT( 0 );
    }
    sub_3419();
    sub_55557();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_pana_MD2" );
    sub_628( "SP", "Script s_pana_MD2.sc is terminating...", 0 );
    return;
}

void sub_628(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_677()
{
    sub_628( "GA", "P_MD2_POPULATE_SCRIPT_ARRAYS start", 0 );
    l_U179[0] = g_U1515;
    l_U179[1] = g_U1517;
    l_U179[2] = -1409914275;
    l_U179[3] = -1660877942;
    l_U179[4] = 386729125;
    l_U179[5] = 1678394868;
    l_U186[0] = -612753081;
    l_U186[1] = -1404433099;
    sub_628( "GA", "P_MD2_POPULATE_SCRIPT_ARRAYS end", 0 );
    return;
}

void sub_912()
{
    unknown uVar2;
    unknown uVar3;

    if (g_U834 == 4)
    {
        switch (l_U192)
        {
            case 0:
            if ((sub_1067()) || (IS_PED_DEAD( sub_994() )))
            {
                l_U192 = 1;
                sub_628( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_1561())
            {
                if ((g_U835[5]._fU40 != 4) AND (g_U835[5]._fU40 != 0))
                {
                    sub_628( "GA", "Shutting down script for 2nd Deck.", 0 );
                    sub_1678( ref g_U835[5] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U835[5]._fU32 );
                }
                l_U192 = 3;
            }
            else if ((sub_1743( 0 )) == 1)
            {
                if ((g_U835[5]._fU40 != 4) AND (g_U835[5]._fU40 != 0))
                {
                    sub_628( "GA", "Shutting down script for 2nd Deck.", 0 );
                    sub_1678( ref g_U835[5] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U835[5]._fU32 );
                }
                l_U192 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_994() )))
            {
                l_U192 = 3;
                sub_628( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_628( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_994() ))) AND (NOT (IS_PLAYER_DEAD( sub_1016() ))))
            {
                SET_PLAYER_CONTROL( sub_1016(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_994() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_994(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            sub_3419();
            l_U192 = 4;
            sub_628( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_628( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            if (l_U143._fU0)
            {
                sub_4525( ref l_U143, sub_994() );
            }
            uVar2 = GET_HASH_KEY( ref g_U3239 );
            uVar3 = GET_INTERIOR_AT_COORDS( g_U980[4] );
            SET_INTERIOR_ACTIVE( uVar3, 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( uVar3, uVar2 );
            l_U192 = 5;
            sub_628( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_628( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U189 = 1;
            l_U192 = 0;
            l_U191 = 0;
            sub_628( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_994()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_1016() );
    }
    return 0;
}

void sub_1016()
{
    return GET_PLAYER_ID();
}

int sub_1067()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_994() )))
        {
            SET_PED_FORCED_TO_WALK( sub_994(), 0 );
            SET_PLAYER_FORCED_AIM( sub_1016(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1016(), 1 );
            if ((IS_PED_VISIBLE( sub_994() )) == 0)
            {
                SET_PED_VISIBLE( sub_994(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_1561()
{
    return g_U648;
}

void sub_1678(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

int sub_1743(int iParam0)
{
    iParam0 = 1;
    switch (l_U59)
    {
        case 0:
        if (NOT (sub_1804( ref l_U61 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_994() )))
            {
                l_U60 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_1914( ref l_U61, l_U60, 1, 1 );
            sub_2050( ref l_U61 );
        }
        if (sub_2170( ref l_U61 ))
        {
            sub_628( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_994() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_1016() )))
            {
                SET_PLAYER_CONTROL( sub_1016(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U59 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U59 = 2;
            }
            else
            {
                l_U59 = 3;
            }
        }
        break;
        case 2:
        sub_628( "NS", "Player will QUIT", 0 );
        sub_2657();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_628( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_2657();
        return 1;
        break;
    }
    return 0;
}

int sub_1804(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_1914(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_2050(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_2170(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_2657()
{
    sub_628( "NS", "P_PostFailRetryCleanup", 0 );
    sub_2707( ref l_U61 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_1016() )))
    {
        SET_PLAYER_CONTROL( sub_1016(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U58 = 0;
    l_U58 = l_U58;
    l_U59 = 0;
    return;
}

void sub_2707(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_3419()
{
    sub_628( "GA", "P_CLEANUP_MD2 start", 0 );
    ISEQ_TERMINATE( 1503037477 );
    sub_3483( 1503037477, ref g_U1878 );
    ISEQ_TERMINATE( -1635536756 );
    sub_3483( -1635536756, ref g_U1878 );
    ISEQ_TERMINATE( 1210964119 );
    sub_3483( 1210964119, ref g_U1878 );
    sub_3907( ref l_U244 );
    sub_3907( ref l_U353 );
    sub_4047( ref l_U193 );
    sub_4147( l_U905 );
    sub_4147( l_U1055 );
    sub_4147( l_U1205 );
    sub_4207();
    if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( "PANAMA_OS_1" ))
    {
        AUDIO_MUSIC_STOP_ONESHOT();
    }
    sub_628( "GA", "P_CLEANUP_MD2 end", 0 );
    return;
}

void sub_3483(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_3595( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

int sub_3595(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_3907(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_3941( (uParam0^)[I] );
    }
    return;
}

void sub_3941(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_4047(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_4080( (uParam0^)[I] );
    }
    return;
}

void sub_4080(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_4147(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_4207()
{
    sub_628( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    sub_628( "CCB", "Stopping the Panama_MD2 context...", 0 );
    END_CONTEXT( "Panama_MD2" );
    return;
}

void sub_4525(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_628( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_4709( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_5786( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_6078( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_6438( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_6078( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_6438( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_6078( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_6438( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_6723( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_6438( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_6723( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_6438( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_7216( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_7377( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_994(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_628( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_4709(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_4741( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_4741(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_5786(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_6078(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_6394( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_6394(unknown uParam0)
{
    return;
}

void sub_6438(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_6723(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_6394( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_7216(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_7377(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_4741( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_7449( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_7449(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_8800()
{
    int iVar2;

    iVar2 = l_U189;
    sub_8817();
    switch (l_U189)
    {
        case 0: break;
        case 1:
        sub_628( "SP", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
        sub_9811();
        sub_10029();
        sub_14150();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U189 = 2;
        sub_628( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_628( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        sub_14692();
        sub_19933();
        l_U189 = 3;
        sub_628( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if ((sub_22961( ref g_U1975 )) AND ((sub_22770( ref g_U1878 )) AND ((sub_22643( ref g_U3026 )) AND ((sub_22522( ref g_U1829 )) AND (sub_22402( ref g_U1588 ))))))
        {
            if ((NOT l_U143._fU0) AND (g_U833 == 4))
            {
                l_U189 = 4;
                sub_628( "SP", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
            }
            else
            {
                l_U189 = 6;
                sub_628( "SP", "eCheckpointState = CP_MD2_PRECREATE_ENEMIES", 0 );
            }
        }
        break;
        case 4:
        sub_628( "GA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        g_U1230[4] = 1;
        l_U191 = 0;
        if ((sub_23326( ref l_U143 )) == 0)
        {
            sub_6723( sub_994(), -612753081, 200, 0, 0 );
            sub_6078( sub_994(), -1404433099, 1, 200, 0 );
            l_U189 = 5;
            sub_628( "GA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U189 = 6;
            sub_628( "GA", "eCheckpointState = CP_MD2_PRECREATE_ENEMIES", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD( sub_994() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_994(), 1 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_994(), 0, 0 ) )))
            {
                l_U189 = 6;
                sub_628( "GA", "eCheckpointState = CP_MD2_PRECREATE_ENEMIES", 0 );
            }
        }
        break;
        case 6:
        if ((sub_23845( ref l_U244, ref l_U249, -1, 1, 1, 1, 1 )) == 1)
        {
            sub_25465();
        }
        if ((sub_9278( ref l_U244, 1 )) == 1)
        {
            l_U189 = 7;
            sub_628( "GA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 7:
        if (g_U1230[4])
        {
            if (l_U191)
            {
                if (CUTSCENE_IS_LOADED( "MID_02_PANAMA_concat" ))
                {
                    l_U189 = 8;
                    sub_628( "GA", "eCheckpointState = CP_HANDLE_MID_02_PANAMA", 0 );
                }
                else
                {
                    sub_628( "GA", "Waiting for cutscene MID_02_PANAMA_concat to load.", 0 );
                }
            }
            else
            {
                l_U189 = 8;
                sub_628( "GA", "eCheckpointState = CP_HANDLE_MID_02_PANAMA", 0 );
            }
        }
        break;
        case 8:
        if (l_U190)
        {
            sub_27173( ref g_U3777[2], 0, 1, 0.35000000 );
            sub_31263( ref l_U195, "MID_02_PANAMA_concat", 27419, 27726, 29754, 29770, 30051, 30911, 250, 0 );
            if (l_U191)
            {
                l_U195._fU4 = 2;
                l_U195._fU104 = 0;
            }
            else
            {
                l_U195._fU4 = 7;
                sub_31691();
            }
        }
        if (sub_31858( ref l_U195 ))
        {
            if (NOT l_U143._fU0)
            {
                g_U834 = 4;
                sub_34017( ref l_U143, g_U834, sub_994(), g_U980[4], g_U1086[4], g_U1158[4], g_U1122[4], 1 );
            }
            sub_37618();
            sub_628( "MF", "Setting State to: eMD_LOUNGE_FIGHT", 0 );
            sub_38213();
            sub_38336();
            l_U189 = 9;
            sub_628( "GA", "eCheckpointState = CP_MD2_GAMEPLAY", 0 );
        }
        break;
        case 9:
        if (l_U190)
        {
            sub_39098();
            if (NOT AUDIO_IS_MUSIC_PLAYING())
            {
                AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_2", "PANAMA_FINAL_2", 0, 4000, -1, -1082130432, 0 );
                sub_628( "CR", "Starting Music PANAMA_FINAL_2", 0 );
            }
        }
        sub_39359( 1 );
        sub_39949();
        sub_43985();
        sub_44238();
        sub_44490();
        sub_44744();
        if ((l_U560 == 0) AND (sub_45120( ref l_U244, 0 )))
        {
            sub_628( "CR", "MUSIC: Playing PANAMA_FINAL Mood: PANAMA_FINAL_2_4", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_2_4", "PANAMA_FINAL_2_4", 0, -1, -1, -1082130432, 0 );
            l_U560 = 1;
        }
        if ((sub_9278( ref l_U244, 1 )) == 1)
        {
            sub_45548( ref l_U244 );
        }
        if (NOT l_U311)
        {
            if ((sub_9278( ref l_U244, 0 )) == 1)
            {
                if ((sub_45155( ref l_U244 )) < 2)
                {
                    sub_45734( ref l_U244, 4.00000000, 7.00000000, 1 );
                    l_U311 = 1;
                }
            }
        }
        if (NOT l_U308)
        {
            if (sub_46119() == 1)
            {
                l_U308 = 1;
                if (sub_25530( l_U244[0], 0 ))
                {
                    PED_SET_ACTION_INTENTION( l_U244[0], 47, 1000, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_994() ) );
                }
                if (sub_25530( l_U244[1], 0 ))
                {
                    PED_SET_ACTION_INTENTION( l_U244[1], 47, 1000, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_994() ) );
                }
                if (sub_25530( l_U244[2], 0 ))
                {
                    PED_SET_ACTION_INTENTION( l_U244[2], 47, 1000, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_994() ) );
                }
                AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_2_4_6", "PANAMA_FINAL_2_4_6", 0, 3000, -1, -1082130432, 0 );
                sub_628( "CR", "MUSIC: Playing PANAMA_FINAL Mood: PANAMA_FINAL_2_4_6", 0 );
                sub_628( "CR", "Playing audio music one shot PANAMA_OS_1", 0 );
                AUDIO_MUSIC_PLAY_ONESHOT();
            }
        }
        if ((sub_46468( l_U244[0], 47 )) == 1)
        {
            sub_46952( ref l_U244[0], 47 );
            sub_47007( ref l_U244[0], 2, 0 );
        }
        if ((sub_46468( l_U244[1], 47 )) == 1)
        {
            sub_46952( ref l_U244[1], 47 );
        }
        if ((sub_46468( l_U244[2], 47 )) == 1)
        {
            sub_46952( ref l_U244[2], 47 );
            PED_SET_ACTION_INTENTION( l_U244[2], 1, 1000, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_994() ) );
            sub_47007( ref l_U244[2], 2, 0 );
        }
        if (NOT l_U310)
        {
            if (((sub_46468( l_U244[2], 37 )) == 1) || (((sub_46468( l_U244[1], 37 )) == 1) || ((sub_46468( l_U244[0], 37 )) == 1)))
            {
                l_U310 = 1;
                sub_47548();
            }
        }
        if ((l_U308) AND (NOT l_U309))
        {
            sub_47816();
            l_U309 = 1;
        }
        if ((sub_48054( ref l_U223, 0 )) == 1)
        {
            sub_48157();
        }
        if ((sub_45155( ref l_U244 )) == 0)
        {
            if (NOT IS_BULLET_CAMERA_ACTIVE())
            {
                if (IS_SPHERE_VISIBLE( -2.09000000, 5.40000000, 3.82000000, 0.05000000, 0 ))
                {
                    if (NOT (IS_SCRIPTED_SPEECH_PLAYING( sub_994() )))
                    {
                        if (sub_48054( ref l_U467, 0 ))
                        {
                            ;
                        }
                    }
                }
                if (NOT (IS_SCRIPTED_SPEECH_PLAYING( sub_994() )))
                {
                    if ((sub_48054( ref l_U488, 0 )) == 1)
                    {
                        ;
                    }
                }
            }
        }
        if (sub_48054( ref l_U571, 0 ))
        {
            sub_48681( ref g_U835[5] );
        }
        if ((sub_48054( ref l_U418, 0 )) == 1)
        {
            sub_628( "GA", "Starting spawning bedroom rebels.", 0 );
        }
        if (l_U418._fU64)
        {
            if ((sub_23845( ref l_U353, ref l_U357, -1, 1, 1, 0, 1 )) == 1)
            {
                sub_48810();
                sub_49249();
                sub_49498();
                sub_44778( ref l_U1252, 1000 );
            }
        }
        if (sub_2170( ref l_U1252 ))
        {
            sub_49730();
        }
        if (sub_9278( ref l_U353, 0 ))
        {
            if (NOT l_U466)
            {
                if ((sub_48054( ref l_U397, 0 )) || (sub_39983( ref l_U353, sub_994(), 1, 1, 1, 1, 1 )))
                {
                    PLAY_IMAGEFX( "BLUR_ZOOM_LIGHT_FAST", 4, 0 );
                    PLAY_IMAGEFX( "FLASH_WHITE", 4, 0 );
                    sub_50272();
                    sub_50778();
                    l_U466 = 1;
                }
            }
            else if (sub_48054( ref l_U439, 0 ))
            {
                sub_51028();
            }
            if (NOT (sub_1804( ref l_U509 )))
            {
                if (sub_45120( ref l_U353, 0 ))
                {
                    sub_2050( ref l_U509 );
                }
            }
        }
        if (NOT IS_PLAYER_SHOOTDODGING())
        {
            if ((sub_48054( ref l_U518, 0 )) || (sub_2170( ref l_U509 )))
            {
                sub_51288();
            }
        }
        if ((NOT l_U570) AND (sub_45120( ref l_U353, 1 )))
        {
            sub_2050( ref l_U561 );
            l_U570 = 1;
        }
        if (sub_2170( ref l_U561 ))
        {
            sub_45019( "SPAN_EXDPED3", ref g_U1246 );
            sub_628( "CR", "Playing monologue - SPAN_EXDPED3 - There was something firing these guys...", 0 );
        }
        if (sub_48054( ref l_U539, 0 ))
        {
            sub_628( "CR", "MUSIC: Playing PANAMA_FINAL Mood: PANAMA_FINAL_2_4", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_2_4", "PANAMA_FINAL_2_4", 0, -1, -1, -1082130432, 0 );
        }
        if ((sub_48054( ref l_U592, 0 )) == 1)
        {
            sub_51643( ref g_U3777[10], 0 );
            sub_51710( ref g_U3777[10], 1 );
            sub_29826( ref g_U3777[10], 0 );
        }
        if ((sub_46286( l_U592 )) == 1)
        {
            if (NOT (IS_SPHERE_VISIBLE( g_U3777[10]._fU4, 1.00000000, 0 )))
            {
                sub_628( "MF", "Shutting Main Deck door.", 0 );
                sub_29826( ref g_U3777[10], 1 );
            }
        }
        if ((sub_46286( l_U613 )) AND (sub_51895( g_U3777[10], 0.30000000 )))
        {
            sub_27437( ref g_U3777[10], 1 );
            g_U1230[5] = 1;
            l_U189 = 14;
            sub_628( "GA", "eCheckpointState = CP_FINISHED", 0 );
        }
        sub_52099();
        sub_52718( ref l_U1263 );
        break;
        case 10:
        if (l_U190)
        {
            if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "span_Wall" )))
            {
                sub_53502( 0 );
                sub_45019( "SPAN_EXRPNW", ref l_U762 );
                FOUND_EXPLORATION_ITEM( "span_Wall" );
            }
        }
        l_U189 = 9;
        sub_628( "CR", "eCheckpointState = CP_MD2_GAMEPLAY", 0 );
        break;
        case 11:
        if (l_U190)
        {
            sub_32725( 1, 0, 0, 1 );
            if (NOT (IS_PED_DEAD( sub_994() )))
            {
                sub_29288( sub_994(), 4.96410000, 7.12398400, 2.16661300, 131.98140000 );
                sub_53768( sub_994(), 0 );
                sub_53867();
                RESET_PLAYER_INPUT_GAIT( 0 );
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( 38.61115000, 1065353216, 0 );
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( -4.86329900, 1065353216, 0 );
                TASK_CLEAR_LOOK_AT( sub_994() );
                CLEAR_PED_TASKS_IMMEDIATELY( sub_994() );
            }
            CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAMLTLTGND_20_LFR", 1, l_U900, l_U903, 0, 0 );
            if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "span_Newspaper" )))
            {
                sub_53502( 0 );
                sub_45019( "SPAN_NYPPCM", ref l_U912 );
                FOUND_EXPLORATION_ITEM( "span_Newspaper" );
            }
        }
        if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "EXPL_CAM", "EXPL_CAMLTLTGND_20_LFR" )) - l_U904))
        {
            sub_53768( sub_994(), 1 );
            CAMERA_ANIMATED_STOP( 0, 0 );
            sub_33602( 1, 1 );
            sub_42719( ref l_U772, 1 );
            l_U189 = 9;
            sub_628( "CR", "eCheckpointState = CP_MD2_GAMEPLAY", 0 );
        }
        break;
        case 12:
        if (l_U190)
        {
            sub_32725( 1, 0, 0, 1 );
            if (NOT (IS_PED_DEAD( sub_994() )))
            {
                sub_29288( sub_994(), -16.74698000, 9.72851800, 2.16700000, 37.65618000 );
                sub_53768( sub_994(), 0 );
                sub_53867();
                RESET_PLAYER_INPUT_GAIT( 0 );
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( 8.72277600, 1065353216, 0 );
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( -9.12443300, 1065353216, 0 );
                TASK_CLEAR_LOOK_AT( sub_994() );
                CLEAR_PED_TASKS_IMMEDIATELY( sub_994() );
            }
            CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAM_PASSPORT_15_F", 1, l_U1050, l_U1053, 0, 0 );
            if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "span_Purse" )))
            {
                sub_53502( 0 );
                sub_45019( "SPAN_EXDPED1", ref l_U1062 );
                FOUND_EXPLORATION_ITEM( "span_Purse" );
            }
        }
        if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "EXPL_CAM", "EXPL_CAM_PASSPORT_15_F" )) - l_U1054))
        {
            sub_53768( sub_994(), 1 );
            CAMERA_ANIMATED_STOP( 0, 0 );
            sub_33602( 1, 1 );
            sub_42719( ref l_U922, 1 );
            l_U189 = 9;
            sub_628( "CR", "eCheckpointState = CP_MD2_GAMEPLAY", 0 );
        }
        break;
        case 13:
        if (l_U190)
        {
            sub_32725( 1, 0, 0, 1 );
            if (NOT (IS_PED_DEAD( sub_994() )))
            {
                sub_29288( sub_994(), -30.81520000, 9.67973600, 2.16723800, 34.02979000 );
                sub_53768( sub_994(), 0 );
                sub_53867();
                RESET_PLAYER_INPUT_GAIT( 0 );
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( -7.17914300, 1065353216, 0 );
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( -8.66683000, 1065353216, 0 );
                TASK_CLEAR_LOOK_AT( sub_994() );
                CLEAR_PED_TASKS_IMMEDIATELY( sub_994() );
            }
            CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAMTLTGND_45_LFR", 1, l_U1200, l_U1203, 0, 0 );
            if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "span_Jewelry" )))
            {
                sub_53502( 0 );
                sub_45019( "SPAN_EXDPED2", ref l_U1212 );
                FOUND_EXPLORATION_ITEM( "span_Jewelry" );
            }
        }
        if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "EXPL_CAM", "EXPL_CAMTLTGND_45_LFR" )) - l_U1204))
        {
            sub_53768( sub_994(), 1 );
            CAMERA_ANIMATED_STOP( 0, 0 );
            sub_33602( 1, 1 );
            sub_42719( ref l_U1072, 1 );
            l_U189 = 9;
            sub_628( "CR", "eCheckpointState = CP_MD2_GAMEPLAY", 0 );
        }
        break;
        case 14:
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U189 = 0;
        sub_628( "SP", "eCheckpointState = CP_IDLE", 0 );
        break;
    }
    if (l_U189 != iVar2)
    {
        l_U190 = 1;
    }
    else
    {
        l_U190 = 0;
    }
    return;
}

void sub_8817()
{
    if (l_U189 >= 9)
    {
        switch (l_U1262)
        {
            case 0:
            sub_628( "CCB", "eRobberyInProgress - STATE_CHALLENGE_IDLE", 0 );
            l_U1262 = 1;
            break;
            case 1:
            if (sub_8946( ref l_U244 ))
            {
                if (SCRIPT_VAR_HASH_EXISTS( -320977085 ))
                {
                    sub_628( "CCB", "One of the piMD_LoungeRebels peds is shooting...", 0 );
                    SCRIPT_VAR_HASH_SET_INT( -320977085, 1 );
                }
                else
                {
                    sub_628( "CCB", "The RobberyInProg script variable is NOT valid!!!", 0 );
                }
                sub_628( "CCB", "eRobberyInProgress - STATE_CHALLENGE_COMPLETE", 0 );
                l_U1262 = 2;
            }
            else if (sub_9278( ref l_U353, 0 ))
            {
                if (SCRIPT_VAR_HASH_EXISTS( -320977085 ))
                {
                    sub_628( "CCB", "The piMD_BedroomRebels peds have spawned...", 0 );
                    SCRIPT_VAR_HASH_SET_INT( -320977085, 1 );
                }
                else
                {
                    sub_628( "CCB", "The RobberyInProg script variable is NOT valid!!!", 0 );
                }
                sub_628( "CCB", "eRobberyInProgress - STATE_CHALLENGE_COMPLETE", 0 );
                l_U1262 = 2;
            }
            break;
            case 2: break;
        }
    }
    return;
}

int sub_8946(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            if (IS_PED_SHOOTING( (uParam0^)[I] ))
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_9278(unknown uParam0, boolean bParam1)
{
    int I;
    int Result;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((DOES_PED_EXIST( (uParam0^)[I] )) == 1)
        {
            Result = 1;
            if (NOT bParam1)
            {
                return 1;
            }
        }
        else
        {
            Result = 0;
        }
    }
    return Result;
}

void sub_9811()
{
    sub_628( "GA", "P_INITIALIZE_SCRIPT_DATA start", 0 );
    l_U190 = 1;
    l_U1345 = 0;
    l_U222 = 0;
    l_U560 = 0;
    l_U570 = 0;
    sub_1914( ref l_U561, 2750, 1, 0 );
    l_U308 = 0;
    l_U309 = 0;
    l_U310 = 0;
    l_U311 = 0;
    sub_1914( ref l_U343, 8000, 1, 0 );
    l_U352 = 0;
    l_U466 = 0;
    sub_1914( ref l_U509, 2500, 1, 0 );
    l_U1261 = 0;
    sub_628( "GA", "P_INITIALIZE_SCRIPT_DATA end", 0 );
    return;
}

void sub_10029()
{
    sub_628( "GA", "P_SET_STATIC_DATA start", 0 );
    sub_10114( ref l_U249[0], -0.72100000, 4.44900000, 2.13703000, 45.00000000, 1149805230, 7, 3, 2, 0, 0 );
    sub_10114( ref l_U249[1], -0.74900000, 5.76200000, 2.11550000, 65356, 1397855684, 7, 3, 2, 0, 0 );
    sub_10114( ref l_U249[2], 0.76100000, 7.94600000, 2.17000000, 135, 481632845, 7, 3, 2, 0, 0 );
    sub_10114( ref l_U249[3], 2.62000000, -0.52000000, 2.17000000, 45, 1679441487, 7, 3, 2, 0, 0 );
    sub_10114( ref l_U357[0], -30.85400000, 8.19300000, 2.17000000, 180.00000000, -1024052360, 7, 3, 2, 0, 0 );
    sub_10114( ref l_U357[1], -34.84000000, 9.64000000, 2.46000000, -94.84000000, 483039669, 7, 3, 2, 0, 0 );
    sub_10114( ref l_U357[2], -35.63000000, 3.52000000, 2.20000000, 270.00000000, 543000261, 7, 3, 2, 0, 0 );
    sub_10557( ref l_U322, "Trigger_MainDeck_MID_02_HIDE", 13.13000000, 3.16000000, 1.92000000, 1.30000000, 1.36000000, 3.09000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10557( ref l_U223, "Trigger_GlassHack", 26.29000000, 0.59000000, 1.92000000, 2.91000000, 3.62000000, 3.09000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10557( ref l_U467, "Trigger_MainDeck_RippedWall", -0.60000000, 5.40000000, 1.92000000, 1.85000000, 2.64000000, 3.09000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10557( ref l_U488, "Trigger_MainDeck_Dialogue_Blood", -5.55000000, 4.34000000, 1.92000000, 5.93000000, 5.31000000, 3.09000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10557( ref l_U518, "Trigger_Dialogue_WherePassos2", -32.12000000, -1.89000000, 2.28000000, 4.55000000, 4.83000000, 2.47000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10557( ref l_U539, "Trigger_Music_Fade", -32.06000000, -1.61000000, 2.28000000, 4.55000000, 4.83000000, 2.47000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10557( ref l_U418, "Trigger_MainDeck_BedRoomSpawn", -22.90000000, -1.90000000, 1.92000000, 5.85000000, 3.04000000, 3.09000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10557( ref l_U397, "Trigger_MainDeck_BedRoomSpawn_CanSee", -27.00000000, 2.54000000, 1.92000000, 2.49000000, 3.04000000, 3.09000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10557( ref l_U439, "tbMD_BedroomRebels_Bathroom", -35.11000000, 6.27000000, 2.17000000, 3.77000000, 9.72000000, 2.64000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10557( ref l_U571, "Trigger_MainDeck_Load_2NDDeck", -18.44000000, -2.09000000, 1.92000000, 5.93000000, 5.31000000, 3.09000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10557( ref l_U592, "Trigger_Close_Door", -38.73000000, 0.69000000, 2.08000000, 3.11000000, 4.03000000, 2.42000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10557( ref l_U613, "Start_2nd_Deck_Gameplay", -41.88000000, 3.10000000, 2.08000000, 8.29000000, 9.27000000, 2.42000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10557( ref l_U720, "Trigger_DamagedWallPOI_Activate", -1.20000000, 5.42000000, 2.16000000, 2.00000000, 2.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10557( ref l_U741, "Trigger_DamagedWallPOI_Radius", -1.20000000, 5.42000000, 2.16000000, 4.00000000, 3.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10557( ref l_U858, "Trigger_NewspaperPOI_Activate", 4.20000000, 6.70000000, 2.16700000, 1.75000000, 1.75000000, 2.00000000, 0.00000000, 0.00000000, 15.00000000, 1 );
    sub_10557( ref l_U879, "Trigger_NewspaperPOI_Radius", 4.20000000, 6.70000000, 2.16700000, 3.00000000, 3.00000000, 2.00000000, 0.00000000, 0.00000000, 15.00000000, 1 );
    sub_10557( ref l_U1008, "Trigger_Passport_Activate", -17.09300000, 10.02000000, 2.16700000, 1.50000000, 1.50000000, 2.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10557( ref l_U1029, "Trigger_Passport_Radius", -17.09300000, 10.02000000, 2.16700000, 3.00000000, 3.00000000, 2.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10557( ref l_U1158, "Trigger_JewelryBox_Activate", -31.50000000, 10.30000000, 2.16700000, 1.75000000, 1.50000000, 2.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10557( ref l_U1179, "Trigger_JewelryBox_Radius", -31.50000000, 9.70000000, 2.16700000, 4.00000000, 3.00000000, 2.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10557( ref l_U1222, "tbReleaseBathroomPed", -29.52000000, 5.97000000, 1.92000000, 9.50000000, 9.00000000, 3.00000000, 0.00000000, 0.00000000, 0.18967100, 1 );
    sub_12373( ref l_U634, 2, 0.00000000, 0.00000000, 0.00000000, l_U720, l_U741, 1, 0 );
    sub_13221( ref l_U634, 30, "POI_PAN_WALL" );
    sub_13382( ref l_U634, 1 );
    sub_13414( ref l_U634, 0 );
    sub_13793( ref l_U634, 0 );
    sub_12373( ref l_U772, 2, 0.00000000, 0.00000000, 0.00000000, l_U858, l_U879, 1, 0 );
    sub_13221( ref l_U772, 30, "POI_PAN_NWSPPR" );
    sub_13382( ref l_U772, 1 );
    sub_13414( ref l_U772, 0 );
    sub_13793( ref l_U772, 0 );
    sub_12373( ref l_U922, 2, 0.00000000, 0.00000000, 0.00000000, l_U1008, l_U1029, 1, 0 );
    sub_13221( ref l_U922, 30, "POI_PAN_PSSPRT" );
    sub_13382( ref l_U922, 1 );
    sub_13414( ref l_U922, 0 );
    sub_13793( ref l_U922, 0 );
    sub_12373( ref l_U1072, 2, 0.00000000, 0.00000000, 0.00000000, l_U1158, l_U1179, 1, 0 );
    sub_13221( ref l_U1072, 30, "POI_PAN_JWLRY" );
    sub_13382( ref l_U1072, 1 );
    sub_13414( ref l_U1072, 0 );
    sub_13793( ref l_U1072, 0 );
    sub_628( "GA", "P_SET_STATIC_DATA end", 0 );
    return;
}

void sub_10114(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_10557(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_12373(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47, unknown uParam48)
{
    sub_12390( iParam0, uParam47 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU80 = 1;
    iParam0->_fU116 = {uParam5};
    iParam0->_fU88 = 1;
    iParam0->_fU216 = {uParam26};
    iParam0->_fU320 = uParam48;
    iParam0->_fU20 = {uParam2};
    sub_12756( iParam0 );
    return;
}

void sub_12390(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_12756(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_12835( iParam0 );
    return;
}

void sub_12835(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_12894( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_12894( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_12894( iParam0, 1 );
            }
            else
            {
                sub_12894( iParam0, 0 );
            };;;
        }
        else
        {
            sub_12894( iParam0, 0 );
        }
    }
    else
    {
        sub_12894( iParam0, 0 );
    }
    return;
}

void sub_12894(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_13221(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_13252( iParam0 );
    return;
}

void sub_13252(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_13382(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

void sub_13414(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
    sub_13456( iParam0 );
    return;
}

void sub_13456(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_13517( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_13517( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_13517(int iParam0)
{
    if (((IS_PED_DEAD( sub_994() )) == 0) AND ((IS_PLAYER_DEAD( sub_1016() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_994() )) == 1) || (((IS_PED_GETTING_UP( sub_994() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_994() )) == 1) || (((IS_PED_IN_COVER( sub_994() )) == 1) || (((IS_PED_DUCKING( sub_994() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_994() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_13793(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

void sub_14150()
{
    sub_628( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U1262 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( -320977085 )))
    {
        sub_628( "CCB", "Creating the RobberyInProg script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( -320977085 );
        if (SCRIPT_VAR_HASH_EXISTS( -320977085 ))
        {
            sub_628( "CCB", "The RobberyInProg script variable was successfully created...", 0 );
        }
        else
        {
            sub_628( "CCB", "The RobberyInProg script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
        sub_628( "CCB", "The RobberyInProg script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( -320977085, 0 );
    }
    return;
}

void sub_14692()
{
    sub_628( "GA", "P_REQUEST_MD2_PERSISTENT_ASSETS start", 0 );
    sub_14753();
    sub_16698( ref l_U179, ref g_U1588 );
    sub_17840( ref l_U186, ref g_U1829 );
    sub_18840( ref g_U3079, ref g_U3026 );
    sub_14831( "LEVEL_S_PAN_CP_03", ref g_U1975 );
    sub_14831( "EXPL_CAM", ref g_U1975 );
    sub_628( "GA", "P_REQUEST_MD2_PERSISTENT_ASSETS end", 0 );
    return;
}

void sub_14753()
{
    sub_628( "CR", "P_GLOBAL_LOAD_PISTOL_ANIMS - Start", 0 );
    sub_14831( "NPC_PSTL_CORE", ref g_U1975 );
    sub_14831( "NPC_PSTL_COVER", ref g_U1975 );
    sub_14831( "NPC_PSTL_COVER_ENTER", ref g_U1975 );
    sub_14831( "NPC_PSTL_COVER_RELOAD", ref g_U1975 );
    sub_14831( "NPC_PSTL_DODGE", ref g_U1975 );
    sub_14831( "NPC_PSTL_FLAVOR", ref g_U1975 );
    sub_14831( "NPC_PSTL_FULLBODY", ref g_U1975 );
    sub_14831( "NPC_PSTL_RELOAD", ref g_U1975 );
    sub_14831( "NPC_PSTL_SEARCH", ref g_U1975 );
    sub_14831( "NPC_PSTL_STAIRS", ref g_U1975 );
    sub_14831( "NPC_PSTL_REACT", ref g_U1975 );
    sub_14831( "AMED_PSTL_PRONE", ref g_U1975 );
    sub_14831( "PLGE_PSTL_CROUCH", ref g_U1975 );
    sub_14831( "PLGE_PSTL_CORE", ref g_U1975 );
    sub_14831( "PLGE_PSTL_CORE_RELOAD", ref g_U1975 );
    sub_14831( "PLGE_PSTL_HANDSIG", ref g_U1975 );
    sub_14831( "PLGE_PSTL_ACTIONS", ref g_U1975 );
    sub_14831( "PLGE_PSTL_KNEE", ref g_U1975 );
    sub_14831( "PLGE_PSTL_COVER", ref g_U1975 );
    sub_14831( "PLGE_PSTL_REACT", ref g_U1975 );
    sub_14831( "PLGE_PSTL_COVER_EXIT", ref g_U1975 );
    sub_628( "CR", "P_GLOBAL_LOAD_PISTOL_ANIMS - End", 0 );
    return;
}

void sub_14831(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_14852( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_14989( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_14852(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_14989( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_14989( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_14989( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_15660( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_14989( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_14989( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_14989(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_15011( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_15011(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_15660(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_16698(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_16733( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_16733(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_16768( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_16899( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_16768(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_16899( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_16899( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_16899( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_15660( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_16899( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_16899( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_16899(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_15011( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_17840(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_17875( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_17875(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_17896( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_18028( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_17896(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_18028( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_18028( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_18028( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_15660( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_18028( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_18028( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_18028(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_15011( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_18840(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_18861( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
        sub_18999( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_18861(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                sub_18999( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                sub_18999( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    sub_18999( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                    sub_15660( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                sub_18999( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
            sub_18999( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_18999(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_15011( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_19933()
{
    sub_628( "GA", "P_REQUEST_MD2_NONPERSISTENT_ASSETS start", 0 );
    sub_20006( 1503037477, ref g_U1878 );
    sub_20006( -1635536756, ref g_U1878 );
    sub_20006( 1210964119, ref g_U1878 );
    if ((l_U191) AND (g_U833 != 4))
    {
        sub_21998( "MID_02_PANAMA_concat", 0 );
    }
    AUDIO_MUSIC_REQUEST_ONESHOT( "PANAMA_OS_1", 0 );
    sub_628( "GA", "P_REQUEST_MD2_NONPERSISTENT_ASSETS end", 0 );
    return;
}

void sub_20006(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_20041( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_20193( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_20041(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_20193( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_20193( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_20193( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_20193( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_15660( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_15660( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_20193( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_20193( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_20193(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_15011( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_21998(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

int sub_22402(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_22522(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_22643(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_22770(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

int sub_22961(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_23326(unknown uParam0)
{
    sub_628( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_4525( uParam0, sub_994() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

int sub_23845(unknown uParam0, unknown uParam1, int iParam2, boolean bParam3, boolean bParam4, int iParam5, unknown uParam6)
{
    int iVar9;
    int iVar10;
    int Result;

    iVar9 = sub_23859( uParam0, uParam1 );
    if (iParam2 == -1)
    {
        iVar10 = (uParam0^);
    }
    else
    {
        iVar10 = iParam2;
    }
    if (iVar9 < iVar10)
    {
        if ((uParam1^)[iVar9]._fU16 == 0)
        {
            SCRIPT_ASSERT( "Invalid Ped Struct!  No Model Defined! Aborting Ped Spawn", 0 );
            sub_628( "MF", "Invalid Ped Struct!  No Model Defined! Aborting Ped Spawn", 0 );
            sub_24158( iVar9 );
            return 0;
        }
        if (NOT (DOES_PED_EXIST( (uParam0^)[iVar9] )))
        {
            sub_24213( (uParam1^)[iVar9]._fU16, uParam6 );
            (uParam0^)[iVar9] = sub_24385( ref (uParam1^)[iVar9] );
            if (NOT bParam4)
            {
                SET_PED_VISIBLE( (uParam0^)[iVar9], bParam4 );
                sub_6394( "SPAWNING INVISIBLE PED!!!" );
            }
            if (iParam5 == 1)
            {
                sub_25119( (uParam0^)[iVar9] );
                sub_6394( "Deactivating Ped..." );
            }
        }
    }
    if (bParam3)
    {
        if (iVar9 == (iVar10 - 1))
        {
            sub_628( "MF", "F_HANDLE_PED_ARRAY_SPAWN: Returning true Once.  If you see this looping, you likely have unitialized ped model data in your pedstruct array.", 0 );
            Result = 1;
        }
        return Result;
    }
    else if (iVar9 >= iVar10)
    {
        return 1;
    }
    return 0;
}

void sub_23859(unknown uParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = (uParam1^);
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (DOES_PED_EXIST( (uParam0^)[I] )))
        {
            if ((uParam1^)[I]._fU16 != 0)
            {
                if (I < Result)
                {
                    Result = I;
                }
            }
        }
    }
    return Result;
}

void sub_24158(unknown uParam0)
{
    return;
}

void sub_24213(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_6394( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_24385(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_24213( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_24864( iParam0->_fU40 );
    sub_24944( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_24864(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_24944(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_25119(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_25465()
{
    int I;

    sub_628( "MF", "P_MD_LOUNGE_REBELS_SETUP - START", 0 );
    if (sub_25530( l_U244[0], 0 ))
    {
        SET_PED_ALERTNESS( l_U244[3], 3 );
        SET_ROOM_FOR_PED_BY_NAME( l_U244[0], ref g_U3239 );
        SET_PED_AI_TEMPLATE( l_U244[0], ref g_U1472 );
        SET_PED_COMBAT_RANGE_MIN( l_U244[0], 7 );
        SET_PED_COMBAT_RANGE_MAX( l_U244[0], 15 );
        sub_6078( l_U244[0], -612753081, 0, 25000, 1 );
    }
    if (sub_25530( l_U244[1], 0 ))
    {
        SET_PED_ALERTNESS( l_U244[3], 3 );
        SET_ROOM_FOR_PED_BY_NAME( l_U244[1], ref g_U3239 );
        SET_PED_AI_TEMPLATE( l_U244[1], ref g_U1504 );
        SET_PED_COMBAT_RANGE_MIN( l_U244[1], 5 );
        SET_PED_COMBAT_RANGE_MAX( l_U244[1], 12 );
        sub_6723( l_U244[1], -1404433099, 25000, 0, 1 );
    }
    if (sub_25530( l_U244[2], 0 ))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U244[2], ref g_U3239 );
        SET_PED_AI_TEMPLATE( l_U244[2], ref g_U1504 );
        SET_PED_COMBAT_RANGE_MIN( l_U244[2], 5 );
        SET_PED_COMBAT_RANGE_MAX( l_U244[2], 8 );
        sub_6723( l_U244[2], -1404433099, 25000, 0, 1 );
    }
    if (sub_25530( l_U244[3], 0 ))
    {
        SET_PED_ALERTNESS( l_U244[3], 3 );
        SET_ROOM_FOR_PED_BY_NAME( l_U244[3], ref g_U3239 );
        SET_PED_AI_TEMPLATE( l_U244[3], ref g_U1480 );
        SET_PED_COMBAT_RANGE_MIN( l_U244[3], 6 );
        SET_PED_COMBAT_RANGE_MAX( l_U244[3], 11 );
        sub_6723( l_U244[3], -612753081, 25000, 0, 1 );
    }
    for ( I = 0; I < l_U244; I++ )
    {
        sub_26156( l_U244[I], ref l_U302 );
        if (NOT (IS_PED_DEAD( l_U244[I] )))
        {
            SET_PED_COMBAT_ATTRIBUTES( l_U244[I], 131072, 0 );
        }
    }
    sub_26659( ref l_U244, "LOUNGE_REBELS" );
    sub_628( "MF", "P_MD_LOUNGE_REBELS_SETUP - END", 0 );
    return;
}

void sub_25530(unknown uParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((DOES_PED_EXIST( uParam0 )) == 1)
    {
        Result = 1;
    }
    else
    {
        Result = 0;
    }
    if (Result == 1)
    {
        if ((IS_PED_DEAD( uParam0 )) == 1)
        {
            if (iParam1 == 1)
            {
                Result = 1;
            }
            else
            {
                Result = 0;
            }
        }
        else
        {
            Result = 1;
        }
    }
    return Result;
}

void sub_26156(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_6394( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_26299( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_26299( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_26299(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_26659(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_27173(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_27185( iParam0 )) == 0)
    {
        sub_27251( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

int sub_27185(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_27251(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

int sub_27419()
{
    int I;

    sub_27437( ref g_U3777[0], 0 );
    for ( I = 0; I < l_U244; I++ )
    {
        sub_27590( l_U244[I] );
    }
    if ((sub_9278( ref l_U244, 1 )) == 1)
    {
        return 1;
    }
    return 0;
}

void sub_27437(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_27185( iParam0 )) == 0)
    {
        sub_27251( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

void sub_27590(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_27726()
{
    sub_628( "MF", "P_MD_MID_02_REGISTER - START", 0 );
    if (sub_25530( sub_994(), 0 ))
    {
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_994(), 0, 0 ) ))
        {
            sub_628( "MF", "Registering weapon in player's WEAPONHAND_RIGHT...", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( sub_994(), 0, 0 ), "W_PI_608_Aa_H^1", 0 );
        }
        else if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_994(), 0 ) ))
        {
            sub_628( "MF", "Registering weapon in player's WEAPONHOLSTER_PISTOL_RIGHT...", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HOLSTER( sub_994(), 0 ), "W_PI_608_Aa_H^1", 0 );
        }
        else if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_994(), 1 ) ))
        {
            sub_628( "MF", "Registering weapon in player's WEAPONHOLSTER_PISTOL_LEFT...", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HOLSTER( sub_994(), 1 ), "W_PI_608_Aa_H^1", 0 );
        }
        else
        {
            SCRIPT_ASSERT( "ERROR - NO VALID WEAPON FOUND FOR MID_02_PANAMA WEAPON REGISTRATION!!!", 0 );
            sub_628( "MF", "ERROR - NO VALID WEAPON FOUND FOR MID_02_PANAMA WEAPON REGISTRATION!!!", 0 );
        };;;
        CUTSCENE_REGISTER_PED_TELEPORT( sub_994(), g_U980[4], g_U1086[4] );
        CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "GenCover", "552F247C_7D37A674_Corner2", 1, 0 );
        ISEQ_REGISTER_ENTITY( 1210964119, "s_pan_max_sneaks", sub_994(), 0 );
        CUTSCENE_REGISTER_ISEQ( 1210964119 );
        g_U3069 = sub_28507( 1 );
        if (g_U3069 != nil)
        {
            CUTSCENE_REGISTER_PED_WEAPON_HAND( sub_994(), g_U3069, 1 );
        }
    }
    if ((sub_25530( l_U244[1], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U244[1], "M_PA_REBL_B", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U244[1], 0, 0 ), "W_AR_FAL_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U244[1], l_U249[1]._fU0, l_U249[1]._fU12 );
        ISEQ_REGISTER_ENTITY( 1503037477, "s_pan_wall_strip_gmed2", l_U244[1], 0 );
    }
    if ((sub_25530( l_U244[0], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U244[0], "M_PA_REBL_B^1", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HOLSTER( l_U244[0], 0 ), "W_PI_608_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U244[0], l_U249[0]._fU0, l_U249[0]._fU12 );
        ISEQ_REGISTER_ENTITY( 1503037477, "s_pan_wall_strip_gmed1", l_U244[0], 0 );
    }
    if (sub_25530( l_U244[2], 0 ))
    {
        CUTSCENE_REGISTER_PED_TELEPORT( l_U244[2], l_U249[2]._fU0, l_U249[2]._fU12 );
        sub_29288( l_U244[2], 0.76100000, 7.94600000, 2.17000000, 135 );
        ISEQ_REGISTER_ENTITY( 1503037477, "s_pan_wall_strip_gmed3", l_U244[2], 0 );
    }
    CUTSCENE_REGISTER_ISEQ( 1503037477 );
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U3777[0]._fU0, g_U3777[0]._fU4 ), "P_DR_YtDoorDk04_no", 0 );
    SET_PED_FORCED_TO_WALK( sub_994(), 0 );
    SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1016(), 1 );
    AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_2", "PANAMA_FINAL_2", 0, 6000, -1, -1082130432, 0 );
    sub_29560( ref g_U1246, 0 );
    sub_628( "MF", "P_MD_MID_02_REGISTER - END", 0 );
    return;
}

void sub_28507(unknown uParam0)
{
    unknown Result;

    Result = nil;
    if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_994(), 1, 0 ) ))
    {
        if (sub_28561( GET_WEAPON_FROM_HAND( sub_994(), 1, 0 ) ))
        {
            Result = GET_WEAPON_FROM_HAND( sub_994(), 1, 0 );
            SELECT_WEAPON_TO_HAND( sub_994(), 0, 1, uParam0 );
        }
    }
    return Result;
}

int sub_28561(unknown uParam0)
{
    int iVar3;
    int[13] iVar4;
    int I;

    iVar3 = GET_WEAPON_TYPE( uParam0 );
    array(ref iVar4, 13);
    iVar4[0] = 406496141;
    iVar4[1] = -862236369;
    iVar4[2] = 456708483;
    iVar4[3] = -1464892298;
    iVar4[4] = 68019059;
    iVar4[5] = -612753081;
    iVar4[6] = 1845102363;
    iVar4[7] = -691403429;
    iVar4[8] = -1404433099;
    iVar4[9] = 1194438308;
    iVar4[10] = 150541352;
    iVar4[11] = 1131969637;
    iVar4[12] = -76667461;
    for ( I = 0; I < iVar4; I++ )
    {
        if (iVar3 == iVar4[I])
        {
            return 1;
        }
    }
    return 0;
}

void sub_29288(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_29560(int iParam0, unknown uParam1)
{
    if (NOT (sub_29574( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

boolean sub_29574(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_29754()
{
    return;
}

int sub_29770()
{
    int I;

    RESET_FORCED_AIM_INTENTION_DIRECTION();
    if (NOT (IS_PED_DEAD( sub_994() )))
    {
        FREEZE_PED_POSITION( sub_994(), 0 );
    }
    sub_29826( ref g_U3777[0], 1 );
    sub_27437( ref g_U3777[0], 1 );
    sub_2050( ref l_U343 );
    for ( I = 0; I < l_U244; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U244[I] )))
        {
            SET_PED_COMBAT_ATTRIBUTES( l_U244[I], 131072, 1 );
        }
    }
    return 1;
}

void sub_29826(int iParam0, int iParam1)
{
    if ((sub_27185( iParam0 )) == 0)
    {
        sub_27251( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

void sub_30051()
{
    sub_628( "MF", "P_MD_MID_02_SETUP_BLEND_OUT - START", 0 );
    if (NOT (ISEQ_QUERY_STATE( 1503037477, 3 )))
    {
        sub_30133( ref l_U244 );
        if ((sub_25530( l_U244[0], 0 )) == 1)
        {
            ISEQ_REGISTER_ENTITY( 1503037477, "s_pan_wall_strip_gmed1", l_U244[0], 0 );
            sub_29288( l_U244[0], l_U249[0]._fU0, l_U249[0]._fU12 );
        }
        if ((sub_25530( l_U244[1], 0 )) == 1)
        {
            ISEQ_REGISTER_ENTITY( 1503037477, "s_pan_wall_strip_gmed2", l_U244[1], 0 );
            sub_29288( l_U244[1], l_U249[1]._fU0, l_U249[1]._fU12 );
        }
        if (sub_25530( l_U244[2], 0 ))
        {
            ISEQ_REGISTER_ENTITY( 1503037477, "s_pan_wall_strip_gmed3", l_U244[2], 0 );
            sub_29288( l_U244[2], l_U249[2]._fU0, l_U249[2]._fU12 );
        }
        ISEQ_START( 1503037477 );
    }
    if (NOT (ISEQ_QUERY_STATE( 1210964119, 3 )))
    {
        ISEQ_REGISTER_ENTITY( 1210964119, "s_pan_max_sneaks", sub_994(), 0 );
        ISEQ_START( 1210964119 );
        SNAP_PLAYER_TO_COVERPOINT( sub_1016(), "GenCover", "552F247C_7D37A674_Corner2", 0 );
    }
    if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_994(), 0, 0 ) ))
    {
        SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HAND( sub_994(), 0, 0 ), 1 );
    }
    CAMERA_PLAY_ANIMATED( "LEVEL_S_PAN_CP_03", "B_OUT_MID_02_PAN_PSTL_CAM", 0, 0, 0, 0, 0.00000000, 0, 0 );
    SET_FORCED_AIM_INTENTION_DIRECTION( -0.99166800, 0.12611900, 0.02585800 );
    if (g_U3070 != nil)
    {
        SET_WEAPON_VISIBLE( g_U3070, 1 );
    }
    if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_994(), 2 ) ))
    {
        SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HOLSTER( sub_994(), 2 ), 1 );
    }
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        DO_SCREEN_FADE_IN( 0 );
    }
    sub_628( "MF", "P_MD_MID_02_SETUP_BLEND_OUT - END", 0 );
    return;
}

void sub_30133(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_27590( (uParam0^)[I] );
    }
    return;
}

int sub_30911()
{
    if ((ISEQ_QUERY_STATE( 1503037477, 3 )) AND (IS_SCREEN_FADED_OUT()))
    {
        DO_SCREEN_FADE_IN( 0 );
    }
    if (NOT l_U222)
    {
        if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_PAN_CP_03", "B_OUT_MID_02_PAN_PSTL_CAM" )) - 1))
        {
            sub_628( "GA", "Ending MID_02 blendout animated camera in a freeze frame.", 0 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1158[4], 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1122[4], 1065353216, 0 );
            CAMERA_FREEZE_FRAME( 1, 500, 0, 0 );
            l_U222 = 1;
        }
    }
    if (l_U222)
    {
        if ((ISEQ_QUERY_ENTITY_STATE( 1210964119, "s_pan_max_sneaks", 6 )) || (ISEQ_QUERY_ENTITY_STATE( 1210964119, "s_pan_max_sneaks", 5 )))
        {
            return 1;
        }
    }
    return 0;
}

void sub_31263(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_628( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return sub_31384( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 31348, 31364, uParam8 );
}

void sub_31348()
{
    return;
}

int sub_31364()
{
    return 1;
}

void sub_31384(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_31691()
{
    sub_628( "MF", "P_MD_GLASS_BREAK_HACK_LOUNGE: START", 0 );
    SHOOT_SINGLE_BULLET_BETWEEN_COORDS( 17.70000000, -0.84000000, 3.72000000, 17.58000000, -2.72000000, 3.64000000, 100, 1, -1074756423, 0 );
    sub_628( "MF", "P_MD_GLASS_BREAK_HACK_LOUNGE: END", 0 );
    return;
}

void sub_31858(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_628( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_628( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_628( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_628( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_628( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_628( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_21998( iParam0->_fU0, 0 );
            sub_628( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_32725( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_32725( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_628( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_33253( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_32725( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_33602( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_33602( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_32725(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_994() )))
        {
            SET_PLAYER_CONTROL( sub_1016(), 0, uParam2 );
            SET_PED_DUCKING( sub_994(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_994() );
            }
            SET_PED_INVINCIBLE( sub_994(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_33253(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_994() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_994(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_994(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_994(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_994(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_994(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_33602(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_994() )))
    {
        SET_PLAYER_CONTROL( sub_1016(), 1, 0 );
        SET_PED_INVINCIBLE( sub_994(), 0 );
        if (bParam0)
        {
            sub_33683();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_33683()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_994() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_994(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_994(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_994(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_994(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_34017(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_628( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_628( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_7377( iParam1 );
        sub_34276( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_34727( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_34727( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_34959( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_34727( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_34959( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_34959( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_34727( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_34959( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_34959( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_34959( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_34727( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_34959( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_34959( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_34959( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_34959( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_36517( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_628( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_34276(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_4741( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_628( "TEH", "Ending context", 0 );
        sub_628( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_34727(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_34959(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_36517(int iParam0)
{
    sub_6394( "CHECKPOINT DATA" );
    sub_36556( iParam0->_fU4 );
    sub_36579( iParam0->_fU16 );
    sub_36579( iParam0->_fU20 );
    sub_36579( iParam0->_fU24 );
    sub_24158( iParam0->_fU28 );
    sub_24158( iParam0->_fU56 );
    sub_24158( iParam0->_fU60 );
    sub_24158( iParam0->_fU64 );
    sub_24158( iParam0->_fU68 );
    sub_24158( iParam0->_fU72 );
    sub_24158( iParam0->_fU76 );
    sub_24158( iParam0->_fU80 );
    sub_24158( iParam0->_fU84 );
    sub_24158( iParam0->_fU88 );
    sub_24158( iParam0->_fU92 );
    sub_36579( iParam0->_fU32 );
    sub_24158( iParam0->_fU36 );
    sub_24158( iParam0->_fU40 );
    sub_24158( iParam0->_fU44 );
    sub_36579( iParam0->_fU136 );
    sub_36814( iParam0->_fU140 );
    sub_24158( iParam0->_fU52 );
    sub_6394( "---nRightHolsterAttachmentEnabled: " );
    sub_24158( iParam0->_fU96 );
    sub_6394( "---nRightHolsterAttachmentToggled: " );
    sub_24158( iParam0->_fU100 );
    sub_6394( "---nLeftHolsterAttachmentEnabled: " );
    sub_24158( iParam0->_fU104 );
    sub_6394( "---nLeftHolsterAttachmentToggled: " );
    sub_24158( iParam0->_fU108 );
    sub_6394( "---nRifleHolsterAttachmentEnabled: " );
    sub_24158( iParam0->_fU112 );
    sub_6394( "---nRifleHolsterAttachmentToggled: " );
    sub_24158( iParam0->_fU116 );
    sub_6394( "---nRightHandAttachmentEnabled: " );
    sub_24158( iParam0->_fU120 );
    sub_6394( "---nRightHandAttachmentToggled: " );
    sub_24158( iParam0->_fU124 );
    sub_6394( "---nLeftHandAttachmentEnabled: " );
    sub_24158( iParam0->_fU128 );
    sub_6394( "---nLeftHandAttachmentToggled: " );
    sub_24158( iParam0->_fU132 );
    sub_24158( l_U1 );
    sub_24158( 144 );
    return;
}

void sub_36556(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_36579(unknown uParam0)
{
    return;
}

void sub_36814(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_37618()
{
    int I;

    sub_628( "MF", "P_MD_LOUNGE_REBELS_ACTIVATE: START", 0 );
    for ( I = 0; I < l_U244; I++ )
    {
        if ((sub_25530( l_U244[I], 0 )) == 1)
        {
            FREEZE_PED_POSITION( l_U244[I], 0 );
        }
    }
    sub_29560( ref l_U312, 0 );
    sub_37756( ref l_U312 );
    sub_37844( 3, l_U244[1], "REBEL2", ref l_U312, 2, 0 );
    sub_37844( 2, l_U244[2], "REBEL1", ref l_U312, 2, 0 );
    if (sub_25530( l_U244[0], 0 ))
    {
        SET_PED_PROP_INDEX( l_U244[0], 12, 0, 0, 255 );
    }
    sub_628( "MF", "P_MD_LOUNGE_REBELS_ACTIVATE: END", 0 );
    return;
}

void sub_37756(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_37844(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_38213()
{
    sub_628( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_628( "CCB", "Starting the Panama_MD2 context...", 0 );
    START_CONTEXT( "Panama_MD2" );
    return;
}

void sub_38336()
{
    sub_628( "MF", "P_CREATE_PLACEMENTS start", 0 );
    l_U193[0] = sub_38429( -4072149, -24.90000000, 3.45000000, 3.15500000, 0.00000000, 0.00000000, 181.00000000, 0, 1, 1, 90.00000000 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U193[0], ref g_U3255 );
    l_U905 = sub_38564( -1660877942, l_U906, l_U909, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U905 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U905, ref g_U3239 );
        FREEZE_OBJECT_POSITION( l_U905, 1 );
    }
    l_U1055 = sub_38564( 386729125, l_U1056, l_U1059, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U1055 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1055, ref g_U3255 );
        FREEZE_OBJECT_POSITION( l_U1055, 1 );
    }
    l_U1205 = sub_38564( 1678394868, l_U1206, l_U1209, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U1205 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1205, ref g_U3247 );
        FREEZE_OBJECT_POSITION( l_U1205, 1 );
    }
    sub_628( "MF", "P_CREATE_PLACEMENTS end", 0 );
    return;
}

void sub_38429(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_38564(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_24213( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_39098()
{
    sub_628( "CR", "P_GBL_REFRESH_PAYNE_KILLER_COUNT - START", 0 );
    g_U4062 = GET_PAYNEKILLER_AMT();
    sub_628( "CR", "P_GBL_REFRESH_PAYNE_KILLER_COUNT - END", 0 );
    return;
}

int sub_39359(int iParam0)
{
    if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND ((NOT IS_BULLET_CAMERA_ACTIVE()) AND (NOT (IS_PED_DEAD( sub_994() )))))
    {
        if ((IS_PED_IN_WATER( sub_994() )) == 1)
        {
            if (NOT g_U3626._fU32)
            {
                sub_39439();
            }
            if (iParam0 == 1)
            {
                sub_39872();
            }
            sub_33602( 1, 1 );
            return 1;
        }
    }
    return 0;
}

void sub_39439()
{
    sub_628( "MF", "P_GBL_QUICK_GAMEPLAY_CAM_COPY - START", 0 );
    sub_39507( ref g_U3626, 50 );
    sub_32725( 0, 0, 0, 1 );
    sub_39722( ref g_U3626 );
    sub_628( "MF", "P_GBL_QUICK_GAMEPLAY_CAM_COPY - END", 0 );
    return;
}

void sub_39507(int iParam0, unknown uParam1)
{
    iParam0->_fU4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_ROT()};
    iParam0->_fU16 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_COORD()};
    iParam0->_fU28 = GET_GAMEPLAY_CAM_FOV();
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam1;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU96 = 0;
    sub_1914( iParam0 + 48, uParam1, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U703, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_39722(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_2050( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

void sub_39872()
{
    SET_PAD_SHAKE( 0, 100, 250 );
    WAIT( 90 );
    SET_PED_HEALTH( sub_994(), 0, 0 );
    return;
}

void sub_39949()
{
    if ((NOT (sub_40581( ref l_U634 ))) AND (sub_39959()))
    {
        sub_13414( ref l_U634, 1 );
    }
    if ((sub_40581( ref l_U634 )) AND (NOT sub_39959()))
    {
        sub_13414( ref l_U634, 0 );
    }
    if ((sub_40658( ref l_U634 )) == 1)
    {
        sub_37756( ref g_U1286 );
        sub_37844( 0, sub_994(), "MAX", ref g_U1286, 2, 0 );
        sub_37844( 1, sub_994(), "MAX", ref g_U1286, 2, 0 );
        sub_40965( "EXPLORE_ITEM", ref g_U1286, 8, 1 );
    }
    if ((sub_41749( ref l_U634 )) == 1)
    {
        l_U189 = 10;
        sub_628( "CR", "eCheckpointState = CP_MD2_POI_BROKENWALL", 0 );
    }
    return;
}

int sub_39959()
{
    if ((NOT (sub_40457( l_U762 ))) AND ((NOT (sub_39983( ref l_U353, sub_994(), 1, 1, 1, 0, 1 ))) AND (NOT (sub_39983( ref l_U244, sub_994(), 1, 1, 1, 0, 1 )))))
    {
        return 1;
    }
    return 0;
}

int sub_39983(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((sub_40028( ref (uParam0^)[I], uParam1, uParam2, uParam3, uParam4, uParam5, uParam6 )) == 1)
        {
            return 1;
        }
    }
    return 0;
}

int sub_40028(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, int iParam6)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        if ((uParam3) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 1 )))
        {
            if (iParam6 == 1)
            {
                sub_628( "MF", "ped has SEEN target ped", 0 );
            }
            return 1;
        }
        else if ((uParam4) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 8 )))
        {
            if (iParam6 == 1)
            {
                sub_628( "MF", "ped has BEEN SHOT AT by target ped", 0 );
            }
            return 1;
        }
        else if ((uParam2) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 2 )))
        {
            if (iParam6 == 1)
            {
                sub_628( "MF", "ped has HEARD target ped", 0 );
            }
            return 1;
        }
        else if ((uParam5) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 4 )))
        {
            if (iParam6 == 1)
            {
                sub_628( "MF", "ped has BEEN TOLD ABOUT target ped", 0 );
            }
            return 1;
        };;;;
    }
    return 0;
}

int sub_40457(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_29574( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

void sub_40581(int iParam0)
{
    return iParam0->_fU56;
}

int sub_40658(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND ((sub_40581( iParam0 )) == 0)))
    {
        if ((sub_40814() == 1) AND (((IS_PED_RELOADING( sub_994() )) == 0) AND (((IS_PED_GETTING_UP( sub_994() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP( sub_994() )) == 0) AND (((IS_PED_IN_COVER( sub_994() )) == 0) AND (((IS_PED_DUCKING( sub_994() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

int sub_40814()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

void sub_40965(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_40989( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_40989(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_41044( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_41044(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_41079( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_41573( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_41079(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_41573(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

int sub_41749(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_994() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_994() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_41835( sub_994(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_41835( sub_994(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_13456( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_13517( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_40814() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_42719( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_12894( iParam0, 0 );
                            sub_42790( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_12894( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_994() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_994(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_12894( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_42790( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_994() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_994(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_994() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_994(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_994() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_994(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_12894( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_42790( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_994() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_994() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_994() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_994(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_42790( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

int sub_41835(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_42719(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_12894( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_12894( iParam0, 0 );
        sub_42790( iParam0, 0 );
        if ((IS_PED_DEAD( sub_994() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_994() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_994(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_42790(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_13456( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_43985()
{
    if ((NOT (sub_40581( ref l_U772 ))) AND (sub_39959()))
    {
        sub_13414( ref l_U772, 1 );
    }
    if ((sub_40581( ref l_U772 )) AND (NOT sub_39959()))
    {
        sub_13414( ref l_U772, 0 );
    }
    if ((sub_40658( ref l_U772 )) == 1)
    {
        sub_37756( ref g_U1296 );
        sub_37844( 0, sub_994(), "MAX", ref g_U1296, 2, 0 );
        sub_37844( 1, sub_994(), "MAX", ref g_U1296, 2, 0 );
        sub_40965( "EXPLORE_ITEM", ref g_U1296, 8, 1 );
    }
    if ((sub_41749( ref l_U772 )) == 1)
    {
        l_U189 = 11;
        sub_628( "CR", "eCheckpointState = CP_MD2_POI_NEWSPAPER", 0 );
    }
    return;
}

void sub_44238()
{
    if ((NOT (sub_40581( ref l_U922 ))) AND (sub_39959()))
    {
        sub_13414( ref l_U922, 1 );
    }
    if ((sub_40581( ref l_U922 )) AND (NOT sub_39959()))
    {
        sub_13414( ref l_U922, 0 );
    }
    if ((sub_40658( ref l_U922 )) == 1)
    {
        sub_37756( ref g_U1306 );
        sub_37844( 0, sub_994(), "MAX", ref g_U1306, 2, 0 );
        sub_37844( 1, sub_994(), "MAX", ref g_U1306, 2, 0 );
        sub_40965( "EXPLORE_ITEM", ref g_U1306, 8, 1 );
    }
    if ((sub_41749( ref l_U922 )) == 1)
    {
        l_U189 = 12;
        sub_628( "CR", "eCheckpointState = CP_MD2_POI_PASSPORT", 0 );
    }
    return;
}

void sub_44490()
{
    if ((NOT (sub_40581( ref l_U1072 ))) AND (sub_39959()))
    {
        sub_13414( ref l_U1072, 1 );
    }
    if ((sub_40581( ref l_U1072 )) AND (NOT sub_39959()))
    {
        sub_13414( ref l_U1072, 0 );
    }
    if ((sub_40658( ref l_U1072 )) == 1)
    {
        sub_37756( ref g_U1316 );
        sub_37844( 0, sub_994(), "MAX", ref g_U1316, 2, 0 );
        sub_37844( 1, sub_994(), "MAX", ref g_U1316, 2, 0 );
        sub_40965( "EXPLORE_ITEM", ref g_U1316, 8, 1 );
    }
    if ((sub_41749( ref l_U1072 )) == 1)
    {
        l_U189 = 13;
        sub_628( "CR", "eCheckpointState = CP_MD2_POI_JEWELRYBOX", 0 );
    }
    return;
}

void sub_44744()
{
    if (NOT (sub_1804( ref g_U4052 )))
    {
        sub_44778( ref g_U4052, g_U4061 );
    }
    if (((g_U4052._fU16) || (sub_2170( ref g_U4052 ))) AND (sub_44814()))
    {
        sub_628( "MF", "Playing Speech: SPAN_MXFNDS1", 0 );
        sub_45019( ref g_U4063, ref g_U1246 );
        sub_2707( ref g_U4052 );
    }
    return;
}

void sub_44778(unknown uParam0, unknown uParam1)
{
    sub_1914( uParam0, uParam1, 1, 0 );
    sub_2050( uParam0 );
    return;
}

int sub_44814()
{
    if (GET_PAYNEKILLER_AMT() > g_U4062)
    {
        sub_628( "CR", "Player picked up Payne Killers!", 0 );
        sub_24158( g_U4062 );
        sub_24158( GET_PAYNEKILLER_AMT() );
        g_U4062 = GET_PAYNEKILLER_AMT();
        return 1;
    }
    g_U4062 = GET_PAYNEKILLER_AMT();
    return 0;
}

void sub_45019(unknown uParam0, unknown uParam1)
{
    sub_37756( uParam1 );
    sub_37844( 0, sub_994(), "MAX", uParam1, 2, 0 );
    sub_37844( 1, sub_994(), "MAX", uParam1, 2, 0 );
    sub_40965( uParam0, uParam1, 8, 1 );
    return;
}

int sub_45120(unknown uParam0, boolean bParam1)
{
    if ((sub_9278( uParam0, 0 )) == 1)
    {
        if (NOT bParam1)
        {
            if ((sub_45155( uParam0 )) == 0)
            {
                return 1;
            }
        }
        if (bParam1)
        {
            if ((sub_45255( uParam0 )) == (uParam0^))
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_45155(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_45255(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

void sub_45548(unknown uParam0)
{
    int I;

    if ((sub_45155( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_45734(unknown uParam0, float fParam1, float fParam2, int iParam3)
{
    int I;
    unknown uVar7;

    if (fParam2 < fParam1)
    {
        fParam2 = fParam1 + 3.00000000;
        sub_628( "MF", "No or invalid combat range passed, adjusting to minCombatRange + 3.0 meters.", 0 );
    }
    OPEN_SEQUENCE_TASK( ref uVar7 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
    if (NOT (IS_PED_DEAD( sub_994() )))
    {
        TASK_COMBAT_PED( 0, sub_994() );
    }
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    CLOSE_SEQUENCE_TASK( uVar7 );
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            SET_PED_COMBAT_MOVEMENT( (uParam0^)[I], 2 );
            SET_PED_COMBAT_RANGE_MIN( (uParam0^)[I], fParam1 );
            SET_PED_COMBAT_RANGE_MAX( (uParam0^)[I], fParam2 );
            SET_PED_EMOTION_STATE( (uParam0^)[I], 1 );
            REGISTER_TARGET( (uParam0^)[I], sub_994() );
            TASK_PERFORM_SEQUENCE( (uParam0^)[I], uVar7 );
            if (iParam3 == 1)
            {
                RESET_PED_TETHERING( (uParam0^)[I] );
            }
        }
    }
    CLEAR_SEQUENCE_TASK( uVar7 );
    return;
}

int sub_46119()
{
    int I;

    if (NOT l_U343._fU16)
    {
        if (IS_PED_IN_COVER( sub_994() ))
        {
            if (IS_CONTROL_JUST_PRESSED( 0, 6 ))
            {
                l_U352 = 1;
            }
            else
            {
                l_U352 = 0;
            }
        }
        else
        {
            l_U352 = 1;
        }
    }
    if (IS_PED_SHOOTING( sub_994() ))
    {
        sub_628( "MF", "Player Has Fired Gun, Returning TRUE", 0 );
        return 1;
    }
    return l_U352;
    if (NOT (sub_46286( l_U322 )))
    {
        if ((sub_2170( ref l_U343 )) == 1)
        {
            sub_6394( "REBEL CAN SEE PLAYER" );
            l_U352 = 1;
        }
    }
    if (sub_39983( ref l_U244, sub_994(), 0, l_U352, 0, 1, 1 ))
    {
        sub_6394( "player spotted out of cover" );
        return 1;
    }
    for ( I = 0; I < l_U244; I++ )
    {
        if ((sub_46468( l_U244[I], 47 )) == 1)
        {
            return 1;
        }
    }
    return 0;
}

void sub_46286(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_41835( sub_994(), uParam0 );
}

int sub_46468(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 );
    }
    return 0;
}

void sub_46952(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

void sub_47007(unknown uParam0, unknown uParam1, unknown uParam2)
{
    sub_47028( uParam0, sub_994(), uParam1, uParam2 );
    return;
}

void sub_47028(unknown uParam0, unknown uParam1, unknown uParam2, boolean bParam3)
{
    unknown uVar6;

    sub_47064( "MAL_UnblockAndCombatPed" );
    OPEN_SEQUENCE_TASK( ref uVar6 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        sub_47064( "MAL_UnblockAndCombatPed: Victim is not dead" );
        TASK_COMBAT_PED( 0, uParam1 );
    }
    CLOSE_SEQUENCE_TASK( uVar6 );
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        sub_47064( "MAL_UnblockAndCombatPed: Ped is not dead" );
        if (bParam3)
        {
            CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        }
        else
        {
            CLEAR_PED_TASKS( (uParam0^) );
        }
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam2 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar6 );
    }
    CLEAR_SEQUENCE_TASK( uVar6 );
    return;
}

void sub_47064(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    return;
}

void sub_47548()
{
    sub_628( "MF", "P_MD_LOUNGE_REBELS_SPOT_MAX_DIALOGUE: START", 0 );
    sub_29560( ref l_U312, 0 );
    sub_37756( ref l_U312 );
    sub_37844( 7, l_U244[1], "M11_REBL_12_Avg", ref l_U312, 2, 0 );
    sub_37844( 8, l_U244[2], "M11_REBL_13_Avg", ref l_U312, 2, 0 );
    sub_40965( "SPAN_VIG05A", ref l_U312, 8, 1 );
    sub_628( "MF", "P_MD_LOUNGE_REBELS_SPOT_MAX_DIALOGUE: END", 0 );
    return;
}

void sub_47816()
{
    sub_628( "MF", "P_MD_LOUNGE_REBELS_SPOT_MAX: START", 0 );
    sub_47883( ref l_U244, sub_994() );
    KNOCK_OFF_PROP_AT_ANCHOR_POINT( l_U244[0], 12 );
    sub_628( "MF", "P_MD_LOUNGE_REBELS_SPOT_MAX: END", 0 );
    return;
}

void sub_47883(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (sub_25530( (uParam0^)[I], 0 ))
        {
            if (sub_25530( uParam1, 0 ))
            {
                REGISTER_TARGET( (uParam0^)[I], uParam1 );
            }
        }
    }
    return;
}

void sub_48054(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_41835( sub_994(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_48157()
{
    sub_628( "MF", "P_MD_GLASS_BREAK_HACK_HALLWAY: START", 0 );
    SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -15.90000000, -2.99000000, 4.00000000, -15.92000000, -6.34000000, 4.00000000, 100, 1, -1074756423, 0 );
    SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -15.90000000, -2.99000000, 3.90000000, -15.92000000, -6.34000000, 3.90000000, 100, 1, -1074756423, 0 );
    SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -17.18000000, -3.05000000, 3.42000000, -17.28000000, -4.27000000, 3.33000000, 100, 1, -1074756423, 0 );
    SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -17.18000000, -3.05000000, 3.37000000, -17.28000000, -4.27000000, 3.33000000, 100, 1, -1074756423, 0 );
    SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -10.05000000, -0.16000000, 3.90000000, -9.89000000, -3.67000000, 3.90000000, 100, 1, -1074756423, 0 );
    sub_628( "MF", "P_MD_GLASS_BREAK_HACK_HALLWAY: END", 0 );
    return;
}

void sub_48681(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

void sub_48810()
{
    int I;

    sub_628( "MF", "P_MD_BEDROOM_REBELS_SETUP - START", 0 );
    for ( I = 0; I < l_U353; I++ )
    {
        if ((sub_25530( l_U353[I], 0 )) == 1)
        {
            SET_PED_AI_TEMPLATE( l_U353[I], ref g_U1504 );
            SET_PED_COMBAT_RANGE_MIN( l_U353[I], 4 );
            SET_PED_COMBAT_RANGE_MAX( l_U353[I], 12 );
            sub_26156( l_U353[I], ref l_U460 );
            SET_ROOM_FOR_PED_BY_NAME( l_U353[I], ref g_U3247 );
            FREEZE_PED_POSITION( l_U353[I], 1 );
            sub_29288( l_U353[I], l_U357[I]._fU0, l_U357[I]._fU12 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U353[I], 1 );
            SET_PED_CAN_AVOID_DEATH_ZONES( l_U353[I], 0 );
        }
    }
    sub_26659( ref l_U353, "BEDROOM_REBELS" );
    sub_6723( l_U353[0], -1404433099, 25000, 0, 0 );
    sub_6723( l_U353[1], -612753081, 25000, 0, 0 );
    sub_6723( l_U353[2], -612753081, 25000, 0, 0 );
    sub_628( "MF", "P_MD_BEDROOM_REBELS_SETUP - END", 0 );
    return;
}

void sub_49249()
{
    int I;

    sub_628( "MF", "P_MD_BEDROOM_REBELS_SEARCH: START", 0 );
    for ( I = 0; I < l_U353; I++ )
    {
        if ((sub_25530( l_U353[I], 0 )) == 1)
        {
            FREEZE_PED_POSITION( l_U353[I], 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U353[I], 0 );
        }
    }
    ISEQ_REGISTER_ENTITY( -1635536756, "s_pan_bdsearch_gmed", l_U353[0], 0 );
    ISEQ_START( -1635536756 );
    sub_628( "MF", "P_MD_BEDROOM_REBELS_SEARCH: END", 0 );
    return;
}

void sub_49498()
{
    sub_628( "MF", "P_MD_BEDROOM_REBELS_SPEECH: START", 0 );
    sub_37756( ref g_U1246 );
    sub_37844( 1, sub_994(), "MAX", ref g_U1246, 2, 0 );
    sub_37844( 8, l_U353[0], "M11_REBL_16_Mus", ref g_U1246, 2, 0 );
    sub_40965( "SPAN_VIGREU", ref g_U1246, 8, 1 );
    sub_628( "MF", "P_MD_BEDROOM_REBELS_SPEECH: END", 0 );
    return;
}

void sub_49730()
{
    sub_628( "CO", "P_INITIALIZE_ImageFx_CP_04", 0 );
    sub_49784( ref l_U1263 );
    l_U1263[0]._fU4 = "FLICKER_VIBRATE_ZOOM_01";
    l_U1263[0]._fU20 = 2;
    l_U1263[0]._fU8 = 4;
    l_U1263[0]._fU32 = 0;
    l_U1263[1]._fU4 = "FLICKER_VIBRATE_INTERLACE_M";
    l_U1263[1]._fU8 = 4;
    l_U1263[1]._fU32 = 0;
    l_U1263[2]._fU4 = "EXPOSURE_DARKEN_CONTRAST";
    l_U1263[2]._fU8 = 4;
    l_U1263[2]._fU16 = 1000;
    l_U1263[2]._fU32 = 0;
    l_U140 = 0;
    return;
}

void sub_49784(unknown uParam0)
{
    int I;

    sub_628( "CO", "P_INIT_IMAGEFX", 0 );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU4 = "";
        (uParam0^)[I]._fU12 = 0;
        (uParam0^)[I]._fU16 = 0;
        (uParam0^)[I]._fU20 = 0;
        (uParam0^)[I]._fU24 = 0;
        (uParam0^)[I]._fU28 = 0;
        (uParam0^)[I]._fU32 = 1;
    }
    return;
}

void sub_50272()
{
    int I;

    sub_628( "MF", "P_MD_BEDROOM_REBELS_SPOT_MAX: START", 0 );
    sub_47883( ref l_U353, sub_994() );
    sub_50359( l_U353[0], 47, 1000 );
    for ( I = 0; I < l_U353; I++ )
    {
        if (sub_25530( l_U353[I], 0 ))
        {
            SET_PED_ALERTNESS( l_U353[I], 3 );
        }
    }
    if (sub_25530( sub_994(), 0 ))
    {
        if (sub_25530( l_U353[0], 0 ))
        {
            TASK_ATTACK_MOVE( l_U353[0], -27.80000000, 3.73000000, 2.17000000, 5.00000000, 1101004800, -1082130432, 3 );
        }
        if (sub_25530( l_U353[1], 0 ))
        {
            TASK_ATTACK_MOVE( l_U353[1], -30.93000000, 9.06000000, 2.17000000, 5.00000000, 1101004800, -1082130432, 3 );
        }
        if (sub_25530( l_U353[2], 0 ))
        {
            SET_PED_FLAG_LOCK_TO_COVER( l_U353[2], 1 );
            TASK_COMBAT_SNAP_TO_COVER( l_U353[2], "pana_GP_MainDeck", "Corner_Position16", 0 );
        }
    }
    sub_29560( ref g_U1246, 0 );
    sub_628( "MF", "P_MD_BEDROOM_REBELS_SPOT_MAX: END", 0 );
    return;
}

void sub_50359(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_SET_ACTION_INTENTION( uParam0, uParam1, uParam2, l_U70 );
    }
    return;
}

void sub_50778()
{
    sub_628( "MF", "P_MD_BEDROOM_REBELS_SPOT_MAX_SPEECH: START", 0 );
    sub_37756( ref g_U1246 );
    sub_37844( 1, sub_994(), "MAX", ref g_U1246, 2, 0 );
    sub_37844( 8, l_U353[0], "M11_REBL_16_Mus", ref g_U1246, 2, 0 );
    sub_40965( "SPAN_VIGATT", ref g_U1246, 8, 1 );
    sub_628( "MF", "P_MD_BEDROOM_REBELS_SPOT_MAX_SPEECH: END", 0 );
    return;
}

void sub_51028()
{
    sub_628( "GA", "P_MD_BEDROOM_REBEL_IN_BATHROOM_CAN_LEAVE_COVER start", 0 );
    if (sub_25530( l_U353[2], 0 ))
    {
        SET_PED_FLAG_LOCK_TO_COVER( l_U353[2], 0 );
    }
    sub_628( "GA", "P_MD_BEDROOM_REBEL_IN_BATHROOM_CAN_LEAVE_COVER end", 0 );
    return;
}

void sub_51288()
{
    return;
}

void sub_51643(int iParam0, unknown uParam1)
{
    if ((sub_27185( iParam0 )) == 0)
    {
        sub_27251( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_LATCH( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

void sub_51710(int iParam0, unknown uParam1)
{
    if ((sub_27185( iParam0 )) == 0)
    {
        sub_27251( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_AUTO_CLOSE( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

int sub_51895(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, float fParam7)
{
    if ((ABSF( sub_51906( ref uParam0 ) )) < fParam7)
    {
        return 1;
        break;
    }
    return 0;
}

void sub_51906(int iParam0)
{
    int iVar3;
    float Result;

    if ((sub_27185( iParam0 )) == 0)
    {
        sub_27251( iParam0 );
    }
    iVar3 = 0;
    Result = 0.00000000;
    GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar3, ref Result );
    return Result;
}

void sub_52099()
{
    if ((l_U466) AND (NOT (IS_PED_DEAD( l_U353[2] ))))
    {
        sub_628( "CO", "P_HANDLE_MD_BEDROOM_REBEL_2", 0 );
        switch (l_U1261)
        {
            case 0:
            if (sub_41835( sub_994(), l_U1222 ))
            {
                sub_628( "CO", "State_BG_idle", 0 );
                if ((IS_PED_DEAD( l_U353[1] )) AND (IS_PED_DEAD( l_U353[0] )))
                {
                    sub_628( "CO", "State_BG_idle Rebels Dead", 0 );
                    sub_2707( ref l_U1243 );
                    sub_1914( ref l_U1243, 10000, 1, 0 );
                    sub_2050( ref l_U1243 );
                    sub_628( "CO", "eBathroomGuy = State_BG_Track", 0 );
                    l_U1261 = 1;
                }
            }
            break;
            case 1:
            if (sub_2170( ref l_U1243 ))
            {
                SET_PED_FLAG_LOCK_TO_COVER( l_U353[2], 0 );
                TASK_ATTACK_MOVE( l_U353[2], -30.93000000, 9.06000000, 2.17000000, 5.00000000, 1101004800, -1082130432, 3 );
                if (NOT (IS_PED_ON_SCREEN( l_U353[2], 0 )))
                {
                    sub_29288( l_U353[2], -34.30000000, 8.65000000, 2.17000000, 320.55370000 );
                }
                sub_628( "CO", "eBathroomGuy = State_BG_Activate", 0 );
                l_U1261 = 2;
            }
            if (NOT (sub_41835( sub_994(), l_U1222 )))
            {
                sub_628( "CO", "eBathroomGuy = State_BG_idle", 0 );
                l_U1261 = 0;
            }
            break;
            case 2:
            l_U1261 = 2;
            break;
            case 3: break;
        }
    }
    return;
}

void sub_52718(unknown uParam0)
{
    int I;
    int J;

    switch (l_U140)
    {
        case 0:
        sub_628( "CO", "P_HANDLE_IMAGEFX", 0 );
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (uParam0^)[I]._fU32)
            {
                sub_1914( ref (uParam0^)[I]._fU36, (uParam0^)[I]._fU12, 1, 0 );
                sub_2050( ref (uParam0^)[I]._fU36 );
                if ((uParam0^)[I]._fU20 > 0)
                {
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        l_U140 = 1;
        break;
        case 1:
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (sub_2170( ref (uParam0^)[I]._fU36 ))
            {
                (uParam0^)[I]._fU0 = PLAY_IMAGEFX( (uParam0^)[I]._fU4, (uParam0^)[I]._fU8, (uParam0^)[I]._fU28 );
                if ((uParam0^)[I]._fU16 > 0)
                {
                    sub_1914( ref (uParam0^)[I]._fU72, (uParam0^)[I]._fU16, 1, 0 );
                    sub_2050( ref (uParam0^)[I]._fU72 );
                }
                if ((uParam0^)[I]._fU20 > 0)
                {
                    for ( J = I + 1; J <= (I + (uParam0^)[I]._fU20); J++ )
                    {
                        (uParam0^)[J]._fU0 = PLAY_IMAGEFX( (uParam0^)[J]._fU4, (uParam0^)[J]._fU8, (uParam0^)[I]._fU28 );
                        if ((uParam0^)[J]._fU16 > 0)
                        {
                            sub_1914( ref (uParam0^)[J]._fU72, (uParam0^)[J]._fU16, 1, 0 );
                            sub_2050( ref (uParam0^)[J]._fU72 );
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
            if (sub_2170( ref (uParam0^)[I]._fU72 ))
            {
                STOP_IMAGEFX( (uParam0^)[I]._fU0, (uParam0^)[I]._fU24 );
                (uParam0^)[I]._fU32 = 1;
                if ((uParam0^)[I]._fU20 > 0)
                {
                    if ((uParam0^)[I]._fU20 == 1)
                    {
                        STOP_IMAGEFX( (uParam0^)[I + 1]._fU0, (uParam0^)[I + 1]._fU24 );
                        (uParam0^)[I + 1]._fU32 = 1;
                    }
                    else
                    {
                        for ( J = I + 1; J <= (uParam0^)[I]._fU20; J++ )
                        {
                            STOP_IMAGEFX( (uParam0^)[J]._fU0, (uParam0^)[J]._fU24 );
                            (uParam0^)[J]._fU32 = 1;
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        break;
    }
    return;
}

void sub_53502(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

void sub_53768(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_VISIBLE( uParam0, uParam1 );
    }
    else
    {
        sub_47064( "MAL_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

void sub_53867()
{
    sub_628( "GA", "P_RESET_MAX_ACTION_TREE start", 0 );
    if (NOT (IS_PED_DEAD( sub_994() )))
    {
        if (IS_PLAYER_SHOOTDODGING())
        {
            SCRIPT_ASSERT( "Do not try to reset Max's action tree when he is shoot dodging.", 0 );
            sub_628( "GA", "You cannot reset Max's action tree during a shoot dodge.", 0 );
        }
        else
        {
            PED_ACTION_TREE_PLAY_NODE( sub_994(), "/Global/Player" );
        }
    }
    sub_628( "GA", "P_RESET_MAX_ACTION_TREE end", 0 );
    return;
}

void sub_55557()
{
    sub_628( "GA", "P_RELEASE_MD2_ASSETS start", 0 );
    sub_55615( ref l_U179, ref g_U1588 );
    sub_55893( ref l_U186, ref g_U1829 );
    sub_56109( ref g_U3079, ref g_U3026 );
    sub_56302( "LEVEL_S_PAN_CP_03", ref g_U1975 );
    sub_56302( "EXPL_CAM", ref g_U1975 );
    sub_628( "GA", "P_RELEASE_MD2_ASSETS end", 0 );
    return;
}

void sub_55615(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_55650( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_55650(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_3595( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

void sub_55893(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_55928( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_55928(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_3595( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_56109(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_3595( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_56302(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_3595( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


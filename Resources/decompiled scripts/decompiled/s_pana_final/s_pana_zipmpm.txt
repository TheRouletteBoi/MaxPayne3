void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U40 = 0;
    l_U41 = 0;
    l_U42 = 1500;
    l_U70 = -1;
    l_U71 = {64536, 64536, 64536};
    l_U130 = 0;
    l_U132 = 1;
    l_U133 = 0;
    l_U184 = 3300;
    l_U192 = 2750;
    l_U459 = 4275;
    sub_339( "SP", "Script s_pana_zipMPM.sc is starting up...", 0 );
    l_U130 = 1;
    sub_394();
    while (NOT IS_EXITFLAG_SET())
    {
        sub_757();
        if (l_U133 == 0)
        {
            sub_13975();
        }
        WAIT( 0 );
    }
    sub_7032( 1 );
    sub_61488();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_pana_zipMPM" );
    sub_339( "SP", "Script s_pana_zipMPM.sc is terminating...", 0 );
    return;
}

void sub_339(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_394()
{
    sub_339( "GA", "P_MPM_POPULATE_VARIABLE_ARRAYS start", 0 );
    l_U110[0] = 1914709263;
    l_U110[1] = 1942109258;
    l_U110[2] = -1324244056;
    l_U110[3] = -1199034430;
    l_U110[4] = 688450913;
    l_U110[5] = g_U1512;
    l_U110[6] = -2080896344;
    l_U110[7] = g_U1524;
    l_U110[8] = g_U1574;
    l_U110[9] = g_U1576;
    l_U110[10] = g_U1578;
    l_U110[11] = g_U829;
    l_U110[12] = -1409914275;
    l_U124[0] = -184942895;
    l_U124[1] = 456708483;
    l_U124[2] = -1404433099;
    l_U124[3] = 1308526797;
    l_U124[4] = -612753081;
    sub_339( "GA", "P_MPM_POPULATE_VARIABLE_ARRAYS end", 0 );
    return;
}

void sub_757()
{
    int I;

    if (g_U834 == 10)
    {
        switch (l_U133)
        {
            case 0:
            sub_848( 1 );
            if ((sub_2162()) || (IS_PED_DEAD( sub_858() )))
            {
                l_U133 = 2;
                sub_339( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            if (DOES_PED_EXIST( l_U385 ))
            {
                if (IS_PED_DEAD( l_U385 ))
                {
                    if (HAS_PED_BEEN_DAMAGED_BY_PED( l_U385, sub_858(), 0 ))
                    {
                        BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
                        l_U396 = 1;
                        l_U133 = 1;
                        sub_339( "SP", "eFailState = FAIL_HANDLE_PLAYER_SHOT_PASSOS", 0 );
                    }
                }
            }
            break;
            case 1:
            if (sub_2790())
            {
                l_U133 = 2;
                sub_339( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 2:
            if (sub_5287())
            {
                if ((ISEQ_QUERY_ENTITY_STATE( 1598038835, "s_pan_mpm_max", 6 )) == 0)
                {
                    ISEQ_UNREGISTER_ENTITY( 1598038835, "s_pan_mpm_max" );
                    ISEQ_TERMINATE( 1598038835 );
                    if (NOT (IS_PED_DEAD( sub_858() )))
                    {
                        PED_ACTION_TREE_PLAY_NODE( sub_858(), "/Global/Player/PlayerLoco" );
                    }
                    sub_5076( 500, 1, 0, 92.33000000, -2.18000000, 0 );
                    sub_1872( 1, 1 );
                    if (NOT (IS_PED_DEAD( sub_858() )))
                    {
                        for ( I = 0; I <= 4; I++ )
                        {
                            if (NOT (IS_PED_DEAD( l_U359[I] )))
                            {
                                REGISTER_TARGET( l_U359[I], sub_858() );
                            }
                        }
                    }
                    sub_5563();
                }
                if ((g_U835[11]._fU40 != 4) AND (g_U835[11]._fU40 != 0))
                {
                    sub_339( "GA", "Shutting down script for Visitor Center.", 0 );
                    sub_5784( ref g_U835[11] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U835[11]._fU32 );
                }
                l_U133 = 4;
            }
            else if ((sub_5849( 0 )) == 1)
            {
                if ((g_U835[11]._fU40 != 4) AND (g_U835[11]._fU40 != 0))
                {
                    sub_339( "GA", "Shutting down script for Visitor Center.", 0 );
                    sub_5784( ref g_U835[11] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U835[11]._fU32 );
                }
                l_U133 = 3;
            }
            break;
            case 3:
            if (NOT (IS_PED_DEAD( sub_858() )))
            {
                l_U133 = 4;
                sub_339( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 4:
            sub_339( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_858() ))) AND (NOT (IS_PLAYER_DEAD( sub_880() ))))
            {
                SET_PLAYER_CONTROL( sub_880(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_858() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_858(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            sub_7032( 0 );
            l_U133 = 5;
            sub_339( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 5:
            sub_339( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            if (l_U74._fU0)
            {
                sub_9753( ref l_U74, sub_858() );
            }
            l_U133 = 6;
            sub_339( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 6:
            sub_339( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U130 = 1;
            l_U132 = 0;
            l_U133 = 0;
            sub_339( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_848(int iParam0)
{
    if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND ((NOT IS_BULLET_CAMERA_ACTIVE()) AND (NOT (IS_PED_DEAD( sub_858() )))))
    {
        if ((IS_PED_IN_WATER( sub_858() )) == 1)
        {
            if (NOT g_U3626._fU32)
            {
                sub_989();
            }
            if (iParam0 == 1)
            {
                sub_1814();
            }
            sub_1872( 1, 1 );
            return 1;
        }
    }
    return 0;
}

int sub_858()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_880() );
    }
    return 0;
}

void sub_880()
{
    return GET_PLAYER_ID();
}

void sub_989()
{
    sub_339( "MF", "P_GBL_QUICK_GAMEPLAY_CAM_COPY - START", 0 );
    sub_1057( ref g_U3626, 50 );
    sub_1390( 0, 0, 0, 1 );
    sub_1553( ref g_U3626 );
    sub_339( "MF", "P_GBL_QUICK_GAMEPLAY_CAM_COPY - END", 0 );
    return;
}

void sub_1057(int iParam0, unknown uParam1)
{
    iParam0->_fU4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_ROT()};
    iParam0->_fU16 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_COORD()};
    iParam0->_fU28 = GET_GAMEPLAY_CAM_FOV();
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam1;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU96 = 0;
    sub_1180( iParam0 + 48, uParam1, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U703, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_1180(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_1390(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_858() )))
        {
            SET_PLAYER_CONTROL( sub_880(), 0, uParam2 );
            SET_PED_DUCKING( sub_858(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_858() );
            }
            SET_PED_INVINCIBLE( sub_858(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_1553(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_1608( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

void sub_1608(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

void sub_1814()
{
    SET_PAD_SHAKE( 0, 100, 250 );
    WAIT( 90 );
    SET_PED_HEALTH( sub_858(), 0, 0 );
    return;
}

void sub_1872(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_858() )))
    {
        SET_PLAYER_CONTROL( sub_880(), 1, 0 );
        SET_PED_INVINCIBLE( sub_858(), 0 );
        if (bParam0)
        {
            sub_1953();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_1953()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_858() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_858(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_858(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_858(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_858(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

int sub_2162()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_858() )))
        {
            SET_PED_FORCED_TO_WALK( sub_858(), 0 );
            SET_PLAYER_FORCED_AIM( sub_880(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_880(), 1 );
            if ((IS_PED_VISIBLE( sub_858() )) == 0)
            {
                SET_PED_VISIBLE( sub_858(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

int sub_2790()
{
    switch (l_U396)
    {
        case 1:
        sub_1390( 1, 0, 0, 1 );
        sub_2879( ref l_U397, -102.59000000, 18.17000000, 17.41000000, -19.92000000, 0.00000000, 19.03000000, 45.00000000, 0 );
        sub_2879( ref l_U428, -102.74000000, 18.59000000, 17.25000000, -19.92000000, 0.00000000, 19.03000000, 45.00000000, l_U459 );
        sub_3157( ref l_U460[0], 1, 2.00000000, 10, -1, -1, 1, 0 );
        sub_3157( ref l_U460[1], 4, 3.00000000, 300, -1, -1, 1, 0 );
        sub_1553( ref l_U397 );
        l_U396 = 2;
        break;
        case 2:
        if (NOT IS_BULLET_CAMERA_ACTIVE())
        {
            if (NOT l_U428._fU40)
            {
                sub_3833( ref l_U397, ref l_U428, l_U459, 1, 1 );
                ACTIVATE_BULLET_TIME( 0, 3, 1 );
                START_POSTFX_BLENDER( 3 );
            }
            sub_3950( ref l_U460 );
            if (sub_4671( ref l_U428, 1 ))
            {
                DO_SCREEN_FADE_OUT( 500 );
            }
            if (IS_SCREEN_FADED_OUT())
            {
                DEACTIVATE_BULLET_TIME( 0, 0 );
                END_POSTFX_BLENDER( 3, 0 );
                sub_4854( ref l_U460, 1 );
                sub_5076( 0, 1, 0, -859915232, -859915232, 0 );
                sub_1872( 1, 1 );
                l_U396 = 5;
            }
        }
        break;
    }
    if (l_U396 == 5)
    {
        return 1;
        break;
    }
    return 0;
}

void sub_2879(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_1180( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U703, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_3157(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    if (iParam0->_fU168 == 0)
    {
        sub_3185( iParam0, uParam1 );
        iParam0->_fU192 = uParam1;
        iParam0->_fU36 = uParam2;
        iParam0->_fU148 = uParam3;
        iParam0->_fU152 = uParam4;
        iParam0->_fU156 = uParam5;
        iParam0->_fU160 = uParam7;
        iParam0->_fU176 = uParam6;
    }
    sub_3556( iParam0 + 40 );
    sub_3556( iParam0 + 76 );
    sub_3556( iParam0 + 112 );
    iParam0->_fU172 = iParam0->_fU176;
    iParam0->_fU164 = 0;
    iParam0->_fU168 = 1;
    iParam0->_fU184 = 0;
    iParam0->_fU188 = 0;
    return;
}

void sub_3185(int iParam0, unknown uParam1)
{
    switch (uParam1)
    {
        case 1:
        StrCopy( ref iParam0->_fU4, "SMALL_EXPLOSION_SHAKE", 32 );
        break;
        case 2:
        StrCopy( ref iParam0->_fU4, "MEDIUM_EXPLOSION_SHAKE", 32 );
        break;
        case 3:
        StrCopy( ref iParam0->_fU4, "LARGE_EXPLOSION_SHAKE", 32 );
        break;
        case 4:
        StrCopy( ref iParam0->_fU4, "HAND_SHAKE", 32 );
        break;
        case 5:
        StrCopy( ref iParam0->_fU4, "JOLT_SHAKE", 32 );
        break;
        case 6:
        StrCopy( ref iParam0->_fU4, "VIBRATE_SHAKE", 32 );
        break;
        case 7:
        StrCopy( ref iParam0->_fU4, "WOBBLY_SHAKE", 32 );
        break;
    }
    iParam0->_fU0 = iParam0->_fU192;
    return;
}

void sub_3556(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_3833(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE_WITH_INTERP( iParam1->_fU0, iParam0->_fU0, uParam2, uParam3, uParam4 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_1608( iParam1 + 48 );
    iParam1->_fU32 = 1;
    iParam1->_fU40 = 1;
    return;
}

void sub_3950(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_3982( ref (uParam0^)[I] );
    }
    return;
}

void sub_3982(int iParam0)
{
    if (iParam0->_fU172 == 1)
    {
        if (iParam0->_fU164 == 0)
        {
            sub_1180( iParam0 + 40, iParam0->_fU148, 1, 0 );
            sub_1608( iParam0 + 40 );
            if (iParam0->_fU152 > 0)
            {
                sub_1180( iParam0 + 76, iParam0->_fU152, 1, 0 );
                sub_1608( iParam0 + 76 );
            }
            iParam0->_fU164 = 1;
        }
        if (sub_4110( iParam0 + 40 ))
        {
            sub_339( "ML", "P_HANDLE_CAM_SHAKE is shaking the camera", "---" );
            sub_4346( iParam0 + 4, iParam0->_fU36 );
            if (iParam0->_fU156 > 0)
            {
                sub_1180( iParam0 + 112, iParam0->_fU156, 1, 0 );
                sub_1608( iParam0 + 112 );
            }
        }
        if (sub_4110( iParam0 + 112 ))
        {
            sub_4346( iParam0 + 4, iParam0->_fU36 );
            sub_1180( iParam0 + 112, iParam0->_fU156, 1, 0 );
            sub_1608( iParam0 + 112 );
        }
        if (sub_4110( iParam0 + 76 ))
        {
            sub_339( "ML", "P_HANDLE_CAM_SHAKE is done shaking the camera", "---" );
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam0->_fU160 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam0->_fU160 );
            sub_3556( iParam0 + 112 );
            iParam0->_fU172 = 0;
        }
    }
    return;
}

int sub_4110(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_4346(unknown uParam0, unknown uParam1)
{
    SHAKE_CAM( GET_RENDERING_CAM(), uParam0, uParam1 );
    SHAKE_GAMEPLAY_CAM( uParam0, uParam1 );
    return;
}

int sub_4671(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || (sub_4110( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || (sub_4110( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_4854(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_4888( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_4888(int iParam0, int iParam1)
{
    if (iParam0->_fU172 == 1)
    {
        if (iParam1 == 1)
        {
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam1 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam1 );
        }
        else
        {
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam0->_fU160 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam0->_fU160 );
        }
        sub_3556( iParam0 + 40 );
        sub_3556( iParam0 + 76 );
        sub_3556( iParam0 + 112 );
        iParam0->_fU172 = 0;
    }
    return;
}

void sub_5076(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

void sub_5287()
{
    return g_U648;
}

void sub_5563()
{
    sub_339( "CCB", "P_STOP_SP_CHALLENGES_MPM", 0 );
    sub_339( "CCB", "Stopping the Panama_MPM context...", 0 );
    END_CONTEXT( "Panama_MPM" );
    return;
}

void sub_5784(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

int sub_5849(int iParam0)
{
    iParam0 = 1;
    switch (l_U41)
    {
        case 0:
        if (NOT (sub_5910( ref l_U43 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_858() )))
            {
                l_U42 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_1180( ref l_U43, l_U42, 1, 1 );
            sub_1608( ref l_U43 );
        }
        if (sub_4110( ref l_U43 ))
        {
            sub_339( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_858() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_880() )))
            {
                SET_PLAYER_CONTROL( sub_880(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U41 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U41 = 2;
            }
            else
            {
                l_U41 = 3;
            }
        }
        break;
        case 2:
        sub_339( "NS", "Player will QUIT", 0 );
        sub_6369();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_339( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_6369();
        return 1;
        break;
    }
    return 0;
}

int sub_5910(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_6369()
{
    sub_339( "NS", "P_PostFailRetryCleanup", 0 );
    sub_3556( ref l_U43 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_880() )))
    {
        SET_PLAYER_CONTROL( sub_880(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U40 = 0;
    l_U40 = l_U40;
    l_U41 = 0;
    return;
}

void sub_7032(boolean bParam0)
{
    sub_339( "GA", "P_CLEANUP_MPM start", 0 );
    if ((CUTSCENE_NAMED_IS_LOADING( "MID_07_PANAMA_concat" )) || (CUTSCENE_IS_LOADED( "MID_07_PANAMA_concat" )))
    {
        CLEAR_NAMED_CUTSCENE( "MID_07_PANAMA_concat" );
    }
    sub_7188( "S_PANA_MPM", ref g_U2986 );
    sub_7510( "S_PANA_MPM", ref g_U2986 );
    sub_7188( "S_PANA_MPM_BLENDOUT", ref g_U2986 );
    sub_7510( "S_PANA_MPM_BLENDOUT", ref g_U2986 );
    ISEQ_TERMINATE( 1598038835 );
    sub_7907( 1598038835, ref g_U1878 );
    ISEQ_TERMINATE( -1367719514 );
    sub_7907( -1367719514, ref g_U1878 );
    sub_8161( ref l_U678, 0 );
    if (NOT bParam0)
    {
        sub_9054( l_U279 );
        sub_9132( ref l_U359 );
        sub_9132( ref l_U614 );
        sub_9203( ref g_U4160 );
        sub_9299( ref g_U3517 );
        sub_9332( g_U755._fU0 );
    }
    sub_9054( l_U385 );
    sub_9203( ref g_U4163 );
    sub_9236( l_U677 );
    sub_9435();
    if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( "PANAMA_OS_3" ))
    {
        AUDIO_MUSIC_STOP_ONESHOT();
    }
    sub_339( "GA", "P_CLEANUP_MPM end", 0 );
    return;
}

void sub_7188(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if (sub_7205( uParam0, uParam1 ))
    {
        iVar4 = sub_7304( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            STOP_SCRIPT_STREAM( iVar4 );
        }
        else
        {
            SCRIPT_ASSERT( "Attempting to stop a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    return;
}

int sub_7205(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                return 1;
            }
        }
    }
    return 0;
}

int sub_7304(unknown uParam0, unknown uParam1)
{
    int Result;

    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
        {
            return Result;
        }
    }
    return -1;
}

void sub_7510(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_7621( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

int sub_7621(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_7907(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_7621( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

void sub_8161(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_8205( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_8205( iParam0, 0 );
        sub_8405( iParam0, 0 );
        if ((IS_PED_DEAD( sub_858() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_858() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_858(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_8205(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_8405(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_8556( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_8556(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_8617( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_8617( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_8617(int iParam0)
{
    if (((IS_PED_DEAD( sub_858() )) == 0) AND ((IS_PLAYER_DEAD( sub_880() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_858() )) == 1) || (((IS_PED_GETTING_UP( sub_858() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_858() )) == 1) || (((IS_PED_IN_COVER( sub_858() )) == 1) || (((IS_PED_DUCKING( sub_858() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_858() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_9054(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_9132(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_9054( (uParam0^)[I] );
    }
    return;
}

void sub_9203(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_9236( (uParam0^)[I] );
    }
    return;
}

void sub_9236(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_9299(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_9332( (uParam0^)[I] );
    }
    return;
}

void sub_9332(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_9435()
{
    sub_339( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    sub_339( "CCB", "Stopping the Panama_MPM context...", 0 );
    END_CONTEXT( "Panama_MPM" );
    return;
}

void sub_9753(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_339( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_9937( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_11014( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_11306( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_11666( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_11306( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_11666( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_11306( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_11666( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_11951( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_11666( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_11951( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_11666( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_12444( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_12605( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_858(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_339( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_9937(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_9969( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_9969(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_11014(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_11306(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_11622( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_11622(unknown uParam0)
{
    return;
}

void sub_11666(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_11951(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_11622( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_12444(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_12605(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_9969( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_12677( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_12677(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_13975()
{
    int iVar2;
    int I;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;

    iVar2 = l_U130;
    switch (l_U130)
    {
        case 0: break;
        case 1:
        sub_339( "SP", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
        sub_14203();
        sub_14429();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U130 = 2;
        sub_339( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_339( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        sub_17576();
        sub_23594();
        l_U130 = 3;
        sub_339( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if ((sub_27842( ref g_U2986 )) AND ((sub_27715( ref g_U3026 )) AND ((sub_27524( ref g_U1878 )) AND ((sub_27397( ref g_U1975 )) AND ((sub_27276( ref g_U1829 )) AND (sub_27156( ref g_U1588 )))))))
        {
            if ((NOT l_U74._fU0) AND (g_U833 == 10))
            {
                l_U130 = 4;
                sub_339( "SP", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
            }
            else
            {
                l_U130 = 6;
                sub_339( "SP", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
            }
        }
        break;
        case 4:
        sub_339( "GA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        g_U1230[10] = 1;
        l_U132 = 0;
        if (NOT (IS_PED_DEAD( sub_858() )))
        {
            FREEZE_PED_POSITION( sub_858(), 0 );
        }
        if ((sub_28236( ref l_U74 )) == 0)
        {
            sub_11951( sub_858(), 456708483, 200, 0, 0 );
            sub_11306( sub_858(), -1404433099, 1, 200, 0 );
            l_U130 = 5;
            sub_339( "GA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U130 = 6;
            sub_339( "SP", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD( sub_858() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_858(), 1 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_858(), 0, 0 ) )))
            {
                l_U130 = 6;
                sub_339( "GA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
            }
        }
        break;
        case 6:
        if (g_U1230[10])
        {
            if (l_U132)
            {
                if (CUTSCENE_IS_LOADED( "MID_07_PANAMA_concat" ))
                {
                    l_U130 = 7;
                    sub_339( "GA", "eCheckpointState = CP_MPM_PRE_CREATE_PEDS", 0 );
                }
                else if (CUTSCENE_NAMED_IS_LOADING( "MID_07_PANAMA_concat" ))
                {
                    sub_339( "GA", "Waiting for cutscene MID_07_PANAMA_concat to load.", 0 );
                }
                else
                {
                    sub_339( "GA", "Requesting cutscene MID_07_PANAMA_concat to load.", 0 );
                    PRE_STREAM_SEAMLESS_CUTSCENE( "MID_07_PANAMA_concat" );
                }
            }
            else
            {
                l_U130 = 7;
                sub_339( "GA", "eCheckpointState = CP_MPM_PRE_CREATE_PEDS", 0 );
            }
        }
        break;
        case 7:
        if (l_U131)
        {
            l_U291 = 1;
        }
        if (sub_29146())
        {
            if (sub_31555())
            {
                l_U130 = 8;
                sub_339( "GA", "eCheckpointState = CP_MPM_PRE_CREATE_OBJECTS", 0 );
            }
        }
        break;
        case 8:
        sub_31834();
        sub_32453();
        sub_33068();
        l_U130 = 9;
        sub_339( "GA", "eCheckpointState = CP_HANDLE_MID_07_PANAMA", 0 );
        break;
        case 9:
        if (l_U131)
        {
            sub_40832( ref l_U155, "MID_07_PANAMA_concat", 34343, 34362, 36593, 37012, 37031, 40809, 250, 0 );
            if (l_U132)
            {
                l_U155._fU4 = 2;
            }
            else
            {
                l_U155._fU4 = 7;
            }
        }
        if (sub_41258( ref l_U155 ))
        {
            DO_SCREEN_FADE_IN( 0 );
            sub_42945();
            sub_1608( ref l_U193 );
            if (NOT l_U74._fU0)
            {
                g_U834 = 10;
                sub_43325( ref l_U74, g_U834, sub_858(), g_U980[10], g_U1086[10], g_U1158[10], g_U1122[10], 1 );
            }
            sub_46939();
            l_U130 = 10;
            sub_339( "GA", "eCheckpointState = CP_MPM_GAMEPLAY", 0 );
        }
        break;
        case 10:
        if (l_U131)
        {
            sub_47131();
            if (NOT AUDIO_IS_MUSIC_PLAYING())
            {
                sub_339( "CR", "MUSIC 7.2: Playing PANAMA_FINAL Mood: PANAMA_FINAL_5", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_5_6", "PANAMA_FINAL_5_6", 0, -1, -1, -1082130432, 0 );
            }
        }
        sub_48543( ref l_U359 );
        if (NOT l_U202)
        {
            if ((sub_48744( ref l_U359 )) <= 1)
            {
                l_U202 = 1;
                sub_339( "CCB", "Assigning PANAMA_MPM_CUSTOM_01 bulletcam to last living piMuseumEntranceWave1 ped.", 0 );
                sub_48961( ref l_U359, "PANAMA_MPM_CUSTOM_01" );
            }
        }
        if (IS_BULLET_CAMERA_RUNNING( 0 ))
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            l_U130 = 11;
            sub_339( "GA", "eCheckpointState = CP_MPM_END_FROM_BULLET_CAM", 0 );
            break;
        }
        if (NOT IS_BULLET_CAMERA_ACTIVE())
        {
            if (sub_4110( ref l_U193 ))
            {
                l_U130 = 12;
                sub_339( "GA", "eCheckpointState = CP_MPM_END_WITHOUT_BULLET_CAM", 0 );
            }
        }
        break;
        case 11:
        if (l_U131)
        {
            if (NOT (IS_PED_DEAD( sub_858() )))
            {
                sub_49381( 1.00000000 );
            }
            sub_7188( "S_PANA_MPM", ref g_U2986 );
        }
        if (NOT l_U203)
        {
            if (NOT (ISEQ_QUERY_ENTITY_STATE( 1598038835, "s_pan_mpm_max", 6 )))
            {
                if ((PED_GET_ACTION_INTENTION_STATUS( sub_858(), 47 )) == 3)
                {
                    sub_49555();
                    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
                    l_U203 = 1;
                }
            }
        }
        if ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND (l_U203))
        {
            sub_50427();
            sub_51081( l_U279, "S_PANA_MPM_BLENDOUT", ref g_U2986 );
            SNAP_PLAYER_TO_COVERPOINT( sub_880(), "GenCover", "1300BAB3_230D1e79_Corner2", 0 );
            sub_1390( 1, 0, 0, 1 );
            sub_2879( ref l_U204, -109.18580000, -6.40260200, 11.13302000, 0.00000000, 0.00000000, 180.00000000, 45, 100 );
            sub_2879( ref l_U235, -109.12700000, -11.62000000, 9.98000000, -2.12405800, -0.00000000, -178.06820000, 45, 500 );
            sub_3833( ref l_U204, ref l_U235, 1200, 0, 0 );
            l_U130 = 13;
            sub_339( "GA", "eCheckpointState = CP_MPM_BLENDOUT", 0 );
        }
        break;
        case 12:
        if (l_U131)
        {
            sub_51580( ref l_U359 );
            if (NOT (IS_PED_DEAD( sub_858() )))
            {
                sub_49381( 1.00000000 - ((TO_FLOAT( sub_48744( ref l_U359 ) )) / (TO_FLOAT( 6 ))) );
            }
            sub_7188( "S_PANA_MPM", ref g_U2986 );
            sub_51081( l_U279, "S_PANA_MPM_BLENDOUT", ref g_U2986 );
            sub_339( "CCB", "Putting player in cover...", 0 );
            SNAP_PLAYER_TO_COVERPOINT( sub_880(), "GenCover", "1300BAB3_230D1e79_Corner2", 0 );
            sub_1390( 1, 0, 0, 1 );
            sub_1057( ref l_U204, 100 );
            sub_2879( ref l_U235, -109.12700000, -11.62000000, 9.98000000, -2.12405800, -0.00000000, -178.06820000, 45, 2500 );
            sub_3833( ref l_U204, ref l_U235, 1500, 0, 0 );
        }
        l_U130 = 13;
        sub_339( "GA", "eCheckpointState = CP_MPM_BLENDOUT", 0 );
        break;
        case 13:
        if (l_U131)
        {
            sub_52325();
            sub_339( "CR", "MUSIC: Playing PANAMA_FINAL Mood: PANAMA_FINAL_5_6", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_5_6", "PANAMA_FINAL_5_6", 0, 3000, -1, -1082130432, 0 );
            sub_52945();
            l_U559 = 1;
        }
        if ((l_U559 != 4) AND (l_U559 != 0))
        {
            sub_53290();
        }
        if ((sub_4671( ref l_U235, 0 )) AND (ISEQ_QUERY_ENTITY_STATE( 1598038835, "s_pan_mpm_max", 6 )))
        {
            sub_5076( 500, 1, 0, 92.33000000, -2.18000000, 0 );
            sub_1872( 1, 1 );
            sub_1608( ref l_U785 );
            if (NOT (IS_PED_DEAD( sub_858() )))
            {
                for ( I = 0; I <= 4; I++ )
                {
                    if (NOT (IS_PED_DEAD( l_U359[I] )))
                    {
                        REGISTER_TARGET( l_U359[I], sub_858() );
                    }
                }
            }
            sub_5563();
            l_U130 = 14;
            sub_339( "GA", "eCheckpointState = CP_GAMEPLAY_VISITOR_CENTER_ENTRANCE", 0 );
        }
        break;
        case 14:
        if (l_U131)
        {
            g_U3684 = 1;
            sub_54522( ref l_U365, 0.50000000 );
            sub_54697();
            sub_54833();
        }
        sub_48543( ref l_U359 );
        sub_48543( ref l_U614 );
        sub_55363();
        if ((NOT (IS_PED_DEAD( l_U279 ))) AND (NOT l_U280))
        {
            if (ISEQ_QUERY_ENTITY_STATE( 1598038835, "s_pan_mpm_gmed", 6 ))
            {
                sub_55794();
                l_U280 = 1;
            }
        }
        if (sub_4110( ref l_U785 ))
        {
            sub_339( "CR", "MUSIC: Playing PANAMA_FINAL Mood: PANAMA_FINAL_2_5_6", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_2_5_6", "PANAMA_FINAL_2_5_6", 0, 3000, -1, -1082130432, 0 );
        }
        if (NOT l_U623)
        {
            if (((sub_48744( ref l_U359 )) == 0) || (sub_56263( l_U624 )))
            {
                sub_56311();
                sub_56973();
                l_U623 = 1;
            }
        }
        if (l_U623)
        {
            if (sub_57406( ref l_U624, 0 ))
            {
                sub_339( "GA", "Removing tethers from interior enemies.", 0 );
                sub_51752( l_U614[0] );
                sub_51752( l_U614[1] );
                sub_51752( l_U614[2] );
                sub_51752( l_U614[3] );
            }
        }
        if (NOT l_U666)
        {
            if (((sub_48744( ref l_U359 )) + (sub_48744( ref l_U614 ))) == 1)
            {
                sub_339( "GA", "Assigning bullet cam post MPM.", 0 );
                sub_48973( ref l_U359 );
                sub_48973( ref l_U614 );
                l_U666 = 1;
            }
        }
        if (NOT (IS_PED_DEAD( l_U385 )))
        {
            if ((PED_GET_ACTION_INTENTION_STATUS( l_U385, 37 )) == 3)
            {
                PED_FINISH_ACTION_INTENTION( l_U385, 37 );
                sub_57774();
            }
        }
        if (DOES_PED_EXIST( l_U385 ))
        {
            if (ISEQ_QUERY_ENTITY_STATE( -1367719514, "Passos", 6 ))
            {
                sub_339( "GA", "VIG18 complete, cleaning Passos.", 0 );
                ISEQ_TERMINATE( -1367719514 );
                sub_7907( -1367719514, ref g_U1878 );
                sub_9054( l_U385 );
                sub_58134( g_U1512, ref g_U1588 );
            }
        }
        if ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND (((sub_48744( ref l_U359 )) + (sub_48744( ref l_U614 ))) == 0))
        {
            l_U130 = 15;
            sub_339( "GA", "eCheckpointState = CP_GAMEPLAY_GATE_BUTTON", 0 );
        }
        break;
        case 15:
        if (l_U131)
        {
            sub_58470( ref g_U835[11] );
            if (DOES_PED_EXIST( l_U385 ))
            {
                sub_339( "GA", "Removing Passos to make room for the Visitor Center checkpoint.", 0 );
                ISEQ_TERMINATE( -1367719514 );
                sub_7907( -1367719514, ref g_U1878 );
                sub_9054( l_U385 );
                sub_58134( g_U1512, ref g_U1588 );
            }
            sub_54697();
            sub_58646( 1 );
            sub_8161( ref l_U678, 1 );
        }
        sub_55363();
        if (sub_57406( ref l_U794, 0 ))
        {
            sub_55638( "SPAN_MXSTGT", ref g_U1246 );
            sub_1608( ref l_U815 );
            sub_339( "CR", "Playing monologue - SPAN_MXSTGT - That looked like the way up...", 0 );
        }
        if (sub_4110( ref l_U815 ))
        {
            sub_55638( "SPAN_MXSTDS", ref g_U1246 );
            sub_339( "CR", "Playing monologue - SPAN_MXSTDS - There was probably a control console behind the desk.", 0 );
        }
        if (sub_4110( ref l_U785 ))
        {
            sub_339( "CR", "MUSIC: Playing PANAMA_FINAL Mood: PANAMA_FINAL_2_5_6", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_2_5_6", "PANAMA_FINAL_2_5_6", 0, 3000, -1, -1082130432, 0 );
        }
        if (sub_59436( ref l_U678 ))
        {
            sub_1390( 1, 0, 0, 1 );
            sub_2879( ref uVar4, -108.68000000, -34.31000000, 9.54000000, 12.74000000, 0.00000000, -75.64000000, 45.00000000, 1000 );
            sub_1553( ref uVar4 );
            g_U1230[11] = 1;
            l_U130 = 16;
            sub_339( "GA", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 16:
        if (l_U131)
        {
            sub_9236( l_U677 );
        }
        if (g_U834 == 11)
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U130 = 0;
            sub_339( "SP", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
    }
    if (l_U130 != iVar2)
    {
        l_U131 = 1;
    }
    else
    {
        l_U131 = 0;
    }
    return;
}

void sub_14203()
{
    sub_339( "GA", "P_INITIALIZE_SCRIPT_DATA start", 0 );
    l_U131 = 1;
    l_U183 = 0;
    l_U182 = 0;
    sub_1180( ref l_U193, l_U192, 1, 0 );
    l_U202 = 0;
    l_U203 = 0;
    sub_1180( ref l_U785, 30000, 1, 0 );
    l_U280 = 0;
    l_U291 = 0;
    l_U292 = 0;
    l_U559 = 0;
    l_U560 = 0;
    l_U623 = 0;
    l_U666 = 0;
    l_U396 = 0;
    sub_1180( ref l_U815, 12000, 1, 0 );
    sub_339( "GA", "P_INITIALIZE_SCRIPT_DATA end", 0 );
    return;
}

void sub_14429()
{
    sub_339( "GA", "P_SET_STATIC_DATA start", 0 );
    sub_14511( ref l_U266, -109.77000000, 19.91000000, 15.85000000, 180.00000000, -1729251551, 8, 4, 2, 0, 1 );
    sub_14511( ref l_U293[0], -113.06000000, -13.41000000, 9.15000000, 0.00000000, -383524100, 7, 3, 2, 0, 1 );
    sub_14511( ref l_U293[1], -114.80000000, -15.83000000, 8.24000000, 0.00000000, 1193160897, 7, 3, 2, 0, 1 );
    sub_14511( ref l_U293[2], -116.88000000, -13.57000000, 9.15000000, -5.00000000, 537286051, 7, 3, 2, 0, 1 );
    sub_14511( ref l_U293[3], -110.63000000, -16.17000000, 9.15000000, 15.00000000, -1361624485, 7, 3, 2, 0, 1 );
    sub_14511( ref l_U293[4], -110.18000000, -12.18000000, 9.15000000, 0.00000000, -1105521816, 7, 3, 2, 0, 1 );
    sub_14511( ref l_U561[0], -106.50000000, -35.39000000, 9.28000000, 31.52000000, -2078276195, 7, 3, 2, 0, 1 );
    sub_14511( ref l_U561[1], -110.64000000, -40.38000000, 9.10000000, 90.00000000, 976585847, 7, 3, 2, 0, 1 );
    sub_14511( ref l_U561[2], -109.13470000, -36.83638000, 9.08669400, 31.52000000, -1927190348, 7, 3, 2, 0, 1 );
    sub_14511( ref l_U561[3], -124.42980000, -34.57470000, 9.05788000, 31.52000000, 327922181, 7, 3, 2, 0, 1 );
    sub_14511( ref l_U372, -102.86700000, 26.17000000, 15.07000000, 180.00000000, -454789158, 26, 0, 0, 0, 0 );
    sub_15141( ref l_U134, "TRIGGER_MUSEUM_CHECKPOINT_ZONE", -126.87000000, -31.99000000, -14.38000000, 164.17000000, 108.55000000, 43.62000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15141( ref l_U624, "TRIGGER_LOBBY_ENTRANCE_OUTSIDE", -117.30000000, -26.50000000, 8.06000000, 21.50000000, 5.13000000, 3.11000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15141( ref l_U645, "TRIGGER_LOBBY_ENTRANCE", -108.73000000, -38.83000000, 8.88000000, 15.00000000, 15.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15141( ref l_U764, "TRIGGER_MUSEUM_GATE_BUTTON", -109.20000000, -36.56000000, 9.08000000, 1.25000000, 1.25000000, 1.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15141( ref l_U794, "TRIGGER_MUSEUM_GATE", -106.00000000, -33.44200000, 9.03800000, 4.00000000, 4.00000000, 2.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15629( ref l_U371, "teth_MPM_Museum", -116.35000000, -12.80000000, 8.47000000, 11.00000000, 3.25000000, 4.40000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15629( ref l_U619, "TETHER_MUSEUM_STAIRS", -108.09000000, -23.07000000, 11.09000000, 3.65000000, 1.70000000, 2.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15629( ref l_U620, "TETHER_MUSEUM_ENTRANCE_DESK", -109.33000000, -36.94000000, 8.94000000, 3.39000000, 3.12000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15629( ref l_U621, "TETHER_MUSEUM_DISPLAY_MAP", -122.54000000, -33.03000000, 8.94000000, 4.10000000, 5.33000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15629( ref l_U622, "TETHER_MUSEUM_ENTRANCE", -110.10000000, -25.87000000, 9.05000000, 3.65000000, 1.70000000, 2.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16057( ref l_U185, -1513586507, -104.09660000, 25.90269000, 16.16696000, 0.00000000, 0.00000000, 0.00000000 );
    sub_16115( ref l_U185, -100.00000000, 100.00000000 );
    sub_16293( ref l_U185, 1, 1, 1.00000000 );
    sub_16444( ref l_U185, 1 );
    sub_16555( ref l_U678, 1, -109.15000000, -35.97000000, 9.79000000, l_U764, -109.41000000, -37.14000000, 9.08000000, 3.00000000, 0, 1 );
    sub_17231( ref l_U678, 30, "POI_BUSSECURITY" );
    l_U678._fU320 = 0;
    sub_339( "GA", "P_SET_STATIC_DATA end", 0 );
    return;
}

void sub_14511(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_15141(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_15629(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_16057(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

void sub_16115(int iParam0, float fParam1, float fParam2)
{
    if ((sub_16127( iParam0 )) == 0)
    {
        sub_16193( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        ;
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

int sub_16127(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_16193(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_16293(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_16127( iParam0 )) == 0)
    {
        sub_16193( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

void sub_16444(int iParam0, unknown uParam1)
{
    if ((sub_16127( iParam0 )) == 0)
    {
        sub_16193( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_LATCH( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

void sub_16555(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31)
{
    sub_16570( iParam0, uParam30 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU80 = 1;
    iParam0->_fU116 = {uParam5};
    iParam0->_fU200 = {uParam26};
    iParam0->_fU212 = uParam29;
    iParam0->_fU320 = uParam31;
    iParam0->_fU20 = {uParam2};
    sub_16936( iParam0 );
    return;
}

void sub_16570(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_16936(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_17015( iParam0 );
    return;
}

void sub_17015(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_8205( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_8205( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_8205( iParam0, 1 );
            }
            else
            {
                sub_8205( iParam0, 0 );
            };;;
        }
        else
        {
            sub_8205( iParam0, 0 );
        }
    }
    else
    {
        sub_8205( iParam0, 0 );
    }
    return;
}

void sub_17231(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_17262( iParam0 );
    return;
}

void sub_17262(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_17576()
{
    sub_339( "GA", "P_REQUEST_MPM_PERSISTENT_ASSETS start", 0 );
    sub_17645( ref l_U110, ref g_U1588 );
    sub_19053( ref l_U124, ref g_U1829 );
    sub_20045();
    sub_21716();
    sub_20123( "pa_doors", ref g_U1975 );
    sub_20123( "PA_ZIPLINE", ref g_U1975 );
    sub_20123( "LEVEL_S_PAN_CP_07", ref g_U1975 );
    sub_22550( "SCRIPT_MISSION\S_PANA_VISITORS_CENTER", ref g_U3026 );
    sub_339( "GA", "P_REQUEST_MPM_PERSISTENT_ASSETS end", 0 );
    return;
}

void sub_17645(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_17680( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_17680(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_17715( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_17846( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_17715(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_17846( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_17846( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_17846( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_18494( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_17846( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_17846( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_17846(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_17866( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_17866(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_18494(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_19053(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_19088( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_19088(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_19109( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_19241( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_19109(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_19241( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_19241( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_19241( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_18494( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_19241( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_19241( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_19241(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_17866( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_20045()
{
    sub_339( "CR", "P_GLOBAL_LOAD_PISTOL_ANIMS - Start", 0 );
    sub_20123( "NPC_PSTL_CORE", ref g_U1975 );
    sub_20123( "NPC_PSTL_COVER", ref g_U1975 );
    sub_20123( "NPC_PSTL_COVER_ENTER", ref g_U1975 );
    sub_20123( "NPC_PSTL_COVER_RELOAD", ref g_U1975 );
    sub_20123( "NPC_PSTL_DODGE", ref g_U1975 );
    sub_20123( "NPC_PSTL_FLAVOR", ref g_U1975 );
    sub_20123( "NPC_PSTL_FULLBODY", ref g_U1975 );
    sub_20123( "NPC_PSTL_RELOAD", ref g_U1975 );
    sub_20123( "NPC_PSTL_SEARCH", ref g_U1975 );
    sub_20123( "NPC_PSTL_STAIRS", ref g_U1975 );
    sub_20123( "NPC_PSTL_REACT", ref g_U1975 );
    sub_20123( "AMED_PSTL_PRONE", ref g_U1975 );
    sub_20123( "PLGE_PSTL_CROUCH", ref g_U1975 );
    sub_20123( "PLGE_PSTL_CORE", ref g_U1975 );
    sub_20123( "PLGE_PSTL_CORE_RELOAD", ref g_U1975 );
    sub_20123( "PLGE_PSTL_HANDSIG", ref g_U1975 );
    sub_20123( "PLGE_PSTL_ACTIONS", ref g_U1975 );
    sub_20123( "PLGE_PSTL_KNEE", ref g_U1975 );
    sub_20123( "PLGE_PSTL_COVER", ref g_U1975 );
    sub_20123( "PLGE_PSTL_REACT", ref g_U1975 );
    sub_20123( "PLGE_PSTL_COVER_EXIT", ref g_U1975 );
    sub_339( "CR", "P_GLOBAL_LOAD_PISTOL_ANIMS - End", 0 );
    return;
}

void sub_20123(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_20144( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_20281( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_20144(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_20281( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_20281( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_20281( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_18494( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_20281( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_20281( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_20281(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_17866( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_21716()
{
    sub_339( "CR", "P_GLOBAL_LOAD_RIFLE_ANIMS - Start", 0 );
    sub_20123( "NPC_RIFLE_CORE", ref g_U1975 );
    sub_20123( "NPC_RIFLE_COVER", ref g_U1975 );
    sub_20123( "NPC_RIFLE_COVER_ENTER", ref g_U1975 );
    sub_20123( "NPC_RIFLE_COVER_RELOAD", ref g_U1975 );
    sub_20123( "NPC_RIFLE_DODGE", ref g_U1975 );
    sub_20123( "NPC_RIFLE_FLAVOR", ref g_U1975 );
    sub_20123( "NPC_RIFLE_FULLBODY", ref g_U1975 );
    sub_20123( "NPC_RIFLE_RELOAD", ref g_U1975 );
    sub_20123( "NPC_RIFLE_SEARCH", ref g_U1975 );
    sub_20123( "NPC_RIFLE_STAIRS", ref g_U1975 );
    sub_20123( "NPC_RIFLE_REACT", ref g_U1975 );
    sub_20123( "AMED_RIFL_PRONE", ref g_U1975 );
    sub_20123( "PLGE_RIFLE_CROUCH", ref g_U1975 );
    sub_20123( "PLGE_RIFLE_CORE", ref g_U1975 );
    sub_20123( "PLGE_RIFLE_CORE_RELOAD", ref g_U1975 );
    sub_20123( "PLGE_RIFLE_HANDSIG", ref g_U1975 );
    sub_20123( "PLGE_RIFLE_ACTIONS", ref g_U1975 );
    sub_20123( "PLGE_RIFLE_KNEE", ref g_U1975 );
    sub_20123( "PLGE_RIFLE_COVER", ref g_U1975 );
    sub_20123( "PLGE_RIFLE_REACT", ref g_U1975 );
    sub_20123( "PLGE_RIFLE_COVER_EXIT", ref g_U1975 );
    sub_339( "CR", "P_GLOBAL_LOAD_RIFLE_ANIMS - End", 0 );
    return;
}

void sub_22550(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_22571( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
        sub_22709( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_22571(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                sub_22709( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                sub_22709( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    sub_22709( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                    sub_18494( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                sub_22709( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
            sub_22709( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_22709(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_17866( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_23594()
{
    sub_339( "GA", "P_REQUEST_MPM_NONPERSISTENT_ASSETS start", 0 );
    sub_23675( "S_PANA_MPM", ref g_U2986 );
    sub_23675( "S_PANA_MPM_BLENDOUT", ref g_U2986 );
    sub_24768( 1598038835, ref g_U1878 );
    sub_24768( -1367719514, ref g_U1878 );
    if ((l_U132) AND (g_U833 != 10))
    {
        sub_26746( "MID_07_PANAMA_concat", 0 );
    }
    AUDIO_MUSIC_REQUEST_ONESHOT( "FINALE_ONESHOT_03", 0 );
    sub_339( "GA", "P_REQUEST_MPM_NONPERSISTENT_ASSETS end", 0 );
    return;
}

void sub_23675(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_23696( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_23837( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_23696(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being requested!!!", 0 );
                sub_23837( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is already loading!!!", 0 );
                sub_23837( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (Result <= 2)
                {
                    if ((GET_SCRIPT_STREAM_STATE( uParam0, Result )) == 2)
                    {
                        sub_23837( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else
                    {
                        SCRIPT_ASSERT( "The SCRIPT_STREAM asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                        (uParam1^)[Result]._fU32 = 0;
                        sub_18494( ref (uParam1^)[Result]._fU36 );
                        return Result;
                    }
                }
                else
                {
                    sub_23837( Result, uParam1, uParam2 );
                    return -1;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being removed!!!", 0 );
                sub_23837( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (Result <= 2)
        {
            if ((GET_SCRIPT_STREAM_STATE( uParam0, iVar6 )) == 2)
            {
                StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
                (uParam1^)[iVar6]._fU32 = 3;
                sub_23837( iVar6, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar6;
            }
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The SCRIPT_STREAM - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_23837(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_17866( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The SCRIPT_STREAM asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_24768(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_24803( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_24955( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_24803(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_24955( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_24955( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_24955( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_24955( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_18494( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_18494( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_24955( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_24955( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_24955(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_17866( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_26746(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

int sub_27156(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_27276(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_27397(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_27524(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

int sub_27715(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_27842(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_28236(unknown uParam0)
{
    sub_339( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_9753( uParam0, sub_858() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

int sub_29146()
{
    switch (l_U291)
    {
        case 1:
        sub_339( "GA", "e_MPM_ExtEnemySpawnState = ENTITY_STATE_INIT", 0 );
        sub_29260( ref l_U365, 1.00000000, 0 );
        l_U292 = 0;
        l_U291 = 2;
        sub_339( "GA", "e_MPM_ExtEnemySpawnState = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U359[l_U292] = sub_29522( ref l_U293[l_U292] );
        sub_30361( l_U359[l_U292], ref l_U365 );
        sub_11951( l_U359[l_U292], 1308526797, 25000, 0, 0 );
        sub_30684( ref l_U359[l_U292], "AIT_EXPERT", 1.00000000, 250.00000000 );
        sub_30791( ref l_U371, l_U359[l_U292], 1 );
        if ((NOT (IS_PED_DEAD( sub_858() ))) AND (NOT (IS_PED_DEAD( l_U359[l_U292] ))))
        {
            SET_PED_AS_ONE_SHOT_KILL( l_U359[l_U292], 1 );
            SET_PED_PINNED_DOWN( l_U359[l_U292], 0, -1 );
            SET_BULLET_VELOCITY_MODIFIER( l_U359[l_U292], 75.00000000 );
            SET_PED_PERFECT_ACCURACY_OVERRIDE( l_U359[l_U292], 1 );
            SET_PED_IGNORE_LOS_CHECKS( l_U359[l_U292], 1 );
            SET_PED_ALERTNESS( l_U359[l_U292], 3 );
            REGISTER_TARGET( l_U359[l_U292], sub_858() );
            SET_LOCKED_TARGET( l_U359[l_U292], sub_858() );
            SET_PED_COMBAT_ATTRIBUTES( l_U359[l_U292], 1, 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U359[l_U292], 1 );
        }
        sub_31128( l_U359[l_U292] );
        l_U292++;
        if (l_U292 >= 5)
        {
            l_U291 = 3;
            sub_339( "GA", "e_MPM_ExtEnemySpawnState = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        sub_31353( ref l_U359, "pi_MPM_ExtEnemy" );
        l_U291 = 4;
        sub_339( "GA", "e_MPM_ExtEnemySpawnState = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    if (l_U291 == 4)
    {
        return 1;
        break;
    }
    return 0;
}

void sub_29260(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_29522(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_29692( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_30161( iParam0->_fU40 );
    sub_30241( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_29692(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_11622( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_30161(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_30241(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_30361(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_11622( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_29260( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_29260( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_30684(unknown uParam0, unknown uParam1, float fParam2, float fParam3)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    return;
}

void sub_30791(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_31128(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_31353(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

int sub_31555()
{
    if (NOT (DOES_PED_EXIST( l_U279 )))
    {
        l_U279 = sub_29522( ref l_U266 );
        if (NOT (IS_PED_DEAD( l_U279 )))
        {
            SET_PED_IS_HUMAN_SHIELD( l_U279, 1 );
            SET_PED_NAME_DEBUG( l_U279, "piDeadTetheredEnemy" );
            SET_PED_INVINCIBLE( l_U279, 1 );
            SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( l_U279, 0 );
            SET_PED_CAN_BE_TARGETTED( l_U279, 0 );
            SET_PED_AIM_LOCKONABLE( l_U279, 0 );
            SET_PED_RELATIONSHIP( l_U279, 1, 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U279, 1 );
        }
        sub_31128( l_U279 );
    }
    return 1;
}

void sub_31834()
{
    sub_339( "GA", "P_GLOBAL_CREATE_ZIPLINE_OBJECTS_FOR_MPM start", 0 );
    sub_9203( ref g_U4163 );
    g_U4163[0] = sub_31951( g_U1574, -109.00000000, 0.00000000, 15.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U4163[0] ))
    {
        FREEZE_OBJECT_POSITION( g_U4163[0], 1 );
    }
    g_U4163[1] = sub_31951( g_U1576, -109.50000000, 14.90000000, 16.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U4163[1] ))
    {
        FREEZE_OBJECT_POSITION( g_U4163[1], 1 );
    }
    g_U4163[2] = sub_31951( g_U1578, -109.71700000, 20.35620000, 17.49950000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U4163[2] ))
    {
        FREEZE_OBJECT_POSITION( g_U4163[2], 1 );
    }
    sub_339( "GA", "P_GLOBAL_CREATE_ZIPLINE_OBJECTS_FOR_MPM end", 0 );
    return;
}

void sub_31951(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_29692( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_32453()
{
    int I;

    sub_339( "CCB", "P_GLOBAL_CREATE_MUSEUM_GATE_OBJECTS", 0 );
    for ( I = 0; I <= (g_U4160 - 1); I++ )
    {
        if (NOT (DOES_OBJECT_EXIST( g_U4160[I] )))
        {
            sub_32559( ref g_U4160, I );
            sub_32847( ref g_U4160, I );
        }
        else
        {
            sub_339( "CCB", "The poiMuseumGateObject_ object was already created.", 0 );
        }
    }
    return;
}

void sub_32559(unknown uParam0, int iParam1)
{
    if (NOT (DOES_OBJECT_EXIST( g_U4160[iParam1] )))
    {
        sub_339( "CCB", "Creating oiMuseumGateObject_:", 0 );
        if (iParam1 == 0)
        {
            (uParam0^)[iParam1] = sub_31951( 1942109258, -104.74700000, -32.02020000, 10.14970000, 0.00000000, 0.00000000, 180.00000000, 0, 0, 0 );
        }
        else if (iParam1 == 1)
        {
            (uParam0^)[iParam1] = sub_31951( -1324244056, -109.36000000, -35.89300000, 9.85600000, 0.00000000, 0.00000000, 176.05900000, 0, 0, 0 );
        }
    }
    else
    {
        sub_339( "CCB", "The oiMuseumGateObject_ object was already created.", 0 );
    }
    return;
}

void sub_32847(unknown uParam0, unknown uParam1)
{
    if (DOES_OBJECT_EXIST( (uParam0^)[uParam1] ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( (uParam0^)[uParam1], ref g_U3424 );
        FREEZE_OBJECT_POSITION( (uParam0^)[uParam1], 1 );
    }
    else
    {
        sub_339( "CCB", "The oiTempObject_ object is NOT valid!!!", 0 );
    }
    return;
}

void sub_33068()
{
    sub_339( "GA", "P_MPM_CREATE_PLACEMENTS start", 0 );
    g_U3517[0] = sub_33166( -4072149, -119.10000000, -28.85000000, 9.93500000, 0.00000000, 0.00000000, 185.25000000, 0, 0, 1, 1119092736 );
    if (DOES_PLACEMENT_EXIST( g_U3517[0] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U3517[0], ref g_U3416 );
    }
    g_U3517[1] = sub_33166( -4072149, -119.00000000, -28.90000000, 9.93500000, 0.00000000, 0.00000000, 185.25000000, 0, 0, 1, 1119092736 );
    if (DOES_PLACEMENT_EXIST( g_U3517[1] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U3517[1], ref g_U3416 );
    }
    g_U3517[2] = sub_33166( -4072149, -108.40000000, -37.68000000, 9.71000000, 0.00000000, 0.00000000, 1.00000000, 0, 1, 1, 1119092736 );
    if (DOES_PLACEMENT_EXIST( g_U3517[2] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U3517[2], ref g_U3408 );
    }
    sub_33495();
    sub_339( "GA", "P_MPM_CREATE_PLACEMENTS end", 0 );
    return;
}

void sub_33166(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_33495()
{
    sub_339( "CO", "P_CREATE_S_PAN_GG_SS_03", 0 );
    sub_33596( ref g_U755, g_U829, 1352763079, -2029934837, -128.79000000, -24.16000000, 8.04000000, 0.00000000, 0.00000000, 1.00000000, "" );
    sub_33725( ref g_U755 );
    return;
}

void sub_33596(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_339( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_33725(int iParam0)
{
    sub_339( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_33786( iParam0->_fU12 )) == 1)
        {
            sub_339( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_339( "CO", "has never been collected.", 0 );
        }
        if ((sub_33786( iParam0->_fU12 )) == 0)
        {
            sub_9332( iParam0->_fU0 );
            iParam0->_fU0 = sub_33166( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_339( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_339( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_33786(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

int sub_34343()
{
    return 1;
}

void sub_34362()
{
    unknown uVar2;

    sub_339( "GA", "P_MPM_MID_07_CutsceneRegistration start", 0 );
    if (NOT (IS_PED_DEAD( sub_858() )))
    {
        sub_34444( 1 );
        if (NOT (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_858(), 1 ) )))
        {
            sub_339( "MF", "Giving DE to player's LEFT HOLSTER", 0 );
            uVar2 = sub_11306( sub_858(), 456708483, 1, 40, 0 );
        }
        else if (NOT (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_858(), 0 ) )))
        {
            sub_339( "MF", "Giving DE to player's RIGHT HOLSTER", 0 );
            uVar2 = sub_11306( sub_858(), 456708483, 0, 40, 0 );
        }
        else
        {
            sub_339( "MF", "Removing RIGHT HOLSTER weapon to make room for DE", 0 );
            REMOVE_PED_WEAPON( sub_858(), GET_WEAPON_FROM_HOLSTER( sub_858(), 0 ) );
            uVar2 = sub_11306( sub_858(), 456708483, 0, 40, 0 );
        }
    }
    if (NOT (IS_PED_DEAD( sub_858() )))
    {
        CUTSCENE_REGISTER_PED_TELEPORT( sub_858(), g_U980[10], g_U1086[10] );
        ISEQ_REGISTER_ENTITY( 1598038835, "s_pan_mpm_max", sub_858(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            sub_339( "CCB", "Registering weapon with cutscene...", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_PI_Des_Aa_H", 0 );
            CUTSCENE_REGISTER_PED_WEAPON_HAND( sub_858(), uVar2, 0 );
        }
        else
        {
            sub_339( "CCB", "The weapon in the player's right hand is NOT valid!!!", 0 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U279 )))
    {
        sub_35570( l_U279 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U279, "M_PA_RZIP_A", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U279, l_U266._fU0, l_U266._fU12 );
        ISEQ_REGISTER_ENTITY( 1598038835, "s_pan_mpm_gmed", l_U279, 0 );
    }
    CUTSCENE_REGISTER_ISEQ( 1598038835 );
    if (DOES_OBJECT_EXIST( g_U4163[0] ))
    {
        sub_339( "CCB", "Hiding the oiZipLineObject_0 object.", 0 );
        SET_OBJECT_VISIBLE( g_U4163[0], 0 );
        CUTSCENE_REGISTER_OBJECT_ANIM( g_U4163[0], "P_AN_ZIPWIRE", "PA_ZIPLINE", 1000.00000000, 0, 1 );
    }
    else
    {
        sub_339( "CCB", "The oiZipLineObject_0 object is NOT valid!!!", 0 );
    }
    if (DOES_OBJECT_EXIST( g_U4163[1] ))
    {
        sub_339( "CCB", "Hiding the oiZipLineObject_1 object.", 0 );
        SET_OBJECT_VISIBLE( g_U4163[1], 0 );
        CUTSCENE_REGISTER_OBJECT_ANIM( g_U4163[1], "P_AN_ZIPHOI_AA_H", "PA_ZIPLINE", 1000.00000000, 0, 1 );
    }
    else
    {
        sub_339( "CCB", "The oiZipLineObject_1 object is NOT valid!!!", 0 );
    }
    if (DOES_OBJECT_EXIST( g_U4163[2] ))
    {
        sub_339( "CCB", "Hiding the oiZipLineObject_2 object.", 0 );
        SET_OBJECT_VISIBLE( g_U4163[2], 0 );
        CUTSCENE_REGISTER_OBJECT_ANIM( g_U4163[2], "P_AN_ZIPLOW_AA_H", "PA_ZIPLINE", 1000.00000000, 0, 1 );
    }
    else
    {
        sub_339( "CCB", "The oiZipLineObject_2 object is NOT valid!!!", 0 );
    }
    CUTSCENE_ENABLE_SKIP( 0 );
    sub_339( "CR", "MUSIC 7.1: Playing PANAMA_FINAL Mood: PANAMA_FINAL_5_6", 0 );
    AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_5_6", "PANAMA_FINAL_5_6", 0.00000000, 3000, -1, -1082130432, 0 );
    sub_339( "GA", "P_MPM_MID_07_CutsceneRegistration end", 0 );
    return;
}

void sub_34444(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_858() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND( sub_858(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if (((sub_34524( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 = sub_34733();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_858(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

int sub_34524(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_34733()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_858() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_858(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_34524( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_858(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_858(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_858(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

void sub_35570(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_36593()
{
    if (l_U131)
    {
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        if (NOT (IS_PED_DEAD( sub_858() )))
        {
            SET_PED_FORCED_TO_WALK( sub_858(), 0 );
            SET_PED_FORCED_TO_RUN( sub_858(), 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_880(), 1 );
        }
        sub_9054( g_U3515 );
        sub_9054( g_U3516 );
        sub_9054( g_U3514 );
    }
    if (NOT l_U182)
    {
        if (GET_CUTSCENE_TIME_MS() >= 6600)
        {
            sub_339( "CR", "Playing audio music one shot PANAMA_OS_3", 0 );
            AUDIO_MUSIC_PLAY_ONESHOT();
            l_U182 = 1;
        }
    }
    if ((GET_CUTSCENE_TIME_MS() > l_U184) AND (NOT l_U183))
    {
        sub_339( "MF", "Removing player's guns during MID_07", 0 );
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_858(), 2 ) ))
        {
            REMOVE_PED_WEAPON( sub_858(), GET_WEAPON_FROM_HOLSTER( sub_858(), 2 ) );
        }
        if (NOT (IS_PED_DEAD( sub_858() )))
        {
            if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_858(), 0, 0 ) ))
            {
                REMOVE_PED_WEAPON( sub_858(), GET_WEAPON_FROM_HAND( sub_858(), 0, 0 ) );
            }
        }
        l_U183 = 1;
    }
    return;
}

int sub_37012()
{
    return 1;
}

void sub_37031()
{
    sub_339( "GA", "P_MPM_MID_07_PrepareBlendout start", 0 );
    if (NOT (IS_PED_DEAD( sub_858() )))
    {
        sub_37107();
        if ((GET_WEAPON_TYPE( GET_WEAPON_FROM_HAND( sub_858(), 0, 0 ) )) == 456708483)
        {
            sub_339( "GA", "Player was not holding a Desert Eagle.", 0 );
            REMOVE_PED_WEAPON( sub_858(), GET_WEAPON_FROM_HAND( sub_858(), 0, 0 ) );
            sub_11951( sub_858(), 456708483, 40, 0, 0 );
        }
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_858(), 1, 0 ) ))
        {
            sub_339( "GA", "Player had a weapon in his left hand.", 0 );
            SELECT_WEAPON_TO_HAND( sub_858(), 0, 1, 1 );
        }
        if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_858(), 0 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_858(), 1 ) )))
        {
            sub_339( "GA", "Player has a gun in each pistol holster.", 0 );
            REMOVE_PED_WEAPON( sub_858(), GET_WEAPON_FROM_HOLSTER( sub_858(), 0 ) );
        }
    }
    sub_37925( 0, 1 );
    if (DOES_OBJECT_EXIST( g_U4163[0] ))
    {
        sub_339( "CCB", "Unhiding the oiZipLineObject_0 object.", 0 );
        SET_OBJECT_VISIBLE( g_U4163[0], 1 );
    }
    else
    {
        sub_339( "CCB", "The oiZipLineObject_0 object is NOT valid!!!", 0 );
    }
    if (DOES_OBJECT_EXIST( g_U4163[1] ))
    {
        sub_339( "CCB", "Unhiding the oiZipLineObject_1 object.", 0 );
        SET_OBJECT_VISIBLE( g_U4163[1], 1 );
    }
    else
    {
        sub_339( "CCB", "The oiZipLineObject_1 object is NOT valid!!!", 0 );
    }
    if (DOES_OBJECT_EXIST( g_U4163[2] ))
    {
        sub_339( "CCB", "Unhiding the oiZipLineObject_2 object.", 0 );
        SET_OBJECT_VISIBLE( g_U4163[2], 1 );
    }
    else
    {
        sub_339( "CCB", "The oiZipLineObject_2 object is NOT valid!!!", 0 );
    }
    sub_38857( "S_PANA_MPM", ref g_U2986 );
    if (NOT (ISEQ_QUERY_STATE( 1598038835, 3 )))
    {
        sub_39123( sub_858(), g_U980[10], g_U1086[10] );
        ISEQ_REGISTER_ENTITY( 1598038835, "s_pan_mpm_max", sub_858(), 0 );
        sub_35570( l_U279 );
        sub_39123( l_U279, l_U266._fU0, l_U266._fU12 );
        ISEQ_REGISTER_ENTITY( 1598038835, "s_pan_mpm_gmed", l_U279, 0 );
        ISEQ_START( 1598038835 );
    }
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1158[10], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1122[10], 1065353216, 0 );
    if (NOT l_U132)
    {
        sub_39351();
    }
    sub_39880();
    sub_339( "GA", "P_MPM_MID_07_PrepareBlendout end", 0 );
    return;
}

void sub_37107()
{
    unknown uVar2;

    if ((IS_PED_DEAD( sub_858() )) == 0)
    {
        uVar2 = sub_37136();
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            REMOVE_PED_WEAPON( sub_858(), uVar2 );
        }
    }
    return;
}

int sub_37136()
{
    unknown Result;
    unknown uVar3;

    if ((IS_PED_DEAD( sub_858() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_858(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_37199( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_858(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
    }
    return 0;
}

int sub_37199(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_37925(int iParam0, int iParam1)
{
    sub_339( "MF", "P_GLOBAL_CREATE_LOCKS start", "###" );
    sub_9236( g_U4167 );
    g_U4167 = sub_31951( g_U1583, g_U4168, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U4167 ))
    {
        FREEZE_OBJECT_POSITION( g_U4167, 1 );
        if (iParam0 == 1)
        {
            PLAY_OBJECT_ANIM( g_U4167, "P_LockGate", "pa_doors", 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U4167, "P_LockGate", "pa_doors", 1.00000000 );
        }
    }
    sub_9236( g_U4171 );
    g_U4171 = sub_31951( g_U1583, g_U4172, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( g_U4171 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U4171, 1 );
        if (iParam1 == 1)
        {
            PLAY_OBJECT_ANIM( g_U4171, "P_LockGate", "pa_doors", 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U4171, "P_LockGate", "pa_doors", 1.00000000 );
        }
    }
    sub_339( "MF", "P_GLOBAL_CREATE_LOCKS end", "###" );
    return;
}

void sub_38857(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if (sub_7205( uParam0, uParam1 ))
    {
        iVar4 = sub_7304( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            PLAY_SCRIPT_STREAM_FRONTEND( iVar4 );
        }
        else
        {
            SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

void sub_39123(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_39351()
{
    sub_339( "CCB", "P_MPM_ANIMATE_ZIPLINE_OBJECTS start", 0 );
    if (DOES_OBJECT_EXIST( g_U4163[0] ))
    {
        PLAY_OBJECT_ANIM( g_U4163[0], "P_AN_ZIPWIRE", "PA_ZIPLINE", 1000.00000000, 0, 1 );
    }
    else
    {
        sub_339( "CCB", "The oiZipLineObject_0 object is NOT valid!!!", 0 );
    }
    if (DOES_OBJECT_EXIST( g_U4163[1] ))
    {
        PLAY_OBJECT_ANIM( g_U4163[1], "P_AN_ZIPHOI_AA_H", "PA_ZIPLINE", 1000.00000000, 0, 1 );
    }
    else
    {
        sub_339( "CCB", "The oiZipLineObject_1 object is NOT valid!!!", 0 );
    }
    if (DOES_OBJECT_EXIST( g_U4163[2] ))
    {
        PLAY_OBJECT_ANIM( g_U4163[2], "P_AN_ZIPLOW_AA_H", "PA_ZIPLINE", 1000.00000000, 0, 1 );
    }
    else
    {
        sub_339( "CCB", "The oiZipLineObject_2 object is NOT valid!!!", 0 );
    }
    sub_339( "CCB", "P_MPM_ANIMATE_ZIPLINE_OBJECTS end", 0 );
    return;
}

void sub_39880()
{
    unknown uVar2;
    int I;

    sub_339( "GA", "P_MPM_ACTIVATE_EXT_ENEMIES start", 0 );
    sub_39940( ref l_U359 );
    for ( I = 0; I <= (l_U359 - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( l_U359[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U359[I], 1 );
            if (I == 0)
            {
                OPEN_SEQUENCE_TASK( ref uVar2 );
                if (NOT (IS_PED_DEAD( l_U279 )))
                {
                    TASK_SHOOT_AT_PED( 0, l_U279, -1, -256437761, 0, 0, 0 );
                }
                CLOSE_SEQUENCE_TASK( uVar2 );
                TASK_PERFORM_SEQUENCE( l_U359[I], uVar2 );
                CLEAR_SEQUENCE_TASK( uVar2 );
            }
            else if (I == 1)
            {
                OPEN_SEQUENCE_TASK( ref uVar2 );
                if (NOT (IS_PED_DEAD( l_U279 )))
                {
                    TASK_FOLLOW_NAV_MESH_TO_COORD( 0, -112.85000000, -14.28000000, 8.87000000, 3, 20000, 1048576000, 0, 0 );
                    TASK_SHOOT_AT_PED( 0, l_U279, -1, -256437761, 0, 0, 0 );
                }
                CLOSE_SEQUENCE_TASK( uVar2 );
                TASK_PERFORM_SEQUENCE( l_U359[I], uVar2 );
                CLEAR_SEQUENCE_TASK( uVar2 );
            }
            else if (I == 2)
            {
                OPEN_SEQUENCE_TASK( ref uVar2 );
                if (NOT (IS_PED_DEAD( l_U279 )))
                {
                    TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, -114.28000000, -11.94000000, 9.24000000, l_U279, 3, 1, 1056964608, 0, 1, 0 );
                    TASK_SHOOT_AT_PED( 0, l_U279, -1, -256437761, 0, 0, 0 );
                }
                CLOSE_SEQUENCE_TASK( uVar2 );
                TASK_PERFORM_SEQUENCE( l_U359[I], uVar2 );
                CLEAR_SEQUENCE_TASK( uVar2 );
            }
            else if (I == 3)
            {
                OPEN_SEQUENCE_TASK( ref uVar2 );
                if (NOT (IS_PED_DEAD( l_U279 )))
                {
                    TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, -111.48000000, -12.78000000, 8.85000000, l_U279, 3, 1, 1056964608, 0, 1, 0 );
                    TASK_SHOOT_AT_PED( 0, l_U279, -1, -256437761, 0, 0, 0 );
                }
                CLOSE_SEQUENCE_TASK( uVar2 );
                TASK_PERFORM_SEQUENCE( l_U359[I], uVar2 );
                CLEAR_SEQUENCE_TASK( uVar2 );
            }
            else if (I == 4)
            {
                OPEN_SEQUENCE_TASK( ref uVar2 );
                if (NOT (IS_PED_DEAD( l_U279 )))
                {
                    TASK_SHOOT_AT_PED( 0, l_U279, -1, -256437761, 0, 0, 0 );
                }
                CLOSE_SEQUENCE_TASK( uVar2 );
                TASK_PERFORM_SEQUENCE( l_U359[I], uVar2 );
                CLEAR_SEQUENCE_TASK( uVar2 );
            };;;;;
        }
        if (NOT (IS_PED_DEAD( sub_858() )))
        {
            REGISTER_TARGET( l_U359[I], sub_858() );
        }
    }
    sub_339( "GA", "P_MPM_ACTIVATE_EXT_ENEMIES end", 0 );
    return;
}

void sub_39940(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_35570( (uParam0^)[I] );
    }
    return;
}

int sub_40809()
{
    return 1;
}

void sub_40832(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_339( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return sub_40957( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 40917, 40935, uParam8 );
}

void sub_40917()
{
    return;
}

int sub_40935()
{
    return 1;
}

void sub_40957(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_41258(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_339( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_339( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_339( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_339( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_339( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_339( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_26746( iParam0->_fU0, 0 );
            sub_339( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_1390( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_1390( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_339( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_42499( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_1390( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_1872( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_1872( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_42499(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_858() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_858(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_858(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_858(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_858(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_858(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_42945()
{
    sub_339( "CCB", "P_ENABLE_MPM", 0 );
    if (NOT (IS_PED_DEAD( sub_858() )))
    {
        SET_PED_INVINCIBLE( sub_858(), 1 );
        SET_PED_CONSUMING_AMMO( sub_858(), 0 );
        SET_PED_ALLOWED_TO_DUCK( sub_858(), 0 );
        SET_CAM_VIEW_MODE( 0 );
        g_U3684 = 0;
    }
    DISPLAY_HUD( 0 );
    ENABLE_CROSSHAIR( 1 );
    SET_CROSSHAIR_PULSE();
    if (GET_ADRENALINE_AMT() < 0.10000000)
    {
        SET_ADRENALINE_AMT( 0.10000000 );
    }
    ENABLE_MPM( 1 );
    SET_PED_IS_HUMAN_SHIELD( sub_858(), 1 );
    ENABLE_ALL_ADRENALINE( 0 );
    sub_339( "CCB", "Starting the MPM...", 0 );
    ACTIVATE_BULLET_TIME( 0, 0.50000000, 1 );
    SET_CAMERA_OVERRIDE( "PANAMA_AIM_CAMERA", "PANAMA_AIM_CAMERA", 0, 1, 1 );
    SET_SILHOUETTE_ACTIVE( 0 );
    return;
}

void sub_43325(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_339( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_339( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_12605( iParam1 );
        sub_43584( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_44035( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_44035( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_44267( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_44035( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_44267( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_44267( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_44035( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_44267( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_44267( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_44267( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_44035( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_44267( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_44267( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_44267( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_44267( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_45825( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_339( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_43584(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_9969( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_339( "TEH", "Ending context", 0 );
        sub_339( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_44035(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_44267(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_45825(int iParam0)
{
    sub_11622( "CHECKPOINT DATA" );
    sub_45864( iParam0->_fU4 );
    sub_45887( iParam0->_fU16 );
    sub_45887( iParam0->_fU20 );
    sub_45887( iParam0->_fU24 );
    sub_45930( iParam0->_fU28 );
    sub_45930( iParam0->_fU56 );
    sub_45930( iParam0->_fU60 );
    sub_45930( iParam0->_fU64 );
    sub_45930( iParam0->_fU68 );
    sub_45930( iParam0->_fU72 );
    sub_45930( iParam0->_fU76 );
    sub_45930( iParam0->_fU80 );
    sub_45930( iParam0->_fU84 );
    sub_45930( iParam0->_fU88 );
    sub_45930( iParam0->_fU92 );
    sub_45887( iParam0->_fU32 );
    sub_45930( iParam0->_fU36 );
    sub_45930( iParam0->_fU40 );
    sub_45930( iParam0->_fU44 );
    sub_45887( iParam0->_fU136 );
    sub_46135( iParam0->_fU140 );
    sub_45930( iParam0->_fU52 );
    sub_11622( "---nRightHolsterAttachmentEnabled: " );
    sub_45930( iParam0->_fU96 );
    sub_11622( "---nRightHolsterAttachmentToggled: " );
    sub_45930( iParam0->_fU100 );
    sub_11622( "---nLeftHolsterAttachmentEnabled: " );
    sub_45930( iParam0->_fU104 );
    sub_11622( "---nLeftHolsterAttachmentToggled: " );
    sub_45930( iParam0->_fU108 );
    sub_11622( "---nRifleHolsterAttachmentEnabled: " );
    sub_45930( iParam0->_fU112 );
    sub_11622( "---nRifleHolsterAttachmentToggled: " );
    sub_45930( iParam0->_fU116 );
    sub_11622( "---nRightHandAttachmentEnabled: " );
    sub_45930( iParam0->_fU120 );
    sub_11622( "---nRightHandAttachmentToggled: " );
    sub_45930( iParam0->_fU124 );
    sub_11622( "---nLeftHandAttachmentEnabled: " );
    sub_45930( iParam0->_fU128 );
    sub_11622( "---nLeftHandAttachmentToggled: " );
    sub_45930( iParam0->_fU132 );
    sub_45930( l_U1 );
    sub_45930( 144 );
    return;
}

void sub_45864(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_45887(unknown uParam0)
{
    return;
}

void sub_45930(unknown uParam0)
{
    return;
}

void sub_46135(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_46939()
{
    sub_339( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_339( "CCB", "Starting the Panama_MPM context...", 0 );
    START_CONTEXT( "Panama_MPM" );
    return;
}

void sub_47131()
{
    sub_339( "GA", "P_MPM_DIALOGUE_SPAN_VIG17 start", 0 );
    sub_47190( ref l_U281 );
    if (NOT (IS_PED_DEAD( sub_858() )))
    {
        sub_47290( 0, sub_858(), "MAX", ref l_U281, 2, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U279 )))
    {
        sub_47290( 1, l_U279, "M11_REBL_51_MUS", ref l_U281, 2, 0 );
    }
    sub_47560( "SPAN_VIG17", ref l_U281, 8, 1 );
    sub_339( "GA", "P_MPM_DIALOGUE_SPAN_VIG17 end", 0 );
    return;
}

void sub_47190(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_47290(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_47560(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_47584( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_47584(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_47639( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_47639(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_47674( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_48168( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_47674(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_48168(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_48543(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            if (NOT (sub_48602( (uParam0^)[I], l_U134 )))
            {
                sub_339( "CCB", "Cleaning piTempPed ped!!!", 0 );
                sub_9054( (uParam0^)[I] );
            }
        }
    }
    return;
}

int sub_48602(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_48744(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_48961(unknown uParam0, unknown uParam1)
{
    unknown Result;

    Result = sub_48973( uParam0 );
    if (NOT (IS_PED_DEAD( Result )))
    {
        SET_BULLET_CAM_PREF( Result, uParam1, uParam1, uParam1, 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        return Result;
    }
    return nil;
}

void sub_48973(unknown uParam0)
{
    int I;

    if ((sub_48744( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_49381(unknown uParam0)
{
    int iVar3;

    if (NOT (IS_PED_DEAD( sub_858() )))
    {
        iVar3 = (ROUND( ((GET_PED_MAX_HEALTH( sub_858() )) - 100) * uParam0 )) + 100;
        SET_PED_HEALTH( sub_858(), iVar3, 0 );
    }
    return;
}

void sub_49555()
{
    sub_339( "GA", "P_MPM_FREEZE_ZIPLINE_MPM_ANIMATIONS start", 0 );
    if (NOT (IS_PED_DEAD( sub_858() )))
    {
        PED_SET_ACTION_INTENTION( sub_858(), 48, 1000, 0.00000000, 0.00000000, 0.00000000 );
        sub_39123( sub_858(), -108.84430000, -13.78010000, 8.84704500, 90 );
    }
    if (NOT (IS_PED_DEAD( l_U279 )))
    {
        PED_SET_ACTION_INTENTION( l_U279, 48, 1000, 0.00000000, 0.00000000, 0.00000000 );
        sub_39123( l_U279, -108.01500000, -20.96740000, 9.78170000, 180 );
    }
    if (DOES_OBJECT_EXIST( g_U4163[0] ))
    {
        SET_OBJECT_ANIM_SPEED( g_U4163[0], "P_AN_ZIPWIRE", "PA_ZIPLINE", 0 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U4163[0], "P_AN_ZIPWIRE", "PA_ZIPLINE", 0.13500000 );
    }
    else
    {
        sub_339( "CCB", "The oiZipLineObject_0 object is NOT valid!!!", 0 );
    }
    if (DOES_OBJECT_EXIST( g_U4163[1] ))
    {
        SET_OBJECT_ANIM_SPEED( g_U4163[1], "P_AN_ZIPHOI_AA_H", "PA_ZIPLINE", 0 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U4163[1], "P_AN_ZIPHOI_AA_H", "PA_ZIPLINE", 0.13500000 );
    }
    else
    {
        sub_339( "CCB", "The oiZipLineObject_1 object is NOT valid!!!", 0 );
    }
    if (DOES_OBJECT_EXIST( g_U4163[2] ))
    {
        SET_OBJECT_ANIM_SPEED( g_U4163[2], "P_AN_ZIPLOW_AA_H", "PA_ZIPLINE", 0 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U4163[2], "P_AN_ZIPLOW_AA_H", "PA_ZIPLINE", 0.13500000 );
    }
    else
    {
        sub_339( "CCB", "The oiZipLineObject_2 object is NOT valid!!!", 0 );
    }
    sub_339( "GA", "P_MPM_FREEZE_ZIPLINE_MPM_ANIMATIONS end", 0 );
    return;
}

void sub_50427()
{
    sub_339( "GA", "P_MPM_RESUME_ZIPLINE_MPM_ANIMATIONS start", 0 );
    if (NOT (IS_PED_DEAD( sub_858() )))
    {
        PED_SET_ACTION_INTENTION( sub_858(), 49, 1000, 0.00000000, 0.00000000, 0.00000000 );
    }
    if (NOT (IS_PED_DEAD( l_U279 )))
    {
        PED_SET_ACTION_INTENTION( l_U279, 49, 1000, 0.00000000, 0.00000000, 0.00000000 );
    }
    if (DOES_OBJECT_EXIST( g_U4163[0] ))
    {
        SET_OBJECT_ANIM_SPEED( g_U4163[0], "P_AN_ZIPWIRE", "PA_ZIPLINE", 1 );
    }
    else
    {
        sub_339( "CCB", "The oiZipLineObject_0 object is NOT valid!!!", 0 );
    }
    if (DOES_OBJECT_EXIST( g_U4163[1] ))
    {
        SET_OBJECT_ANIM_SPEED( g_U4163[1], "P_AN_ZIPHOI_AA_H", "PA_ZIPLINE", 1 );
    }
    else
    {
        sub_339( "CCB", "The oiZipLineObject_1 object is NOT valid!!!", 0 );
    }
    if (DOES_OBJECT_EXIST( g_U4163[2] ))
    {
        SET_OBJECT_ANIM_SPEED( g_U4163[2], "P_AN_ZIPLOW_AA_H", "PA_ZIPLINE", 1 );
    }
    else
    {
        sub_339( "CCB", "The oiZipLineObject_2 object is NOT valid!!!", 0 );
    }
    sub_339( "GA", "P_MPM_RESUME_ZIPLINE_MPM_ANIMATIONS end", 0 );
    return;
}

void sub_51081(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = -1;
    if (sub_7205( uParam1, uParam2 ))
    {
        iVar5 = sub_7304( uParam1, uParam2 );
        if (NOT (iVar5 == -1))
        {
            if (NOT (IS_PED_DEAD( uParam0 )))
            {
                PLAY_SCRIPT_STREAM_FROM_PED( uParam0, iVar5 );
            }
        }
        else
        {
            SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

void sub_51580(unknown uParam0)
{
    int I;

    sub_339( "GA", "P_DISABLE_BULLETCAM_AND_REASSIGN_PEDS start", 0 );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            SET_BULLET_CAM_PREF( (uParam0^)[I], "", "", "", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
            SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 0 );
            SET_PED_AS_ONE_SHOT_KILL( (uParam0^)[I], 0 );
            sub_51752( (uParam0^)[I] );
            SET_PED_COMBAT_RANGE_MAX( (uParam0^)[I], 40.00000000 );
            SET_PED_IGNORE_LOS_CHECKS( (uParam0^)[I], 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^)[I], 0 );
            SET_PED_PATH_CAN_USE_CLIMBOVERS( (uParam0^)[I], 0 );
            SET_PED_PATH_CAN_DROP_FROM_HEIGHT( (uParam0^)[I], 0 );
        }
    }
    sub_339( "GA", "P_DISABLE_BULLETCAM_AND_REASSIGN_PEDS end", 0 );
    return;
}

void sub_51752(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        RESET_PED_TETHERING( uParam0 );
    }
    return;
}

void sub_52325()
{
    sub_339( "CCB", "P_DISABLE_MPM", 0 );
    DEACTIVATE_BULLET_TIME( 0, 0 );
    sub_52381( ref l_U359, 1065353216 );
    sub_52530( ref l_U359, 0 );
    DISPLAY_HUD( 0 );
    ENABLE_CROSSHAIR( 0 );
    if (NOT (IS_PED_DEAD( sub_858() )))
    {
        SET_PED_INVINCIBLE( sub_858(), 0 );
        SET_PED_CONSUMING_AMMO( sub_858(), 1 );
        SET_PED_ALLOWED_TO_DUCK( sub_858(), 1 );
    }
    ENABLE_MPM( 0 );
    SET_PED_IS_HUMAN_SHIELD( sub_858(), 0 );
    ENABLE_ALL_ADRENALINE( 1 );
    SET_CAMERA_OVERRIDE( "", "", 0, 1, 1 );
    SET_SILHOUETTE_ACTIVE( 1 );
    return;
}

void sub_52381(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            sub_339( "CCB", "Setting bullet velocity modifier for piTempPed_:", 0 );
            SET_BULLET_VELOCITY_MODIFIER( (uParam0^)[I], uParam1 );
        }
    }
    return;
}

void sub_52530(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            sub_339( "CCB", "Setting perfect accuracy override for piTempPed_:", 0 );
            SET_PED_PERFECT_ACCURACY_OVERRIDE( (uParam0^)[I], uParam1 );
        }
    }
    return;
}

void sub_52945()
{
    unknown uVar2;
    int I;

    sub_339( "CR", "P_DELAY_MPM_OPPONENTS_AFTER_BLENDOUT - Start", 0 );
    if (NOT (IS_PED_DEAD( sub_858() )))
    {
        for ( I = 0; I <= 4; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U359[I] )))
            {
                OPEN_SEQUENCE_TASK( ref uVar2 );
                if (NOT (IS_PED_DEAD( l_U279 )))
                {
                    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
                    TASK_AIM_GUN_AT_PED( 0, sub_858(), 1750, 1 );
                    TASK_PAUSE( 0, 1750 );
                    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
                }
                CLOSE_SEQUENCE_TASK( uVar2 );
                CLEAR_PED_TASKS( l_U359[I] );
                TASK_PERFORM_SEQUENCE( l_U359[I], uVar2 );
                CLEAR_SEQUENCE_TASK( uVar2 );
            }
        }
    }
    sub_339( "CR", "P_DELAY_MPM_OPPONENTS_AFTER_BLENDOUT - End", 0 );
    return;
}

void sub_53290()
{
    switch (l_U559)
    {
        case 1:
        sub_339( "GA", "e_MPM_IntEnemySpawnState = ENTITY_STATE_INIT", 0 );
        l_U560 = 0;
        l_U559 = 2;
        sub_339( "GA", "e_MPM_IntEnemySpawnState = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U614[l_U560] = sub_29522( ref l_U561[l_U560] );
        sub_30361( l_U614[l_U560], ref l_U365 );
        sub_30684( ref l_U614[l_U560], "AIT_EXPERT", 1.00000000, 40.00000000 );
        if ((NOT (IS_PED_DEAD( sub_858() ))) AND (NOT (IS_PED_DEAD( l_U614[l_U560] ))))
        {
            SET_PED_ALERTNESS( l_U614[l_U560], 3 );
            REGISTER_TARGET( l_U614[l_U560], sub_858() );
            SET_LOCKED_TARGET( l_U614[l_U560], sub_858() );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U614[l_U560], 1 );
        }
        sub_31128( l_U614[l_U560] );
        l_U560++;
        if (l_U560 >= 4)
        {
            l_U559 = 3;
            sub_339( "GA", "e_MPM_IntEnemySpawnState = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        sub_31353( ref l_U614, "pi_MPM_IntEnemy" );
        sub_11951( l_U614[0], -184942895, 25000, 0, 0 );
        sub_11951( l_U614[1], -612753081, 25000, 0, 0 );
        sub_11951( l_U614[2], -184942895, 25000, 0, 0 );
        sub_11951( l_U614[3], 1308526797, 25000, 0, 0 );
        if (NOT (IS_PED_DEAD( l_U614[0] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U614[0], "Room_Lobby" );
            SET_PED_COMBAT_ATTRIBUTES( l_U614[0], 1, 0 );
        }
        if (NOT (IS_PED_DEAD( l_U614[1] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U614[1], "Room_Lobby" );
        }
        if (NOT (IS_PED_DEAD( l_U614[2] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U614[2], ref g_U3440 );
            sub_30791( ref l_U620, l_U614[2], 1 );
        }
        if (NOT (IS_PED_DEAD( l_U614[3] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U614[3], ref g_U3416 );
            sub_30791( ref l_U621, l_U614[3], 1 );
        }
        l_U559 = 4;
        sub_339( "GA", "e_MPM_IntEnemySpawnState = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    return;
}

void sub_54522(int iParam0, unknown uParam1)
{
    iParam0->_fU4 = uParam1;
    if (DOES_GROUP_EXIST( iParam0->_fU0 ))
    {
        SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
        SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    }
    else
    {
        sub_11622( "[GA] Warning - AI Group does not exist when calling P_GROUP_CHANGE_FIRING_DISTRIBUTION" );
    }
    return;
}

void sub_54697()
{
    sub_339( "CR", "P_GBL_REFRESH_PAYNE_KILLER_COUNT - START", 0 );
    g_U4062 = GET_PAYNEKILLER_AMT();
    sub_339( "CR", "P_GBL_REFRESH_PAYNE_KILLER_COUNT - END", 0 );
    return;
}

void sub_54833()
{
    sub_339( "GA", "P_MPM_START_PASSOS start", 0 );
    l_U385 = sub_29522( ref l_U372 );
    if (NOT (IS_PED_DEAD( l_U385 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U385, 1 );
        SET_PED_NAME_DEBUG( l_U385, "pi_MPM_Passos" );
        SET_PED_GORE_FROM_PLAYER( l_U385, 1 );
        SET_PED_GORE_FROM_NPC( l_U385, 0 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U385, 1 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U385, 1 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( l_U385, 0 );
        SET_PED_CAN_PUSH_PLAYER( l_U385, 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U385, 1 );
        SET_BULLET_CAM_PREF( l_U385, "QUICKCUT_FAILSAFE_01", "QUICKCUT_FAILSAFE_01", "QUICKCUT_FAILSAFE_01", "QUICKCUT_FAILSAFE_01", 1, 0, 0, 0, 0, 0, 0, 0 );
        SET_PED_AS_ONE_SHOT_KILL( l_U385, 1 );
        SET_PED_RELATIONSHIP( l_U385, 2, 3 );
        SET_AI_SHOULD_ALWAYS_MISS_PED( l_U385, 1 );
        SET_PED_CAN_BE_TARGETTED( l_U385, 0 );
        sub_11951( l_U385, -612753081, 25000, 0, 0 );
        SET_PED_CONSUMING_AMMO( l_U385, 0 );
        SET_PED_ACCURACY( l_U385, -1467320974 );
        ISEQ_REGISTER_ENTITY( -1367719514, "Passos", l_U385, 0 );
        ISEQ_START( -1367719514 );
    }
    sub_339( "GA", "P_MPM_START_PASSOS end", 0 );
    return;
}

void sub_55363()
{
    if (NOT (sub_5910( ref g_U4052 )))
    {
        sub_55397( ref g_U4052, g_U4061 );
    }
    if (((g_U4052._fU16) || (sub_4110( ref g_U4052 ))) AND (sub_55433()))
    {
        sub_339( "MF", "Playing Speech: SPAN_MXFNDS1", 0 );
        sub_55638( ref g_U4067, ref g_U1246 );
        sub_3556( ref g_U4052 );
    }
    return;
}

void sub_55397(unknown uParam0, unknown uParam1)
{
    sub_1180( uParam0, uParam1, 1, 0 );
    sub_1608( uParam0 );
    return;
}

int sub_55433()
{
    if (GET_PAYNEKILLER_AMT() > g_U4062)
    {
        sub_339( "CR", "Player picked up Payne Killers!", 0 );
        sub_45930( g_U4062 );
        sub_45930( GET_PAYNEKILLER_AMT() );
        g_U4062 = GET_PAYNEKILLER_AMT();
        return 1;
    }
    g_U4062 = GET_PAYNEKILLER_AMT();
    return 0;
}

void sub_55638(unknown uParam0, unknown uParam1)
{
    sub_47190( uParam1 );
    sub_47290( 0, sub_858(), "MAX", uParam1, 2, 0 );
    sub_47290( 1, sub_858(), "MAX", uParam1, 2, 0 );
    sub_47560( uParam0, uParam1, 8, 1 );
    return;
}

void sub_55794()
{
    sub_339( "GA", "P_MPM_SETUP_ZIPLINE_ENEMY_FOR_END_OF_VIG start", 0 );
    if (NOT (IS_PED_DEAD( l_U279 )))
    {
        SET_PED_TO_RAGDOLL( l_U279, 0, 0, 0, 0, 0, 1, -1.00000000 );
        ATTACH_PED_TO_WORLD_PHYSICALLY( l_U279, 14989, -108.07600000, -21.40000000, 10.41000000, 0.00000000, 0.00000000, 0.00000000, 1000.00000000, 1 );
        STOP_PED_SPEAKING( l_U279, 1 );
        ENABLE_PED_PAIN( l_U279, 0 );
        SET_PED_COMBAT_ATTRIBUTES( l_U279, 131072, 0 );
        SET_PED_COMBAT_ATTRIBUTES( l_U279, 16, 0 );
    }
    sub_339( "GA", "P_MPM_SETUP_ZIPLINE_ENEMY_FOR_END_OF_VIG end", 0 );
    return;
}

void sub_56263(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_48602( sub_858(), uParam0 );
}

void sub_56311()
{
    unknown uVar2;
    unknown uVar3;

    sub_339( "GA", "P_MPM_START_INT_FRONT_DOOR_ENEMY start", 0 );
    sub_35570( l_U614[0] );
    sub_35570( l_U614[1] );
    if ((NOT (IS_PED_DEAD( sub_858() ))) AND (NOT (IS_PED_DEAD( l_U614[0] ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar2 );
        if (NOT (IS_PED_DEAD( sub_858() )))
        {
            if ((NOT (sub_56263( l_U645 ))) || (NOT (sub_56263( l_U624 ))))
            {
                TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
                TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -109.01000000, -26.15000000, 9.35000000, sub_858(), 1, 10, -1, -1082130432, 3 );
            }
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0, sub_858() );
        }
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( l_U614[0], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
        REGISTER_TARGET( l_U614[0], sub_858() );
        SET_PED_PATH_CAN_USE_CLIMBOVERS( l_U614[0], 0 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( l_U614[0], 0 );
        SET_PED_ALLOWED_TO_KNEEL_AND_FIRE( l_U614[0], 0 );
    }
    if ((NOT (IS_PED_DEAD( sub_858() ))) AND (NOT (IS_PED_DEAD( l_U614[1] ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar3 );
        if (NOT (IS_PED_DEAD( sub_858() )))
        {
            if ((NOT (sub_56263( l_U645 ))) || (NOT (sub_56263( l_U624 ))))
            {
                TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
                TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -114.98000000, -26.38000000, 9.10000000, sub_858(), 1, 10, -1, -1082130432, 3 );
            }
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0, sub_858() );
        }
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( l_U614[1], uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
        REGISTER_TARGET( l_U614[1], sub_858() );
        SET_PED_PATH_CAN_USE_CLIMBOVERS( l_U614[1], 0 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( l_U614[1], 0 );
    }
    sub_339( "GA", "P_MPM_START_INT_FRONT_DOOR_ENEMY end", 0 );
    return;
}

void sub_56973()
{
    sub_339( "GA", "P_MPM_START_INT_LOBBY_AND_DISPLAY_ENEMIES start", 0 );
    sub_35570( l_U614[2] );
    sub_35570( l_U614[3] );
    if ((NOT (sub_56263( l_U645 ))) AND (NOT (sub_56263( l_U624 ))))
    {
        sub_30791( ref l_U622, l_U614[2], 1 );
        sub_30791( ref l_U622, l_U614[3], 1 );
    }
    if ((NOT (IS_PED_DEAD( sub_858() ))) AND (NOT (IS_PED_DEAD( l_U614[2] ))))
    {
        REGISTER_TARGET( l_U614[2], sub_858() );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U614[2], 0 );
        TASK_COMBAT_PED( l_U614[2], sub_858() );
    }
    if ((NOT (IS_PED_DEAD( sub_858() ))) AND (NOT (IS_PED_DEAD( l_U614[3] ))))
    {
        REGISTER_TARGET( l_U614[3], sub_858() );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U614[3], 0 );
        TASK_COMBAT_PED( l_U614[3], sub_858() );
    }
    sub_339( "GA", "P_MPM_START_INT_LOBBY_AND_DISPLAY_ENEMIES end", 0 );
    return;
}

void sub_57406(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_48602( sub_858(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_57774()
{
    sub_339( "GA", "P_MPM_DIALOGUE_SPAN_VIG18 start", 0 );
    sub_47190( ref l_U386 );
    if (NOT (IS_PED_DEAD( sub_858() )))
    {
        sub_47290( 0, sub_858(), "MAX", ref l_U386, 2, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U385 )))
    {
        sub_47290( 1, l_U385, "PASSOS", ref l_U386, 2, 0 );
    }
    sub_47560( "SPAN_VIG18", ref l_U386, 8, 1 );
    sub_339( "GA", "P_MPM_DIALOGUE_SPAN_VIG18 end", 0 );
    return;
}

void sub_58134(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_7621( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

void sub_58470(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

void sub_58646(boolean bParam0)
{
    sub_339( "CCB", "P_SWAP_SECURITY_DOOR_BUTTON", 0 );
    sub_9236( g_U4160[1] );
    sub_9236( l_U677 );
    if (bParam0)
    {
        g_U4160[1] = sub_31951( -1199034430, -109.36000000, -35.89300000, 9.85600000, 0.00000000, 0.00000000, 176.05900000, 0, 0, 0 );
        l_U677 = sub_31951( 688450913, -109.36000000, -35.89300000, 9.85600000, 0.00000000, 0.00000000, 176.05900000, 0, 0, 0 );
    }
    else
    {
        g_U4160[1] = sub_31951( -1324244056, -109.36000000, -35.89300000, 9.85600000, 0.00000000, 0.00000000, 176.05900000, 0, 0, 0 );
    }
    if (DOES_OBJECT_EXIST( g_U4160[1] ))
    {
        FREEZE_OBJECT_POSITION( g_U4160[1], 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U4160[1], ref g_U3408 );
    }
    if (DOES_OBJECT_EXIST( l_U677 ))
    {
        FREEZE_OBJECT_POSITION( l_U677, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U677, ref g_U3408 );
    }
    return;
}

int sub_59436(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_858() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_858() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_48602( sub_858(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_48602( sub_858(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_8556( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_8617( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_60318() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_8161( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_8205( iParam0, 0 );
                            sub_8405( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_8205( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_858() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_858(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_8205( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_8405( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_858() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_858(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_858() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_858(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_858() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_858(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_8205( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_8405( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_858() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_858() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_858() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_858(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_8405( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

int sub_60318()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

void sub_61488()
{
    sub_339( "GA", "P_RELEASE_MPM_ASSETS start", 0 );
    sub_61546( ref l_U110, ref g_U1588 );
    sub_61613( ref l_U124, ref g_U1829 );
    sub_61836( "pa_doors", ref g_U1975 );
    sub_61836( "PA_ZIPLINE", ref g_U1975 );
    sub_61836( "LEVEL_S_PAN_CP_07", ref g_U1975 );
    sub_62100( "SCRIPT_MISSION\S_PANA_VISITORS_CENTER", ref g_U3026 );
    sub_339( "GA", "P_RELEASE_MPM_ASSETS end", 0 );
    return;
}

void sub_61546(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_58134( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_61613(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_61648( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_61648(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_7621( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_61836(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_7621( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_62100(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_7621( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U40 = 0;
    l_U41 = 0;
    l_U42 = 1500;
    l_U70 = -1;
    l_U71 = {64536, 64536, 64536};
    l_U74 = {0, 0, 0};
    StrCopy( ref l_U77, "DUMMY", 32 );
    l_U85 = 1;
    l_U90 = 0;
    l_U91 = 0;
    l_U92 = 0;
    l_U95 = 0;
    l_U141 = 0;
    l_U194 = 0;
    l_U196 = 0;
    l_U197 = 0;
    l_U198 = 1;
    l_U515 = 1250;
    l_U601 = 15000;
    l_U602 = 30000;
    l_U822 = 1.00000000;
    l_U960 = 4275;
    sub_422( "SP", "Script s_pana_OB2.sc is starting up...", 0 );
    sub_471();
    l_U194 = 1;
    while (NOT IS_EXITFLAG_SET())
    {
        sub_775();
        if (l_U196 == 0)
        {
            sub_12201();
        }
        WAIT( 0 );
    }
    sub_6820( 1 );
    sub_54212();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_pana_OB2" );
    sub_422( "SP", "Script s_pana_OB2.sc is terminating...", 0 );
    return;
}

void sub_422(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_471()
{
    sub_422( "GA", "P_OB2_POPULATE_VARIABLE_ARRAYS start", 0 );
    l_U179[0] = 1914709263;
    l_U179[1] = -1425703854;
    l_U179[2] = g_U1512;
    l_U179[3] = g_U1522;
    l_U179[4] = g_U1524;
    l_U179[5] = g_U1575;
    l_U179[6] = g_U1576;
    l_U179[7] = g_U1578;
    l_U179[8] = -1409914275;
    l_U189[0] = 1478009203;
    l_U189[1] = -612753081;
    l_U189[2] = 1308526797;
    l_U189[3] = -184942895;
    sub_422( "GA", "P_OB2_POPULATE_VARIABLE_ARRAYS end", 0 );
    return;
}

void sub_775()
{
    if (g_U834 == 9)
    {
        switch (l_U196)
        {
            case 0:
            sub_866( 1 );
            if ((sub_2186()) || ((l_U197) || (IS_PED_DEAD( sub_876() ))))
            {
                l_U196 = 2;
                sub_422( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            if ((DOES_PED_EXIST( g_U3504 )) AND (NOT IS_LAST_MAN_STANDING_ACTIVE()))
            {
                if (IS_PED_DEAD( g_U3504 ))
                {
                    if (HAS_PED_BEEN_DAMAGED_BY_PED( g_U3504, sub_876(), 0 ))
                    {
                        l_U896 = 1;
                        l_U196 = 1;
                        sub_422( "SP", "eFailState = FAIL_HANDLE_PLAYER_SHOT_PASSOS", 0 );
                    }
                }
            }
            break;
            case 1:
            if (sub_2815())
            {
                l_U196 = 2;
                sub_422( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 2:
            if (sub_5258())
            {
                if ((g_U835[10]._fU40 != 4) AND (g_U835[10]._fU40 != 0))
                {
                    sub_422( "GA", "Shutting down script for MPM.", 0 );
                    sub_5370( ref g_U835[10] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U835[10]._fU32 );
                }
                l_U196 = 4;
            }
            else if ((sub_5435( 0 )) == 1)
            {
                if ((g_U835[10]._fU40 != 4) AND (g_U835[10]._fU40 != 0))
                {
                    sub_422( "GA", "Shutting down script for MPM.", 0 );
                    sub_5370( ref g_U835[10] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U835[10]._fU32 );
                }
                l_U196 = 3;
            }
            break;
            case 3:
            if (NOT (IS_PED_DEAD( sub_876() )))
            {
                l_U196 = 4;
                sub_422( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 4:
            sub_422( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_876() ))) AND (NOT (IS_PLAYER_DEAD( sub_898() ))))
            {
                SET_PLAYER_CONTROL( sub_898(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_876() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_876(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            sub_6611( ref l_U961, 1 );
            sub_6820( 0 );
            l_U196 = 5;
            sub_422( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 5:
            sub_422( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            if (l_U143._fU0)
            {
                sub_7973( ref l_U143, sub_876() );
            }
            l_U196 = 6;
            sub_422( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 6:
            sub_422( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U194 = 1;
            l_U197 = 0;
            l_U198 = 0;
            l_U196 = 0;
            sub_422( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_866(int iParam0)
{
    if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND ((NOT IS_BULLET_CAMERA_ACTIVE()) AND (NOT (IS_PED_DEAD( sub_876() )))))
    {
        if ((IS_PED_IN_WATER( sub_876() )) == 1)
        {
            if (NOT g_U3626._fU32)
            {
                sub_1007();
            }
            if (iParam0 == 1)
            {
                sub_1832();
            }
            sub_1890( 1, 1 );
            return 1;
        }
    }
    return 0;
}

int sub_876()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_898() );
    }
    return 0;
}

void sub_898()
{
    return GET_PLAYER_ID();
}

void sub_1007()
{
    sub_422( "MF", "P_GBL_QUICK_GAMEPLAY_CAM_COPY - START", 0 );
    sub_1075( ref g_U3626, 50 );
    sub_1408( 0, 0, 0, 1 );
    sub_1571( ref g_U3626 );
    sub_422( "MF", "P_GBL_QUICK_GAMEPLAY_CAM_COPY - END", 0 );
    return;
}

void sub_1075(int iParam0, unknown uParam1)
{
    iParam0->_fU4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_ROT()};
    iParam0->_fU16 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_COORD()};
    iParam0->_fU28 = GET_GAMEPLAY_CAM_FOV();
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam1;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU96 = 0;
    sub_1198( iParam0 + 48, uParam1, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U703, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_1198(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_1408(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_876() )))
        {
            SET_PLAYER_CONTROL( sub_898(), 0, uParam2 );
            SET_PED_DUCKING( sub_876(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_876() );
            }
            SET_PED_INVINCIBLE( sub_876(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_1571(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_1626( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

void sub_1626(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

void sub_1832()
{
    SET_PAD_SHAKE( 0, 100, 250 );
    WAIT( 90 );
    SET_PED_HEALTH( sub_876(), 0, 0 );
    return;
}

void sub_1890(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_876() )))
    {
        SET_PLAYER_CONTROL( sub_898(), 1, 0 );
        SET_PED_INVINCIBLE( sub_876(), 0 );
        if (bParam0)
        {
            sub_1971();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_1971()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_876() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_876(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_876(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_876(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_876(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

int sub_2186()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_876() )))
        {
            SET_PED_FORCED_TO_WALK( sub_876(), 0 );
            SET_PLAYER_FORCED_AIM( sub_898(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_898(), 1 );
            if ((IS_PED_VISIBLE( sub_876() )) == 0)
            {
                SET_PED_VISIBLE( sub_876(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

int sub_2815()
{
    switch (l_U896)
    {
        case 1:
        sub_1408( 1, 0, 0, 1 );
        if (l_U603 == 1)
        {
            sub_2916( ref l_U898, -97.81000000, 29.53000000, 9.84000000, -12.13000000, 0.00000000, 100.48000000, 45.00000000, 0 );
            sub_2916( ref l_U929, -100.57000000, 29.03000000, 9.25000000, -15.64000000, 0.00000000, 104.27000000, 45.00000000, l_U960 - 3500 );
        }
        else if (l_U603 == 2)
        {
            sub_2916( ref l_U898, -116.58000000, 24.73000000, 10.08000000, -9.08000000, 0.00000000, -77.25000000, 45.00000000, 0 );
            sub_2916( ref l_U929, -113.59000000, 25.42000000, 9.38000000, -22.66000000, 0.00000000, -75.49000000, 45.00000000, l_U960 - 3500 );
        }
        else if (l_U603 == 3)
        {
            sub_2916( ref l_U898, -112.29000000, 26.29000000, 9.86000000, -9.07000000, 0.00000000, 64.82000000, 45.00000000, 0 );
            sub_2916( ref l_U929, -115.13000000, 27.74000000, 9.20000000, -12.92000000, 0.00000000, 58.14000000, 45.00000000, l_U960 - 3500 );
        }
        else if (l_U603 == 4)
        {
            sub_2916( ref l_U898, -123.72000000, 23.14000000, 12.58000000, -20.53000000, 0.00000000, -86.48000000, 45.00000000, 0 );
            sub_2916( ref l_U929, -121.38000000, 23.29000000, 11.71000000, -32.54000000, 0.00000000, -86.48000000, 45.00000000, l_U960 - 3500 );
        }
        else if (l_U603 == 5)
        {
            sub_2916( ref l_U898, -125.53000000, 30.22000000, 14.69000000, -20.80000000, 0.00000000, -172.54000000, 45.00000000, 0 );
            sub_2916( ref l_U929, -125.10000000, 26.93000000, 13.43000000, -30.19000000, 0.00000000, -172.54000000, 45.00000000, l_U960 - 3500 );
        }
        else if (l_U603 == 6)
        {
            sub_2916( ref l_U898, -121.79000000, 23.19000000, 17.41000000, -15.31000000, 0.00000000, -37.08000000, 45.00000000, 0 );
            sub_2916( ref l_U929, -119.96000000, 25.29000000, 16.68000000, -19.24000000, 0.00000000, -19.50000000, 45.00000000, l_U960 - 3500 );
        }
        else if (l_U603 == 7)
        {
            sub_2916( ref l_U898, -119.25000000, 29.90000000, 18.07000000, -22.80000000, 0.00000000, -111.36000000, 45.00000000, 0 );
            sub_2916( ref l_U929, -117.13000000, 29.04000000, 16.66000000, -30.50000000, 0.00000000, -118.08000000, 45.00000000, l_U960 - 3500 );
        };;;;;;;
        sub_3917( ref l_U898, ref l_U929, l_U960, 1, 1 );
        SHAKE_CAM( l_U898._fU0, "HAND_SHAKE", 4.00000000 );
        SHAKE_CAM( l_U929._fU0, "HAND_SHAKE", 4.00000000 );
        SHAKE_CAM( l_U898._fU0, "SMALL_EXPLOSION_SHAKE", 0.30000000 );
        SHAKE_CAM( l_U929._fU0, "SMALL_EXPLOSION_SHAKE", 0.30000000 );
        AUDIO_MUSIC_SUSPEND( 4000 );
        l_U896 = 2;
        break;
        case 2:
        sub_4186( ref l_U961 );
        if (sub_5013( ref l_U929, 1 ))
        {
            l_U896 = 5;
        }
        break;
    }
    if (l_U896 == 5)
    {
        return 1;
        break;
    }
    return 0;
}

void sub_2916(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_1198( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U703, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_3917(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE_WITH_INTERP( iParam1->_fU0, iParam0->_fU0, uParam2, uParam3, uParam4 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_1626( iParam1 + 48 );
    iParam1->_fU32 = 1;
    iParam1->_fU40 = 1;
    return;
}

void sub_4186(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_4218( ref (uParam0^)[I] );
    }
    return;
}

void sub_4218(int iParam0)
{
    if (iParam0->_fU172 == 1)
    {
        if (iParam0->_fU164 == 0)
        {
            sub_1198( iParam0 + 40, iParam0->_fU148, 1, 0 );
            sub_1626( iParam0 + 40 );
            if (iParam0->_fU152 > 0)
            {
                sub_1198( iParam0 + 76, iParam0->_fU152, 1, 0 );
                sub_1626( iParam0 + 76 );
            }
            iParam0->_fU164 = 1;
        }
        if (sub_4346( iParam0 + 40 ))
        {
            sub_422( "ML", "P_HANDLE_CAM_SHAKE is shaking the camera", "---" );
            sub_4582( iParam0 + 4, iParam0->_fU36 );
            if (iParam0->_fU156 > 0)
            {
                sub_1198( iParam0 + 112, iParam0->_fU156, 1, 0 );
                sub_1626( iParam0 + 112 );
            }
        }
        if (sub_4346( iParam0 + 112 ))
        {
            sub_4582( iParam0 + 4, iParam0->_fU36 );
            sub_1198( iParam0 + 112, iParam0->_fU156, 1, 0 );
            sub_1626( iParam0 + 112 );
        }
        if (sub_4346( iParam0 + 76 ))
        {
            sub_422( "ML", "P_HANDLE_CAM_SHAKE is done shaking the camera", "---" );
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam0->_fU160 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam0->_fU160 );
            sub_4862( iParam0 + 112 );
            iParam0->_fU172 = 0;
        }
    }
    return;
}

int sub_4346(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_4582(unknown uParam0, unknown uParam1)
{
    SHAKE_CAM( GET_RENDERING_CAM(), uParam0, uParam1 );
    SHAKE_GAMEPLAY_CAM( uParam0, uParam1 );
    return;
}

void sub_4862(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

int sub_5013(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || (sub_4346( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || (sub_4346( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_5258()
{
    return g_U648;
}

void sub_5370(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

int sub_5435(int iParam0)
{
    iParam0 = 1;
    switch (l_U41)
    {
        case 0:
        if (NOT (sub_5496( ref l_U43 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_876() )))
            {
                l_U42 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_1198( ref l_U43, l_U42, 1, 1 );
            sub_1626( ref l_U43 );
        }
        if (sub_4346( ref l_U43 ))
        {
            sub_422( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_876() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_898() )))
            {
                SET_PLAYER_CONTROL( sub_898(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U41 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U41 = 2;
            }
            else
            {
                l_U41 = 3;
            }
        }
        break;
        case 2:
        sub_422( "NS", "Player will QUIT", 0 );
        sub_5955();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_422( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_5955();
        return 1;
        break;
    }
    return 0;
}

int sub_5496(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_5955()
{
    sub_422( "NS", "P_PostFailRetryCleanup", 0 );
    sub_4862( ref l_U43 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_898() )))
    {
        SET_PLAYER_CONTROL( sub_898(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U40 = 0;
    l_U40 = l_U40;
    l_U41 = 0;
    return;
}

void sub_6611(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_6645( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_6645(int iParam0, int iParam1)
{
    if (iParam0->_fU172 == 1)
    {
        if (iParam1 == 1)
        {
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam1 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam1 );
        }
        else
        {
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam0->_fU160 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam0->_fU160 );
        }
        sub_4862( iParam0 + 40 );
        sub_4862( iParam0 + 76 );
        sub_4862( iParam0 + 112 );
        iParam0->_fU172 = 0;
    }
    return;
}

void sub_6820(boolean bParam0)
{
    sub_422( "GA", "P_CLEANUP_OB2 start", 0 );
    ISEQ_TERMINATE( -147860720 );
    sub_6884( -147860720, ref g_U1878 );
    ISEQ_TERMINATE( 158168971 );
    sub_6884( 158168971, ref g_U1878 );
    ISEQ_TERMINATE( -626525648 );
    sub_6884( -626525648, ref g_U1878 );
    if ((CUTSCENE_NAMED_IS_LOADING( "MID_06_PANAMA" )) || (CUTSCENE_IS_LOADED( "MID_06_PANAMA" )))
    {
        CLEAR_NAMED_CUTSCENE( "MID_06_PANAMA" );
    }
    sub_7384( g_U3504 );
    sub_7462( ref l_U1089 );
    sub_7384( g_U3515 );
    sub_7384( g_U3516 );
    sub_7384( g_U3514 );
    if (NOT g_U4197[0])
    {
        sub_7572( g_U4194[0] );
    }
    if (NOT g_U4197[1])
    {
        sub_7572( g_U4194[1] );
    }
    if (bParam0)
    {
        sub_7462( ref g_U3505 );
        sub_7462( ref g_U3511 );
    }
    sub_7682( ref l_U531 );
    if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( "PANAMA_OS_6" ))
    {
        AUDIO_MUSIC_STOP_ONESHOT();
    }
    sub_422( "GA", "P_CLEANUP_OB2 end", 0 );
    return;
}

void sub_6884(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_6996( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

int sub_6996(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_7384(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_7462(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_7384( (uParam0^)[I] );
    }
    return;
}

void sub_7572(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

void sub_7682(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_7715( (uParam0^)[I] );
    }
    return;
}

void sub_7715(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_7973(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_422( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_8157( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_9234( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_9526( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_9886( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_9526( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_9886( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_9526( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_9886( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_10171( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_9886( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_10171( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_9886( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_10664( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_10825( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_876(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_422( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_8157(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_8189( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_8189(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_9234(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_9526(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_9842( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_9842(unknown uParam0)
{
    return;
}

void sub_9886(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_10171(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_9842( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_10664(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_10825(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_8189( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_10897( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_10897(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_12201()
{
    int iVar2;

    iVar2 = l_U194;
    switch (l_U194)
    {
        case 0: break;
        case 1:
        sub_422( "SP", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
        sub_12397();
        sub_12759();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U194 = 2;
        sub_422( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_422( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        sub_15774();
        sub_20018();
        l_U194 = 3;
        sub_422( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if ((sub_22848( ref g_U1878 )) AND ((sub_22721( ref g_U1975 )) AND ((sub_22600( ref g_U1829 )) AND (sub_22480( ref g_U1588 )))))
        {
            if ((NOT l_U143._fU0) AND (g_U833 == 9))
            {
                l_U194 = 4;
                sub_422( "SP", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
            }
            else
            {
                l_U194 = 6;
                sub_422( "SP", "eCheckpointState = CP_OB2_PRE_CREATE_ASSETS", 0 );
            }
        }
        break;
        case 4:
        sub_422( "GA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        l_U198 = 0;
        g_U1230[9] = 1;
        g_U4197[0] = 0;
        g_U4197[1] = 0;
        g_U4187 = 0;
        g_U4191[0] = 0;
        g_U4191[1] = 0;
        if (NOT (IS_PED_DEAD( sub_876() )))
        {
            FREEZE_PED_POSITION( sub_876(), 0 );
        }
        if ((sub_23350( ref l_U143 )) == 0)
        {
            sub_10171( sub_876(), 1308526797, 200, 0, 0 );
            sub_9526( sub_876(), -612753081, 0, 200, 0 );
            l_U194 = 5;
            sub_422( "GA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U194 = 6;
            sub_422( "SP", "eCheckpointState = CP_OB2_PRE_CREATE_ASSETS", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD( sub_876() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_876(), 0 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_876(), 0, 0 ) )))
            {
                l_U194 = 6;
                sub_422( "GA", "eCheckpointState = CP_OB2_PRE_CREATE_ASSETS", 0 );
            }
        }
        break;
        case 6:
        if (l_U195)
        {
            l_U1060 = 1;
        }
        if (sub_23872())
        {
            l_U194 = 7;
            sub_422( "GA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 7:
        if (g_U1230[9])
        {
            if (l_U198)
            {
                if (CUTSCENE_IS_LOADED( "MID_06_PANAMA" ))
                {
                    l_U194 = 8;
                    sub_422( "GA", "eCheckpointState = CP_HANDLE_MID_06_PANAMA", 0 );
                }
                else if (CUTSCENE_NAMED_IS_LOADING( "MID_06_PANAMA" ))
                {
                    sub_422( "GA", "Waiting for cutscene MID_06_PANAMA to load.", 0 );
                }
                else
                {
                    sub_422( "GA", "Requesting cutscene MID_06_PANAMA to load.", 0 );
                    PRE_STREAM_SEAMLESS_CUTSCENE( "MID_06_PANAMA" );
                }
            }
            else
            {
                l_U194 = 8;
                sub_422( "GA", "eCheckpointState = CP_HANDLE_MID_06_PANAMA", 0 );
            }
        }
        break;
        case 8:
        if (l_U195)
        {
            sub_26693();
            sub_33051( ref l_U230, "MID_06_PANAMA", 28056, 28408, 29478, 30316, 30333, 32642, 250, 0 );
            if (l_U198)
            {
                l_U230._fU4 = 2;
            }
            else
            {
                l_U230._fU4 = 7;
            }
        }
        if (sub_33477( ref l_U230 ))
        {
            if (NOT l_U143._fU0)
            {
                g_U834 = 9;
                sub_35223( ref l_U143, g_U834, sub_876(), g_U980[9], g_U1086[9], g_U1158[9], g_U1122[9], 1 );
            }
            l_U194 = 9;
            sub_422( "GA", "eCheckpointState = CP_OB2_GAMEPLAY_ENTRANCE", 0 );
        }
        break;
        case 9:
        if (l_U195)
        {
            l_U603 = 1;
            if (NOT AUDIO_IS_MUSIC_PLAYING())
            {
                sub_422( "CR", "MUSIC: Playing PANAMA_FINAL Mood: PANAMA_FINAL_1_3_6", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_1_3_6", "PANAMA_FINAL_1_3_6", 0, -1, -1, -1082130432, 0 );
            }
            sub_39073();
            sub_1626( ref l_U550 );
            sub_1626( ref l_U774 );
            sub_1626( ref l_U783 );
        }
        sub_39242( 3.50000000, -1 );
        sub_39573();
        sub_39689();
        sub_43522();
        if (NOT l_U773)
        {
            if (sub_4346( ref l_U774 ))
            {
                sub_43918();
                l_U773 = 1;
            }
        }
        sub_32685( ref l_U1089, -1054867456, 0, 1 );
        if (sub_44189( l_U561 ))
        {
            if ((NOT l_U582._fU20) || (sub_4346( ref l_U582 )))
            {
                sub_44293();
                sub_4862( ref l_U582 );
                sub_1626( ref l_U582 );
            }
        }
        if (sub_44555( ref l_U302, 0 ))
        {
            l_U194 = 10;
            sub_422( "GA", "eCheckpointState = CP_HANDLE_MID_05C_PANAMA", 0 );
        }
        if (l_U1060 == 4)
        {
            if ((sub_44854( ref l_U1089 )) == 0)
            {
                l_U895 = 1;
                l_U194 = 11;
                sub_422( "GA", "eCheckpointState = CP_OB2_GAMEPLAY_INTERIOR", 0 );
            }
        }
        break;
        case 10:
        if (l_U195)
        {
            l_U897 = 1;
        }
        if (sub_45031())
        {
            l_U196 = 2;
            sub_422( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
        }
        break;
        case 11:
        if (l_U195)
        {
            sub_46412();
            l_U603 = 2;
            sub_1626( ref l_U732 );
            sub_46607( ref g_U835[10] );
            sub_39073();
        }
        sub_43522();
        sub_46643();
        if (NOT l_U731)
        {
            if (sub_4346( ref l_U732 ))
            {
                sub_49454();
                l_U731 = 1;
            }
        }
        if (NOT l_U257)
        {
            if ((sub_49730( ref g_U3516 )) AND (sub_49730( ref g_U3515 )))
            {
                sub_422( "CR", "MUSIC 6.8: Playing PANAMA_FINAL Mood: PANAMA_FINAL_6", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_6", "PANAMA_FINAL_6", 0.00000000, 15000, 15000, -1082130432, 0 );
                l_U257 = 1;
            }
        }
        if (sub_49944( ref l_U1113, 0 ))
        {
            sub_50045();
        }
        if (sub_49944( ref l_U1148, 0 ))
        {
            sub_50320();
        }
        if (sub_49944( ref l_U1182, 0 ))
        {
            sub_50691();
        }
        if ((l_U731) AND (NOT l_U751))
        {
            if (NOT (sub_49062( l_U721 )))
            {
                sub_43797( "SPAN_VIG15C", ref l_U741 );
                l_U751 = 1;
            }
        }
        if (sub_51122( ref l_U464, sub_876(), 0 ))
        {
            PLAY_IMAGEFX( "FLICKER_VIBRATE_LONG", 4, 0 );
            PLAY_IMAGEFX( "FLICKER_VIBRATE_LONG", 4, 0 );
        }
        if (sub_51122( ref l_U485, sub_876(), 0 ))
        {
            PLAY_IMAGEFX( "GAMMA_SATURATION_COLOR_ZOOM_3", 4, 0 );
        }
        if (sub_49944( ref l_U443, 0 ))
        {
            sub_51363();
        }
        if (sub_52069( ref l_U199, l_U200, "MID_07_PANAMA_concat", ref l_U221, 1, 1500 ))
        {
            g_U1230[10] = 1;
            if (sub_49062( l_U741 ))
            {
                sub_46804( ref l_U741, 0 );
            }
            if (sub_49062( l_U752 ))
            {
                sub_46804( ref l_U752, 0 );
            }
            SET_PED_FORCED_TO_RUN( sub_876(), 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_898(), 1 );
            sub_53173( g_U3515 );
            sub_53173( g_U3516 );
            if (NOT (IS_PED_DEAD( g_U3514 )))
            {
                sub_7384( g_U3514 );
            }
            l_U194 = 12;
            sub_422( "GA", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 12:
        if (g_U834 == 10)
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U194 = 0;
            sub_422( "SP", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
    }
    sub_53412( ref l_U1203 );
    if (l_U194 != iVar2)
    {
        l_U195 = 1;
    }
    else
    {
        l_U195 = 0;
    }
    return;
}

void sub_12397()
{
    sub_422( "GA", "P_INITIALIZE_SCRIPT_DATA start", 0 );
    l_U195 = 1;
    l_U197 = 0;
    l_U257 = 0;
    l_U258 = 0;
    sub_1198( ref l_U550, 5000, 1, 0 );
    l_U559 = 0;
    l_U560 = 0;
    l_U833 = 1;
    l_U844 = 0;
    l_U884 = 0;
    l_U895 = 0;
    sub_1198( ref l_U582, 25000, 1, 0 );
    sub_1198( ref l_U865, 2000, 1, 0 );
    sub_1198( ref l_U783, GET_RANDOM_INT_IN_RANGE( l_U601, l_U602 ), 1, 0 );
    l_U603 = 0;
    l_U604 = 0;
    l_U605 = 0;
    l_U606 = 0;
    sub_1198( ref l_U701, 1000, 1, 0 );
    sub_1198( ref l_U732, 500, 1, 0 );
    sub_1198( ref l_U774, 5000, 1, 0 );
    l_U720 = 0;
    l_U731 = 0;
    l_U751 = 0;
    l_U762 = 0;
    l_U773 = 0;
    l_U896 = 0;
    l_U1060 = 0;
    l_U1061 = 0;
    l_U1099 = 0;
    l_U199 = 0;
    sub_422( "GA", "P_INITIALIZE_SCRIPT_DATA start", 0 );
    return;
}

void sub_12759()
{
    sub_422( "GA", "P_SET_STATIC_DATA start", 0 );
    sub_12842( ref l_U537, -103.15300000, 28.46700000, 7.91069400, -90.00000000, -454789158, 26, 0, 0, 0, 1 );
    sub_12842( ref l_U1062[0], -120.29000000, 23.41000000, 10.04000000, 260.00000000, -529172156, 7, 3, 2, 0, 0 );
    sub_12842( ref l_U1062[1], -125.27000000, 23.29000000, 11.14000000, 277.70000000, 967546534, 7, 3, 2, 0, 0 );
    sub_12842( ref l_U1100, -109.32000000, 28.53000000, 15.07000000, 90.00000000, 1749164903, 7, 3, 2, 0, 0 );
    sub_12842( ref l_U1135, -109.31000000, 24.91000000, 15.07000000, 90.00000000, -529172156, 7, 3, 2, 0, 0 );
    sub_12842( ref l_U1169, -107.04000000, 28.08000000, 15.34000000, 85.00000000, -1729251551, 7, 3, 2, 0, 0 );
    sub_13235( ref l_U561, "tb_OB2_TooFarPassosWarning", -121.12000000, 26.55000000, 7.85000000, 6.50000000, 10.00000000, 4.70000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13235( ref l_U259[0], "tb_OB2_PassosDiesPlayerTooFar[0]", -124.71000000, 26.67000000, 11.17000000, 3.00000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13235( ref l_U259[1], "tb_OB2_PassosDiesPlayerTooFar[1]", -72.00000000, 26.50000000, 7.50000000, 9.00000000, 16.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13512( ref l_U302, ref l_U259 );
    sub_13235( ref l_U1113, "tb_OB2_StartEnemyAtTopStairs", -124.71000000, 26.67000000, 11.17000000, 3.00000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13235( ref l_U1148, "tb_OB2_StartEnemyInTopRoom", -124.00000000, 26.67000000, 11.17000000, 3.00000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13235( ref l_U1182, "tb_OB2_StartEnemyRunningOutDoor", -121.13000000, 29.22000000, 13.09000000, 4.00000000, 3.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13235( ref l_U200, "TRIGGER_MID07_BLENDIN", -107.91000000, 26.46000000, 13.76000000, 9.00000000, 7.00000000, 3.29000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13235( ref l_U443, "TRIGGER_MID07_FX", -107.91000000, 26.46000000, 13.76000000, 15.92000000, 8.81000000, 2.97000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13235( ref l_U464, "tmImageFX_STAIRS_OPR_01", -121.60100000, 23.34560000, 9.53604000, 2.00000000, 2.50000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13235( ref l_U485, "tmImageFX_STAIRS_OPR_02", -118.24300000, 29.23530000, 13.84600000, 4.00000000, 2.50000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13235( ref l_U607, "TRIGGER_BUILDING_MID_STAIRS", -119.85000000, 22.94000000, 9.89000000, 3.00000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13235( ref l_U628, "TRIGGER_BUILDING_3RD_STAIRS", -124.71000000, 26.67000000, 11.17000000, 3.00000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13235( ref l_U649, "TRIGGER_BUILDING_TOP_STAIRS", -121.13000000, 29.22000000, 13.09000000, 4.00000000, 3.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13235( ref l_U670, "TRIGGER_BUILDING_TOP_FLOOR", -110.36000000, 26.35000000, 14.18000000, 15.92000000, 8.81000000, 2.97000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14785( ref l_U1098, "TETHER_STAIRWAY", -113.81000000, 26.32000000, 7.70000000, 15.01000000, 8.63000000, 5.15000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14785( ref l_U1134, "TETHER_UPSTAIRS", -115.27000000, 26.35000000, 14.18000000, 15.92000000, 8.81000000, 2.97000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14956( ref l_U516[0], -1513586507, -104.09660000, 25.90269000, 16.16696000, 0.00000000, 0.00000000, 0.00000000 );
    sub_15017( ref l_U516[0], -100.00000000, 100.00000000 );
    sub_15198( ref l_U516[0], 1, 1, 1.00000000 );
    sub_15352( ref l_U516[0], 1 );
    sub_14956( ref l_U516[1], 372230415, -45.48747000, 29.79249000, 9.53181000, 0.00000000, 0.00000000, 0.00000000 );
    sub_15467( ref l_U516[1], 1 );
    sub_422( "GA", "P_SET_STATIC_DATA end", 0 );
    return;
}

void sub_12842(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_13235(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_13512(int iParam0, unknown uParam1)
{
    int iVar4;
    int I;

    iVar4 = (uParam1^);
    if (iVar4 > 6)
    {
        sub_422( "[SA]", "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
        SCRIPT_ASSERT( "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
    }
    for ( I = 0; I < iVar4; I++ )
    {
        iParam0->_fU0[I] = {(uParam1^)[I]};
    }
    iParam0->_fU508 = iVar4;
    iParam0->_fU548 = 0;
    iParam0->_fU552 = 0;
    iParam0->_fU556 = 0;
    iParam0->_fU560 = 0;
    return;
}

void sub_14785(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_14956(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

void sub_15017(int iParam0, float fParam1, float fParam2)
{
    if ((sub_15029( iParam0 )) == 0)
    {
        sub_15095( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        ;
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

int sub_15029(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_15095(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_15198(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_15029( iParam0 )) == 0)
    {
        sub_15095( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

void sub_15352(int iParam0, unknown uParam1)
{
    if ((sub_15029( iParam0 )) == 0)
    {
        sub_15095( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_LATCH( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

void sub_15467(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_15029( iParam0 )) == 0)
    {
        sub_15095( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

void sub_15774()
{
    sub_422( "GA", "P_REQUEST_OB2_PERSISTENT_ASSETS start", 0 );
    sub_15835();
    sub_17798( ref l_U179, ref g_U1588 );
    sub_18940( ref l_U189, ref g_U1829 );
    sub_15913( "LEVEL_S_PAN_CP_06", ref g_U1975 );
    sub_422( "GA", "P_REQUEST_OB2_PERSISTENT_ASSETS end", 0 );
    return;
}

void sub_15835()
{
    sub_422( "CR", "P_GLOBAL_LOAD_RIFLE_ANIMS - Start", 0 );
    sub_15913( "NPC_RIFLE_CORE", ref g_U1975 );
    sub_15913( "NPC_RIFLE_COVER", ref g_U1975 );
    sub_15913( "NPC_RIFLE_COVER_ENTER", ref g_U1975 );
    sub_15913( "NPC_RIFLE_COVER_RELOAD", ref g_U1975 );
    sub_15913( "NPC_RIFLE_DODGE", ref g_U1975 );
    sub_15913( "NPC_RIFLE_FLAVOR", ref g_U1975 );
    sub_15913( "NPC_RIFLE_FULLBODY", ref g_U1975 );
    sub_15913( "NPC_RIFLE_RELOAD", ref g_U1975 );
    sub_15913( "NPC_RIFLE_SEARCH", ref g_U1975 );
    sub_15913( "NPC_RIFLE_STAIRS", ref g_U1975 );
    sub_15913( "NPC_RIFLE_REACT", ref g_U1975 );
    sub_15913( "AMED_RIFL_PRONE", ref g_U1975 );
    sub_15913( "PLGE_RIFLE_CROUCH", ref g_U1975 );
    sub_15913( "PLGE_RIFLE_CORE", ref g_U1975 );
    sub_15913( "PLGE_RIFLE_CORE_RELOAD", ref g_U1975 );
    sub_15913( "PLGE_RIFLE_HANDSIG", ref g_U1975 );
    sub_15913( "PLGE_RIFLE_ACTIONS", ref g_U1975 );
    sub_15913( "PLGE_RIFLE_KNEE", ref g_U1975 );
    sub_15913( "PLGE_RIFLE_COVER", ref g_U1975 );
    sub_15913( "PLGE_RIFLE_REACT", ref g_U1975 );
    sub_15913( "PLGE_RIFLE_COVER_EXIT", ref g_U1975 );
    sub_422( "CR", "P_GLOBAL_LOAD_RIFLE_ANIMS - End", 0 );
    return;
}

void sub_15913(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_15934( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_16071( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_15934(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_16071( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_16071( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_16071( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_16742( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_16071( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_16071( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_16071(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16093( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_16093(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_16742(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_17798(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_17833( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_17833(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_17868( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_17999( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_17868(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_17999( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_17999( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_17999( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_16742( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_17999( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_17999( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_17999(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16093( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_18940(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_18975( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_18975(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_18996( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_19128( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_18996(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_19128( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_19128( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_19128( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_16742( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_19128( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_19128( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_19128(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16093( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_20018()
{
    sub_422( "GA", "P_REQUEST_OB2_NONPERSISTENT_ASSETS start", 0 );
    sub_20091( -626525648, ref g_U1878 );
    sub_20091( -147860720, ref g_U1878 );
    sub_20091( 158168971, ref g_U1878 );
    if ((l_U198) AND (g_U833 != 9))
    {
        sub_22076( "MID_06_PANAMA", 0 );
    }
    AUDIO_MUSIC_REQUEST_ONESHOT( "PANAMA_OS_6", 0 );
    sub_422( "GA", "P_REQUEST_OB2_NONPERSISTENT_ASSETS end", 0 );
    return;
}

void sub_20091(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_20126( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_20278( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_20126(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_20278( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_20278( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_20278( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_20278( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_16742( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_16742( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_20278( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_20278( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_20278(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16093( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_22076(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

int sub_22480(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_22600(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_22721(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_22848(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

int sub_23350(unknown uParam0)
{
    sub_422( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_7973( uParam0, sub_876() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

int sub_23872()
{
    switch (l_U1060)
    {
        case 1:
        sub_422( "GA", "e_OB2_EntranceEnemySpawnState = ENTITY_STATE_INIT", 0 );
        sub_23991( ref l_U1092, 0.80000000, 0 );
        l_U1061 = 0;
        l_U1060 = 2;
        sub_422( "GA", "e_OB2_EntranceEnemySpawnState = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U1089[l_U1061] = sub_24258( ref l_U1062[l_U1061] );
        sub_25097( l_U1089[l_U1061], ref l_U1092 );
        sub_25392( ref l_U1089[l_U1061], "AIT_EXPERT", 5.00000000, 40.00000000 );
        sub_25499( ref l_U1098, l_U1089[l_U1061], 1 );
        if (NOT (IS_PED_DEAD( l_U1089[l_U1061] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U1089[l_U1061], "Pana_PumpRoom" );
            SET_PED_ALERTNESS( l_U1089[l_U1061], 3 );
            SET_PED_CAN_PLAY_LOCO_FLAVOR_STARTS( l_U1089[l_U1061], 0 );
            if (NOT (IS_PED_DEAD( sub_876() )))
            {
                REGISTER_TARGET( l_U1089[l_U1061], sub_876() );
                SET_LOCKED_TARGET( l_U1089[l_U1061], sub_876() );
            }
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1089[l_U1061], 1 );
        }
        sub_25768( l_U1089[l_U1061] );
        l_U1061++;
        if (l_U1061 >= 2)
        {
            l_U1060 = 3;
            sub_422( "GA", "e_OB2_EntranceEnemySpawnState = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        sub_26003( ref l_U1089, "pi_OB2_EntranceEnemy" );
        sub_10171( l_U1089[0], -184942895, 25000, 0, 0 );
        sub_10171( l_U1089[1], 1308526797, 25000, 0, 0 );
        l_U1060 = 4;
        sub_422( "GA", "e_OB2_EntranceEnemySpawnState = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    if (l_U1060 == 4)
    {
        return 1;
        break;
    }
    return 0;
}

void sub_23991(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_24258(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_24428( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_24897( iParam0->_fU40 );
    sub_24977( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_24428(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_9842( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_24897(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_24977(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_25097(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_9842( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_23991( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_23991( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_25392(unknown uParam0, unknown uParam1, float fParam2, float fParam3)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    return;
}

void sub_25499(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_25768(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_26003(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_26693()
{
    int I;

    sub_422( "CCB", "P_CREATE_BUILDING_VEHICLES", 0 );
    for ( I = 0; I <= (g_U4194 - 1); I++ )
    {
        if (NOT g_U4197[I])
        {
            sub_26783( ref g_U4194, I );
            sub_27457( ref g_U4194, I );
        }
    }
    sub_27708();
    return;
}

void sub_26783(unknown uParam0, int iParam1)
{
    if (NOT (DOES_VEHICLE_EXIST( (uParam0^)[iParam1] )))
    {
        sub_422( "CCB", "Creating viStandoffVehicles_:", 0 );
        if (iParam1 == 0)
        {
            (uParam0^)[iParam1] = sub_26895( -1425703854, -68.70000000, 22.60000000, 7.92000000, 145.11000000, 0, 0, 0 );
            if (NOT (IS_VEHICLE_DEAD( (uParam0^)[iParam1] )))
            {
                SET_VEHICLE_COLOUR_COMBINATION( (uParam0^)[iParam1], 4 );
                SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 5, 0 );
                SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 6, 1 );
                SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 7, 1 );
                SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 8, 1 );
            }
        }
        else if (iParam1 == 1)
        {
            (uParam0^)[iParam1] = sub_26895( -1425703854, -84.28000000, 24.61000000, 7.91000000, 70.11000000, 0, 0, 0 );
            if (NOT (IS_VEHICLE_DEAD( (uParam0^)[iParam1] )))
            {
                SET_VEHICLE_COLOUR_COMBINATION( (uParam0^)[iParam1], 5 );
                SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 5, 1 );
                SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 6, 0 );
                SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 7, 1 );
                SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 8, 1 );
            }
        }
    }
    else
    {
        sub_422( "CCB", "The viStandoffVehicles vehicle was already created.", 0 );
    }
    return;
}

void sub_26895(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
        sub_24428( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

void sub_27457(unknown uParam0, unknown uParam1)
{
    sub_422( "CCB", "P_SETUP_BUILDING_VEHICLE", 0 );
    if (NOT (IS_VEHICLE_DEAD( (uParam0^)[uParam1] )))
    {
        SET_VEHICLE_ON_GROUND_PROPERLY( (uParam0^)[uParam1] );
        FREEZE_VEHICLE_POSITION( (uParam0^)[uParam1], 1 );
        SET_VEHICLE_PROOFS( (uParam0^)[uParam1], 0, 0, 1, 0, 0 );
        SET_VEHICLE_CAN_BE_DAMAGED( (uParam0^)[uParam1], 1 );
        SET_VEHICLE_ONLY_DAMAGED_BY_PLAYER( (uParam0^)[uParam1], 1 );
        SET_VEHICLE_ENGINE_HEALTH( (uParam0^)[uParam1], 600.00000000 );
        SET_VEHICLE_PETROL_TANK_HEALTH( (uParam0^)[uParam1], 300.00000000 );
        SET_VEHICLE_DOORS_LOCKED( (uParam0^)[uParam1], 3 );
        SET_VEHICLE_DOOR_BROKEN( (uParam0^)[uParam1], 5, 1 );
        SET_VEHICLE_LIGHTS( (uParam0^)[uParam1], 1 );
    }
    return;
}

void sub_27708()
{
    if (NOT g_U4187)
    {
        sub_7715( g_U4186 );
        g_U4186 = sub_27774( -4072149, -66.66200000, 24.32500000, 8.63000000, 0, 0, 0, 0, 0, 0, 1119092736 );
    }
    if (NOT g_U4191[0])
    {
        sub_7715( g_U4188[0] );
        g_U4188[0] = sub_27774( -4072149, -82.28700000, 23.17500000, 8.63000000, 0, 0, 0, 0, 0, 0, 1119092736 );
    }
    if (NOT g_U4191[1])
    {
        sub_7715( g_U4188[1] );
        g_U4188[1] = sub_27774( -4072149, -82.18700000, 23.42500000, 8.65500000, 1.65000000, 0, 0, 0, 0, 0, 1119092736 );
    }
    return;
}

void sub_27774(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

int sub_28056()
{
    if (sub_28066())
    {
        return 1;
    }
    return 0;
}

int sub_28066()
{
    sub_422( "GA", "F_OB2_CREATE_PASSOS start", 0 );
    if (NOT (DOES_PED_EXIST( g_U3504 )))
    {
        g_U3504 = sub_24258( ref l_U537 );
        if (NOT (IS_PED_DEAD( g_U3504 )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U3504, 1 );
            SET_PED_NAME_DEBUG( g_U3504, "piPassos" );
            SET_PED_GORE_FROM_PLAYER( g_U3504, 1 );
            SET_PED_GORE_FROM_NPC( g_U3504, 0 );
            SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U3504, 1 );
            SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U3504, 1 );
            SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( g_U3504, 0 );
            SET_PED_CAN_PUSH_PLAYER( g_U3504, 1 );
            SET_PED_AS_ONE_SHOT_KILL( g_U3504, 1 );
            SET_PED_RELATIONSHIP( g_U3504, 2, 3 );
            SET_AI_SHOULD_ALWAYS_MISS_PED( g_U3504, 1 );
            SET_PED_CAN_BE_TARGETTED( g_U3504, 0 );
            sub_10171( g_U3504, -612753081, 25000, 0, 0 );
            SET_PED_CONSUMING_AMMO( g_U3504, 0 );
            SET_PED_ACCURACY( g_U3504, -1467320974 );
        }
    }
    return 1;
}

void sub_28408()
{
    if (NOT (IS_PED_DEAD( sub_876() )))
    {
        CUTSCENE_REGISTER_PED_TELEPORT( sub_876(), g_U980[9], g_U1086[9] );
        CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "pana_GP_Building", "Corner Position02", 1, 0 );
        CUTSCENE_SET_COVER_CAMERA_DIRECTION( g_U1158[9], g_U1122[9] );
        if (sub_28545( -626525648, ref g_U1878 ))
        {
            sub_422( "CCB", "Registering the Player ped to the S_PAN_MID_06_BLEND_OUT ISEQ.", 0 );
            ISEQ_REGISTER_ENTITY( -626525648, "player", sub_876(), 0 );
            CUTSCENE_REGISTER_ISEQ( -626525648 );
        }
        else
        {
            sub_422( "CCB", "The S_PAN_MID_06_BLEND_OUT ISEQ is NOT loaded!!!", 0 );
        }
    }
    if (NOT (IS_PED_DEAD( g_U3504 )))
    {
        sub_422( "CCB", "Registering the piPassos ped to the cutscene.", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U3504, "Pass_Yaht", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U3504, 0, 0 ), "W_PI_608_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U3504, -103.15300000, 28.46700000, 7.91069400, -90.00000000 );
        if (sub_28545( -147860720, ref g_U1878 ))
        {
            sub_422( "CCB", "Registering the piPassos ped to the S_PAN_VIG_14 ISEQ.", 0 );
            ISEQ_REGISTER_ENTITY( -147860720, "Passos", g_U3504, 0 );
            CUTSCENE_REGISTER_ISEQ( -147860720 );
        }
        else
        {
            sub_422( "CCB", "The S_PAN_VIG_14 ISEQ is NOT loaded!!!", 0 );
        }
    }
    else
    {
        sub_422( "CCB", "The piPassos ped is NOT valid!!!", 0 );
    }
    sub_422( "CR", "MUSIC: Playing PANAMA_FINAL Mood: PANAMA_FINAL_1_3_6", 0 );
    AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_1_3_6", "PANAMA_FINAL_1_3_6", 0.00000000, 4000, -1, -1082130432, 0 );
    return;
}

int sub_28545(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int I;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if ((uParam1^)[I]._fU4 == 3)
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    ISEQ_GET_NAME( 32, ref uVar4, (uParam1^)[I]._fU0 );
                    return 1;
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return 0;
}

void sub_29478()
{
    if (l_U230._fU52)
    {
        sub_29504( 0, 1 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    }
    if (NOT l_U258)
    {
        if (GET_CUTSCENE_TIME_MS() >= 8900)
        {
            sub_422( "CR", "Playing audio music one shot PANAMA_OS_6", 0 );
            AUDIO_MUSIC_PLAY_ONESHOT();
            l_U258 = 1;
        }
    }
    return;
}

void sub_29504(int iParam0, int iParam1)
{
    sub_422( "MF", "P_GLOBAL_CREATE_LOCKS start", "###" );
    sub_29565( g_U4167 );
    g_U4167 = sub_29634( g_U1583, g_U4168, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U4167 ))
    {
        FREEZE_OBJECT_POSITION( g_U4167, 1 );
        if (iParam0 == 1)
        {
            PLAY_OBJECT_ANIM( g_U4167, "P_LockGate", "pa_doors", 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U4167, "P_LockGate", "pa_doors", 1.00000000 );
        }
    }
    sub_29565( g_U4171 );
    g_U4171 = sub_29634( g_U1583, g_U4172, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( g_U4171 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U4171, 1 );
        if (iParam1 == 1)
        {
            PLAY_OBJECT_ANIM( g_U4171, "P_LockGate", "pa_doors", 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U4171, "P_LockGate", "pa_doors", 1.00000000 );
        }
    }
    sub_422( "MF", "P_GLOBAL_CREATE_LOCKS end", "###" );
    return;
}

void sub_29565(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_29634(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_24428( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

int sub_30316()
{
    return 1;
}

void sub_30333()
{
    if (NOT (ISEQ_QUERY_STATE( -626525648, 3 )))
    {
        sub_30384( sub_876(), g_U980[9], g_U1086[9] );
        SNAP_PLAYER_TO_COVERPOINT( sub_898(), "pana_GP_Building", "Corner Position02", 0 );
        ISEQ_REGISTER_ENTITY( -626525648, "player", sub_876(), 0 );
        ISEQ_START( -626525648 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1158[9], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1122[9], 1065353216, 0 );
    }
    if (NOT (DOES_PED_EXIST( g_U3504 )))
    {
        sub_28066();
        ISEQ_REGISTER_ENTITY( -147860720, "Passos", g_U3504, 0 );
        ISEQ_START( -147860720 );
    }
    CAMERA_PLAY_ANIMATED( "LEVEL_S_PAN_CP_06", "B_OUT_MID_06_PANAMA_TWOHANDED_CAM", 0, 0, 0, 0, 0.00000000, 0, 0 );
    sub_30717();
    sub_31453();
    sub_32293();
    return;
}

void sub_30384(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_30717()
{
    int I;
    unknown uVar3;

    sub_422( "GA", "P_OB2_START_ENTRANCE_ENEMY_WAVE1 start", 0 );
    sub_30783( ref l_U1089 );
    for ( I = 0; I <= 1; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U1089[I] )))
        {
            if (NOT (IS_PED_DEAD( sub_876() )))
            {
                REGISTER_TARGET( l_U1089[I], sub_876() );
                SET_LOCKED_TARGET( l_U1089[I], sub_876() );
            }
        }
    }
    if (NOT (IS_PED_DEAD( l_U1089[0] )))
    {
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -114.96000000, 29.29000000, 7.91000000, sub_876(), 1, 3.00000000, 12.00000000, -1082130432, 3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_MOVE_TO_COVER( 0, "pana_GP_Building", "Corner Position34", sub_876() );
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( l_U1089[0], uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    if (NOT (IS_PED_DEAD( l_U1089[1] )))
    {
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -115.29000000, 23.34000000, 7.91000000, sub_876(), 1, 3.00000000, 12.00000000, -1082130432, 3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_MOVE_TO_COVER( 0, "pana_GP_Building", "Corner Position35", sub_876() );
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( l_U1089[1], uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    sub_422( "GA", "P_OB2_START_ENTRANCE_ENEMY_WAVE1 end", 0 );
    return;
}

void sub_30783(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_30814( (uParam0^)[I] );
    }
    return;
}

void sub_30814(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_31453()
{
    unknown uVar2;

    sub_422( "GA", "P_OB2_CREATE_PLACEMENTS start", 0 );
    l_U531[0] = CREATE_AMMOBAG_PLACEMENT_ROTATE( -67.42000000, 24.46000000, 8.62000000, 0.00000000, 0.00000000, 1.20000000, 10.00000000, 3.00000000, 0, 90.00000000 );
    SET_AMMOBAG_REGEN_TIME( l_U531[0], 10.00000000 );
    SET_AMMOBAG_REGEN_RANGE( l_U531[0], 3.00000000 );
    SET_AMMOBAG_AMMO_AMOUNT( l_U531[0], -1088031219, 45 );
    SET_AMMOBAG_AMMO_AMOUNT( l_U531[0], 1138793073, 95 );
    SET_AMMOBAG_AMMO_AMOUNT( l_U531[0], -1295933220, 30 );
    SET_AMMOBAG_AMMO_AMOUNT( l_U531[0], -1383321053, 85 );
    SET_AMMOBAG_ENABLED( l_U531[0], 1 );
    l_U531[1] = CREATE_AMMOBAG_PLACEMENT_ROTATE( -81.90000000, 24.00000000, 8.62000000, 0.00000000, 0.00000000, -0.50000000, 10.00000000, 3.00000000, 0, 90.00000000 );
    SET_AMMOBAG_REGEN_TIME( l_U531[1], 10.00000000 );
    SET_AMMOBAG_REGEN_RANGE( l_U531[1], 3.00000000 );
    SET_AMMOBAG_AMMO_AMOUNT( l_U531[1], -1088031219, 45 );
    SET_AMMOBAG_AMMO_AMOUNT( l_U531[1], 1138793073, 95 );
    SET_AMMOBAG_AMMO_AMOUNT( l_U531[1], -1295933220, 30 );
    SET_AMMOBAG_AMMO_AMOUNT( l_U531[1], -1383321053, 85 );
    SET_AMMOBAG_ENABLED( l_U531[1], 1 );
    l_U531[2] = sub_27774( 280965399, -67.57000000, 24.90000000, 8.65000000, 1.50000000, 0.00000000, 12.00000000, 0, 0, 0, 1119092736 );
    l_U531[3] = sub_27774( 280965399, -82.00000000, 23.25000000, 8.65000000, -1.50000000, 0.00000000, 3.75000000, 0, 0, 0, 1119092736 );
    l_U531[4] = sub_27774( -4072149, -117.25000000, 30.50000000, 9.13000000, 0.00000000, 0.00000000, 179.10000000, 1, 0, 1, 90.00000000 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U531[4], ref g_U3384 );
    uVar2 = GET_PICKUP_FROM_PLACEMENT( l_U531[2] );
    if (DOES_PICKUP_EXIST( uVar2 ))
    {
        ENABLE_PICKUP_ATTACHMENT( uVar2, 12, 1 );
        TOGGLE_PICKUP_ATTACHMENT( uVar2, 12, 1 );
        SET_PICKUP_AMMO( uVar2, 180 );
    }
    uVar2 = GET_PICKUP_FROM_PLACEMENT( l_U531[3] );
    if (DOES_PICKUP_EXIST( uVar2 ))
    {
        ENABLE_PICKUP_ATTACHMENT( uVar2, 12, 1 );
        TOGGLE_PICKUP_ATTACHMENT( uVar2, 12, 1 );
        SET_PICKUP_AMMO( uVar2, 180 );
    }
    sub_422( "GA", "P_OB2_CREATE_PLACEMENTS end", 0 );
    return;
}

void sub_32293()
{
    sub_32307( ref g_U4163 );
    g_U4163[0] = sub_29634( g_U1575, -109.00000000, 0.00000000, 15.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U4163[0] ))
    {
        FREEZE_OBJECT_POSITION( g_U4163[0], 1 );
    }
    g_U4163[1] = sub_29634( g_U1577, -109.71800000, 20.33680000, 17.56990000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U4163[1] ))
    {
        FREEZE_OBJECT_POSITION( g_U4163[1], 1 );
    }
    g_U4163[2] = sub_29634( g_U1579, -109.70000000, 20.00000000, 16.70000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U4163[2] ))
    {
        FREEZE_OBJECT_POSITION( g_U4163[2], 1 );
    }
    return;
}

void sub_32307(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_29565( (uParam0^)[I] );
    }
    return;
}

int sub_32642()
{
    if (l_U230._fU52)
    {
        DO_SCREEN_FADE_IN( 0 );
    }
    sub_32685( ref l_U1089, -1054867456, 0, 1 );
    if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_PAN_CP_06", "B_OUT_MID_06_PANAMA_TWOHANDED_CAM" )) - 1))
    {
        sub_422( "GA", "Ending MID_06 blendout animated camera in a freeze frame.", 0 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1158[9], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1122[9], 1065353216, 0 );
        CAMERA_FREEZE_FRAME( 1, 500, 0, 0 );
        return 1;
    }
    return 0;
}

void sub_32685(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_32722( (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_32722(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                sub_7384( uParam0 );
            }
        }
    }
    return;
}

void sub_33051(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_422( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return sub_33176( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 33136, 33154, uParam8 );
}

void sub_33136()
{
    return;
}

int sub_33154()
{
    return 1;
}

void sub_33176(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_33477(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_422( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_422( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_422( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_422( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_422( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_422( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_22076( iParam0->_fU0, 0 );
            sub_422( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_1408( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_1408( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_422( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_34718( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_1408( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_1890( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_1890( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_34718(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_876() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_876(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_876(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_876(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_876(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_876(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_35223(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_422( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_422( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_10825( iParam1 );
        sub_35482( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_35933( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_35933( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_36165( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_35933( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_36165( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_36165( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_35933( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_36165( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_36165( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_36165( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_35933( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_36165( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_36165( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_36165( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_36165( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_37723( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_422( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_35482(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_8189( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_422( "TEH", "Ending context", 0 );
        sub_422( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_35933(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_36165(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_37723(int iParam0)
{
    sub_9842( "CHECKPOINT DATA" );
    sub_37762( iParam0->_fU4 );
    sub_37785( iParam0->_fU16 );
    sub_37785( iParam0->_fU20 );
    sub_37785( iParam0->_fU24 );
    sub_37828( iParam0->_fU28 );
    sub_37828( iParam0->_fU56 );
    sub_37828( iParam0->_fU60 );
    sub_37828( iParam0->_fU64 );
    sub_37828( iParam0->_fU68 );
    sub_37828( iParam0->_fU72 );
    sub_37828( iParam0->_fU76 );
    sub_37828( iParam0->_fU80 );
    sub_37828( iParam0->_fU84 );
    sub_37828( iParam0->_fU88 );
    sub_37828( iParam0->_fU92 );
    sub_37785( iParam0->_fU32 );
    sub_37828( iParam0->_fU36 );
    sub_37828( iParam0->_fU40 );
    sub_37828( iParam0->_fU44 );
    sub_37785( iParam0->_fU136 );
    sub_38033( iParam0->_fU140 );
    sub_37828( iParam0->_fU52 );
    sub_9842( "---nRightHolsterAttachmentEnabled: " );
    sub_37828( iParam0->_fU96 );
    sub_9842( "---nRightHolsterAttachmentToggled: " );
    sub_37828( iParam0->_fU100 );
    sub_9842( "---nLeftHolsterAttachmentEnabled: " );
    sub_37828( iParam0->_fU104 );
    sub_9842( "---nLeftHolsterAttachmentToggled: " );
    sub_37828( iParam0->_fU108 );
    sub_9842( "---nRifleHolsterAttachmentEnabled: " );
    sub_37828( iParam0->_fU112 );
    sub_9842( "---nRifleHolsterAttachmentToggled: " );
    sub_37828( iParam0->_fU116 );
    sub_9842( "---nRightHandAttachmentEnabled: " );
    sub_37828( iParam0->_fU120 );
    sub_9842( "---nRightHandAttachmentToggled: " );
    sub_37828( iParam0->_fU124 );
    sub_9842( "---nLeftHandAttachmentEnabled: " );
    sub_37828( iParam0->_fU128 );
    sub_9842( "---nLeftHandAttachmentToggled: " );
    sub_37828( iParam0->_fU132 );
    sub_37828( l_U1 );
    sub_37828( 144 );
    return;
}

void sub_37762(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_37785(unknown uParam0)
{
    return;
}

void sub_37828(unknown uParam0)
{
    return;
}

void sub_38033(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_39073()
{
    sub_422( "CR", "P_GBL_REFRESH_PAYNE_KILLER_COUNT - START", 0 );
    g_U4062 = GET_PAYNEKILLER_AMT();
    sub_422( "CR", "P_GBL_REFRESH_PAYNE_KILLER_COUNT - END", 0 );
    return;
}

void sub_39242(float fParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( sub_876() )))
    {
        if (NOT (IS_PED_DEAD( g_U3504 )))
        {
            if (NOT l_U559)
            {
                if ((NOT ((PED_GET_ACTION_INTENTION_STATUS( g_U3504, 47 )) == 3)) AND ((PED_GET_ACTION_INTENTION_STATUS( g_U3504, 47 )) == 1))
                {
                    if ((sub_39351( g_U3504, sub_876(), 0 )) <= fParam0)
                    {
                        l_U559 = 1;
                        TASK_LOOK_AT_PED( g_U3504, sub_876(), uParam1, 68 );
                    }
                }
            }
            else if ((sub_39351( g_U3504, sub_876(), 0 )) > fParam0)
            {
                l_U559 = 0;
                TASK_CLEAR_LOOK_AT( g_U3504 );
            }
        }
    }
    return;
}

void sub_39351(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    }
    if (bParam2)
    {
        return VDIST( uVar5, uVar8 );
        break;
    }
    return VDIST( uVar5._fU0, uVar5._fU4, 0, uVar8._fU0, uVar8._fU4, 0 );
}

void sub_39573()
{
    if (sub_4346( ref l_U550 ))
    {
        l_U559 = 0;
        TASK_CLEAR_LOOK_AT( g_U3504 );
        PED_SET_ACTION_INTENTION( g_U3504, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
        sub_1198( ref l_U550, GET_RANDOM_INT_IN_RANGE( 4000, 6000 ), 1, 0 );
        sub_1626( ref l_U550 );
    }
    return;
}

void sub_39689()
{
    int iVar2;

    if ((NOT (IS_ANY_SPEECH_PLAYING( sub_876() ))) AND ((NOT (IS_ANY_SPEECH_PLAYING( g_U3504 ))) AND (IS_PED_TOUCHING_PED( sub_876(), g_U3504 ))))
    {
        if ((l_U783._fU16) AND (sub_4346( ref l_U783 )))
        {
            sub_39775( ref l_U792 );
            if (NOT (IS_PED_DEAD( sub_876() )))
            {
                sub_39875( 0, sub_876(), "MAX", ref l_U792, 2, 0 );
            }
            if (NOT (IS_PED_DEAD( g_U3504 )))
            {
                sub_39875( 1, g_U3504, "PASSOS", ref l_U792, 2, 0 );
            }
            sub_40135( "SPAN_PBTP", ref l_U792, 8, 1 );
            sub_1198( ref l_U783, GET_RANDOM_INT_IN_RANGE( l_U601, l_U602 ), 1, 0 );
            sub_1626( ref l_U783 );
            sub_422( "CR", "Passos Dialogue - SPAN_PBTP - Lines from Passos if the player bumps into him", 0 );
        }
    }
    if ((NOT (IS_ANY_SPEECH_PLAYING( sub_876() ))) AND ((NOT (IS_ANY_SPEECH_PLAYING( g_U3504 ))) AND ((IS_CONTROL_PRESSED( 0, 6 )) AND (IS_PED_IN_CROSSHAIR_CYLINDER( g_U3504, l_U822, 100.00000000, 1, -1082130432 )))))
    {
        if ((l_U783._fU16) AND (sub_4346( ref l_U783 )))
        {
            sub_39775( ref l_U802 );
            if (NOT (IS_PED_DEAD( sub_876() )))
            {
                sub_39875( 0, sub_876(), "MAX", ref l_U802, 2, 0 );
            }
            if (NOT (IS_PED_DEAD( g_U3504 )))
            {
                sub_39875( 1, g_U3504, "PASSOS", ref l_U802, 2, 0 );
            }
            sub_40135( "SPAN_LPAH", ref l_U802, 8, 1 );
            sub_1198( ref l_U783, GET_RANDOM_INT_IN_RANGE( l_U601, l_U602 ), 1, 0 );
            sub_1626( ref l_U783 );
            sub_422( "CR", "Passos Dialogue - SPAN_LPAH - Lines from Passos if the player aims at him", 0 );
        }
    }
    iVar2 = nil;
    if ((NOT (IS_ANY_SPEECH_PLAYING( sub_876() ))) AND ((NOT (IS_ANY_SPEECH_PLAYING( g_U3504 ))) AND ((iVar2 == sub_876()) AND (HAS_BULLET_IMPACTED_IN_AREA( sub_41386( g_U3504 ), 3.00000000, ref iVar2 )))))
    {
        if ((l_U783._fU16) AND (sub_4346( ref l_U783 )))
        {
            sub_39775( ref l_U812 );
            if (NOT (IS_PED_DEAD( sub_876() )))
            {
                sub_39875( 0, sub_876(), "MAX", ref l_U812, 2, 0 );
            }
            if (NOT (IS_PED_DEAD( g_U3504 )))
            {
                sub_39875( 1, g_U3504, "PASSOS", ref l_U812, 2, 0 );
            }
            sub_40135( "SPAN_LPFPS", ref l_U812, 8, 1 );
            sub_1198( ref l_U783, GET_RANDOM_INT_IN_RANGE( l_U601, l_U602 ), 1, 0 );
            sub_1626( ref l_U783 );
            sub_422( "CR", "Passos Dialogue - SPAN_LPFPS - Lines from Passos if the player shoots at him", 0 );
        }
    }
    if (IS_PED_USING_MP3_COVER_TASK( sub_876() ))
    {
        l_U833 = 1;
    }
    if ((NOT (IS_ANY_SPEECH_PLAYING( sub_876() ))) AND ((NOT (IS_ANY_SPEECH_PLAYING( g_U3504 ))) AND ((NOT (IS_PED_USING_MP3_COVER_TASK( sub_876() ))) AND (l_U833))))
    {
        if ((l_U783._fU16) AND (sub_4346( ref l_U783 )))
        {
            sub_39775( ref l_U823 );
            if (NOT (IS_PED_DEAD( sub_876() )))
            {
                sub_39875( 0, sub_876(), "MAX", ref l_U823, 2, 0 );
            }
            if (NOT (IS_PED_DEAD( g_U3504 )))
            {
                sub_39875( 1, g_U3504, "PASSOS", ref l_U823, 2, 0 );
            }
            sub_40135( "SPAN_LPPSC", ref l_U823, 8, 1 );
            l_U833 = 0;
            sub_1198( ref l_U783, GET_RANDOM_INT_IN_RANGE( l_U601, l_U602 ), 1, 0 );
            sub_1626( ref l_U783 );
            sub_422( "CR", "Passos Dialogue - SPAN_LPPSC - Lines from Passos if player stands out of cover", 0 );
        }
    }
    if (IS_LAST_MAN_STANDING_ACTIVE())
    {
        l_U844 = 1;
    }
    if ((NOT (IS_ANY_SPEECH_PLAYING( sub_876() ))) AND ((NOT (IS_ANY_SPEECH_PLAYING( g_U3504 ))) AND ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (l_U844))))
    {
        if ((l_U783._fU16) AND (sub_4346( ref l_U783 )))
        {
            sub_39775( ref l_U834 );
            if (NOT (IS_PED_DEAD( sub_876() )))
            {
                sub_39875( 0, sub_876(), "MAX", ref l_U834, 2, 0 );
            }
            if (NOT (IS_PED_DEAD( g_U3504 )))
            {
                sub_39875( 1, g_U3504, "PASSOS", ref l_U834, 2, 0 );
            }
            sub_40135( "SPAN_LPPFL", ref l_U834, 8, 1 );
            l_U844 = 0;
            sub_1198( ref l_U783, GET_RANDOM_INT_IN_RANGE( l_U601, l_U602 ), 1, 0 );
            sub_1626( ref l_U783 );
            sub_422( "CR", "Passos Dialogue - SPAN_LPPFL - Lines from Passos if Max pulls off a last man standing", 0 );
        }
    }
    if ((NOT (IS_ANY_SPEECH_PLAYING( sub_876() ))) AND ((NOT (IS_ANY_SPEECH_PLAYING( g_U3504 ))) AND (IS_PED_SHOOTING( g_U3504 ))))
    {
        if ((l_U783._fU16) AND (sub_4346( ref l_U783 )))
        {
            sub_39775( ref l_U845 );
            if (NOT (IS_PED_DEAD( sub_876() )))
            {
                sub_39875( 0, sub_876(), "MAX", ref l_U845, 2, 0 );
            }
            if (NOT (IS_PED_DEAD( g_U3504 )))
            {
                sub_39875( 1, g_U3504, "PASSOS", ref l_U845, 2, 0 );
            }
            sub_40135( "SPAN_LPSAE", ref l_U845, 8, 1 );
            sub_1198( ref l_U783, GET_RANDOM_INT_IN_RANGE( l_U601, l_U602 ), 1, 0 );
            sub_1626( ref l_U783 );
            sub_422( "CR", "Passos Dialogue - SPAN_LPSAE - Short lines from Passos as he shoots at the enemy", 0 );
        }
    }
    if ((NOT (IS_ANY_SPEECH_PLAYING( sub_876() ))) AND ((sub_4346( ref l_U865 )) AND (NOT (IS_ANY_SPEECH_PLAYING( g_U3504 )))))
    {
        sub_39775( ref l_U855 );
        if (NOT (IS_PED_DEAD( sub_876() )))
        {
            sub_39875( 0, sub_876(), "MAX", ref l_U855, 2, 0 );
        }
        if (NOT (IS_PED_DEAD( g_U3504 )))
        {
            sub_39875( 1, g_U3504, "PASSOS", ref l_U855, 2, 0 );
        }
        sub_40135( "SPAN_LPMTL", ref l_U855, 8, 1 );
        sub_422( "CR", "Passos Dialogue - SPAN_LPMTL - Short lines from Passos as they move through the level", 0 );
    }
    if ((NOT (IS_ANY_SPEECH_PLAYING( sub_876() ))) AND ((NOT (IS_ANY_SPEECH_PLAYING( g_U3504 ))) AND (l_U884)))
    {
        sub_39775( ref l_U874 );
        if (NOT (IS_PED_DEAD( sub_876() )))
        {
            sub_39875( 0, sub_876(), "MAX", ref l_U874, 2, 0 );
        }
        if (NOT (IS_PED_DEAD( g_U3504 )))
        {
            sub_39875( 1, g_U3504, "PASSOS", ref l_U874, 2, 0 );
        }
        sub_40135( "SPAN_PSHMM", ref l_U874, 8, 1 );
        l_U884 = 0;
        sub_422( "CR", "Passos Dialogue - SPAN_PSHMM - Passos says he's making a move", 0 );
    }
    if ((NOT (IS_ANY_SPEECH_PLAYING( sub_876() ))) AND ((NOT (IS_ANY_SPEECH_PLAYING( g_U3504 ))) AND (l_U895)))
    {
        sub_39775( ref l_U885 );
        if (NOT (IS_PED_DEAD( sub_876() )))
        {
            sub_39875( 0, sub_876(), "MAX", ref l_U885, 2, 0 );
        }
        if (NOT (IS_PED_DEAD( g_U3504 )))
        {
            sub_39875( 1, g_U3504, "PASSOS", ref l_U885, 2, 0 );
        }
        sub_40135( "SPAN_PSUTS", ref l_U885, 8, 1 );
        sub_422( "CR", "Passos Dialogue - SPAN_PSUTS - Passos indicates to head up the stairs", 0 );
    }
    return;
}

void sub_39775(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_39875(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_40135(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_40159( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_40159(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_40214( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_40214(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_40249( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_40743( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_40249(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_40743(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

vector sub_41386(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return "[dynamic result, ret vals = 3]";
        break;
        GET_PED_COORDS( uParam0 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        break;
    }
    return vector( 0, 0, 0);
}

void sub_43522()
{
    if (NOT (sub_5496( ref g_U4052 )))
    {
        sub_43556( ref g_U4052, g_U4061 );
    }
    if (((g_U4052._fU16) || (sub_4346( ref g_U4052 ))) AND (sub_43592()))
    {
        sub_422( "MF", "Playing Speech: SPAN_MXFNDS1", 0 );
        sub_43797( ref g_U4067, ref g_U1246 );
        sub_4862( ref g_U4052 );
    }
    return;
}

void sub_43556(unknown uParam0, unknown uParam1)
{
    sub_1198( uParam0, uParam1, 1, 0 );
    sub_1626( uParam0 );
    return;
}

int sub_43592()
{
    if (GET_PAYNEKILLER_AMT() > g_U4062)
    {
        sub_422( "CR", "Player picked up Payne Killers!", 0 );
        sub_37828( g_U4062 );
        sub_37828( GET_PAYNEKILLER_AMT() );
        g_U4062 = GET_PAYNEKILLER_AMT();
        return 1;
    }
    g_U4062 = GET_PAYNEKILLER_AMT();
    return 0;
}

void sub_43797(unknown uParam0, unknown uParam1)
{
    sub_39775( uParam1 );
    sub_39875( 0, sub_876(), "MAX", uParam1, 2, 0 );
    sub_39875( 1, sub_876(), "MAX", uParam1, 2, 0 );
    sub_40135( uParam0, uParam1, 8, 1 );
    return;
}

void sub_43918()
{
    sub_422( "CR", "P_OB2_PLAY_SPEECH_VIG1502 start", 0 );
    sub_39775( ref l_U763 );
    if (NOT (IS_PED_DEAD( sub_876() )))
    {
        sub_39875( 0, sub_876(), "MAX", ref l_U763, 2, 0 );
    }
    if (NOT (IS_PED_DEAD( g_U3504 )))
    {
        sub_39875( 1, g_U3504, "PASSOS", ref l_U763, 2, 0 );
    }
    if (NOT (IS_ANY_SPEECH_PLAYING( sub_876() )))
    {
        sub_40135( "SPAN_VIG15", ref l_U763, 8, 1 );
    }
    sub_422( "CR", "P_OB2_PLAY_SPEECH_VIG1502 end", 0 );
    return;
}

void sub_44189(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_44207( sub_876(), uParam0 );
}

int sub_44207(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_44293()
{
    sub_422( "GA", "P_OB2_PLAY_SPEECH_VIG13 start", 0 );
    sub_39775( ref l_U591 );
    if (NOT (IS_PED_DEAD( sub_876() )))
    {
        sub_39875( 0, sub_876(), "MAX", ref l_U591, 2, 0 );
    }
    if (NOT (IS_PED_DEAD( g_U3504 )))
    {
        sub_39875( 1, g_U3504, "PASSOS", ref l_U591, 2, 0 );
    }
    if (NOT (IS_ANY_SPEECH_PLAYING( sub_876() )))
    {
        sub_40135( "SPAN_VIG13", ref l_U591, 8, 1 );
    }
    sub_422( "GA", "P_OB2_PLAY_SPEECH_VIG13 end", 0 );
    return;
}

void sub_44555(int iParam0, unknown uParam1)
{
    if (iParam0->_fU548)
    {
        return 0;
    }
    else
    {
        iParam0->_fU548 = sub_44590( iParam0, uParam1 );
    }
    return iParam0->_fU548;
}

void sub_44590(int iParam0, unknown uParam1)
{
    int Result;
    int I;
    int J;

    Result = 0;
    if (NOT (IS_PED_DEAD( sub_876() )))
    {
        for ( I = 0; I < iParam0->_fU508; I++ )
        {
            if (sub_44189( iParam0->_fU0[I] ))
            {
                Result = 1;
            }
        }
    }
    if ((uParam1) AND (Result))
    {
        for ( J = 0; J < iParam0->_fU508; J++ )
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( ref iParam0->_fU0[J]._fU0, 0 );
        }
    }
    iParam0->_fU548 = 1;
    return Result;
}

void sub_44854(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

int sub_45031()
{
    switch (l_U897)
    {
        case 1:
        sub_1408( 1, 0, 0, 1 );
        if (l_U603 == 1)
        {
            sub_2916( ref l_U898, -97.81000000, 29.53000000, 9.84000000, -12.13000000, 0.00000000, 100.48000000, 45.00000000, 0 );
            sub_2916( ref l_U929, -100.57000000, 29.03000000, 9.25000000, -15.64000000, 0.00000000, 104.27000000, 45.00000000, l_U960 - 2000 );
        }
        else if (l_U603 == 2)
        {
            sub_2916( ref l_U898, -116.58000000, 24.73000000, 10.08000000, -9.08000000, 0.00000000, -77.25000000, 45.00000000, 0 );
            sub_2916( ref l_U929, -113.59000000, 25.42000000, 9.38000000, -22.66000000, 0.00000000, -75.49000000, 45.00000000, l_U960 - 2000 );
        }
        else if (l_U603 == 3)
        {
            sub_2916( ref l_U898, -112.29000000, 26.29000000, 9.86000000, -9.07000000, 0.00000000, 64.82000000, 45.00000000, 0 );
            sub_2916( ref l_U929, -115.13000000, 27.74000000, 9.20000000, -12.92000000, 0.00000000, 58.14000000, 45.00000000, l_U960 - 2000 );
        }
        else if (l_U603 == 4)
        {
            sub_2916( ref l_U898, -123.72000000, 23.14000000, 12.58000000, -20.53000000, 0.00000000, -86.48000000, 45.00000000, 0 );
            sub_2916( ref l_U929, -121.38000000, 23.29000000, 11.71000000, -32.54000000, 0.00000000, -86.48000000, 45.00000000, l_U960 - 2000 );
        }
        else if (l_U603 == 5)
        {
            sub_2916( ref l_U898, -125.53000000, 30.22000000, 14.69000000, -20.80000000, 0.00000000, -172.54000000, 45.00000000, 0 );
            sub_2916( ref l_U929, -125.10000000, 26.93000000, 13.43000000, -30.19000000, 0.00000000, -172.54000000, 45.00000000, l_U960 - 2000 );
        }
        else if (l_U603 == 6)
        {
            sub_2916( ref l_U898, -121.79000000, 23.19000000, 17.41000000, -15.31000000, 0.00000000, -37.08000000, 45.00000000, 0 );
            sub_2916( ref l_U929, -119.96000000, 25.29000000, 16.68000000, -19.24000000, 0.00000000, -19.50000000, 45.00000000, l_U960 - 2000 );
        }
        else if (l_U603 == 7)
        {
            sub_2916( ref l_U898, -119.25000000, 29.90000000, 18.07000000, -22.80000000, 0.00000000, -111.36000000, 45.00000000, 0 );
            sub_2916( ref l_U929, -117.13000000, 29.04000000, 16.66000000, -30.50000000, 0.00000000, -118.08000000, 45.00000000, l_U960 - 2000 );
        };;;;;;;
        sub_3917( ref l_U898, ref l_U929, l_U960, 1, 1 );
        sub_43556( ref l_U506, l_U515 );
        AUDIO_MUSIC_SUSPEND( 4000 );
        SHAKE_CAM( l_U898._fU0, "HAND_SHAKE", 4.00000000 );
        SHAKE_CAM( l_U929._fU0, "HAND_SHAKE", 4.00000000 );
        PED_SET_ACTION_INTENTION( g_U3504, 49, 1000, 0.00000000, 0.00000000, 0.00000000 );
        l_U897 = 2;
        break;
        case 2:
        if (sub_4346( ref l_U506 ))
        {
            if (NOT (IS_PED_DEAD( g_U3504 )))
            {
                SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U3504, 0 );
                SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U3504, 65488, 0.00000000, 0.15000000, 0.00000000 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U3504, 65488, 0.00000000, 0.00000000, 0.00000000 ), 99, 1, 1308526797, 0 );
                SHAKE_CAM( l_U898._fU0, "SMALL_EXPLOSION_SHAKE", 0.30000000 );
                SHAKE_CAM( l_U929._fU0, "SMALL_EXPLOSION_SHAKE", 0.30000000 );
            }
        }
        if (sub_5013( ref l_U929, 1 ))
        {
            l_U897 = 5;
        }
        break;
    }
    if (l_U897 == 5)
    {
        return 1;
        break;
    }
    return 0;
}

void sub_46412()
{
    sub_422( "GA", "P_OB2_START_PASSOS_MOVING start", 0 );
    ISEQ_REGISTER_ENTITY( 158168971, "Passos", g_U3504, 0 );
    ISEQ_START( 158168971 );
    l_U560 = 1;
    TASK_CLEAR_LOOK_AT( g_U3504 );
    sub_1626( ref l_U701 );
    sub_422( "GA", "P_OB2_START_PASSOS_MOVING end", 0 );
    return;
}

void sub_46607(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

void sub_46643()
{
    if (NOT (IS_PED_DEAD( g_U3504 )))
    {
        switch (l_U603)
        {
            case 2:
            if (sub_4346( ref l_U701 ))
            {
                sub_46745();
            }
            if (NOT l_U604)
            {
                if (sub_44189( l_U607 ))
                {
                    sub_422( "CR", "The Player ped triggered the tbBuildingMidStairs trigger.", 0 );
                    AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_1_3_6", "PANAMA_FINAL_1_3_6", 0, -1, -1, -1082130432, 0 );
                    sub_422( "CR", "MUSIC: Playing PANAMA_FINAL Mood: PANAMA_FINAL_1_3_6", 0 );
                    l_U604 = 1;
                }
                if (NOT l_U720)
                {
                    if ((PED_GET_ACTION_INTENTION_STATUS( g_U3504, 54 )) == 1)
                    {
                        sub_47416();
                        l_U720 = 1;
                    }
                }
            }
            if (l_U560)
            {
                if ((NOT ((PED_GET_ACTION_INTENTION_STATUS( g_U3504, 54 )) == 3)) AND ((PED_GET_ACTION_INTENTION_STATUS( g_U3504, 54 )) == 1))
                {
                    sub_422( "CCB", "The piPassos is finished moving...", 0 );
                    TASK_LOOK_AT_PED( g_U3504, sub_876(), -1, 68 );
                    l_U560 = 0;
                }
            }
            if (l_U604)
            {
                if ((PED_GET_ACTION_INTENTION_STATUS( g_U3504, 54 )) == 1)
                {
                    l_U559 = 0;
                    sub_422( "CCB", "Clearing the piPassos ped's TASK_LOOK_AT...", 0 );
                    TASK_CLEAR_LOOK_AT( g_U3504 );
                    sub_422( "CCB", "Setting the piPassos ped to the ACT_INT_SEQ_ACTION06.", 0 );
                    PED_SET_ACTION_INTENTION( g_U3504, 52, 1000, 0.00000000, 0.00000000, 0.00000000 );
                    sub_422( "CCB", "The piPassos ped is moving...", 0 );
                    l_U560 = 1;
                    sub_422( "CCB", "ePassosEvent - STATE_COMPANION_BOTTOM_STAIRS", 0 );
                    l_U603 = 3;
                }
            }
            break;
            case 3:
            if (NOT l_U605)
            {
                if (sub_44189( l_U628 ))
                {
                    sub_422( "CCB", "The Player ped triggered the tbBuilding3rdStairs trigger.", 0 );
                }
            }
            if (l_U560)
            {
                if ((NOT ((PED_GET_ACTION_INTENTION_STATUS( g_U3504, 52 )) == 3)) AND ((PED_GET_ACTION_INTENTION_STATUS( g_U3504, 52 )) == 1))
                {
                    sub_422( "CCB", "The piPassos is finished moving...", 0 );
                    TASK_LOOK_AT_PED( g_U3504, sub_876(), -1, 68 );
                    l_U560 = 0;
                }
            }
            if (l_U605)
            {
                if ((PED_GET_ACTION_INTENTION_STATUS( g_U3504, 52 )) == 1)
                {
                    l_U559 = 0;
                    sub_422( "CCB", "Clearing the piPassos ped's TASK_LOOK_AT...", 0 );
                    TASK_CLEAR_LOOK_AT( g_U3504 );
                    sub_422( "CCB", "Setting the piPassos ped to the ACT_INT_SEQ_ACTION07.", 0 );
                    PED_SET_ACTION_INTENTION( g_U3504, 53, 1000, 0.00000000, 0.00000000, 0.00000000 );
                    sub_422( "CCB", "The piPassos ped is moving...", 0 );
                    l_U560 = 1;
                    sub_422( "CCB", "ePassosEvent - STATE_COMPANION_3RD_STAIRS", 0 );
                    l_U603 = 5;
                }
            }
            break;
            case 5:
            if (NOT l_U606)
            {
                if (sub_44189( l_U649 ))
                {
                    sub_422( "CCB", "The Player ped triggered the tbBuildingTopStairs trigger.", 0 );
                    l_U606 = 1;
                }
            }
            if ((PED_GET_ACTION_INTENTION_STATUS( g_U3504, 53 )) == 1)
            {
                sub_422( "CCB", "The piPassos is finished moving...", 0 );
                l_U560 = 0;
                TASK_LOOK_AT_PED( g_U3504, sub_876(), -1, 68 );
                sub_422( "CCB", "ePassosEvent - STATE_COMPANION_TOP_STAIRS", 0 );
                l_U603 = 6;
            }
            break;
            case 6:
            if (sub_44189( l_U670 ))
            {
                sub_422( "CCB", "ePassosEvent - STATE_COMPANION_TOP_FLOOR", 0 );
                l_U603 = 7;
            }
            break;
            case 7:
            if ((NOT (sub_49062( l_U741 ))) AND ((IS_PED_DEAD( g_U3516 )) AND ((IS_PED_DEAD( g_U3515 )) AND (NOT l_U762))))
            {
                sub_49169();
                l_U762 = 1;
            }
            break;
            case 8: break;
        }
    }
    return;
}

void sub_46745()
{
    sub_422( "GA", "P_OB2_PLAY_SPEECH_VIG15A start", 0 );
    sub_46804( ref l_U591, 0 );
    sub_39775( ref l_U691 );
    if (NOT (IS_PED_DEAD( sub_876() )))
    {
        sub_39875( 0, sub_876(), "MAX", ref l_U691, 2, 0 );
    }
    if (NOT (IS_PED_DEAD( g_U3504 )))
    {
        sub_39875( 1, g_U3504, "PASSOS", ref l_U691, 2, 0 );
    }
    if (NOT (IS_ANY_SPEECH_PLAYING( sub_876() )))
    {
        sub_40135( "SPAN_VIG15A", ref l_U691, 8, 1 );
    }
    sub_422( "GA", "P_OB2_PLAY_SPEECH_VIG15A end", 0 );
    return;
}

void sub_46804(int iParam0, unknown uParam1)
{
    if (NOT (sub_46818( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

boolean sub_46818(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_47416()
{
    sub_422( "GA", "P_OB2_PLAY_SPEECH_VIG15B start", 0 );
    sub_39775( ref l_U710 );
    if (NOT (IS_PED_DEAD( sub_876() )))
    {
        sub_39875( 0, sub_876(), "MAX", ref l_U710, 2, 0 );
    }
    if (NOT (IS_PED_DEAD( g_U3504 )))
    {
        sub_39875( 1, g_U3504, "PASSOS", ref l_U710, 2, 0 );
    }
    if (NOT (IS_ANY_SPEECH_PLAYING( sub_876() )))
    {
        sub_40135( "SPAN_VIG15B", ref l_U710, 8, 1 );
    }
    sub_422( "GA", "P_OB2_PLAY_SPEECH_VIG15B end", 0 );
    return;
}

int sub_49062(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_46818( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

void sub_49169()
{
    sub_422( "GA", "P_OB2_PLAY_SPEECH_BI07 start", 0 );
    sub_39775( ref l_U752 );
    if (NOT (IS_PED_DEAD( sub_876() )))
    {
        sub_39875( 0, sub_876(), "MAX", ref l_U752, 2, 0 );
    }
    if (NOT (IS_PED_DEAD( g_U3504 )))
    {
        sub_39875( 1, g_U3504, "PASSOS", ref l_U752, 2, 0 );
    }
    if (NOT (IS_ANY_SPEECH_PLAYING( sub_876() )))
    {
        sub_40135( "SPAN_BI07", ref l_U752, 8, 1 );
    }
    sub_422( "GA", "P_OB2_PLAY_SPEECH_BI07 end", 0 );
    return;
}

void sub_49454()
{
    sub_422( "GA", "P_OB2_PLAY_SPEECH_VIG1501 start", 0 );
    sub_46804( ref l_U710, 0 );
    sub_39775( ref l_U721 );
    if (NOT (IS_PED_DEAD( sub_876() )))
    {
        sub_39875( 0, sub_876(), "MAX", ref l_U721, 2, 0 );
    }
    if (NOT (IS_PED_DEAD( g_U3504 )))
    {
        sub_39875( 1, g_U3504, "PASSOS", ref l_U721, 2, 0 );
    }
    if (NOT (IS_ANY_SPEECH_PLAYING( sub_876() )))
    {
        sub_40135( "SPAN_VIG1501", ref l_U721, 8, 1 );
    }
    sub_422( "GA", "P_OB2_PLAY_SPEECH_VIG1501 end", 0 );
    return;
}

int sub_49730(unknown uParam0)
{
    if ((IS_PED_DEAD( (uParam0^) )) AND (DOES_PED_EXIST( (uParam0^) )))
    {
        return 1;
    }
    return 0;
}

void sub_49944(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_44207( sub_876(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_50045()
{
    sub_422( "GA", "P_OB2_START_ENEMY_AT_TOP_OF_STAIRS start", 0 );
    g_U3515 = sub_24258( ref l_U1100 );
    sub_10171( g_U3515, 1308526797, 25000, 0, 0 );
    sub_25392( ref g_U3515, "AIT_NORMAL", 15, 20 );
    sub_25499( ref l_U1134, g_U3515, 1 );
    if (NOT (IS_PED_DEAD( g_U3515 )))
    {
        SET_ROOM_FOR_PED_BY_NAME( g_U3515, ref g_U3392 );
        SET_PED_ALERTNESS( g_U3515, 3 );
        SET_PED_AS_ONE_SHOT_KILL( g_U3515, 1 );
    }
    sub_422( "GA", "P_OB2_START_ENEMY_AT_TOP_OF_STAIRS end", 0 );
    return;
}

void sub_50320()
{
    unknown uVar2;

    sub_422( "CR", "P_OB2_START_ENEMY_IN_TOP_ROOM start", 0 );
    g_U3516 = sub_24258( ref l_U1135 );
    sub_10171( g_U3516, 1308526797, 25000, 0, 0 );
    sub_25392( ref g_U3516, "AIT_NORMAL", 3, 8 );
    sub_25499( ref l_U1134, g_U3516, 1 );
    if (NOT (IS_PED_DEAD( g_U3516 )))
    {
        SET_ROOM_FOR_PED_BY_NAME( g_U3516, "Pana_CntRoom" );
        SET_PED_AS_ONE_SHOT_KILL( g_U3516, 1 );
        SET_PED_ALERTNESS( g_U3516, 3 );
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -117.03580000, 24.91191000, 15.07060000, sub_876(), 1, 10, 20, -1, 2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( g_U3516, uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    sub_422( "CR", "P_OB2_START_ENEMY_IN_TOP_ROOM end", 0 );
    return;
}

void sub_50691()
{
    unknown uVar2;

    sub_422( "GA", "P_OB2_START_ENEMY_RUNNING_OUT_DOOR start", 0 );
    g_U3514 = sub_24258( ref l_U1169 );
    sub_10171( g_U3514, -184942895, 25000, 0, 0 );
    if (NOT (IS_PED_DEAD( g_U3514 )))
    {
        SET_ROOM_FOR_PED_BY_NAME( g_U3514, "Pana_CntRoom" );
        SET_PED_AS_ONE_SHOT_KILL( g_U3514, 1 );
        SET_PED_ALERTNESS( g_U3514, 3 );
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, -102.95000000, 23.00000000, 15.05000000, 4, 20000, 1048576000, 0, 0 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, -105.96000000, 21.24000000, 15.07000000, 4, 20000, 1048576000, 0, 0 );
        TASK_STAND_STILL( 0, -1 );
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( g_U3514, uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    sub_422( "GA", "P_OB2_START_ENEMY_RUNNING_OUT_DOOR end", 0 );
    return;
}

void sub_51122(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 = sub_44207( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

void sub_51363()
{
    sub_422( "CCB", "P_INITIALIZE_IMAGEFX_CP_10", 0 );
    sub_51418( ref l_U1203 );
    l_U1203[0]._fU4 = "INTERLACE_LIGHT";
    l_U1203[0]._fU12 = 0;
    l_U1203[0]._fU8 = 4;
    l_U1203[0]._fU32 = 0;
    l_U1203[1]._fU4 = "FLASH_TRICOLOR_03";
    l_U1203[1]._fU12 = 400;
    l_U1203[1]._fU20 = 1;
    l_U1203[1]._fU8 = 4;
    l_U1203[1]._fU32 = 0;
    l_U1203[2]._fU4 = "BLUR_ZOOM_LIGHT_FAST";
    l_U1203[2]._fU16 = 300;
    l_U1203[2]._fU8 = 4;
    l_U1203[2]._fU32 = 0;
    l_U1203[3]._fU4 = "DOUBLE_TINT_BLUE_FLASH";
    l_U1203[3]._fU12 = 800;
    l_U1203[3]._fU8 = 4;
    l_U1203[3]._fU32 = 0;
    l_U1203[4]._fU4 = "DOUBLE_MASK_INTERLACE_TWITCH_2";
    l_U1203[4]._fU12 = 1200;
    l_U1203[4]._fU8 = 4;
    l_U1203[4]._fU32 = 0;
    l_U1203[5]._fU4 = "DOUBLE_IMAGE_MASK_L_RED";
    l_U1203[5]._fU12 = 1900;
    l_U1203[5]._fU16 = 200;
    l_U1203[5]._fU8 = 4;
    l_U1203[5]._fU32 = 0;
    l_U140 = 0;
    return;
}

void sub_51418(unknown uParam0)
{
    int I;

    sub_422( "CO", "P_INIT_IMAGEFX", 0 );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU4 = "";
        (uParam0^)[I]._fU12 = 0;
        (uParam0^)[I]._fU16 = 0;
        (uParam0^)[I]._fU20 = 0;
        (uParam0^)[I]._fU24 = 0;
        (uParam0^)[I]._fU28 = 0;
        (uParam0^)[I]._fU32 = 1;
    }
    return;
}

int sub_52069(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, boolean bParam24, unknown uParam25)
{
    if (NOT (IS_PED_DEAD( sub_876() )))
    {
        if (((uParam0^) < 3) AND ((uParam0^) > 1))
        {
            if (NOT (sub_44189( uParam1 )))
            {
                sub_422( "CCB", "Resetting Cutscene Blend In...", 0 );
                sub_422( "CCB", "Disabling forced walk...", 0 );
                SET_PED_FORCED_TO_WALK( sub_876(), 0 );
                sub_422( "CCB", "Disabling forced run...", 0 );
                SET_PED_FORCED_TO_RUN( sub_876(), 0 );
                sub_422( "CCB", "Enabling shootdodge...", 0 );
                SET_PLAYER_CAN_USE_SHOOTDODGE( sub_898(), 1 );
                sub_422( "CCB", "Unloading cutscene...", 0 );
                CLEAR_NAMED_CUTSCENE( uParam22 );
                sub_422( "CCB", "eCutsceneBlendInRef - STATE_CUTSCENE_BLEND_IN_INIT", 0 );
                (uParam0^) = 0;
            }
        }
        switch ((uParam0^))
        {
            case 0:
            sub_1198( uParam23, 0, 1, 0 );
            sub_1626( uParam23 );
            sub_422( "CCB", "eCutsceneBlendInRef - STATE_CUTSCENE_BLEND_IN_TRIGGER", 0 );
            (uParam0^) = 1;
            break;
            case 1:
            if (sub_44189( uParam1 ))
            {
                if (NOT bParam24)
                {
                    sub_422( "CCB", "Enabling forced walk...", 0 );
                    SET_PED_FORCED_TO_WALK( sub_876(), 1 );
                }
                else
                {
                    sub_422( "CCB", "Enabling forced run...", 0 );
                    SET_PED_FORCED_TO_RUN( sub_876(), 1 );
                }
                sub_422( "CCB", "Disabling shootdodge...", 0 );
                SET_PLAYER_CAN_USE_SHOOTDODGE( sub_898(), 0 );
                if (NOT (CUTSCENE_IS_LOADED( uParam22 )))
                {
                    sub_422( "CCB", "Loading the cutscene...", 0 );
                    PRE_STREAM_SEAMLESS_CUTSCENE( uParam22 );
                }
                else
                {
                    sub_422( "CCB", "The cutscene is already loaded.", 0 );
                }
                sub_1198( uParam23, uParam25, 1, 0 );
                sub_1626( uParam23 );
                sub_422( "CCB", "eCutsceneBlendInRef - STATE_CUTSCENE_BLEND_IN_WAIT", 0 );
                (uParam0^) = 2;
            }
            break;
            case 2:
            if (sub_4346( uParam23 ))
            {
                sub_422( "CCB", "eCutsceneBlendInRef - STATE_CUTSCENE_BLEND_IN_COMPLETE", 0 );
                (uParam0^) = 3;
            }
            break;
            case 3:
            return 1;
            break;
        }
    }
    return 0;
}

void sub_53173(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

void sub_53412(unknown uParam0)
{
    int I;
    int J;

    switch (l_U140)
    {
        case 0:
        sub_422( "CO", "P_HANDLE_IMAGEFX", 0 );
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (uParam0^)[I]._fU32)
            {
                sub_1198( ref (uParam0^)[I]._fU36, (uParam0^)[I]._fU12, 1, 0 );
                sub_1626( ref (uParam0^)[I]._fU36 );
                if ((uParam0^)[I]._fU20 > 0)
                {
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        l_U140 = 1;
        break;
        case 1:
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (sub_4346( ref (uParam0^)[I]._fU36 ))
            {
                (uParam0^)[I]._fU0 = PLAY_IMAGEFX( (uParam0^)[I]._fU4, (uParam0^)[I]._fU8, (uParam0^)[I]._fU28 );
                if ((uParam0^)[I]._fU16 > 0)
                {
                    sub_1198( ref (uParam0^)[I]._fU72, (uParam0^)[I]._fU16, 1, 0 );
                    sub_1626( ref (uParam0^)[I]._fU72 );
                }
                if ((uParam0^)[I]._fU20 > 0)
                {
                    for ( J = I + 1; J <= (I + (uParam0^)[I]._fU20); J++ )
                    {
                        (uParam0^)[J]._fU0 = PLAY_IMAGEFX( (uParam0^)[J]._fU4, (uParam0^)[J]._fU8, (uParam0^)[I]._fU28 );
                        if ((uParam0^)[J]._fU16 > 0)
                        {
                            sub_1198( ref (uParam0^)[J]._fU72, (uParam0^)[J]._fU16, 1, 0 );
                            sub_1626( ref (uParam0^)[J]._fU72 );
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
            if (sub_4346( ref (uParam0^)[I]._fU72 ))
            {
                STOP_IMAGEFX( (uParam0^)[I]._fU0, (uParam0^)[I]._fU24 );
                (uParam0^)[I]._fU32 = 1;
                if ((uParam0^)[I]._fU20 > 0)
                {
                    if ((uParam0^)[I]._fU20 == 1)
                    {
                        STOP_IMAGEFX( (uParam0^)[I + 1]._fU0, (uParam0^)[I + 1]._fU24 );
                        (uParam0^)[I + 1]._fU32 = 1;
                    }
                    else
                    {
                        for ( J = I + 1; J <= (uParam0^)[I]._fU20; J++ )
                        {
                            STOP_IMAGEFX( (uParam0^)[J]._fU0, (uParam0^)[J]._fU24 );
                            (uParam0^)[J]._fU32 = 1;
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        break;
    }
    return;
}

void sub_54212()
{
    sub_422( "GA", "P_RELEASE_OB2_ASSETS start", 0 );
    sub_54270( ref l_U179, ref g_U1588 );
    sub_54548( ref l_U189, ref g_U1829 );
    sub_54780( "LEVEL_S_PAN_CP_06", ref g_U1975 );
    sub_422( "GA", "P_RELEASE_OB2_ASSETS end", 0 );
    return;
}

void sub_54270(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_54305( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_54305(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_6996( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

void sub_54548(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_54583( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_54583(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_6996( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_54780(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_6996( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


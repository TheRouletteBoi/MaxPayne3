void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U40 = 0;
    l_U41 = 0;
    l_U42 = 1500;
    l_U52 = {0, 0, 0};
    StrCopy( ref l_U55, "DUMMY", 32 );
    l_U63 = 1;
    l_U68 = 0;
    l_U69 = 0;
    l_U70 = 0;
    l_U73 = 0;
    l_U147 = {22.82600000, 3.76500000, 1.66900000};
    l_U161 = {38.47000000, 3.89000000, 1.59000000};
    l_U164 = 0.75000000;
    l_U185 = {27.16000000, 0.00000000, -2.00000000};
    l_U200 = {27.16000000, 7.20000000, -2.00000000};
    l_U215 = {35.00000000, 7.20000000, -2.00000000};
    l_U230 = {35.00000000, 0.00000000, -2.00000000};
    l_U245 = {35.00000000, 0.00000000, 0.00000000};
    l_U259 = {35.00000000, 7.28000000, 0.00000000};
    l_U273 = {27.00000000, 0.00000000, 0.00000000};
    l_U287 = {27.00000000, 7.28000000, 0.00000000};
    l_U291 = {34.05540000, 3.82892000, 0.79859700};
    l_U327 = {24.76000000, -3.45000000, 0.60000000};
    l_U526 = {29.80200000, 7.48000000, -2.83000000};
    l_U529 = {29.80200000, 7.61500000, -2.83000000};
    l_U532 = {0.00000000, 0.00000000, -90.00000000};
    l_U546 = {24.98200000, 0.26800000, -2.83000000};
    l_U549 = {24.98200000, 0.12800000, -2.83000000};
    l_U552 = {0.00000000, 0.00000000, 90.00000000};
    l_U555 = -1;
    l_U556 = -1;
    l_U557 = -1;
    l_U560 = {30.21900000, 7.48800000, -1.60900000};
    l_U564 = {24.58000000, 0.25700000, -1.60400000};
    l_U578 = {30.00000000, 7.50000000, -0.90000000};
    l_U592 = {24.77900000, 0.25200000, -0.89500000};
    l_U595 = -1;
    l_U596 = {64536, 64536, 64536};
    l_U674 = 0;
    l_U676 = 1;
    l_U678 = 0;
    l_U850 = 700;
    l_U971 = 0;
    l_U972 = 0;
    l_U973 = 0;
    l_U983 = 600;
    l_U984 = 0.01500000;
    l_U986 = 0;
    l_U987 = 0;
    l_U1153 = 1000;
    l_U1154 = l_U1153 + 2800;
    l_U1155 = l_U1154 + 6400;
    l_U1156 = 800;
    l_U1157 = l_U1156 + 4000;
    l_U1158 = l_U1157 + 3800;
    l_U1159 = 2500;
    l_U1287 = 0;
    l_U1288 = {30.08000000, 4.02000000, 1.00000000};
    l_U1291 = 1.00000000;
    l_U1683 = -1;
    l_U1684 = -1;
    l_U1685 = -1;
    l_U1686 = -1;
    l_U1687 = -1;
    l_U1688 = -1;
    l_U1689 = -1;
    l_U1690 = -1;
    l_U1692 = 1.00000000;
    l_U1694 = 1.00000000;
    l_U1696 = 1.00000000;
    l_U1698 = 1.00000000;
    l_U1699 = "Pana_EngineSmoke_S";
    l_U1700 = "Pana_EngineSmoke_S";
    l_U1702 = 0.70000000;
    l_U1703 = {28.62110000, 4.27577000, -1.79636000};
    l_U1706 = {-38.17440000, -17.13420000, 69.45760000};
    l_U1709 = -1;
    l_U1710 = {28.00000000, 7.00000000, -1.00000000};
    l_U1713 = {331.00000000, 38.00000000, 224.00000000};
    l_U1716 = 0.80000000;
    l_U1718 = {26.73200000, 7.96700000, -1.44400000};
    l_U1721 = {342.00000000, 345.00000000, 4.00000000};
    l_U1724 = 1.00000000;
    l_U1726 = {28.65380000, 6.17499000, -0.03564450};
    l_U1729 = {90.00000000, 0.00000000, 0.00000000};
    l_U1732 = 1.10000000;
    l_U1734 = -1;
    l_U1735 = {35.70200000, 7.35200000, -0.77400000};
    l_U1738 = {331.00000000, 38.00000000, 224.00000000};
    l_U1741 = 1.10000000;
    l_U1743 = {34.57200000, 7.96700000, -1.44400000};
    l_U1746 = {342.00000000, 345.00000000, 4.00000000};
    l_U1749 = 1.00000000;
    l_U1751 = {36.49380000, 6.17499000, -0.03564450};
    l_U1754 = {90.00000000, 0.00000000, 0.00000000};
    l_U1757 = 1.10000000;
    l_U1759 = -1;
    l_U1760 = {26.10500000, 0.73800000, -1.50000000};
    l_U1763 = {298.69000000, 9.00000000, 0.00000000};
    l_U1766 = 1.10000000;
    l_U1768 = {28.61800000, 0.85300000, -1.67400000};
    l_U1771 = {337.00000000, 9.00000000, 0.00000000};
    l_U1774 = 1.00000000;
    l_U1776 = {27.26700000, 0.37500000, -1.03400000};
    l_U1779 = {343.00000000, 343.00000000, 0.00000000};
    l_U1782 = 1.00000000;
    l_U1784 = -1;
    l_U1785 = {35.00000000, 0.00000000, -1.00000000};
    l_U1788 = {298.69000000, 9.00000000, 0.00000000};
    l_U1791 = 1.00000000;
    l_U1793 = {36.45800000, 0.85300000, -1.67400000};
    l_U1796 = {337.00000000, 9.00000000, 0.00000000};
    l_U1799 = 1.00000000;
    l_U1801 = {35.10700000, 0.37500000, -1.03400000};
    l_U1804 = {343.00000000, 343.00000000, 0.00000000};
    l_U1807 = 1.00000000;
    l_U1809 = 1.00000000;
    l_U1810 = 1000.00000000;
    l_U1811 = 35.00000000;
    l_U1812 = 1000.00000000;
    l_U1813 = 47;
    l_U1814 = 48;
    l_U1815 = 50;
    l_U1816 = 49;
    l_U1817 = 58;
    l_U1818 = 52;
    l_U1937 = {30.29000000, 7.48000000, -1.60000000};
    l_U1940 = {30.83000000, 7.48000000, -2.82598000};
    l_U2039 = {24.51000000, 0.25000000, -1.61400000};
    l_U2042 = {23.97000000, 0.26500000, -2.82598000};
    l_U2055 = {30.30049000, 5.59403300, -2.86403400};
    l_U2058 = 267.30000000;
    l_U2059 = {23.97229000, 2.11505200, -2.86393300};
    l_U2062 = 275.70060000;
    sub_2139( "SP", "Script s_pana_EF.sc is starting up...", 0 );
    START_WIDGET_GROUP( "ImageFX" );
    ADD_WIDGET_INT_SLIDER( "iImageFX_VALUE01_A", ref l_U1153, 0, 20000, 1000 );
    ADD_WIDGET_INT_SLIDER( "iImageFX_VALUE01_B", ref l_U1154, 0, 20000, 1000 );
    ADD_WIDGET_INT_SLIDER( "iImageFX_VALUE01_C", ref l_U1155, 0, 20000, 1000 );
    ADD_WIDGET_INT_SLIDER( "iImageFX_VALUE02_A", ref l_U1156, 0, 20000, 1000 );
    ADD_WIDGET_INT_SLIDER( "iImageFX_VALUE02_B", ref l_U1157, 0, 20000, 1000 );
    ADD_WIDGET_INT_SLIDER( "iImageFX_OPENDOORS", ref l_U1159, 0, 20000, 1000 );
    STOP_WIDGET_GROUP();
    sub_2453();
    l_U674 = 1;
    while (NOT IS_EXITFLAG_SET())
    {
        sub_4293();
        if (l_U678 == 0)
        {
            sub_16886();
        }
        WAIT( 0 );
    }
    if (g_U835[1]._fU40 == 3)
    {
        sub_8038( 1 );
    }
    else
    {
        sub_8038( 0 );
    }
    sub_79518();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_pana_EF" );
    sub_2139( "SP", "Script s_pana_EF.sc is terminating...", 0 );
    return;
}

void sub_2139(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_2453()
{
    sub_2139( "GA", "P_EF_SETUP_DATA_ARRAYS start", 0 );
    l_U635[0] = g_U1553;
    l_U635[1] = g_U1558;
    l_U635[2] = g_U1551;
    l_U635[3] = g_U1554;
    l_U635[4] = g_U1557;
    l_U635[5] = g_U1555;
    l_U635[6] = g_U1552;
    l_U635[7] = g_U1556;
    l_U635[8] = g_U1559;
    l_U635[9] = g_U1560;
    l_U635[10] = g_U1561;
    l_U635[11] = g_U1562;
    l_U635[12] = g_U1563;
    l_U635[13] = g_U1564;
    l_U635[14] = g_U1539;
    l_U635[15] = g_U1538;
    l_U635[16] = g_U1540;
    l_U635[17] = g_U1544;
    l_U635[18] = g_U1543;
    l_U635[19] = g_U1542;
    l_U635[20] = g_U1541;
    l_U635[21] = g_U1546;
    l_U635[22] = g_U1545;
    l_U635[23] = g_U1547;
    l_U635[24] = g_U1566;
    l_U635[25] = g_U1565;
    l_U635[26] = g_U1567;
    l_U635[27] = g_U1568;
    l_U635[28] = g_U1569;
    l_U635[29] = g_U1548;
    l_U635[30] = g_U1570;
    l_U635[31] = g_U1571;
    l_U635[32] = g_U1514;
    l_U635[33] = 301129366;
    l_U670[0] = -1464892298;
    l_U670[1] = -612753081;
    l_U670[2] = -1404433099;
    l_U1160[0]._fU0 = 0;
    l_U1160[0]._fU4 = 750;
    l_U1160[0]._fU44 = {27, 1.50000000, -0.15000000};
    l_U1160[0]._fU56 = {65466, 0, 65476};
    l_U1160[0]._fU68 = 0.80000000;
    l_U1160[1]._fU0 = 0;
    l_U1160[1]._fU4 = 1500;
    l_U1160[1]._fU44 = {35.80000000, 6.15000000, -0.55000000};
    l_U1160[1]._fU56 = {0, 65476, 65446};
    l_U1160[1]._fU68 = 0.90000000;
    l_U1160[2]._fU0 = 0;
    l_U1160[2]._fU4 = 3000;
    l_U1160[2]._fU44 = {28.80000000, 6.65000000, 0.40000000};
    l_U1160[2]._fU56 = {0, 70, 65446};
    l_U1160[2]._fU68 = 1.40000000;
    l_U1160[3]._fU0 = 0;
    l_U1160[3]._fU4 = 6000;
    l_U1160[3]._fU44 = {36.80000000, 1.35000000, -0.15000000};
    l_U1160[3]._fU56 = {90, 0, 65421};
    l_U1160[3]._fU68 = 1.20000000;
    l_U1160[4]._fU0 = 0;
    l_U1160[4]._fU4 = 6500;
    l_U1160[4]._fU44 = {35.85000000, 1.30000000, 0.20000000};
    l_U1160[4]._fU56 = {70, 0, 180};
    l_U1160[4]._fU68 = 0.70000000;
    l_U1160[5]._fU0 = 0;
    l_U1160[5]._fU4 = 10000;
    l_U1160[5]._fU44 = {34.95000000, 6.15000000, -0.55000000};
    l_U1160[5]._fU56 = {0, 65476, 90};
    l_U1160[5]._fU68 = 1.25000000;
    l_U1160[6]._fU0 = 0;
    l_U1160[6]._fU4 = 16000;
    l_U1160[6]._fU44 = {27.90000000, -1.05000000, -0.30000000};
    l_U1160[6]._fU56 = {65421, 0, 15};
    l_U1160[6]._fU68 = 1.20000000;
    l_U1568[6] = {19.09815000, 3.32746300, -3.53325600};
    l_U1596[6] = -90.00000000;
    l_U1606[6] = 0.00000000;
    l_U1616[6] = 0.00000000;
    l_U1568[7] = {29.59365000, 3.58461100, -2.86403400};
    l_U1596[7] = -90.00000000;
    l_U1606[7] = 0.00000000;
    l_U1616[7] = 0.00000000;
    l_U1568[8] = {37.37085000, 3.70860800, -1.25786100};
    l_U1596[8] = 90.00000000;
    l_U1606[8] = 0.00000000;
    l_U1616[8] = 0.00000000;
    l_U1568[0] = {13.92645000, 9.92342300, -0.60836400};
    l_U1596[0] = 242.40000000;
    l_U1606[0] = 6.50000000;
    l_U1616[0] = -9.90000000;
    l_U1568[1] = {14.25917000, -2.19526000, -0.60842100};
    l_U1596[1] = 321.40000000;
    l_U1606[1] = -2.50000000;
    l_U1616[1] = -11.90000000;
    l_U1568[2] = {14.25917000, -2.19526000, -0.60842100};
    l_U1596[2] = 321.40000000;
    l_U1606[2] = -2.50000000;
    l_U1616[2] = -11.90000000;
    l_U1568[3] = {16.10259000, 9.86288500, -2.85549900};
    l_U1596[3] = 247.30000000;
    l_U1606[3] = 0.50000000;
    l_U1616[3] = -1.20000000;
    l_U1568[4] = {23.06397000, 9.57184700, -2.86847800};
    l_U1596[4] = 265.30000000;
    l_U1606[4] = -1.80000000;
    l_U1616[4] = -2.20000000;
    l_U1568[5] = {24.47691000, -2.28858200, -2.86699900};
    l_U1596[5] = 286.30000000;
    l_U1606[5] = -0.20000000;
    l_U1616[5] = -2.20000000;
    sub_2139( "GA", "P_EF_SETUP_DATA_ARRAYS end", 0 );
    return;
}

void sub_4293()
{
    if (g_U834 == 2)
    {
        switch (l_U678)
        {
            case 0:
            if ((sub_4456()) || (IS_PED_DEAD( sub_4383() )))
            {
                l_U678 = 2;
                sub_2139( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            if (l_U677)
            {
                l_U989 = 1;
                l_U678 = 1;
                sub_2139( "SP", "eFailState = FAIL_HANDLE_PLAYER_SUFFOCATED", 0 );
            }
            break;
            case 1:
            if (sub_5028())
            {
                if ((PED_GET_ACTION_INTENTION_STATUS( sub_4383(), l_U1818 )) == 1)
                {
                    PED_FINISH_ACTION_INTENTION( sub_4383(), l_U1818 );
                    sub_6504( "Player ran out of oxygen..." );
                }
                l_U678 = 2;
                sub_2139( "CR", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 2:
            if (sub_6583())
            {
                if ((g_U835[3]._fU40 != 4) AND (g_U835[3]._fU40 != 0))
                {
                    sub_2139( "GA", "Shutting down script for MPM.", 0 );
                    sub_6695( ref g_U835[3] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U835[3]._fU32 );
                }
                l_U678 = 4;
            }
            else if ((sub_6760( 0 )) == 1)
            {
                if ((g_U835[3]._fU40 != 4) AND (g_U835[3]._fU40 != 0))
                {
                    sub_2139( "GA", "Shutting down script for MPM.", 0 );
                    sub_6695( ref g_U835[3] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U835[3]._fU32 );
                }
                l_U678 = 3;
            }
            break;
            case 3:
            if (NOT (IS_PED_DEAD( sub_4383() )))
            {
                l_U678 = 4;
                sub_2139( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 4:
            sub_2139( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_4383() ))) AND (NOT (IS_PLAYER_DEAD( sub_4405() ))))
            {
                SET_PLAYER_CONTROL( sub_4405(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_4383() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_4383(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            sub_8038( 1 );
            SET_INTERIOR_ACTIVE( GET_INTERIOR_FROM_NAME( "Deck1engine", 0 ), 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( GET_INTERIOR_FROM_NAME( "Deck1engine", 0 ), GET_HASH_KEY( ref g_U3215 ) );
            l_U678 = 5;
            sub_2139( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 5:
            sub_2139( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            if (l_U599._fU0)
            {
                sub_12663( ref l_U599, sub_4383() );
            }
            l_U678 = 6;
            sub_2139( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 6:
            sub_2139( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U674 = 1;
            l_U676 = 0;
            l_U677 = 0;
            AUD_SET_IS_POWER_ON( 1 );
            l_U678 = 0;
            sub_2139( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_4383()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_4405() );
    }
    return 0;
}

void sub_4405()
{
    return GET_PLAYER_ID();
}

int sub_4456()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_4383() )))
        {
            SET_PED_FORCED_TO_WALK( sub_4383(), 0 );
            SET_PLAYER_FORCED_AIM( sub_4405(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_4405(), 1 );
            if ((IS_PED_VISIBLE( sub_4383() )) == 0)
            {
                SET_PED_VISIBLE( sub_4383(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

int sub_5028()
{
    switch (l_U989)
    {
        case 1:
        sub_2139( "CR", "e_EF_PlayerSuffocatesCamState = eNIS_STATE_SETUP", 0 );
        sub_5138( ref l_U990[0], 1000 );
        sub_5520( ref l_U990[1], l_U990[0]._fU16, l_U990[0]._fU4 - (vector( 10.00000000, 0.00000000, 0.00000000)), 1110704128, 1000 );
        sub_5746( ref l_U990[0], ref l_U990[1], 4000, 1, 1 );
        sub_5811( ref l_U1053 );
        l_U989 = 2;
        break;
        case 2:
        if (sub_5975( ref l_U1053 ))
        {
            l_U988 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
            SETUP_BULLET_CAMERA_SCENE( l_U988, "MISS_DEATH_FALL_01A", 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
            SET_CAM_ACTIVE( l_U988, 1 );
            l_U989 = 5;
            sub_2139( "CR", "e_EF_PlayerSuffocatesCamState = eNIS_STATE_COMPLETE", 0 );
        }
        break;
    }
    if (l_U989 == 5)
    {
        return 1;
        break;
    }
    return 0;
}

void sub_5138(int iParam0, unknown uParam1)
{
    iParam0->_fU4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_ROT()};
    iParam0->_fU16 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_COORD()};
    iParam0->_fU28 = GET_GAMEPLAY_CAM_FOV();
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam1;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU96 = 0;
    sub_5261( iParam0 + 48, uParam1, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U703, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_5261(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_5520(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_5261( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U703, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_5746(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE_WITH_INTERP( iParam1->_fU0, iParam0->_fU0, uParam2, uParam3, uParam4 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_5811( iParam1 + 48 );
    iParam1->_fU32 = 1;
    iParam1->_fU40 = 1;
    return;
}

void sub_5811(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_5975(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_6504(unknown uParam0)
{
    return;
}

void sub_6583()
{
    return g_U648;
}

void sub_6695(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

int sub_6760(int iParam0)
{
    iParam0 = 1;
    switch (l_U41)
    {
        case 0:
        if (NOT (sub_6821( ref l_U43 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_4383() )))
            {
                l_U42 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_5261( ref l_U43, l_U42, 1, 1 );
            sub_5811( ref l_U43 );
        }
        if (sub_5975( ref l_U43 ))
        {
            sub_2139( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_4383() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_4405() )))
            {
                SET_PLAYER_CONTROL( sub_4405(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U41 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U41 = 2;
            }
            else
            {
                l_U41 = 3;
            }
        }
        break;
        case 2:
        sub_2139( "NS", "Player will QUIT", 0 );
        sub_7280();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_2139( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_7280();
        return 1;
        break;
    }
    return 0;
}

int sub_6821(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_7280()
{
    sub_2139( "NS", "P_PostFailRetryCleanup", 0 );
    sub_7330( ref l_U43 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_4405() )))
    {
        SET_PLAYER_CONTROL( sub_4405(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U40 = 0;
    l_U40 = l_U40;
    l_U41 = 0;
    return;
}

void sub_7330(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_8038(boolean bParam0)
{
    int J;
    int I;

    sub_2139( "GA", "P_CLEANUP_EF start", 0 );
    END_POSTFX_BLENDER( 11, 0 );
    DEACTIVATE_SPECIAL_FX_MODIFIER( "deck1fire" );
    DEACTIVATE_SPECIAL_FX_MODIFIER( "FIRE_COUGH" );
    ISEQ_TERMINATE( -662952970 );
    sub_8149( -662952970, ref g_U1878 );
    ISEQ_TERMINATE( -1118406608 );
    sub_8149( -1118406608, ref g_U1878 );
    ISEQ_TERMINATE( 1453623029 );
    sub_8149( 1453623029, ref g_U1878 );
    ISEQ_TERMINATE( -2056923918 );
    sub_8149( -2056923918, ref g_U1878 );
    sub_8626( "S_PANA_FIRE_EXPLOSION_01", ref g_U2986 );
    sub_8962( "S_PANA_FIRE_EXPLOSION_01", ref g_U2986 );
    sub_8626( "S_PANA_FIRE_EXPLOSION_02", ref g_U2986 );
    sub_8962( "S_PANA_FIRE_EXPLOSION_02", ref g_U2986 );
    sub_8626( "Mid_01_Panama_SEQ_Blendout", ref g_U2986 );
    sub_8962( "Mid_01_Panama_SEQ_Blendout", ref g_U2986 );
    for ( I = 0; I <= 6; I++ )
    {
        sub_9301( ref l_U1160[I]._fU0 );
    }
    sub_9354();
    sub_9791();
    sub_9413( ref l_U1691 );
    sub_9413( ref l_U1693 );
    sub_9413( ref l_U1695 );
    sub_9413( ref l_U1697 );
    sub_9413( ref l_U1287 );
    sub_10020();
    sub_9543( l_U1683, 0 );
    sub_9543( l_U1684, 0 );
    sub_10097( ref l_U1683 );
    sub_10097( ref l_U1684 );
    sub_9543( l_U1685, 0 );
    sub_9543( l_U1686, 0 );
    sub_10097( ref l_U1685 );
    sub_10097( ref l_U1686 );
    sub_9543( l_U1687, 0 );
    sub_9543( l_U1688, 0 );
    sub_10097( ref l_U1687 );
    sub_10097( ref l_U1688 );
    sub_9543( l_U1689, 0 );
    sub_9543( l_U1690, 0 );
    sub_10097( ref l_U1689 );
    sub_10097( ref l_U1690 );
    if ((CUTSCENE_NAMED_IS_LOADING( "MID_01_PANAMA_concat" )) || (CUTSCENE_IS_LOADED( "MID_01_PANAMA_concat" )))
    {
        CLEAR_NAMED_CUTSCENE( "MID_01_PANAMA_concat" );
    }
    sub_10634( ref l_U1851, 0 );
    sub_10634( ref l_U1953, 0 );
    sub_11528( ref l_U988 );
    sub_11610( ref l_U861 );
    sub_11744( l_U136._fU8 );
    sub_11744( l_U150._fU8 );
    sub_11744( l_U174._fU8 );
    sub_11744( l_U189._fU8 );
    sub_11744( l_U204._fU8 );
    sub_11744( l_U219._fU8 );
    sub_11744( l_U248._fU8 );
    sub_11744( l_U234._fU8 );
    sub_11744( l_U276._fU8 );
    sub_11744( l_U262._fU8 );
    sub_11744( l_U290 );
    sub_11744( l_U294._fU8 );
    sub_11744( l_U305._fU8 );
    sub_11744( l_U316._fU8 );
    for ( J = 0; J < l_U330; J++ )
    {
        sub_11744( l_U330[J]._fU8 );
    }
    for ( J = 0; J < l_U442; J++ )
    {
        sub_11744( l_U442[J]._fU8 );
    }
    for ( J = 0; J < l_U419; J++ )
    {
        sub_11744( l_U419[J]._fU8 );
    }
    for ( J = 0; J < l_U510; J++ )
    {
        sub_11744( l_U510[J] );
    }
    for ( J = 0; J < l_U465; J++ )
    {
        sub_11744( l_U465[J]._fU8 );
    }
    sub_11744( l_U515._fU8 );
    sub_11744( l_U535._fU8 );
    sub_11744( l_U559 );
    sub_11744( l_U563 );
    sub_11744( l_U567._fU8 );
    sub_11744( l_U581._fU8 );
    SET_TEAR_GAS_EFFECT_AUTO_END( 1 );
    END_POSTFX_BLENDER( 14, 0 );
    sub_12236();
    sub_11744( l_U203 );
    sub_11744( l_U188 );
    sub_11744( l_U233 );
    sub_11744( l_U218 );
    if (bParam0)
    {
        sub_11610( ref g_U3319 );
    }
    sub_2139( "GA", "P_CLEANUP_EF end", 0 );
    return;
}

void sub_8149(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_8261( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

int sub_8261(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_8626(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if (sub_8643( uParam0, uParam1 ))
    {
        iVar4 = sub_8742( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            STOP_SCRIPT_STREAM( iVar4 );
        }
        else
        {
            SCRIPT_ASSERT( "Attempting to stop a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    return;
}

int sub_8643(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                return 1;
            }
        }
    }
    return 0;
}

int sub_8742(unknown uParam0, unknown uParam1)
{
    int Result;

    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
        {
            return Result;
        }
    }
    return -1;
}

void sub_8962(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_8261( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_9301(unknown uParam0)
{
    if ((uParam0^) != 0)
    {
        REMOVE_PARTICLE_FX( (uParam0^) );
        (uParam0^) = 0;
    }
    return;
}

void sub_9354()
{
    sub_2139( "MF", "P_EF_FLAME_JET_LEFT_STOP: START", 0 );
    sub_9413( ref l_U1717 );
    sub_9413( ref l_U1725 );
    sub_9413( ref l_U1733 );
    sub_9543( l_U1709, 0 );
    sub_9413( ref l_U1742 );
    sub_9413( ref l_U1750 );
    sub_9413( ref l_U1758 );
    sub_9543( l_U1734, 0 );
    sub_2139( "MF", "P_EF_FLAME_JET_LEFT_STOP: END", 0 );
    return;
}

void sub_9413(unknown uParam0)
{
    if ((uParam0^) == 0)
    {
        sub_2139( "GA", "Trying to stop an invalid particle effect ID.", 0 );
    }
    else
    {
        STOP_PARTICLE_FX_LOOPED( (uParam0^) );
        (uParam0^) = 0;
    }
    return;
}

void sub_9543(int iParam0, unknown uParam1)
{
    if (iParam0 != -1)
    {
        sub_2139( "MF", "P_SAFE_STOP_SOUND: Stopping Sound...", 0 );
        STOP_SOUND( iParam0, uParam1 );
    }
    else
    {
        sub_2139( "MF", "P_SAFE_STOP_SOUND: Not stopping sound (SoundID = -1)", 0 );
    }
    return;
}

void sub_9791()
{
    sub_2139( "MF", "P_EF_FLAME_JET_RIGHT_STOP: START", 0 );
    sub_9413( ref l_U1767 );
    sub_9413( ref l_U1775 );
    sub_9413( ref l_U1783 );
    sub_9543( l_U1759, 0 );
    sub_9413( ref l_U1792 );
    sub_9413( ref l_U1800 );
    sub_9413( ref l_U1808 );
    sub_9543( l_U1784, 0 );
    sub_2139( "MF", "P_EF_FLAME_JET_RIGHT_STOP: END", 0 );
    return;
}

void sub_10020()
{
    sub_2139( "MF", "P_EF_FIRE_DOOR_STOP_ALL_SOUNDS - start", 0 );
    sub_9543( l_U556, 0 );
    sub_10097( ref l_U556 );
    sub_9543( l_U555, 0 );
    sub_10097( ref l_U555 );
    sub_9543( l_U557, 0 );
    sub_10097( ref l_U557 );
    sub_2139( "MF", "P_EF_FIRE_DOOR_STOP_ALL_SOUNDS - end", 0 );
    return;
}

void sub_10097(unknown uParam0)
{
    if ((uParam0^) != -1)
    {
        sub_2139( "MF", "P_SAFE_RELEASE_SOUND_ID: Releasing Sound...", 0 );
        RELEASE_SOUND_ID( (uParam0^) );
        (uParam0^) = -1;
    }
    else
    {
        sub_2139( "MF", "P_SAFE_RELEASE_SOUND_ID: Not RELEASING sound (SoundID != -1)", 0 );
    }
    return;
}

void sub_10634(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_10678( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_10678( iParam0, 0 );
        sub_10878( iParam0, 0 );
        if ((IS_PED_DEAD( sub_4383() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_4383() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_4383(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_10678(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_10878(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_11029( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_11029(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_11090( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_11090( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_11090(int iParam0)
{
    if (((IS_PED_DEAD( sub_4383() )) == 0) AND ((IS_PLAYER_DEAD( sub_4405() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_4383() )) == 1) || (((IS_PED_GETTING_UP( sub_4383() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_4383() )) == 1) || (((IS_PED_IN_COVER( sub_4383() )) == 1) || (((IS_PED_DUCKING( sub_4383() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_4383() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_11528(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

void sub_11610(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_11644( (uParam0^)[I] );
    }
    return;
}

void sub_11644(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_11744(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_12236()
{
    sub_2139( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    sub_2139( "CCB", "Stopping the Panama_Engine_Fire context...", 0 );
    END_CONTEXT( "Panama_Engine_Fire" );
    return;
}

void sub_12663(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_2139( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_12847( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_13924( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_14216( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_14563( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_14216( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_14563( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_14216( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_14563( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_14848( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_14563( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_14848( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_14563( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_15341( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_15502( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_4383(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_2139( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_12847(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_12879( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_12879(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_13924(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_14216(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_6504( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_14563(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_14848(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_6504( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_15341(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_15502(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_12879( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_15574( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_15574(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_16886()
{
    int iVar2;
    int I;

    iVar2 = l_U674;
    sub_16903();
    switch (l_U674)
    {
        case 0: break;
        case 1:
        sub_2139( "SP", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
        sub_17321();
        sub_18897();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U674 = 2;
        sub_2139( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_2139( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        sub_22464();
        sub_27683();
        l_U674 = 3;
        sub_2139( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if ((sub_32019( ref g_U3026 )) AND ((sub_31892( ref g_U2986 )) AND ((sub_31701( ref g_U1878 )) AND ((sub_31574( ref g_U1975 )) AND ((sub_31453( ref g_U1829 )) AND (sub_31333( ref g_U1588 )))))))
        {
            if ((NOT l_U599._fU0) AND (g_U833 == 2))
            {
                l_U674 = 4;
                sub_2139( "SP", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
            }
            else
            {
                l_U674 = 6;
                sub_2139( "SP", "eCheckpointState = CP_EF_PRE_CREATE_ASSETS", 0 );
            }
        }
        break;
        case 4:
        sub_2139( "GA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        l_U676 = 0;
        g_U1230[2] = 1;
        AUD_SET_IS_POWER_ON( 1 );
        if (NOT (IS_PED_DEAD( sub_4383() )))
        {
            FREEZE_PED_POSITION( sub_4383(), 0 );
        }
        if ((sub_32422( ref l_U599 )) == 0)
        {
            sub_14848( sub_4383(), -1464892298, 200, 0, 0 );
            sub_14216( sub_4383(), -1404433099, 1, 200, 0 );
            l_U674 = 5;
            sub_2139( "GA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U674 = 6;
            sub_2139( "SP", "eCheckpointState = CP_EF_PRE_CREATE_ASSETS", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD( sub_4383() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_4383(), 1 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_4383(), 0, 0 ) )))
            {
                l_U674 = 6;
                sub_2139( "GA", "eCheckpointState = CP_EF_PRE_CREATE_ASSETS", 0 );
            }
        }
        break;
        case 6:
        if (l_U675)
        {
            sub_32936();
            sub_33598();
            sub_33934();
            sub_34256();
            sub_34442();
            sub_34696();
            sub_35170();
            sub_35434();
            sub_35837( 1 );
            sub_36140();
            sub_36410();
        }
        if (sub_36629( ref l_U861, ref l_U866, -1, 0, 0, 1, 1 ))
        {
            sub_38087();
            if (sub_36629( ref g_U3319, ref g_U3322, -1, 0, 0, 1, 1 ))
            {
                sub_39029();
                l_U674 = 7;
                sub_2139( "GA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
            }
        }
        break;
        case 7:
        if (g_U1230[2])
        {
            if (l_U676)
            {
                if (CUTSCENE_IS_LOADED( "MID_01_PANAMA_concat" ))
                {
                    l_U674 = 8;
                    sub_2139( "GA", "eCheckpointState = CP_HANDLE_MID_01_PANAMA", 0 );
                }
                else if (CUTSCENE_NAMED_IS_LOADING( "MID_01_PANAMA_concat" ))
                {
                    sub_2139( "GA", "Waiting for cutscene MID_01_PANAMA_concat to load.", 0 );
                }
                else
                {
                    sub_2139( "GA", "Requesting cutscene MID_01_PANAMA_concat to load.", 0 );
                    PRE_STREAM_SEAMLESS_CUTSCENE( "MID_01_PANAMA_concat" );
                }
            }
            else
            {
                l_U674 = 8;
                sub_2139( "GA", "eCheckpointState = CP_HANDLE_MID_01_PANAMA", 0 );
            }
        }
        break;
        case 8:
        if (l_U675)
        {
            sub_45252( ref l_U679, "MID_01_PANAMA_concat", 39989, 40161, 40994, 41484, 41503, 43406, 250, 0 );
            if (l_U676)
            {
                l_U679._fU4 = 2;
            }
            else
            {
                l_U679._fU4 = 7;
            }
        }
        if (sub_45678( ref l_U679 ))
        {
            if (NOT l_U599._fU0)
            {
                g_U834 = 2;
                sub_47683( ref l_U599, g_U834, sub_4383(), g_U980[2], g_U1086[2], g_U1158[2], g_U1122[2], 1 );
            }
            sub_51284();
            SET_ENABLE_BULLET_IMPACT_WATER( 0 );
            sub_51760();
            l_U674 = 9;
            sub_2139( "GA", "eCheckpointState = CP_EF_GAMEPLAY_COMBAT", 0 );
        }
        break;
        case 9:
        if (l_U675)
        {
            SET_PLAYER_FORCED_AIM_MAINTAIN_DIRECTION( sub_4405(), 0, 0 );
            sub_51989( 1 );
        }
        sub_52257();
        sub_43607();
        if (sub_5975( ref l_U1081 ))
        {
            sub_52411();
            sub_53042();
        }
        if (sub_5975( ref l_U2141 ))
        {
            sub_51989( 0 );
        }
        if (sub_5975( ref l_U940 ))
        {
            sub_53229();
        }
        else
        {
            sub_53423();
        }
        if ((sub_5975( ref l_U1072 )) == 1)
        {
            sub_53691();
        }
        if (NOT l_U949)
        {
            if ((NOT (sub_53874( l_U861[3], l_U950 ))) AND ((NOT (sub_53874( l_U861[2], l_U950 ))) AND ((NOT (sub_53874( l_U861[1], l_U950 ))) AND (NOT (sub_53874( l_U861[0], l_U950 ))))))
            {
                sub_53993();
                SET_PED_INVINCIBLE( l_U861[3], 0 );
                l_U949 = 1;
            }
        }
        sub_54547( ref l_U861 );
        if (sub_54754( ref l_U861, 0 ))
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
            for ( I = 0; I <= 6; I++ )
            {
                sub_55065( ref l_U1160[I]._fU0 );
            }
            l_U674 = 10;
            sub_2139( "GA", "eCheckpointState = CP_EF_NIS_ENGINES_EXPLODE", 0 );
        }
        break;
        case 10:
        if (NOT (sub_6821( ref l_U1626 )))
        {
            if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
            {
                AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_3_5", "PANAMA_FINAL_3_5", 0, -1, -1, -1082130432, 0 );
                sub_2139( "CR", "Playing 2.2: PANAMA_FINAL Mood: PANAMA_FINAL_3_5", 0 );
                sub_55347();
                sub_57822();
                if (NOT sub_58324())
                {
                    sub_58447();
                }
                sub_5811( ref l_U1626 );
                sub_5811( ref l_U1635 );
                sub_5811( ref l_U1644 );
                sub_43733( ref l_U1287, "PA_Engine_Smoke_S", l_U1288, 0.00000000, 0.00000000, 0.00000000, l_U1291 );
                l_U971 = 1;
            }
        }
        if ((l_U971) AND (NOT l_U1680))
        {
            l_U1355._fU88 = 1;
            l_U1680 = 1;
        }
        if (l_U1355._fU88 == 1)
        {
            sub_58772();
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        }
        if (l_U1355._fU88 != 0)
        {
            sub_59113( ref l_U1355, ref l_U1292, 0, 0, 1, 1 );
        }
        if ((sub_60380( ref l_U1355, 1 )) == 1)
        {
            DISPLAY_HUD( 0 );
        }
        if (sub_5975( ref l_U1635 ))
        {
            SHAKE_GAMEPLAY_CAM( sub_60519(), 0.30000000 );
            sub_60574();
            sub_61820();
            sub_5811( ref l_U1644 );
        }
        if (sub_5975( ref l_U1644 ))
        {
            SHAKE_GAMEPLAY_CAM( sub_60519(), 0.30000000 );
            sub_62166();
            sub_5811( ref l_U1072 );
        }
        if ((sub_5975( ref l_U1626 )) == 1)
        {
            sub_63663();
            sub_65706();
            sub_65935();
            SHAKE_CAM( l_U1292[0]._fU0, sub_60519(), 0.35000000 );
            sub_5811( ref l_U1653 );
            sub_5811( ref l_U1662 );
        }
        if (sub_5975( ref l_U1662 ))
        {
            if (GET_ADRENALINE_AMT() == 0.00000000)
            {
                SET_ADRENALINE_AMT( 0.10000000 );
            }
            ACTIVATE_BULLET_TIME( 0, 1.00000000, 1 );
            sub_5811( ref l_U1671 );
        }
        if (sub_5975( ref l_U1671 ))
        {
            DEACTIVATE_BULLET_TIME( 1, 1 );
        }
        if ((sub_5975( ref l_U1653 )) == 1)
        {
            if (NOT sub_58324())
            {
                START_PLAYER_SHOOTDODGE( 0.00000000, 0.00000000, 0.00000000, 1, 1, 0, 0 );
            }
            SHAKE_GAMEPLAY_CAM( sub_66429(), 0.07000000 );
            ADD_SPECIAL_FX_MODIFIER( "deck1fire", l_U1809, l_U1810, l_U1811 * 0.27000000, l_U1812 );
            sub_66519();
            sub_5811( ref l_U1062 );
            DISPLAY_HUD( 0 );
        }
        if (l_U1653._fU16)
        {
            if (sub_66713())
            {
                ISEQ_TERMINATE( -2056923918 );
                sub_8149( -2056923918, ref g_U1878 );
                l_U674 = 11;
                sub_2139( "GA", "eCheckpointState = CP_EF_GAMEPLAY_SHUT_DOWN_ENGINES", 0 );
            }
        }
        break;
        case 11:
        if (l_U675)
        {
            sub_10634( ref l_U1851, 1 );
            sub_10634( ref l_U1953, 1 );
            sub_47268( 1, 1 );
        }
        sub_67074();
        if (((NOT sub_68197()) AND ((NOT l_U1071) AND (sub_67094() == 0.10000000))) || (((NOT l_U1071) AND (sub_67094() == 0.25000000)) || (((NOT l_U1071) AND (sub_67094() == 0.45000000)) || ((NOT l_U1071) AND (sub_67094() == 0.60000000)))))
        {
            sub_44053( "SPAN_MXCLSESV", ref g_U1246 );
            sub_2139( "CR", "P_SPEECH_PLAY_MONOLOGUE(SPAN_MXCLSESV, sssScriptedDialogue)", 0 );
            l_U1071 = 1;
        }
        if (NOT (sub_68353( g_U1246 )))
        {
            l_U1071 = 0;
        }
        if ((sub_5975( ref l_U1062 )) == 1)
        {
            sub_44053( "SPAN_MID01A", ref g_U1246 );
        }
        if ((sub_5975( ref l_U1830 )) == 1)
        {
            sub_68520();
            sub_7330( ref l_U1830 );
        }
        if (ISEQ_QUERY_STATE( -1118406608, 6 ))
        {
            sub_2139( "GA", "Reloading the interactive sequence S_PAN_VALVES", 0 );
            sub_27755( -1118406608, ref g_U1878 );
        }
        if (ISEQ_QUERY_STATE( -1118406608, 2 ))
        {
            if (sub_68821( ref l_U1851 ))
            {
                sub_70593();
                sub_71098( 1 );
                l_U1819 = 1;
                sub_41568( 1, 0, 0, 1 );
            }
        }
        if ((NOT l_U1952) AND (l_U1851._fU64))
        {
            if (ISEQ_QUERY_ENTITY_STATE( -1118406608, "s_pan_max_valve", 3 ))
            {
                sub_72343( 1 );
                sub_52065( ref l_U1090, l_U1153 );
                sub_52065( ref l_U1099, l_U1154 );
                sub_52065( ref l_U1108, l_U1155 );
                CAMERA_PLAY_ANIMATED( "LEVEL_S_PAN_CP_02", "VIG_02_PAN_MAX_TURNING_VALVE1_CAM2", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
                l_U1952 = 1;
            }
        }
        if (sub_5975( ref l_U1090 ))
        {
            PLAY_IMAGEFX( "DOUBLE_MOVE_FLASH", 4, 1 );
            PLAY_IMAGEFX( "INTERLACE_LIGHT_CENTER", 4, 1 );
        }
        if (sub_5975( ref l_U1099 ))
        {
            PLAY_IMAGEFX( "GRADE_RED_FAST", 4, 1 );
            PLAY_IMAGEFX( "INTERLACE_LIGHT_CENTER", 4, 1 );
        }
        if (sub_5975( ref l_U1108 ))
        {
            PLAY_IMAGEFX( "TEST_INTERLACE", 4, 1 );
        }
        if (ISEQ_QUERY_STATE( -1118406608, 2 ))
        {
            if (sub_68821( ref l_U1953 ))
            {
                sub_70593();
                sub_41568( 1, 0, 0, 1 );
                sub_71098( 0 );
                l_U1819 = 0;
            }
        }
        if ((NOT l_U2054) AND (l_U1953._fU64))
        {
            if (ISEQ_QUERY_ENTITY_STATE( -1118406608, "s_pan_max_valve", 3 ))
            {
                sub_72343( 0 );
                sub_52065( ref l_U1117, l_U1156 );
                sub_52065( ref l_U1126, l_U1157 );
                sub_52065( ref l_U1135, l_U1158 );
                CAMERA_PLAY_ANIMATED( "LEVEL_S_PAN_CP_02", "VIG_02_PAN_MAX_TURNING_VALVE1_CAM1", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
                l_U2054 = 1;
            }
        }
        if (sub_5975( ref l_U1117 ))
        {
            PLAY_IMAGEFX( "GRADE_YELLOW_FAST", 4, 1 );
            PLAY_IMAGEFX( "INTERLACE_LIGHT_CENTER", 4, 1 );
        }
        if (sub_5975( ref l_U1126 ))
        {
            PLAY_IMAGEFX( "GRADE_RED_FAST", 4, 1 );
            PLAY_IMAGEFX( "INTERLACE_LIGHT_CENTER", 4, 1 );
        }
        if (sub_5975( ref l_U1135 ))
        {
            PLAY_IMAGEFX( "FLASH_WHITE_3", 4, 1 );
            PLAY_IMAGEFX( "DOUBLE_WIDE_INTERLACE_FLASH_06", 4, 1 );
            PLAY_IMAGEFX( "INTERLACE_LIGHT_CENTER", 4, 1 );
        }
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            if (NOT l_U1820)
            {
                if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_4383(), 2 ) ))
                {
                    SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HOLSTER( sub_4383(), 2 ), 0 );
                    l_U1820 = 1;
                }
            }
            if ((NOT (IS_PED_DEAD( sub_4383() ))) AND (sub_5975( ref l_U1821 )))
            {
                sub_2139( "GA", "Unfreeze Max at left valve.", 0 );
                FREEZE_PED_POSITION( sub_4383(), 0 );
            }
        }
        if ((sub_5975( ref l_U1943 )) == 1)
        {
            sub_73636();
            l_U515._fU12 = {l_U526};
            sub_52495( ref l_U515, 1 );
            if (DOES_OBJECT_EXIST( l_U515._fU8 ))
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U515._fU8, ref g_U3215 );
            }
        }
        if ((sub_5975( ref l_U2045 )) == 1)
        {
            sub_73885();
            l_U535._fU12 = {l_U546};
            sub_52495( ref l_U535, 1 );
            if (DOES_OBJECT_EXIST( l_U535._fU8 ))
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U535._fU8, ref g_U3215 );
            }
        }
        if ((NOT l_U1953._fU64) || (NOT l_U1851._fU64))
        {
            if ((PED_GET_ACTION_INTENTION_STATUS( sub_4383(), l_U1817 )) == 1)
            {
                if (l_U1820)
                {
                    if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_4383(), 2 ) ))
                    {
                        SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HOLSTER( sub_4383(), 2 ), 1 );
                        l_U1820 = 0;
                    }
                }
                PED_FINISH_ACTION_INTENTION( sub_4383(), l_U1817 );
                CAMERA_ANIMATED_STOP( 0, 0 );
                sub_74261( l_U1849, l_U1850, 1, 0 );
                sub_74711();
                l_U972 = 1;
                sub_8149( -1118406608, ref g_U1878 );
                sub_47268( 1, 1 );
                sub_5811( ref l_U1830 );
            }
        }
        if ((l_U1952) AND (l_U1851._fU64 == 1))
        {
            if ((l_U2054) AND (l_U1953._fU64 == 1))
            {
                if ((PED_GET_ACTION_INTENTION_STATUS( sub_4383(), l_U1817 )) == 1)
                {
                    l_U972 = 0;
                    PED_FINISH_ACTION_INTENTION( sub_4383(), l_U1817 );
                    AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_3", "PANAMA_FINAL_3", 0, -1, 6000, -1082130432, 0 );
                    sub_2139( "CR", "Playing 2.4: PANAMA_FINAL Mood: PANAMA_FINAL_3", 0 );
                    sub_75134();
                    DEACTIVATE_SPECIAL_FX_MODIFIER( "FIRE_COUGH" );
                    SET_TEAR_GAS_EFFECT_AUTO_END( 1 );
                    END_POSTFX_BLENDER( 14, 0 );
                    SET_PAYNEKILLER_AMT( l_U985 );
                    sub_75301();
                    iVar2 = 12;
                    l_U675 = 1;
                    sub_75523( l_U1819 );
                    if (l_U1820)
                    {
                        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_4383(), 2 ) ))
                        {
                            SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HOLSTER( sub_4383(), 2 ), 1 );
                            l_U1820 = 0;
                        }
                    }
                    sub_74261( l_U1849, l_U1850, 1, 0 );
                    sub_8149( -1118406608, ref g_U1878 );
                    sub_41568( 1, 0, 0, 1 );
                    if (NOT l_U1819)
                    {
                        CAMERA_PLAY_ANIMATED( "LEVEL_S_PAN_CP_02", "VIG_02_PAN_CAM1_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
                    }
                    else
                    {
                        CAMERA_PLAY_ANIMATED( "LEVEL_S_PAN_CP_02", "VIG_02_PAN_CAM2_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
                    }
                    l_U674 = 12;
                    sub_2139( "GA", "eCheckpointState = CP_EF_NIS_OPEN_DOOR", 0 );
                }
            }
        }
        if (l_U674 == 11)
        {
            break;
        }
        case 12:
        if (l_U675)
        {
            sub_5811( ref l_U2063 );
            sub_5811( ref l_U2072 );
        }
        sub_52257();
        sub_76266( l_U1819 );
        if (sub_5975( ref l_U2072 ))
        {
            sub_76457();
        }
        if (sub_5975( ref l_U2063 ))
        {
            sub_76622();
            sub_76783();
            sub_52065( ref l_U1144, l_U1159 );
            sub_5811( ref l_U2081 );
        }
        if (sub_5975( ref l_U2081 ))
        {
            sub_77001();
            sub_5811( ref l_U2090 );
            sub_5811( ref l_U165 );
        }
        if (sub_5975( ref l_U2090 ))
        {
            sub_77322();
        }
        if (sub_5975( ref l_U165 ))
        {
            sub_78004();
        }
        if (sub_5975( ref l_U1144 ))
        {
            PLAY_IMAGEFX( "FLICKER_VIBRATE_01", 4, 1 );
            PLAY_IMAGEFX( "FLICKER_VIBRATE_01", 4, 1 );
            PLAY_IMAGEFX( "FLICKER_VIBRATE_01", 4, 1 );
        }
        if (NOT IS_ANIMATED_CAMERA_PLAYING())
        {
            sub_47268( 1, 1 );
            g_U3684 = 1;
            l_U674 = 13;
            sub_2139( "GA", "eCheckpointState = CP_EF_GAMEPLAY_LEAVE_ENGINE_ROOM", 0 );
        }
        break;
        case 13:
        if (sub_78432( ref l_U919, 0 ))
        {
            sub_78533();
        }
        sub_54547( ref g_U3319 );
        if (sub_54754( ref g_U3319, 1 ))
        {
            sub_79164( ref g_U835[3] );
            if ((sub_78432( ref l_U2120, 0 )) == 1)
            {
                sub_53993();
                if (sub_38170( sub_4383(), 0 ))
                {
                    g_U1230[3] = 1;
                    sub_6504( "Resuming full gameplay loco..." );
                    SET_PED_FORCED_TO_WALK( sub_4383(), 0 );
                    SET_PLAYER_CAN_USE_SHOOTDODGE( sub_4405(), 1 );
                    l_U674 = 14;
                    sub_2139( "GA", "eCheckpointState = CP_FINISHED", 0 );
                }
            }
        }
        break;
        case 14:
        if (sub_52257())
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U674 = 0;
            sub_2139( "SP", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
    }
    if (l_U674 != iVar2)
    {
        l_U675 = 1;
    }
    else
    {
        l_U675 = 0;
    }
    return;
}

void sub_16903()
{
    if (NOT l_U987)
    {
        if (sub_16924())
        {
            l_U987 = 1;
            CLEAR_PRINTS();
            sub_17019( "SUFFOCATION METER: OFF", 4500 );
        }
    }
    else if (sub_16924())
    {
        l_U987 = 0;
        CLEAR_PRINTS();
        sub_17019( "SUFFOCATION METER: ON", 4500 );
    }
    return;
}

int sub_16924()
{
    if ((IS_MARKETING_KEYBOARD_KEY_JUST_PRESSED( 49 )) || (IS_KEYBOARD_KEY_JUST_PRESSED( 49 )))
    {
        return 1;
    }
    return 0;
}

void sub_17019(unknown uParam0, unknown uParam1)
{
    PRINT_STRING_WITH_LITERAL_STRING( "STRING", uParam0, uParam1, 1 );
    return;
}

void sub_17321()
{
    int I;

    sub_2139( "GA", "P_INITIALIZE_SCRIPT_DATA start", 0 );
    l_U675 = 1;
    l_U677 = 0;
    sub_5261( ref l_U841, 2500, 1, 0 );
    sub_5261( ref l_U851, l_U850, 1, 0 );
    l_U860 = 0;
    sub_5261( ref l_U940, 10000, 1, 0 );
    l_U949 = 0;
    l_U971 = 0;
    l_U972 = 0;
    l_U986 = 0;
    sub_5261( ref l_U1053, 3000, 1, 0 );
    l_U973 = 0;
    sub_5261( ref l_U974, l_U983, 1, 0 );
    sub_5261( ref l_U1062, 200, 1, 0 );
    l_U1071 = 0;
    sub_5261( ref l_U1072, 3800, 1, 0 );
    sub_5261( ref l_U1081, 2300, 1, 0 );
    for ( I = 0; I <= 6; I++ )
    {
        sub_5261( ref l_U1160[I]._fU8, l_U1160[I]._fU4, 1, 0 );
    }
    sub_5261( ref l_U1626, 200, 1, 0 );
    sub_5261( ref l_U1635, 1500, 1, 0 );
    sub_5261( ref l_U1644, 2000, 1, 0 );
    l_U1680 = 0;
    l_U1681 = 0;
    l_U1682 = 0;
    sub_5261( ref l_U1653, 1800, 1, 0 );
    sub_5261( ref l_U1662, 300, 1, 0 );
    sub_5261( ref l_U1671, 500, 1, 0 );
    l_U1820 = 0;
    l_U1819 = 0;
    sub_5261( ref l_U1830, 400, 1, 0 );
    sub_5261( ref l_U1821, 500, 1, 0 );
    sub_17773( ref l_U1851, 1, l_U1937, l_U1937, l_U1937, 1.40000000, 2.00000000, 0, 0 );
    sub_18450( ref l_U1851, 30, "POI_VALVE_LEFT" );
    sub_18611( ref l_U1851, 1 );
    sub_5261( ref l_U1943, 7900, 1, 0 );
    l_U1952 = 0;
    sub_17773( ref l_U1953, 1, l_U2039, l_U2039, l_U2039, 1.40000000, 2.00000000, 0, 0 );
    sub_18450( ref l_U1953, 30, "POI_VALVE_RIGHT" );
    sub_18611( ref l_U1953, 1 );
    sub_5261( ref l_U2045, 7900, 1, 0 );
    l_U2054 = 0;
    sub_5261( ref l_U2063, 700, 1, 0 );
    sub_5261( ref l_U2072, 600, 1, 0 );
    sub_5261( ref l_U2081, 1300, 1, 0 );
    sub_5261( ref l_U2090, 1000, 1, 0 );
    sub_5261( ref l_U165, 1000, 1, 0 );
    sub_2139( "GA", "P_INITIALIZE_SCRIPT_DATA end", 0 );
    return;
}

void sub_17773(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
    sub_17788( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
    sub_18156( iParam0 );
    return;
}

void sub_17788(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_18156(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_18235( iParam0 );
    return;
}

void sub_18235(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_10678( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_10678( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_10678( iParam0, 1 );
            }
            else
            {
                sub_10678( iParam0, 0 );
            };;;
        }
        else
        {
            sub_10678( iParam0, 0 );
        }
    }
    else
    {
        sub_10678( iParam0, 0 );
    }
    return;
}

void sub_18450(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_18481( iParam0 );
    return;
}

void sub_18481(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_18611(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        iParam0->_fU304 = 1;
    }
    else
    {
        iParam0->_fU304 = 0;
    }
    return;
}

void sub_18897()
{
    sub_2139( "GA", "P_SET_STATIC_DATA start", 0 );
    sub_18982( ref l_U866[0], 38.71930000, 4.66146000, -1.09685100, 90.00000000, 1598522081, 7, 3, 2, 0, 0 );
    sub_18982( ref l_U866[1], 38.84000000, 5.87000000, -1.00000000, 105.00000000, 270644968, 7, 3, 2, 0, 0 );
    sub_18982( ref l_U866[2], 38.51000000, 2.68000000, -1.00000000, 90.00000000, 636894405, 7, 3, 2, 0, 0 );
    sub_18982( ref l_U866[3], 42.68000000, 2.28000000, -1.00000000, 0.00000000, -780580609, 7, 3, 2, 0, 0 );
    sub_18982( ref g_U3322[0], 41.66410000, 6.49713600, -1.14755100, 0.00000000, -2028667744, 7, 3, 2, 0, 0 );
    sub_18982( ref g_U3322[1], 41.74907000, 0.74880400, -1.14598800, 0.00000000, 647102434, 7, 3, 2, 0, 0 );
    sub_19388( ref l_U950, "Trigger_Fire_Door_Close_Safety", 42.00000000, 4.10000000, -1.16000000, 4.27000000, 9.74000000, 2.54000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_19388( ref l_U1378[6], "ExplosionZone_PlayerStart", 17.19000000, 3.94000000, -3.85000000, 9.44000000, 14.78000000, 5.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_19388( ref l_U1378[7], "ExplosionZone_Middle", 28.43000000, 3.94000000, -3.85000000, 13.25000000, 14.78000000, 5.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_19388( ref l_U1378[8], "ExplosionZone_FireDoors", 39.22000000, 3.94000000, -3.85000000, 8.22000000, 14.78000000, 5.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_19388( ref l_U1378[4], "ExplosionZone_Safety_L_Engine", 26.63000000, 8.64000000, -3.09000000, 7.73000000, 5.48000000, 5.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_19388( ref l_U1378[5], "ExplosionZone_Safety_R_Engine", 26.07000000, -1.06000000, -3.09000000, 7.73000000, 5.48000000, 5.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_19388( ref l_U1378[3], "ExplosionZone_Safety_Pipes", 18.79000000, 8.70000000, -3.85000000, 8.43000000, 5.48000000, 5.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_19388( ref l_U1378[1], "ExplosionZone_Safety_R_StairsA", 15.64000000, -1.06000000, -0.83000000, 4.32000000, 5.48000000, 5.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_19388( ref l_U1378[2], "ExplosionZone_Safety_R_StairsB", 15.64000000, -1.06000000, -0.83000000, 4.32000000, 5.48000000, 5.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_19388( ref l_U1378[0], "ExplosionZone_Safety_L_Stairs", 13.64000000, 8.70000000, -3.85000000, 2.01000000, 5.48000000, 5.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_19388( ref l_U919, "Trigger_Activate_ShowerRebels", 32.45000000, 3.86000000, -2.80000000, 15.00000000, 3.00000000, 5.00000000, 0.00000000, 0.00000000, -89.50000000, 1 );
    sub_19388( ref l_U2099, "Trigger_Start_Lock_Gate", 42.62000000, 3.84000000, -0.79000000, 9.34000000, 15.58000000, 2.54000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_19388( ref l_U2120, "Trigger_Close_Fire_Doors", 48.47000000, 4.10000000, -1.16000000, 8.97000000, 6.54000000, 2.54000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_20525();
    sub_20688();
    sub_20870();
    sub_21052();
    sub_21193();
    sub_22079();
    sub_22161();
    sub_22243();
    sub_2139( "GA", "P_SET_STATIC_DATA end", 0 );
    return;
}

void sub_18982(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_19388(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_20525()
{
    sub_20571( ref l_U136, g_U1566, g_U1565, l_U147, 0.00000000, 180.00000000, 0.00000000, 1 );
    sub_20571( ref l_U150, g_U1566, g_U1565, l_U161, 0.00000000, 180.00000000, 0.00000000, 1 );
    return;
}

void sub_20571(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = uParam2;
    iParam0->_fU12 = {uParam3};
    iParam0->_fU24 = {uParam6};
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = 1;
    return;
}

void sub_20688()
{
    sub_20571( ref l_U174, g_U1538, g_U1539, l_U185, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_20571( ref l_U189, g_U1538, g_U1539, l_U200, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_20571( ref l_U204, g_U1538, g_U1539, l_U215, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_20571( ref l_U219, g_U1538, g_U1539, l_U230, 0.00000000, 0.00000000, 0.00000000, 1 );
    return;
}

void sub_20870()
{
    sub_20571( ref l_U248, g_U1540, g_U1542, l_U259, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_20571( ref l_U234, g_U1540, g_U1541, l_U245, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_20571( ref l_U276, g_U1540, g_U1544, l_U287, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_20571( ref l_U262, g_U1540, g_U1543, l_U273, 0.00000000, 0.00000000, 0.00000000, 1 );
    return;
}

void sub_21052()
{
    sub_20571( ref l_U294, g_U1559, g_U1562, l_U327, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_20571( ref l_U305, g_U1560, g_U1563, l_U327, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_20571( ref l_U316, g_U1561, g_U1564, l_U327, 0.00000000, 0.00000000, 0.00000000, 1 );
    return;
}

void sub_21193()
{
    sub_20571( ref l_U330[0], g_U1558, g_U1551, 12.81800000, 2.05000000, -1.37200000, 0.00000000, 0.00000000, -90.00000000, 0 );
    sub_20571( ref l_U330[1], g_U1554, g_U1553, 12.82700000, 2.75000000, -1.37200000, 0.00000000, 0.00000000, -90.00000000, 0 );
    sub_20571( ref l_U330[2], g_U1557, g_U1551, 12.81800000, 3.43000000, -1.37200000, 0.00000000, 0.00000000, -90.00000000, 0 );
    sub_20571( ref l_U330[3], g_U1558, g_U1551, 12.81800000, 4.09000000, -1.37200000, 0.00000000, 0.00000000, -90.00000000, 0 );
    sub_20571( ref l_U330[4], g_U1556, g_U1556, 12.81800000, 2.05000000, -1.92500000, 0.00000000, 0.00000000, -90.00000000, 0 );
    sub_20571( ref l_U330[5], g_U1555, g_U1552, 12.81800000, 2.75000000, -1.92500000, 0.00000000, 0.00000000, -90.00000000, 0 );
    sub_20571( ref l_U330[6], g_U1556, g_U1551, 12.81800000, 3.44000000, -1.92500000, 0.00000000, 0.00000000, -90.00000000, 0 );
    sub_20571( ref l_U330[7], g_U1554, g_U1552, 12.81800000, 4.09000000, -1.92500000, 0.00000000, 0.00000000, -90.00000000, 0 );
    sub_20571( ref l_U419[0], g_U1556, g_U1551, 23.76500000, -3.40200000, 1.42710000, 0.00000000, 0.00000000, 0.00000000, 0 );
    sub_20571( ref l_U419[1], g_U1558, g_U1552, 23.17400000, -3.40200000, 1.42700000, 0.00000000, 0.00000000, 0.00000000, 0 );
    sub_20571( ref l_U442[0], g_U1557, g_U1552, 19.91000000, -1.33600000, 1.40500000, 0.00000000, 0.00000000, 0.00000000, 0 );
    sub_20571( ref l_U442[1], g_U1554, g_U1552, 18.34000000, -1.33600000, 1.40500000, 0.00000000, 0.00000000, 0.00000000, 0 );
    sub_20571( ref l_U465[0], g_U1554, g_U1551, 39.97500000, 1.46000000, 0.84000000, 0.00000000, 0.00000000, 90.00000000, 0 );
    sub_20571( ref l_U465[1], g_U1557, g_U1551, 39.97500000, 1.46000000, 0.29000000, 0.00000000, 0.00000000, 90.00000000, 0 );
    sub_20571( ref l_U465[2], g_U1556, g_U1551, 39.97500000, 6.22000000, 0.84000000, 0.00000000, 0.00000000, 90.00000000, 0 );
    sub_20571( ref l_U465[3], g_U1557, g_U1551, 39.97500000, 6.22000000, 0.29000000, 0.00000000, 0.00000000, 90.00000000, 0 );
    return;
}

void sub_22079()
{
    sub_20571( ref l_U515, g_U1567, g_U1568, l_U526, l_U532, 1 );
    sub_20571( ref l_U535, g_U1567, g_U1568, l_U546, l_U552, 1 );
    return;
}

void sub_22161()
{
    sub_20571( ref l_U567, g_U1571, g_U1570, l_U578, l_U532, 1 );
    sub_20571( ref l_U581, g_U1571, g_U1570, l_U592, l_U552, 1 );
    return;
}

void sub_22243()
{
    l_U558 = 0;
    l_U555 = -1;
    l_U556 = -1;
    l_U557 = -1;
    return;
}

void sub_22464()
{
    sub_2139( "GA", "P_REQUEST_EF_PERSISTENT_ASSETS start", 0 );
    sub_22524();
    sub_24469( ref l_U635, ref g_U1588 );
    sub_25611( ref l_U670, ref g_U1829 );
    sub_26611( ref g_U3079, ref g_U3026 );
    sub_22602( "LEVEL_S_PAN_CP_02", ref g_U1975 );
    sub_2139( "GA", "P_REQUEST_EF_PERSISTENT_ASSETS end", 0 );
    return;
}

void sub_22524()
{
    sub_2139( "CR", "P_GLOBAL_LOAD_PISTOL_ANIMS - Start", 0 );
    sub_22602( "NPC_PSTL_CORE", ref g_U1975 );
    sub_22602( "NPC_PSTL_COVER", ref g_U1975 );
    sub_22602( "NPC_PSTL_COVER_ENTER", ref g_U1975 );
    sub_22602( "NPC_PSTL_COVER_RELOAD", ref g_U1975 );
    sub_22602( "NPC_PSTL_DODGE", ref g_U1975 );
    sub_22602( "NPC_PSTL_FLAVOR", ref g_U1975 );
    sub_22602( "NPC_PSTL_FULLBODY", ref g_U1975 );
    sub_22602( "NPC_PSTL_RELOAD", ref g_U1975 );
    sub_22602( "NPC_PSTL_SEARCH", ref g_U1975 );
    sub_22602( "NPC_PSTL_STAIRS", ref g_U1975 );
    sub_22602( "NPC_PSTL_REACT", ref g_U1975 );
    sub_22602( "AMED_PSTL_PRONE", ref g_U1975 );
    sub_22602( "PLGE_PSTL_CROUCH", ref g_U1975 );
    sub_22602( "PLGE_PSTL_CORE", ref g_U1975 );
    sub_22602( "PLGE_PSTL_CORE_RELOAD", ref g_U1975 );
    sub_22602( "PLGE_PSTL_HANDSIG", ref g_U1975 );
    sub_22602( "PLGE_PSTL_ACTIONS", ref g_U1975 );
    sub_22602( "PLGE_PSTL_KNEE", ref g_U1975 );
    sub_22602( "PLGE_PSTL_COVER", ref g_U1975 );
    sub_22602( "PLGE_PSTL_REACT", ref g_U1975 );
    sub_22602( "PLGE_PSTL_COVER_EXIT", ref g_U1975 );
    sub_2139( "CR", "P_GLOBAL_LOAD_PISTOL_ANIMS - End", 0 );
    return;
}

void sub_22602(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_22623( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_22760( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_22623(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_22760( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_22760( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_22760( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_23431( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_22760( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_22760( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_22760(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_22782( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_22782(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_23431(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_24469(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_24504( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_24504(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_24539( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_24670( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_24539(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_24670( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_24670( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_24670( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_23431( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_24670( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_24670( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_24670(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_22782( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_25611(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_25646( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_25646(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_25667( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_25799( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_25667(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_25799( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_25799( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_25799( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_23431( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_25799( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_25799( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_25799(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_22782( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_26611(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_26632( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
        sub_26770( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_26632(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                sub_26770( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                sub_26770( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    sub_26770( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                    sub_23431( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                sub_26770( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
            sub_26770( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_26770(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_22782( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_27683()
{
    sub_2139( "GA", "P_REQUEST_EF_NONPERSISTENT_ASSETS start", 0 );
    sub_27755( -662952970, ref g_U1878 );
    sub_27755( -1118406608, ref g_U1878 );
    sub_27755( 1453623029, ref g_U1878 );
    sub_27755( -2056923918, ref g_U1878 );
    sub_29750( "S_PANA_FIRE_EXPLOSION_01", ref g_U2986 );
    sub_29750( "S_PANA_FIRE_EXPLOSION_02", ref g_U2986 );
    sub_29750( "Mid_01_Panama_SEQ_Blendout", ref g_U2986 );
    AUDIO_MUSIC_REQUEST_ONESHOT( "PANAMA_ONESHOT_1_SHORT", 0 );
    if ((l_U676) AND (g_U833 != 2))
    {
        sub_30953( "MID_01_PANAMA_concat", 0 );
    }
    sub_2139( "GA", "P_REQUEST_EF_NONPERSISTENT_ASSETS end", 0 );
    return;
}

void sub_27755(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_27790( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_27942( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_27790(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_27942( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_27942( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_27942( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_27942( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_23431( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_23431( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_27942( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_27942( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_27942(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_22782( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_29750(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_29771( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_29912( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_29771(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being requested!!!", 0 );
                sub_29912( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is already loading!!!", 0 );
                sub_29912( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (Result <= 2)
                {
                    if ((GET_SCRIPT_STREAM_STATE( uParam0, Result )) == 2)
                    {
                        sub_29912( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else
                    {
                        SCRIPT_ASSERT( "The SCRIPT_STREAM asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                        (uParam1^)[Result]._fU32 = 0;
                        sub_23431( ref (uParam1^)[Result]._fU36 );
                        return Result;
                    }
                }
                else
                {
                    sub_29912( Result, uParam1, uParam2 );
                    return -1;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being removed!!!", 0 );
                sub_29912( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (Result <= 2)
        {
            if ((GET_SCRIPT_STREAM_STATE( uParam0, iVar6 )) == 2)
            {
                StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
                (uParam1^)[iVar6]._fU32 = 3;
                sub_29912( iVar6, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar6;
            }
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The SCRIPT_STREAM - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_29912(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_22782( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The SCRIPT_STREAM asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_30953(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

int sub_31333(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_31453(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_31574(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_31701(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

int sub_31892(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_32019(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_32422(unknown uParam0)
{
    sub_2139( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_12663( uParam0, sub_4383() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_32936()
{
    sub_2139( "MF", "P_EF_PROPS_CREATE_ALARM_LIGHT_OKAY: START", 0 );
    sub_33005( ref l_U136 );
    if (DOES_OBJECT_EXIST( l_U136._fU8 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U136._fU8, ref g_U3215 );
    }
    sub_33005( ref l_U150 );
    if (DOES_OBJECT_EXIST( l_U150._fU8 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U150._fU8, ref g_U3215 );
    }
    sub_2139( "MF", "P_EF_PROPS_CREATE_ALARM_LIGHT_OKAY: END", 0 );
    return;
}

void sub_33005(int iParam0)
{
    sub_11744( iParam0->_fU8 );
    iParam0->_fU8 = sub_33045( iParam0->_fU0, iParam0->_fU12, iParam0->_fU24, 0, 0, 0 );
    FREEZE_OBJECT_POSITION( iParam0->_fU8, iParam0->_fU36 );
    return;
}

void sub_33045(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_33155( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_33155(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_6504( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_33598()
{
    sub_2139( "MF", "P_EF_PROPS_CREATE_ENGINES_OKAY: START", 0 );
    sub_33005( ref l_U174 );
    if (DOES_OBJECT_EXIST( l_U174._fU8 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U174._fU8, ref g_U3215 );
    }
    sub_33005( ref l_U189 );
    if (DOES_OBJECT_EXIST( l_U189._fU8 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U189._fU8, ref g_U3215 );
    }
    sub_33005( ref l_U204 );
    if ((DOES_OBJECT_EXIST( l_U204._fU8 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U204._fU8, ref g_U3215 );
        FREEZE_OBJECT_POSITION( l_U204._fU8, 1 );
    }
    sub_33005( ref l_U219 );
    if ((DOES_OBJECT_EXIST( l_U219._fU8 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U219._fU8, ref g_U3215 );
        FREEZE_OBJECT_POSITION( l_U219._fU8, 1 );
    }
    sub_2139( "MF", "P_EF_PROPS_CREATE_ENGINES_OKAY: END", 0 );
    return;
}

void sub_33934()
{
    sub_2139( "MF", "P_EF_PROPS_CREATE_ENGINES_FUELTANKS_OKAY: START", 0 );
    sub_33005( ref l_U262 );
    if (DOES_OBJECT_EXIST( l_U262._fU8 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U262._fU8, ref g_U3215 );
    }
    sub_33005( ref l_U276 );
    if (DOES_OBJECT_EXIST( l_U276._fU8 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U276._fU8, ref g_U3215 );
    }
    sub_33005( ref l_U248 );
    if (DOES_OBJECT_EXIST( l_U248._fU8 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U248._fU8, ref g_U3215 );
    }
    sub_33005( ref l_U234 );
    if (DOES_OBJECT_EXIST( l_U234._fU8 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U234._fU8, ref g_U3215 );
    }
    sub_2139( "MF", "P_EF_PROPS_CREATE_ENGINES_FUELTANKS_OKAY: END", 0 );
    return;
}

void sub_34256()
{
    sub_2139( "MF", "P_EF_PROPS_CREATE_PIPES_OKAY: START", 0 );
    l_U290 = sub_33045( g_U1545, l_U291, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U290 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U290, ref g_U3215 );
    }
    sub_2139( "MF", "P_EF_PROPS_CREATE_PIPES_OKAY: END", 0 );
    return;
}

void sub_34442()
{
    sub_2139( "MF", "P_EF_PROPS_CREATE_LIGHTS_OKAY: START", 0 );
    sub_33005( ref l_U294 );
    if (DOES_OBJECT_EXIST( l_U294._fU8 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U294._fU8, ref g_U3215 );
    }
    sub_33005( ref l_U305 );
    if (DOES_OBJECT_EXIST( l_U305._fU8 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U305._fU8, ref g_U3215 );
    }
    sub_33005( ref l_U316 );
    if (DOES_OBJECT_EXIST( l_U316._fU8 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U316._fU8, ref g_U3215 );
    }
    sub_2139( "MF", "P_EF_PROPS_CREATE_LIGHTS_OKAY: END", 0 );
    return;
}

void sub_34696()
{
    int I;

    sub_2139( "MF", "P_EF_PROPS_CREATE_MONITORS_STATUS_OKAY: START", 0 );
    for ( I = 0; I < l_U330; I++ )
    {
        sub_33005( ref l_U330[I] );
        if (DOES_OBJECT_EXIST( l_U330[I]._fU8 ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U330[I]._fU8, ref g_U3215 );
        }
    }
    for ( I = 0; I < l_U442; I++ )
    {
        sub_33005( ref l_U442[I] );
        if (DOES_OBJECT_EXIST( l_U442[I]._fU8 ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U442[I]._fU8, ref g_U3215 );
        }
    }
    for ( I = 0; I < l_U419; I++ )
    {
        sub_33005( ref l_U419[I] );
        if (DOES_OBJECT_EXIST( l_U419[I]._fU8 ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U419[I]._fU8, ref g_U3215 );
        }
    }
    for ( I = 0; I < l_U465; I++ )
    {
        sub_33005( ref l_U465[I] );
        if (DOES_OBJECT_EXIST( l_U465[I]._fU8 ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U465[I]._fU8, ref g_U3215 );
        }
    }
    sub_2139( "MF", "P_EF_PROPS_CREATE_MONITORS_STATUS_OKAY: END", 0 );
    return;
}

void sub_35170()
{
    sub_2139( "MF", "P_EF_PROPS_CREATE_POI_INDICATOR_LIGHTS_OKAY: START", 0 );
    l_U515._fU12 = {l_U526};
    sub_33005( ref l_U515 );
    if (DOES_OBJECT_EXIST( l_U515._fU8 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U515._fU8, ref g_U3215 );
    }
    l_U535._fU12 = {l_U546};
    sub_33005( ref l_U535 );
    if (DOES_OBJECT_EXIST( l_U535._fU8 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U535._fU8, ref g_U3215 );
    }
    sub_2139( "MF", "P_EF_PROPS_CREATE_POI_INDICATOR_LIGHTS_OKAY: END", 0 );
    return;
}

void sub_35434()
{
    sub_2139( "MF", "P_GLOBAL_CREATE_YACHT_BAY_DOORS start", "###" );
    sub_11744( g_U4075 );
    g_U4075 = sub_35539( 301129366, g_U4076, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    FREEZE_OBJECT_POSITION( g_U4075, 1 );
    sub_2139( "MF", "P_GLOBAL_CREATE_YACHT_BAY_DOORS end", "###" );
    return;
}

void sub_35539(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_33155( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_35837(int iParam0)
{
    sub_2139( "MF", "P_EF_PROPS_CREATE_FIRE_DOOR: START", 0 );
    sub_11744( g_U4071 );
    g_U4071 = sub_33045( g_U1548, g_U4072, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U4071 ))
    {
        FREEZE_OBJECT_POSITION( g_U4071, 1 );
        if (iParam0 == 1)
        {
            PLAY_OBJECT_ANIM( g_U4071, "P_Engine_Dr", "pa_doors", 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U4071, "P_Engine_Dr", "pa_doors", 1.00000000 );
        }
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U4071, ref g_U3223 );
    }
    sub_2139( "MF", "P_EF_PROPS_CREATE_FIRE_DOOR: END", 0 );
    return;
}

void sub_36140()
{
    sub_2139( "MF", "P_EF_PROPS_CREATE_WHEEL_VALVES: START", 0 );
    l_U559 = sub_33045( g_U1569, l_U560, l_U532, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U559 ))
    {
        FREEZE_OBJECT_POSITION( l_U559, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U559, ref g_U3215 );
    }
    l_U563 = sub_33045( g_U1569, l_U564, l_U552, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U563 ))
    {
        FREEZE_OBJECT_POSITION( l_U563, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U563, ref g_U3215 );
    }
    sub_2139( "MF", "P_EF_PROPS_CREATE_WHEEL_VALVES: END", 0 );
    return;
}

void sub_36410()
{
    sub_2139( "MF", "P_EF_PROPS_CREATE_POI_LIGHTS: START", 0 );
    sub_33005( ref l_U567 );
    if (DOES_OBJECT_EXIST( l_U567._fU8 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U567._fU8, ref g_U3215 );
    }
    sub_33005( ref l_U581 );
    if (DOES_OBJECT_EXIST( l_U581._fU8 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U581._fU8, ref g_U3215 );
    }
    sub_2139( "MF", "P_EF_PROPS_CREATE_POI_LIGHTS: END", 0 );
    return;
}

int sub_36629(unknown uParam0, unknown uParam1, int iParam2, boolean bParam3, boolean bParam4, int iParam5, unknown uParam6)
{
    int iVar9;
    int iVar10;
    int Result;

    iVar9 = sub_36643( uParam0, uParam1 );
    if (iParam2 == -1)
    {
        iVar10 = (uParam0^);
    }
    else
    {
        iVar10 = iParam2;
    }
    if (iVar9 < iVar10)
    {
        if ((uParam1^)[iVar9]._fU16 == 0)
        {
            SCRIPT_ASSERT( "Invalid Ped Struct!  No Model Defined! Aborting Ped Spawn", 0 );
            sub_2139( "MF", "Invalid Ped Struct!  No Model Defined! Aborting Ped Spawn", 0 );
            sub_36942( iVar9 );
            return 0;
        }
        if (NOT (DOES_PED_EXIST( (uParam0^)[iVar9] )))
        {
            sub_33155( (uParam1^)[iVar9]._fU16, uParam6 );
            (uParam0^)[iVar9] = sub_37009( ref (uParam1^)[iVar9] );
            if (NOT bParam4)
            {
                SET_PED_VISIBLE( (uParam0^)[iVar9], bParam4 );
                sub_6504( "SPAWNING INVISIBLE PED!!!" );
            }
            if (iParam5 == 1)
            {
                sub_37743( (uParam0^)[iVar9] );
                sub_6504( "Deactivating Ped..." );
            }
        }
    }
    if (bParam3)
    {
        if (iVar9 == (iVar10 - 1))
        {
            sub_2139( "MF", "F_HANDLE_PED_ARRAY_SPAWN: Returning true Once.  If you see this looping, you likely have unitialized ped model data in your pedstruct array.", 0 );
            Result = 1;
        }
        return Result;
    }
    else if (iVar9 >= iVar10)
    {
        return 1;
    }
    return 0;
}

void sub_36643(unknown uParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = (uParam1^);
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (DOES_PED_EXIST( (uParam0^)[I] )))
        {
            if ((uParam1^)[I]._fU16 != 0)
            {
                if (I < Result)
                {
                    Result = I;
                }
            }
        }
    }
    return Result;
}

void sub_36942(unknown uParam0)
{
    return;
}

void sub_37009(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_33155( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_37488( iParam0->_fU40 );
    sub_37568( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_37488(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_37568(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_37743(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_38087()
{
    int I;

    sub_2139( "GA", "P_EF_SETUP_ENGINE_ROOM_PEDS start", 0 );
    for ( I = 0; I < l_U861; I++ )
    {
        if ((sub_38170( l_U861[I], 0 )) == 1)
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U861[I], 1 );
            SET_PED_ALERTNESS( l_U861[I], 3 );
            SET_PED_OBLIVIOUS_TO_DANGER( l_U861[I], 1 );
        }
    }
    if ((sub_38170( l_U861[0], 0 )) == 1)
    {
        sub_14848( l_U861[0], -612753081, 25000, 0, 1 );
        SET_PED_AI_TEMPLATE( l_U861[0], ref g_U1504 );
        SET_PED_COMBAT_RANGE_MIN( l_U861[0], 3.50000000 );
        SET_PED_COMBAT_RANGE_MAX( l_U861[0], 8.00000000 );
        SET_ROOM_FOR_PED_BY_NAME( l_U861[0], ref g_U3215 );
    }
    if ((sub_38170( l_U861[1], 0 )) == 1)
    {
        sub_14848( l_U861[1], -1404433099, 25000, 0, 1 );
        SET_PED_AI_TEMPLATE( l_U861[1], ref g_U1480 );
        SET_PED_COMBAT_RANGE_MIN( l_U861[1], 4.50000000 );
        SET_PED_COMBAT_RANGE_MAX( l_U861[1], 10.00000000 );
        SET_ROOM_FOR_PED_BY_NAME( l_U861[1], ref g_U3215 );
    }
    if ((sub_38170( l_U861[2], 0 )) == 1)
    {
        sub_14848( l_U861[2], -1404433099, 25000, 0, 1 );
        SET_PED_AI_TEMPLATE( l_U861[2], ref g_U1504 );
        SET_PED_COMBAT_RANGE_MIN( l_U861[2], 4.50000000 );
        SET_PED_COMBAT_RANGE_MAX( l_U861[2], 13.00000000 );
        SET_ROOM_FOR_PED_BY_NAME( l_U861[2], ref g_U3215 );
    }
    if ((sub_38170( l_U861[3], 0 )) == 1)
    {
        sub_14848( l_U861[3], -612753081, 25000, 0, 1 );
        SET_PED_AI_TEMPLATE( l_U861[3], ref g_U1504 );
        SET_PED_COMBAT_RANGE_MIN( l_U861[3], 4.50000000 );
        SET_PED_COMBAT_RANGE_MAX( l_U861[3], 13.00000000 );
        SET_ROOM_FOR_PED_BY_NAME( l_U861[3], ref g_U3223 );
    }
    sub_38859( ref l_U861, "piEF_EngineRebels-" );
    sub_2139( "GA", "P_EF_SETUP_ENGINE_ROOM_PEDS end", 0 );
    return;
}

void sub_38170(unknown uParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((DOES_PED_EXIST( uParam0 )) == 1)
    {
        Result = 1;
    }
    else
    {
        Result = 0;
    }
    if (Result == 1)
    {
        if ((IS_PED_DEAD( uParam0 )) == 1)
        {
            if (iParam1 == 1)
            {
                Result = 1;
            }
            else
            {
                Result = 0;
            }
        }
        else
        {
            Result = 1;
        }
    }
    return Result;
}

void sub_38859(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_39029()
{
    int I;

    sub_2139( "CR", "P_EF_SETUP_SHOWER_ROOM_PEDS start", 0 );
    for ( I = 0; I < g_U3319; I++ )
    {
        if (sub_38170( g_U3319[I], 0 ))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U3319[I], 1 );
            SET_PED_ALERTNESS( g_U3319[I], 3 );
        }
    }
    if (sub_38170( g_U3319[0], 0 ))
    {
        sub_14848( g_U3319[0], -612753081, 25000, 0, 1 );
        SET_PED_AI_TEMPLATE( g_U3319[0], ref g_U1504 );
        SET_PED_COMBAT_RANGE_MIN( g_U3319[0], 1.00000000 );
        SET_PED_COMBAT_RANGE_MAX( g_U3319[0], 15.00000000 );
        SET_ROOM_FOR_PED_BY_NAME( g_U3319[0], ref g_U3223 );
    }
    if (sub_38170( g_U3319[1], 0 ))
    {
        sub_14848( g_U3319[1], -1404433099, 25000, 0, 1 );
        SET_PED_AI_TEMPLATE( g_U3319[1], ref g_U1480 );
        SET_PED_COMBAT_RANGE_MIN( g_U3319[1], 1.00000000 );
        SET_PED_COMBAT_RANGE_MAX( g_U3319[1], 15.00000000 );
        SET_ROOM_FOR_PED_BY_NAME( g_U3319[1], ref g_U3223 );
    }
    sub_38859( ref g_U3319, "piEF_ShowerRebels-" );
    sub_2139( "CR", "P_EF_SETUP_SHOWER_ROOM_PEDS end", 0 );
    return;
}

int sub_39989()
{
    sub_40004( ref g_U1246, 0 );
    return 1;
}

void sub_40004(int iParam0, unknown uParam1)
{
    if (NOT (sub_40018( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

boolean sub_40018(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_40161()
{
    sub_2139( "MF", "P_EF_MID_01_REGISTER - START", 0 );
    if (sub_38170( sub_4383(), 0 ))
    {
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( sub_4383(), 0, 0 ), "W_PI_Glk18_Aa_H", 0 );
        CUTSCENE_REGISTER_ISEQ( -662952970 );
        ISEQ_REGISTER_ENTITY( -662952970, "s_pan_max_cover", sub_4383(), 0 );
    }
    if ((sub_38170( l_U861[0], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U861[0], "M_PA_REBL_A", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U861[0], 0, 0 ), "W_PI_608_Aa_H", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U861[0], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U861[0], l_U866[0]._fU0, l_U866[0]._fU12 );
    }
    if ((sub_38170( l_U861[1], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U861[1], "M_PA_REBL_A^1", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U861[1], 0, 0 ), "W_AR_FAL_Aa_H", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U861[1], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U861[1], l_U866[1]._fU0, l_U866[1]._fU12 );
    }
    if ((sub_38170( l_U861[2], 0 )) == 1)
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U861[2], "M_PA_REBL_A^2", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U861[2], 0, 0 ), "W_AR_FAL_Aa_H^1", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U861[2], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U861[2], l_U866[2]._fU0, l_U866[2]._fU12 );
    }
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U3713[8]._fU0, g_U3713[8]._fU4 ), "P_MI_BlkDor_ob_H", 0 );
    sub_2139( "MF", "P_EF_MID_01_REGISTER - END", 0 );
    return;
}

void sub_40994()
{
    unknown uVar2;

    if (l_U679._fU52)
    {
        sub_41022( ref l_U861 );
        g_U3684 = 0;
        SET_CAM_VIEW_MODE( 0 );
        if ((NOT (IS_PLAYER_DEAD( sub_4405() ))) AND (NOT (IS_PED_DEAD( sub_4383() ))))
        {
            SET_PED_FORCED_TO_WALK( sub_4383(), 0 );
            TASK_CLEAR_LOOK_AT( sub_4383() );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_4405(), 1 );
            uVar2 = GET_WEAPON_FROM_HAND( sub_4383(), 1, 0 );
            if (GET_DOES_WEAPON_EXIST( uVar2 ))
            {
                SET_WEAPON_VISIBLE( uVar2, 0 );
            }
        }
        AUDIO_MUSIC_SUSPEND( 6000 );
    }
    if (NOT l_U860)
    {
        if (GET_CUTSCENE_TIME_MS() >= 11500)
        {
            sub_2139( "CR", "Playing 1.8B: Playing PANAMA_FINAL Mood: PANAMA_FINAL_3", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_3", "PANAMA_FINAL_3", 0.00000000, 9000, -1, -1082130432, 0 );
            l_U860 = 1;
        }
    }
    return;
}

void sub_41022(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_41053( (uParam0^)[I] );
    }
    return;
}

void sub_41053(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

int sub_41484()
{
    return 1;
}

void sub_41503()
{
    int I;

    sub_2139( "MF", "P_EF_MID_01_PREPARE_BLEND_OUT - START", 0 );
    sub_41568( 1, 0, 0, 1 );
    sub_41727();
    sub_5811( ref l_U940 );
    sub_5811( ref l_U1072 );
    sub_5811( ref l_U1081 );
    if (NOT (ISEQ_QUERY_ENTITY_STATE( -662952970, "s_pan_max_cover", 3 )))
    {
        sub_41022( ref l_U861 );
        ISEQ_REGISTER_ENTITY( -662952970, "s_pan_max_cover", sub_4383(), 0 );
        ISEQ_START( -662952970 );
    }
    sub_42777( "Mid_01_Panama_SEQ_Blendout", ref g_U2986 );
    sub_5811( ref l_U841 );
    for ( I = 0; I <= 6; I++ )
    {
        sub_5811( ref l_U1160[I]._fU8 );
    }
    CAMERA_PLAY_ANIMATED( "LEVEL_S_PAN_CP_02", "B_OUT_MID_01_PAN_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
    sub_2139( "MF", "MUSIC: Playing One Shot: PANAMA_ONESHOT_1_SHORT", 0 );
    AUDIO_MUSIC_PLAY_ONESHOT();
    sub_2139( "CR", "Playing 2.1: Playing PANAMA_FINAL Mood: PANAMA_FINAL_3_5", 0 );
    AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_3_5", "PANAMA_FINAL_3_5", 0.00000000, 5000, -1, -1082130432, 0 );
    SET_PLAYER_FORCED_AIM_MAINTAIN_DIRECTION( sub_4405(), 1, 0 );
    sub_2139( "MF", "P_EF_MID_01_PREPARE_BLEND_OUT - END", 0 );
    return;
}

void sub_41568(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_4383() )))
        {
            SET_PLAYER_CONTROL( sub_4405(), 0, uParam2 );
            SET_PED_DUCKING( sub_4383(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_4383() );
            }
            SET_PED_INVINCIBLE( sub_4383(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_41727()
{
    int I;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;

    sub_2139( "MF", "P_EF_REBELS_TAKE_POSITION - START", 0 );
    if (NOT (IS_PED_DEAD( sub_4383() )))
    {
        for ( I = 0; I < l_U861; I++ )
        {
            if (sub_38170( l_U861[I], 0 ))
            {
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U861[I], 1 );
                REGISTER_TARGET( l_U861[I], sub_4383() );
                SET_LOCKED_TARGET( l_U861[I], sub_4383() );
                SET_PED_FLAG_LOCK_TO_COVER( l_U861[I], 1 );
            }
        }
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_COMBAT_MOVE_TO_COVER( 0, "GenCover", "A3011679_9C79663B_Corner1", sub_4383() );
        CLOSE_SEQUENCE_TASK( uVar3 );
        if (sub_38170( l_U861[0], 0 ))
        {
            TASK_PERFORM_SEQUENCE( l_U861[0], uVar3 );
        }
        CLEAR_SEQUENCE_TASK( uVar3 );
        OPEN_SEQUENCE_TASK( ref uVar4 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_SHOOT_AT_COORD( 0, 20.23000000, -0.03000000, 0.11000000, 3000, -256437761, 1, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_MOVE_TO_COVER( 0, "GenCover", "A3011679_B2BB12C2_Corner1", 0 );
        CLOSE_SEQUENCE_TASK( uVar4 );
        if (sub_38170( l_U861[1], 0 ))
        {
            TASK_PERFORM_SEQUENCE( l_U861[1], uVar4 );
        }
        CLEAR_SEQUENCE_TASK( uVar4 );
        OPEN_SEQUENCE_TASK( ref uVar5 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_SHOOT_AT_COORD( 0, 20.93000000, 3.60000000, -2.80000000, 1000, -256437761, 1, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_MOVE_TO_COVER( 0, "GenCover", "A3011679_EB738302_Corner2", 0 );
        CLOSE_SEQUENCE_TASK( uVar5 );
        if (sub_38170( l_U861[2], 0 ))
        {
            TASK_PERFORM_SEQUENCE( l_U861[2], uVar5 );
        }
        CLEAR_SEQUENCE_TASK( uVar5 );
        OPEN_SEQUENCE_TASK( ref uVar6 );
        if (sub_38170( sub_4383(), 0 ))
        {
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, 31.90000000, 3.17000000, -2.80000000, sub_4383(), 1, 0.00000000, 1101004800, -1082130432, 3 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_MOVE_TO_COVER( 0, "GenCover", "A3011679_7D37A674_Corner2", 0 );
        }
        CLOSE_SEQUENCE_TASK( uVar6 );
        if (sub_38170( l_U861[3], 0 ))
        {
            TASK_PERFORM_SEQUENCE( l_U861[3], uVar6 );
            SET_PED_INVINCIBLE( l_U861[3], 1 );
        }
        CLEAR_SEQUENCE_TASK( uVar6 );
    }
    sub_2139( "MF", "P_EF_REBELS_TAKE_POSITION - END", 0 );
    return;
}

void sub_42777(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if (sub_8643( uParam0, uParam1 ))
    {
        iVar4 = sub_8742( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            PLAY_SCRIPT_STREAM_FRONTEND( iVar4 );
        }
        else
        {
            SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

int sub_43406()
{
    if (l_U679._fU52)
    {
        DO_SCREEN_FADE_IN( 0 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1158[2], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1122[2], 1065353216, 0 );
    }
    if (NOT l_U851._fU20)
    {
        if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_PAN_CP_02", "B_OUT_MID_01_PAN_CAM" )) - l_U850))
        {
            CAMERA_ANIMATED_STOP( l_U850, 1 );
            SIMULATE_PLAYER_INPUT_GAIT( sub_4405(), 3, l_U850 - 100, 0 );
            sub_5811( ref l_U851 );
        }
    }
    sub_43607();
    if (sub_5975( ref l_U841 ))
    {
        sub_43925();
    }
    if (NOT (ISEQ_QUERY_STATE( -662952970, 3 )))
    {
        return 1;
    }
    return 0;
}

void sub_43607()
{
    int I;

    for ( I = 0; I <= 6; I++ )
    {
        if (sub_5975( ref l_U1160[I]._fU8 ))
        {
            sub_36942( I );
            l_U1160[I]._fU0 = sub_43733( ref l_U1160[I]._fU0, "Pana_EnginePipe_Flame_S", l_U1160[I]._fU44, l_U1160[I]._fU56, l_U1160[I]._fU68 );
        }
    }
    return;
}

void sub_43733(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    if ((uParam0^) <= 0)
    {
        sub_2139( "MF", "F_SAFE_START_LOOPED_FX_AT_COORD: Starting FX...", 0 );
        (uParam0^) = START_PARTICLE_FX_LOOPED_AT_COORD( uParam1, uParam2, uParam5, uParam8 );
    }
    else
    {
        sub_6504( " . FX ID not set to 0!" );
    }
    return (uParam0^);
}

void sub_43925()
{
    sub_2139( "MF", "P_EF_DIALOGUE_MID_01_BLEND_OUT - START", 0 );
    sub_40004( ref g_U1246, 0 );
    sub_6504( "Playing Monologue: SPAN_MID01B" );
    sub_44053( "SPAN_MID01B", ref g_U1246 );
    sub_2139( "MF", "P_EF_DIALOGUE_MID_01_BLEND_OUT - END", 0 );
    return;
}

void sub_44053(unknown uParam0, unknown uParam1)
{
    sub_44065( uParam1 );
    sub_44145( 0, sub_4383(), "MAX", uParam1, 2, 0 );
    sub_44145( 1, sub_4383(), "MAX", uParam1, 2, 0 );
    sub_44370( uParam0, uParam1, 8, 1 );
    return;
}

void sub_44065(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_44145(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_44370(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_44394( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_44394(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_44449( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_44449(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_44484( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_44978( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_44484(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_44978(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_45252(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_2139( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return sub_45377( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 45337, 45355, uParam8 );
}

void sub_45337()
{
    return;
}

int sub_45355()
{
    return 1;
}

void sub_45377(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_45678(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_2139( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_2139( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_2139( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_2139( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_2139( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_2139( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_30953( iParam0->_fU0, 0 );
            sub_2139( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_41568( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_41568( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_2139( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_46919( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_41568( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_47268( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_47268( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_46919(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_4383() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_4383(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_4383(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_4383(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_4383(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_4383(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_47268(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_4383() )))
    {
        SET_PLAYER_CONTROL( sub_4405(), 1, 0 );
        SET_PED_INVINCIBLE( sub_4383(), 0 );
        if (bParam0)
        {
            sub_47349();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_47349()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_4383() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_4383(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_4383(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_4383(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_4383(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_47683(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_2139( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_2139( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_15502( iParam1 );
        sub_47942( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_48393( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_48393( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_48625( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_48393( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_48625( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_48625( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_48393( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_48625( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_48625( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_48625( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_48393( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_48625( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_48625( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_48625( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_48625( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_50183( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_2139( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_47942(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_12879( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_2139( "TEH", "Ending context", 0 );
        sub_2139( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_48393(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_48625(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_50183(int iParam0)
{
    sub_6504( "CHECKPOINT DATA" );
    sub_50222( iParam0->_fU4 );
    sub_50245( iParam0->_fU16 );
    sub_50245( iParam0->_fU20 );
    sub_50245( iParam0->_fU24 );
    sub_36942( iParam0->_fU28 );
    sub_36942( iParam0->_fU56 );
    sub_36942( iParam0->_fU60 );
    sub_36942( iParam0->_fU64 );
    sub_36942( iParam0->_fU68 );
    sub_36942( iParam0->_fU72 );
    sub_36942( iParam0->_fU76 );
    sub_36942( iParam0->_fU80 );
    sub_36942( iParam0->_fU84 );
    sub_36942( iParam0->_fU88 );
    sub_36942( iParam0->_fU92 );
    sub_50245( iParam0->_fU32 );
    sub_36942( iParam0->_fU36 );
    sub_36942( iParam0->_fU40 );
    sub_36942( iParam0->_fU44 );
    sub_50245( iParam0->_fU136 );
    sub_50480( iParam0->_fU140 );
    sub_36942( iParam0->_fU52 );
    sub_6504( "---nRightHolsterAttachmentEnabled: " );
    sub_36942( iParam0->_fU96 );
    sub_6504( "---nRightHolsterAttachmentToggled: " );
    sub_36942( iParam0->_fU100 );
    sub_6504( "---nLeftHolsterAttachmentEnabled: " );
    sub_36942( iParam0->_fU104 );
    sub_6504( "---nLeftHolsterAttachmentToggled: " );
    sub_36942( iParam0->_fU108 );
    sub_6504( "---nRifleHolsterAttachmentEnabled: " );
    sub_36942( iParam0->_fU112 );
    sub_6504( "---nRifleHolsterAttachmentToggled: " );
    sub_36942( iParam0->_fU116 );
    sub_6504( "---nRightHandAttachmentEnabled: " );
    sub_36942( iParam0->_fU120 );
    sub_6504( "---nRightHandAttachmentToggled: " );
    sub_36942( iParam0->_fU124 );
    sub_6504( "---nLeftHandAttachmentEnabled: " );
    sub_36942( iParam0->_fU128 );
    sub_6504( "---nLeftHandAttachmentToggled: " );
    sub_36942( iParam0->_fU132 );
    sub_36942( l_U1 );
    sub_36942( 144 );
    return;
}

void sub_50222(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_50245(unknown uParam0)
{
    return;
}

void sub_50480(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_51284()
{
    sub_2139( "MF", "P_EF_CLOSE_AND_LOCK_ENTRANCE_DOOR - START", 0 );
    sub_51357( ref g_U3713[8], 1 );
    sub_51563( ref g_U3713[8], 1 );
    sub_2139( "MF", "P_EF_CLOSE_AND_LOCK_ENTRANCE_DOOR - END", 0 );
    return;
}

void sub_51357(int iParam0, int iParam1)
{
    if ((sub_51369( iParam0 )) == 0)
    {
        sub_51435( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

int sub_51369(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_51435(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_51563(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_51369( iParam0 )) == 0)
    {
        sub_51435( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

void sub_51760()
{
    sub_2139( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_2139( "CCB", "Starting the Panama_Engine_Fire context...", 0 );
    START_CONTEXT( "Panama_Engine_Fire" );
    return;
}

void sub_51989(boolean bParam0)
{
    int I;

    for ( I = 0; I <= 2; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U861[I] )))
        {
            PED_FORCE_TARGETABLE( l_U861[I], bParam0 );
        }
        if (bParam0)
        {
            sub_52065( ref l_U2141, 4000 );
            sub_2139( "CR", "Setting peds to be force targetable and starting the timer", 0 );
        }
        else
        {
            sub_2139( "CR", "Disabling the peds from being force targetable", 0 );
        }
    }
    return;
}

void sub_52065(unknown uParam0, unknown uParam1)
{
    sub_5261( uParam0, uParam1, 1, 0 );
    sub_5811( uParam0 );
    return;
}

int sub_52257()
{
    if (l_U558 == 1)
    {
        if (NOT (IS_OBJECT_PLAYING_ANIM( g_U4071, "P_Engine_Dr", "pa_doors" )))
        {
            sub_10020();
            l_U558 = 0;
            sub_6504( "Fire Door Sounds Have Been Stopped..." );
            return 1;
        }
    }
    return 0;
}

void sub_52411()
{
    sub_2139( "MF", "P_EF_PROPS_SET_ALARM_LIGHT_WARNING: START", 0 );
    if (l_U136._fU40)
    {
        sub_52495( ref l_U136, 0 );
        if (DOES_OBJECT_EXIST( l_U136._fU8 ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U136._fU8, ref g_U3215 );
            PLAY_OBJECT_ANIM( l_U136._fU8, "p_warnignLight01", "pa_anim", 0.00000000, 1, 0 );
            SET_OBJECT_ANIM_SPEED( l_U136._fU8, "p_warnignLight01", "pa_anim", l_U164 );
        }
    }
    if (l_U150._fU40)
    {
        sub_52495( ref l_U150, 0 );
        if (DOES_OBJECT_EXIST( l_U150._fU8 ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U150._fU8, ref g_U3215 );
            PLAY_OBJECT_ANIM( l_U150._fU8, "p_warnignLight01", "pa_anim", 0.00000000, 1, 0 );
            SET_OBJECT_ANIM_SPEED( l_U150._fU8, "p_warnignLight01", "pa_anim", l_U164 );
        }
    }
    sub_2139( "MF", "P_EF_PROPS_SET_ALARM_LIGHT_WARNING: END", 0 );
    return;
}

void sub_52495(int iParam0, boolean bParam1)
{
    unknown uVar4;

    uVar4 = iParam0->_fU8;
    if (NOT bParam1)
    {
        iParam0->_fU12 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU8 )};
        iParam0->_fU24 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_ROTATION( iParam0->_fU8 )};
    }
    if (iParam0->_fU40 == 1)
    {
        iParam0->_fU8 = sub_33045( iParam0->_fU4, iParam0->_fU12, iParam0->_fU24, 0, 0, 0 );
        iParam0->_fU40 = 0;
    }
    else
    {
        iParam0->_fU8 = sub_33045( iParam0->_fU0, iParam0->_fU12, iParam0->_fU24, 0, 0, 0 );
        iParam0->_fU40 = 1;
    }
    FREEZE_OBJECT_POSITION( iParam0->_fU8, iParam0->_fU36 );
    sub_11744( uVar4 );
    return;
}

void sub_53042()
{
    sub_2139( "MF", "P_EF_PROPS_START_ALARM_SOUND: START", 0 );
    ENABLE_STATIC_EMITTER( "S_PANA_SE_YACHT_ENGINE_ALARM", 1 );
    sub_2139( "MF", "P_EF_PROPS_START_ALARM_SOUND: END", 0 );
    return;
}

void sub_53229()
{
    int I;

    sub_2139( "MF", "P_EF_REBELS_START_COMBAT - START", 0 );
    for ( I = 0; I < l_U861; I++ )
    {
        if (sub_38170( l_U861[I], 0 ))
        {
            SET_PED_FLAG_LOCK_TO_COVER( l_U861[I], 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U861[I], 0 );
        }
    }
    sub_2139( "MF", "P_EF_REBELS_START_COMBAT - END", 0 );
    return;
}

void sub_53423()
{
    int I;

    for ( I = 0; I < l_U861; I++ )
    {
        if (((sub_53479( l_U861[I], sub_4383(), 1 )) <= 4.00000000) AND (sub_38170( l_U861[I], 0 )))
        {
            SET_PED_FLAG_LOCK_TO_COVER( l_U861[I], 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U861[I], 0 );
        }
    }
    return;
}

void sub_53479(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    }
    if (bParam2)
    {
        return VDIST( uVar5, uVar8 );
        break;
    }
    return VDIST( uVar5._fU0, uVar5._fU4, 0, uVar8._fU0, uVar8._fU4, 0 );
}

void sub_53691()
{
    sub_2139( "MF", "P_EF_TURN_OFF_ENGINE_SOUNDS - START", 0 );
    AUD_SET_IS_POWER_ON( 0 );
    ENABLE_STATIC_EMITTER( "S_PANA_SE_YACHT_ENGINE_01", 0 );
    sub_2139( "MF", "P_EF_TURN_OFF_ENGINE_SOUNDS - END", 0 );
    return;
}

int sub_53874(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_53993()
{
    sub_2139( "MF", "P_EF_FIRE_DOOR_CLOSE: START", 0 );
    if (DOES_OBJECT_EXIST( g_U4071 ))
    {
        l_U556 = sub_54093( ref l_U556, "FIRE_ROOM_DOOR_CLOSE", g_U4071 );
        PLAY_OBJECT_ANIM( g_U4071, "P_Engine_Dr", "pa_doors", 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U4071, "P_Engine_Dr", "pa_doors", 1.00000000 );
        SET_OBJECT_ANIM_SPEED( g_U4071, "P_Engine_Dr", "pa_doors", -1.10000000 );
        l_U558 = 1;
    }
    sub_2139( "MF", "P_EF_FIRE_DOOR_CLOSE: END", 0 );
    return;
}

void sub_54093(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if ((uParam0^) < 0)
    {
        (uParam0^) = GET_SOUND_ID();
        if ((DOES_OBJECT_EXIST( uParam2 )) == 1)
        {
            sub_2139( "MF", "F_SAFE_PLAY_SOUND_FROM_OBJECT: Starting Sound...", 0 );
            PLAY_SOUND_FROM_OBJECT( (uParam0^), uParam1, uParam2 );
        }
        else
        {
            SCRIPT_ASSERT( "F_SAFE_PLAY_SOUND_FROM_OBJECT: Object does not exist!", 0 );
        }
    }
    else
    {
        sub_6504( " . Sound ID not set to 0!" );
    }
    return (uParam0^);
}

void sub_54547(unknown uParam0)
{
    int I;

    if ((sub_54559( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_54559(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

int sub_54754(unknown uParam0, boolean bParam1)
{
    if ((sub_54767( uParam0, 0 )) == 1)
    {
        if (NOT bParam1)
        {
            if ((sub_54559( uParam0 )) == 0)
            {
                return 1;
            }
        }
        if (bParam1)
        {
            if ((sub_54901( uParam0 )) == (uParam0^))
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_54767(unknown uParam0, boolean bParam1)
{
    int I;
    int Result;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((DOES_PED_EXIST( (uParam0^)[I] )) == 1)
        {
            Result = 1;
            if (NOT bParam1)
            {
                return 1;
            }
        }
        else
        {
            Result = 0;
        }
    }
    return Result;
}

void sub_54901(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

void sub_55065(unknown uParam0)
{
    if ((uParam0^) != 0)
    {
        STOP_PARTICLE_FX_LOOPED( (uParam0^) );
        (uParam0^) = 0;
    }
    return;
}

void sub_55347()
{
    sub_2139( "MF", "P_EF_SETUP_2ND_EXPLOSION_CAM - START", 0 );
    if (sub_55416( l_U1378[4] ))
    {
        sub_5520( ref l_U1292[0], 27.19584000, 3.43476400, -1.23635400, -0.86687100, -0.15331600, -86.37972000, 50.00000000, 500 );
        sub_55568( ref l_U1292[1], ref l_U1292[0]._fU0, 26.14553000, 3.26080600, -1.69246900, -2.25784800, 0.00000400, -86.78509000, 50.00000000, 1500, 1600, 1, 1 );
        sub_56276( ref l_U1355, ref l_U1292, 0, 0, 0, l_U1606[4], l_U1616[4], 1 );
    }
    else if (sub_55416( l_U1378[5] ))
    {
        sub_5520( ref l_U1292[0], 27.19584000, 3.43476400, -1.23635400, -0.86687100, -0.15331600, -86.37972000, 50.00000000, 500 );
        sub_55568( ref l_U1292[1], ref l_U1292[0]._fU0, 26.14553000, 3.26080600, -1.69246900, -2.25784800, 0.00000400, -86.78509000, 50.00000000, 1500, 1600, 1, 1 );
        sub_56276( ref l_U1355, ref l_U1292, 0, 0, 0, l_U1606[5], l_U1616[5], 1 );
    }
    else if (sub_55416( l_U1378[3] ))
    {
        sub_5520( ref l_U1292[0], 27.19584000, 3.43476400, -1.23635400, -0.86687100, -0.15331600, -86.37972000, 50.00000000, 500 );
        sub_55568( ref l_U1292[1], ref l_U1292[0]._fU0, 26.14553000, 3.26080600, -1.69246900, -2.25784800, 0.00000400, -86.78509000, 50.00000000, 1500, 1600, 1, 1 );
        sub_56276( ref l_U1355, ref l_U1292, 0, 0, 0, l_U1606[3], l_U1616[3], 1 );
    }
    else if (sub_55416( l_U1378[0] ))
    {
        sub_5520( ref l_U1292[0], 27.19584000, 3.43476400, -1.23635400, -0.86687100, -0.15331600, -86.37972000, 50.00000000, 500 );
        sub_55568( ref l_U1292[1], ref l_U1292[0]._fU0, 26.14553000, 3.26080600, -1.69246900, -2.25784800, 0.00000400, -86.78509000, 50.00000000, 1500, 1600, 1, 1 );
        sub_56276( ref l_U1355, ref l_U1292, 0, 0, 0, l_U1606[0], l_U1616[0], 1 );
    }
    else if ((sub_55416( l_U1378[2] )) || (sub_55416( l_U1378[1] )))
    {
        sub_5520( ref l_U1292[0], 27.19584000, 3.43476400, -1.23635400, -0.86687100, -0.15331600, -86.37972000, 50.00000000, 500 );
        sub_55568( ref l_U1292[1], ref l_U1292[0]._fU0, 26.14553000, 3.26080600, -1.69246900, -2.25784800, 0.00000400, -86.78509000, 50.00000000, 1500, 1600, 1, 1 );
        sub_56276( ref l_U1355, ref l_U1292, 0, 0, 0, l_U1606[1], l_U1616[1], 1 );
    }
    else if (sub_55416( l_U1378[6] ))
    {
        sub_5520( ref l_U1292[0], 24.66000000, 3.38000000, -1.31000000, -0.72687100, -0.15331600, -87.67973000, 50.00000000, 1000 );
        sub_55568( ref l_U1292[1], ref l_U1292[0]._fU0, 23.68000000, 3.34000000, -1.32000000, -0.72000000, 0.00000400, -87.78509000, 50.00000000, 3000, 3100, 1, 1 );
        sub_56276( ref l_U1355, ref l_U1292, 0, 2000, 0, 0, 0, 1 );
    }
    else if (sub_55416( l_U1378[7] ))
    {
        sub_5520( ref l_U1292[0], 27.19584000, 3.43476400, -1.23635400, -0.86687100, -0.15331600, -86.37972000, 50.00000000, 500 );
        sub_55568( ref l_U1292[1], ref l_U1292[0]._fU0, 26.14553000, 3.26080600, -1.69246900, -2.25784800, 0.00000400, -86.78509000, 50.00000000, 1500, 1600, 1, 1 );
        sub_56276( ref l_U1355, ref l_U1292, 0, 1400, 0, 17, 3.50000000, 1 );
    }
    else if (sub_55416( l_U1378[8] ))
    {
        sub_5520( ref l_U1292[0], 27.19584000, 3.43476400, -1.23635400, -0.86687100, -0.15331600, -86.37972000, 50.00000000, 500 );
        sub_55568( ref l_U1292[1], ref l_U1292[0]._fU0, 29.71000000, 3.75000000, -1.18000000, 6.37784800, 0.00000400, -89.04509000, 50.00000000, 3000, 3100, 1, 1 );
        sub_56276( ref l_U1355, ref l_U1292, 0, 2000, 0, 17.00000000, 3.50000000, 1 );
    }
    else
    {
        SCRIPT_ASSERT( "Player not in valid explosion zone trigger", 0 );
    };;;;;;;;
    sub_2139( "MF", "P_EF_SETUP_2ND_EXPLOSION_CAM - END", 0 );
    return;
}

void sub_55416(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_53874( sub_4383(), uParam0 );
}

void sub_55568(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12)
{
    iParam0->_fU4 = {uParam5};
    iParam0->_fU16 = {uParam2};
    iParam0->_fU28 = uParam8;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam10;
    iParam0->_fU88 = uParam9;
    iParam0->_fU92 = 1;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU96 = 0;
    if (NOT ((uParam1^) == nil))
    {
        iParam0->_fU120 = (uParam1^);
    }
    else
    {
        SCRIPT_ASSERT( "Can Not Create Interpolated Camera - Source cam is not initialized.  Use NIS_CreateStaticCam to fix.", 0 );
    }
    sub_5261( iParam0 + 48, uParam10, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U703, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    iParam0->_fU100 = uParam11;
    iParam0->_fU104 = uParam12;
    if (iParam0->_fU108 == 1)
    {
        if (iParam0->_fU112 == 1)
        {
            iParam0->_fU104 = 2;
        }
        else if (iParam0->_fU112 == 2)
        {
            iParam0->_fU104 = 4;
        }
        else if (iParam0->_fU112 == 3)
        {
            iParam0->_fU104 = 3;
        }
        else if (iParam0->_fU112 == 4)
        {
            iParam0->_fU104 = 0;
        }
        else if (iParam0->_fU112 == 5)
        {
            iParam0->_fU104 = 5;
        }
        else if (iParam0->_fU112 == 6)
        {
            iParam0->_fU104 = 1;
        };;;;;;
        if (iParam0->_fU116 == 1)
        {
            iParam0->_fU100 = 2;
        }
        else if (iParam0->_fU116 == 2)
        {
            iParam0->_fU100 = 4;
        }
        else if (iParam0->_fU116 == 3)
        {
            iParam0->_fU100 = 3;
        }
        else if (iParam0->_fU116 == 4)
        {
            iParam0->_fU100 = 0;
        }
        else if (iParam0->_fU116 == 5)
        {
            iParam0->_fU100 = 5;
        }
        else if (iParam0->_fU116 == 6)
        {
            iParam0->_fU100 = 1;
        };;;;;;
    }
    return;
}

void sub_56276(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, float fParam5, float fParam6, unknown uParam7)
{
    iParam0->_fU0 = (uParam1^);
    iParam0->_fU4 = uParam7;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = 0;
    iParam0->_fU16 = 0;
    if (iParam3 > 0)
    {
        iParam0->_fU20 = 1;
    }
    else
    {
        iParam0->_fU20 = 0;
    }
    iParam0->_fU24 = iParam3;
    if (fParam5 == -1E8)
    {
        iParam0->_fU28 = 0;
    }
    else
    {
        iParam0->_fU28 = fParam5;
    }
    if (fParam6 == -1E8)
    {
        iParam0->_fU32 = 0;
    }
    else
    {
        iParam0->_fU32 = fParam6;
    }
    iParam0->_fU36 = uParam4;
    iParam0->_fU40 = uParam2;
    sub_5261( iParam0 + 52, iParam3, 1, 0 );
    iParam0->_fU88 = 0;
    return;
}

void sub_57822()
{
    sub_2139( "CR", "P_EF_CREATE_IMPLUSE_UNDER_PEDS_DURING_EXPLOSION - START", 0 );
    if (DOES_PED_EXIST( l_U861[0] ))
    {
        SET_PED_TO_RAGDOLL_WITH_EXPLOSION( l_U861[0], 1000, 2000, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U861[0] ) );
        APPLY_UNIFORMLY_DISTRIBUTED_IMPULSE_TO_RAGDOLL( l_U861[0], 50.00000000, 250.00000000, 200.00000000 );
    }
    if (DOES_PED_EXIST( l_U861[1] ))
    {
        SET_PED_TO_RAGDOLL_WITH_EXPLOSION( l_U861[1], 1000, 2000, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U861[1] ) );
        APPLY_UNIFORMLY_DISTRIBUTED_IMPULSE_TO_RAGDOLL( l_U861[1], 200.00000000, 100.00000000, 50.00000000 );
    }
    if (DOES_PED_EXIST( l_U861[2] ))
    {
        SET_PED_TO_RAGDOLL_WITH_EXPLOSION( l_U861[2], 1000, 2000, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U861[2] ) );
        APPLY_UNIFORMLY_DISTRIBUTED_IMPULSE_TO_RAGDOLL( l_U861[2], 250.00000000, 50.00000000, 250.00000000 );
    }
    if (DOES_PED_EXIST( l_U861[3] ))
    {
        SET_PED_TO_RAGDOLL_WITH_EXPLOSION( l_U861[3], 1000, 2000, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U861[3] ) );
        APPLY_UNIFORMLY_DISTRIBUTED_IMPULSE_TO_RAGDOLL( l_U861[3], 150.00000000, 150.00000000, 150.00000000 );
    }
    sub_2139( "CR", "P_EF_CREATE_IMPLUSE_UNDER_PEDS_DURING_EXPLOSION - END", 0 );
    return;
}

int sub_58324()
{
    if ((sub_55416( l_U1378[2] )) || ((sub_55416( l_U1378[1] )) || ((sub_55416( l_U1378[0] )) || ((sub_55416( l_U1378[3] )) || ((sub_55416( l_U1378[5] )) || (sub_55416( l_U1378[4] )))))))
    {
        return 1;
    }
    return 0;
}

void sub_58447()
{
    sub_2139( "MF", "P_EF_PLAY_MAX_EXPLOSION_KNOCK_DOWN_ANIM - START", 0 );
    ISEQ_REGISTER_ENTITY( -2056923918, "s_pan_max_explo", sub_4383(), 0 );
    ISEQ_START( -2056923918 );
    sub_2139( "MF", "P_EF_PLAY_MAX_EXPLOSION_KNOCK_DOWN_ANIM - END", 0 );
    return;
}

void sub_58772()
{
    int I;

    sub_2139( "MF", "P_EF_ENGINE_EXPLOSION_PLAYER_SETUP - START", 0 );
    for ( I = 0; I < 9; I++ )
    {
        if ((sub_55416( l_U1378[I] )) == 1)
        {
            sub_2139( "MF", "Player Explosion Teleport Trigger", 0 );
            sub_58943( sub_4383(), l_U1568[I], l_U1596[I] );
            return;
        }
    }
    sub_2139( "MF", "P_EF_ENGINE_EXPLOSION_PLAYER_SETUP - END", 0 );
    return;
}

void sub_58943(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_59113(int iParam0, unknown uParam1, int iParam2, int iParam3, boolean bParam4, unknown uParam5)
{
    int I;

    I = 0;
    switch (iParam0->_fU88)
    {
        case 1:
        for ( I = 0; I < (uParam1^); I++ )
        {
            if (NOT (uParam1^)[I]._fU92)
            {
                sub_5520( ref (uParam1^)[I], (uParam1^)[I]._fU16, (uParam1^)[I]._fU4, (uParam1^)[I]._fU28, (uParam1^)[I]._fU84 );
            }
            else
            {
                sub_55568( ref (uParam1^)[I], ref (uParam1^)[I]._fU120, (uParam1^)[I]._fU16, (uParam1^)[I]._fU4, (uParam1^)[I]._fU28, (uParam1^)[I]._fU88, (uParam1^)[I]._fU84, 1, 1 );
            }
        }
        if (iParam2 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_41568( iParam0->_fU4, 0, 0, uParam5 );
        iParam0->_fU88 = 2;
        iParam0->_fU8 = 1;
        iParam0->_fU12 = 1;
        if (NOT bParam4)
        {
            break;
        }
        case 2:
        I = 0;
        for ( I = 0; I < (uParam1^); I++ )
        {
            if (I == 0)
            {
                if ((NOT (uParam1^)[I]._fU32) AND (NOT (sub_59464( ref (uParam1^)[I], 0 ))))
                {
                    sub_59624( ref (uParam1^)[I] );
                    if (iParam3 == 1)
                    {
                        if (iParam0->_fU40 == 1)
                        {
                            sub_59734( 500 );
                        }
                        else
                        {
                            DO_SCREEN_FADE_IN( 0 );
                        }
                    }
                }
            }
            else if ((NOT (uParam1^)[I]._fU32) AND ((sub_59464( ref (uParam1^)[I - 1], 0 )) == 1))
            {
                sub_59873( ref (uParam1^)[I] );
            }
            if (I == ((uParam1^) - 1))
            {
                if ((sub_59464( ref (uParam1^)[I], 0 )) == 1)
                {
                    sub_5811( iParam0 + 52 );
                    if (iParam0->_fU20 == 1)
                    {
                        sub_60103( iParam0->_fU24, iParam0->_fU20, iParam0->_fU36, iParam0->_fU28, iParam0->_fU32, 0 );
                    }
                    else if (iParam0->_fU20 == 0)
                    {
                        sub_60103( 0, iParam0->_fU20, iParam0->_fU36, iParam0->_fU28, iParam0->_fU32, 0 );
                    }
                    iParam0->_fU88 = 4;
                }
            }
        }
        if ((NOT bParam4) || (iParam0->_fU88 != 4))
        {
            break;
        }
        case 4:
        if ((sub_5975( iParam0 + 52 )) == 1)
        {
            iParam0->_fU88 = 5;
        }
        if ((NOT bParam4) || (iParam0->_fU88 != 5))
        {
            break;
        }
        case 5:
        sub_47268( 1, 1 );
        iParam0->_fU8 = 0;
        iParam0->_fU88 = 0;
        break;
    }
    return;
}

int sub_59464(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || (sub_5975( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || (sub_5975( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_59624(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_5811( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

void sub_59734(unknown uParam0)
{
    if ((IS_SCREEN_FADING_IN() == 0) AND (IS_SCREEN_FADED_IN() == 0))
    {
        DO_SCREEN_FADE_IN( uParam0 );
        while (IS_SCREEN_FADED_IN() == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_59873(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    if (iParam0->_fU92 == 1)
    {
        SET_CAM_ACTIVE_WITH_INTERP( iParam0->_fU0, iParam0->_fU120, iParam0->_fU88, iParam0->_fU100, iParam0->_fU104 );
    }
    else
    {
        SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    }
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_5811( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

void sub_60103(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

int sub_60380(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (iParam0->_fU8 == 0)
        {
            if (iParam0->_fU12 == 1)
            {
                if (iParam0->_fU16 == 0)
                {
                    iParam0->_fU16 = 1;
                    return 1;
                }
            }
        }
    }
    if (NOT bParam1)
    {
        if (iParam0->_fU8 == 0)
        {
            if (iParam0->_fU12 == 1)
            {
                return 1;
            }
        }
    }
    return 0;
}

string sub_60519()
{
    return "MEDIUM_EXPLOSION_SHAKE";
}

void sub_60574()
{
    sub_2139( "MF", "P_EF_ENGINE_EXPLOSION_REAR_LEFT_EVENTS - START", 0 );
    if (l_U189._fU40 == 1)
    {
        sub_52495( ref l_U189, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U189._fU8, ref g_U3215 );
    }
    if (l_U276._fU40 == 1)
    {
        sub_52495( ref l_U276, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U276._fU8, ref g_U3215 );
        PLAY_OBJECT_ANIM( l_U276._fU8, "p_an_bigtnt_ac_h", "pa_engine", 0.00000000, 0, 1 );
        ADD_EXPLOSION( 27.54000000, 7.65000000, -1.01000000, 3, 0.30000000, 0, 0, 1065353216 );
        START_PARTICLE_FX_NON_LOOPED_AT_COORD( "Exp_PanEgnRm_Explo", 28.50000000, 6.80000000, -1.00000000, 0.00000000, 0.00000000, 230.00000000, 1.00000000 );
    }
    if (NOT l_U1681)
    {
        sub_11744( l_U203 );
        if (NOT (DOES_OBJECT_EXIST( l_U203 )))
        {
            l_U203 = sub_33045( g_U1547, l_U200, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U203, ref g_U3215 );
        }
        sub_11744( l_U188 );
        if (NOT (DOES_OBJECT_EXIST( l_U188 )))
        {
            l_U188 = sub_33045( g_U1547, l_U185, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U188, ref g_U3215 );
        }
        l_U1681 = 1;
    }
    sub_61069();
    sub_61450( 26.10000000, 2.95000000, -1.51000000, "S_PANA_FIRE_EXPLOSION_01", ref g_U2986 );
    sub_61678();
    sub_2139( "MF", "P_EF_ENGINE_EXPLOSION_REAR_LEFT_EVENTS - END", 0 );
    return;
}

void sub_61069()
{
    sub_2139( "MF", "P_EF_FLAME_JET_REAR_LEFT_START: START", 0 );
    l_U1717 = sub_43733( ref l_U1717, "Pana_Engine_Pump_Fire_01_S", l_U1710, l_U1713, l_U1716 );
    l_U1725 = sub_43733( ref l_U1725, "Pana_EnginePipe_Flame_S", l_U1718, l_U1721, l_U1724 );
    l_U1733 = sub_43733( ref l_U1733, "Pana_EnginePipe_Flame_S", l_U1726, l_U1729, l_U1732 );
    sub_54093( ref l_U1709, "S_PANA_ENGINE_JET_FIRE", l_U189._fU8 );
    sub_2139( "MF", "P_EF_FLAME_JET_REAR_LEFT_START: END", 0 );
    return;
}

void sub_61450(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    int iVar7;

    iVar7 = -1;
    if (sub_8643( uParam3, uParam4 ))
    {
        iVar7 = sub_8742( uParam3, uParam4 );
        if (NOT (iVar7 == -1))
        {
            PLAY_SCRIPT_STREAM_FROM_COORD( uParam0, iVar7 );
        }
        else
        {
            SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

void sub_61678()
{
    if (DOES_OBJECT_EXIST( l_U203 ))
    {
        DESTROY_FRAGMENT_OBJECT( l_U203 );
    }
    if (DOES_OBJECT_EXIST( l_U188 ))
    {
        DESTROY_FRAGMENT_OBJECT( l_U188 );
    }
    return;
}

void sub_61820()
{
    sub_2139( "MF", "P_EF_START_BROKEN_REAR_ENGINE_AUDIO_EMITTERS - START", 0 );
    sub_54093( ref l_U1683, "C_PANA_FIRE", l_U189._fU8 );
    sub_54093( ref l_U1685, "S_PANA_ENGINE_JET_FIRE_SMOKE", l_U189._fU8 );
    sub_54093( ref l_U1684, "C_PANA_FIRE", l_U174._fU8 );
    sub_54093( ref l_U1686, "S_PANA_ENGINE_JET_FIRE_SMOKE", l_U174._fU8 );
    sub_2139( "MF", "P_EF_START_BROKEN_REAR_ENGINE_AUDIO_EMITTERS - END", 0 );
    return;
}

void sub_62166()
{
    sub_2139( "MF", "P_EF_ENGINE_EXPLOSION_REAR_RIGHT_EVENTS - START", 0 );
    if (l_U535._fU40 == 1)
    {
        l_U535._fU12 = {l_U549};
        sub_52495( ref l_U535, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U535._fU8, ref g_U3215 );
    }
    if (l_U174._fU40 == 1)
    {
        sub_52495( ref l_U174, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U174._fU8, ref g_U3215 );
        ADD_EXPLOSION( 26.75000000, 0.38000000, -0.93000000, 3, 0.30000000, 0, 0, 1065353216 );
    }
    if (l_U262._fU40 == 1)
    {
        sub_52495( ref l_U262, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U262._fU8, ref g_U3215 );
        PLAY_OBJECT_ANIM( l_U262._fU8, "p_an_bigtnt_ab_h", "pa_engine", 0.00000000, 0, 1 );
    }
    sub_62472();
    sub_63018();
    sub_63238();
    sub_2139( "MF", "P_EF_ENGINE_EXPLOSION_REAR_RIGHT_EVENTS - END", 0 );
    return;
}

void sub_62472()
{
    int I;

    sub_2139( "MF", "P_EF_PROPS_SET_MONITORS_STATUS_ERROR: START", 0 );
    for ( I = 0; I < l_U330; I++ )
    {
        if (l_U330[I]._fU40)
        {
            sub_52495( ref l_U330[I], 0 );
            if (DOES_OBJECT_EXIST( l_U330[I]._fU8 ))
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U330[I]._fU8, ref g_U3215 );
            }
        }
    }
    for ( I = 0; I < l_U442; I++ )
    {
        if (l_U442[I]._fU40)
        {
            sub_52495( ref l_U442[I], 0 );
            if (DOES_OBJECT_EXIST( l_U442[I]._fU8 ))
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U442[I]._fU8, ref g_U3215 );
            }
        }
    }
    for ( I = 0; I < l_U419; I++ )
    {
        if (l_U419[I]._fU40)
        {
            sub_52495( ref l_U419[I], 0 );
            if (DOES_OBJECT_EXIST( l_U419[I]._fU8 ))
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U419[I]._fU8, ref g_U3215 );
            }
        }
    }
    for ( I = 0; I < l_U465; I++ )
    {
        if (l_U465[I]._fU40)
        {
            sub_52495( ref l_U465[I], 1 );
            if (DOES_OBJECT_EXIST( l_U465[I]._fU8 ))
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U465[I]._fU8, ref g_U3215 );
            }
        }
    }
    sub_2139( "MF", "P_EF_PROPS_SET_MONITORS_STATUS_ERROR: END", 0 );
    return;
}

void sub_63018()
{
    sub_2139( "MF", "P_EF_PROPS_CREATE_LIGHTS_1_WARNING: START", 0 );
    sub_52495( ref l_U294, 0 );
    if (DOES_OBJECT_EXIST( l_U294._fU8 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U294._fU8, ref g_U3215 );
    }
    sub_52495( ref l_U305, 0 );
    if (DOES_OBJECT_EXIST( l_U305._fU8 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U305._fU8, ref g_U3215 );
    }
    sub_2139( "MF", "P_EF_PROPS_CREATE_LIGHTS_1_WARNING: END", 0 );
    return;
}

void sub_63238()
{
    sub_2139( "MF", "P_EF_FLAME_JET_REAR_RIGHT_START: START", 0 );
    l_U1767 = sub_43733( ref l_U1767, "Pana_EnginePipe_Flame_S", l_U1760, l_U1763, l_U1766 );
    l_U1775 = sub_43733( ref l_U1775, "Pana_EnginePipe_Flame_S", l_U1768, l_U1771, l_U1774 );
    l_U1783 = sub_43733( ref l_U1783, "Pana_EnginePipe_Flame_S", l_U1776, l_U1779, l_U1782 );
    sub_54093( ref l_U1759, "S_PANA_ENGINE_JET_FIRE", l_U174._fU8 );
    sub_2139( "MF", "P_EF_FLAME_JET_REAR_RIGHT_START: END", 0 );
    return;
}

void sub_63663()
{
    sub_2139( "MF", "P_EF_ENGINE_EXPLOSION_FRONT_EVENTS - START", 0 );
    if (l_U515._fU40 == 1)
    {
        l_U515._fU12 = {l_U529};
        sub_52495( ref l_U515, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U515._fU8, ref g_U3215 );
    }
    if (l_U204._fU40 == 1)
    {
        sub_52495( ref l_U204, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U204._fU8, ref g_U3215 );
        ADD_EXPLOSION( 35.29000000, 7.14000000, -0.93000000, 3, 0.40000000, 0, 0, 1065353216 );
    }
    if (l_U219._fU40 == 1)
    {
        sub_52495( ref l_U219, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U219._fU8, ref g_U3215 );
        ADD_EXPLOSION( 33.41000000, 0.74000000, -0.93000000, 3, 0.40000000, 0, 0, 1065353216 );
        START_PARTICLE_FX_NON_LOOPED_AT_COORD( "Exp_PanEgnRm_Explo", 35.00000000, 0.00000000, -1.00000000, 0.00000000, 0.00000000, 35.00000000, 1.00000000 );
    }
    if (l_U248._fU40 == 1)
    {
        sub_52495( ref l_U248, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U248._fU8, ref g_U3215 );
        PLAY_OBJECT_ANIM( l_U248._fU8, "p_an_bigtnt_ad_h", "pa_engine", 0.00000000, 0, 1 );
    }
    if (l_U234._fU40 == 1)
    {
        sub_52495( ref l_U234, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U234._fU8, ref g_U3215 );
        PLAY_OBJECT_ANIM( l_U234._fU8, "p_an_bigtnt_aa_h", "pa_engine", 0.00000000, 0, 1 );
    }
    if ((DOES_OBJECT_EXIST( l_U290 )) == 1)
    {
        PLAY_OBJECT_ANIM( l_U290, "p_an_pipflx_ab_h", "pa_engine", 0.00000000, 0, 1 );
    }
    if (NOT l_U1682)
    {
        sub_11744( l_U218 );
        if (NOT (DOES_OBJECT_EXIST( l_U218 )))
        {
            l_U218 = sub_33045( g_U1547, l_U215, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U218, ref g_U3215 );
        }
        sub_11744( l_U233 );
        if (NOT (DOES_OBJECT_EXIST( l_U233 )))
        {
            l_U233 = sub_33045( g_U1547, l_U230, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U233, ref g_U3215 );
        }
        l_U1682 = 1;
    }
    sub_64459();
    sub_64672();
    sub_64845();
    sub_65178();
    sub_61450( 33.19000000, 4.17000000, -1.65000000, "S_PANA_FIRE_EXPLOSION_02", ref g_U2986 );
    sub_65568();
    sub_2139( "MF", "P_EF_ENGINE_EXPLOSION_FRONT_EVENTS - END", 0 );
    return;
}

void sub_64459()
{
    sub_2139( "MF", "P_EF_PROPS_CREATE_MONITORS_SUPER_DAMAGE: START", 0 );
    sub_11744( l_U465[2]._fU8 );
    l_U510[2] = sub_33045( g_U1552, l_U465[2]._fU12, l_U465[2]._fU24, 0, 1, 0 );
    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U510[2], ref g_U3215 );
    sub_2139( "MF", "P_EF_PROPS_CREATE_MONITORS_SUPER_DAMAGE: END", 0 );
    return;
}

void sub_64672()
{
    sub_2139( "MF", "P_EF_PROPS_CREATE_LIGHTS_2_WARNING: START", 0 );
    sub_52495( ref l_U316, 0 );
    if (DOES_OBJECT_EXIST( l_U316._fU8 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U316._fU8, ref g_U3215 );
    }
    sub_2139( "MF", "P_EF_PROPS_CREATE_LIGHTS_2_WARNING: END", 0 );
    return;
}

void sub_64845()
{
    sub_2139( "MF", "P_EF_FLAME_JET_FRONT_LEFT_START: START", 0 );
    l_U1742 = sub_43733( ref l_U1742, "Pana_EnginePipe_Flame_S", l_U1735, l_U1738, l_U1741 );
    l_U1750 = sub_43733( ref l_U1750, "Pana_EnginePipe_Flame_S", l_U1743, l_U1746, l_U1749 );
    l_U1758 = sub_43733( ref l_U1758, "Pana_EnginePipe_Flame_S", l_U1751, l_U1754, l_U1757 );
    sub_54093( ref l_U1734, "S_PANA_ENGINE_JET_FIRE", l_U204._fU8 );
    sub_2139( "MF", "P_EF_FLAME_JET_FRONT_LEFT_START: END", 0 );
    return;
}

void sub_65178()
{
    sub_2139( "MF", "P_EF_FLAME_JET_FRONT_RIGHT_START: START", 0 );
    l_U1792 = sub_43733( ref l_U1792, "Pana_Engine_Pump_Fire_01_S", l_U1785, l_U1788, l_U1791 );
    l_U1800 = sub_43733( ref l_U1800, "Pana_EnginePipe_Flame_S", l_U1793, l_U1796, l_U1799 );
    l_U1808 = sub_43733( ref l_U1808, "Pana_EnginePipe_Flame_S", l_U1801, l_U1804, l_U1807 );
    sub_54093( ref l_U1784, "S_PANA_ENGINE_JET_FIRE", l_U219._fU8 );
    sub_2139( "MF", "P_EF_FLAME_JET_FRONT_RIGHT_START: END", 0 );
    return;
}

void sub_65568()
{
    if (DOES_OBJECT_EXIST( l_U218 ))
    {
        DESTROY_FRAGMENT_OBJECT( l_U218 );
    }
    if (DOES_OBJECT_EXIST( l_U233 ))
    {
        DESTROY_FRAGMENT_OBJECT( l_U233 );
    }
    return;
}

void sub_65706()
{
    sub_2139( "CR", "P_PREPARE_SUFFOCATION_SEQUENCE - start", 0 );
    sub_65773( 1.00000000 );
    l_U985 = GET_PAYNEKILLER_AMT();
    SET_PAYNEKILLER_AMT( 0 );
    sub_2139( "CR", "P_PREPARE_SUFFOCATION_SEQUENCE - end", 0 );
    return;
}

void sub_65773(unknown uParam0)
{
    int iVar3;

    if (NOT (IS_PED_DEAD( sub_4383() )))
    {
        iVar3 = (ROUND( ((GET_PED_MAX_HEALTH( sub_4383() )) - 100) * uParam0 )) + 100;
        SET_PED_HEALTH( sub_4383(), iVar3, 0 );
    }
    return;
}

void sub_65935()
{
    sub_2139( "MF", "P_EF_START_BROKEN_REAR_ENGINE_AUDIO_EMITTERS - START", 0 );
    sub_54093( ref l_U1687, "C_PANA_FIRE", l_U204._fU8 );
    sub_54093( ref l_U1689, "S_PANA_ENGINE_JET_FIRE_SMOKE", l_U204._fU8 );
    sub_54093( ref l_U1688, "C_PANA_FIRE", l_U219._fU8 );
    sub_54093( ref l_U1690, "S_PANA_ENGINE_JET_FIRE_SMOKE", l_U219._fU8 );
    sub_2139( "MF", "P_EF_START_BROKEN_REAR_ENGINE_AUDIO_EMITTERS - END", 0 );
    return;
}

string sub_66429()
{
    return "WOBBLY_SHAKE";
}

void sub_66519()
{
    sub_2139( "MF", "P_START_SUFFOCATION_METRE - start", 0 );
    ADD_SPECIAL_FX_MODIFIER( "FIRE_COUGH", 0.10000000, 0.00000000, 0.00000000, 0.00000000 );
    sub_5811( ref l_U974 );
    l_U972 = 1;
    sub_2139( "MF", "P_START_SUFFOCATION_METRE - end", 0 );
    return;
}

int sub_66713()
{
    int iVar2;
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    GET_POSITION_OF_ANALOGUE_STICKS( 0, ref iVar2, ref iVar3, ref uVar4, ref uVar5 );
    if ((iVar3 < 65501) || ((iVar3 > 35) || ((iVar2 < 65501) || (iVar2 > 35))))
    {
        sub_2139( "MF", "F_EF_HAS_MAX_STOOD_UP_OR_SHOT - Player has stood up...", 0 );
        return 1;
    }
    if (IS_CONTROL_JUST_PRESSED( 0, 4 ))
    {
        sub_2139( "MF", "F_EF_HAS_MAX_STOOD_UP_OR_SHOT - Player has shot...", 0 );
        return 1;
    }
    return 0;
}

void sub_67074()
{
    if (l_U972)
    {
        if (sub_67094() > 0.00000000)
        {
            if (l_U986 == 0)
            {
                if (sub_5975( ref l_U974 ))
                {
                    sub_65773( sub_67094() - l_U984 );
                    UPDATE_SPECIAL_FX_MODIFIER_STRENGTH( "FIRE_COUGH", sub_67094(), 1.00000000 );
                    sub_5811( ref l_U974 );
                    if ((NOT l_U973) AND (sub_67094() < 0.10000000))
                    {
                        SET_TEAR_GAS_EFFECT_AUTO_END( 0 );
                        START_POSTFX_BLENDER( 14 );
                        l_U973 = 1;
                        sub_2139( "CR", "Starting SCREENEFFECT_TEAR_GAS prior to player death", 0 );
                    }
                }
            }
            else if (l_U986 == 1)
            {
                if (sub_5975( ref l_U974 ))
                {
                    sub_65773( sub_67094() - (l_U984 * 2) );
                    UPDATE_SPECIAL_FX_MODIFIER_STRENGTH( "FIRE_COUGH", sub_67094(), 1.00000000 );
                    if ((NOT l_U973) AND (sub_67094() < 0.10000000))
                    {
                        SET_TEAR_GAS_EFFECT_AUTO_END( 0 );
                        START_POSTFX_BLENDER( 14 );
                        l_U973 = 1;
                        sub_2139( "CR", "Starting SCREENEFFECT_TEAR_GAS prior to player death", 0 );
                    }
                }
            }
            else if (sub_5975( ref l_U974 ))
            {
                sub_65773( sub_67094() - l_U984 );
                UPDATE_SPECIAL_FX_MODIFIER_STRENGTH( "FIRE_COUGH", sub_67094(), 1.00000000 );
                if ((NOT l_U973) AND (sub_67094() < 0.10000000))
                {
                    SET_TEAR_GAS_EFFECT_AUTO_END( 0 );
                    START_POSTFX_BLENDER( 14 );
                    l_U973 = 1;
                    sub_2139( "CR", "Starting SCREENEFFECT_TEAR_GAS prior to player death", 0 );
                }
            };;;
        }
        else if (NOT l_U987)
        {
            sub_2139( "MF", "P_HANDLE_SUFFOCATION_METRE - Killing Player...", 0 );
            sub_41568( 1, 0, 0, 1 );
            ISEQ_REGISTER_ENTITY( 1453623029, "s_pan_max_choke", sub_4383(), 0 );
            ISEQ_START( 1453623029 );
            sub_5028();
            l_U677 = 1;
            sub_10634( ref l_U1851, 0 );
            sub_10634( ref l_U1953, 0 );
            l_U972 = 0;
        }
        else
        {
            sub_2139( "MF", "Not killing player from suffocation. bEF_MarketingInvulnerabilityEnabled set to 'TRUE'", 0 );
            sub_2139( "MF", "Press 'N' to disable invulnerability and have player die.", 0 );
        }
    }
    return;
}

float sub_67094()
{
    unknown uVar2;
    unknown uVar3;
    float Result;

    if (NOT (IS_PED_DEAD( sub_4383() )))
    {
        uVar2 = TO_FLOAT( (GET_PED_MAX_HEALTH( sub_4383() )) - 100 );
        uVar3 = TO_FLOAT( (GET_PED_HEALTH( sub_4383() )) - 100 );
        Result = uVar3 / uVar2;
        return Result;
    }
    return 0.00000000;
}

void sub_68197()
{
    int Result;

    Result = 0;
    if (IS_ANIMATED_CAMERA_PLAYING())
    {
        Result = 1;
    }
    return Result;
}

int sub_68353(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_40018( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

int sub_68520()
{
    if ((((sub_68534( ref l_U1851 )) == 0) AND ((sub_68534( ref l_U1953 )) == 1)) || (((sub_68534( ref l_U1851 )) == 1) AND ((sub_68534( ref l_U1953 )) == 0)))
    {
        sub_40004( ref g_U1246, 0 );
        sub_40004( ref l_U1839, 0 );
        sub_6504( "Playing Monologue: SPAN_VIG02A" );
        sub_44053( "SPAN_VIG02A", ref l_U1839 );
        return 1;
    }
    return 0;
}

void sub_68534(int iParam0)
{
    return iParam0->_fU64;
}

int sub_68821(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_4383() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_4383() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_53874( sub_4383(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_53874( sub_4383(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_11029( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_11090( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_69703() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_10634( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_10678( iParam0, 0 );
                            sub_10878( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_10678( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_4383() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_4383(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_10678( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_10878( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_4383() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_4383(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_4383() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_4383(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_4383() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_4383(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_10678( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_10878( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_4383() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_4383() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_4383() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_4383(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_10878( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

int sub_69703()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

void sub_70593()
{
    sub_2139( "MF", "P_EF_POI_PRE_SETUP - START", 0 );
    sub_70653( ref l_U1849, ref l_U1850, 1, 0 );
    l_U972 = 0;
    sub_2139( "MF", "P_EF_POI_PRE_SETUP - END", 0 );
    return;
}

void sub_70653(unknown uParam0, unknown uParam1, unknown uParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;

    if (NOT (IS_PED_DEAD( sub_4383() )))
    {
        (uParam0^) = GET_WEAPON_FROM_HAND( sub_4383(), 0, 0 );
        (uParam1^) = GET_WEAPON_FROM_HAND( sub_4383(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( (uParam0^) ))
        {
            SELECT_WEAPON_TO_HAND( sub_4383(), 0, 0, uParam2 );
        }
        if (GET_DOES_WEAPON_EXIST( (uParam1^) ))
        {
            SELECT_WEAPON_TO_HAND( sub_4383(), 0, 1, uParam2 );
        }
        if (bParam3)
        {
            uVar6 = GET_WEAPON_FROM_HAND( sub_4383(), 0, 0 );
            uVar7 = GET_WEAPON_FROM_HAND( sub_4383(), 1, 0 );
            while (GET_DOES_WEAPON_EXIST( uVar6 ))
            {
                if ((IS_PED_DEAD( sub_4383() )) == 0)
                {
                    uVar6 = GET_WEAPON_FROM_HAND( sub_4383(), 0, 0 );
                    sub_6504( "Waiting for right weapon to be holstered." );
                }
                WAIT( 0 );
            }
            while (GET_DOES_WEAPON_EXIST( uVar7 ))
            {
                if ((IS_PED_DEAD( sub_4383() )) == 0)
                {
                    uVar7 = GET_WEAPON_FROM_HAND( sub_4383(), 1, 0 );
                    sub_6504( "Waiting for left weapon to be holstered." );
                }
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_71098(boolean bParam0)
{
    unknown uVar3;

    sub_2139( "MF", "P_EF_VALVE_USED_START_ISS: START", 0 );
    if (bParam0)
    {
        uVar3 = l_U559;
    }
    else
    {
        uVar3 = l_U563;
    }
    sub_5811( ref l_U1821 );
    sub_50245( sub_67094() );
    ISEQ_REGISTER_ENTITY( -1118406608, "s_pan_max_valve", sub_4383(), 0 );
    ISEQ_START( -1118406608 );
    if (sub_67094() < 0.25000000)
    {
        sub_6504( "Playing paiEF_VALVE_USE_EXTRA_LIGHT" );
        PED_SET_ACTION_INTENTION( sub_4383(), l_U1816, 5000, 0.00000000, 0.00000000, 0.00000000 );
        PLAY_OBJECT_ANIM( uVar3, "VIG_02_PAN_MAX_TURNING_VALVE3_VALVE", "LEVEL_S_PAN_CP_02", 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( uVar3, "VIG_02_PAN_MAX_TURNING_VALVE3_VALVE", "LEVEL_S_PAN_CP_02", 0.00000000 );
    }
    else if ((sub_67094() < 0.50000000) AND (sub_67094() >= 0.25000000))
    {
        sub_6504( "Playing paiEF_VALVE_USE_LIGHT" );
        PED_SET_ACTION_INTENTION( sub_4383(), l_U1815, 5000, 0.00000000, 0.00000000, 0.00000000 );
        PLAY_OBJECT_ANIM( uVar3, "VIG_02_PAN_MAX_TURNING_VALVE4_VALVE", "LEVEL_S_PAN_CP_02", 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( uVar3, "VIG_02_PAN_MAX_TURNING_VALVE4_VALVE", "LEVEL_S_PAN_CP_02", 0.00000000 );
    }
    else if ((sub_67094() < 0.75000000) AND (sub_67094() >= 0.50000000))
    {
        sub_6504( "Playing paiEF_VALVE_USE_MEDIUM" );
        PED_SET_ACTION_INTENTION( sub_4383(), l_U1814, 5000, 0.00000000, 0.00000000, 0.00000000 );
        PLAY_OBJECT_ANIM( uVar3, "VIG_02_PAN_MAX_TURNING_VALVE2_VALVE", "LEVEL_S_PAN_CP_02", 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( uVar3, "VIG_02_PAN_MAX_TURNING_VALVE2_VALVE", "LEVEL_S_PAN_CP_02", 0.00000000 );
    }
    else
    {
        sub_6504( "Playing paiEF_VALVE_USE_HEAVY" );
        PED_SET_ACTION_INTENTION( sub_4383(), l_U1813, 5000, 0.00000000, 0.00000000, 0.00000000 );
        PLAY_OBJECT_ANIM( uVar3, "VIG_02_PAN_MAX_TURNING_VALVE1_VALVE", "LEVEL_S_PAN_CP_02", 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( uVar3, "VIG_02_PAN_MAX_TURNING_VALVE1_VALVE", "LEVEL_S_PAN_CP_02", 0.00000000 );
    };;;
    sub_2139( "MF", "P_EF_VALVE_USED_START_ISS: END", 0 );
    return;
}

void sub_72343(boolean bParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    float fVar6;

    sub_2139( "MF", "P_EF_VALVE_USE_SETUP_PLAYER - START", 0 );
    if (bParam0)
    {
        uVar3 = {l_U1940};
        fVar6 = 90.00000000;
        sub_5811( ref l_U1943 );
    }
    else
    {
        uVar3 = {l_U2042};
        fVar6 = -90.00000000;
        sub_5811( ref l_U2045 );
    }
    if (NOT (IS_PED_DEAD( sub_4383() )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( sub_4383() );
        CLEAR_PED_DEFAULT_AIM( sub_4383() );
        SET_PED_EMOTION_STATE( sub_4383(), 3 );
        FREEZE_PED_POSITION( sub_4383(), 1 );
        sub_58943( sub_4383(), uVar3, fVar6 );
    }
    sub_2139( "MF", "P_EF_VALVE_USE_SETUP_PLAYER - END", 0 );
    return;
}

void sub_73636()
{
    sub_2139( "MF", "P_EF_EXTINGUISH_LEFT_FIRE: START", 0 );
    l_U1692 = 0.60000000;
    sub_9413( ref l_U1691 );
    sub_9413( ref l_U1695 );
    sub_9413( ref l_U1701 );
    sub_9543( l_U1683, 0 );
    sub_9543( l_U1687, 0 );
    sub_9354();
    sub_2139( "MF", "P_EF_EXTINGUISH_LEFT_FIRE: END", 0 );
    return;
}

void sub_73885()
{
    sub_2139( "MF", "P_EF_EXTINGUISH_RIGHT_FIRE: START", 0 );
    l_U1694 = 0.60000000;
    sub_9413( ref l_U1693 );
    sub_9413( ref l_U1697 );
    sub_9543( l_U1684, 0 );
    sub_9543( l_U1688, 0 );
    sub_9791();
    sub_2139( "MF", "P_EF_EXTINGUISH_RIGHT_FIRE: END", 0 );
    return;
}

void sub_74261(unknown uParam0, unknown uParam1, unknown uParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;

    if (NOT (IS_PED_DEAD( sub_4383() )))
    {
        if (GET_DOES_WEAPON_EXIST( uParam0 ))
        {
            SELECT_WEAPON_TO_HAND( sub_4383(), uParam0, 0, uParam2 );
        }
        if (((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_4383(), 2 ) )) == 0) AND (GET_DOES_WEAPON_EXIST( uParam1 )))
        {
            SELECT_WEAPON_TO_HAND( sub_4383(), uParam1, 1, uParam2 );
        }
        if (bParam3)
        {
            if (GET_DOES_WEAPON_EXIST( uParam0 ))
            {
                uVar6 = GET_WEAPON_FROM_HAND( sub_4383(), 0, 0 );
                while (NOT (GET_DOES_WEAPON_EXIST( uVar6 )))
                {
                    if ((IS_PED_DEAD( sub_4383() )) == 0)
                    {
                        uVar6 = GET_WEAPON_FROM_HAND( sub_4383(), 0, 0 );
                        sub_6504( "Waiting for right hand weapon to be un-holstered." );
                    }
                    WAIT( 0 );
                }
            }
            if (((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_4383(), 2 ) )) == 0) AND (GET_DOES_WEAPON_EXIST( uParam1 )))
            {
                uVar7 = GET_WEAPON_FROM_HAND( sub_4383(), 1, 0 );
                while (NOT (GET_DOES_WEAPON_EXIST( uVar7 )))
                {
                    if ((IS_PED_DEAD( sub_4383() )) == 0)
                    {
                        uVar7 = GET_WEAPON_FROM_HAND( sub_4383(), 1, 0 );
                        sub_6504( "Waiting for left hand weapon to be un-holstered." );
                    }
                    WAIT( 0 );
                }
            }
        }
    }
    return;
}

void sub_74711()
{
    float fVar2;
    float fVar3;

    sub_2139( "MF", "P_EF_GIVE_OXYGEN_BONUS - START", 0 );
    fVar2 = sub_67094();
    fVar3 = 0.00000000;
    fVar3 = sub_67094() * 0.20000000;
    fVar2 = sub_67094() + fVar3;
    if (fVar2 > 100.00000000)
    {
        fVar2 = 100.00000000;
    }
    sub_65773( fVar2 );
    sub_2139( "MF", "P_EF_GIVE_OXYGEN_BONUS - END", 0 );
    return;
}

void sub_75134()
{
    sub_2139( "MF", "P_EF_CLEAR_SMOKE: START", 0 );
    DEACTIVATE_SPECIAL_FX_MODIFIER( "deck1fire" );
    sub_55065( ref l_U1287 );
    sub_2139( "MF", "P_EF_CLEAR_SMOKE: END", 0 );
    return;
}

void sub_75301()
{
    sub_2139( "MF", "P_EF_PROPS_POI_LIGHTS_TOGGLE: START", 0 );
    sub_52495( ref l_U567, 0 );
    if (DOES_OBJECT_EXIST( l_U567._fU8 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U567._fU8, ref g_U3215 );
    }
    sub_52495( ref l_U581, 0 );
    if (DOES_OBJECT_EXIST( l_U581._fU8 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U581._fU8, ref g_U3215 );
    }
    sub_2139( "MF", "P_EF_PROPS_POI_LIGHTS_TOGGLE: END", 0 );
    return;
}

void sub_75523(boolean bParam0)
{
    sub_2139( "MF", "P_EF_TELEPORT_PLAYER_TO_DOOR_OPEN_POSITION - START", 0 );
    if ((l_U1953._fU64) AND (l_U1851._fU64))
    {
        if (bParam0)
        {
            sub_6504( "Teleporting player to LEFT position" );
            sub_75684( l_U2055, l_U2058, 0, 0 );
        }
        else
        {
            sub_6504( "Teleporting player to RIGHT position" );
            sub_75684( l_U2059, l_U2062, 0, 0 );
        }
    }
    sub_2139( "MF", "P_EF_TELEPORT_PLAYER_TO_DOOR_OPEN_POSITION - END", 0 );
    return;
}

void sub_75684(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 = sub_4383();
    sub_58943( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

void sub_76266(boolean bParam0)
{
    if (NOT bParam0)
    {
        if (CAMERA_ANIMATED_CURRENT_TIME() >= (CAMERA_ANIMATED_LENGTH( "LEVEL_S_PAN_CP_02", "VIG_02_PAN_CAM1_CAM" )))
        {
            CAMERA_ANIMATED_STOP( 3000, 0 );
        }
    }
    else if (CAMERA_ANIMATED_CURRENT_TIME() >= (CAMERA_ANIMATED_LENGTH( "LEVEL_S_PAN_CP_02", "VIG_02_PAN_CAM2_CAM" )))
    {
        CAMERA_ANIMATED_STOP( 3000, 0 );
    }
    return;
}

void sub_76457()
{
    sub_2139( "MF", "P_EF_PROPS_STOP_ALARM_SOUND: START", 0 );
    ENABLE_STATIC_EMITTER( "S_PANA_SE_YACHT_ENGINE_ALARM", 0 );
    sub_2139( "MF", "P_EF_PROPS_STOP_ALARM_SOUND: END", 0 );
    return;
}

void sub_76622()
{
    sub_2139( "MF", "P_EF_FIRE_DOOR_PLAY_LOCK_SOUND: START", 0 );
    l_U557 = sub_54093( ref l_U557, "FIRE_ROOM_DOOR_UNLOCK", g_U4071 );
    sub_2139( "MF", "P_EF_FIRE_DOOR_PLAY_LOCK_SOUND: END", 0 );
    return;
}

void sub_76783()
{
    sub_2139( "MF", "P_EF_DIALOGUE_SMOKE_CLEAR - START", 0 );
    sub_40004( ref l_U1839, 0 );
    sub_6504( "Playing Monologue: SPAN_VIG02D" );
    sub_44053( "SPAN_VIG02D", ref l_U1839 );
    sub_2139( "MF", "P_EF_DIALOGUE_SMOKE_CLEAR - END", 0 );
    return;
}

void sub_77001()
{
    sub_2139( "MF", "P_EF_FIRE_DOOR_OPEN: START", 0 );
    if (DOES_OBJECT_EXIST( g_U4071 ))
    {
        l_U555 = sub_54093( ref l_U555, "FIRE_ROOM_DOOR_OPEN", g_U4071 );
        PLAY_OBJECT_ANIM( g_U4071, "P_Engine_Dr", "pa_doors", 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U4071, "P_Engine_Dr", "pa_doors", 0.00000000 );
        SET_OBJECT_ANIM_SPEED( g_U4071, "P_Engine_Dr", "pa_doors", 0.70000000 );
        l_U558 = 1;
    }
    sub_2139( "MF", "P_EF_FIRE_DOOR_OPEN: END", 0 );
    return;
}

void sub_77322()
{
    int I;

    sub_2139( "MF", "P_EF_PROPS_SET_MONITORS_STATUS_FIRE_OUT: START", 0 );
    for ( I = 0; I < l_U330; I++ )
    {
        if ((DOES_OBJECT_EXIST( l_U330[I]._fU8 )) == 1)
        {
            if (l_U330[I]._fU4 == g_U1551)
            {
                sub_52495( ref l_U330[I], 0 );
                if (DOES_OBJECT_EXIST( l_U330[I]._fU8 ))
                {
                    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U330[I]._fU8, ref g_U3215 );
                }
            }
        }
    }
    for ( I = 0; I < l_U442; I++ )
    {
        if ((DOES_OBJECT_EXIST( l_U442[I]._fU8 )) == 1)
        {
            if (l_U442[I]._fU4 == g_U1551)
            {
                sub_52495( ref l_U442[I], 0 );
                if (DOES_OBJECT_EXIST( l_U442[I]._fU8 ))
                {
                    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U442[I]._fU8, ref g_U3215 );
                }
            }
        }
    }
    for ( I = 0; I < l_U419; I++ )
    {
        if ((DOES_OBJECT_EXIST( l_U419[I]._fU8 )) == 1)
        {
            if (l_U419[I]._fU4 == g_U1551)
            {
                sub_52495( ref l_U419[I], 0 );
                if (DOES_OBJECT_EXIST( l_U419[I]._fU8 ))
                {
                    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U419[I]._fU8, ref g_U3215 );
                }
            }
        }
    }
    for ( I = 0; I < l_U465; I++ )
    {
        if ((DOES_OBJECT_EXIST( l_U465[I]._fU8 )) == 1)
        {
            if (l_U465[I]._fU4 == g_U1551)
            {
                sub_52495( ref l_U465[I], 0 );
                if (DOES_OBJECT_EXIST( l_U465[I]._fU8 ))
                {
                    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U465[I]._fU8, ref g_U3215 );
                }
            }
        }
    }
    sub_2139( "MF", "P_EF_PROPS_SET_MONITORS_STATUS_FIRE_OUT: END", 0 );
    return;
}

void sub_78004()
{
    sub_2139( "MF", "P_EF_PROPS_SET_ALARM_LIGHT_OKAY: START", 0 );
    sub_52495( ref l_U136, 0 );
    if (DOES_OBJECT_EXIST( l_U136._fU8 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U136._fU8, ref g_U3215 );
    }
    sub_52495( ref l_U150, 0 );
    if (DOES_OBJECT_EXIST( l_U150._fU8 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U150._fU8, ref g_U3215 );
    }
    sub_2139( "MF", "P_EF_PROPS_SET_ALARM_LIGHT_OKAY: END", 0 );
    return;
}

void sub_78432(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_53874( sub_4383(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_78533()
{
    int I;
    unknown uVar3;
    unknown uVar4;

    sub_2139( "CR", "P_EF_ACTIVATE_SHOWER_ROOM_PEDS - Start", 0 );
    sub_41022( ref g_U3319 );
    if (NOT (IS_PED_DEAD( sub_4383() )))
    {
        for ( I = 0; I < g_U3319; I++ )
        {
            if (sub_38170( g_U3319[I], 0 ))
            {
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U3319[I], 1 );
            }
        }
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_COMBAT_MOVE_TO_COVER( 0, "pana_GP_EngineFire", "Corner Position08", 0 );
        TASK_PAUSE( 0, 2000 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar3 );
        if (sub_38170( g_U3319[0], 0 ))
        {
            SET_PED_FLAG_LOCK_TO_COVER( g_U3319[0], 1 );
            TASK_PERFORM_SEQUENCE( g_U3319[0], uVar3 );
            SET_PED_FLAG_LOCK_TO_COVER( g_U3319[0], 0 );
            REGISTER_TARGET( g_U3319[0], sub_4383() );
            SET_LOCKED_TARGET( g_U3319[0], sub_4383() );
        }
        CLEAR_SEQUENCE_TASK( uVar3 );
        OPEN_SEQUENCE_TASK( ref uVar4 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 38.66110000, 4.05759500, -1.11591500, sub_4383(), 3, 1, 1056964608, 0, 1, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar4 );
        if (sub_38170( g_U3319[1], 0 ))
        {
            TASK_PERFORM_SEQUENCE( g_U3319[1], uVar4 );
            SET_PED_FLAG_LOCK_TO_COVER( g_U3319[1], 0 );
            REGISTER_TARGET( g_U3319[1], sub_4383() );
            SET_LOCKED_TARGET( g_U3319[1], sub_4383() );
        }
        CLEAR_SEQUENCE_TASK( uVar4 );
    }
    sub_2139( "CR", "P_EF_ACTIVATE_SHOWER_ROOM_PEDS - End", 0 );
    return;
}

void sub_79164(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

void sub_79518()
{
    sub_2139( "GA", "P_RELEASE_EF_ASSETS start", 0 );
    sub_79575( ref l_U635, ref g_U1588 );
    sub_79853( ref l_U670, ref g_U1829 );
    sub_80069( ref g_U3079, ref g_U3026 );
    sub_80262( "LEVEL_S_PAN_CP_02", ref g_U1975 );
    sub_2139( "GA", "P_RELEASE_EF_ASSETS end", 0 );
    return;
}

void sub_79575(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_79610( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_79610(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_8261( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

void sub_79853(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_79888( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_79888(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_8261( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_80069(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_8261( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_80262(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_8261( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = {0, 0, 0};
    StrCopy( ref l_U42, "DUMMY", 32 );
    l_U50 = 1;
    l_U55 = 0;
    l_U56 = 0;
    l_U57 = 0;
    l_U60 = 0;
    l_U105 = 0;
    l_U111 = "SpeechMain";
    g_U0 = 1;
    g_U648 = 0;
    g_U700 = 0;
    g_U701 = 0;
    g_U702 = 1;
    StrCopy( ref g_U703, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref g_U711, "DEFAULT_SPLINE_CAMERA", 32 );
    g_U827 = 935214838;
    g_U828 = 2049164176;
    g_U829 = 1870966354;
    g_U830 = 877301963;
    g_U831 = 1530781321;
    g_U832 = 1225210396;
    g_U1243 = 0;
    g_U1244 = 0;
    g_U1245 = 0;
    StrCopy( ref g_U1336, "S_PAN_02_SEARCH", 32 );
    StrCopy( ref g_U1344, "s_pan_ExplReact", 32 );
    StrCopy( ref g_U1352, "s_pan_valves", 32 );
    StrCopy( ref g_U1360, "s_pan_max_dies", 32 );
    StrCopy( ref g_U1368, "S_PAN_07_CIV_SHOT", 32 );
    StrCopy( ref g_U1376, "S_PAN_MID01D", 32 );
    StrCopy( ref g_U1384, "S_PAN_08_WALL_STRIP", 32 );
    StrCopy( ref g_U1392, "s_pan_mid_01_blend_out", 32 );
    StrCopy( ref g_U1400, "s_pan_mid_02_blend_out", 32 );
    StrCopy( ref g_U1408, "S_PAN_09_BD_SEARCH", 32 );
    StrCopy( ref g_U1416, "S_PAN_11_REPEL_A", 32 );
    StrCopy( ref g_U1424, "S_PAN_11_REPEL_B", 32 );
    StrCopy( ref g_U1432, "S_PAN_11_REPEL_C", 32 );
    StrCopy( ref g_U1440, "S_PAN_17_ZIPLINE", 32 );
    StrCopy( ref g_U1448, "S_PAN_20_PIANO", 32 );
    StrCopy( ref g_U1456, "S_PAN_13_HELI_EXIT", 32 );
    StrCopy( ref g_U1464, "AIT_NORMAL", 32 );
    StrCopy( ref g_U1472, "AIT_NORMAL", 32 );
    StrCopy( ref g_U1480, "AIT_EXPERT", 32 );
    StrCopy( ref g_U1488, "AIT_NORMAL", 32 );
    StrCopy( ref g_U1496, "AIT_SNIPER", 32 );
    StrCopy( ref g_U1504, "AIT_EXPERT", 32 );
    g_U1512 = -833991384;
    g_U1513 = -1313103852;
    g_U1514 = 1188958325;
    g_U1515 = 1562459387;
    g_U1516 = -1819061890;
    g_U1517 = -794483711;
    g_U1518 = -1601322029;
    g_U1519 = -80123654;
    g_U1520 = -511101542;
    g_U1521 = 838536423;
    g_U1522 = 1068083268;
    g_U1523 = -2080896344;
    g_U1524 = 1237993497;
    g_U1525 = 931597504;
    g_U1526 = 1700980855;
    g_U1527 = 1875595339;
    g_U1528 = -495852897;
    g_U1529 = -773308020;
    g_U1530 = 1590163489;
    g_U1531 = 1367694748;
    g_U1532 = -767139230;
    g_U1533 = -314797321;
    g_U1534 = 1721151522;
    g_U1535 = -1425703854;
    g_U1536 = 954302977;
    g_U1537 = 2013046598;
    g_U1538 = 2054423852;
    g_U1539 = 649531958;
    g_U1540 = -1267155413;
    g_U1541 = -1237495167;
    g_U1542 = 1753483091;
    g_U1543 = 2077685034;
    g_U1544 = -972172999;
    g_U1545 = 641327914;
    g_U1546 = 750022869;
    g_U1547 = 1599326784;
    g_U1548 = -409680696;
    g_U1549 = 1421246829;
    g_U1550 = -1993059759;
    g_U1551 = -1483096701;
    g_U1552 = -1012070492;
    g_U1553 = -1642324177;
    g_U1554 = -1312427082;
    g_U1555 = -428712694;
    g_U1556 = -727336591;
    g_U1557 = 108764444;
    g_U1558 = -147652981;
    g_U1559 = 382953850;
    g_U1560 = -2133213815;
    g_U1561 = 1836488387;
    g_U1562 = 1494501626;
    g_U1563 = 1789062167;
    g_U1564 = 111911982;
    g_U1565 = -1833680731;
    g_U1566 = -2105620881;
    g_U1567 = -1647419810;
    g_U1568 = 255127915;
    g_U1569 = -897528228;
    g_U1570 = -1134723546;
    g_U1571 = -981400475;
    g_U1572 = -1685949395;
    g_U1573 = 706571406;
    g_U1574 = 25085735;
    g_U1575 = 1652009717;
    g_U1576 = 1707713315;
    g_U1577 = -1501547715;
    g_U1578 = 1130851164;
    g_U1579 = 377452751;
    g_U1580 = -1096620032;
    g_U1581 = 1243768211;
    g_U1582 = 138784803;
    g_U1583 = 1914709263;
    g_U1584 = 301129366;
    g_U1585 = 1714989179;
    g_U1586 = -2069146012;
    g_U1587 = 1463538732;
    StrCopy( ref g_U3071, "SCRIPT_MISSION\S_PANA_YACHT_1", 32 );
    StrCopy( ref g_U3079, "SCRIPT_MISSION\S_PANA_YACHT_2", 32 );
    StrCopy( ref g_U3087, "SCRIPT_MISSION\S_PANA_CANAL_LOCK", 64 );
    StrCopy( ref g_U3103, "SCRIPT_MISSION\S_PANA_GRAPPLE_HOOK", 64 );
    StrCopy( ref g_U3119, "SCRIPT_MISSION\S_PANA_PLAY_PIANO", 64 );
    StrCopy( ref g_U3135, "Room_CrewBed01", 32 );
    StrCopy( ref g_U3143, "Room_CrewBed02", 32 );
    StrCopy( ref g_U3151, "Room_CrewBed03", 32 );
    StrCopy( ref g_U3159, "Room_CrewBed04", 32 );
    StrCopy( ref g_U3167, "Room_CrewBed05", 32 );
    StrCopy( ref g_U3175, "Room_CrewBed06", 32 );
    StrCopy( ref g_U3183, "Room_CrewMess", 32 );
    StrCopy( ref g_U3191, "Room_Galley", 32 );
    StrCopy( ref g_U3199, "Room_GalleyStore", 32 );
    StrCopy( ref g_U3207, "Room_Piperoom", 32 );
    StrCopy( ref g_U3215, "Room_EngineRoom", 32 );
    StrCopy( ref g_U3223, "Room_Exit", 32 );
    StrCopy( ref g_U3231, "RoomMilo_Gym", 32 );
    StrCopy( ref g_U3239, "RoomMilo_LoungeArea", 32 );
    StrCopy( ref g_U3247, "RoomMilo_Bedroom1", 32 );
    StrCopy( ref g_U3255, "RoomMilo_Bedroom2", 32 );
    StrCopy( ref g_U3263, "RoomMilo_Bedroom3", 32 );
    StrCopy( ref g_U3271, "RoomMilo_FrontExit", 32 );
    StrCopy( ref g_U3279, "Bar1Milo", 32 );
    StrCopy( ref g_U3287, "Bar2Milo", 32 );
    StrCopy( ref g_U3295, "DiningMilo", 32 );
    StrCopy( ref g_U3303, "Dineing2Milo", 32 );
    StrCopy( ref g_U3311, "Deck4_Room", 32 );
    StrCopy( ref g_U3384, "Pana_PumpRoom", 32 );
    StrCopy( ref g_U3392, "Pana_CntRoom", 32 );
    StrCopy( ref g_U3400, "GiftShopRoom", 32 );
    StrCopy( ref g_U3408, "Room_Lobby", 32 );
    StrCopy( ref g_U3416, "MedelRoom", 32 );
    StrCopy( ref g_U3424, "GtaMloRoom42", 32 );
    StrCopy( ref g_U3432, "ExhibitRoom", 32 );
    StrCopy( ref g_U3440, "Room_Lobby", 32 );
    StrCopy( ref g_U3448, "TheatreRoom", 32 );
    StrCopy( ref g_U3456, "Bathroom_Hall", 32 );
    StrCopy( ref g_U3464, "cafe", 32 );
    StrCopy( ref g_U3472, "ExhibitRoom", 32 );
    StrCopy( ref g_U3480, "Bathroom_Hall", 32 );
    StrCopy( ref g_U3488, "Room_Office", 32 );
    StrCopy( ref g_U3496, "Room_Offi_Stair", 32 );
    g_U3684 = 1;
    g_U3685 = -1349376778;
    g_U3686 = 181425049;
    g_U3687 = 1019831221;
    g_U3688 = -1840595770;
    g_U3689 = -287478160;
    g_U3690 = -1112283803;
    g_U3691 = -421131882;
    g_U3692 = -1951792696;
    g_U3693 = 1443275009;
    g_U3694 = -1175169980;
    g_U3695 = 1583005559;
    g_U3696 = 1843280469;
    g_U3697 = 1929955038;
    g_U3698 = -690921068;
    g_U3699 = 1663867255;
    g_U3700 = 743879868;
    g_U3701 = 372230415;
    g_U3702 = -2133105592;
    g_U3703 = -1255695954;
    g_U3704 = 891070751;
    g_U3705 = 1013718928;
    g_U3706 = -126550084;
    g_U3707 = -950452719;
    g_U3708 = -1676192505;
    g_U3709 = 241873182;
    g_U3710 = -630583606;
    g_U3711 = 1347423198;
    g_U3712 = 1509883557;
    g_U4049 = {0.00000000, 0.00000000, 0.00000000};
    g_U4061 = 5000;
    StrCopy( ref g_U4063, "SPAN_MXFNDS1", 16 );
    StrCopy( ref g_U4067, "SPAN_MXFNDS2", 16 );
    g_U4072 = {40.23000000, 3.85000000, -1.15200000};
    g_U4076 = {49.78511000, 3.86132200, -1.14855000};
    g_U4081 = -1;
    g_U4168 = {113.74700000, 3.91200000, 7.87500000};
    g_U4172 = {-118.67600000, 3.91200000, 7.87500000};
    g_U4175 = -1;
    g_U4176 = 0;
    g_U4177 = 0;
    g_U4178 = {0.00000000, 0.00000000, -1.39000000};
    g_U4181 = {0.00000000, 0.00000000, 0.00000000};
    g_U4184 = 1.00000000;
    g_U4187 = 0;
    g_U4200 = {5.89600000, 3.90300000, 8.18600000};
    g_U4227 = {6.12300000, 3.90400000, 10.56000000};
    g_U4232 = {5.73000000, 3.88000000, 10.56000000};
    g_U4235 = -1;
    g_U4236 = -1;
    g_U4237 = {5.62000000, 3.96000000, 9.46000000};
    sub_3419( "SP", "script startup.sc is starting...", "###" );
    l_U105 = 1;
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        ENABLE_BULLET_CAMERA_WIPE( 1 );
    }
    while (IS_EXITFLAG_SET() == 0)
    {
        switch (l_U105)
        {
            case 0: break;
            case 1:
            sub_3419( "SP", "eScriptState = SCRIPT_SETUP", 0 );
            SET_STREAMING( 0 );
            SET_DEBUG_ACTIVE( 0 );
            SET_RANDOM_SEED( GET_GAME_TIMER() );
            sub_3645( 0 );
            g_U833 = GET_CHECKPOINT_SELECTED();
            g_U834 = g_U833;
            sub_3745();
            sub_3836();
            sub_5404();
            sub_17601();
            SET_CAM_VIEW_MODE( 1 );
            SET_DAMAGE_TO_PLAYER_MULTIPLIER( 1.10000000 );
            SET_DAMAGE_FROM_PLAYER_MULTIPLIER( 0.95000000 );
            l_U106._fU0 = 2;
            l_U106._fU8 = 10;
            SET_RICH_PRESENCE( ref l_U106 );
            if (g_U833 < 12)
            {
                l_U105 = 3;
                sub_3419( "SP", "eScriptState = SCRIPT_START_GAMEPLAY", 0 );
            }
            else
            {
                l_U105 = 2;
                sub_3419( "SP", "eScriptState = SCRIPT_START_DEBUG", 0 );
            }
            break;
            case 2:
            sub_3419( "SP", "eScriptState = SCRIPT_START_DEBUG", 0 );
            SET_STREAMING( 1 );
            sub_17986();
            sub_18949( 0 );
            if ((g_U833 <= 30) AND (g_U833 >= 12))
            {
                sub_19062( sub_5521(), 68019059, 200, 0, 0 );
            }
            if (g_U833 == 31)
            {
                sub_19432( "s_pana_ISequences", 1536 );
            }
            else if (g_U833 == 32)
            {
                sub_19521();
                sub_19432( "s_pana_cutscene", 1536 );
            }
            else if (g_U833 == 34)
            {
                sub_19521();
                sub_19432( "s_pana_ImageMetrics", 8192 );
            };;;
            if (NOT (IS_PED_DEAD( sub_5521() )))
            {
                FREEZE_PED_POSITION( sub_5521(), 0 );
            }
            l_U105 = 5;
            sub_3419( "SP", "eScriptState = SCRIPT_RUNNING", 0 );
            break;
            case 3:
            sub_3419( "SP", "eScriptState = SCRIPT_START_GAMEPLAY", 0 );
            sub_24155();
            sub_24744();
            SET_STREAMING( 1 );
            sub_19521();
            sub_25539();
            sub_17986();
            sub_26084( "SPANAUD" );
            LOAD_ADDITIONAL_TEXT( "MAXAUD", 2 );
            sub_26213();
            if ((DOES_SCRIPT_EXIST( l_U111 )) == 1)
            {
                REQUEST_SCRIPT( l_U111 );
                "[doubled result, dropped if not asigned]";
                l_U105 = 4;
                sub_3419( "SP", "eScriptState = SCRIPT_LOADING_SPEECHMAIN", 0 );
            }
            else
            {
                SCRIPT_ASSERT( "[SP] Error: SpeechMain.sc doesn't exist on the disc!!!", 0 );
            }
            break;
            case 4:
            sub_3419( "SP", "eScriptState = SCRIPT_LOADING_SPEECHMAIN", 0 );
            if ((HAS_SCRIPT_LOADED( l_U111 )) == 1)
            {
                l_U112 = START_NEW_SCRIPT( l_U111, 128 );
                l_U105 = 5;
                sub_3419( "SP", "eScriptState = SCRIPT_RUNNING", 0 );
            }
            break;
            case 5:
            sub_26745();
            if (g_U833 < 12)
            {
                sub_31718( ref g_U835, 12 );
                sub_32405( ref g_U1588, ref g_U1829, ref g_U1878, ref g_U1975, ref g_U2756, ref g_U2817, ref g_U2986, ref g_U3026 );
            }
            break;
        }
        WAIT( 0 );
    }
    SET_EXITFLAG_RESPONSE();
    sub_3419( "SP", "template script startup.sc is terminating...", "###" );
    return;
}

void sub_3419(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_3645(unknown uParam0)
{
    if ((IS_SCREEN_FADING_OUT() == 0) AND (IS_SCREEN_FADED_OUT() == 0))
    {
        DO_SCREEN_FADE_OUT( uParam0 );
        while (IS_SCREEN_FADED_OUT() == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_3745()
{
    sub_3419( "SP", "P_SETUP_WEATHER_TIMEOFDAY", "###" );
    SET_WEATHER_TYPE_NOW_PERSIST( "EXTRASUNNY" );
    FREEZE_TIME_OF_DAY( 12, 0 );
    return;
}

void sub_3836()
{
    sub_3419( "SP", "P_SETUP_START_POSITIONS", "###" );
    g_U980[0] = {-43.57719000, 2.12666600, -0.65435900};
    g_U1086[0] = 0.00000000;
    g_U1158[0] = -94.57988000;
    g_U1122[0] = -4.01361100;
    g_U980[1] = {-43.57719000, 2.12666600, -0.65435900};
    g_U1086[1] = 0.00000000;
    g_U1158[1] = -94.57988000;
    g_U1122[1] = -4.01361100;
    g_U980[2] = {19.91101000, 1.45653900, -3.75593200};
    g_U1086[2] = 359.90000000;
    g_U1158[2] = 4.00000000;
    g_U1122[2] = 4.00000000;
    g_U980[3] = {43.03246000, 3.87885200, -1.08768500};
    g_U1086[3] = 254.49120000;
    g_U1158[3] = 23.50000000;
    g_U1122[3] = -2.10626100;
    g_U980[4] = {13.33660000, 3.00201600, 2.16661700};
    g_U1086[4] = 0.00000000;
    g_U1158[4] = 83.05400000;
    g_U1122[4] = -9.24000000;
    g_U980[5] = {-42.12000000, 4.09000000, 2.20000000};
    g_U1086[5] = 91.39000000;
    g_U1158[5] = 4.73696100;
    g_U1122[5] = -0.45865300;
    g_U980[6] = {-6.79000000, 10.52000000, 5.30000000};
    g_U1086[6] = 310.00000000;
    g_U1158[6] = -10.00000000;
    g_U1122[6] = -2.60000000;
    g_U980[7] = {17.62273000, 3.56044500, 8.19034300};
    g_U1086[7] = 87.00000000;
    g_U1158[7] = 4.20000000;
    g_U1122[7] = -1.10000000;
    g_U980[8] = {-65.09029000, 28.73986000, 7.91147900};
    g_U1086[8] = 179.00000000;
    g_U1158[8] = -75.00000000;
    g_U1122[8] = 2.00000000;
    g_U980[9] = {-103.14580000, 24.58729000, 7.90137800};
    g_U1086[9] = 360.00000000;
    g_U1158[9] = 102.00000000;
    g_U1122[9] = 0.00000000;
    g_U980[10] = {-109.70000000, 20.93000000, 15.11000000};
    g_U1086[10] = 180.00000000;
    g_U1158[10] = -5.00000000;
    g_U1122[10] = -7.00000000;
    g_U980[11] = {-109.22000000, -36.86000000, 9.09000000};
    g_U1086[11] = -15.00000000;
    g_U1158[11] = -15.43332000;
    g_U1122[11] = -4.02107600;
    g_U980[20] = {g_U980[1]};
    g_U1086[20] = g_U1086[1];
    g_U1158[20] = g_U1158[1];
    g_U1122[20] = g_U1122[1];
    g_U980[21] = {g_U980[2]};
    g_U1086[21] = g_U1086[2];
    g_U1158[21] = g_U1158[2];
    g_U1122[21] = g_U1122[2];
    g_U980[22] = {g_U980[3]};
    g_U1086[22] = g_U1086[3];
    g_U1158[22] = g_U1158[3];
    g_U1122[22] = g_U1122[3];
    g_U980[23] = {g_U980[4]};
    g_U1086[23] = g_U1086[4];
    g_U1158[23] = g_U1158[4];
    g_U1122[23] = g_U1122[4];
    g_U980[24] = {g_U980[5]};
    g_U1086[24] = g_U1086[5];
    g_U1158[24] = g_U1158[5];
    g_U1122[24] = g_U1122[5];
    g_U980[25] = {g_U980[6]};
    g_U1086[25] = g_U1086[6];
    g_U1158[25] = g_U1158[6];
    g_U1122[25] = g_U1122[6];
    g_U980[26] = {g_U980[7]};
    g_U1086[26] = g_U1086[7];
    g_U1158[26] = g_U1158[7];
    g_U1122[26] = g_U1122[7];
    g_U980[27] = {g_U980[8]};
    g_U1086[27] = g_U1086[8];
    g_U1158[27] = g_U1158[8];
    g_U1122[27] = g_U1122[8];
    g_U980[28] = {g_U980[10]};
    g_U1086[28] = g_U1086[10];
    g_U1158[28] = g_U1158[10];
    g_U1122[28] = g_U1122[10];
    g_U980[29] = {g_U980[11]};
    g_U1086[29] = g_U1086[11];
    g_U1158[29] = g_U1158[11];
    g_U1122[29] = g_U1122[11];
    g_U980[30] = {963.00000000, 2.20000000, 12.00000000};
    g_U1086[30] = 0.00000000;
    g_U1158[30] = 0.00000000;
    g_U1122[30] = 0.00000000;
    return;
}

void sub_5404()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;

    sub_3419( "SP", "P_CREATE_PLAYER", "###" );
    uVar2 = {g_U980[g_U833]};
    uVar5 = g_U1086[g_U833];
    if (IS_CUSTOM_PLAYER_VARIATION() == 0)
    {
        sub_5497( 26, uVar2, 0 );
    }
    else
    {
        uVar6 = sub_16121( GET_CUSTOM_PLAYER_VARIATION() );
        sub_5497( uVar6, uVar2, 0 );
        if ((sub_16529( uVar6 )) == 1)
        {
            SET_HOLSTER_VISIBLE( sub_5521(), 0, 1 );
            SET_HOLSTER_VISIBLE( sub_5521(), 1, 1 );
        }
        else
        {
            SET_HOLSTER_VISIBLE( sub_5521(), 0, 0 );
            SET_HOLSTER_VISIBLE( sub_5521(), 1, 0 );
        }
    }
    if ((IS_PED_DEAD( sub_5521() )) == 0)
    {
        sub_17470( sub_5521(), uVar2, uVar5 );
        FREEZE_PED_POSITION( sub_5521(), 1 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( sub_5521(), 1 );
        REQUEST_COLLISION_AT_COORD( uVar2 );
        SET_PED_SWEAT( sub_5521(), 0.00000000, 0.00000000 );
    }
    SET_PAYNEKILLER_AMT( 4 );
    return;
}

void sub_5497(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    unknown Result;
    unknown uVar8;

    Result = CREATE_PLAYER( uParam4, uParam1 );
    uVar8 = sub_5521();
    switch (uParam0)
    {
        case 0:
        sub_5986( uVar8 );
        break;
        case 1:
        sub_6196( uVar8 );
        break;
        case 2:
        sub_6406( uVar8 );
        break;
        case 3:
        sub_6616( uVar8 );
        break;
        case 4:
        sub_6826( uVar8 );
        break;
        case 5:
        sub_7036( uVar8 );
        break;
        case 6:
        sub_7246( uVar8 );
        break;
        case 8:
        sub_7456( uVar8 );
        break;
        case 9:
        sub_7666( uVar8 );
        break;
        case 10:
        sub_7876( uVar8 );
        break;
        case 11:
        sub_8086( uVar8 );
        break;
        case 12:
        sub_8296( uVar8 );
        break;
        case 13:
        sub_8506( uVar8 );
        break;
        case 14:
        sub_8716( uVar8 );
        break;
        case 15:
        sub_8926( uVar8 );
        break;
        case 16:
        sub_9136( uVar8 );
        break;
        case 17:
        sub_9346( uVar8 );
        break;
        case 18:
        sub_9556( uVar8 );
        break;
        case 19:
        sub_9766( uVar8 );
        break;
        case 20:
        sub_9976( uVar8 );
        break;
        case 21:
        sub_10186( uVar8 );
        break;
        case 22:
        sub_10396( uVar8 );
        break;
        case 23:
        sub_10606( uVar8 );
        break;
        case 24:
        sub_10816( uVar8 );
        break;
        case 25:
        sub_11026( uVar8 );
        break;
        case 26:
        sub_11236( uVar8 );
        break;
        case 27:
        sub_11446( uVar8 );
        break;
        case 28:
        sub_11656( uVar8 );
        break;
        case 29:
        sub_11866( uVar8 );
        break;
        case 30:
        sub_12076( uVar8 );
        break;
        case 31:
        sub_12286( uVar8 );
        break;
        case 32:
        sub_12496( uVar8 );
        break;
        case 33:
        sub_12706( uVar8 );
        break;
        case 34:
        sub_12916( uVar8 );
        break;
        case 35:
        sub_13126( uVar8 );
        break;
        case 36:
        sub_13336( uVar8 );
        break;
        case 37:
        sub_13546( uVar8 );
        break;
        case 38:
        sub_13771( uVar8 );
        break;
        case 39:
        sub_13981( uVar8 );
        break;
        case 40:
        sub_14191( uVar8 );
        break;
        case 41:
        sub_14401( uVar8 );
        break;
        case 42:
        sub_14611( uVar8 );
        break;
        case 43:
        sub_14821( uVar8 );
        break;
        case 44:
        sub_15033( sub_5521() );
        break;
        case 45:
        sub_15247( sub_5521() );
        break;
        case 46:
        sub_15461( sub_5521() );
        break;
        case 47:
        sub_15675( sub_5521() );
        break;
        case 48:
        sub_15889( sub_5521() );
        break;
    }
    return Result;
}

int sub_5521()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_5543() );
    }
    return 0;
}

void sub_5543()
{
    return GET_PLAYER_ID();
}

void sub_5986(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_6196(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 29, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_6406(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_6616(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_6826(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 17, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 11, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 27, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 16, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 13, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 8, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_7036(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_7246(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 24, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_7456(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_7666(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_7876(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_8086(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 28, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_8296(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_8506(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 17, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 11, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_8716(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 16, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 23, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 14, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 11, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 6, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_8926(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 16, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 23, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 14, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 11, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 6, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_9136(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 13, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_9346(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 6, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 14, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_9556(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 9, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 3, 0, 0 );
    }
    return;
}

void sub_9766(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 13, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 7, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 3, 0, 0 );
    }
    return;
}

void sub_9976(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_10186(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 14, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 7, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 3, 0, 0 );
    }
    return;
}

void sub_10396(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 14, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 3, 0, 0 );
    }
    return;
}

void sub_10606(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 14, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 30, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 3, 0, 0 );
    }
    return;
}

void sub_10816(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 14, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 4, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_11026(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 14, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 4, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_11236(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 5, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 18, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_11446(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 15, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 5, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_11656(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 15, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 5, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 0, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_11866(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 15, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 16, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_12076(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 15, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_12286(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 10, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 21, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 0, 0, 0 );
    }
    return;
}

void sub_12496(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 11, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 20, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 0, 1, 0 );
    }
    return;
}

void sub_12706(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 12, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 25, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_12916(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 12, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 15, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_13126(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 19, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 22, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 17, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 0, 1, 0 );
    }
    return;
}

void sub_13336(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 7, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 17, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 13, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 2, 0, 0 );
    }
    return;
}

void sub_13546(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 18, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 19, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
        SET_PED_PROP_INDEX( uParam0, 0, 0, 0, 255 );
    }
    return;
}

void sub_13771(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_13981(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_14191(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 12, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_14401(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 26, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_14611(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 8, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_14821(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 8, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 7, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_15033(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 13, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 34, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 19, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 16, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 4, 0, 0 );
    }
    return;
}

void sub_15247(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 13, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 34, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 19, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 12, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 12, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 16, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 7, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 6, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 4, 1, 0 );
    }
    return;
}

void sub_15461(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 32, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 18, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 11, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_15675(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 12, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 32, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 18, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 11, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 10, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 16, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 6, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 5, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 1, 0 );
    }
    return;
}

void sub_15889(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 33, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 11, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 15, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

int sub_16121(unknown uParam0)
{
    unknown uVar3;

    uVar3 = uParam0;
    switch (uVar3)
    {
        case 1:
        return 44;
        break;
        case 2:
        return 46;
        break;
        case 3:
        return 3;
        break;
        case 4:
        return 10;
        break;
        case 5:
        return 15;
        break;
        case 6:
        return 18;
        break;
        case 7:
        return 20;
        break;
        case 8:
        return 24;
        break;
        case 9:
        return 26;
        break;
        case 10:
        return 31;
        break;
        case 11:
        return 36;
        break;
        case 12:
        return 1;
        break;
        case 13:
        return 16;
        break;
        case 14:
        return 29;
        break;
        case 15:
        return 32;
        break;
        case 16:
        return 41;
        break;
        case 17:
        return 37;
        break;
        case 18:
        return 48;
        break;
        case 19:
        return 45;
        break;
        case 20:
        return 47;
        break;
    }
    return 49;
}

int sub_16529(unknown uParam0)
{
    switch (uParam0)
    {
        case 0:
        return 0;
        break;
        case 1:
        return 0;
        break;
        case 2:
        return 0;
        break;
        case 3:
        return 0;
        break;
        case 4:
        return 0;
        break;
        case 5:
        return 0;
        break;
        case 6:
        return 0;
        break;
        case 8:
        return 1;
        break;
        case 9:
        return 1;
        break;
        case 10:
        return 1;
        break;
        case 11:
        return 0;
        break;
        case 12:
        return 0;
        break;
        case 13:
        return 1;
        break;
        case 14:
        return 1;
        break;
        case 15:
        return 1;
        break;
        case 16:
        return 0;
        break;
        case 17:
        return 0;
        break;
        case 18:
        return 1;
        break;
        case 19:
        return 1;
        break;
        case 20:
        return 0;
        break;
        case 21:
        return 1;
        break;
        case 22:
        return 1;
        break;
        case 23:
        return 1;
        break;
        case 24:
        return 1;
        break;
        case 25:
        return 1;
        break;
        case 26:
        return 1;
        break;
        case 27:
        return 1;
        break;
        case 28:
        return 1;
        break;
        case 29:
        return 0;
        break;
        case 30:
        return 1;
        break;
        case 31:
        return 1;
        break;
        case 32:
        return 1;
        break;
        case 33:
        return 0;
        break;
        case 34:
        return 1;
        break;
        case 35:
        return 1;
        break;
        case 36:
        return 1;
        break;
        case 37:
        return 0;
        break;
        case 38:
        return 0;
        break;
        case 39:
        return 0;
        break;
        case 40:
        return 0;
        break;
        case 41:
        return 0;
        break;
        case 42:
        return 0;
        break;
        case 43:
        return 0;
        break;
        case 44:
        return 0;
        break;
        case 45:
        return 0;
        break;
        case 46:
        return 0;
        break;
        case 47:
        return 0;
        break;
        case 48:
        return 0;
        break;
    }
    return 0;
}

void sub_17470(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_17601()
{
    sub_3419( "SP", "P_SETUP_PLAYER_RELATIONSHIPS", "###" );
    if ((IS_PED_DEAD( sub_5521() )) == 0)
    {
        SET_PED_RELATIONSHIP( sub_5521(), 0, 1 );
        SET_PED_RELATIONSHIP( sub_5521(), 0, 2 );
        SET_PED_RELATIONSHIP( sub_5521(), 0, 6 );
        SET_PED_RELATIONSHIP( sub_5521(), 0, 7 );
    }
    return;
}

void sub_17986()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    int iVar5;
    string sVar6;
    unknown uVar7;

    sub_3419( "SP", "P_LOAD_AREA", "###" );
    uVar2 = {g_U980[g_U833]};
    iVar5 = -1;
    switch (g_U833)
    {
        case 0:
        case 1:
        case 20:
        iVar5 = GET_HASH_KEY( ref g_U3135 );
        sVar6 = "Deck1";
        break;
        case 2:
        case 21:
        iVar5 = GET_HASH_KEY( ref g_U3215 );
        sVar6 = "Deck1engine";
        break;
        case 3:
        case 22:
        iVar5 = GET_HASH_KEY( ref g_U3223 );
        sVar6 = "Deck1exit";
        break;
        case 4:
        case 23:
        iVar5 = GET_HASH_KEY( ref g_U3239 );
        sVar6 = "Deck2";
        break;
        case 5:
        case 24:
        iVar5 = GET_HASH_KEY( ref g_U3271 );
        sVar6 = "Deck2exit";
        break;
        case 11:
        case 29:
        iVar5 = GET_HASH_KEY( ref g_U3408 );
        sVar6 = "Foyer";
        break;
    }
    if (iVar5 == -1)
    {
        LOAD_SCENE( uVar2 );
    }
    else
    {
        uVar7 = GET_INTERIOR_FROM_NAME( sVar6, 0 );
        SET_INTERIOR_ACTIVE( uVar7, 1, 0 );
        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar7, iVar5 );
    }
    if (g_U834 == 3)
    {
        SET_INTERIOR_ACTIVE( GET_INTERIOR_FROM_NAME( "Deck2", 0 ), 1, 0 );
        LOAD_SCENE_FOR_ROOM_BY_KEY( GET_INTERIOR_FROM_NAME( "Deck2", 0 ), GET_HASH_KEY( ref g_U3231 ) );
        LOAD_SCENE( 46.59128000, 3.98778500, 3.97410100 );
    }
    if (g_U834 == 5)
    {
        LOAD_SCENE( -60.36033000, 4.03825700, 6.08244300 );
        LOAD_SCENE( -9.51633800, 3.89024600, 13.19525000 );
    }
    if (g_U834 == 6)
    {
        SET_INTERIOR_ACTIVE( GET_INTERIOR_FROM_NAME( "Deck3exit", 0 ), 1, 0 );
        LOAD_SCENE_FOR_ROOM_BY_KEY( GET_INTERIOR_FROM_NAME( "Deck3exit", 0 ), GET_HASH_KEY( ref g_U3303 ) );
    }
    if (g_U834 == 11)
    {
        SET_INTERIOR_ACTIVE( GET_INTERIOR_FROM_NAME( "vc1Right", 0 ), 1, 0 );
        LOAD_SCENE_FOR_ROOM_BY_KEY( GET_INTERIOR_FROM_NAME( "vc1Right", 0 ), GET_HASH_KEY( ref g_U3400 ) );
        SET_INTERIOR_ACTIVE( GET_INTERIOR_FROM_NAME( "vc1Left", 0 ), 1, 0 );
        LOAD_SCENE_FOR_ROOM_BY_KEY( GET_INTERIOR_FROM_NAME( "vc1Left", 0 ), GET_HASH_KEY( ref g_U3416 ) );
        LOAD_SCENE( -109.45960000, -15.33696000, 9.64765600 );
        LOAD_SCENE( -108.55380000, 20.68639000, 11.62371000 );
    }
    if ((IS_PED_DEAD( sub_5521() )) == 0)
    {
        SET_PED_COORDS( sub_5521(), uVar2, 1 );
        SET_PED_HEADING( sub_5521(), g_U1086[g_U833] );
        FREEZE_PED_POSITION( sub_5521(), 1 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1158[g_U833], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1122[g_U833], 1065353216, 0 );
    }
    return;
}

void sub_18949(unknown uParam0)
{
    if ((IS_SCREEN_FADING_IN() == 0) AND (IS_SCREEN_FADED_IN() == 0))
    {
        DO_SCREEN_FADE_IN( uParam0 );
        while (IS_SCREEN_FADED_IN() == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_19062(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_19368( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_19368(unknown uParam0)
{
    return;
}

void sub_19432(unknown uParam0, unknown uParam1)
{
    REQUEST_SCRIPT( uParam0 );
    "[doubled result, dropped if not asigned]";
    while ((HAS_SCRIPT_LOADED( uParam0 )) == 0)
    {
        WAIT( 0 );
    }
    START_NEW_SCRIPT( uParam0, uParam1 );
    return;
}

void sub_19521()
{
    sub_3419( "MF", "P_GLOBAL_CREATE_ALL_DOORS - START", 0 );
    sub_19634( ref g_U3713[0], g_U3689, -44.27758000, 5.32169000, 0.43664000, 0.00000000, 0.00000000, 0.00000000, -110.00000000, 110.00000000, 1, 0 );
    sub_20150( ref g_U3713[0], 1, 1, 1.00000000 );
    sub_20005( ref g_U3713[0], 1 );
    sub_19634( ref g_U3713[1], g_U3690, -44.37815000, 2.33806000, 0.43171000, 0.00000000, 0.00000000, 0.00000000, -110.00000000, 110.00000000, 1, 0 );
    sub_20150( ref g_U3713[1], 0, 1, 1.00000000 );
    sub_20005( ref g_U3713[1], 1 );
    sub_19634( ref g_U3713[2], g_U3687, -37.33594000, 5.32179000, 0.43720000, 0.00000000, 0.00000000, 0.00000000, -110.00000000, 110.00000000, 1, 0 );
    sub_19634( ref g_U3713[3], g_U3688, -37.33504000, 2.33680000, 0.43720000, 0.00000000, 0.00000000, 0.00000000, -110.00000000, 110.00000000, 1, 0 );
    sub_20150( ref g_U3713[3], 0, 1, 0.30000000 );
    sub_19634( ref g_U3713[4], g_U3685, -30.53626000, 5.32230000, 0.43720000, 0.00000000, 0.00000000, 0.00000000, -110.00000000, 110.00000000, 1, 0 );
    sub_20150( ref g_U3713[4], 1, 1, 1.00000000 );
    sub_20005( ref g_U3713[4], 1 );
    sub_19634( ref g_U3713[5], g_U3686, -30.53630000, 2.33804000, 0.43720000, 0.00000000, 0.00000000, 0.00000000, -110.00000000, 110.00000000, 1, 0 );
    sub_20150( ref g_U3713[5], 0, 1, 1.00000000 );
    sub_20005( ref g_U3713[5], 1 );
    sub_19634( ref g_U3713[6], g_U3694, 1.90790000, -0.24320000, 0.56350000, 0.00000000, 0.00000000, 0.00000000, -0.01000000, 0.00000000, 1, 0 );
    sub_20798( ref g_U3713[6], 1 );
    sub_19634( ref g_U3713[7], g_U3695, 12.53256000, -3.39169000, 0.49154000, 0.00000000, 0.00000000, 0.00000000, -90.00000000, 0.00000000, 0, 1 );
    sub_20798( ref g_U3713[7], 1 );
    sub_19634( ref g_U3713[8], g_U3696, 12.53157000, 10.52140000, 0.49412000, 0.00000000, 0.00000000, 0.00000000, -115.00000000, 0.00000000, 1, 0 );
    sub_20798( ref g_U3713[8], 1 );
    sub_19634( ref g_U3777[0], g_U3699, 24.75918000, -0.74805000, 3.24288000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 35.00000000, 1, 0 );
    sub_20150( ref g_U3777[0], 1, 1, 0.30000000 );
    sub_19634( ref g_U3777[1], g_U3703, -2.57487000, -0.57792000, 3.24329000, 0.00000000, 0.00000000, 0.00000000, 26.00000000, 27.00000000, 1, 0 );
    sub_20798( ref g_U3777[1], 1 );
    sub_19634( ref g_U3777[2], g_U3700, -2.54126000, 8.35078000, 3.25633000, 0.00000000, 0.00000000, 0.00000000, -110.00000000, 110.00000000, 1, 0 );
    sub_20150( ref g_U3777[2], 0, 1, 0.35000000 );
    sub_19634( ref g_U3777[3], g_U3699, -7.29046000, 1.42185000, 3.25776000, 0.00000000, 0.00000000, 0.00000000, -110.00000000, 110.00000000, 1, 0 );
    sub_20150( ref g_U3777[3], 0, 1, 1.00000000 );
    sub_20005( ref g_U3777[3], 1 );
    sub_19634( ref g_U3777[4], g_U3698, -10.64608000, 4.89107000, 3.24594000, 0.00000000, 0.00000000, 0.00000000, -89.00000000, 130.00000000, 1, 0 );
    sub_20150( ref g_U3777[4], 1, 1, 1.00000000 );
    sub_20005( ref g_U3777[4], 1 );
    sub_19634( ref g_U3777[5], g_U3699, -19.32917000, 0.72835000, 3.25671000, 0.00000000, 0.00000000, 0.00000000, -110.00000000, 110.00000000, 1, 0 );
    sub_20150( ref g_U3777[5], 1, 1, 1065353216 );
    sub_20005( ref g_U3777[5], 1 );
    sub_19634( ref g_U3777[6], g_U3700, -20.54160000, 0.65161000, 3.25298000, 0.00000000, 0.00000000, 0.00000000, -110.00000000, 110.00000000, 1, 0 );
    sub_20150( ref g_U3777[6], 0, 1, 1065353216 );
    sub_20005( ref g_U3777[6], 1 );
    sub_19634( ref g_U3777[7], g_U3698, -22.72606000, 4.14333000, 3.24594000, 0.00000000, 0.00000000, 0.00000000, -110.00000000, 110.00000000, 1, 0 );
    sub_20150( ref g_U3777[7], 1, 1, 1065353216 );
    sub_20005( ref g_U3777[7], 1 );
    sub_19634( ref g_U3777[8], g_U3700, -26.59765000, 0.63613000, 3.25294000, 0.00000000, 0.00000000, 0.00000000, -110.00000000, 110.00000000, 1, 0 );
    sub_20150( ref g_U3777[8], 0, 1, 0.20000000 );
    sub_19634( ref g_U3777[9], g_U3692, -33.21901000, 10.21093000, 3.24398000, 0.00000000, 0.00000000, 0.00000000, -90.00000000, 89.00000000, 1, 0 );
    sub_20150( ref g_U3777[9], 0, 1, 1065353216 );
    sub_20005( ref g_U3777[9], 1 );
    sub_19634( ref g_U3777[10], g_U3697, -37.06034000, -1.30501000, 3.42993000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 89.00000000, 1, 0 );
    sub_20150( ref g_U3777[10], 1, 1, 0.60000000 );
    sub_19634( ref g_U3777[11], g_U3691, -1.85550000, -1.59770000, 3.15740000, 0.00000000, 0.00000000, 0.00000000, -90.00000000, 90.00000000, 0, 1 );
    sub_20798( ref g_U3777[11], 1 );
    sub_19634( ref g_U3777[12], g_U3691, -0.65170000, 9.35870000, 3.15740000, 0.00000000, 0.00000000, 0.00000000, -90.00000000, 90.00000000, 0, 1 );
    sub_20798( ref g_U3777[12], 1 );
    sub_19634( ref g_U3777[13], g_U3691, -13.57990000, -3.15070000, 3.15440000, 0.00000000, 0.00000000, 0.00000000, -90.00000000, 90.00000000, 0, 1 );
    sub_20798( ref g_U3777[13], 1 );
    sub_19634( ref g_U3777[14], g_U3702, -13.57990000, 10.94360000, 3.15440000, 0.00000000, 0.00000000, 0.00000000, -90.00000000, 90.00000000, 0, 1 );
    sub_20798( ref g_U3777[14], 1 );
    sub_19634( ref g_U3777[15], g_U3696, 25.61931000, -3.35702000, 3.45269000, 0.00000000, 0.00000000, 0.00000000, -90.00000000, 90.00000000, 0, 1 );
    sub_20798( ref g_U3777[15], 1 );
    sub_19634( ref g_U3890[0], g_U3693, -8.45170000, 8.45730000, 6.32890000, 0.00000000, 0.00000000, 0.00000000, -110.00000000, 110.00000000, 1, 0 );
    sub_20798( ref g_U3890[0], 1 );
    sub_19634( ref g_U3890[1], g_U3704, -10.71540000, 9.35900000, 6.24680000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 80.00000000, 0, 0 );
    sub_20150( ref g_U3890[1], 1, 1, 0.40000000 );
    sub_19634( ref g_U3890[2], g_U3691, -10.71560000, -1.59800000, 6.24680000, 0.00000000, 0.00000000, 0.00000000, -90.00000000, 90.00000000, 0, 1 );
    sub_20798( ref g_U3890[2], 1 );
    sub_19634( ref g_U3912[0], g_U3693, 12.52281000, -0.64584000, 6.27399000, 0.00000000, 0.00000000, 0.00000000, -90.00000000, 90.00000000, 0, 1 );
    sub_20798( ref g_U3912[0], 1 );
    sub_19634( ref g_U3912[1], g_U3702, 12.26410000, 9.22190000, 6.22370000, 0.00000000, 0.00000000, 0.00000000, -100.00000000, 100.00000000, 0, 1 );
    sub_20150( ref g_U3912[1], 0, 1, 1065353216 );
    sub_20005( ref g_U3912[1], 1 );
    sub_19634( ref g_U3912[2], g_U3706, -1.53070000, -1.13090000, 9.18250000, 0.00000000, 0.00000000, 0.00000000, -90.00000000, 90.00000000, 0, 1 );
    sub_20798( ref g_U3912[2], 1 );
    sub_19634( ref g_U3912[3], g_U3706, -1.53120000, 8.90860000, 9.18250000, 0.00000000, 0.00000000, 0.00000000, -90.00000000, 90.00000000, 0, 1 );
    sub_20798( ref g_U3912[3], 1 );
    sub_19634( ref g_U3912[4], g_U3705, -13.57924000, -1.00988000, 10.05367000, 0.00000000, 0.00000000, 0.00000000, -90.00000000, 90.00000000, 1, 0 );
    sub_20798( ref g_U3912[4], 1 );
    sub_19634( ref g_U3912[5], g_U3705, -12.37852000, 8.77084000, 10.05367000, 0.00000000, 0.00000000, 0.00000000, -90.00000000, 90.00000000, 1, 0 );
    sub_20798( ref g_U3912[5], 1 );
    sub_19634( ref g_U3955, g_U3701, -45.48747000, 29.79249000, 9.53181000, 0.00000000, 0.00000000, 0.00000000, -1028390912, 1119092736, 1, 0 );
    sub_20798( ref g_U3955, 1 );
    sub_19654( ref g_U3969, g_U1587, -113.63000000, -38.41000000, 23.75000000, 0.00000000, 0.00000000, 0.00000000 );
    sub_20798( ref g_U3969, 1 );
    sub_19654( ref g_U3962, g_U1587, -111.23000000, -38.41000000, 23.75000000, 0.00000000, 0.00000000, 0.00000000 );
    sub_20798( ref g_U3962, 1 );
    sub_19654( ref g_U3991[0], g_U3709, -79.78369000, -21.98512000, 9.11832000, 0.00000000, 0.00000000, 0.00000000 );
    sub_20798( ref g_U3991[0], 1 );
    sub_19654( ref g_U3991[1], g_U3710, -79.78369000, -24.27071000, 9.11714000, 0.00000000, 0.00000000, 0.00000000 );
    sub_20798( ref g_U3991[1], 1 );
    sub_19654( ref g_U3976[0], g_U3708, -94.53243000, -37.65765000, 17.14219000, 0.00000000, 0.00000000, 0.00000000 );
    sub_20798( ref g_U3976[0], 1 );
    sub_19654( ref g_U3976[1], g_U3708, -97.90794000, -37.65969000, 17.14219000, 0.00000000, 0.00000000, 0.00000000 );
    sub_20798( ref g_U3976[1], 1 );
    sub_19654( ref g_U4006[0], g_U3711, -109.05910000, -45.77236000, 10.14501000, 0.00000000, 0.00000000, 0.00000000 );
    sub_20798( ref g_U4006[0], 1 );
    sub_19654( ref g_U4006[1], g_U3712, -111.30410000, -45.77237000, 10.14501000, 0.00000000, 0.00000000, 0.00000000 );
    sub_20798( ref g_U4006[1], 1 );
    sub_19654( ref g_U4006[2], g_U3711, -117.15460000, -44.32523000, 10.12627000, 0.00000000, 0.00000000, 0.00000000 );
    sub_20798( ref g_U4006[2], 1 );
    sub_19654( ref g_U4006[3], g_U3712, -117.15460000, -42.08017000, 10.12627000, 0.00000000, 0.00000000, 0.00000000 );
    sub_20798( ref g_U4006[3], 1 );
    sub_19654( ref g_U4006[4], g_U3711, -115.77770000, -39.97692000, 10.13279000, 0.00000000, 0.00000000, 0.00000000 );
    sub_20798( ref g_U4006[4], 1 );
    sub_19654( ref g_U4006[5], g_U3712, -115.77770000, -37.73186000, 10.13279000, 0.00000000, 0.00000000, 0.00000000 );
    sub_20798( ref g_U4006[5], 1 );
    sub_3419( "MF", "P_GLOBAL_CREATE_ALL_DOORS - END", 0 );
    return;
}

void sub_19634(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    sub_19654( uParam0, uParam1, uParam2, uParam5 );
    sub_19700( uParam0, 1 );
    sub_19906( uParam0, uParam8, uParam9 );
    sub_20005( uParam0, uParam10 );
    sub_20069( uParam0, uParam11 );
    return;
}

void sub_19654(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

void sub_19700(int iParam0, int iParam1)
{
    if ((sub_19712( iParam0 )) == 0)
    {
        sub_19778( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

int sub_19712(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_19778(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_19906(int iParam0, float fParam1, float fParam2)
{
    if ((sub_19712( iParam0 )) == 0)
    {
        sub_19778( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        ;
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

void sub_20005(int iParam0, unknown uParam1)
{
    if ((sub_19712( iParam0 )) == 0)
    {
        sub_19778( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_LATCH( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

void sub_20069(int iParam0, unknown uParam1)
{
    if ((sub_19712( iParam0 )) == 0)
    {
        sub_19778( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_AUTO_CLOSE( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

void sub_20150(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_19712( iParam0 )) == 0)
    {
        sub_19778( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

void sub_20798(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_19712( iParam0 )) == 0)
    {
        sub_19778( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

void sub_24155()
{
    int I;

    sub_3419( "SP", "P_SETUP_LEVEL_FLOW", "###" );
    sub_24225( ref g_U835[0], "s_pana_LL", 8192, 1 );
    sub_24225( ref g_U835[1], "s_pana_LL", 8192, 0 );
    sub_24225( ref g_U835[2], "s_pana_EF", 8192, 0 );
    sub_24225( ref g_U835[3], "s_pana_MD1", 8192, 0 );
    sub_24225( ref g_U835[4], "s_pana_MD2", 8192, 0 );
    sub_24225( ref g_U835[5], "s_pana_Deck2", 8192, 0 );
    sub_24225( ref g_U835[6], "s_pana_TD", 8192, 0 );
    sub_24225( ref g_U835[7], "s_pana_HeliPad", 8192, 0 );
    sub_24225( ref g_U835[8], "s_pana_OB1", 8192, 0 );
    sub_24225( ref g_U835[9], "s_pana_OB2", 8192, 0 );
    sub_24225( ref g_U835[10], "s_pana_zipMPM", 8192, 0 );
    sub_24225( ref g_U835[11], "s_pana_VC", 8192, 0 );
    for ( I = 0; I < 12; I++ )
    {
        g_U1230[I] = 0;
    }
    sub_24653( ref g_U835, g_U833, 12 );
    return;
}

void sub_24225(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    StrCopy( ref iParam0->_fU0, uParam1, 32 );
    iParam0->_fU32 = nil;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = uParam2;
    iParam0->_fU36 = uParam3;
    return;
}

void sub_24653(unknown uParam0, int iParam1, int iParam2)
{
    int I;

    for ( I = 0; I <= (iParam2 - 1); I++ )
    {
        if (iParam1 == I)
        {
            (uParam0^)[I]._fU36 = 1;
        }
        else
        {
            (uParam0^)[I]._fU36 = 0;
        }
    }
    return;
}

void sub_24744()
{
    sub_3419( "SP", "P_SETUP_STREAMREQ", 0 );
    sub_24789( ref g_U1588 );
    sub_24920( ref g_U1829 );
    sub_25002( ref g_U1878 );
    sub_25084( ref g_U1975 );
    sub_25173( ref g_U2756 );
    sub_25255( ref g_U2817 );
    sub_25344( ref g_U2986 );
    sub_25433( ref g_U3026 );
    return;
}

void sub_24789(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU0 = 0;
        (uParam0^)[I]._fU4 = 0;
        sub_24843( ref (uParam0^)[I]._fU8 );
    }
    return;
}

void sub_24843(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_24920(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU0 = 0;
        (uParam0^)[I]._fU4 = 0;
        sub_24843( ref (uParam0^)[I]._fU8 );
    }
    return;
}

void sub_25002(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU0 = 0;
        (uParam0^)[I]._fU4 = 0;
        sub_24843( ref (uParam0^)[I]._fU8 );
    }
    return;
}

void sub_25084(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        StrCopy( ref (uParam0^)[I]._fU0, "", 32 );
        (uParam0^)[I]._fU32 = 0;
        sub_24843( ref (uParam0^)[I]._fU36 );
    }
    return;
}

void sub_25173(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU0 = -1;
        (uParam0^)[I]._fU4 = 0;
        sub_24843( ref (uParam0^)[I]._fU8 );
    }
    return;
}

void sub_25255(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        StrCopy( ref (uParam0^)[I]._fU0, "", 64 );
        (uParam0^)[I]._fU64 = 0;
        sub_24843( ref (uParam0^)[I]._fU68 );
    }
    return;
}

void sub_25344(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        StrCopy( ref (uParam0^)[I]._fU0, "", 32 );
        (uParam0^)[I]._fU32 = 0;
        sub_24843( ref (uParam0^)[I]._fU36 );
    }
    return;
}

void sub_25433(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        StrCopy( ref (uParam0^)[I]._fU0, "", 64 );
        (uParam0^)[I]._fU64 = 0;
        sub_24843( ref (uParam0^)[I]._fU68 );
    }
    return;
}

void sub_25539()
{
    sub_25627( ref g_U3521, "Trigger_MaxOverBoard_LS", 7.06000000, -3.79000000, -4.07000000, 115.00000000, 15.00000000, 2.47000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_25627( ref g_U3542, "Trigger_MaxOverBoard_RS", 7.06000000, 11.38000000, -4.07000000, 115.00000000, 15.00000000, 2.47000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_25627( ref g_U3563, "Trigger_MaxOverBoard_Dock_LS", -53.92000000, 5.32000000, -5.98000000, 186.94000000, 29.14000000, 4.62000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_25627( ref g_U3584, "Trigger_MaxOverBoard_Dock_RS", -53.92000000, 49.41000000, -2.13000000, 189.89000000, 26.25000000, 5.41000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_25627( ref g_U3605, "Trigger_MaxOverBoard_Visitor_Center", -53.92000000, 5.32000000, -5.98000000, 186.94000000, 29.14000000, 4.62000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    return;
}

void sub_25627(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_26084(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_26104();
    return;
}

void sub_26104()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_26213()
{
    sub_3419( "COP", "P_LOAD_PERSISTENT_ASSETS", 0 );
    LOAD_TEXTURE_DICT( "gg_s_pana" );
    sub_3419( "CO", "Starting the S_PAN_GG_SS context...", 0 );
    START_CONTEXT( "S_PAN_GG_SS" );
    sub_3419( "CO", "Starting the S_PAN_GG_AK context...", 0 );
    START_CONTEXT( "S_PAN_GG_AK" );
    return;
}

void sub_26745()
{
    sub_26755();
    sub_26853();
    sub_27184();
    sub_27250();
    sub_30363( 1097859072 );
    sub_30729();
    return;
}

void sub_26755()
{
    if (IS_KEYBOARD_KEY_JUST_PRESSED( 38 ))
    {
        if (l_U2)
        {
            l_U2 = 0;
            SET_DEBUG_ACTIVE( 0 );
        }
        else
        {
            l_U2 = 1;
            SET_DEBUG_ACTIVE( 1 );
        }
        while (IS_KEYBOARD_KEY_PRESSED( 38 ))
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_26853()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;

    iVar2 = 0;
    if (DOES_PAD_EXIST( 0 ))
    {
        iVar2 = IS_BUTTON_JUST_PRESSED( 0, 8 );
    }
    if ((IS_KEYBOARD_KEY_JUST_PRESSED( 25 )) || (iVar2))
    {
        uVar3 = sub_5521();
        if (NOT (IS_PED_DEAD( uVar3 )))
        {
            uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uVar3 )};
            uVar7 = GET_PED_HEADING( uVar3 );
            uVar8 = GET_DEBUG_CAM();
            uVar9 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_CAM_COORD( uVar8 )};
            uVar12 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_CAM_ROT( uVar8 )};
            uVar15 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_COORD()};
            uVar18 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_ROT()};
            uVar21 = GET_GAMEPLAY_CAM_RELATIVE_HEADING();
            uVar22 = GET_GAMEPLAY_CAM_RELATIVE_PITCH();
            uVar24 = GET_GROUND_Z_FOR_3D_COORD( uVar4, ref uVar23 );
            if ((IS_PED_IN_ANY_VEHICLE( uVar3 )) == 1)
            {
                sub_27067( uVar3, ref uVar25, 1 );
                uVar26 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( uVar25 )};
                uVar29 = GET_VEHICLE_HEADING( uVar25 );
            }
        }
    }
    return;
}

int sub_27067(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (bParam2)
    {
        if (NOT (IS_PED_SITTING_IN_ANY_VEHICLE( uParam0 )))
        {
            return 0;
        }
    }
    else if (NOT (IS_PED_IN_ANY_VEHICLE( uParam0 )))
    {
        return 0;
    }
    (uParam1^) = GET_VEHICLE_PED_IS_IN( uParam0 );
    return 1;
}

void sub_27184()
{
    if ((IS_KEYBOARD_KEY_PRESSED( 20 )) == 1)
    {
        if ((IS_PED_DEAD( sub_5521() )) == 0)
        {
            SET_PED_HEALTH( sub_5521(), 0, 0 );
        }
    }
    return;
}

void sub_27250()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    char[8] cVar10;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    char[8] cVar20;
    char[8] cVar22;

    if (l_U27 == 0)
    {
        START_WIDGET_GROUP( "Placement Helper" );
        START_NEW_WIDGET_COMBO();
        ADD_TO_WIDGET_COMBO( "HEALTH_STANDARD" );
        ADD_TO_WIDGET_COMBO( "ARMOUR_STANDARD" );
        ADD_TO_WIDGET_COMBO( "ARMOUR_HELMET" );
        ADD_TO_WIDGET_COMBO( "WEAPON_BEANBAG_LAUNCHER" );
        ADD_TO_WIDGET_COMBO( "WEAPON_GRENADE_LAUNCHER" );
        ADD_TO_WIDGET_COMBO( "WEAPON_LAW" );
        ADD_TO_WIDGET_COMBO( "WEAPON_MG_21E" );
        ADD_TO_WIDGET_COMBO( "WEAPON_MG_RPD" );
        ADD_TO_WIDGET_COMBO( "WEAPON_PISTOL_38" );
        ADD_TO_WIDGET_COMBO( "WEAPON_PISTOL_COLT1911" );
        ADD_TO_WIDGET_COMBO( "WEAPON_PISTOL_DEAGLE" );
        ADD_TO_WIDGET_COMBO( "WEAPON_PISTOL_GLOCK18" );
        ADD_TO_WIDGET_COMBO( "WEAPON_PISTOL_PT92" );
        ADD_TO_WIDGET_COMBO( "WEAPON_PISTOL_TAURUS608" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RIFLE_97LC" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RIFLE_AK47" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RIFLE_FAL" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RIFLE_FAL_RUBBER" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RIFLE_G36K" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RIFLE_RUG30" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RIOT_SHIELD" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RPG" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SHOTGUN_BENELLIM3" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SHOTGUN_DOUBLEBARREL" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SHOTGUN_MOSSBERG590" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SHOTGUN_SPAS15" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SHOTGUN_WINCHESTERSX3" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SMG_FAMAEMT40" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SMG_MAC10" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SMG_MP5" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SMG_PM12" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SMG_UZI" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SNIPER_M82" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SNIPER_SG1" );
        ADD_TO_WIDGET_COMBO( "WEAPON_TASER" );
        ADD_TO_WIDGET_COMBO( "WEAPON_THROWN_FLASH" );
        ADD_TO_WIDGET_COMBO( "WEAPON_THROWN_GRENADE" );
        ADD_TO_WIDGET_COMBO( "WEAPON_THROWN_INCENDIARY" );
        ADD_TO_WIDGET_COMBO( "WEAPON_THROWN_SMOKE" );
        ADD_TO_WIDGET_COMBO( "WEAPON_THROWN_TEAR_GAS" );
        ADD_TO_WIDGET_COMBO( "WEAPON_THROWN_TIN_CAN" );
        ADD_TO_WIDGET_COMBO( "INVENT_AMMOBAG" );
        ADD_TO_WIDGET_COMBO( "INVENT_PAYNE_KILLER" );
        ADD_TO_WIDGET_COMBO( "INVENT_AMMOBAG_CARRIED" );
        ADD_TO_WIDGET_COMBO( "INVENT_MPBAG_CARRIED" );
        ADD_TO_WIDGET_COMBO( "MP_SPECIAL_STEALTH_BOOTS" );
        ADD_TO_WIDGET_COMBO( "MP_SPECIAL_WALKIE_TALKIE" );
        ADD_TO_WIDGET_COMBO( "MP_SPECIAL_MONOCULAR" );
        ADD_TO_WIDGET_COMBO( "MP_SPECIAL_FIRST_AID_KIT" );
        ADD_TO_WIDGET_COMBO( "MP_SPECIAL_HYPO" );
        ADD_TO_WIDGET_COMBO( "MP_SPECIAL_SUNGLASSES" );
        ADD_TO_WIDGET_COMBO( "MP_SPECIAL_NIGHTVISION" );
        ADD_TO_WIDGET_COMBO( "ARMOUR_HEAVY" );
        ADD_TO_WIDGET_COMBO( "ARMOUR_MAX" );
        l_U11 = STOP_WIDGET_COMBO( "PICKUP TYPE", ref l_U13 );
        ADD_WIDGET_BOOL( "Grab Player Position", ref l_U14 );
        ADD_WIDGET_BOOL( "Create Pickup", ref l_U15 );
        ADD_WIDGET_BOOL( "Output Placement Function", ref l_U16 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U20._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U20._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U20._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot X", ref l_U23._fU0, -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Y", ref l_U23._fU4, -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Z", ref l_U23._fU8, -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_BOOL( "Fixed", ref l_U17 );
        ADD_WIDGET_BOOL( "Limit Pickup Angle", ref l_U18 );
        ADD_WIDGET_FLOAT_SLIDER( "Half Angle", ref l_U19, 0.00000000, 360.00000000, 1.00000000 );
        ADD_WIDGET_BOOL( "Is placement in an Interior?", ref l_U26 );
        l_U12 = ADD_TEXT_WIDGET( "Interior Room Name" );
        SET_CONTENTS_OF_TEXT_WIDGET( l_U12, "" );
        STOP_WIDGET_GROUP();
        l_U27 = 1;
    }
    if (l_U15 == 1)
    {
        sub_29384( l_U10 );
        l_U10 = sub_30062( sub_29430( l_U13 ), l_U20, l_U23, l_U17, 1, l_U18, l_U19 );
        if (l_U26 == 1)
        {
            GET_CONTENTS_OF_TEXT_WIDGET( 32, ref uVar2, l_U12 );
            ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U10, ref uVar2 );
        }
        l_U15 = 0;
    }
    if (l_U14 == 1)
    {
        if ((IS_PED_DEAD( sub_5521() )) == 0)
        {
            l_U20 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_5521() )};
        }
        l_U14 = 0;
    }
    if (l_U16 == 1)
    {
        StrCopy( ref cVar10, "PICKUP_", 8 );
        GET_CONTENTS_OF_COMBO_WIDGET_SELECTION( 32, ref uVar12, l_U11 );
        StrCopy( ref cVar20, "FALSE", 8 );
        if (l_U17 == 1)
        {
            StrCopy( ref cVar20, "TRUE", 8 );
        }
        StrCopy( ref cVar22, "FALSE", 8 );
        if (l_U18 == 1)
        {
            StrCopy( ref cVar22, "TRUE", 8 );
        }
        l_U16 = 0;
    }
    return;
}

void sub_29384(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_29430(unknown uParam0)
{
    int[54] iVar3;

    array(ref iVar3, 54);
    iVar3[0] = -1888453608;
    iVar3[1] = 1274757841;
    iVar3[2] = -1322620191;
    iVar3[3] = 1360803098;
    iVar3[4] = -64228399;
    iVar3[5] = 1468647706;
    iVar3[6] = 809028259;
    iVar3[7] = -217311068;
    iVar3[8] = -1377271918;
    iVar3[9] = -343443786;
    iVar3[10] = -2029912234;
    iVar3[11] = 426620576;
    iVar3[12] = 39142315;
    iVar3[13] = 525284907;
    iVar3[14] = 1676080365;
    iVar3[15] = 584407306;
    iVar3[16] = -46756431;
    iVar3[17] = -1601242092;
    iVar3[18] = 3711131;
    iVar3[19] = 1216559076;
    iVar3[20] = -597978297;
    iVar3[21] = 1295434569;
    iVar3[22] = -1138829373;
    iVar3[23] = -1141160886;
    iVar3[24] = 1699359515;
    iVar3[25] = -2117698134;
    iVar3[26] = -514108743;
    iVar3[27] = -579469575;
    iVar3[28] = 211733796;
    iVar3[29] = 280965399;
    iVar3[30] = -535211597;
    iVar3[31] = 843762214;
    iVar3[32] = 465100219;
    iVar3[33] = 750210207;
    iVar3[34] = 1160251115;
    iVar3[35] = 413078994;
    iVar3[36] = -527347232;
    iVar3[37] = 1675234620;
    iVar3[38] = 2088230095;
    iVar3[39] = -591863731;
    iVar3[40] = 1192708175;
    iVar3[41] = -1484798391;
    iVar3[42] = -4072149;
    iVar3[43] = 255084111;
    iVar3[44] = -547949121;
    iVar3[45] = -853563202;
    iVar3[46] = 455124134;
    iVar3[47] = -189960753;
    iVar3[48] = -718604917;
    iVar3[49] = -1126973237;
    iVar3[50] = 1528601552;
    iVar3[51] = -847977410;
    iVar3[52] = 2018389501;
    iVar3[53] = 865801398;
    return iVar3[uParam0];
}

void sub_30062(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_30363(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    int iVar8;

    if ((IS_KEYBOARD_KEY_JUST_PRESSED( 37 )) == 1)
    {
        sub_19368( "[SP]### KILL ALL PEDS IN RADIUS ###" );
        if ((IS_PED_DEAD( sub_5521() )) == 0)
        {
            iVar3 = 0;
            uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_5521() )};
            iVar8 = 1;
            while (iVar8 == 1)
            {
                if ((IS_PED_DEAD( sub_5521() )) == 0)
                {
                    iVar8 = GET_CLOSEST_ENEMY_PED( sub_5521(), uVar5, uParam0, 1, 1, 0, 1, 0, 1, ref uVar4 );
                    if (iVar8 == 1)
                    {
                        if (((GET_PED_HEALTH( uVar4 )) > 1) AND (((IS_PED_DEAD( uVar4 )) == 0) AND ((DOES_PED_EXIST( uVar4 )) == 1)))
                        {
                            sub_19368( "[SP]### thunderdome killing a ped ###" );
                            sub_30627( uVar4 );
                            SET_PED_GENERATES_DEAD_BODY_EVENTS( uVar4, 1 );
                            iVar3++;
                        }
                    }
                }
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_30627(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

void sub_30729()
{
    if (l_U50)
    {
        l_U51 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_5521() )};
        l_U58 = GET_GAMEPLAY_CAM_RELATIVE_HEADING();
        l_U59 = GET_GAMEPLAY_CAM_RELATIVE_PITCH();
        START_WIDGET_GROUP( "Teleport Player Widget" );
        ADD_WIDGET_FLOAT_READ_ONLY( "Player Current X", ref l_U51._fU0 );
        ADD_WIDGET_FLOAT_READ_ONLY( "Player Current Y", ref l_U51._fU4 );
        ADD_WIDGET_FLOAT_READ_ONLY( "Player Current Z", ref l_U51._fU8 );
        ADD_WIDGET_FLOAT_SLIDER( "Player X", ref l_U51._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Player Y", ref l_U51._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Player Z", ref l_U51._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Player Heading", ref l_U54, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Game Cam Heading", ref l_U58, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Game Cam Pitch", ref l_U59, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_BOOL( "Set coords to current", ref l_U57 );
        ADD_WIDGET_BOOL( "TeleportPlayer", ref l_U55 );
        ADD_WIDGET_BOOL( "Just set heading", ref l_U56 );
        ADD_WIDGET_BOOL( "Just set game cam pitch/heading", ref l_U60 );
        STOP_WIDGET_GROUP();
        l_U50 = 0;
    }
    if (l_U55 == 1)
    {
        sub_31371( l_U51, l_U54, l_U58, l_U59 );
        l_U56 = 1;
        l_U55 = 0;
    }
    if (l_U56)
    {
        l_U56 = 0;
        SET_PED_HEADING( sub_5521(), l_U54 );
    }
    if (l_U60)
    {
        l_U60 = 0;
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U58, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U59, 1065353216, 0 );
    }
    if (l_U57)
    {
        l_U57 = 0;
        l_U51 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_5521() )};
        l_U54 = GET_PED_HEADING( sub_5521() );
        l_U51._fU8 += -1.00000000;
        l_U58 = GET_GAMEPLAY_CAM_RELATIVE_HEADING();
        l_U59 = GET_GAMEPLAY_CAM_RELATIVE_PITCH();
    }
    return;
}

void sub_31371(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 = sub_5521();
    sub_31397( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

void sub_31397(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_31718(unknown uParam0, int iParam1)
{
    int J;
    int I;
    int iVar6;

    for ( J = 0; J <= (iParam1 - 1); J++ )
    {
        if (((uParam0^)[J]._fU40 == 0) AND ((uParam0^)[J]._fU36 == 1))
        {
            (uParam0^)[J]._fU40 = 1;
        }
        if ((uParam0^)[J]._fU40 == 0)
        {
            ;
        }
        else if ((uParam0^)[J]._fU40 == 1)
        {
            iVar6 = 0;
            for ( I = 0; I <= (iParam1 - 1); I++ )
            {
                if (((uParam0^)[I]._fU40 < 4) AND ((uParam0^)[I]._fU40 > 0))
                {
                    if ((IS_THREAD_ACTIVE( (uParam0^)[I]._fU32 )) == 1)
                    {
                        iVar6++;
                    }
                }
            }
            if (iVar6 < 2)
            {
                if ((DOES_SCRIPT_EXIST( ref (uParam0^)[J]._fU0 )) == 1)
                {
                    if ((HAS_SCRIPT_LOADED( ref (uParam0^)[J]._fU0 )) == 0)
                    {
                        REQUEST_SCRIPT( ref (uParam0^)[J]._fU0 );
                        "[doubled result, dropped if not asigned]";
                    }
                    (uParam0^)[J]._fU40 = 2;
                }
                else
                {
                    SCRIPT_ASSERT( "[SP] Error: Trying to load a script that doesn't exist!", 0 );
                    (uParam0^)[J]._fU40 = 0;
                }
            }
            else
            {
                SCRIPT_ASSERT( "[SP] Error: Attempting to start another thread when 2 are already running...", 0 );
            }
        }
        else if ((uParam0^)[J]._fU40 == 2)
        {
            if ((HAS_SCRIPT_LOADED( ref (uParam0^)[J]._fU0 )) == 1)
            {
                (uParam0^)[J]._fU32 = START_NEW_SCRIPT( ref (uParam0^)[J]._fU0, (uParam0^)[J]._fU44 );
                (uParam0^)[J]._fU40 = 3;
            }
        }
        else if ((uParam0^)[J]._fU40 == 3)
        {
            if ((IS_THREAD_ACTIVE( (uParam0^)[J]._fU32 )) == 0)
            {
                (uParam0^)[J]._fU40 = 4;
            }
        }
        else if ((uParam0^)[J]._fU40 == 4)
        {
            ;
        };;;;;
    }
    return;
}

void sub_32405(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    sub_32417( uParam0 );
    sub_32761( uParam1 );
    sub_33104( uParam2 );
    sub_34304( uParam3 );
    sub_34617( uParam4 );
    sub_34966( uParam5 );
    sub_35326( uParam6 );
    sub_35899( uParam7 );
    return;
}

void sub_32417(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            if (NOT (HAS_MODEL_LOADED( (uParam0^)[I]._fU0 )))
            {
                REQUEST_MODEL( (uParam0^)[I]._fU0 );
                "[doubled result, dropped if not asigned]";
                (uParam0^)[I]._fU4 = 2;
            }
            else
            {
                (uParam0^)[I]._fU4 = 3;
            }
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            if (HAS_MODEL_LOADED( (uParam0^)[I]._fU0 ))
            {
                (uParam0^)[I]._fU4 = 3;
            }
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            if (HAS_MODEL_LOADED( (uParam0^)[I]._fU0 ))
            {
                ;
            }
            else
            {
                SCRIPT_ASSERT( "Trying to remove a MODEL_NAME asset that is NOT loaded!!!", 0 );
            }
            SET_MODEL_AS_NO_LONGER_NEEDED( (uParam0^)[I]._fU0 );
            (uParam0^)[I]._fU0 = 0;
            (uParam0^)[I]._fU4 = 0;
            sub_24843( ref (uParam0^)[I]._fU8 );
        };;;
    }
    return;
}

void sub_32761(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            if (NOT (HAS_WEAPON_LOADED( (uParam0^)[I]._fU0 )))
            {
                REQUEST_WEAPON( (uParam0^)[I]._fU0 );
                (uParam0^)[I]._fU4 = 2;
            }
            else
            {
                (uParam0^)[I]._fU4 = 3;
            }
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            if (HAS_WEAPON_LOADED( (uParam0^)[I]._fU0 ))
            {
                (uParam0^)[I]._fU4 = 3;
            }
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            if (HAS_WEAPON_LOADED( (uParam0^)[I]._fU0 ))
            {
                ;
            }
            else
            {
                SCRIPT_ASSERT( "Trying to remove a WEAPON_TYPE asset that is NOT loaded!!!", 0 );
            }
            SET_WEAPON_AS_NO_LONGER_NEEDED( (uParam0^)[I]._fU0 );
            (uParam0^)[I]._fU0 = 0;
            (uParam0^)[I]._fU4 = 0;
            sub_24843( ref (uParam0^)[I]._fU8 );
        };;;
    }
    return;
}

void sub_33104(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            if ((uParam0^)[I]._fU0 != 0)
            {
                if ((ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 2 )))
                {
                    ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
                    (uParam0^)[I]._fU4 = 3;
                }
                else if (ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 1 ))
                {
                    SCRIPT_ASSERT( "Trying to request an ISEQ asset that is currently loading!!!", 0 );
                    ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
                    (uParam0^)[I]._fU4 = 3;
                }
                else if ((ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 4 )))
                {
                    SCRIPT_ASSERT( "Trying to request an ISEQ asset that was interrupted or shuttingdown!!!", 0 );
                    ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
                    ISEQ_REQUEST( (uParam0^)[I]._fU0 );
                    (uParam0^)[I]._fU4 = 2;
                }
                else
                {
                    ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
                    ISEQ_REQUEST( (uParam0^)[I]._fU0 );
                    (uParam0^)[I]._fU4 = 2;
                };;;
            }
            else
            {
                SCRIPT_ASSERT( "Trying to request a DUMMY_SEQUENCE!!!", 0 );
            }
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            if ((uParam0^)[I]._fU0 != 0)
            {
                if ((ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 2 )))
                {
                    (uParam0^)[I]._fU4 = 3;
                }
            }
            else
            {
                SCRIPT_ASSERT( "Trying to load a DUMMY_SEQUENCE!!!", 0 );
            }
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            if ((uParam0^)[I]._fU0 != 0)
            {
                if ((ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 2 )))
                {
                    ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
                }
                else
                {
                    ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
                    if (ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 1 ))
                    {
                        SCRIPT_ASSERT( "Trying to remove an ISEQ asset that is currently loading!!!", 0 );
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 4 )))
                    {
                        SCRIPT_ASSERT( "Trying to remove an ISEQ asset that is currently interupted or shutting down!!!", 0 );
                    }
                }
            }
            else
            {
                SCRIPT_ASSERT( "Trying to terminate a DUMMY_SEQUENCE!!!", 0 );
            }
            if ((uParam0^)[I]._fU0 != 0)
            {
                ISEQ_TERMINATE( (uParam0^)[I]._fU0 );
                (uParam0^)[I]._fU0 = 0;
            }
            (uParam0^)[I]._fU4 = 0;
            sub_24843( ref (uParam0^)[I]._fU8 );
        };;;
    }
    return;
}

void sub_34304(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            if (NOT (HAS_ANIM_DICT_LOADED( ref (uParam0^)[I]._fU0, 0 )))
            {
                REQUEST_ANIM_DICT( ref (uParam0^)[I]._fU0, 0 );
                "[doubled result, dropped if not asigned]";
                (uParam0^)[I]._fU32 = 2;
            }
            else
            {
                REQUEST_ANIM_DICT( ref (uParam0^)[I]._fU0, 0 );
                "[doubled result, dropped if not asigned]";
                (uParam0^)[I]._fU32 = 3;
            }
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            if (HAS_ANIM_DICT_LOADED( ref (uParam0^)[I]._fU0, 0 ))
            {
                (uParam0^)[I]._fU32 = 3;
            }
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            if (HAS_ANIM_DICT_LOADED( ref (uParam0^)[I]._fU0, 0 ))
            {
                ;
            }
            REMOVE_ANIM_DICT( ref (uParam0^)[I]._fU0, 0 );
            StrCopy( ref (uParam0^)[I]._fU0, "", 32 );
            (uParam0^)[I]._fU32 = 0;
            sub_24843( ref (uParam0^)[I]._fU36 );
        };;;
    }
    return;
}

void sub_34617(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            if (NOT (HAS_VEHICLE_RECORDING_BEEN_LOADED( (uParam0^)[I]._fU0 )))
            {
                REQUEST_VEHICLE_RECORDING( (uParam0^)[I]._fU0 );
                (uParam0^)[I]._fU4 = 2;
            }
            else
            {
                (uParam0^)[I]._fU4 = 3;
            }
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            if (HAS_VEHICLE_RECORDING_BEEN_LOADED( (uParam0^)[I]._fU0 ))
            {
                (uParam0^)[I]._fU4 = 3;
            }
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            if (HAS_VEHICLE_RECORDING_BEEN_LOADED( (uParam0^)[I]._fU0 ))
            {
                ;
            }
            else
            {
                SCRIPT_ASSERT( "Trying to remove a VEHICLE_RECORDING asset that is NOT loaded!!!", 0 );
            }
            REMOVE_VEHICLE_RECORDING( (uParam0^)[I]._fU0 );
            (uParam0^)[I]._fU0 = -1;
            (uParam0^)[I]._fU4 = 0;
            sub_24843( ref (uParam0^)[I]._fU8 );
        };;;
    }
    return;
}

void sub_34966(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            if (NOT (IS_ACTION_TREE_LOADED( ref (uParam0^)[I]._fU0 )))
            {
                ACTION_TREE_LOAD( ref (uParam0^)[I]._fU0 );
                (uParam0^)[I]._fU64 = 2;
            }
            else
            {
                (uParam0^)[I]._fU64 = 3;
            }
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            if (IS_ACTION_TREE_LOADED( ref (uParam0^)[I]._fU0 ))
            {
                (uParam0^)[I]._fU64 = 3;
            }
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            if (IS_ACTION_TREE_LOADED( ref (uParam0^)[I]._fU0 ))
            {
                ;
            }
            else
            {
                SCRIPT_ASSERT( "Trying to remove an ACTION_TREE asset that is NOT loaded!!!", 0 );
            }
            ACTION_TREE_UNLOAD( ref (uParam0^)[I]._fU0 );
            StrCopy( ref (uParam0^)[I]._fU0, "", 64 );
            (uParam0^)[I]._fU64 = 0;
            sub_24843( ref (uParam0^)[I]._fU68 );
        };;;
    }
    return;
}

void sub_35326(unknown uParam0)
{
    int J;
    int I;

    for ( J = 0; J <= ((uParam0^) - 1); J++ )
    {
        if ((uParam0^)[J]._fU32 == 1)
        {
            if (J <= 2)
            {
                if (NOT ((GET_SCRIPT_STREAM_STATE( ref (uParam0^)[J]._fU0, J )) == 2))
                {
                    if ((sub_35406( uParam0 )) <= 3)
                    {
                        REQUEST_SCRIPT_STREAM( ref (uParam0^)[J]._fU0, J );
                        (uParam0^)[J]._fU32 = 2;
                    }
                }
                else
                {
                    (uParam0^)[J]._fU32 = 3;
                }
            }
            else if ((sub_35406( uParam0 )) <= 3)
            {
                for ( I = 0; I <= 2; I++ )
                {
                    if ((uParam0^)[I]._fU32 == 0)
                    {
                        (uParam0^)[I]._fU0 = {(uParam0^)[J]._fU0};
                        (uParam0^)[I]._fU32 = (uParam0^)[J]._fU32;
                        (uParam0^)[I]._fU36 = {(uParam0^)[J]._fU36};
                        StrCopy( ref (uParam0^)[J]._fU0, "", 32 );
                        (uParam0^)[J]._fU32 = 0;
                        sub_24843( ref (uParam0^)[J]._fU36 );
                        return;
                    }
                }
            }
        }
        else if ((uParam0^)[J]._fU32 == 2)
        {
            if (J <= 2)
            {
                if ((GET_SCRIPT_STREAM_STATE( ref (uParam0^)[J]._fU0, J )) == 2)
                {
                    (uParam0^)[J]._fU32 = 3;
                }
            }
        }
        else if ((uParam0^)[J]._fU32 == 4)
        {
            if (J <= 2)
            {
                if ((GET_SCRIPT_STREAM_STATE( ref (uParam0^)[J]._fU0, J )) == 2)
                {
                    ;
                }
                STOP_SCRIPT_STREAM( J );
                StrCopy( ref (uParam0^)[J]._fU0, "", 32 );
                (uParam0^)[J]._fU32 = 0;
                sub_24843( ref (uParam0^)[J]._fU36 );
            }
        };;;
    }
    return;
}

void sub_35406(unknown uParam0)
{
    int I;
    int Result;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 3)
        {
            Result++;
        }
    }
    return Result;
}

void sub_35899(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            if (NOT (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam0^)[I]._fU0, 0 )))
            {
                LOAD_SCRIPT_AUDIO_BANK( ref (uParam0^)[I]._fU0 );
                (uParam0^)[I]._fU64 = 2;
            }
            else
            {
                (uParam0^)[I]._fU64 = 3;
            }
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam0^)[I]._fU0, 0 ))
            {
                (uParam0^)[I]._fU64 = 3;
            }
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam0^)[I]._fU0, 0 ))
            {
                ;
            }
            else
            {
                SCRIPT_ASSERT( "Trying to remove an AUDIO_BANK asset that is NOT loaded!!!", 0 );
            }
            RELEASE_NAMED_SCRIPT_AUDIO_BANK( ref (uParam0^)[I]._fU0 );
            StrCopy( ref (uParam0^)[I]._fU0, "", 64 );
            (uParam0^)[I]._fU64 = 0;
            sub_24843( ref (uParam0^)[I]._fU68 );
        };;;
    }
    return;
}


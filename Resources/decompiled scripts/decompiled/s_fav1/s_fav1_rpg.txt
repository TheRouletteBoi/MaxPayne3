void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    StrCopy( ref l_U39, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U47, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U58 = 0;
    l_U60 = 0;
    l_U61 = 0;
    l_U62 = 1500;
    l_U108 = 0;
    l_U109 = 0;
    l_U110 = 0;
    l_U321 = 1;
    l_U322 = 1;
    l_U323 = 1;
    l_U324 = 1;
    l_U347 = 0;
    l_U527 = 0;
    l_U528 = 0;
    l_U587 = {16.10000000, 31.10000000, 26};
    l_U590 = 143.00000000;
    l_U592 = 0;
    l_U593 = 0;
    l_U594 = 0;
    l_U595 = 0;
    l_U596 = 0;
    l_U597 = "07_05_FAV1_concat";
    l_U599 = 0;
    l_U601 = 0;
     /* WRITESCRIPTLOG */ sub_503( "NS", "Script fav1_RPG.sc is starting...", "###" );
     /* P_SETUP_STATIC_DATA */ sub_621();
     /* P_INITIALIZE_SCRIPT_DATA */ sub_2447();
    if (l_U108 == 0)
    {
        if (( /* HAS_SAVEFILE_LOADED */ sub_3816( ref l_U72 )) == 0)
        {
            if (g_U1048 == 12)
            {
                 /* F_GIVEPEDWEAPON */ sub_6549(  /* PLAYER_PED_ID */ sub_3963(), g_U1816, 200, 0, 1 );
            }
        }
        l_U108 = 1;
    }
    while (NOT l_U591)
    {
         /* P_HANDLE_CHECKPOINTS */ sub_8646();
        if (l_U110 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_12451();
        }
        WAIT( 0 );
    }
     /* P_CLEANUP_ALL */ sub_10979( 0 );
     /* P_UNLOAD_ALL_ASSETS */ sub_29786();
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3963() )))
    {
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    }
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "fav1_cs_compound" );
     /* WRITESCRIPTLOG */ sub_503( "NS", "Script fav1_RPG.sc is terminating...", "###" );
    return;
}

/* WRITESCRIPTLOG */ void sub_503(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_SETUP_STATIC_DATA */ void sub_621()
{
     /* WRITESCRIPTLOG */ sub_503( "SA", "P_SETUP_STATIC_DATA", "###" );
     /* P_CREATETRIGGERBOX */ sub_757( ref l_U111, "tbRPGDropDown", 10.70000000, 15.52000000, 21.43000000, 8.00000000, 8.00000000, 7.00000000, 0.00000000, 0.00000000, 89.86000000, 1 );
     /* P_CREATETETHERBOX */ sub_917( ref l_U279, "teRPG", 15.90000000, 34.17000000, 23.64000000, 2.74000000, 2.75000000, 7.86000000, 0.00000000, 0.00000000, 89.86000000, 1 );
     /* P_CREATETETHERBOX */ sub_917( ref l_U280, "teReplacement", 7.56000000, 32.52000000, 25.95000000, 5.87000000, 9.71000000, 7.86000000, 0.00000000, 0.00000000, 89.86000000, 1 );
     /* P_CREATETETHERBOX */ sub_917( ref l_U281, "teReplacement2", 3.37000000, 17.28000000, 23.89000000, 8.30000000, 16.34000000, 7.86000000, 0.00000000, 0.00000000, 89.86000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_757( ref l_U132, "tbDeath", -0.40000000, 26.66000000, 18.70000000, 21.00000000, 21.00000000, 1.50000000, 0.00000000, 0.00000000, 26.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_757( ref l_U153, "tbDeath2", -4.12000000, 39.81000000, 14.31000000, 20.00000000, 20.00000000, 6.00000000, 0.00000000, 0.00000000, 89.86000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_757( ref l_U174, "tbDeath3", -14.11000000, 48.87000000, 14.31000000, 20.00000000, 20.00000000, 6.00000000, 0.00000000, 0.00000000, 89.86000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_757( ref l_U195, "tbGatewalk", 6.76000000, 47.35000000, 26.73000000, 6.00000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_757( ref l_U216, "tbGateEnd", 6.88000000, 48.56000000, 26.73000000, 2.80000000, 1.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_757( ref l_U237, "tbPreLoadCutscene", 14.32000000, 33.07000000, 21.43000000, 8.00000000, 8.00000000, 7.00000000, 0.00000000, 0.00000000, 89.86000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_757( ref l_U258, "tbEndVO", 15.83000000, 41.12000000, 23.72000000, 8.00000000, 8.00000000, 7.00000000, 0.00000000, 0.00000000, 89.86000000, 1 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_1646( ref l_U331[0], 9.02000000, 39.12000000, 26.34000000, 232.56100000, -1114450979, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_1646( ref l_U352[0], -0.59000000, 33.23000000, 26.42000000, 179.72000000, -1703186085, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_1646( ref l_U352[1], 6.19000000, 31.01000000, 26.42000000, 179.72000000, 1856425051, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_1646( ref l_U352[2], -11.61000000, 25.62000000, 22.46000000, -136.71000000, -6975242, 7, 3, 2, 0, 0 );
     /* P_CREATEDOORSTRUCT */ sub_1949( ref l_U282, 596292157, 7.41664000, 29.48332000, 22.78789000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_2018( ref l_U282, 1 );
     /* P_CREATEDOORSTRUCT */ sub_1949( ref l_U289, 596292157, 22.23564000, 39.65355000, 25.96429000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_2018( ref l_U289, 1 );
     /* P_CREATEDOORSTRUCT */ sub_1949( ref l_U296, 596292157, 22.83441000, 41.07724000, 25.93914000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_2018( ref l_U296, 1 );
     /* P_CREATEDOORSTRUCT */ sub_1949( ref l_U303, 596292157, 19.10240000, 41.91318000, 26.63193000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_2018( ref l_U303, 1 );
    return;
}

/* P_CREATETRIGGERBOX */ void sub_757(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATETETHERBOX */ void sub_917(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_1646(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATEDOORSTRUCT */ void sub_1949(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

/* P_SETDOORLOCKED */ void sub_2018(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if (( /* F_DOESDOOREXIST */ sub_2048( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_2132( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_2048(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_2132(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_2447()
{
     /* WRITESCRIPTLOG */ sub_503( "SA", "INITIALIZE_SCRIPT_DATA", "###" );
    l_U109 = 0;
    l_U591 = 0;
    l_U594 = 0;
    l_U593 = 0;
    l_U592 = 1;
    l_U595 = 0;
    l_U596 = 0;
     /* P_SETDOORLOCKED */ sub_2018( ref g_U1699, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_2592( ref g_U1699, -100.00000000, 100.00000000 );
     /* P_OPENDOOR */ sub_2822( ref g_U1699, 1, 1, 0.90000000 );
     /* F_SET_DOOR_NOT_AFFECTED_BY_BULLETS */ sub_2987( g_U1335 );
     /* F_SET_DOOR_NOT_AFFECTED_BY_BULLETS */ sub_2987( g_U1342 );
    l_U347 = 0;
    l_U525 = 0;
    l_U321 = 1;
    l_U322 = 1;
    l_U323 = 1;
    l_U324 = 1;
     /* P_INITIALIZE_SP_CHALLENGES */ sub_3207();
    return;
}

/* P_SETDOORMINMAXLIMIT */ void sub_2592(int iParam0, float fParam1, float fParam2)
{
    if (( /* F_DOESDOOREXIST */ sub_2048( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_2132( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        PRINTSTRING( "[SP]### Error: Door fMinLimit greater than fMaxLimit (default min:-81.0 max:81.0) ###" );
        PRINTNL();
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

/* P_OPENDOOR */ void sub_2822(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if (( /* F_DOESDOOREXIST */ sub_2048( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_2132( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

/* F_SET_DOOR_NOT_AFFECTED_BY_BULLETS */ int sub_2987(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    unknown uVar9;

    uVar9 = DOOR_FIND_CLOSEST( uParam0._fU0, uParam0._fU4 );
    if (DOES_OBJECT_EXIST( uVar9 ))
    {
        if (DOOR_GET_IS_AFFECTED_BY_BULLETS( uVar9 ))
        {
             /* WRITESCRIPTLOG */ sub_503( "NS", "Setting door to not react to bullets.", 0 );
            DOOR_SET_IS_AFFECTED_BY_BULLETS( uVar9, 0 );
            return 1;
        }
    }
    return 0;
}

/* P_INITIALIZE_SP_CHALLENGES */ void sub_3207()
{
     /* WRITESCRIPTLOG */ sub_503( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U526 = 0;
    l_U527 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( 1701971384 )))
    {
         /* WRITESCRIPTLOG */ sub_503( "CCB", "Creating the OldPainless script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( 1701971384 );
        DISPLAYF( "[CCB] ### The current OldPainless value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( 1701971384 ) );
        if (SCRIPT_VAR_HASH_EXISTS( 1701971384 ))
        {
             /* WRITESCRIPTLOG */ sub_503( "CCB", "The OldPainless script variable was successfully created...", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_503( "CCB", "The OldPainless script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_503( "CCB", "The OldPainless script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( 1701971384, 0 );
        DISPLAYF( "[CCB] ### The current OldPainless value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( 1701971384 ) );
    }
    return;
}

/* HAS_SAVEFILE_LOADED */ int sub_3816(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_503( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_4057( uParam0,  /* PLAYER_PED_ID */ sub_3963() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* PLAYER_PED_ID */ int sub_3963()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_4001() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_4001()
{
    return GET_PLAYER_ID();
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_4057(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_503( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_4276( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_5440( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_5754( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6233( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_5754( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6233( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_5754( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6233( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_6549( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6233( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_6549( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6233( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_7121( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_7323( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_3963(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_503( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_4276(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_4338( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_4338(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_5440(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_5754(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_6158( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* WRITE_STRING */ void sub_6158(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_6233(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_6549(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_6158( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_7121(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_7323(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_4338( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_7421( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_7421(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_HANDLE_CHECKPOINTS */ void sub_8646()
{
    if (g_U1049 == 12)
    {
        switch (l_U110)
        {
            case 0:
            if (( /* RESTARTING_CHECKPOINT */ sub_8763()) || (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3963() )))
            {
                l_U110 = 1;
                 /* WRITESCRIPTLOG */ sub_503( "kja", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if ( /* IS_RESTART_ACTIVE */ sub_9282())
            {
                l_U110 = 2;
            }
            else if (( /* F_CHECK_QUIT_RETRY */ sub_9342( 0 )) == 1)
            {
                l_U110 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3963() )))
            {
                l_U110 = 3;
                 /* WRITESCRIPTLOG */ sub_503( "kja", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
             /* WRITESCRIPTLOG */ sub_503( "kja", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_4001() )) == 0)
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_4001(), 0, 0 );
            }
            if (IS_DEATH_PANEL_WIPE_ALLOWED() == 0)
            {
                DO_SCREEN_FADE_OUT( 0 );
            }
            g_U773 = 0;
             /* P_CLEANUP_ALL */ sub_10979( 1 );
             /* P_UNLOAD_CUTSCENE_ASSETS */ sub_11617();
            ISEQ_TERMINATE( -1613942561 );
            l_U110 = 4;
             /* WRITESCRIPTLOG */ sub_503( "kja", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
             /* WRITESCRIPTLOG */ sub_503( "kja", "eFailState = FAIL_RESTORE_PLAYER", 0 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_4057( ref l_U72,  /* PLAYER_PED_ID */ sub_3963() );
            LOAD_SCENE( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_3963() ) );
            l_U110 = 5;
             /* WRITESCRIPTLOG */ sub_503( "kja", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
             /* WRITESCRIPTLOG */ sub_503( "kja", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
             /* P_SETUP_STATIC_DATA */ sub_621();
             /* P_INITIALIZE_SCRIPT_DATA */ sub_2447();
            if ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_4001() )) == 0)
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_4001(), 1, 0 );
            }
            l_U109 = 0;
            g_U878 = 0;
            l_U110 = 0;
             /* WRITESCRIPTLOG */ sub_503( "kja", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    else if (( /* IS_RESTART_ACTIVE */ sub_9282()) || (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3963() )))
    {
        l_U591 = 1;
        g_U763 = 0;
         /* P_RESET_CHECKPOINT_THREAD */ sub_12369( ref g_U879[12] );
    }
    return;
}

/* RESTARTING_CHECKPOINT */ int sub_8763()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3963() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_3963(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_4001(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_4001(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_3963() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_3963(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* IS_RESTART_ACTIVE */ void sub_9282()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_9342(int iParam0)
{
    iParam0 = 1;
    switch (l_U61)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_9424( ref l_U63 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3963() )))
            {
                l_U62 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_9558( ref l_U63, l_U62, 1, 1 );
             /* STARTTIMER */ sub_9708( ref l_U63 );
        }
        if ( /* ISTIMERDONE */ sub_9841( ref l_U63 ))
        {
             /* WRITESCRIPTLOG */ sub_503( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3963() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_4001() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_4001(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U61 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U61 = 2;
            }
            else
            {
                l_U61 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_503( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_10342();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_503( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_10342();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_9424(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* CREATETIMER */ void sub_9558(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_9708(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* ISTIMERDONE */ int sub_9841(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_10342()
{
     /* WRITESCRIPTLOG */ sub_503( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_10417( ref l_U63 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_4001() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_4001(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U60 = 0;
    l_U60 = l_U60;
    l_U61 = 0;
    return;
}

/* RESETTIMER */ void sub_10417(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_CLEANUP_ALL */ void sub_10979(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_503( "SA", "P_CLEANUP_ALL", "###" );
     /* RESETTIMER */ sub_10417( ref l_U578 );
    REMOVE_SPATIALDATA_COVER_POINT( l_U598 );
     /* P_CLEAN_ENEMIES */ sub_11058();
     /* CLEANPED */ sub_11140( l_U392 );
     /* CLEANPED */ sub_11140( l_U406 );
     /* CLEANPED */ sub_11140( l_U420 );
     /* CLEANPED */ sub_11140( l_U435 );
     /* CLEANPEDARRAY */ sub_11090( ref l_U449 );
     /* P_STOP_SP_CHALLENGES */ sub_11312( uParam0 );
    return;
}

/* P_CLEAN_ENEMIES */ void sub_11058()
{
     /* CLEANPEDARRAY */ sub_11090( ref l_U345 );
     /* CLEANPEDARRAY */ sub_11090( ref l_U348 );
    return;
}

/* CLEANPEDARRAY */ void sub_11090(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_11140( (uParam0^)[I] );
    }
    return;
}

/* CLEANPED */ void sub_11140(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* P_STOP_SP_CHALLENGES */ void sub_11312(boolean bParam0)
{
     /* WRITESCRIPTLOG */ sub_503( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    if (bParam0)
    {
        ;
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_503( "CCB", "Stopping the Favela_End context...", 0 );
        END_CONTEXT( "Favela_End" );
         /* WRITESCRIPTLOG */ sub_503( "CCB", "Stopping the Favela context...", 0 );
        END_CONTEXT( "Favela" );
    }
     /* WRITESCRIPTLOG */ sub_503( "CCB", "Stopping the Favela_Compound context...", 0 );
    END_CONTEXT( "Favela_Compound" );
    return;
}

/* P_UNLOAD_CUTSCENE_ASSETS */ void sub_11617()
{
     /* WRITESCRIPTLOG */ sub_503( "NS", "P_UNLOAD_CUTSCENE_ASSETS()", 0 );
    CLEAR_NAMED_CUTSCENE( l_U597 );
     /* UNLOADWEAPON */ sub_11711( -1464892298 );
     /* UNLOADMODEL */ sub_11758( 1917029888 );
     /* UNLOADMODEL */ sub_11758( -389601559 );
     /* UNLOADMODEL */ sub_11758( 1286278693 );
     /* UNLOADMODEL */ sub_11758( 1437984777 );
     /* UNLOADMODEL */ sub_11758( -693003798 );
    return;
}

/* UNLOADWEAPON */ void sub_11711(unknown uParam0)
{
    SET_WEAPON_AS_NO_LONGER_NEEDED( uParam0 );
    return;
}

/* UNLOADMODEL */ void sub_11758(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
         /* WRITE_STRING */ sub_6158( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

/* P_RESET_CHECKPOINT_THREAD */ void sub_12369(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

/* P_HANDLE_EVENTS */ void sub_12451()
{
     /* P_HANDLE_SP_CHALLENGES */ sub_12479();
    switch (l_U109)
    {
        case 0:
         /* SETUP_SCRIPTED_SPEECH */ sub_12950( "SFV1AUD" );
        if (g_U1049 < 12)
        {
             /* P_LOAD_PRE_CUTSCENE_ASSETS */ sub_13126( 0 );
            l_U109 = 2;
        }
        else
        {
            DO_SCREEN_FADE_OUT( 0 );
             /* P_REQUEST_GAMEPLAY_ASSETS */ sub_14131();
            l_U109 = 1;
        }
        break;
        case 1:
        if ( /* F_ARE_GAMEPLAY_ASSETS_LOADED */ sub_14238())
        {
             /* P_CREATE_GROUP_R */ sub_14376();
             /* P_CREATE_REPLACEMENT */ sub_16530();
            l_U528 = 1;
            l_U109 = 4;
        }
        break;
        case 2:
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_17189( ref l_U111, 0 ))
        {
             /* P_LOAD_PRE_CUTSCENE_ASSETS */ sub_13126( 1 );
             /* P_CREATE_GROUP_R */ sub_14376();
            l_U528 = 1;
            l_U109 = 3;
        }
        break;
        case 3:
        l_U109 = 4;
        break;
        case 4:
        l_U109 = 5;
        break;
        case 5:
         /* P_START_GAMEPLAY */ sub_17441();
        if ((l_U72._fU0 == 0) || (g_U1049 < 11))
        {
            g_U1049 = 12;
             /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_18269( ref l_U72, g_U1049,  /* PLAYER_PED_ID */ sub_3963(), g_U1050[11], g_U1174[11], g_U1216[11], g_U1258[11], 1 );
        }
        l_U109 = 6;
        break;
        case 6:
         /* P_HANDLE_ROCKET_LAUNCH */ sub_22878();
        if (l_U321 == 1)
        {
            if ( /* F_SET_DOOR_NOT_AFFECTED_BY_BULLETS */ sub_2987( g_U1706 ))
            {
                l_U321 = 0;
            }
        }
        if (l_U347 == 0)
        {
            if ( /* F_ISPLAYERINTRIGGERBOX */ sub_25546( l_U111 ))
            {
                l_U347 = 1;
                g_U774 = 1;
            }
        }
        if (l_U525 == 1)
        {
            if (IS_PED_DEAD( l_U345[0] ))
            {
                l_U525 = 0;
            }
        }
        if (( /* F_ISPLAYERINTRIGGERBOX */ sub_25546( l_U174 )) || (( /* F_ISPLAYERINTRIGGERBOX */ sub_25546( l_U153 )) || ( /* F_ISPLAYERINTRIGGERBOX */ sub_25546( l_U132 ))))
        {
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3963() )))
            {
                SET_PED_HEALTH(  /* PLAYER_PED_ID */ sub_3963(), 0, 0 );
            }
        }
        if (l_U592 == 1)
        {
            if ( /* F_ISPLAYERINTRIGGERBOX */ sub_25546( l_U195 ))
            {
                if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3963() )))
                {
                    if ((GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_3963() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_3963(), 1 );
                    }
                }
            }
            else if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3963() )))
            {
                if ((GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_3963() )) == 1)
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_3963(), 0 );
                }
            }
            if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_17189( ref l_U216, 0 ))
            {
                 /* P_CLEAN_ENEMIES */ sub_11058();
                 /* P_UNLOAD_GAMEPLAY_ASSETS */ sub_25882();
                l_U592 = 0;
                if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3963() )))
                {
                    if (IS_ARCADE_MODE_ACTIVE() == 0)
                    {
                        SET_HIGHEST_ARCADE_LEVEL_UNLOCKED( 10 );
                    }
                }
                if (IS_ARCADE_MODE_ACTIVE())
                {
                    DISPLAY_ARCADE_MODE_LEVEL_END( "s_cemet" );
                    DO_SCREEN_FADE_IN( 0 );
                }
                else
                {
                    l_U594 = 1;
                }
                l_U527 = 1;
            }
            if (l_U323 == 1)
            {
                if ( /* F_HAS_07_05_PRELOADED */ sub_26347())
                {
                     /* P_HANDLE_07_05_PEDS */ sub_26489();
                    l_U323 = 0;
                }
            }
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_17189( ref l_U258, 0 ))
        {
            ;
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_17189( ref l_U237, 0 ))
        {
            AUDIO_MUSIC_SUSPEND( 20000 );
             /* P_PRELOAD_MODEL_07_05 */ sub_26746( 0 );
        }
        if (l_U594 == 1)
        {
             /* P_HANDLE_CUTSCENE_07_05_FAV1 */ sub_27206();
        }
        if (l_U324 == 1)
        {
            if ( /* F_ASSIGN_BULLET_CAM */ sub_29340())
            {
                l_U324 = 0;
            }
        }
        break;
    }
    return;
}

/* P_HANDLE_SP_CHALLENGES */ void sub_12479()
{
    switch (l_U526)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_503( "CCB", "eOldPainless - STATE_CHALLENGE_IDLE", 0 );
        l_U526 = 1;
        break;
        case 1:
        if (l_U527)
        {
            if (SCRIPT_VAR_HASH_EXISTS( 1701971384 ))
            {
                SCRIPT_VAR_HASH_SET_INT( 1701971384, 1 );
                DISPLAYF( "[CCB] ### The current OldPainless value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( 1701971384 ) );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_503( "CCB", "The OldPainless script variable is NOT valid!!!", 0 );
            }
             /* WRITESCRIPTLOG */ sub_503( "CCB", "eOldPainless - STATE_CHALLENGE_COMPLETE", 0 );
            l_U526 = 2;
        }
        break;
        case 2: break;
    }
    return;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_12950(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_12994();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_12994()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* P_LOAD_PRE_CUTSCENE_ASSETS */ void sub_13126(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_503( "NS", "P_LOAD_PRE_CUTSCENE_ASSETS", "###" );
     /* LOADMODEL */ sub_13217( -2138428787, uParam0 );
     /* LOADMODEL */ sub_13217( 973577609, uParam0 );
     /* LOADWEAPON */ sub_13481( -1312131151, uParam0 );
     /* LOADISEQ */ sub_13633( -1613942561, uParam0 );
     /* LOADANIMDICT */ sub_13938( "EXPL_CAM", 0, 0 );
    return;
}

/* LOADMODEL */ void sub_13217(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_6158( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADWEAPON */ void sub_13481(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load weapon: {!f1} : {1} ###", 2, 1, 199730165, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADISEQ */ void sub_13633(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                DISPLAYF( "[SP]### Waiting for interactive sequence to be loaded: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* LOADANIMDICT */ void sub_13938(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an animation dictionary to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_REQUEST_GAMEPLAY_ASSETS */ void sub_14131()
{
     /* WRITESCRIPTLOG */ sub_503( "NS", "P_REQUEST_GAMEPLAY_ASSETS", "###" );
     /* P_LOAD_PRE_CUTSCENE_ASSETS */ sub_13126( 0 );
    return;
}

/* F_ARE_GAMEPLAY_ASSETS_LOADED */ int sub_14238()
{
    if ((HAS_ANIM_DICT_LOADED( "EXPL_CAM", 0 )) AND (((ISEQ_QUERY_STATE( -1613942561, 2 )) == 1) AND ((HAS_WEAPON_LOADED( -1312131151 )) AND ((HAS_MODEL_LOADED( 973577609 )) AND (HAS_MODEL_LOADED( -2138428787 ))))))
    {
        return 1;
    }
    return 0;
}

/* P_CREATE_GROUP_R */ void sub_14376()
{
    int I;

     /* WRITESCRIPTLOG */ sub_503( "NS", "P_CREATE_GROUP_R", 0 );
     /* CLEANPEDARRAY */ sub_11090( ref l_U345 );
    for ( I = 0; I < 1; I++ )
    {
        l_U345[I] =  /* CREATEPED */ sub_14464( ref l_U331[I] );
        if (NOT (IS_PED_DEAD( l_U345[I] )))
        {
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3963() )))
            {
                REGISTER_TARGET( l_U345[I],  /* PLAYER_PED_ID */ sub_3963() );
            }
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U345[I], 1 );
            SET_PED_AI_TEMPLATE( l_U345[I], "AIT_CS_TANK_GREN" );
            SET_PED_ALERTNESS( l_U345[I], 4 );
            SET_PED_COMBAT_ATTRIBUTES( l_U345[I], 4096, 1 );
            SET_PED_COMBAT_ATTRIBUTES( l_U345[I], 1, 0 );
             /* P_QUICK_ADD_PED_TO_GROUP */ sub_15362( l_U345[I], ref l_U325 );
             /* P_TETHERPED */ sub_16137( ref l_U279, l_U345[I], 1 );
            SET_PED_DROPS_WEAPONS_WHEN_DEAD( l_U345[I], 0 );
            SET_PED_PERFECT_ACCURACY_OVERRIDE( l_U345[I], 1 );
            SET_BULLET_CAM_ON_NEXT_PROJECTILE( l_U345[I], "QUICKCUT_FAILSAFE_01" );
        }
    }
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_16322( ref l_U345, "piGroupR " );
    if (NOT (IS_PED_DEAD( l_U345[0] )))
    {
        ISEQ_REGISTER_ENTITY( -1613942561, "rocket_enemy", l_U345[0], 0 );
        ISEQ_START( -1613942561 );
    }
    return;
}

/* CREATEPED */ void sub_14464(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_13217( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_14955( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_15056( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_14955(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_15056(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_15362(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_6158( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_15532( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_15532( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* P_SETUP_AI_GROUP */ void sub_15532(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* P_TETHERPED */ void sub_16137(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

/* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ void sub_16322(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

/* P_CREATE_REPLACEMENT */ void sub_16530()
{
    int I;

     /* WRITESCRIPTLOG */ sub_503( "NS", "P_CREATE_REPLACEMENTS()", 0 );
     /* CLEANPEDARRAY */ sub_11090( ref l_U348 );
    l_U348[0] =  /* CREATEPED */ sub_14464( ref l_U352[0] );
    l_U348[1] =  /* CREATEPED */ sub_14464( ref l_U352[1] );
    l_U348[2] =  /* CREATEPED */ sub_14464( ref l_U352[2] );
    for ( I = 0; I < 3; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U348[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U348[I], 1 );
            SET_PED_AI_TEMPLATE( l_U348[I], "AIT_NORMAL" );
            SET_PED_ALERTNESS( l_U348[I], 4 );
             /* P_QUICK_ADD_PED_TO_GROUP */ sub_15362( l_U348[I], ref l_U325 );
            SET_PED_ACCURACY( l_U348[I], 31186664 );
        }
    }
     /* F_GIVEPEDWEAPON */ sub_6549( l_U348[0], g_U1819, 25000, 0, 0 );
     /* P_TETHERPED */ sub_16137( ref l_U280, l_U348[0], 1 );
     /* F_GIVEPEDWEAPON */ sub_6549( l_U348[1], g_U1820, 25000, 0, 0 );
     /* P_TETHERPED */ sub_16137( ref l_U280, l_U348[1], 1 );
     /* F_GIVEPEDWEAPON */ sub_6549( l_U348[2], g_U1820, 25000, 0, 0 );
     /* P_TETHERPED */ sub_16137( ref l_U281, l_U348[2], 1 );
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_16322( ref l_U348, "piReplacement" );
     /* P_DEACTIVATEPEDARRAY */ sub_16971( ref l_U348 );
    return;
}

/* P_DEACTIVATEPEDARRAY */ void sub_16971(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_DEACTIVATEPED */ sub_17025( (uParam0^)[I] );
    }
    return;
}

/* P_DEACTIVATEPED */ void sub_17025(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_17189(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_17265(  /* PLAYER_PED_ID */ sub_3963(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* F_ISPEDINTRIGGERBOX */ int sub_17265(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* P_START_GAMEPLAY */ void sub_17441()
{
     /* WRITESCRIPTLOG */ sub_503( "NS", "P_START_GAMEPLAY", "###" );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    l_U598 = ADD_SPATIALDATA_COVER_POINT( "cvrBalcony1", -11.26000000, 39.75000000, 21.77000000, -1, 0, 0, 1.00000000, 0, 0 );
     /* P_CLOSEDOOR */ sub_17574( ref g_U1692, 1 );
     /* P_SETDOORLOCKED */ sub_2018( ref g_U1692, 1 );
     /* P_SETDOORMINMAXLIMIT */ sub_2592( ref g_U1699, -100.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_2018( ref g_U1699, 1 );
    AUDIO_MUSIC_FORCE_TRACK( "FAVELA_ONE_SONG", "FAV_ONE_3_4_5_6", "", 0.00000000, 0, 0, -1082130432, 0 );
    if (g_U1048 == 12)
    {
         /* TELEPORTPED */ sub_17846(  /* PLAYER_PED_ID */ sub_3963(), g_U1050[12], g_U1174[12] );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1216[12], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1258[12], 1065353216, 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3963() )))
        {
            LOAD_SCENE( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_3963() ) );
        }
        if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_4001() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_4001(), 1, 0 );
        }
    }
     /* P_START_SP_CHALLENGES */ sub_18028();
    return;
}

/* P_CLOSEDOOR */ void sub_17574(int iParam0, int iParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_2048( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_2132( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

/* TELEPORTPED */ void sub_17846(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_START_SP_CHALLENGES */ void sub_18028()
{
     /* WRITESCRIPTLOG */ sub_503( "CCB", "P_START_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_503( "CCB", "Starting the Favela_Compound context...", 0 );
    START_CONTEXT( "Favela_Compound" );
    return;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_18269(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_503( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_503( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_7323( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_18560( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_19037( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_19037( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_19297( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_19037( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_19297( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_19297( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_19037( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_19297( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_19297( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_19297( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_19037( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_19297( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_19297( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_19297( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_19297( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_20877( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_503( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_18560(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_4338( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_503( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_503( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_19037(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_19297(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_20877(int iParam0)
{
     /* WRITE_STRING */ sub_6158( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_20965( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_21042( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_21042( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_21042( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_21211( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_21211( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_21211( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_21211( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_21211( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_21211( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_21211( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_21211( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_21211( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_21211( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_21211( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_21042( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_21211( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_21211( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_21211( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_21042( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_21912( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_21211( iParam0->_fU52 );
     /* WRITE_STRING */ sub_6158( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_21211( iParam0->_fU96 );
     /* WRITE_STRING */ sub_6158( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_21211( iParam0->_fU100 );
     /* WRITE_STRING */ sub_6158( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_21211( iParam0->_fU104 );
     /* WRITE_STRING */ sub_6158( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_21211( iParam0->_fU108 );
     /* WRITE_STRING */ sub_6158( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_21211( iParam0->_fU112 );
     /* WRITE_STRING */ sub_6158( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_21211( iParam0->_fU116 );
     /* WRITE_STRING */ sub_6158( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_21211( iParam0->_fU120 );
     /* WRITE_STRING */ sub_6158( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_21211( iParam0->_fU124 );
     /* WRITE_STRING */ sub_6158( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_21211( iParam0->_fU128 );
     /* WRITE_STRING */ sub_6158( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_21211( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_21211( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_21211( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_20965(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_21042(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_21211(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_21912(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* P_HANDLE_ROCKET_LAUNCH */ void sub_22878()
{
    vector vVar2;

    switch (l_U528)
    {
        case 0: break;
        case 1:
        if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (NOT IS_BULLET_CAMERA_ACTIVE()))
        {
            ENABLE_LAST_MAN_STANDING( 0 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3963() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_4001(), 0, 0 );
                 /* P_AMMO_CHECK */ sub_23040();
            }
            if (NOT (IS_PED_DEAD( l_U345[0] )))
            {
                if (GET_PED_CAN_TRIGGER_BULLET_CAM( l_U345[0] ))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( l_U345[0], 0 );
                }
                if ((GET_NUMBER_OF_FIRES_IN_RANGE( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U345[0] ), 6.00000000 )) > 0)
                {
                    STOP_FIRE_IN_RANGE( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U345[0] ), 6.00000000 );
                }
                if (IS_PED_ON_FIRE( l_U345[0] ))
                {
                    STOP_PED_FIRE( l_U345[0] );
                }
            }
             /* F_GIVEPEDWEAPON */ sub_6549( l_U345[0], -1312131151, 1, 0, 0 );
            l_U528 = 2;
        }
        break;
        case 2:
         /* P_ACTIVATEPED */ sub_23526( l_U345[0] );
        if ((NOT (IS_PED_DEAD( l_U345[0] ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3963() ))))
        {
            REGISTER_TARGET( l_U345[0],  /* PLAYER_PED_ID */ sub_3963() );
            SET_LOCKED_TARGET( l_U345[0],  /* PLAYER_PED_ID */ sub_3963() );
        }
         /* TELEPORTPED */ sub_17846( l_U345[0], 17.18000000, 37.62000000, 24.94000000, 165.00000000 );
        if (NOT (IS_PED_DEAD( l_U345[0] )))
        {
            PED_SET_ACTION_INTENTION( l_U345[0], 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
        }
        if (NOT (IS_PED_DEAD( l_U345[0] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U345[0], 1 );
        }
        DISPLAY_HUD( 0 );
        CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAMPANWAL_25_FR", 1, l_U587, l_U590, 0, 0 );
         /* CREATETIMER */ sub_9558( ref l_U578, 1500, 1, 0 );
         /* STARTTIMER */ sub_9708( ref l_U578 );
         /* TELEPORTPED */ sub_17846(  /* PLAYER_PED_ID */ sub_3963(), 11.54000000, 17.52000000, 24.68000000, -90.00000000 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3963() )))
        {
            CLEAR_PED_TASKS(  /* PLAYER_PED_ID */ sub_3963() );
            PED_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_3963(), "/Global/Player/PlayerLoco" );
        }
        SNAP_PLAYER_TO_COVERPOINT(  /* PLAYER_ID */ sub_4001(), "GenCover", "15F1D7B8_117E8ADF_Corner2", 0 );
        SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_4001(), 1, 0 );
        if (NOT (IS_PED_DEAD( l_U345[0] )))
        {
            CAMERA_POINT_AT_COORD( 12.13000000, 29.71000000, 26.12000000, 0 );
        }
         /* P_ACTION_REPLACEMENT */ sub_24140();
        DO_SCREEN_FADE_IN( 0 );
        l_U528 = 3;
        break;
        case 3:
        if ( /* ISTIMERDONE */ sub_9841( ref l_U578 ))
        {
            CAMERA_ANIMATED_STOP( 1000, 1 );
            SET_CROSSHAIR_PULSE();
            ENABLE_MPM( 1 );
            ENABLE_ALL_ADRENALINE( 0 );
            if (GET_ADRENALINE_AMT() < 0.10000000)
            {
                SET_ADRENALINE_AMT( 0.10000000 );
            }
            ACTIVATE_BULLET_TIME( 0, 0.26250000, 1 );
            if (NOT (IS_PED_DEAD( l_U345[0] )))
            {
                SET_PED_AIM_LOCKONABLE( l_U345[0], 0 );
                TASK_SHOOT_AT_COORD( l_U345[0], 11.95000000, 17.84000000, 26.36000000, -1, 1566631136, 0, 1 );
            }
             /* CREATETIMER */ sub_9558( ref l_U569, 100, 1, 0 );
             /* STARTTIMER */ sub_9708( ref l_U569 );
            l_U528 = 4;
        }
        break;
        case 4:
        if ( /* ISTIMERDONE */ sub_9841( ref l_U569 ))
        {
            DISPLAY_HUD( 1 );
            CAMERA_CLEAR_POINT_AT_TARGET();
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3963() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_4001(), 1, 0 );
                ENABLE_LAST_MAN_STANDING( 1 );
            }
            l_U528 = 5;
        }
        break;
        case 5:
        if ((IS_EXPLOSION_IN_SPHERE( -1, 10.66000000, 14.00000000, 26.61000000, 2.00000000 )) || (IS_EXPLOSION_IN_SPHERE( -1, 11.95000000, 17.84000000, 26.36000000, 2.00000000 )))
        {
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3963() )))
            {
                SET_PED_HEALTH(  /* PLAYER_PED_ID */ sub_3963(), 0, 0 );
            }
        }
        if (l_U322 == 1)
        {
            if (IS_BULLET_CAMERA_ACTIVE())
            {
                 /* WRITESCRIPTLOG */ sub_503( "NS", "Player Shot Rocket", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "FAVELA_ONE_SONG", "FAV_ONE_4", "", 0.00000000, 0, 1000, -1082130432, 0 );
                if (NOT (IS_PED_DEAD( l_U345[0] )))
                {
                    SET_PED_HEALTH( l_U345[0], 0, 0 );
                }
                l_U322 = 0;
                g_U774 = 1;
            }
        }
        if ((IS_PED_DEAD( l_U345[0] )) || (IS_EXPLOSION_IN_SPHERE( -1, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_3963() ), 20.00000000 )))
        {
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3963() )))
            {
                if ((IS_PED_DEAD( l_U345[0] )) || (NOT (IS_PED_DEAD( l_U345[0] ))))
                {
                    vVar2 = { /* FNORMALIZEVECTOR */ sub_25063( (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U345[0] ))) - (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_3963() ))) )};
                     /* WRITE_VECTOR */ sub_20965( vVar2 );
                    APPLY_UNIFORMLY_DISTRIBUTED_IMPULSE_TO_RAGDOLL( l_U345[0], vVar2 * 750.00000000 );
                     /* P_KILL_PED */ sub_25218( l_U345[0] );
                }
            }
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U345[0], 1 );
            TASK_DROP_WEAPON( l_U345[0], GET_WEAPON_FROM_HAND( l_U345[0], 0, 0 ) );
            TASK_DROP_WEAPON( l_U345[0], GET_WEAPON_FROM_HAND( l_U345[0], 1, 0 ) );
            REMOVE_ALL_PED_WEAPONS( l_U345[0] );
            TASK_GO_STRAIGHT_TO_COORD( l_U345[0], 7.70000000, 43.74000000, 27.26000000, 3, -1 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_4001(), 0, 0 );
            DEACTIVATE_BULLET_TIME( 0, 0 );
            ENABLE_MPM( 0 );
            ENABLE_ALL_ADRENALINE( 1 );
            l_U528 = 0;
            SET_PED_CONSUMING_AMMO(  /* PLAYER_PED_ID */ sub_3963(), 1 );
        }
        break;
    }
    return;
}

/* P_AMMO_CHECK */ void sub_23040()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;

    uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3963(), 0, 0 );
    uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3963(), 1, 0 );
    uVar4 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_3963(), 0 );
    uVar5 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_3963(), 1 );
    uVar6 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_3963(), 2 );
    if (((GET_WEAPON_AMMO( uVar3 )) <= 0) AND ((GET_WEAPON_AMMO( uVar2 )) <= 0))
    {
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            if ((GET_WEAPON_AMMO( uVar4 )) > 0)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_3963(), uVar4, 0, 1 );
            }
        }
        else if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if ((GET_WEAPON_AMMO( uVar5 )) > 0)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_3963(), uVar5, 0, 1 );
            }
        }
        else if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            if ((GET_WEAPON_AMMO( uVar6 )) > 0)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_3963(), uVar6, 0, 1 );
            }
        };;;
    }
    return;
}

/* P_ACTIVATEPED */ void sub_23526(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

/* P_ACTION_REPLACEMENT */ void sub_24140()
{
    int I;

     /* WRITESCRIPTLOG */ sub_503( "NS", "P_ACTION_REPLACEMENTS", 0 );
     /* P_ACTIVATEPEDARRAY */ sub_24212( ref l_U348 );
    for ( I = 0; I < 3; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U348[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U348[I], 0 );
            TASK_COMBAT_PED( l_U348[I],  /* PLAYER_PED_ID */ sub_3963() );
        }
    }
    return;
}

/* P_ACTIVATEPEDARRAY */ void sub_24212(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_ACTIVATEPED */ sub_23526( (uParam0^)[I] );
    }
    return;
}

/* FNORMALIZEVECTOR */ void sub_25063(unknown uParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown Result;
    unknown uVar7;
    unknown uVar8;

    uVar5 = SQRT( ((uParam0._fU0 * uParam0._fU0) + (uParam0._fU4 * uParam0._fU4)) + (uParam0._fU8 * uParam0._fU8) );
    Result._fU0 = uParam0._fU0 / uVar5;
    Result._fU4 = uParam0._fU4 / uVar5;
    Result._fU8 = uParam0._fU8 / uVar5;
    return Result;
}

/* P_KILL_PED */ void sub_25218(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_25546(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_17265(  /* PLAYER_PED_ID */ sub_3963(), uParam0 );
}

/* P_UNLOAD_GAMEPLAY_ASSETS */ void sub_25882()
{
     /* WRITESCRIPTLOG */ sub_503( "SA", "P_UNLOAD_ASSETS", "###" );
     /* UNLOADMODEL */ sub_11758( -2138428787 );
     /* UNLOADMODEL */ sub_11758( 973577609 );
     /* UNLOADWEAPON */ sub_11711( 1545805694 );
     /* UNLOADWEAPON */ sub_11711( -1312131151 );
     /* UNLOADANIMDICT */ sub_26004( "EXPL_CAM" );
    ISEQ_TERMINATE( -1613942561 );
     /* UNLOADANIMDICT */ sub_26004( "npc_pstl_cover_grenade" );
     /* UNLOADANIMDICT */ sub_26004( "npc_rifle_cover_grenade" );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U111._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U279._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U132._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U153._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U174._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U195._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U216._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U237._fU0 );
    return;
}

/* UNLOADANIMDICT */ void sub_26004(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

/* F_HAS_07_05_PRELOADED */ int sub_26347()
{
    if ((HAS_CUTSCENE_LOADED()) AND ((HAS_WEAPON_LOADED( -1464892298 )) AND ((HAS_MODEL_LOADED( 1917029888 )) AND ((HAS_MODEL_LOADED( -693003798 )) AND ((HAS_MODEL_LOADED( 1437984777 )) AND ((HAS_MODEL_LOADED( 1286278693 )) AND (HAS_MODEL_LOADED( -389601559 ))))))))
    {
        return 1;
    }
    return 0;
}

/* P_HANDLE_07_05_PEDS */ void sub_26489()
{
     /* WRITESCRIPTLOG */ sub_503( "NS", "P_HANDLE_07_05_PEDS", 0 );
     /* CLEANPED */ sub_11140( l_U392 );
     /* CLEANPED */ sub_11140( l_U406 );
     /* CLEANPED */ sub_11140( l_U420 );
     /* CLEANPED */ sub_11140( l_U435 );
     /* CLEANPEDARRAY */ sub_11090( ref l_U449 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_1646( ref l_U421, 20.30000000, 62.86000000, 38.37000000, 0.00000000, -1867296666, 7, 3, 2, 0, 0 );
    l_U420 =  /* CREATEPED */ sub_14464( ref l_U421 );
    l_U434 =  /* F_GIVEPEDWEAPON */ sub_6549( l_U420, -1464892298, 25000, 0, 1 );
     /* P_DEACTIVATEPED */ sub_17025( l_U420 );
    return;
}

/* P_PRELOAD_MODEL_07_05 */ void sub_26746(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_503( "NS", "P_PRELOAD_MODEL_07_05", 0 );
     /* LOADSEAMLESSCUTSCENE */ sub_26822( l_U597, uParam0 );
     /* LOADWEAPON */ sub_13481( -1464892298, uParam0 );
     /* LOADMODEL */ sub_13217( 1437984777, uParam0 );
    return;
}

/* LOADSEAMLESSCUTSCENE */ void sub_26822(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* P_HANDLE_CUTSCENE_07_05_FAV1 */ void sub_27206()
{
    unknown uVar2;

    switch (l_U599)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_503( "NS", "C07_05_INIT", 0 );
        g_U773 = 0;
        g_U784 = 1;
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3963() )))
        {
            if ((GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_3963() )) == 1)
            {
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_3963(), 0 );
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_4001(), 0, 0 );
                REMOVE_ALL_PED_WEAPONS(  /* PLAYER_PED_ID */ sub_3963() );
            }
        }
         /* F_GIVEPEDWEAPON */ sub_6549(  /* PLAYER_PED_ID */ sub_3963(), -1464892298, 25000, 0, 1 );
         /* P_CLEAN_ENEMIES */ sub_11058();
        CLEAR_AREA( 10.73972000, 26.06575000, 27.63204000, 2000.00000000, 1 );
         /* UNLOADWEAPON */ sub_11711( 1545805694 );
         /* UNLOADWEAPON */ sub_11711( -1312131151 );
         /* UNLOADMODEL */ sub_11758( -2138428787 );
         /* UNLOADWEAPON */ sub_11711( g_U1817 );
         /* UNLOADWEAPON */ sub_11711( g_U1818 );
         /* UNLOADWEAPON */ sub_11711( g_U1820 );
         /* UNLOADWEAPON */ sub_11711( g_U1821 );
         /* P_PRELOAD_MODEL_07_05 */ sub_26746( 1 );
        if (l_U323 == 1)
        {
             /* P_HANDLE_07_05_PEDS */ sub_26489();
        }
        if (NOT (IS_PED_DEAD( l_U420 )))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U420, "Sero_Unif_2", 0 );
        }
        if (GET_DOES_WEAPON_EXIST( l_U434 ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U434, "W_PI_GLK18_AA_H", 0 );
        }
        if (NOT (IS_PED_DEAD( l_U392 )))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U392, "Marc_Fav", 0 );
        }
        if (NOT (IS_PED_DEAD( l_U406 )))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U406, "Fabi_Fav_1", 0 );
        }
        if (NOT (IS_PED_DEAD( l_U435 )))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U435, "Giov_Fav", 0 );
        }
        if (NOT (IS_PED_DEAD( l_U449[0] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U449[0], 1 );
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U449[0], "M_F1_GCS_B", 0 );
        }
        if (NOT (IS_PED_DEAD( l_U449[1] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U449[1], 1 );
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U449[1], "M_F1_GCS_B^1", 0 );
        }
        if (NOT (IS_PED_DEAD( l_U449[2] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U449[2], 1 );
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U449[2], "M_F1_GCS_B^2", 0 );
        }
        if (NOT (IS_PED_DEAD( l_U449[3] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U449[3], 1 );
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U449[3], "M_F1_GCS_B^3", 0 );
        }
        REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "Marc_Fav", -597795599 );
        REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "Fabi_Fav_1", 388293314 );
        REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "Giov_Fav", 912230522 );
        REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_F1_GCS_B", -2144750793 );
        REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_F1_GCS_B^1", 61752952 );
        REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_F1_GCS_B^2", 1961140230 );
        REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_F1_GCS_B^3", -719189055 );
         /* P_SET_TWO_HANDED_WEAPON_VISIBLE */ sub_28234( l_U507, 0 );
        uVar2 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_28366();
        if (((GET_DOES_WEAPON_EXIST( uVar2 )) == 1) AND ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3963() )) == 0))
        {
            if ((GET_WEAPON_TYPE( uVar2 )) == g_U1818)
            {
                SET_WEAPON_VISIBLE( uVar2, 0 );
            }
            else
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_3963(), uVar2, 0, 1 );
                REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_PI_CLT1911_AA_H", 0 );
            }
        }
        REGISTER_HIDE_ENTITY_AT_POSITION( g_U1342._fU0, g_U1342._fU4 );
        REGISTER_HIDE_ENTITY_AT_POSITION( g_U1685._fU0, g_U1685._fU4 );
        CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        CUTSCENE_ENABLE_SKIP( 0 );
        CUTSCENE_REGISTER_SWITCH_TO_LEVEL_NAME( "s_cemet" );
        DISABLE_FADE_BETWEEN_SP_LEVELS();
        AUD_ENABLE_PRE_BINK_SHUTDOWN( 1 );
        START_SEAMLESS_CUTSCENE();
        l_U599 = 1;
        break;
        case 1:
        DISPLAY_HUD( 0 );
        if (IS_SCREEN_FADED_OUT())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        SET_OBJECT_VISIBLE( DOOR_FIND_CLOSEST( g_U1720._fU0, g_U1720._fU4 ), 0 );
        SET_OBJECT_VISIBLE( DOOR_FIND_CLOSEST( g_U1713._fU0, g_U1713._fU4 ), 0 );
        l_U599 = 2;
        break;
        case 2:
        if ((WAS_CUTSCENE_SKIPPED() == 1) || (HAS_CUTSCENE_FINISHED()))
        {
             /* WRITESCRIPTLOG */ sub_503( "NS", "C07_05_PLAYING", 0 );
            if (GET_DOES_WEAPON_EXIST( l_U600 ))
            {
                SET_WEAPON_VISIBLE( l_U600, 1 );
            }
             /* P_SET_TWO_HANDED_WEAPON_VISIBLE */ sub_28234( l_U507, 1 );
            l_U599 = 3;
        }
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_503( "NS", "C07_05_CLEANUP", 0 );
        l_U599 = 4;
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_503( "NS", "C07_05_FINISHED", 0 );
        l_U591 = 1;
        break;
    }
    return;
}

/* P_SET_TWO_HANDED_WEAPON_VISIBLE */ void sub_28234(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;

    uVar21 = uParam0._fU24._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar21, uParam18 );
    }
    uVar22 = uParam0._fU60._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar22, uParam18 );
    }
    return;
}

/* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ int sub_28366()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3963() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3963(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_28470( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3963(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_3963(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_3963(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

/* IS_WEAPON_SINGLE_HANDED */ int sub_28470(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* F_ASSIGN_BULLET_CAM */ int sub_29340()
{
    unknown uVar2;

    uVar2 =  /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_29376( ref l_U348 );
    if (NOT (IS_PED_DEAD( uVar2 )))
    {
         /* WRITESCRIPTLOG */ sub_503( "NS", "set ped to have a bullet cam", 0 );
        CLEAR_PED_TASKS( uVar2 );
        SET_PED_COMBAT_ATTRIBUTES( uVar2, 1, 0 );
        return 1;
    }
    return 0;
}

/* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ void sub_29376(unknown uParam0)
{
    int I;

    if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_29429( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

/* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ void sub_29429(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

/* P_UNLOAD_ALL_ASSETS */ void sub_29786()
{
     /* P_UNLOAD_GAMEPLAY_ASSETS */ sub_25882();
     /* P_UNLOAD_CUTSCENE_ASSETS */ sub_11617();
    return;
}


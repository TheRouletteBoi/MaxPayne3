void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    StrCopy( ref l_U39, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U47, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U58 = 0;
    l_U60 = 0;
    l_U61 = 0;
    l_U62 = 1500;
    l_U108 = 0;
    l_U109 = 0;
    l_U110 = 1;
    l_U111 = 0;
    l_U485 = {83.11300000, -205.83500000, -8.57300000};
    l_U488 = 180.00000000;
    l_U490 = {83.52000000, -206.71000000, -8.38000000};
    l_U493 = {0.00000000, 0.00000000, 180.00000000};
    l_U497 = {82.53000000, -206.72000000, -8.38000000};
    l_U500 = {-3.00000000, 0.00000000, 180.00000000};
    l_U503 = 1;
    l_U504 = 2051896956;
    l_U505 = 1826773926;
    l_U521 = 0;
    l_U522 = 0;
    l_U666 = 2000;
    l_U676 = 1000;
    l_U687 = 0;
    l_U688 = 0;
    l_U689 = 1;
    l_U690 = 0;
    l_U756 = {76.36600000, -213.76200000, -8.95100000};
    l_U759 = 3.94700000;
    l_U761 = {75.74800000, -212.82900000, -8.79000000};
    l_U764 = {-2.00000000, 0.00000000, 0.00000000};
    l_U768 = {76.74700000, -212.79200000, -8.79000000};
    l_U771 = {-5.00000000, 0.00000000, 0.00000000};
    l_U775 = 0;
    l_U776 = 0;
    l_U777 = 0;
    l_U778 = 0;
    l_U779 = 0;
    l_U780 = 0;
    l_U781 = 0;
    l_U796 = {105.60000000, -189.56000000, -3.84300000};
    l_U799 = 149.72000000;
    l_U801 = {105.67000000, -190.50000000, -3.70000000};
    l_U804 = {0.00000000, 0.00000000, -70.00000000};
    l_U808 = {104.76000000, -190.12000000, -3.70000000};
    l_U811 = {2.00000000, 0.00000000, 0.00000000};
    l_U814 = 2051896956;
    l_U815 = 1826773926;
    l_U1044 = {98.00000000, -202.15000000, -9.04000000};
    l_U1047 = 30.00000000;
    l_U1048 = 450;
     /* WRITESCRIPTLOG */ sub_928( "SA", "Script fav1_lowerFavela.sc is starting...", "###" );
    g_U776 = 0;
    while (NOT g_U776)
    {
         /* P_HANDLE_CHECKPOINTS */ sub_1063();
         /* P_HANDLE_EVENTS */ sub_9511();
        WAIT( 0 );
    }
     /* P_CLEANUP_ALL */ sub_3552();
     /* P_UNLOAD_ASSETS */ sub_38122();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_fav1_lowerFavela" );
     /* WRITESCRIPTLOG */ sub_928( "SA", "Script fav1_lowerFavela.sc is terminating...", "###" );
    return;
}

/* WRITESCRIPTLOG */ void sub_928(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_HANDLE_CHECKPOINTS */ void sub_1063()
{
    if (g_U1049 == 2)
    {
        switch (l_U111)
        {
            case 0:
            if ( /* RESTARTING_CHECKPOINT */ sub_1168())
            {
                g_U786 = 1;
            }
            if ((g_U786) || ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1464() )) == 1))
            {
                l_U111 = 1;
                 /* WRITESCRIPTLOG */ sub_928( "NS", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if ( /* IS_RESTART_ACTIVE */ sub_1805())
            {
                l_U111 = 2;
                 /* WRITESCRIPTLOG */ sub_928( "NS", "eFailState = FAIL_WAITING_FOR_PLAYER_RESPAWN", 0 );
            }
            else if (( /* F_CHECK_QUIT_RETRY */ sub_1923( 0 )) == 1)
            {
                l_U111 = 2;
                 /* WRITESCRIPTLOG */ sub_928( "NS", "eFailState = FAIL_WAITING_FOR_PLAYER_RESPAWN", 0 );
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1464() )))
            {
                l_U111 = 3;
                 /* WRITESCRIPTLOG */ sub_928( "NS", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            if ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1502() )) == 0)
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1502(), 0, 0 );
            }
            DO_SCREEN_FADE_OUT( 0 );
             /* P_CLEANUP_ALL */ sub_3552();
            l_U111 = 4;
             /* WRITESCRIPTLOG */ sub_928( "NS", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_4765( ref l_U72,  /* PLAYER_PED_ID */ sub_1464() );
            SET_PLAYER_CAN_USE_FREEFORM_STRIKE( 0 );
            l_U111 = 5;
             /* WRITESCRIPTLOG */ sub_928( "NS", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            l_U109 = 0;
            g_U786 = 0;
            l_U111 = 0;
             /* WRITESCRIPTLOG */ sub_928( "NS", "eCurrentLowerFavState = eStateStartup", 0 );
            break;
        }
    }
    else if (( /* IS_RESTART_ACTIVE */ sub_1805()) || (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1464() )))
    {
        g_U776 = 1;
         /* P_RESET_CHECKPOINT_THREAD */ sub_9441( ref g_U879[2] );
    }
    return;
}

/* RESTARTING_CHECKPOINT */ int sub_1168()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1464() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1464(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1502(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1502(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1464() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1464(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* PLAYER_PED_ID */ int sub_1464()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_1502() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_1502()
{
    return GET_PLAYER_ID();
}

/* IS_RESTART_ACTIVE */ void sub_1805()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_1923(int iParam0)
{
    iParam0 = 1;
    switch (l_U61)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_2005( ref l_U63 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1464() )))
            {
                l_U62 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_2139( ref l_U63, l_U62, 1, 1 );
             /* STARTTIMER */ sub_2289( ref l_U63 );
        }
        if ( /* ISTIMERDONE */ sub_2422( ref l_U63 ))
        {
             /* WRITESCRIPTLOG */ sub_928( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1464() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1502() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1502(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U61 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U61 = 2;
            }
            else
            {
                l_U61 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_928( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_2923();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_928( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_2923();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_2005(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* CREATETIMER */ void sub_2139(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_2289(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* ISTIMERDONE */ int sub_2422(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_2923()
{
     /* WRITESCRIPTLOG */ sub_928( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_2998( ref l_U63 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1502() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1502(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U60 = 0;
    l_U60 = l_U60;
    l_U61 = 0;
    return;
}

/* RESETTIMER */ void sub_2998(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_CLEANUP_ALL */ void sub_3552()
{
     /* WRITESCRIPTLOG */ sub_928( "SA", "P_CLEANUP_ALL", "###" );
     /* RESETTIMER */ sub_2998( ref l_U539 );
     /* RESETTIMER */ sub_2998( ref l_U548 );
     /* RESETTIMER */ sub_2998( ref l_U557 );
     /* RESETTIMER */ sub_2998( ref l_U566 );
     /* RESETTIMER */ sub_2998( ref l_U602 );
     /* RESETTIMER */ sub_2998( ref l_U611 );
     /* RESETTIMER */ sub_2998( ref l_U620 );
     /* RESETTIMER */ sub_2998( ref l_U629 );
     /* RESETTIMER */ sub_2998( ref l_U657 );
     /* RESETTIMER */ sub_2998( ref l_U667 );
     /* RESETTIMER */ sub_2998( ref l_U677 );
    ISEQ_UNREGISTER_ENTITY( 649330900, "CIV" );
    ISEQ_TERMINATE( 649330900 );
    ISEQ_UNREGISTER_ENTITY( -584629941, "CIV" );
    ISEQ_TERMINATE( -584629941 );
    ISEQ_UNREGISTER_ENTITY( 972991311, "CIV" );
    ISEQ_TERMINATE( 972991311 );
    ISEQ_UNREGISTER_ENTITY( -1152700938, "CIV" );
    ISEQ_TERMINATE( -1152700938 );
    ISEQ_UNREGISTER_ENTITY( -230373783, "CIV" );
    ISEQ_TERMINATE( -230373783 );
    ISEQ_UNREGISTER_ENTITY( 2025955124, "MAX" );
    ISEQ_TERMINATE( 2025955124 );
    ISEQ_UNREGISTER_ENTITY( 1989019713, "CIV1" );
    ISEQ_UNREGISTER_ENTITY( 1989019713, "CIV2" );
    ISEQ_TERMINATE( 1989019713 );
    ISEQ_UNREGISTER_ENTITY( 302464821, "CIV2" );
    ISEQ_TERMINATE( 302464821 );
    ISEQ_UNREGISTER_ENTITY( 1844082426, "CIV" );
    ISEQ_TERMINATE( 1844082426 );
    ISEQ_UNREGISTER_ENTITY( 667870969, "CIV" );
    ISEQ_TERMINATE( 667870969 );
    ISEQ_UNREGISTER_ENTITY( 1623547056, "CIV" );
    ISEQ_TERMINATE( 1623547056 );
    ISEQ_UNREGISTER_ENTITY( -181364038, "CIV" );
    ISEQ_TERMINATE( -181364038 );
    ISEQ_UNREGISTER_ENTITY( 335416519, "CIV" );
    ISEQ_TERMINATE( 335416519 );
    ISEQ_UNREGISTER_ENTITY( 3735331, "CIV" );
    ISEQ_UNREGISTER_ENTITY( 649330900, "SHUTTERA" );
    ISEQ_UNREGISTER_ENTITY( 649330900, "SHUTTERB" );
    ISEQ_TERMINATE( 3735331 );
     /* CLEANPED */ sub_4201( l_U782 );
     /* CLEANOBJECT */ sub_4291( l_U800 );
     /* CLEANOBJECT */ sub_4291( l_U807 );
     /* CLEANPED */ sub_4201( l_U471 );
     /* CLEANOBJECT */ sub_4291( l_U489 );
     /* CLEANOBJECT */ sub_4291( l_U496 );
     /* CLEANOBJECT */ sub_4291( l_U691 );
     /* CLEANOBJECT */ sub_4291( l_U692 );
     /* CLEANOBJECT */ sub_4291( l_U693 );
     /* CLEANPED */ sub_4201( l_U742 );
     /* CLEANOBJECT */ sub_4291( l_U760 );
     /* CLEANOBJECT */ sub_4291( l_U767 );
     /* CLEANPED */ sub_4201( l_U1043 );
     /* CLEANPEDARRAY */ sub_4459( ref l_U355 );
     /* CLEANPEDARRAY */ sub_4459( ref l_U427 );
     /* P_STOP_SP_CHALLENGES */ sub_4542();
    return;
}

/* CLEANPED */ void sub_4201(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CLEANOBJECT */ void sub_4291(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* CLEANPEDARRAY */ void sub_4459(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_4201( (uParam0^)[I] );
    }
    return;
}

/* P_STOP_SP_CHALLENGES */ void sub_4542()
{
     /* WRITESCRIPTLOG */ sub_928( "CCB", "P_STOP_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_928( "CCB", "Stopping the Favela_Lower context...", 0 );
    END_CONTEXT( "Favela_Lower" );
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_4765(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_928( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_4984( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_6148( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_6462( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6941( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_6462( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6941( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_6462( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6941( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_7257( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6941( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_7257( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6941( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_7829( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_8031( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1464(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_928( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_4984(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_5046( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_5046(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_6148(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_6462(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_6866( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* WRITE_STRING */ void sub_6866(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_6941(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_7257(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_6866( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_7829(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_8031(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_5046( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_8129( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_8129(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_RESET_CHECKPOINT_THREAD */ void sub_9441(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

/* P_HANDLE_EVENTS */ void sub_9511()
{
    switch (l_U109)
    {
        case 0:
         /* P_SETUP_STATIC_DATA */ sub_9615();
         /* P_INITIALIZE_SCRIPT_DATA */ sub_12471();
         /* P_REQUEST_ASSETS */ sub_13449();
         /* SETUP_SCRIPTED_SPEECH */ sub_14745( "SFV1AUD" );
        if (g_U1049 != 2)
        {
             /* WRITESCRIPTLOG */ sub_928( "NS", "eCurrentLowerFavState = eStateInitCutScene", 0 );
            l_U109 = 2;
        }
        else
        {
             /* P_REQUEST_GAMEPLAY_ASSETS */ sub_14987();
             /* WRITESCRIPTLOG */ sub_928( "NS", "eCurrentLowerFavState = eStateLoadAssets", 0 );
            l_U109 = 1;
        }
        break;
        case 1:
        if (( /* F_HAS_GAMEPLAY_ASSETS_LOADED */ sub_15531()) AND ( /* F_ARE_ASSETS_LOADED */ sub_15260()))
        {
            l_U109 = 4;
             /* WRITESCRIPTLOG */ sub_928( "NS", "eCurrentLowerFavState = sStateBlendOut", 0 );
        }
        break;
        case 2:
        if ( /* F_ARE_ASSETS_LOADED */ sub_15260())
        {
             /* WRITESCRIPTLOG */ sub_928( "NS", "eCurrentLowerFavState = eStateCutScene", 0 );
            l_U109 = 3;
        }
        break;
        case 3:
        if ( /* F_TRIGGER_MID_02 */ sub_15898())
        {
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1216[2], 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1258[2], 1065353216, 0 );
             /* WRITESCRIPTLOG */ sub_928( "NS", "eCurrentLowerFavState = sStateBlendOut", 0 );
            l_U109 = 4;
        }
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_928( "NS", "eCurrentLowerFavState = eStateStartCheckpoint", 0 );
        l_U109 = 5;
        break;
        case 5:
         /* P_START_GAMEPLAY */ sub_21375();
         /* P_CREATE_FILLER_OBJECTS */ sub_27396();
        l_U780 = 1;
        if ((ISEQ_QUERY_STATE( 2025955124, 3 )) == 0)
        {
             /* P_SETUP_CIVS */ sub_16009();
             /* P_CREATE_VIG_00B_L_WINDOW_REACT */ sub_17290();
             /* P_CREATE_00B_WINDOW02 */ sub_18218();
             /* P_SETUP_DOORS */ sub_18599();
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1216[2], 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1258[2], 1065353216, 0 );
             /* P_ACTIVATEPEDARRAY */ sub_19956( ref l_U355 );
             /* TELEPORTPED */ sub_27869(  /* PLAYER_PED_ID */ sub_1464(), g_U1050[2], g_U1174[2] );
            ISEQ_REGISTER_ENTITY( 2025955124, "MAX",  /* PLAYER_PED_ID */ sub_1464(), 0 );
            ISEQ_START( 2025955124 );
            ISEQ_REGISTER_ENTITY( 1989019713, "CIV1", l_U355[3], 0 );
            ISEQ_REGISTER_ENTITY( 1989019713, "CIV2", l_U355[4], 0 );
            ISEQ_START( 1989019713 );
            ISEQ_REGISTER_ENTITY( 1844082426, "CIV", l_U355[2], 0 );
            ISEQ_START( 1844082426 );
            if ((IS_SCREEN_FADED_OUT()) || (IS_DEATH_PANEL_WIPE_ALLOWED()))
            {
                DO_SCREEN_FADE_IN( 0 );
            }
        }
         /* CREATETIMER */ sub_2139( ref l_U667, l_U666, 1, 0 );
         /* STARTTIMER */ sub_2289( ref l_U667 );
        SHAKE_GAMEPLAY_CAM( "HAND_SHAKE", 1065353216 );
        SET_PLAYER_GLOBAL_COMBAT_TIMER_STATE( 0 );
         /* WRITESCRIPTLOG */ sub_928( "NS", "eCurrentLowerFavState = eStateMain", 0 );
        l_U109 = 6;
        break;
        case 6:
         /* P_HANDLE_BLENDOUT */ sub_28232();
        if (l_U503 == 1)
        {
            if ( /* F_HANDLE_VIG_00B_L_WINDOW_REACT */ sub_28479())
            {
                l_U503 = 0;
            }
        }
         /* P_CREATE_HANDLE_LF_DOOR_GUY */ sub_29045();
         /* P_HANDLE_VIG_17 */ sub_29697();
         /* P_HANDLE_00B_WINDOW02 */ sub_31592();
         /* P_CREATE_OOA_CREATE3_WINDOWS */ sub_31892();
         /* P_HANDLE_PED_CLEANUPS */ sub_32396();
         /* P_HANDLE_COURTYARD_GATE */ sub_32958();
         /* P_HANDLE_AUDIO_CUES */ sub_33266();
         /* P_HANDLE_ENEMY_LOADING_AND_UNLOADING */ sub_33306();
         /* P_HANDLE_ENEMY_AI */ sub_33558();
         /* P_HANDLE_ENEMY_GUARD_SPEECH */ sub_36771();
         /* P_HANDLE_SP_CHALLENGES */ sub_37257();
         /* P_HANDLE_WALLA_ZONES */ sub_37723();
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_31313( ref l_U301, 0 ))
        {
             /* P_START_CHECKPOINT_THREAD */ sub_38011( ref g_U879[3] );
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_31313( ref l_U217, 0 ))
        {
            g_U776 = 1;
        }
        break;
        case 7: break;
    }
    return;
}

/* P_SETUP_STATIC_DATA */ void sub_9615()
{
     /* WRITESCRIPTLOG */ sub_928( "SA", "P_SETUP_STATIC_DATA", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9705( ref l_U743, l_U756, l_U759, 1655197024, 4, 1, 1, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9705( ref l_U508, 88.00000000, -211.91500000, -8.92400000, 87.07600000, 1655197024, 4, 1, 1, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9705( ref l_U361[0], 80.30000000, -209.22000000, -9.48000000, 179.00000000, 1655197024, 4, 1, 1, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9705( ref l_U361[1], 180.00000000, -209.74000000, -9.58000000, -110.00000000, -310919919, 4, 1, 1, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9705( ref l_U361[2], 80.12000000, -209.55000000, -9.32000000, -200.00000000, 1349697514, 4, 1, 1, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9705( ref l_U361[3], 84.40000000, -209.50000000, -9.48000000, -2.52001000, -310919919, 4, 1, 1, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9705( ref l_U361[4], 85.36000000, -209.69000000, -9.62000000, -12.22000000, -1737376503, 4, 1, 1, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9705( ref l_U472, l_U485, l_U488, 1655197024, 4, 1, 1, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9705( ref l_U431[0], 87.50000000, -212.27000000, -3.09000000, -150.00000000, -1063678199, 4, 1, 1, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9705( ref l_U431[1], 91.40100000, -197.04900000, -2.97400000, -49.47700000, -1278170878, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9705( ref l_U431[2], 113.27400000, -202.88200000, -4.60400000, 5.00000000, -586184646, 7, 3, 2, 0, 0 );
     /* P_CREATETRIGGERBOX */ sub_10350( ref l_U112, "tbFav1StartGuardEnemies_1", 78.92000000, -209.08000000, -9.73000000, 8.00000000, 8.00000000, 5.00000000, 0.00000000, 0.00000000, -0.29001000, 1 );
     /* P_CREATETRIGGERBOX */ sub_10350( ref l_U133, "tbFav1StartGuardEnemies_2", 98.93000000, -201.97000000, -9.94000000, 5.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 12.63000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_10350( ref l_U154, "tbFav1StartGuardEnemies_3", 97.53000000, -207.41000000, -9.94000000, 5.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 12.63000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_10350( ref l_U196, "TGR_VIG17", 82.64000000, -209.00000000, -9.59000000, 5.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 12.63000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_10350( ref l_U217, "TGR_KILL_LOWERFAV", 84.21000000, -180.01000000, -13.68000000, 20.00000000, 20.00000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_10350( ref l_U238, "tbFav1LockGate", 112.07000000, -193.78000000, -9.43000000, 7.00000000, 8.00000000, 5.00000000, 0.00000000, 0.00000000, 28.65000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_10350( ref l_U259, "tbFav1BeForeLockGate", 98.52000000, -200.80000000, -10.20000000, 21.94000000, 18.72000000, 5.00000000, 0.00000000, 0.00000000, 22.27000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_10350( ref l_U280, "tbFav1BeForeLockGate1", 67.35000000, -210.20000000, -10.20000000, 53.09000000, 20.03000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_10350( ref l_U301, "tbLoadLowerFav2nd", 64.86000000, -210.44000000, -9.73000000, 5.00000000, 13.80000000, 5.00000000, 0.00000000, 0.00000000, 1.23000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_10350( ref l_U175, "TGR_DROP_D1", 108.65000000, -189.10000000, -7.42000000, 12.00000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, -11.22000000, 1 );
     /* P_CREATETETHERBOX */ sub_11224( ref l_U322, "Sewer Roof Tether", 109.90000000, -196.73000000, -4.44000000, 3.44000000, 5.42000000, 3.64000000, 0.00000000, 0.00000000, 15.82000000, 1 );
     /* P_CREATETETHERBOX */ sub_11224( ref l_U323, "thrFav1Guard1", 106.20000000, -190.28000000, -4.44000000, 3.50000000, 4.00000000, 3.64000000, 0.00000000, 0.00000000, 69.67000000, 1 );
     /* P_CREATETETHERBOX */ sub_11224( ref l_U324, "thrFav1Guard2", 112.70000000, -195.12000000, -4.14000000, 3.50000000, 4.00000000, 3.64000000, 0.00000000, 0.00000000, 31.45000000, 1 );
     /* P_CREATEDOORSTRUCT */ sub_11485( ref l_U823, 1731037237, 69.70255000, -205.84480000, -7.50373000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_11554( ref l_U823, 1 );
     /* P_CREATEDOORSTRUCT */ sub_11485( ref l_U830, 1731037237, 75.76485000, -205.14700000, -7.61726000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_11554( ref l_U830, 1 );
     /* P_CREATEDOORSTRUCT */ sub_11485( ref l_U837, 1731037237, 86.87753000, -213.05150000, -7.81917000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_11554( ref l_U837, 1 );
     /* P_CREATEDOORSTRUCT */ sub_11485( ref l_U844, 1731037237, 90.07033000, -206.26510000, -7.89202000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_11554( ref l_U844, 1 );
     /* P_CREATEDOORSTRUCT */ sub_11485( ref l_U851, 1731037237, 93.79403000, -209.95120000, -6.67638000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_11554( ref l_U851, 1 );
     /* P_CREATEDOORSTRUCT */ sub_11485( ref l_U858, 1731037237, 96.64314000, -208.33970000, -6.72520000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_11554( ref l_U858, 1 );
     /* P_CREATEDOORSTRUCT */ sub_11485( ref l_U865, 1731037237, 103.88600000, -207.01470000, -6.56432000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_11554( ref l_U865, 1 );
     /* P_CREATEDOORSTRUCT */ sub_11485( ref l_U872, 1731037237, 110.43630000, -204.72000000, -6.46261000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_11554( ref l_U872, 1 );
     /* P_CREATEDOORSTRUCT */ sub_11485( ref l_U879, 1731037237, 106.68840000, -191.91830000, -6.79917000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_11554( ref l_U879, 1 );
     /* P_CREATEDOORSTRUCT */ sub_11485( ref l_U886, 1731037237, 113.70880000, -200.88200000, -6.57722000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_11554( ref l_U886, 1 );
     /* P_CREATEDOORSTRUCT */ sub_11485( ref l_U532, -1193489045, 87.03015000, -213.00450000, -7.82333000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORAFFECTEDBYBULLETS */ sub_12368( ref l_U532, 0 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_9705(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATETRIGGERBOX */ void sub_10350(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATETETHERBOX */ void sub_11224(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATEDOORSTRUCT */ void sub_11485(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

/* P_SETDOORLOCKED */ void sub_11554(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if (( /* F_DOESDOOREXIST */ sub_11584( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_11668( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_11584(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_11668(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_SETDOORAFFECTEDBYBULLETS */ void sub_12368(int iParam0, unknown uParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_11584( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_11668( iParam0 );
    }
    DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( iParam0->_fU0, iParam0->_fU4 ), uParam1 );
    return;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_12471()
{
     /* WRITESCRIPTLOG */ sub_928( "SA", "INITIALIZE_SCRIPT_DATA", "###" );
    l_U109 = 0;
    l_U110 = 1;
    SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY_WINDY" );
    FREEZE_TIME_OF_DAY( 12, 0 );
    l_U647 = 0;
    l_U648 = 0;
    l_U649 = 0;
    l_U650 = 0;
    l_U651 = 0;
    l_U652 = 0;
    l_U653 = 0;
    l_U654 = 0;
    l_U655 = 0;
    l_U503 = 1;
    l_U686 = 0;
    l_U687 = 1;
    l_U689 = 1;
    l_U690 = 0;
    l_U774 = 0;
    l_U656 = 0;
    l_U780 = 0;
    l_U781 = 0;
    l_U521 = 0;
    l_U522 = 0;
     /* RESETTIMER */ sub_2998( ref l_U523 );
     /* CREATETIMER */ sub_2139( ref l_U557, 1500, 1, 0 );
     /* CREATETIMER */ sub_2139( ref l_U566, 500, 1, 0 );
     /* CREATETIMER */ sub_2139( ref l_U548, 8000, 1, 0 );
     /* CREATETIMER */ sub_2139( ref l_U539, 8000, 1, 0 );
     /* CREATETIMER */ sub_2139( ref l_U611, 6000, 1, 0 );
     /* CREATETIMER */ sub_2139( ref l_U620, 1000, 1, 0 );
     /* CREATETIMER */ sub_2139( ref l_U629, 10000, 1, 0 );
     /* CREATETIMER */ sub_2139( ref l_U657, 15000, 1, 0 );
     /* P_INITIALIZE_SP_CHALLENGES */ sub_12832();
    return;
}

/* P_INITIALIZE_SP_CHALLENGES */ void sub_12832()
{
     /* WRITESCRIPTLOG */ sub_928( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U1029 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( -1552875953 )))
    {
         /* WRITESCRIPTLOG */ sub_928( "CCB", "Creating the KillTheMessenger script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( -1552875953 );
        DISPLAYF( "[CCB] ### The current KillTheMessenger value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( -1552875953 ) );
        if (SCRIPT_VAR_HASH_EXISTS( -1552875953 ))
        {
             /* WRITESCRIPTLOG */ sub_928( "CCB", "The KillTheMessenger script variable was successfully created...", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_928( "CCB", "The KillTheMessenger script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_928( "CCB", "The KillTheMessenger script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( -1552875953, 0 );
        DISPLAYF( "[CCB] ### The current KillTheMessenger value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( -1552875953 ) );
    }
    return;
}

/* P_REQUEST_ASSETS */ void sub_13449()
{
     /* WRITESCRIPTLOG */ sub_928( "SA", "P_REQUEST_ASSETS", 0 );
     /* LOADMODEL */ sub_13514( -2125109598, 0 );
     /* LOADMODEL */ sub_13514( 852552905, 0 );
     /* LOADMODEL */ sub_13514( l_U504, 0 );
     /* LOADMODEL */ sub_13514( l_U505, 0 );
     /* LOADMODEL */ sub_13514( 1652957375, 0 );
    if (g_U1049 != 2)
    {
         /* LOADSEAMLESSCUTSCENE */ sub_13834( "MID_02_FAV1_SEQ", 0 );
    }
     /* LOADANIMDICT */ sub_14197( "LEVEL_S_FAV1_CP_04", 0, 0 );
     /* LOADISEQ */ sub_14369( 2025955124, 0 );
     /* LOADISEQ */ sub_14369( 1989019713, 0 );
     /* LOADISEQ */ sub_14369( 302464821, 0 );
     /* LOADISEQ */ sub_14369( 1844082426, 0 );
     /* LOADISEQ */ sub_14369( 3735331, 0 );
     /* LOADMODEL */ sub_13514( l_U814, 0 );
     /* LOADMODEL */ sub_13514( l_U815, 0 );
    return;
}

/* LOADMODEL */ void sub_13514(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_6866( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADSEAMLESSCUTSCENE */ void sub_13834(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* LOADANIMDICT */ void sub_14197(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an animation dictionary to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADISEQ */ void sub_14369(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                DISPLAYF( "[SP]### Waiting for interactive sequence to be loaded: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_14745(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_14789();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_14789()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* P_REQUEST_GAMEPLAY_ASSETS */ void sub_14987()
{
     /* WRITESCRIPTLOG */ sub_928( "NS", "P_REQUEST_GAMEPLAY_ASSETS()", 0 );
     /* LOADMODEL */ sub_13514( 785337568, 0 );
     /* LOADMODEL */ sub_13514( -2125109598, 0 );
     /* LOADMODEL */ sub_13514( -1193489045, 0 );
     /* LOADISEQ */ sub_14369( 667870969, 0 );
     /* LOADISEQ */ sub_14369( -181364038, 0 );
     /* LOADISEQ */ sub_14369( -584629941, 0 );
     /* LOADISEQ */ sub_14369( 972991311, 0 );
     /* LOADISEQ */ sub_14369( -1152700938, 0 );
     /* LOADISEQ */ sub_14369( -230373783, 0 );
     /* LOADISEQ */ sub_14369( 649330900, 0 );
     /* LOADISEQ */ sub_14369( 335416519, 0 );
    return;
}

/* F_ARE_ASSETS_LOADED */ int sub_15260()
{
     /* WRITESCRIPTLOG */ sub_928( "NS", "F_ARE_ASSETS_LOADED()", 0 );
    if (((ISEQ_QUERY_STATE( 3735331, 2 )) == 1) AND (((ISEQ_QUERY_STATE( 1844082426, 2 )) == 1) AND (((ISEQ_QUERY_STATE( 302464821, 2 )) == 1) AND (((ISEQ_QUERY_STATE( 1989019713, 2 )) == 1) AND (((ISEQ_QUERY_STATE( 2025955124, 2 )) == 1) AND (((HAS_ANIM_DICT_LOADED( "LEVEL_S_FAV1_CP_04", 0 )) == 1) AND (((HAS_MODEL_LOADED( 1652957375 )) == 1) AND (((HAS_MODEL_LOADED( l_U505 )) == 1) AND (((HAS_MODEL_LOADED( l_U504 )) == 1) AND (((HAS_MODEL_LOADED( 852552905 )) == 1) AND ((HAS_MODEL_LOADED( -2125109598 )) == 1)))))))))))
    {
        return 1;
    }
    return 0;
}

/* F_HAS_GAMEPLAY_ASSETS_LOADED */ int sub_15531()
{
    if (((ISEQ_QUERY_STATE( 335416519, 2 )) == 1) AND (((ISEQ_QUERY_STATE( 649330900, 2 )) == 1) AND (((ISEQ_QUERY_STATE( -230373783, 2 )) == 1) AND (((ISEQ_QUERY_STATE( -1152700938, 2 )) == 1) AND (((ISEQ_QUERY_STATE( 972991311, 2 )) == 1) AND (((ISEQ_QUERY_STATE( -584629941, 2 )) == 1) AND (((ISEQ_QUERY_STATE( -181364038, 2 )) == 1) AND (((ISEQ_QUERY_STATE( 667870969, 2 )) == 1) AND ((HAS_MODEL_LOADED( -1193489045 )) AND ((HAS_MODEL_LOADED( -2125109598 )) AND (HAS_MODEL_LOADED( 785337568 ))))))))))))
    {
        return 1;
    }
    return 0;
}

/* F_TRIGGER_MID_02 */ int sub_15898()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    switch (l_U110)
    {
        case 0: break;
        case 1:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_2005( ref l_U1049 )))
        {
            if (g_U780)
            {
                 /* P_SETUP_CIVS */ sub_16009();
                 /* P_CREATE_VIG_00B_L_WINDOW_REACT */ sub_17290();
                 /* P_CREATE_00B_WINDOW02 */ sub_18218();
                 /* P_SETUP_DOORS */ sub_18599();
                 /* WRITESCRIPTLOG */ sub_928( "NS", "eOpeningCutsceneState = CUTSCENE_SETUP", 0 );
                 /* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ sub_19231( 0 );
                 /* CREATETIMER */ sub_2139( ref l_U1049, l_U1048, 1, 0 );
                 /* STARTTIMER */ sub_2289( ref l_U1049 );
            }
        }
        else if ( /* ISTIMERDONE */ sub_2422( ref l_U1049 ))
        {
            l_U110 = 2;
        }
        break;
        case 2:
        DISPLAY_HUD( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1464() )))
        {
             /* P_ACTIVATEPEDARRAY */ sub_19956( ref l_U355 );
             /* P_SET_TWO_HANDED_WEAPON_VISIBLE */ sub_20147( l_U325, 0 );
            CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_1464(), "Global/Player/PlayerRoot/PLAYER_INITIALIZE_LOCO" );
            CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_1464(), g_U1050[2], g_U1174[2] );
            ISEQ_REGISTER_ENTITY( 2025955124, "MAX",  /* PLAYER_PED_ID */ sub_1464(), 0 );
            CUTSCENE_REGISTER_ISEQ( 2025955124 );
            ISEQ_REGISTER_ENTITY( 1989019713, "CIV1", l_U355[3], 0 );
            ISEQ_REGISTER_ENTITY( 1989019713, "CIV2", l_U355[4], 0 );
            CUTSCENE_REGISTER_ISEQ( 1989019713 );
            ISEQ_REGISTER_ENTITY( 302464821, "CIV2", l_U355[1], 0 );
            CUTSCENE_REGISTER_ISEQ( 302464821 );
            ISEQ_REGISTER_ENTITY( 1844082426, "CIV", l_U355[2], 0 );
            CUTSCENE_REGISTER_ISEQ( 1844082426 );
        }
        CUTSCENE_ENABLE_SKIP( 0 );
        START_SEAMLESS_CUTSCENE();
        AUDIO_MUSIC_FORCE_TRACK( "FAVELA_ONE_SONG", "FAV_ONE_1_2", "", 0.00000000, 0, 0, -1082130432, 0 );
         /* WRITESCRIPTLOG */ sub_928( "NS", "eOpeningCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        l_U110 = 3;
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_928( "NS", "eOpeningCutsceneState = CUTSCENE_PLAYING", 0 );
        l_U110 = 4;
        break;
        case 4:
        if (HAS_CUTSCENE_FINISHED() == 1)
        {
             /* P_SET_TWO_HANDED_WEAPON_VISIBLE */ sub_20147( l_U325, 0 );
            CLEAR_NAMED_CUTSCENE( "MID_02_FAV1_SEQ" );
            return 1;
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_928( "SA", "Playing - MID_02_FAV1_SEQ", 0 );
            uVar3 = GET_CUTSCENE_SECTION_PLAYING();
            uVar4 = GET_CUTSCENE_TIME();
            uVar5 = GET_CUTSCENE_TIME_MS();
            PRINTSTRING( "[SA] SECTION: " );
            PRINTINT( uVar3 );
            PRINTSTRING( " Time: " );
            PRINTINT( uVar4 );
            PRINTSTRING( " Time MS: " );
            PRINTINT( uVar5 );
            PRINTNL();
            if (l_U689 == 1)
            {
                 /* P_REQUEST_GAMEPLAY_ASSETS */ sub_14987();
                l_U689 = 0;
            }
            if (l_U690 == 0)
            {
                if ( /* F_HAS_GAMEPLAY_ASSETS_LOADED */ sub_15531())
                {
                     /* WRITESCRIPTLOG */ sub_928( "kja", "Assets Loaded - Allowed to Skip now", 0 );
                    CUTSCENE_ENABLE_SKIP( 1 );
                    l_U690 = 1;
                }
            }
            if (WAS_CUTSCENE_SKIPPED())
            {
                 /* WRITESCRIPTLOG */ sub_928( "CO", "SKIPPED - MID_02_FAV1_SEQ", "******************************" );
                l_U109 = 1;
            }
        }
        break;
    }
    return 0;
}

/* P_SETUP_CIVS */ void sub_16009()
{
    int I;

     /* WRITESCRIPTLOG */ sub_928( "SA", "P_SETUP_CIVS", 0 );
    for ( I = 0; I < 5; I++ )
    {
        if (I > 1)
        {
            l_U355[I] =  /* CREATEPED */ sub_16089( ref l_U361[I] );
            if (NOT (IS_PED_DEAD( l_U355[I] )))
            {
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U355[I], 1 );
                SET_PED_AS_ONE_SHOT_KILL( l_U355[I], 1 );
                SET_COLLISION_BETWEEN_PEDS( l_U355[I], 0 );
                if ((IS_GERMAN_VERSION() == 1) || (IS_JAPANESE_GAME()))
                {
                    SET_PED_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP( l_U355[I], 0, 0 );
                    SET_PED_GORE_FROM_PLAYER( l_U355[I], 0 );
                }
            }
        }
    }
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_16960( ref l_U355, "piCiv" );
     /* P_DEACTIVATEPEDARRAY */ sub_17094( ref l_U355 );
    return;
}

/* CREATEPED */ void sub_16089(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_13514( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_16580( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_16681( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_16580(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_16681(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ void sub_16960(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

/* P_DEACTIVATEPEDARRAY */ void sub_17094(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_DEACTIVATEPED */ sub_17148( (uParam0^)[I] );
    }
    return;
}

/* P_DEACTIVATEPED */ void sub_17148(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

/* P_CREATE_VIG_00B_L_WINDOW_REACT */ void sub_17290()
{
     /* WRITESCRIPTLOG */ sub_928( "NS", "P_CREATE_VIG_00B_L_WINDOW_REACT()", 0 );
     /* CLEANPED */ sub_4201( l_U471 );
    l_U471 =  /* CREATEPED */ sub_16089( ref l_U472 );
     /* CLEANOBJECT */ sub_4291( l_U489 );
    l_U489 =  /* CREATEOBJECT */ sub_17435( l_U504, l_U490, l_U493, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U489 ))
    {
        FREEZE_OBJECT_POSITION( l_U489, 1 );
    }
     /* CLEANOBJECT */ sub_4291( l_U496 );
    l_U496 =  /* CREATEOBJECT */ sub_17435( l_U505, l_U497, l_U500, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U496 ))
    {
        FREEZE_OBJECT_POSITION( l_U496, 1 );
    }
    if ((IS_GERMAN_VERSION() == 1) || (IS_JAPANESE_GAME() == 1))
    {
        SET_PED_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP( l_U471, 0, 0 );
        SET_PED_GORE_FROM_PLAYER( l_U471, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U471 )))
    {
        SET_PED_AS_ONE_SHOT_KILL( l_U471, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U471, 1 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1464() )) == 0)
        {
            SET_PED_PRIMARY_LOOKAT( l_U471,  /* PLAYER_PED_ID */ sub_1464() );
            SET_PED_NAME_DEBUG( l_U471, "pi00bWindowReact__" );
        }
        ISEQ_REGISTER_ENTITY( 649330900, "CIV", l_U471, 0 );
        PLAY_OBJECT_ANIM( l_U489, "VIG_00B_L_FAV1_WINDOW_REACT_01_shutr_Aa", "LEVEL_S_FAV1_CP_04", 0.00000000, 0, 1 );
        PLAY_OBJECT_ANIM( l_U496, "VIG_00B_L_FAV1_WINDOW_REACT_01_shutr_Ab", "LEVEL_S_FAV1_CP_04", 0.00000000, 0, 1 );
        ISEQ_START( 649330900 );
    }
    return;
}

/* CREATEOBJECT */ void sub_17435(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_13514( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* P_CREATE_00B_WINDOW02 */ void sub_18218()
{
     /* WRITESCRIPTLOG */ sub_928( "SA", "P_CREATE_00B_Window02", 0 );
     /* CLEANPED */ sub_4201( l_U742 );
    l_U742 =  /* CREATEPED */ sub_16089( ref l_U743 );
    if (NOT (IS_PED_DEAD( l_U742 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U742, 1 );
        SET_PED_AS_ONE_SHOT_KILL( l_U742, 1 );
        SET_PED_NAME_DEBUG( l_U742, "pi00BWindow02" );
    }
     /* CLEANOBJECT */ sub_4291( l_U760 );
    l_U760 =  /* CREATEOBJECT */ sub_17435( 2051896956, l_U761, l_U764, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U760 ))
    {
        FREEZE_OBJECT_POSITION( l_U760, 1 );
    }
     /* CLEANOBJECT */ sub_4291( l_U767 );
    l_U767 =  /* CREATEOBJECT */ sub_17435( 1826773926, l_U768, l_U771, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U767 ))
    {
        FREEZE_OBJECT_POSITION( l_U767, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U742 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U742, 1 );
        ISEQ_REGISTER_ENTITY( -181364038, "CIV", l_U742, 0 );
        ISEQ_START( -181364038 );
    }
    return;
}

/* P_SETUP_DOORS */ void sub_18599()
{
     /* WRITESCRIPTLOG */ sub_928( "SA", "P_SETUP_DOORS", 0 );
     /* P_SETDOORLOCKED */ sub_11554( ref g_U1496, 1 );
     /* P_SETDOORLOCKED */ sub_11554( ref g_U1503, 1 );
     /* P_SETDOORMINMAXLIMIT */ sub_18686( ref g_U1314, 0.00000000, 85.00000000 );
     /* P_SETDOORMINMAXLIMIT */ sub_18686( ref g_U1321, 0.00000000, 85.00000000 );
     /* P_OPENDOOR */ sub_18935( ref g_U1314, 1, 1, 1065353216 );
     /* P_OPENDOOR */ sub_18935( ref g_U1321, 1, 1, 1065353216 );
    DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U1321._fU0, g_U1321._fU4 ), 0 );
    DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U1314._fU0, g_U1314._fU4 ), 0 );
    return;
}

/* P_SETDOORMINMAXLIMIT */ void sub_18686(int iParam0, float fParam1, float fParam2)
{
    if (( /* F_DOESDOOREXIST */ sub_11584( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_11668( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        PRINTSTRING( "[SP]### Error: Door fMinLimit greater than fMaxLimit (default min:-81.0 max:81.0) ###" );
        PRINTNL();
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

/* P_OPENDOOR */ void sub_18935(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if (( /* F_DOESDOOREXIST */ sub_11584( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_11668( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

/* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ void sub_19231(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1464() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1464(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if ((( /* IS_WEAPON_SINGLE_HANDED */ sub_19354( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_19589();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1464(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

/* IS_WEAPON_SINGLE_HANDED */ int sub_19354(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ int sub_19589()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1464() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1464(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_19354( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1464(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1464(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1464(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

/* P_ACTIVATEPEDARRAY */ void sub_19956(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_ACTIVATEPED */ sub_20008( (uParam0^)[I] );
    }
    return;
}

/* P_ACTIVATEPED */ void sub_20008(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

/* P_SET_TWO_HANDED_WEAPON_VISIBLE */ void sub_20147(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;

    uVar21 = uParam0._fU24._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar21, uParam18 );
    }
    uVar22 = uParam0._fU60._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar22, uParam18 );
    }
    return;
}

/* P_START_GAMEPLAY */ void sub_21375()
{
     /* WRITESCRIPTLOG */ sub_928( "SA", "P_START_GAMEPLAY", "###" );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    AUDIO_MUSIC_FORCE_TRACK( "FAVELA_ONE_SONG", "FAV_ONE_1_2", "", 0.00000000, 0, 0, -1082130432, 0 );
     /* P_OPENDOOR */ sub_18935( ref g_U1489, 0, 1, 0.60000000 );
     /* CREATETIMER */ sub_2139( ref l_U584, 1400, 1, 0 );
     /* STARTTIMER */ sub_2289( ref l_U584 );
     /* CREATETIMER */ sub_2139( ref l_U593, 6200, 1, 0 );
     /* STARTTIMER */ sub_2289( ref l_U593 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1464() )))
    {
        CLEAR_PED_TASKS(  /* PLAYER_PED_ID */ sub_1464() );
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1502(), 0, 0 );
        SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1502(), 1 );
        SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1464(), 0 );
    }
     /* P_LOWER_SETUP_ENEMIES_D1 */ sub_21635();
    DISPLAY_HUD( 0 );
    if (l_U108 == 0)
    {
        if (( /* HAS_SAVEFILE_LOADED */ sub_22279( ref l_U72 )) == 0)
        {
            if (g_U1048 == 2)
            {
                if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1464() )))
                {
                    if (NOT (HAS_PED_GOT_WEAPON(  /* PLAYER_PED_ID */ sub_1464(), g_U1816 )))
                    {
                         /* F_GIVEPEDWEAPON */ sub_7257(  /* PLAYER_PED_ID */ sub_1464(), g_U1816, 200, 0, 1 );
                    }
                }
            }
        }
        l_U108 = 1;
    }
    if ((l_U72._fU0 == 0) || (g_U1049 < 2))
    {
        g_U1049 = 2;
         /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_22639( ref l_U72, g_U1049,  /* PLAYER_PED_ID */ sub_1464(), g_U1050[2], g_U1174[2], g_U1216[2], g_U1258[2], 1 );
    }
     /* P_START_SP_CHALLENGES */ sub_27237();
    return;
}

/* P_LOWER_SETUP_ENEMIES_D1 */ void sub_21635()
{
    int I;

     /* WRITESCRIPTLOG */ sub_928( "SA", "P_LOWER_SETUP_ENEMIES_D1", 0 );
    for ( I = 0; I < 3; I++ )
    {
        l_U427[I] =  /* CREATEPED */ sub_16089( ref l_U431[I] );
        if (NOT (IS_PED_DEAD( l_U427[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U427[I], 1 );
            SET_PED_DIES_WHEN_INJURED( l_U427[I], 1 );
            SET_BULLET_CAM_PREF( l_U427[I], "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", "", 0, 0, 0, 0, 0, 0, 0, 0 );
            switch (I)
            {
                case 0:
                SET_PED_AS_ONE_SHOT_KILL( l_U427[I], 1 );
                ISEQ_REGISTER_ENTITY( 667870969, "CIV", l_U427[I], 0 );
                ISEQ_START( 667870969 );
                break;
                case 1:
                SET_PED_ALERTNESS( l_U427[I], 3 );
                if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1464() )))
                {
                    REGISTER_TARGET( l_U427[I],  /* PLAYER_PED_ID */ sub_1464() );
                }
                 /* F_GIVEPEDWEAPON */ sub_7257( l_U427[I], g_U1817, 25000, 0, 0 );
                 /* P_TETHERPED */ sub_22057( ref l_U323, l_U427[I], 1 );
                break;
                case 2:
                SET_PED_AS_ONE_SHOT_KILL( l_U427[I], 1 );
                 /* F_GIVEPEDWEAPON */ sub_7257( l_U427[I], g_U1820, 25000, 0, 0 );
                 /* P_TETHERPED */ sub_22057( ref l_U324, l_U427[I], 1 );
                break;
            }
        }
    }
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_16960( ref l_U427, "EnemyGuard_" );
    return;
}

/* P_TETHERPED */ void sub_22057(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

/* HAS_SAVEFILE_LOADED */ int sub_22279(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_928( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_4765( uParam0,  /* PLAYER_PED_ID */ sub_1464() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_22639(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_928( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_928( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_8031( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_22930( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_23407( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_23407( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_23667( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_23407( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_23667( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_23667( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_23407( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_23667( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_23667( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_23667( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_23407( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_23667( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_23667( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_23667( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_23667( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_25247( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_928( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_22930(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_5046( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_928( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_928( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_23407(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_23667(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_25247(int iParam0)
{
     /* WRITE_STRING */ sub_6866( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_25335( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_25412( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_25412( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_25412( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_25581( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_25581( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_25581( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_25581( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_25581( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_25581( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_25581( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_25581( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_25581( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_25581( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_25581( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_25412( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_25581( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_25581( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_25581( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_25412( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_26282( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_25581( iParam0->_fU52 );
     /* WRITE_STRING */ sub_6866( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_25581( iParam0->_fU96 );
     /* WRITE_STRING */ sub_6866( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_25581( iParam0->_fU100 );
     /* WRITE_STRING */ sub_6866( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_25581( iParam0->_fU104 );
     /* WRITE_STRING */ sub_6866( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_25581( iParam0->_fU108 );
     /* WRITE_STRING */ sub_6866( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_25581( iParam0->_fU112 );
     /* WRITE_STRING */ sub_6866( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_25581( iParam0->_fU116 );
     /* WRITE_STRING */ sub_6866( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_25581( iParam0->_fU120 );
     /* WRITE_STRING */ sub_6866( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_25581( iParam0->_fU124 );
     /* WRITE_STRING */ sub_6866( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_25581( iParam0->_fU128 );
     /* WRITE_STRING */ sub_6866( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_25581( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_25581( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_25581( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_25335(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_25412(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_25581(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_26282(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* P_START_SP_CHALLENGES */ void sub_27237()
{
     /* WRITESCRIPTLOG */ sub_928( "CCB", "P_START_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_928( "CCB", "Starting the Favela_Lower context...", 0 );
    START_CONTEXT( "Favela_Lower" );
    return;
}

/* P_CREATE_FILLER_OBJECTS */ void sub_27396()
{
     /* WRITESCRIPTLOG */ sub_928( "SA", "P_CREATE_FILLER_OBJECTS", 0 );
     /* CLEANOBJECT */ sub_4291( l_U691 );
    l_U691 =  /* CREATEOBJECT */ sub_17435( l_U504, 52.10280000, -190.79840000, -1.58000000, 0.00000000, 0.00000000, -180.00000000, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U691 ))
    {
        FREEZE_OBJECT_POSITION( l_U691, 1 );
    }
     /* CLEANOBJECT */ sub_4291( l_U692 );
    l_U692 =  /* CREATEOBJECT */ sub_17435( l_U505, 51.13690000, -190.53960000, -1.58000000, 0.00000000, 0.00000000, -180.00000000, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U692 ))
    {
        FREEZE_OBJECT_POSITION( l_U692, 1 );
    }
     /* CLEANOBJECT */ sub_4291( l_U693 );
    l_U693 =  /* CREATEOBJECT */ sub_17435( 1652957375, 64.00000000, -188.22900000, -2.85100000, 0.00000000, 0.00000000, -190.00000000, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U693 ))
    {
        FREEZE_OBJECT_POSITION( l_U693, 1 );
    }
    return;
}

/* TELEPORTPED */ void sub_27869(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_HANDLE_BLENDOUT */ void sub_28232()
{
    if (NOT l_U654)
    {
        if ( /* ISTIMERDONE */ sub_2422( ref l_U667 ))
        {
             /* WRITESCRIPTLOG */ sub_928( "SA", "Resuming control after blendout", 0 );
            if (IS_GAMEPLAY_CAM_SHAKING( "HAND_SHAKE" ))
            {
                STOP_GAMEPLAY_CAM_SHAKING( "HAND_SHAKE", 0 );
            }
            l_U522 = 1;
             /* CREATETIMER */ sub_2139( ref l_U677, l_U676, 1, 0 );
             /* STARTTIMER */ sub_2289( ref l_U677 );
            DISPLAY_HUD( 1 );
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1502(), 1, 0 );
            l_U654 = 1;
        }
    }
    if ( /* ISTIMERDONE */ sub_2422( ref l_U677 ))
    {
        SET_PLAYER_GLOBAL_COMBAT_TIMER_STATE( 1 );
    }
    return;
}

/* F_HANDLE_VIG_00B_L_WINDOW_REACT */ int sub_28479()
{
    if (NOT (IS_PED_DEAD( l_U471 )))
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1464() )))
        {
            if (IS_SPHERE_VISIBLE( 83.04000000, -206.69000000, -7.67000000, 0.50000000, 1 ))
            {
                if (( /* GET_DISTANCE_BETWEEN_PEDS */ sub_28605(  /* PLAYER_PED_ID */ sub_1464(), l_U471, 1 )) < 13.00000000)
                {
                     /* WRITESCRIPTLOG */ sub_928( "NS", "P_HANDLE_VIG_00B_L_WINDOW_REACT()", 0 );
                    PED_SET_ACTION_INTENTION( l_U471, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
                    PLAY_OBJECT_ANIM( l_U489, "VIG_00B_L_FAV1_WINDOW_REACT_01_shutr_Aa", "LEVEL_S_FAV1_CP_04", 0.00000000, 0, 1 );
                    PLAY_OBJECT_ANIM( l_U496, "VIG_00B_L_FAV1_WINDOW_REACT_01_shutr_Ab", "LEVEL_S_FAV1_CP_04", 0.00000000, 0, 1 );
                    return 1;
                }
            }
        }
    }
    return 0;
}

/* GET_DISTANCE_BETWEEN_PEDS */ void sub_28605(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    }
    if (bParam2)
    {
        return VDIST( uVar5, uVar8 );
        break;
    }
    return VDIST( uVar5._fU0, uVar5._fU4, 0, uVar8._fU0, uVar8._fU4, 0 );
}

/* P_CREATE_HANDLE_LF_DOOR_GUY */ void sub_29045()
{
    if (l_U522 == 1)
    {
         /* WRITESCRIPTLOG */ sub_928( "kja", "Create Door for LF", 0 );
         /* CLEANPED */ sub_4201( l_U507 );
        l_U507 =  /* CREATEPED */ sub_16089( ref l_U508 );
        if ((IS_PED_DEAD( l_U507 )) == 0)
        {
            SET_PED_AS_ONE_SHOT_KILL( l_U507, 1 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U507, 1 );
            SET_PED_NAME_DEBUG( l_U507, "piLF_DOOR" );
        }
        l_U506 = DOOR_FIND_CLOSEST( l_U532._fU0, l_U532._fU4 );
        if (DOES_OBJECT_EXIST( l_U506 ))
        {
            FREEZE_OBJECT_POSITION( l_U506, 1 );
        }
        if ((IS_GERMAN_VERSION() == 1) || (IS_JAPANESE_GAME() == 1))
        {
            SET_PED_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP( l_U507, 0, 0 );
            SET_PED_GORE_FROM_PLAYER( l_U507, 0 );
        }
        ISEQ_REGISTER_ENTITY( 335416519, "CIV", l_U507, 0 );
         /* CREATETIMER */ sub_2139( ref l_U523, 15000, 1, 0 );
         /* STARTTIMER */ sub_2289( ref l_U523 );
        l_U522 = 0;
    }
    if (( /* ISTIMERDONE */ sub_2422( ref l_U523 )) == 1)
    {
         /* WRITESCRIPTLOG */ sub_928( "kja", "Timer done for Door for LF", 0 );
        l_U521 = 1;
    }
    if (l_U521 == 1)
    {
         /* WRITESCRIPTLOG */ sub_928( "kja", "ISEQ start for Door for LF", 0 );
        if (NOT (IS_PED_DEAD( l_U507 )))
        {
            ISEQ_START( 335416519 );
        }
        if (DOES_OBJECT_EXIST( l_U506 ))
        {
            PLAY_OBJECT_ANIM( l_U506, "VIG_00B_L_FAV1_DOOR_REACT_DOOR", "LEVEL_S_FAV1_CP_04", 0.00000000, 0, 1 );
        }
         /* CREATETIMER */ sub_2139( ref l_U638, 3000, 1, 0 );
         /* STARTTIMER */ sub_2289( ref l_U638 );
        l_U521 = 0;
    }
    if (( /* ISTIMERDONE */ sub_2422( ref l_U638 )) == 1)
    {
         /* CLEANPED */ sub_4201( l_U507 );
        ISEQ_TERMINATE( 335416519 );
    }
    return;
}

/* P_HANDLE_VIG_17 */ void sub_29697()
{
    if ((( /* F_GETDOOROPENRATIO */ sub_29729( ref g_U1349 )) > -0.05000000) AND (( /* F_GETDOOROPENRATIO */ sub_29729( ref g_U1349 )) < 0.05000000))
    {
         /* P_SETDOORLOCKED */ sub_11554( ref g_U1349, 1 );
         /* CLEANPED */ sub_4201( l_U1043 );
         /* UNLOADMODEL */ sub_29874( 852552905 );
         /* UNLOADMODEL */ sub_29874( -2125109598 );
    }
    if ( /* ISTIMERDONE */ sub_2422( ref l_U703 ))
    {
         /* P_CLOSEDOOR */ sub_30053( ref g_U1349, 0 );
    }
    if ( /* ISTIMERDONE */ sub_2422( ref l_U584 ))
    {
         /* P_CLOSEDOOR */ sub_30053( ref g_U1314, 0 );
         /* P_CLOSEDOOR */ sub_30053( ref g_U1321, 0 );
    }
    if (NOT ( /* F_ISDOORLOCKED */ sub_30230( ref g_U1314 )))
    {
        if ((( /* F_GETDOOROPENRATIO */ sub_29729( ref g_U1314 )) > -0.01000000) AND (( /* F_GETDOOROPENRATIO */ sub_29729( ref g_U1314 )) < 0.01000000))
        {
             /* P_SETDOORLOCKED */ sub_11554( ref g_U1314, 1 );
        }
    }
    if (NOT ( /* F_ISDOORLOCKED */ sub_30230( ref g_U1321 )))
    {
        if ((( /* F_GETDOOROPENRATIO */ sub_29729( ref g_U1321 )) > -0.01000000) AND (( /* F_GETDOOROPENRATIO */ sub_29729( ref g_U1321 )) < 0.01000000))
        {
             /* P_SETDOORLOCKED */ sub_11554( ref g_U1321, 1 );
        }
    }
    if ( /* ISTIMERDONE */ sub_2422( ref l_U593 ))
    {
        ISEQ_UNREGISTER_ENTITY( 1989019713, "CIV" );
        if (NOT (IS_PED_DEAD( l_U355[3] )))
        {
             /* CLEANPED */ sub_4201( l_U355[3] );
        }
        if (NOT (IS_PED_DEAD( l_U355[4] )))
        {
             /* CLEANPED */ sub_4201( l_U355[4] );
        }
         /* TERMINATEISEQ */ sub_30529( 1989019713, 1 );
        ISEQ_UNREGISTER_ENTITY( 1844082426, "CIV" );
        if (NOT (IS_PED_DEAD( l_U355[2] )))
        {
             /* CLEANPED */ sub_4201( l_U355[2] );
        }
         /* TERMINATEISEQ */ sub_30529( 1844082426, 1 );
        ISEQ_UNREGISTER_ENTITY( 302464821, "CIV2" );
        if (NOT (IS_PED_DEAD( l_U355[0] )))
        {
             /* CLEANPED */ sub_4201( l_U355[0] );
        }
        if (NOT (IS_PED_DEAD( l_U355[1] )))
        {
             /* CLEANPED */ sub_4201( l_U355[1] );
        }
         /* TERMINATEISEQ */ sub_30529( 302464821, 1 );
         /* UNLOADMODEL */ sub_29874( -1745537260 );
         /* UNLOADMODEL */ sub_29874( 852552905 );
    }
    if (l_U687)
    {
        l_U687 = 0;
    }
    if (l_U688 == 1)
    {
        ISEQ_UNREGISTER_ENTITY( 1623547056, "CIV" );
        ISEQ_TERMINATE( 1623547056 );
        ISEQ_REQUEST( 1623547056 );
         /* LOADMODEL */ sub_13514( -2125109598, 1 );
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_9705( ref l_U1030, l_U1044, l_U1047, 1655197024, 4, 1, 1, 0, 0 );
         /* CLEANPED */ sub_4201( l_U1043 );
        l_U1043 =  /* CREATEPED */ sub_16089( ref l_U1030 );
        if (NOT (IS_PED_DEAD( l_U1043 )))
        {
            FREEZE_PED_POSITION( l_U1043, 1 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1043, 1 );
        }
        SET_PED_NAME_DEBUG( l_U1043, "piVig17_" );
        ISEQ_REGISTER_ENTITY( 1623547056, "CIV", l_U1043, 0 );
         /* TELEPORTPED */ sub_27869( l_U1043, l_U1044, l_U1047 );
        ISEQ_START( 1623547056 );
        if (NOT (IS_PED_DEAD( l_U1043 )))
        {
            FREEZE_PED_POSITION( l_U1043, 0 );
        }
        l_U688 = 0;
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_31313( ref l_U196, 0 ))
    {
        l_U688 = 1;
         /* P_OPENDOOR */ sub_18935( ref g_U1349, 1, 1, -0.75000000 );
         /* CREATETIMER */ sub_2139( ref l_U694, 8500, 1, 0 );
         /* STARTTIMER */ sub_2289( ref l_U694 );
         /* CREATETIMER */ sub_2139( ref l_U703, 3000, 1, 0 );
         /* STARTTIMER */ sub_2289( ref l_U703 );
    }
    return;
}

/* F_GETDOOROPENRATIO */ void sub_29729(int iParam0)
{
    int iVar3;
    float Result;

    if (( /* F_DOESDOOREXIST */ sub_11584( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_11668( iParam0 );
    }
    iVar3 = 0;
    Result = 0.00000000;
    GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar3, ref Result );
    return Result;
}

/* UNLOADMODEL */ void sub_29874(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
         /* WRITE_STRING */ sub_6866( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

/* P_CLOSEDOOR */ void sub_30053(int iParam0, int iParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_11584( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_11668( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

/* F_ISDOORLOCKED */ void sub_30230(int iParam0)
{
    unknown Result;
    unknown uVar4;

    if (( /* F_DOESDOOREXIST */ sub_11584( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_11668( iParam0 );
    }
    GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref Result, ref uVar4 );
    return Result;
}

/* TERMINATEISEQ */ void sub_30529(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            DISPLAYF( "[SP]### Waiting for interactive sequence to terminate: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_31313(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_31389(  /* PLAYER_PED_ID */ sub_1464(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* F_ISPEDINTRIGGERBOX */ int sub_31389(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* P_HANDLE_00B_WINDOW02 */ void sub_31592()
{
    if (l_U774)
    {
        if (NOT (IS_PED_DEAD( l_U742 )))
        {
             /* TELEPORTPED */ sub_27869( l_U742, l_U743._fU0, l_U743._fU12 );
            PED_SET_ACTION_INTENTION( l_U742, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
            PLAY_OBJECT_ANIM( l_U760, "VIG_00B_L_FAV1_WINDOW_REACT_02_shutr_Aa", "LEVEL_S_FAV1_CP_04", 0.00000000, 0, 1 );
            PLAY_OBJECT_ANIM( l_U767, "VIG_00B_L_FAV1_WINDOW_REACT_02_shutr_Ab", "LEVEL_S_FAV1_CP_04", 0.00000000, 0, 1 );
            l_U774 = 0;
        }
    }
    return;
}

/* P_CREATE_OOA_CREATE3_WINDOWS */ void sub_31892()
{
    if (l_U780 == 1)
    {
         /* CLEANPED */ sub_4201( l_U782 );
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_9705( ref l_U783, l_U796, l_U799, 1655197024, 4, 1, 0, 0, 0 );
        l_U782 =  /* CREATEPED */ sub_16089( ref l_U783 );
        if (NOT (IS_PED_DEAD( l_U782 )))
        {
            if ((IS_GERMAN_VERSION() == 1) || (IS_JAPANESE_GAME()))
            {
                SET_PED_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP( l_U782, 0, 0 );
                SET_PED_GORE_FROM_PLAYER( l_U782, 0 );
            }
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U782, 1 );
            SET_PED_NAME_DEBUG( l_U782, "pi00cWindowReact" );
        }
         /* CLEANOBJECT */ sub_4291( l_U800 );
        l_U800 =  /* CREATEOBJECT */ sub_17435( l_U814, l_U801, l_U804, 0, 1, 0 );
        if (DOES_OBJECT_EXIST( l_U800 ))
        {
            FREEZE_OBJECT_POSITION( l_U800, 1 );
        }
         /* CLEANOBJECT */ sub_4291( l_U807 );
        l_U807 =  /* CREATEOBJECT */ sub_17435( l_U815, l_U808, l_U811, 0, 1, 0 );
        if (DOES_OBJECT_EXIST( l_U807 ))
        {
            FREEZE_OBJECT_POSITION( l_U807, 1 );
        }
        SET_PED_PRIMARY_LOOKAT( l_U782,  /* PLAYER_PED_ID */ sub_1464() );
        ISEQ_REGISTER_ENTITY( 3735331, "CIV", l_U782, 0 );
        ISEQ_REGISTER_ENTITY( 3735331, "SHUTTERA", l_U800, 1 );
        ISEQ_REGISTER_ENTITY( 3735331, "SHUTTERB", l_U807, 1 );
        l_U780 = 0;
    }
    if (l_U781 == 1)
    {
        ISEQ_START( 3735331 );
        l_U781 = 0;
    }
    return;
}

/* P_HANDLE_PED_CLEANUPS */ void sub_32396()
{
    if (NOT (IS_PED_DEAD( l_U355[0] )))
    {
        if (( /* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ sub_32476( l_U355[0], 79.30000000, -215.30000000, -8.96000000 )) < 2)
        {
             /* WRITESCRIPTLOG */ sub_928( "SA", "Cleaning piCiv_0", 0 );
             /* CLEANPED */ sub_4201( l_U355[0] );
        }
    }
    if (NOT (IS_PED_DEAD( l_U355[1] )))
    {
        if (( /* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ sub_32476( l_U355[1], 84.98000000, -203.17000000, -8.87000000 )) < 2)
        {
             /* WRITESCRIPTLOG */ sub_928( "SA", "Cleaning piCiv_1", 0 );
             /* CLEANPED */ sub_4201( l_U355[1] );
        }
    }
    if (NOT (IS_PED_DEAD( l_U355[2] )))
    {
        if (( /* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ sub_32476( l_U355[2], 98.01000000, -192.32000000, -8.72000000 )) < 2)
        {
             /* WRITESCRIPTLOG */ sub_928( "SA", "Cleaning piCiv_2", 0 );
             /* CLEANPED */ sub_4201( l_U355[2] );
        }
    }
    if (NOT (IS_PED_DEAD( l_U427[1] )))
    {
        if (( /* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ sub_32476( l_U427[1], 110.29000000, -190.07000000, -3.97000000 )) < 2)
        {
             /* WRITESCRIPTLOG */ sub_928( "SA", "Cleaning piEnemyGuard_1", 0 );
             /* CLEANPED */ sub_4201( l_U427[1] );
        }
    }
    return;
}

/* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ void sub_32476(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    else
    {
        return -1.00000000;
    }
    return VDIST( uVar6, uParam1 );
}

/* P_HANDLE_COURTYARD_GATE */ void sub_32958()
{
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_31313( ref l_U238, 0 ))
    {
         /* P_CLOSEDOOR */ sub_30053( ref g_U1489, 0 );
        DOOR_FIND_CLOSEST_SET_FORCE_CLOSE( 1804450608, 108.21800000, -196.24400000, -6.40700000, 1, 1 );
        l_U686 = 1;
    }
    if (l_U686)
    {
        if (NOT ( /* F_ISDOORLOCKED */ sub_30230( ref g_U1489 )))
        {
            if ((( /* F_ISPLAYERINTRIGGERBOX */ sub_33119( l_U280 )) == 0) AND ((( /* F_ISPLAYERINTRIGGERBOX */ sub_33119( l_U259 )) == 0) AND ((( /* F_GETDOOROPENRATIO */ sub_29729( ref g_U1489 )) > -0.01000000) AND (( /* F_GETDOOROPENRATIO */ sub_29729( ref g_U1489 )) < 0.01000000))))
            {
                 /* WRITESCRIPTLOG */ sub_928( "SA", "Locking doors dsLowerFavelaGate", 0 );
                 /* P_SETDOORLOCKED */ sub_11554( ref g_U1489, 1 );
                l_U686 = 0;
            }
        }
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_33119(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_31389(  /* PLAYER_PED_ID */ sub_1464(), uParam0 );
}

/* P_HANDLE_AUDIO_CUES */ void sub_33266()
{
    return;
}

/* P_HANDLE_ENEMY_LOADING_AND_UNLOADING */ void sub_33306()
{
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_31313( ref l_U175, 0 ))
    {
         /* P_CLEAN_ENEMIES_D1 */ sub_33370();
    }
    return;
}

/* P_CLEAN_ENEMIES_D1 */ void sub_33370()
{
     /* WRITESCRIPTLOG */ sub_928( "SA", "P_CLEAN_ENEMIES_D1", 0 );
    ISEQ_UNREGISTER_ENTITY( -584629941, "CIV" );
    ISEQ_TERMINATE( -584629941 );
    ISEQ_UNREGISTER_ENTITY( 972991311, "CIV" );
    ISEQ_TERMINATE( 972991311 );
    ISEQ_UNREGISTER_ENTITY( -1152700938, "CIV" );
    ISEQ_TERMINATE( -1152700938 );
     /* CLEANPEDARRAY */ sub_4459( ref l_U427 );
     /* UNLOADMODEL */ sub_29874( 785337568 );
    return;
}

/* P_HANDLE_ENEMY_AI */ void sub_33558()
{
    if (NOT l_U647)
    {
        if ((NOT (IS_PED_DEAD( l_U427[0] ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1464() ))))
        {
            if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_31313( ref l_U112, 0 )) || (HAS_PED_CLEAR_LOS_TO_PED_IN_FRONT(  /* PLAYER_PED_ID */ sub_1464(), l_U427[0] )))
            {
                 /* WRITESCRIPTLOG */ sub_928( "SA", "Loading oneshot - FAV1_OS_9", 0 );
                AUDIO_MUSIC_REQUEST_ONESHOT( "FAV1_OS_9", 0 );
                l_U774 = 1;
                 /* P_TRIGGER_ENEMY_GRD_WV1 */ sub_33738();
                if (NOT IS_MAGDEMO())
                {
                     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_33940( ref l_U732 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_34051( 0,  /* PLAYER_PED_ID */ sub_1464(), "MAX", ref l_U732, 2, 0 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_34051( 1,  /* PLAYER_PED_ID */ sub_1464(), "MAX", ref l_U732, 2, 0 );
                     /* PLAY_SINGLE_SPEECH */ sub_34320( "SFV1_VIG19A", ref l_U732, 8, 1 );
                }
                l_U647 = 1;
            }
        }
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_31313( ref l_U133, 0 ))
    {
         /* P_TRIGGER_ENEMY_GRD_WV2 */ sub_35239();
        l_U656 = 1;
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_31313( ref l_U154, 0 ))
    {
        l_U781 = 1;
         /* P_TRIGGER_ENEMY_GRD_WV3 */ sub_35639();
    }
     /* P_HANDLE_ENEMY_GRD */ sub_35924();
    return;
}

/* P_TRIGGER_ENEMY_GRD_WV1 */ void sub_33738()
{
    int I;

     /* WRITESCRIPTLOG */ sub_928( "SA", "P_TRIGGER_ENEMY_GRD_WV1", 0 );
    for ( I = 0; I < 3; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U427[I] )))
        {
            switch (I)
            {
                case 0:
                PED_SET_ACTION_INTENTION( l_U427[I], 47, 1000, 0, 0, 0 );
                 /* STARTTIMER */ sub_2289( ref l_U611 );
                break;
                default:
            }
        }
    }
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_33940(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_34051(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_34320(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_34365( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_34365(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_34452( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_34452(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_34504( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_35022( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_34504(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_35022(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* P_TRIGGER_ENEMY_GRD_WV2 */ void sub_35239()
{
    int I;

     /* WRITESCRIPTLOG */ sub_928( "SA", "P_TRIGGER_ENEMY_GRD_WV2", 0 );
    for ( I = 0; I < 3; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U427[I] )))
        {
            switch (I)
            {
                case 0:
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U427[I], 1 );
                CLEAR_PED_TASKS( l_U427[I] );
                 /* TELEPORTPED */ sub_27869( l_U427[0], 114.02300000, -202.57300000, -4.61300000, 14.49700000 );
                ISEQ_REGISTER_ENTITY( 972991311, "CIV", l_U427[0], 0 );
                ISEQ_START( 972991311 );
                break;
                case 2:
                 /* STARTTIMER */ sub_2289( ref l_U620 );
                break;
            }
        }
    }
     /* P_TRIGGER_ENEMY_GUARD */ sub_35509();
    return;
}

/* P_TRIGGER_ENEMY_GUARD */ void sub_35509()
{
     /* WRITESCRIPTLOG */ sub_928( "SA", "P_TRIGGER_ENEMY_GUARD", 0 );
     /* STARTTIMER */ sub_2289( ref l_U557 );
     /* STARTTIMER */ sub_2289( ref l_U566 );
    return;
}

/* P_TRIGGER_ENEMY_GRD_WV3 */ void sub_35639()
{
    int I;

     /* WRITESCRIPTLOG */ sub_928( "SA", "P_TRIGGER_ENEMY_GRD_WV3", 0 );
    for ( I = 0; I < 3; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U427[I] )))
        {
            switch (I)
            {
                case 1:
                 /* TELEPORTPED */ sub_27869( l_U427[I], l_U431[I]._fU0, l_U431[I]._fU12 );
                ISEQ_REGISTER_ENTITY( -584629941, "CIV", l_U427[I], 0 );
                ISEQ_START( -584629941 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U427[I], 0 );
                REGISTER_TARGET( l_U427[I],  /* PLAYER_PED_ID */ sub_1464() );
                TASK_COMBAT_PED( l_U427[I],  /* PLAYER_PED_ID */ sub_1464() );
                break;
                default:
            }
        }
    }
    return;
}

/* P_HANDLE_ENEMY_GRD */ void sub_35924()
{
    if (NOT (IS_PED_DEAD( l_U427[0] )))
    {
        if ( /* ISTIMERDONE */ sub_2422( ref l_U611 ))
        {
             /* WRITESCRIPTLOG */ sub_928( "SA", "Teleporting piEnemyGuard[0]", 0 );
            if (NOT (IS_PED_DEAD( l_U427[0] )))
            {
                CLEAR_PED_TASKS( l_U427[0] );
                ISEQ_UNREGISTER_ENTITY( 667870969, "CIV" );
                ISEQ_TERMINATE( 667870969 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U427[0], 1 );
            }
        }
        if (( /* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ sub_32476( l_U427[0], 110.38000000, -187.49000000, -4.10000000 )) < 1.50000000)
        {
             /* WRITESCRIPTLOG */ sub_928( "SA", "Cleaning piEnemyGuard[0]", 0 );
            ISEQ_UNREGISTER_ENTITY( 972991311, "CIV" );
             /* TERMINATEISEQ */ sub_30529( 972991311, 1 );
             /* CLEANPED */ sub_4201( l_U427[0] );
             /* UNLOADANIMDICT */ sub_36255( "LEVEL_S_FAV1_CP_04" );
        }
    }
    if (NOT (IS_PED_DEAD( l_U427[2] )))
    {
        if ( /* ISTIMERDONE */ sub_2422( ref l_U620 ))
        {
             /* WRITESCRIPTLOG */ sub_928( "SA", "Starting piEnemyGuard[2]", 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U427[2], 0 );
            REGISTER_TARGET( l_U427[2],  /* PLAYER_PED_ID */ sub_1464() );
            TASK_COMBAT_PED( l_U427[2],  /* PLAYER_PED_ID */ sub_1464() );
            ISEQ_REGISTER_ENTITY( -1152700938, "CIV", l_U427[2], 0 );
            ISEQ_START( -1152700938 );
             /* STARTTIMER */ sub_2289( ref l_U629 );
        }
        if ( /* ISTIMERDONE */ sub_2422( ref l_U629 ))
        {
             /* WRITESCRIPTLOG */ sub_928( "SA", "Redirecting piEnemyGuard[2]", 0 );
            ISEQ_UNREGISTER_ENTITY( -1152700938, "CIV" );
            ISEQ_TERMINATE( -1152700938 );
            CLEAR_PED_TASKS( l_U427[2] );
            RESET_PED_TETHERING( l_U427[2] );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U427[2], 0 );
            TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( l_U427[2], 106.85000000, -186.72000000, -4.04000000,  /* PLAYER_PED_ID */ sub_1464(), 1, 1092616192, 1101004800, -1082130432, 3 );
        }
        if (( /* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ sub_32476( l_U427[2], 106.85000000, -186.72000000, -4.04000000 )) < 1.50000000)
        {
             /* WRITESCRIPTLOG */ sub_928( "SA", "Cleaning piEnemyGuard[2]", 0 );
             /* CLEANPED */ sub_4201( l_U427[2] );
        }
    }
    return;
}

/* UNLOADANIMDICT */ void sub_36255(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

/* P_HANDLE_ENEMY_GUARD_SPEECH */ void sub_36771()
{
    if ( /* ISTIMERDONE */ sub_2422( ref l_U557 ))
    {
         /* WRITESCRIPTLOG */ sub_928( "SA", "sssVig18A", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_33940( ref l_U712 );
         /* ADD_PED_FOR_SCRIPT_SPEECH_ENUM */ sub_36877( 1, l_U427[0], -1278170878, ref l_U712, 4, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH_ENUM */ sub_36877( 1, l_U427[2], -586184646, ref l_U712, 4, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_34320( "SFV1_VIG18A", ref l_U712, 8, 1 );
    }
    if ( /* ISTIMERDONE */ sub_2422( ref l_U566 ))
    {
         /* WRITESCRIPTLOG */ sub_928( "SA", "sssVig18B", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_33940( ref l_U722 );
         /* ADD_PED_FOR_SCRIPT_SPEECH_ENUM */ sub_36877( 1, l_U427[1], -586184646, ref l_U722, 4, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_34320( "SFV1_VIG18B", ref l_U722, 8, 1 );
    }
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH_ENUM */ void sub_36877(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = uParam2;
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* P_HANDLE_SP_CHALLENGES */ void sub_37257()
{
    switch (l_U1029)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_928( "CCB", "eKillTheMessenger - STATE_CHALLENGE_IDLE", 0 );
        l_U1029 = 1;
        break;
        case 1:
        if (( /* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ sub_32476( l_U427[0], 110.38000000, -187.49000000, -4.10000000 )) < 1.50000000)
        {
             /* WRITESCRIPTLOG */ sub_928( "CCB", "The piEnemyGuard_0 ped got away...", 0 );
             /* WRITESCRIPTLOG */ sub_928( "CCB", "eKillTheMessenger - STATE_CHALLENGE_COMPLETE", 0 );
            l_U1029 = 2;
        }
        else if (IS_PED_DEAD( l_U427[0] ))
        {
             /* WRITESCRIPTLOG */ sub_928( "CCB", "The player killed the messenger ped...", 0 );
            SCRIPT_VAR_HASH_SET_INT( -1552875953, 1 );
             /* WRITESCRIPTLOG */ sub_928( "CCB", "eKillTheMessenger - STATE_CHALLENGE_COMPLETE", 0 );
            l_U1029 = 2;
        }
        break;
        case 2: break;
    }
    return;
}

/* P_HANDLE_WALLA_ZONES */ void sub_37723()
{
    if (l_U656)
    {
        if (( /* F_GET_NUM_DEAD_PEDS_IN_ARRAY */ sub_37770( ref l_U427 )) > 0)
        {
             /* WRITESCRIPTLOG */ sub_928( "SA", "bStartWalla0", 0 );
            ENABLE_WALLA_ZONE( "S_FAV1_WZ_GET_READY_LOWER_FAVELA", 1 );
            l_U656 = 0;
        }
    }
    return;
}

/* F_GET_NUM_DEAD_PEDS_IN_ARRAY */ void sub_37770(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

/* P_START_CHECKPOINT_THREAD */ void sub_38011(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

/* P_UNLOAD_ASSETS */ void sub_38122()
{
     /* WRITESCRIPTLOG */ sub_928( "SA", "P_UNLOAD_ASSETS", 0 );
    RELEASE_SCRIPT_AUDIO_BANK();
     /* UNLOADMODEL */ sub_29874( -2125109598 );
     /* UNLOADMODEL */ sub_29874( 852552905 );
     /* UNLOADMODEL */ sub_29874( 785337568 );
     /* UNLOADMODEL */ sub_29874( l_U504 );
     /* UNLOADMODEL */ sub_29874( l_U505 );
     /* UNLOADANIMDICT */ sub_36255( "LEVEL_S_FAV1_CP_04" );
     /* UNLOADMODEL */ sub_29874( l_U814 );
     /* UNLOADMODEL */ sub_29874( l_U815 );
    return;
}


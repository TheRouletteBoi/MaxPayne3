void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = -1;
    l_U40 = {64536, 64536, 64536};
    l_U62 = 0;
    l_U63 = 0;
    l_U64 = 1500;
    l_U75 = 0;
    l_U128 = 0;
    l_U130 = 1;
    l_U131 = 0;
    l_U180 = 0;
    l_U181 = 0;
    l_U182 = 0;
    l_U223 = {94.00000000, -9.80000000, 9.60000000};
    l_U226 = 90.00000000;
    l_U448 = 0;
    l_U449 = 10.00000000;
    l_U463 = {90.40000000, 14.96000000, 9.62000000};
    l_U466 = 270.00000000;
    l_U1196 = 0;
    l_U1251 = 0;
    l_U1252 = 0;
    l_U1253 = 0;
    l_U1497 = 0;
    l_U1498 = 0;
    l_U1543 = 0;
    l_U1811 = 0;
    l_U1871 = 1.00000000;
    l_U1882 = 0;
    l_U1883 = 2000;
    l_U1957 = {85.25000000, 25.81000000, 9.60000000};
    l_U1960 = 180.00000000;
    l_U1961 = {93.24000000, 3.54000000, 9.64000000};
    l_U1964 = 0.00000000;
    l_U2054 = {30.87078000, 66.10243000, 12.55022000};
    l_U2057 = 349.67400000;
    l_U2058 = {39.86000000, 58.87000000, 13.30000000};
    l_U2088 = 1;
    l_U2089 = 500;
    l_U2090 = 1000;
    l_U2186 = 0;
    l_U2187 = 0;
    l_U2188 = 0;
    l_U2189 = {92.58926000, -9.65747400, 9.60318000};
    l_U2192 = 89.75311000;
    l_U2193 = 0;
    l_U2293 = 0;
    l_U2294 = 0;
    l_U2295 = 0;
    l_U2325 = 0;
    l_U2326 = 0;
    l_U2336 = 0;
    l_U2337 = 0;
    l_U2348 = 0;
    l_U2349 = 0;
    l_U2350 = 0;
    l_U2351 = 0;
    l_U2352 = 0;
    l_U2353 = 0;
    l_U2373 = 0;
    l_U2414 = {86.19653000, 55.85049000, 10.99039000};
    l_U2417 = {-9.01161700, -0.00001100, 165.71690000};
     /* WRITESCRIPTLOG */ sub_822( "SP", "Script stad_concession.sc is starting up...", 0 );
     /* P_CON_POPULATE_VARIABLE_ARRAYS */ sub_940();
    l_U128 = 1;
    l_U75 = 0;
    while (NOT IS_EXITFLAG_SET())
    {
         /* P_HANDLE_FAILURE */ sub_1283();
        if (l_U131 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_17335();
        }
        WAIT( 0 );
    }
     /* P_CLEANUP_CON */ sub_6754( 0 );
     /* P_RELEASE_CON_ASSETS */ sub_104064();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "stad_concession" );
     /* WRITESCRIPTLOG */ sub_822( "SP", "Script stad_concession.sc is terminating...", 0 );
    return;
}

/* WRITESCRIPTLOG */ void sub_822(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_CON_POPULATE_VARIABLE_ARRAYS */ void sub_940()
{
     /* WRITESCRIPTLOG */ sub_822( "GA", "P_CON_POPULATE_VARIABLE_ARRAYS start", 0 );
    l_U113[0] = g_U2390;
    l_U113[1] = -1652775333;
    l_U113[2] = 1816766229;
    l_U113[3] = 1873472982;
    l_U113[4] = -1993976541;
    l_U113[5] = -2096019114;
    l_U113[6] = g_U2382;
    l_U113[7] = g_U2383;
    l_U113[8] = -1601625009;
    l_U113[9] = g_U847;
    l_U124[0] = 1194438308;
    l_U124[1] = 1478009203;
    l_U124[2] = 434544317;
     /* WRITESCRIPTLOG */ sub_822( "GA", "P_CON_POPULATE_VARIABLE_ARRAYS end", 0 );
    return;
}

/* P_HANDLE_FAILURE */ void sub_1283()
{
    if (g_U855 == 6)
    {
        switch (l_U131)
        {
            case 0:
            if (((IS_PED_DEAD( g_U4007 )) AND (DOES_PED_EXIST( g_U4007 ))) || (( /* RESTARTING_CHECKPOINT */ sub_1485()) || (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() ))))
            {
                if (IS_PED_DEAD( g_U4007 ))
                {
                    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
                    RESET_LAST_MAN_STANDING();
                    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() )))
                    {
                        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1384(), 1 );
                    }
                }
                l_U1965._fU164 = 0;
                 /* SB_HANDLESNIPERBEHAVIOUR */ sub_2046( ref l_U1965 );
                l_U131 = 1;
                 /* WRITESCRIPTLOG */ sub_822( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if ( /* IS_RESTART_ACTIVE */ sub_4973())
            {
                l_U131 = 2;
            }
            else if (( /* F_CHECK_QUIT_RETRY */ sub_5033( 0 )) == 1)
            {
                l_U131 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() )))
            {
                if ((g_U888[7]._fU40 != 4) AND (g_U888[7]._fU40 != 0))
                {
                     /* WRITESCRIPTLOG */ sub_822( "CR", "Shutting down script for MCE_BLEACHERS.", 0 );
                     /* P_RESET_CHECKPOINT_THREAD */ sub_6168( ref g_U888[7] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U888[7]._fU32 );
                    g_U3879 = 0;
                }
                l_U131 = 3;
                 /* WRITESCRIPTLOG */ sub_822( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
             /* WRITESCRIPTLOG */ sub_822( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() ))) AND (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1422() ))))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1422(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1384() ))
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1384(), 0 );
                }
                SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1384(), 0 );
            }
            DO_SCREEN_FADE_OUT( 0 );
             /* P_IMAGEFX_STOP_BULLETCAM */ sub_6491( "STAD_PASSOS_CONCESSION_SCRIPTED_FAIL_FX" );
            TERMINATE_GAME_BULLET_CAMERA();
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
             /* P_CLEANUP_CON */ sub_6754( 1 );
             /* P_LOAD_AREA */ sub_11865( 6 );
            STREAM_HELPERS_REQUEST_AT_LOC( 84.59229000, 31.32314000, 9.59993600, 1 );
            l_U131 = 4;
             /* WRITESCRIPTLOG */ sub_822( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
             /* WRITESCRIPTLOG */ sub_822( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            if (l_U77._fU0)
            {
                 /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_12653( ref l_U77,  /* PLAYER_PED_ID */ sub_1384() );
            }
            l_U131 = 5;
             /* WRITESCRIPTLOG */ sub_822( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
             /* WRITESCRIPTLOG */ sub_822( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U128 = 1;
            l_U130 = 0;
            l_U131 = 0;
             /* WRITESCRIPTLOG */ sub_822( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

/* PLAYER_PED_ID */ int sub_1384()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_1422() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_1422()
{
    return GET_PLAYER_ID();
}

/* RESTARTING_CHECKPOINT */ int sub_1485()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1384(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1422(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1422(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1384() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1384(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* SB_HANDLESNIPERBEHAVIOUR */ void sub_2046(int iParam0)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        switch (iParam0->_fU164)
        {
            case 0:
            if (NOT (( /* F_GET_SCRIPT_TASK_STATUS */ sub_2171( iParam0->_fU0, 37 )) == 1))
            {
                iParam0->_fU168 = 0;
                iParam0->_fU176 = 0;
                iParam0->_fU180 = 0;
                iParam0->_fU172 = 0;
                TASK_AIM_GUN_AT_COORD( iParam0->_fU0, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU0 ), -1, 1 );
            }
            break;
            case 1:
            if ((NOT iParam0->_fU216) AND ( /* SB_ISMAXAIMINGATSNIPER */ sub_2332( iParam0 )))
            {
                 /* SB_SNIPERDUCKS */ sub_2468( iParam0 );
            }
            else if (NOT iParam0->_fU168)
            {
                 /* SB_SNIPERFIRES */ sub_3067( iParam0 );
            }
            break;
            case 4:
            if ( /* ISTIMERDONE */ sub_3623( iParam0 + 120 ))
            {
                 /* WRITESCRIPTLOG */ sub_822( "MSWW", "SniperBehaviour: Duck timer done", "###" );
                if ( /* SB_ISMAXAIMINGATSNIPER */ sub_2332( iParam0 ))
                {
                     /* SB_SNIPERDUCKS */ sub_2468( iParam0 );
                }
                else if (iParam0->_fU212)
                {
                     /* SB_SNIPERSEARCHES */ sub_3894( iParam0 );
                }
                else
                {
                     /* SB_SNIPERFIRES */ sub_3067( iParam0 );
                }
            }
            break;
            case 2:
            if ((NOT iParam0->_fU216) AND ( /* SB_ISMAXAIMINGATSNIPER */ sub_2332( iParam0 )))
            {
                 /* SB_SNIPERDUCKS */ sub_2468( iParam0 );
            }
            else if (NOT iParam0->_fU176)
            {
                 /* SB_SNIPERSEARCHES */ sub_3894( iParam0 );
            }
            break;
            case 3:
            if ((NOT iParam0->_fU216) AND ( /* SB_ISMAXAIMINGATSNIPER */ sub_2332( iParam0 )))
            {
                 /* SB_SNIPERDUCKS */ sub_2468( iParam0 );
            }
            else if (NOT iParam0->_fU180)
            {
                 /* SB_SNIPERWARNS */ sub_4281( iParam0 );
            }
            else if (( /* F_GET_SEQUENCE_PROGRESS */ sub_4676( iParam0->_fU0 )) == 3)
            {
                 /* SB_SNIPERWARNS */ sub_4281( iParam0 );
            };;;
            break;
            case 5:
            if (NOT iParam0->_fU184)
            {
                PED_ACTION_TREE_PLAY_NODE( iParam0->_fU0, "/Global/SNIPER_BEHAVIOR/SNIPER3SET_SEQ/STATES/DUCK" );
                iParam0->_fU168 = 0;
                iParam0->_fU176 = 0;
                iParam0->_fU180 = 0;
                iParam0->_fU172 = 0;
                iParam0->_fU184 = 1;
            }
            break;
        }
    }
    return;
}

/* F_GET_SCRIPT_TASK_STATUS */ int sub_2171(unknown uParam0, unknown uParam1)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        return GET_SCRIPT_TASK_STATUS( uParam0, uParam1 );
    }
    return 0;
}

/* SB_ISMAXAIMINGATSNIPER */ int sub_2332(int iParam0)
{
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() ))) AND (NOT (IS_PED_DEAD( iParam0->_fU0 ))))
    {
        if (IS_PED_IN_CROSSHAIR_CYLINDER( iParam0->_fU0, iParam0->_fU196, 1000, iParam0->_fU200, -1082130432 ))
        {
            return 1;
        }
    }
    return 0;
}

/* SB_SNIPERDUCKS */ void sub_2468(int iParam0)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        if ((NOT iParam0->_fU184) AND (NOT iParam0->_fU172))
        {
             /* MAL_WRITESCRIPTLOG */ sub_2550( "Sniper ducks" );
            CLEAR_PED_TASKS( iParam0->_fU0 );
            PED_SET_ACTION_INTENTION( iParam0->_fU0, 47, 1000, g_U649 );
        }
        iParam0->_fU168 = 0;
        iParam0->_fU176 = 0;
        iParam0->_fU180 = 0;
        iParam0->_fU172 = 1;
        iParam0->_fU184 = 0;
         /* CREATETIMER */ sub_2750( iParam0 + 120, iParam0->_fU156, 1, 0 );
         /* STARTTIMER */ sub_2902( iParam0 + 120 );
        iParam0->_fU164 = 4;
    }
    return;
}

/* MAL_WRITESCRIPTLOG */ void sub_2550(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar3, 1537, "MSWW", 1537, uParam0, 1537, "###" );
    return;
}

/* CREATETIMER */ void sub_2750(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_2902(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* SB_SNIPERFIRES */ void sub_3067(int iParam0)
{
    unknown uVar3;

    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() ))) AND (NOT (IS_PED_DEAD( iParam0->_fU0 ))))
    {
        if ((iParam0->_fU184) || (iParam0->_fU172))
        {
            CLEAR_PED_TASKS( iParam0->_fU0 );
            PED_SET_ACTION_INTENTION( iParam0->_fU0, 48, 1000, g_U649 );
        }
         /* MAL_SETLOCKEDANDREGISTEREDONPLAYER */ sub_3186( iParam0 + 0 );
        iParam0->_fU168 = 1;
        iParam0->_fU176 = 0;
        iParam0->_fU180 = 0;
        iParam0->_fU172 = 0;
        iParam0->_fU184 = 0;
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_AIM_GUN_AT_PED( 0,  /* PLAYER_PED_ID */ sub_1384(), iParam0->_fU192, 0 );
        TASK_SHOOT_AT_PED( 0,  /* PLAYER_PED_ID */ sub_1384(), -1, iParam0->_fU208, 0, 0, iParam0->_fU204 );
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( iParam0->_fU0, uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
        iParam0->_fU164 = 1;
    }
    return;
}

/* MAL_SETLOCKEDANDREGISTEREDONPLAYER */ void sub_3186(unknown uParam0)
{
     /* MAL_SETLOCKEDANDREGISTEREDONPED */ sub_3240( uParam0,  /* PLAYER_PED_ID */ sub_1384() );
    return;
}

/* MAL_SETLOCKEDANDREGISTEREDONPED */ void sub_3240(unknown uParam0, unknown uParam1)
{
     /* MAL_REGISTERTARGET */ sub_3288( uParam0, uParam1 );
     /* MAL_SETLOCKEDTARGET */ sub_3370( uParam0, uParam1 );
    return;
}

/* MAL_REGISTERTARGET */ void sub_3288(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETLOCKEDTARGET */ void sub_3370(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* ISTIMERDONE */ int sub_3623(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* SB_SNIPERSEARCHES */ void sub_3894(int iParam0)
{
    unknown uVar3;

    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() ))) AND (NOT (IS_PED_DEAD( iParam0->_fU0 ))))
    {
        if ((iParam0->_fU184) || (iParam0->_fU172))
        {
            CLEAR_PED_TASKS( iParam0->_fU0 );
            PED_SET_ACTION_INTENTION( iParam0->_fU0, 48, 1000, g_U649 );
        }
        iParam0->_fU168 = 0;
        iParam0->_fU176 = 1;
        iParam0->_fU180 = 0;
        iParam0->_fU172 = 0;
        iParam0->_fU184 = 0;
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_AIM_GUN_AT_COORD( 0, iParam0->_fU72, 2000, 0 );
        TASK_AIM_GUN_AT_COORD( 0, iParam0->_fU84, 2000, 0 );
        SET_SEQUENCE_TO_REPEAT( uVar3, 1 );
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( iParam0->_fU0, uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
        iParam0->_fU164 = 2;
    }
    return;
}

/* SB_SNIPERWARNS */ void sub_4281(int iParam0)
{
    float fVar3;
    float fVar4;
    float fVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;

    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() ))) AND (NOT (IS_PED_DEAD( iParam0->_fU0 ))))
    {
        if ((iParam0->_fU184) || (iParam0->_fU172))
        {
            CLEAR_PED_TASKS( iParam0->_fU0 );
            PED_SET_ACTION_INTENTION( iParam0->_fU0, 48, 1000, g_U649 );
        }
        iParam0->_fU168 = 0;
        iParam0->_fU176 = 0;
        iParam0->_fU180 = 1;
        iParam0->_fU172 = 0;
        iParam0->_fU184 = 0;
        fVar3 = (GET_RANDOM_FLOAT_IN_RANGE( -0.50000000, 0.50000000 )) + (ref iParam0->_fU96->_fU0);
        fVar4 = (GET_RANDOM_FLOAT_IN_RANGE( -0.50000000, 0.50000000 )) + (ref iParam0->_fU96->_fU4);
        fVar5 = (GET_RANDOM_FLOAT_IN_RANGE( -0.50000000, 0.50000000 )) + (ref iParam0->_fU96->_fU8);
        uVar6 = {fVar3, fVar4, ref iParam0->_fU96->_fU8};
        OPEN_SEQUENCE_TASK( ref uVar9 );
        TASK_AIM_GUN_AT_COORD( 0, uVar6, 3000, 1 );
        TASK_SHOOT_AT_COORD( 0, uVar6, 1000, 1566631136, 0, 0 );
        TASK_AIM_GUN_AT_COORD( 0, uVar6, 1000, 0 );
        TASK_AIM_GUN_AT_COORD( 0, uVar6, -1, 0 );
        CLOSE_SEQUENCE_TASK( uVar9 );
        TASK_PERFORM_SEQUENCE( iParam0->_fU0, uVar9 );
        CLEAR_SEQUENCE_TASK( uVar9 );
        iParam0->_fU164 = 3;
    }
    return;
}

/* F_GET_SEQUENCE_PROGRESS */ int sub_4676(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        return GET_SEQUENCE_PROGRESS( uParam0 );
    }
    return -1;
}

/* IS_RESTART_ACTIVE */ void sub_4973()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_5033(int iParam0)
{
    iParam0 = 1;
    switch (l_U63)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_5115( ref l_U65 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() )))
            {
                l_U64 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_2750( ref l_U65, l_U64, 1, 1 );
             /* STARTTIMER */ sub_2902( ref l_U65 );
        }
        if ( /* ISTIMERDONE */ sub_3623( ref l_U65 ))
        {
             /* WRITESCRIPTLOG */ sub_822( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1422() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1422(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U63 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U63 = 2;
            }
            else
            {
                l_U63 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_822( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_5598();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_822( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_5598();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_5115(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_5598()
{
     /* WRITESCRIPTLOG */ sub_822( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_5673( ref l_U65 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1422() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1422(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U62 = 0;
    l_U62 = l_U62;
    l_U63 = 0;
    return;
}

/* RESETTIMER */ void sub_5673(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_RESET_CHECKPOINT_THREAD */ void sub_6168(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

/* P_IMAGEFX_STOP_BULLETCAM */ void sub_6491(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_822( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
     /* CLEANCAMERA */ sub_6601( ref l_U76 );
    l_U75 = 1;
    return;
}

/* CLEANCAMERA */ void sub_6601(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

/* P_CLEANUP_CON */ void sub_6754(boolean bParam0)
{
     /* WRITESCRIPTLOG */ sub_822( "GA", "P_CLEANUP_CON start", 0 );
     /* TERMINATEISEQ */ sub_6819( -263036009, 0 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7129( -263036009, ref g_U1263 );
     /* TERMINATEISEQ */ sub_6819( -1310389432, 0 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7129( -1310389432, ref g_U1263 );
     /* TERMINATEISEQ */ sub_6819( 727272178, 0 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7129( 727272178, ref g_U1263 );
     /* TERMINATEISEQ */ sub_6819( -647680815, 0 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7129( -647680815, ref g_U1263 );
     /* TERMINATEISEQ */ sub_6819( -813779471, 0 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7129( -813779471, ref g_U1263 );
     /* TERMINATEISEQ */ sub_6819( -1414847258, 0 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7129( -1414847258, ref g_U1263 );
     /* TERMINATEISEQ */ sub_6819( 1812693303, 0 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7129( 1812693303, ref g_U1263 );
     /* TERMINATEISEQ */ sub_6819( 1154908660, 0 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7129( 1154908660, ref g_U1263 );
     /* P_STREAMREQ_SCRIPT_STREAM_STOP */ sub_8403( "MID_04B_STAD_CON_RUN_BLENDOUT", ref g_U2034 );
     /* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ sub_9204( "MID_04B_STAD_CON_RUN_BLENDOUT", ref g_U2034 );
    if ((CUTSCENE_NAMED_IS_LOADING( "MID_04B_STADIUM" )) || (CUTSCENE_IS_LOADED( "MID_04B_STADIUM" )))
    {
        CLEAR_NAMED_CUTSCENE( "MID_04B_STADIUM" );
    }
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() )))
    {
        SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1384(), 0 );
    }
     /* CLEANPLACEMENTARRAY */ sub_9665( ref l_U441 );
     /* CLEANPLACEMENTARRAY */ sub_9665( ref l_U445 );
     /* CLEANPED */ sub_9813( g_U4007 );
     /* CLEANPED */ sub_9813( l_U467 );
     /* CLEANPED */ sub_9813( g_U4186 );
     /* CLEANPEDARRAY */ sub_9922( ref g_U4187 );
    if (NOT bParam0)
    {
         /* MAL_ESA_CLEAN */ sub_10008( ref g_U4008 );
         /* MAL_ESA_CLEAN */ sub_10008( ref g_U4141 );
    }
     /* CLEANPED */ sub_9813( l_U2040 );
     /* MAL_ES_CLEAN */ sub_10056( ref l_U1207 );
     /* MAL_ESA_CLEAN */ sub_10008( ref l_U1013 );
     /* MAL_ESA_CLEAN */ sub_10008( ref l_U1270 );
     /* MAL_ES_CLEAN */ sub_10056( ref l_U1499 );
     /* SB_DESTROYSNIPER */ sub_10185( ref l_U1965 );
     /* CLEANOBJECT */ sub_10490( l_U2206 );
     /* P_ENABLE_POI */ sub_10549( ref l_U2207, 0 );
     /* P_STOP_SP_CHALLENGES */ sub_11554( bParam0 );
     /* CLEANPLACEMENT */ sub_9720( g_U4191 );
    SET_PED_HAS_SPECIAL_GUN_SOUND( g_U4007, 0 );
     /* WRITESCRIPTLOG */ sub_822( "GA", "P_CLEANUP_CON end", 0 );
    return;
}

/* TERMINATEISEQ */ void sub_6819(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            DISPLAYF( "[SP]### Waiting for interactive sequence to terminate: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_STREAMREQ_ISEQ_REMOVE */ void sub_7129(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_7267( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a ISEQ asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ int sub_7267(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if ((uParam1^)[I] == iParam0)
            {
                DISPLAYF( "[CCB] ### The THREADID index matches the asset requested for removal: {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
            else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID index is in use and is active: {} ###", 1, 513, (uParam1^)[I] );
                Result = I;
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is in use, but is no longer active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

/* P_STREAMREQ_SCRIPT_STREAM_STOP */ void sub_8403(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if ( /* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ sub_8453( uParam0, uParam1 ))
    {
        iVar4 =  /* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ sub_8662( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            DISPLAYF( "[CCB]### Stopping the SCRIPT_STREAM: {} ###", 1, 1281, ref (uParam1^)[iVar4]._fU0 );
            STOP_SCRIPT_STREAM( iVar4 );
        }
        else
        {
            DISPLAYF( "[CCB]### The SCRIPT_STREAM slot is NOT valid!!! {} ###", 1, 1537, uParam0 );
            SCRIPT_ASSERT( "Attempting to stop a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        DISPLAYF( "[CCB]### The SCRIPT_STREAM asset is NOT loaded!!! {} ###", 1, 1537, uParam0 );
        DISPLAYF( "Attempting to stop a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ int sub_8453(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB]### The SCRIPT_STREAM is loaded: {} ###", 1, 1281, ref (uParam1^)[I]._fU0 );
                return 1;
            }
        }
    }
    return 0;
}

/* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ int sub_8662(unknown uParam0, unknown uParam1)
{
    int Result;

    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
        {
            return Result;
        }
    }
    return -1;
}

/* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ void sub_9204(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_7267( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a SCRIPT_STREAM asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* CLEANPLACEMENTARRAY */ void sub_9665(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* CLEANPLACEMENT */ sub_9720( (uParam0^)[I] );
    }
    return;
}

/* CLEANPLACEMENT */ void sub_9720(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

/* CLEANPED */ void sub_9813(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CLEANPEDARRAY */ void sub_9922(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_9813( (uParam0^)[I] );
    }
    return;
}

/* MAL_ESA_CLEAN */ void sub_10008(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* MAL_ES_CLEAN */ sub_10056( ref (uParam0^)[I] );
    }
    return;
}

/* MAL_ES_CLEAN */ void sub_10056(int iParam0)
{
     /* CLEANPED */ sub_9813( iParam0->_fU0 );
    iParam0->_fU172 = 0;
    return;
}

/* SB_DESTROYSNIPER */ void sub_10185(int iParam0)
{
    iParam0->_fU164 = 0;
    I_SEQUENCE_UNREGISTER_ENTITY( "S_STAD_SNIPBEH", "stad_sniper" );
     /* TERMINATEINTERACTIVESEQUENCE */ sub_10278( "S_STAD_SNIPBEH", 0 );
     /* CLEANPED */ sub_9813( iParam0->_fU0 );
    return;
}

/* TERMINATEINTERACTIVESEQUENCE */ void sub_10278(unknown uParam0, int iParam1)
{
    if ((I_SEQUENCE_IS_LOADED( uParam0 )) == 1)
    {
        I_SEQUENCE_TERMINATE( uParam0 );
    }
    if (iParam1 == 1)
    {
        while ((I_SEQUENCE_IS_LOADED( uParam0 )) == 1)
        {
            DISPLAYF( "[SP]### Waiting for interactive sequence to terminate: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* CLEANOBJECT */ void sub_10490(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* P_ENABLE_POI */ void sub_10549(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
             /* P_ENABLEPOIGLINT */ sub_10608( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_10608( iParam0, 0 );
         /* P_ENABLEPOIINTERACTIONTEXT */ sub_10827( iParam0, 0 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() )) == 0)
        {
            TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_1384() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1384(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

/* P_ENABLEPOIGLINT */ void sub_10608(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

/* P_ENABLEPOIINTERACTIONTEXT */ void sub_10827(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_11007( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

/* P_UPDATEINTERACTIONTEXTAVAILABLE */ void sub_11007(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if (( /* F_ISACTIONINGAVAILABLE */ sub_11103( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if (( /* F_ISACTIONINGAVAILABLE */ sub_11103( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

/* F_ISACTIONINGAVAILABLE */ int sub_11103(int iParam0)
{
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1422() )) == 0))
    {
        if (((IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_1384() )) == 1) || (((IS_PED_GETTING_UP(  /* PLAYER_PED_ID */ sub_1384() )) == 1) || (((IS_PED_PICKING_UP_PICKUP(  /* PLAYER_PED_ID */ sub_1384() )) == 1) || (((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_1384() )) == 1) || (((IS_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1384() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1384() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

/* P_STOP_SP_CHALLENGES */ void sub_11554(boolean bParam0)
{
     /* WRITESCRIPTLOG */ sub_822( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    if (bParam0)
    {
         /* WRITESCRIPTLOG */ sub_822( "CCB", "Stopping the Stadium_Stores context...", 0 );
        END_CONTEXT( "Stadium_Stores" );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_822( "CCB", "Stopping the Stadium_To_Stands context...", 0 );
        END_CONTEXT( "Stadium_To_Stands" );
    }
    return;
}

/* P_LOAD_AREA */ void sub_11865(unknown uParam0)
{
    vector vVar3;
    unknown uVar6;
    int iVar7;
    string sVar8;
    unknown uVar9;

     /* MAL_WRITESCRIPTLOG */ sub_2550( "P_LOAD_AREA" );
    vVar3 = {g_U2138[uParam0]};
    uVar6 = g_U2256[uParam0];
    iVar7 = -1;
    switch (uParam0)
    {
        case 2:
        case 21:
        iVar7 = GET_HASH_KEY( ref g_U2460 );
        sVar8 = "Int_Bsmt_01";
        break;
        case 3:
        case 22:
        iVar7 = GET_HASH_KEY( "Room_Hallway_01" );
        sVar8 = "Int_Bsmt_02";
        break;
        case 4:
        case 23:
        iVar7 = GET_HASH_KEY( "Room_Staircase_02" );
        sVar8 = "Int_Bsmt_03";
        break;
        case 5:
        case 24:
        iVar7 = GET_HASH_KEY( ref g_U2484 );
        sVar8 = "int_store_00";
        break;
        case 9:
        case 27:
        iVar7 = GET_HASH_KEY( ref g_U2548 );
        sVar8 = "int_Trophy_01";
        break;
        case 10:
        vVar3 = {-97.16455000, 22.49700000, 26.58807000};
        SET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1384(), -2.36477500, 2.76315900, 1.17283500, 1 );
        SET_PED_HEADING(  /* PLAYER_PED_ID */ sub_1384(), uVar6 );
        LOAD_SCENE( -2.36477500, 2.76315900, 1.17283500 );
        break;
    }
    if (iVar7 == -1)
    {
        LOAD_SCENE( vVar3 );
    }
    else
    {
        uVar9 = GET_INTERIOR_FROM_NAME( sVar8, 0 );
        SET_INTERIOR_ACTIVE( uVar9, 1, 0 );
        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar9, iVar7 );
    }
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() )) == 0)
    {
        SET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1384(), vVar3, 1 );
        SET_PED_HEADING(  /* PLAYER_PED_ID */ sub_1384(), uVar6 );
        FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_1384(), 0 );
    }
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2296[uParam0], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2296[uParam0], 1065353216, 0 );
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_12653(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_822( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_12872( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_14036( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_14350( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_14829( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_14350( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_14829( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_14350( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_14829( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_15145( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_14829( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_15145( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_14829( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_15717( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_15919( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1384(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_822( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_12872(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_12934( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_12934(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_14036(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_14350(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_14754( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* WRITE_STRING */ void sub_14754(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_14829(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_15145(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_14754( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_15717(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_15919(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_12934( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_16017( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_16017(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_HANDLE_EVENTS */ void sub_17335()
{
    int iVar2;

    iVar2 = l_U128;
    if (g_U855 == 6)
    {
         /* P_UPDATE_PASSOS_HEADTRACKING */ sub_17382();
    }
    switch (l_U128)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_822( "SP", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
         /* P_INITIALIZE_SCRIPT_DATA */ sub_17982();
         /* P_SET_STATIC_DATA */ sub_18600();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U128 = 2;
         /* WRITESCRIPTLOG */ sub_822( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_822( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
         /* P_REQUEST_CON_PERSISTENT_ASSETS */ sub_24755();
         /* P_REQUEST_CON_NONPERSISTENT_ASSETS */ sub_33139();
        l_U128 = 3;
         /* WRITESCRIPTLOG */ sub_822( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if (( /* F_STREAMREQ_SCRIPT_STREAM_IS_LOADED */ sub_40427( ref g_U2034 )) AND (( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_40013( ref g_U1263 )) AND (( /* F_STREAMREQ_ANIM_DICT_IS_LOADED */ sub_39622( ref g_U1354 )) AND (( /* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ sub_39220( ref g_U1214 )) AND ( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_38823( ref g_U1069 ))))))
        {
            if ((NOT l_U77._fU0) AND (g_U854 == 6))
            {
                l_U128 = 4;
                 /* WRITESCRIPTLOG */ sub_822( "SP", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
            }
            else
            {
                l_U128 = 6;
                 /* WRITESCRIPTLOG */ sub_822( "SP", "eCheckpointState = CP_CONCESSION_PRE_CREATE_ASSETS", 0 );
            }
        }
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_822( "GA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        l_U130 = 0;
        g_U3876 = 1;
        FREEZE_TIME_OF_DAY( 21, 0 );
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
        if (( /* HAS_SAVEFILE_LOADED */ sub_41079( ref l_U77 )) == 0)
        {
             /* F_GIVEPEDWEAPON */ sub_15145(  /* PLAYER_PED_ID */ sub_1384(), 68019059, 50, 0, 0 );
             /* F_GIVEPEDWEAPONTOHOLSTER */ sub_14350(  /* PLAYER_PED_ID */ sub_1384(), 1194438308, 0, 50, 0 );
            l_U128 = 5;
             /* WRITESCRIPTLOG */ sub_822( "GA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U128 = 6;
             /* WRITESCRIPTLOG */ sub_822( "SP", "eCheckpointState = CP_CONCESSION_PRE_CREATE_ASSETS", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1384(), 0 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1384(), 0, 0 ) )))
            {
                l_U128 = 6;
                 /* WRITESCRIPTLOG */ sub_822( "GA", "eCheckpointState = CP_CONCESSION_PRE_CREATE_ASSETS", 0 );
            }
        }
        break;
        case 6:
        if (l_U129)
        {
            l_U1955 = 1;
        }
        if ( /* F_CREATE_STORES_CS */ sub_41637())
        {
            if ( /* F_CREATE_BATHROOM_DEAD_GUY */ sub_43735())
            {
                if ( /* F_CREATE_RESTAURANT_CRACHA_DEAD_BODY */ sub_45143())
                {
                    if ( /* F_EDISON_SPAWN */ sub_45550())
                    {
                        if (NOT l_U130)
                        {
                             /* P_CREATE_STORES_SNIPER */ sub_46706();
                        }
                         /* P_CREATE_STORE_PLACEMENTS */ sub_48431();
                         /* P_CREATE_DEAD_BODIES_ON_FIELD */ sub_49768();
                         /* P_CREATE_STADIUM_OBJECTS */ sub_50692();
                         /* P_SETDOORLOCKED */ sub_50892( ref g_U3269, 0 );
                         /* P_SETDOORLOCKED */ sub_50892( ref g_U3276, 0 );
                         /* P_OPENDOOR */ sub_51172( ref g_U3276, 0, 1, 0.30000000 );
                         /* P_OPENDOOR */ sub_51172( ref g_U3269, 1, 1, 0.15000000 );
                        l_U128 = 7;
                         /* WRITESCRIPTLOG */ sub_822( "GA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
                    }
                }
            }
        }
        break;
        case 7:
        if (g_U3876)
        {
            l_U128 = 8;
             /* WRITESCRIPTLOG */ sub_822( "GA", "eCheckpointState = CP_HANDLE_MID_04B_STAD", 0 );
        }
        break;
        case 8:
        if (l_U129)
        {
             /* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ sub_65811( ref l_U153, "MID_04B_STADIUM", 51521, 51596, 53605, 53655, 53753, 59767, 250, 0 );
            if (l_U130)
            {
                l_U153._fU4 = 2;
            }
            else
            {
                l_U153._fU4 = 7;
            }
        }
        if ( /* CUTSYS_HANDLECUTSCENE */ sub_66368( ref l_U153 ))
        {
            if (NOT l_U77._fU0)
            {
                g_U855 = 6;
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_68654( ref l_U77, g_U855,  /* PLAYER_PED_ID */ sub_1384(), g_U2138[g_U855], g_U2256[g_U855], g_U2296[g_U855], g_U2336[g_U855], 1 );
            }
            l_U128 = 9;
             /* WRITESCRIPTLOG */ sub_822( "GA", "eCheckpointState = CP_CONCESSIONS_RUN", 0 );
        }
        break;
        case 9:
         /* P_HANDLE_STATE_CONCESSIONS_RUN */ sub_73235( l_U129 );
         /* SB_HANDLESNIPERBEHAVIOUR */ sub_2046( ref l_U1965 );
        break;
        case 10:
         /* P_HANDLE_STATE_CONCESSIONS_HIDING */ sub_74999( l_U129 );
         /* SB_HANDLESNIPERBEHAVIOUR */ sub_2046( ref l_U1965 );
        break;
        case 11:
        if ( /* NIS_IS_SHOT_FINISHED */ sub_82431( ref l_U1884, 1 ))
        {
             /* P_PASSOS_MOVE_INTO_FOODCOURT */ sub_82592();
             /* NIS_RETURN_TO_GAMEPLAY_CAM */ sub_83003( 0, 0, 0, -859915232, -859915232, 0 );
             /* NIS_POST_SETUP */ sub_68183( 1, 1 );
             /* MAL_ESA_CLEAN */ sub_10008( ref l_U1013 );
            l_U128 = 14;
             /* WRITESCRIPTLOG */ sub_822( "GA", "eCheckpointState = CP_CONCESSION_CP_GONE", 0 );
        }
        break;
        case 12:
         /* P_HANDLE_STATE_CONCESSIONS_FIGHT */ sub_83215( l_U129 );
        break;
        case 13:
        if ( /* NIS_IS_SHOT_FINISHED */ sub_82431( ref l_U2383, 1 ))
        {
             /* WRITESCRIPTLOG */ sub_822( "CO", "You are on it", 0 );
             /* NIS_PLAY_STATIC_CAMERA */ sub_82166( ref l_U2420 );
             /* MAL_TELEPORTPED */ sub_47278( l_U2488, l_U2489, l_U2492 );
             /* MAL_AIMTHENSHOOTATCOORD */ sub_91058( ref l_U2488, 88.07162000, 52.45227000, 11.84583000, -256437761, 1 );
             /* NIS_SHAKE_CAMERA */ sub_90119(  /* F_CAM_SHAKE_WOBBLY */ sub_90060(), 0.25000000 );
        }
        if ( /* NIS_IS_SHOT_FINISHED */ sub_82431( ref l_U2420, 1 ))
        {
             /* MAL_AIMTHENSHOOTATPED */ sub_91251( ref l_U2488, g_U4007, -256437761, 1 );
             /* NIS_SHAKE_CAMERA */ sub_90119(  /* F_CAM_SHAKE_WOBBLY */ sub_90060(), 0.25000000 );
        }
        if (IS_BULLET_CAMERA_ACTIVE())
        {
             /* MAL_WRITESCRIPTLOG */ sub_2550( "IS_BULLET_CAMERA_ACTIVE" );
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            if (NOT (IS_PED_DEAD( g_U4007 )))
            {
                START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "Blood_headsoup_S_01", g_U4007, 0, 0, 0, 0, 0, 0, 65488, 2.00000000 );
                SET_PED_TO_RAGDOLL( g_U4007, 5000, 6000, 0, 0, 0, 1, -1056964608 );
                SET_PED_CORPSE( g_U4007, 1 );
                 /* NIS_SHAKE_CAMERA */ sub_90119(  /* F_CAM_SHAKE_SMALL_EXPLOSION */ sub_91594(), 1.00000000 );
            }
        }
        break;
        case 14:
         /* P_HANDLE_STATE_CONCESSIONS_CP_GONE */ sub_91686( l_U129 );
        break;
        case 15:
         /* P_HANDLE_STATE_PRESS_BOOTH */ sub_97498( l_U129 );
        break;
        case 16:
        if (NOT ((IS_PED_DEAD( l_U2040 )) || (IS_BULLET_CAMERA_RUNNING( 0 ))))
        {
            if (( /* MAL_GETACTINTSTATUS */ sub_60483( g_U4007, 54 )) == 3)
            {
                if ((NOT (IS_PED_DEAD( l_U2040 ))) AND (NOT (IS_PED_DEAD( g_U4007 ))))
                {
                    SET_PED_SHOOTS_AT_COORD( g_U4007, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U2040, 65488, 0, 0, 0.00000000 ) );
                }
                 /* MAL_CLEARACTINT */ sub_102453( ref g_U4007, 54 );
                 /* P_CREATE_AND_START_TIMER */ sub_57262( ref l_U2555, 1000 );
            }
            if ( /* ISTIMERDONE */ sub_3623( ref l_U2555 ))
            {
                 /* P_KILL_PED */ sub_102548( l_U2040 );
            }
        }
        else
        {
             /* NIS_RETURN_TO_GAMEPLAY_CAM */ sub_83003( 0, 0, 0, -859915232, -859915232, 0 );
        }
        if (IS_PED_DEAD( l_U2040 ))
        {
            if (NOT (IS_PED_DEAD( g_U4007 )))
            {
                CLEAR_PED_TASKS_IMMEDIATELY( g_U4007 );
                SET_PED_INVINCIBLE( g_U4007, 0 );
                SET_PED_ACCURACY( g_U4007, -729479261 );
            }
            l_U128 = 17;
             /* WRITESCRIPTLOG */ sub_822( "GA", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 17:
        if (l_U129)
        {
            AUDIO_MUSIC_SUSPEND( 7000 );
             /* P_STORES_SNIPER_CUTSCENE_MEMORY_PREP */ sub_102802();
        }
        if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
        {
            g_U3879 = 1;
        }
        if ((g_U855 == 7) || (NOT HAS_CUTSCENE_FINISHED()))
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U128 = 0;
             /* WRITESCRIPTLOG */ sub_822( "SP", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
    }
    if (l_U128 != iVar2)
    {
        l_U129 = 1;
    }
    else
    {
        l_U129 = 0;
    }
    return;
}

/* P_UPDATE_PASSOS_HEADTRACKING */ void sub_17382()
{
    if (NOT (IS_PED_DEAD( g_U4007 )))
    {
        if ((( /* GET_DISTANCE_BETWEEN_PEDS */ sub_17469(  /* PLAYER_PED_ID */ sub_1384(), g_U4007, 1 )) < l_U449) AND ((PED_GET_ACTION_INTENTION_STATUS( g_U4007, 51 )) == 3))
        {
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() ))) AND ((NOT (IS_PED_DEAD( g_U4007 ))) AND (NOT l_U448)))
            {
                l_U448 = 1;
                TASK_LOOK_AT_PED( g_U4007,  /* PLAYER_PED_ID */ sub_1384(), -1, 0 );
            }
        }
        else if (l_U448)
        {
            if (NOT (IS_PED_DEAD( g_U4007 )))
            {
                l_U448 = 0;
                TASK_CLEAR_LOOK_AT( g_U4007 );
            }
        }
    }
    return;
}

/* GET_DISTANCE_BETWEEN_PEDS */ void sub_17469(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    }
    if (bParam2)
    {
        return VDIST( uVar5, uVar8 );
        break;
    }
    return VDIST( uVar5._fU0, uVar5._fU4, 0, uVar8._fU0, uVar8._fU4, 0 );
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_17982()
{
     /* WRITESCRIPTLOG */ sub_822( "GA", "P_INITIALIZE_SCRIPT_DATA start", 0 );
    l_U129 = 1;
     /* SETUP_SCRIPTED_SPEECH */ sub_18079( "SSTDAUD" );
    l_U1196 = 0;
     /* CREATETIMER */ sub_2750( ref l_U1873, l_U1883, 1, 0 );
    l_U1811 = 0;
    l_U2134 = 0;
    l_U2135 = 0;
    l_U2136 = 0;
    l_U2137 = 0;
    l_U2138 = 0;
     /* CREATETIMER */ sub_2750( ref l_U2139, 3000, 1, 0 );
    l_U2187 = 0;
    l_U2188 = 0;
     /* CREATETIMER */ sub_2750( ref l_U2061, l_U2088, 1, 0 );
     /* CREATETIMER */ sub_2750( ref l_U2070, l_U2089, 1, 0 );
     /* CREATETIMER */ sub_2750( ref l_U2079, l_U2090, 1, 0 );
    l_U1955 = 0;
    l_U1956 = 0;
    l_U180 = 0;
    l_U181 = 0;
     /* CREATETIMER */ sub_2750( ref l_U183, 1000, 1, 0 );
    l_U1251 = 0;
    l_U1252 = 0;
    l_U1253 = 0;
    l_U2193 = 0;
    l_U1497 = 0;
    l_U1498 = 0;
    l_U132 = 0;
    l_U2294 = 0;
    l_U2295 = 0;
    l_U2293 = 0;
    l_U1543 = 0;
    l_U2325 = 0;
    l_U2326 = 0;
    l_U2336 = 0;
    l_U2186 = 0;
    l_U2337 = 0;
    l_U2348 = 0;
    l_U2349 = 0;
    l_U2350 = 0;
    l_U2351 = 0;
    l_U2352 = 0;
    l_U2353 = 0;
    l_U2373 = 0;
     /* WRITESCRIPTLOG */ sub_822( "GA", "P_INITIALIZE_SCRIPT_DATA end", 0 );
    return;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_18079(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_18123();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_18123()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* P_SET_STATIC_DATA */ void sub_18600()
{
     /* WRITESCRIPTLOG */ sub_822( "GA", "P_SET_STATIC_DATA start", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_18704( ref l_U1915[0], 91.79931000, 2.07550300, 9.65311000, 0.00000000, 2069722096, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_18704( ref l_U1915[1], 91.79931000, 2.07550300, 9.65311000, 0.00000000, 957054562, 26, 6, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_18704( ref l_U1915[2], 91.79931000, 2.07550300, 9.65311000, 0.00000000, 1530933710, 26, 6, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_18704( ref l_U450, l_U463, 0.00000000, -587133859, 26, 6, 0, 0, 0 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U227, "TRIGGER_ENTERED_FOODCOURT", 80.41000000, 48.12000000, 9.35000000, 1.08000000, 4.91000000, 2.53000000, 0.00000000, 0.00000000, 40.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U290, "TRIGGER_RAMP_ENTRANCE", 67.55000000, 74.45000000, 9.55000000, 2.70000000, 2.24000000, 2.00000000, 0.00000000, 0.00000000, -19.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U269, "MAX_HALFWAY_UP_RAMP", 64.89000000, 79.97000000, 8.41000000, 3.06000000, 4.61000000, 6.09000000, 0.00000000, 0.00000000, -15.22000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U311, "MAX_IN_RAMP", 68.65000000, 77.54000000, 9.43000000, 2.62000000, 4.00000000, 6.00000000, 0.00000000, 0.00000000, -19.11000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U332, "TRIGGER_FC_WAVE2", 81.88000000, 62.86000000, 8.76000000, 3.75000000, 14.14000000, 4.85000000, 0.00000000, 0.00000000, -35.71000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U248, "TRIGGER_ACTIVATE_FOODCOURT_VCPF", 82.31000000, 49.62000000, 9.35000000, 1.08000000, 4.91000000, 2.53000000, 0.00000000, 0.00000000, 40.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U353, "TRIGGER_PASSOS_INTO_FC", 75.68000000, 34.41000000, 0.92000000, 2.14000000, 24.86000000, 18.62000000, 0.00000000, 0.00000000, -70.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U374, "TRIGGER_DEACTIVATE", 89.94000000, 15.30000000, 9.56000000, 3.48000000, 18.36000000, 2.06000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U395, "TRIGGER_REACTIVATE", 86.04000000, 15.30000000, 9.56000000, 3.48000000, 18.36000000, 2.06000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    l_U395._fU64 = 1;
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U416, "tbPlayMono_MXDRPLB", 49.36000000, 81.62000000, 11.56000000, 3.06000000, 4.61000000, 6.09000000, 0.00000000, 0.00000000, -2.43999000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U609[0], "Amb Speech PETS A", 92.13000000, -21.38000000, 8.99000000, 7.32000000, 5.05000000, 4.19000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U609[1], "Amb Speech PETS B", 89.08000000, -17.41000000, 8.99000000, 1.59000000, 4.09000000, 4.19000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U609[2], "Amb Speech PETS C", 94.60000000, -14.95000000, 8.99000000, 2.24000000, 4.09000000, 4.19000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U609[3], "Amb Speech PETS D", 85.17000000, -4.20000000, 8.99000000, 4.60000000, 12.84000000, 4.19000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U609[4], "Amb Speech PETS E", 88.12000000, -0.24000000, 8.99000000, 1.40000000, 2.97000000, 4.19000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U609[5], "Amb Speech PETS G", 95.00000000, 3.68000000, 8.99000000, 1.89000000, 4.49000000, 4.19000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERREGION */ sub_20326( ref l_U468, ref l_U609 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U736, "SPEECH BAR", 94.32000000, 25.12000000, 8.67000000, 4.91000000, 5.09000000, 4.85000000, 0.00000000, 0.00000000, 90.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U2092, "TRIGGER_VIG35C_PASSOS_MOVE_LOUNGE", 38.57000000, 79.27000000, 12.63000000, 5.24000000, 5.53000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U2113, "TRIGGER_VIG35D_PASSOS_MOVE_BOOTH", 41.09000000, 70.80000000, 12.55000000, 6.01000000, 5.52000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U1553[0], "TRIGGER_IN_ENTRANCE_01", 82.90000000, 50.21000000, 9.35000000, 9.35000000, 3.71000000, 2.53000000, 0.00000000, 0.00000000, 40.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U1553[1], "TRIGGER_IN_ENTRANCE_02", 88.36000000, 53.42000000, 9.35000000, 3.00000000, 6.62000000, 2.53000000, 0.00000000, 0.00000000, 39.33000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U1553[2], "TRIGGER_IN_ENTRANCE_03", 93.33000000, 43.80000000, 9.35000000, 3.00000000, 22.97000000, 2.53000000, 0.00000000, 0.00000000, 24.55000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U1553[3], "TRIGGER_IN_ENTRANCE_04", 101.37000000, 42.33000000, 9.35000000, 3.00000000, 17.16000000, 2.53000000, 0.00000000, 0.00000000, 19.76000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U1660[0], "TRIG_FAR_RIGHT_RAILING01", 93.72000000, 57.25000000, 9.35000000, 3.00000000, 15.73000000, 7.00000000, 0.00000000, 0.00000000, 36.32000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U1660[1], "TRIG_FAR_RIGHT_RAILING02", 83.47000000, 67.08000000, 9.35000000, 2.33000000, 14.23000000, 7.00000000, 0.00000000, 0.00000000, 53.75000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U1638[0], "TRIG_NEAR_RIGHT_RAILING01", 71.38000000, 73.94000000, 9.35000000, 2.48000000, 12.94000000, 7.00000000, 0.00000000, 0.00000000, 67.56000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U1725[0], "TRIG_FAR_LEFT_RAILING01", 81.28000000, 59.69000000, 9.35000000, 2.40000000, 11.63000000, 7.00000000, 0.00000000, 0.00000000, 49.50000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U1703[0], "TRIG_NEAR_LEFT_RAILING01", 70.07000000, 66.38000000, 9.35000000, 2.40000000, 14.04000000, 7.00000000, 0.00000000, 0.00000000, 66.07000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U1747[0], "TRIG_FRONT_RAILING01", 60.02000000, 73.60000000, 9.35000000, 8.72000000, 10.36000000, 7.00000000, 0.00000000, 0.00000000, -14.92000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U1747[1], "TRIG_FRONT_RAILING02", 54.37000000, 74.31000000, 9.35000000, 5.72000000, 10.35000000, 7.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U1790, "TRIGGER_ATTACK_PASSOS", 83.13000000, 67.08000000, 13.88000000, 2.33000000, 10.07000000, 2.53000000, 0.00000000, 0.00000000, 49.78000000, 1 );
     /* P_CREATETETHERBOX */ sub_21950( ref l_U1812, "TETHER_FOODCOURT_01", 85.06000000, 65.39000000, 13.88000000, 1.21000000, 5.02000000, 2.53000000, 0.00000000, 0.00000000, 49.78000000, 1 );
     /* P_CREATETETHERBOX */ sub_21950( ref l_U1813, "TETHER_FOODCOURT_02", 81.28000000, 68.29000000, 13.88000000, 1.21000000, 5.50000000, 2.53000000, 0.00000000, 0.00000000, 54.29000000, 1 );
     /* P_CREATETETHERBOX */ sub_21950( ref l_U1814, "TETHER_FOODCOURT_03", 74.04000000, 72.32000000, 13.88000000, 1.21000000, 11.54000000, 2.53000000, 0.00000000, 0.00000000, 63.51000000, 1 );
     /* P_CREATETETHERBOX */ sub_21950( ref l_U1815, "TETHER_FOODCOURT_04", 66.91000000, 75.36000000, 13.88000000, 1.21000000, 5.42000000, 2.53000000, 0.00000000, 0.00000000, 73.50000000, 1 );
     /* P_CREATETETHERBOX */ sub_21950( ref l_U1816, "TETHER_FOODCOURT_05", 63.86000000, 72.93000000, 13.88000000, 5.87000000, 1.34000000, 2.53000000, 0.00000000, 0.00000000, 73.50000000, 1 );
     /* P_CREATETETHERBOX */ sub_21950( ref l_U1817, "TETHER_FOODCOURT_06", 64.97000000, 69.15000000, 13.88000000, 1.21000000, 5.42000000, 2.53000000, 0.00000000, 0.00000000, 73.50000000, 1 );
     /* P_CREATETETHERBOX */ sub_21950( ref l_U1818, "TETHER_FOODCOURT_07", 70.47000000, 67.00000000, 13.88000000, 1.21000000, 7.02000000, 2.53000000, 0.00000000, 0.00000000, -115.96000000, 1 );
     /* P_CREATETETHERBOX */ sub_21950( ref l_U438, "TETHER_BOOTH", 37.23000000, 66.55000000, 11.32000000, 15.57000000, 13.02000000, 4.53000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_21950( ref l_U439, "TETHER_LEFT_SIDE_OF_THE_BOOTH", 42.74000000, 68.50000000, 12.27000000, 4.57000000, 8.67000000, 3.64000000, 0.00000000, 0.00000000, 20.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_21950( ref l_U440, "TETHER_TOP_OF_THE_STAIRS", 49.37000000, 80.80000000, 12.27000000, 3.31000000, 4.66000000, 3.64000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_21950( ref l_U437, "TETHER_COVER", 31.77000000, 66.91000000, 12.00000000, 3.42000000, 3.49000000, 5.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_21950( ref l_U2194[0], "TETHER_LOWERFC_1", 63.95000000, 69.70000000, 9.37000000, 31.62000000, 14.99000000, 4.63000000, 0.00000000, 0.00000000, -13.73000000, 1 );
     /* P_CREATETETHERBOX */ sub_21950( ref l_U2194[1], "TETHER_LOWERFC_2", 76.02000000, 67.79000000, 9.37000000, 14.74000000, 10.94000000, 4.63000000, 0.00000000, 0.00000000, -43.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U898[0], "FoodCourt_Mono_A", 56.70000000, 73.37000000, 9.00000000, 9.04000000, 8.79000000, 3.96000000, 0.00000000, 0.00000000, -6.35000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U898[1], "FoodCourt_Mono_B", 64.66000000, 72.10000000, 9.00000000, 8.69000000, 7.15000000, 3.96000000, 0.00000000, 0.00000000, -19.73000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U898[2], "FoodCourt_Mono_C", 72.15000000, 69.26000000, 9.00000000, 8.78000000, 8.13000000, 3.96000000, 0.00000000, 0.00000000, -30.62000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U898[3], "FoodCourt_Mono_D", 79.20000000, 64.96000000, 9.00000000, 8.78000000, 8.13000000, 3.96000000, 0.00000000, 0.00000000, -40.28000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19031( ref l_U898[4], "FoodCourt_Mono_E", 85.89000000, 59.79000000, 9.00000000, 8.78000000, 8.13000000, 3.96000000, 0.00000000, 0.00000000, -44.56000000, 1 );
     /* P_CREATETRIGGERREGION */ sub_20326( ref l_U757, ref l_U898 );
     /* P_CREATEPOISTRUCTCOORD */ sub_23417( ref l_U2207, 2, 81.12507000, 69.34450000, 10.91859000, 81.12507000, 69.34450000, 10.91859000, 81.12507000, 69.34450000, 10.91859000, 3.00000000, 6.00000000, 1, 0 );
     /* P_SET_POI_FORCE_WALK */ sub_24163( ref l_U2207, 0 );
     /* P_SET_INTERACTIVE_TEXT */ sub_24236( ref l_U2207, 30, "POI_STADFCBLOOD" );
     /* P_SET_POI_AVAILABLE */ sub_24446( ref l_U2207, 0 );
     /* P_SET_POI_REUSABLE */ sub_24528( ref l_U2207, 1 );
     /* WRITESCRIPTLOG */ sub_822( "GA", "P_SET_STATIC_DATA end", 0 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_18704(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATETRIGGERBOX */ void sub_19031(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATETRIGGERREGION */ void sub_20326(int iParam0, unknown uParam1)
{
    int iVar4;
    int I;

    iVar4 = (uParam1^);
    if (iVar4 > 6)
    {
         /* WRITESCRIPTLOG */ sub_822( "[SA]", "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
        SCRIPT_ASSERT( "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
    }
    for ( I = 0; I < iVar4; I++ )
    {
        iParam0->_fU0[I] = {(uParam1^)[I]};
    }
    iParam0->_fU508 = iVar4;
    iParam0->_fU548 = 0;
    iParam0->_fU552 = 0;
    iParam0->_fU556 = 0;
    iParam0->_fU560 = 0;
    return;
}

/* P_CREATETETHERBOX */ void sub_21950(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATEPOISTRUCTCOORD */ void sub_23417(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
     /* P_CREATEBLANKPOISTRUCT */ sub_23457( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
     /* P_CREATEPOIGLINT */ sub_23850( iParam0 );
    return;
}

/* P_CREATEBLANKPOISTRUCT */ void sub_23457(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

/* P_CREATEPOIGLINT */ void sub_23850(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
     /* P_INITPOIGLINT */ sub_23948( iParam0 );
    return;
}

/* P_INITPOIGLINT */ void sub_23948(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                 /* P_ENABLEPOIGLINT */ sub_10608( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                 /* P_ENABLEPOIGLINT */ sub_10608( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                 /* P_ENABLEPOIGLINT */ sub_10608( iParam0, 1 );
            }
            else
            {
                 /* P_ENABLEPOIGLINT */ sub_10608( iParam0, 0 );
            };;;
        }
        else
        {
             /* P_ENABLEPOIGLINT */ sub_10608( iParam0, 0 );
        }
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_10608( iParam0, 0 );
    }
    return;
}

/* P_SET_POI_FORCE_WALK */ void sub_24163(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

/* P_SET_INTERACTIVE_TEXT */ void sub_24236(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
     /* P_INITINTERACTIVETEXT */ sub_24292( iParam0 );
    return;
}

/* P_INITINTERACTIVETEXT */ void sub_24292(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

/* P_SET_POI_AVAILABLE */ void sub_24446(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
     /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_11007( iParam0 );
    return;
}

/* P_SET_POI_REUSABLE */ void sub_24528(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

/* P_REQUEST_CON_PERSISTENT_ASSETS */ void sub_24755()
{
     /* WRITESCRIPTLOG */ sub_822( "GA", "P_REQUEST_CON_PERSISTENT_ASSETS start", 0 );
     /* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ sub_24858( ref l_U113, ref g_U1069 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT_ARRAY */ sub_27780( ref l_U124, ref g_U1214 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29816( "DAM_KO", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29816( "DAM_DEAD", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29816( "LEVEL_S_STAD_CP_03", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29816( "LEVEL_S_STAD_PU", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29816( "PAS_INT", ref g_U1354 );
     /* P_LOAD_PLGE_ANIM_DICTS */ sub_31789( 0, 0 );
     /* WRITESCRIPTLOG */ sub_822( "GA", "P_REQUEST_CON_PERSISTENT_ASSETS end", 0 );
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ void sub_24858(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_24931( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT */ void sub_24931(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 =  /* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ sub_24998( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar4 );
            PRINTNL();
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_25256( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Inserting MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ int sub_24998(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_25256( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is loading: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_25256( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                     /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_25256( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_26787( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being removed: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_25256( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_25256( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ void sub_25256(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_25317( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ int sub_25317(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID is active: {} ###", 1, 513, (uParam1^)[I] );
                if ((uParam1^)[I] == iParam0)
                {
                    DISPLAYF( "The THREADID was already requested by this thread!!!", 0 );
                    DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                    (uParam1^)[I] = nil;
                    Result = I;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The THREADID index was requested by another thread!!! {} ###", 1, 513, I );
                }
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is NOT active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

/* P_STREAMREQ_THREADID_RESET */ void sub_26787(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT_ARRAY */ void sub_27780(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_27854( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT */ void sub_27854(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ sub_27908( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_28169( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ int sub_27908(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_28169( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is loading: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_28169( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The WEAPON_TYPE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_28169( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_26787( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being removed: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_28169( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            DISPLAYF( "The WEAPON_TYPE asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_28169( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ void sub_28169(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_25317( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_INSERT */ void sub_29816(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ sub_29868( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ANIM_DICT asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_30120( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ int sub_29868(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_30120( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_30120( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ANIM_DICT asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_30120( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_26787( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_30120( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ANIM_DICT asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ANIM_DICT: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
             /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_30120( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ void sub_30120(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_25317( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_LOAD_PLGE_ANIM_DICTS */ void sub_31789(boolean bParam0, boolean bParam1)
{
    if (NOT bParam0)
    {
        if (NOT bParam1)
        {
             /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29816( "PLGE_RIFLE_CROUCH", ref g_U1354 );
             /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29816( "PLGE_PSTL_CROUCH", ref g_U1354 );
             /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29816( "PLGE_RIFLE_KNEE", ref g_U1354 );
             /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29816( "PLGE_PSTL_KNEE", ref g_U1354 );
             /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29816( "PLGE_PSTL_CORE", ref g_U1354 );
             /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29816( "PLGE_PSTL_COVER", ref g_U1354 );
        }
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29816( "PLGE_RIFLE_CORE", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29816( "PLGE_RIFLE_CORE_RELOAD", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29816( "PLGE_PSTL_CORE_RELOAD", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29816( "PLGE_RIFLE_HANDSIG", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29816( "PLGE_PSTL_HANDSIG", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29816( "PLGE_RIFLE_ACTIONS", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29816( "PLGE_PSTL_ACTIONS", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29816( "PLGE_RIFLE_COVER", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29816( "PLGE_RIFLE_REACT", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29816( "PLGE_PSTL_REACT", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29816( "PLGE_RIFLE_COVER_EXIT", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29816( "PLGE_PSTL_COVER_EXIT", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29816( "PLGE_PSTL_FULLBODY", ref g_U1354 );
    }
    else
    {
         /* LOADANIMDICT */ sub_32420( "PLGE_RIFLE_CROUCH", 0, 1 );
         /* LOADANIMDICT */ sub_32420( "PLGE_PSTL_CROUCH", 0, 1 );
         /* LOADANIMDICT */ sub_32420( "PLGE_RIFLE_CORE", 0, 1 );
         /* LOADANIMDICT */ sub_32420( "PLGE_PSTL_CORE", 0, 1 );
         /* LOADANIMDICT */ sub_32420( "PLGE_RIFLE_CORE_RELOAD", 0, 1 );
         /* LOADANIMDICT */ sub_32420( "PLGE_PSTL_CORE_RELOAD", 0, 1 );
         /* LOADANIMDICT */ sub_32420( "PLGE_RIFLE_HANDSIG", 0, 1 );
         /* LOADANIMDICT */ sub_32420( "PLGE_PSTL_HANDSIG", 0, 1 );
         /* LOADANIMDICT */ sub_32420( "PLGE_RIFLE_ACTIONS", 0, 1 );
         /* LOADANIMDICT */ sub_32420( "PLGE_PSTL_ACTIONS", 0, 1 );
         /* LOADANIMDICT */ sub_32420( "PLGE_RIFLE_KNEE", 0, 1 );
         /* LOADANIMDICT */ sub_32420( "PLGE_PSTL_KNEE", 0, 1 );
         /* LOADANIMDICT */ sub_32420( "PLGE_RIFLE_COVER", 0, 1 );
         /* LOADANIMDICT */ sub_32420( "PLGE_PSTL_COVER", 0, 1 );
         /* LOADANIMDICT */ sub_32420( "PLGE_RIFLE_REACT", 0, 1 );
         /* LOADANIMDICT */ sub_32420( "PLGE_PSTL_REACT", 0, 1 );
         /* LOADANIMDICT */ sub_32420( "PLGE_RIFLE_COVER_EXIT", 0, 1 );
         /* LOADANIMDICT */ sub_32420( "PLGE_PSTL_COVER_EXIT", 0, 1 );
         /* LOADANIMDICT */ sub_32420( "PLGE_PSTL_FULLBODY", 0, 1 );
    }
    return;
}

/* LOADANIMDICT */ void sub_32420(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an animation dictionary to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_REQUEST_CON_NONPERSISTENT_ASSETS */ void sub_33139()
{
     /* WRITESCRIPTLOG */ sub_822( "GA", "P_REQUEST_CON_NONPERSISTENT_ASSETS start", 0 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_33249( -263036009, ref g_U1263 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_33249( -1310389432, ref g_U1263 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_33249( 727272178, ref g_U1263 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_33249( -647680815, ref g_U1263 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_33249( -813779471, ref g_U1263 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_33249( -1414847258, ref g_U1263 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_33249( 1812693303, ref g_U1263 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_33249( 1154908660, ref g_U1263 );
     /* P_STREAMREQ_SCRIPT_STREAM_INSERT */ sub_36178( "MID_04B_STAD_CON_RUN_BLENDOUT", ref g_U2034 );
    if ((l_U130) AND (g_U854 < 6))
    {
         /* LOADSEAMLESSCUTSCENE */ sub_38350( "MID_04B_STADIUM", 0 );
    }
     /* WRITESCRIPTLOG */ sub_822( "GA", "P_REQUEST_CON_NONPERSISTENT_ASSETS end", 0 );
    return;
}

/* P_STREAMREQ_ISEQ_INSERT */ void sub_33249(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 =  /* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ sub_33310( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar12 );
            PRINTNL();
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar4 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
             /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_33560( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

/* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ int sub_33310(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_33560( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is loading: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_33560( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                        DISPLAYF( "The ISEQ asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_33560( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loading: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_33560( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### Re-requesting ISEQ: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_26787( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_26787( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being removed: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_33560( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar5 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_33560( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ISEQ_THREADID_SET_ID */ void sub_33560(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_25317( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_SCRIPT_STREAM_INSERT */ void sub_36178(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_SCRIPT_STREAM_IS_INDEX_AVAILABLE */ sub_36234( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing SCRIPT_STREAM asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_36498( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_INDEX_AVAILABLE */ int sub_36234(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_36498( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is already loading!!!", 0 );
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_36498( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (Result <= 2)
                {
                    if ((GET_SCRIPT_STREAM_STATE( uParam0, Result )) == 2)
                    {
                        DISPLAYF( "[CCB] ### The SCRIPT_STREAM is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                        DISPLAYF( "The SCRIPT_STREAM asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_36498( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### The SCRIPT_STREAM is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The SCRIPT_STREAM asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                        (uParam1^)[Result]._fU32 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_26787( ref (uParam1^)[Result]._fU36 );
                        return Result;
                    }
                }
                else
                {
                    DISPLAYF( "[CCB] ### The SCRIPT_STREAM is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The SCRIPT_STREAM asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_36498( Result, uParam1, uParam2 );
                    return -1;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_36498( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (Result <= 2)
        {
            if ((GET_SCRIPT_STREAM_STATE( uParam0, iVar6 )) == 2)
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is already loaded: {} ###", 1, 1537, uParam0 );
                DISPLAYF( "The SCRIPT_STREAM asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing SCRIPT_STREAM: {} ###", 1, 1537, uParam0 );
                StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
                (uParam1^)[iVar6]._fU32 = 3;
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_36498( iVar6, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar6;
            }
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The SCRIPT_STREAM - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ void sub_36498(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_25317( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The SCRIPT_STREAM asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* LOADSEAMLESSCUTSCENE */ void sub_38350(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_LOADED */ int sub_38823(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be requested: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to load: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be removed: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ int sub_39220(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be requested: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to load: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be removed: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ANIM_DICT_IS_LOADED */ int sub_39622(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be requested: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to load: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be removed: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ISEQ_IS_LOADED */ int sub_40013(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be requested: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to load: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be removed: {} ###", 1, 1281, ref uVar3 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_LOADED */ int sub_40427(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* HAS_SAVEFILE_LOADED */ int sub_41079(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_822( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_12653( uParam0,  /* PLAYER_PED_ID */ sub_1384() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* F_CREATE_STORES_CS */ int sub_41637()
{
    char[64] cVar2;

    switch (l_U1955)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_822( "AT", "e_ST_SpawnCS = ENTITY_STATE_INIT", 0 );
        l_U1956 = 1;
        l_U1955 = 2;
         /* WRITESCRIPTLOG */ sub_822( "AT", "e_ST_SpawnCS = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        StrCopy( ref cVar2, "Creating piStores_Cutscene_CS[", 64 );
        ConcatString(ref cVar2, l_U1956, 64);
        ConcatString(ref cVar2, "]", 64);
        PRINTSTRING( ref cVar2 );
        PRINTNL();
        if (NOT (DOES_PED_EXIST( g_U4187[l_U1956] )))
        {
            g_U4187[l_U1956] =  /* CREATEPED */ sub_41927( ref l_U1915[l_U1956] );
            if (NOT (IS_PED_DEAD( g_U4187[l_U1956] )))
            {
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U4187[l_U1956], 1 );
                SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U4187[l_U1956], 1 );
                SET_PED_AIM_LOCKONABLE( g_U4187[l_U1956], 0 );
                SET_PED_CAN_BE_TARGETTED( g_U4187[l_U1956], 0 );
                SET_PED_AS_ONE_SHOT_KILL( g_U4187[l_U1956], 1 );
                STOP_PED_SPEAKING( g_U4187[l_U1956], 1 );
                SET_PED_INVINCIBLE( g_U4187[l_U1956], 1 );
                FREEZE_PED_POSITION( g_U4187[l_U1956], 1 );
                if (l_U1956 != 1)
                {
                    SET_ROOM_FOR_PED_BY_NAME( g_U4187[l_U1956], ref g_U2484 );
                }
            }
        }
        l_U1956++;
        if (l_U1956 >= g_U4187)
        {
            l_U1955 = 3;
             /* WRITESCRIPTLOG */ sub_822( "AT", "e_ST_SpawnCS = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_43232( ref g_U4187, "piStores_Cutscene_CS" );
        if ((NOT (IS_PED_DEAD( g_U4187[2] ))) AND (NOT (IS_PED_DEAD( g_U4187[1] ))))
        {
             /* TELEPORTPED */ sub_43419( g_U4187[1], l_U1957, l_U1960 );
             /* TELEPORTPED */ sub_43419( g_U4187[2], l_U1961, l_U1964 );
             /* MAL_REGISTERPEDWITHISEQ */ sub_43536( g_U4187[1], 1154908660, "Sniped" );
             /* MAL_REGISTERPEDWITHISEQ */ sub_43536( g_U4187[2], 1154908660, "Executed" );
            ISEQ_START( 1154908660 );
        }
        l_U1955 = 4;
         /* WRITESCRIPTLOG */ sub_822( "AT", "e_ST_SpawnCS = ENTITY_STATE_COMPLETE", 0 );
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

/* CREATEPED */ void sub_41927(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_42109( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_42658( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_42759( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* LOADMODEL */ void sub_42109(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_14754( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* SETPEDDEFAULTSTATS */ void sub_42658(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_42759(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ void sub_43232(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

/* TELEPORTPED */ void sub_43419(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* MAL_REGISTERPEDWITHISEQ */ void sub_43536(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        ISEQ_REGISTER_ENTITY( uParam1, uParam2, uParam0, 0 );
    }
    return;
}

/* F_CREATE_BATHROOM_DEAD_GUY */ int sub_43735()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;

    if (DOES_PED_EXIST( l_U467 ))
    {
         /* WRITESCRIPTLOG */ sub_822( "GA", "Dead washroom CS exists.", 0 );
        return 1;
        break;
    }
     /* WRITESCRIPTLOG */ sub_822( "GA", "Creating Dead Washroom CS", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_18704( ref uVar2, 115.03250000, -3.42266600, 9.60178200, 0, -1072749639, 7, 3, 2, 0, 0 );
    l_U467 =  /* MAL_CREATEPED */ sub_43919( ref g_U4411, ref uVar2, 1, 0, 0 );
     /* P_CREATE_DEAD_BODY */ sub_44186( l_U467, 0 );
    return 0;
}

/* MAL_CREATEPED */ void sub_43919(unknown uParam0, unknown uParam1, boolean bParam2, boolean bParam3, unknown uParam4)
{
     /* CLEANPED */ sub_9813( (uParam0^) );
    (uParam0^) =  /* CREATEPED */ sub_41927( uParam1 );
    if (bParam3)
    {
        while (NOT (DOES_PED_EXIST( (uParam0^) )))
        {
            WAIT( 0 );
             /* MAL_WRITESCRIPTLOG */ sub_2550( "MAL_CreatePed waiting for ped to exist" );
        }
    }
    SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), uParam4 );
     /* MAL_SETPEDCOMBATATTRIBUTES */ sub_44063( uParam0, 32, 0 );
    SET_PED_IGNORE_LOS_CHECKS( (uParam0^), NOT bParam2 );
    SET_PED_EMOTION_STATE( (uParam0^), 1 );
    return (uParam0^);
}

/* MAL_SETPEDCOMBATATTRIBUTES */ void sub_44063(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_ATTRIBUTES( (uParam0^), uParam1, uParam2 );
    }
    return;
}

/* P_CREATE_DEAD_BODY */ void sub_44186(unknown uParam0, unknown uParam1)
{
    char[32] cVar4;
    char[32] cVar12;

    StrCopy( ref cVar4, "DAM_DEAD", 32 );
    switch (uParam1)
    {
        case 0:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
        case 1:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_02", 32 );
        break;
        case 2:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_03", 32 );
        break;
        case 3:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_01", 32 );
        break;
        case 4:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_02", 32 );
        break;
        case 5:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_03", 32 );
        break;
        case 6:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_04", 32 );
        break;
        case 7:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_01", 32 );
        break;
        case 8:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_02", 32 );
        break;
        case 9:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_03", 32 );
        break;
        case 10:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_04", 32 );
        break;
        case 11:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_01", 32 );
        break;
        case 12:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_02", 32 );
        break;
        case 13:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_03", 32 );
        break;
        case 14:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_04", 32 );
        break;
        case 15:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_01", 32 );
        break;
        case 16:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_02", 32 );
        break;
        default:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
    }
    REQUEST_ANIM_DICT( ref cVar4, 0 );
    "[doubled result, dropped if not asigned]";
    while (NOT (HAS_ANIM_DICT_LOADED( ref cVar4, 0 )))
    {
        WAIT( 0 );
         /* WRITE_STRING */ sub_14754( "Waiting for anim dict to load..." );
    }
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        ENABLE_PED_PAIN( uParam0, 0 );
        OVERRIDE_MOVER_PHYSICS_ON_RAGDOLL_SLEEP( uParam0, 1 );
        SET_PED_CORPSE_FROM_ANIM( uParam0, ref cVar4, ref cVar12, 1.00000000, 1 );
    }
    return;
}

/* F_CREATE_RESTAURANT_CRACHA_DEAD_BODY */ int sub_45143()
{
    if (DOES_PED_EXIST( g_U4186 ))
    {
         /* WRITESCRIPTLOG */ sub_822( "GA", "Dead CP exists.", 0 );
        return 1;
        break;
    }
     /* WRITESCRIPTLOG */ sub_822( "GA", "Creating Dead CP.", 0 );
    g_U4186 =  /* CREATEPED */ sub_41927( ref l_U450 );
    if (NOT (IS_PED_DEAD( g_U4186 )))
    {
         /* TELEPORTPED */ sub_43419( g_U4186, l_U463, l_U466 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U4186, 1 );
        SET_ROOM_FOR_PED_BY_NAME( g_U4186, ref g_U2492 );
        FREEZE_PED_POSITION( g_U4186, 1 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U4186, 1 );
        SET_PED_AS_ONE_SHOT_KILL( g_U4186, 1 );
        STOP_PED_SPEAKING( g_U4186, 1 );
        SET_PED_INVINCIBLE( g_U4186, 1 );
        SET_PED_CAN_BE_TARGETTED( g_U4186, 0 );
        SET_FREEZE_PED_AIM( g_U4186, 1 );
        SET_PED_AIM_LOCKONABLE( g_U4186, 0 );
        SET_PED_NAME_DEBUG( g_U4186, "pi_DeadCPRestaurant" );
    }
     /* MAL_REGISTERPEDWITHISEQ */ sub_43536( g_U4186, 1812693303, "DeadVCPF" );
    ISEQ_START( 1812693303 );
    return 0;
}

/* F_EDISON_SPAWN */ int sub_45550()
{
    if (DOES_PED_EXIST( g_U4007 ))
    {
        return 1;
        break;
    }
     /* P_CREATEPEDSTRUCT */ sub_45628( ref l_U210, l_U223, l_U226, g_U2376, 26, 6, 0, 0, 0 );
    g_U4007 =  /* MAL_CREATEPED */ sub_43919( ref g_U4007, ref l_U210, 1, 0, 0 );
     /* MAL_GIVEPEDPERSISTANTVARIATION */ sub_45782( ref g_U4007, "Pass_Stad_Hat" );
    if ((NOT (IS_PED_DEAD( g_U4007 ))) AND (DOES_PED_EXIST( g_U4007 )))
    {
        SET_PED_HEALTH( g_U4007, 400, 0 );
        SET_PED_GORE_AS_ALLY( g_U4007 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U4007, 1 );
        SET_PED_CONSUMING_AMMO( g_U4007, 0 );
    }
     /* MAL_STANDSTILL */ sub_46009( ref g_U4007 );
     /* MAL_WRITESCRIPTLOG */ sub_2550( "Giving Edison a gun" );
     /* F_GIVEPEDWEAPON */ sub_15145( g_U4007, 68019059, 25000, 0, 0 );
     /* MAL_SETPEDRELATIONSHIP */ sub_46180( ref g_U4007, 2, 3 );
     /* MAL_SETCANTRIGGERBULLETCAM */ sub_46259( g_U4007, 1 );
    SET_PED_CAN_INITIATE_BULLET_CAM( g_U4007, 1 );
    SET_PED_VALIDATE_BULLET_CAM_HIT( g_U4007, 0 );
    SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U4007, 1 );
    SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U4007, 1 );
    SET_AI_SHOULD_ALWAYS_MISS_PED( g_U4007, 1 );
    SET_PED_CAN_PUSH_PLAYER( g_U4007, 1 );
    SET_PED_RESIST_TO_OBJECT_COLLISION( g_U4007, 1 );
    "[doubled result, dropped if not asigned]";
    "[doubled result, dropped if not asigned]";
    SET_CAN_AI_KICK_THROUGH_CORPSES( g_U4007, 1 );
    "[doubled result, dropped if not asigned]";
    "[doubled result, dropped if not asigned]";
    SET_PED_AS_ONE_SHOT_KILL( g_U4007, 1 );
    SET_PED_NAME_DEBUG( g_U4007, "STORES_EDISON!" );
    SET_PED_HAS_SPECIAL_GUN_SOUND( g_U4007, 1 );
    return 0;
}

/* P_CREATEPEDSTRUCT */ void sub_45628(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

/* MAL_GIVEPEDPERSISTANTVARIATION */ void sub_45782(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PRINTSTRING( "[MSWW] ### Assigning scene ped variation: " );
         /* WRITE_STRING */ sub_14754( uParam1 );
        SET_PERSISTENT_PED_VARIATION( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_STANDSTILL */ void sub_46009(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_STAND_STILL( 0, -1 );
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    return;
}

/* MAL_SETPEDRELATIONSHIP */ void sub_46180(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_RELATIONSHIP( (uParam0^), uParam1, uParam2 );
    }
    return;
}

/* MAL_SETCANTRIGGERBULLETCAM */ int sub_46259(unknown uParam0, boolean bParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        if (bParam1)
        {
            if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( uParam0 )))
            {
                 /* MAL_WRITESCRIPTLOG */ sub_2550( "MAL_SetCanTriggerBulletCam: Ped is not able to trigger BC, adding" );
                SET_PED_CAN_TRIGGER_BULLET_CAM( uParam0, bParam1 );
                return 1;
            }
        }
        else if (GET_PED_CAN_TRIGGER_BULLET_CAM( uParam0 ))
        {
             /* MAL_WRITESCRIPTLOG */ sub_2550( "MAL_SetCanTriggerBulletCam turning off BC" );
            SET_PED_CAN_TRIGGER_BULLET_CAM( uParam0, bParam1 );
            return 1;
        }
    }
    return 0;
}

/* P_CREATE_STORES_SNIPER */ void sub_46706()
{
     /* WRITESCRIPTLOG */ sub_822( "GA", "P_CREATE_STORES_SNIPER start", 0 );
     /* MAL_WRITESCRIPTLOG */ sub_2550( "Creating stores sniper" );
     /* SB_CREATESNIPER */ sub_46905( ref l_U1965, 41.08343000, 61.76176000, 11.64524000, 76.52078000, 49.85817000, 11.80000000, 76.52078000, 49.65817000, 11.60000000, 86.96375000, 22.01132000, 9.60026400, g_U2383, 40.49274000, 61.63966000, 11.64522000, 214.59710000, 4000 );
     /* MAL_GIVEPEDPERSISTANTVARIATION */ sub_45782( ref l_U1965._fU0, "M3_CP_S1B_Avg" );
    SET_ROOM_FOR_PED_BY_NAME( l_U1965._fU0, "Room_Pressbooth" );
    l_U1965._fU164 = 0;
    l_U1965._fU204 = 1;
    l_U1965._fU216 = 1;
    SET_PED_PERFECT_ACCURACY_OVERRIDE( l_U1965._fU0, 0 );
     /* SB_HANDLESNIPERBEHAVIOUR */ sub_2046( ref l_U1965 );
     /* WRITESCRIPTLOG */ sub_822( "GA", "P_CREATE_STORES_SNIPER end", 0 );
    return;
}

/* SB_CREATESNIPER */ void sub_46905(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    iParam0->_fU56 = {uParam1};
    iParam0->_fU72 = {uParam4};
    iParam0->_fU84 = {uParam7};
    iParam0->_fU96 = {uParam10};
    iParam0->_fU68 = uParam17;
    iParam0->_fU160 = uParam13;
    iParam0->_fU108 = {uParam14};
    iParam0->_fU164 = 0;
    iParam0->_fU168 = 0;
    iParam0->_fU172 = 0;
    iParam0->_fU176 = 0;
    iParam0->_fU180 = 0;
    iParam0->_fU184 = 0;
    iParam0->_fU192 = uParam18;
    iParam0->_fU156 = 1500;
    iParam0->_fU196 = 3;
    iParam0->_fU200 = 0;
    iParam0->_fU204 = 0;
    iParam0->_fU208 = -256437761;
    iParam0->_fU212 = 0;
    iParam0->_fU216 = 0;
     /* P_CREATEPEDSTRUCT */ sub_45628( iParam0 + 4, iParam0->_fU56, iParam0->_fU68, iParam0->_fU160, 7, 3, 2, 0, 0 );
    iParam0->_fU0 =  /* MAL_CREATEPED */ sub_43919( iParam0 + 0, iParam0 + 4, 1, 1, 0 );
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( iParam0->_fU0, 1 );
        SET_PED_INVINCIBLE( iParam0->_fU0, 1 );
        SET_PED_GORE( iParam0->_fU0, 0 );
        FREEZE_PED_POSITION( iParam0->_fU0, 1 );
         /* MAL_TELEPORTPED */ sub_47278( iParam0->_fU0, iParam0->_fU56, iParam0->_fU68 );
        SET_PED_ALERTNESS( iParam0->_fU0, 3 );
        SET_PED_ACCURACY( iParam0->_fU0, 31186664 );
        SET_PED_CAN_BE_TARGETTED( iParam0->_fU0, 0 );
        SET_PED_AI_TEMPLATE( iParam0->_fU0, "AIT_EXPERT" );
        SET_PED_PERFECT_ACCURACY_OVERRIDE( iParam0->_fU0, 1 );
        SET_PED_CONSUMING_AMMO( iParam0->_fU0, 0 );
    }
    iParam0->_fU188 =  /* MAL_GIVEPEDWEAPON */ sub_47462( iParam0->_fU0, -2075384407, 25000, 0, 0 );
    ENABLE_WEAPON_ATTACHMENT( iParam0->_fU188, 13, 1 );
    TOGGLE_WEAPON_ATTACHMENT( iParam0->_fU188, 13, 1 );
    SET_LASER_SIGHT_ATTACHMENT( iParam0->_fU188, -12373631 );
     /* SETUPINTERACTIVESEQUENCE */ sub_47810( "S_STAD_SNIPBEH", "LEVEL_S_STAD_PU", "/LEVEL/S_STAD/s_stad_snipbeh.act", "/Global/SNIPER_BEHAVIOR", 1 );
     /* LOADANIMDICT */ sub_32420( "LEVEL_S_STAD_PU", 0, 1 );
    I_SEQUENCE_REGISTER_ENTITY( "S_STAD_SNIPBEH", "stad_sniper", iParam0->_fU0, 0 );
    I_SEQUENCE_START( "S_STAD_SNIPBEH" );
    while (NOT (I_SEQUENCE_QUERY_ENTITY_STATE( "S_STAD_SNIPBEH", "stad_sniper", 3 )))
    {
        WAIT( 0 );
    }
     /* MAL_TELEPORTPED */ sub_47278( iParam0->_fU0, iParam0->_fU56, iParam0->_fU68 );
    PED_ACTION_TREE_PLAY_NODE( iParam0->_fU0, "/Global/SNIPER_BEHAVIOR/SNIPER3SET_SEQ/STATES/DUCK_TO_PEEK" );
     /* MAL_SETLOCKEDANDREGISTEREDONPLAYER */ sub_3186( iParam0 + 0 );
    return;
}

/* MAL_TELEPORTPED */ void sub_47278(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* MAL_GIVEPEDWEAPON */ void sub_47462(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    unknown Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                 /* MAL_WRITESCRIPTLOG */ sub_2550( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

/* SETUPINTERACTIVESEQUENCE */ void sub_47810(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    if ((I_SEQUENCE_IS_LOADED( uParam0 )) == 0)
    {
        I_SEQUENCE_SETUP( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            while ((I_SEQUENCE_QUERY_STATE( uParam0, 1 )) == 1)
            {
                DISPLAYF( "[SP]### Waiting for interactive sequence to be loaded: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* P_CREATE_STORE_PLACEMENTS */ void sub_48431()
{
    int I;
    int iVar3;
    vector[2] vVar4;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

     /* WRITESCRIPTLOG */ sub_822( "SP", "P_CREATE_STORE_PLACEMENTS", "###" );
     /* CLEANPLACEMENT */ sub_9720( l_U441[0] );
    l_U441[0] =  /* CREATEPLACEMENT */ sub_48569( -4072149, 36.04000000, 77.72000000, 14.48800000, 0.00000000, 0.00000000, 0.00000000, 1, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U441[0], ref g_U2564 );
    array(ref vVar4, 2);
    vVar4[0] = {90.50000000, 61.95000000, 11.09500000};
    vVar4[1] = {90.50000000, 61.95000000, 10.81500000};
    if (IS_ARCADE_MODE_ACTIVE())
    {
        iVar3 = 2;
    }
    else
    {
        iVar3 = 1;
    }
    for ( I = 0; I <= (iVar3 - 1); I++ )
    {
         /* CLEANPLACEMENT */ sub_9720( l_U445[I] );
        l_U445[I] =  /* CREATEPLACEMENT */ sub_48569( -4072149, vVar4[I], 0, 0, 0, 1, 0, 0, 1119092736 );
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U445[I], ref g_U2500 );
    }
     /* P_CREATE_S_STA_GG_M8_01 */ sub_48935();
    return;
}

/* CREATEPLACEMENT */ void sub_48569(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a placement to exist: {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return Result;
}

/* P_CREATE_S_STA_GG_M8_01 */ void sub_48935()
{
     /* WRITESCRIPTLOG */ sub_822( "CO", "Add_Placement_CL_S_STA_GG_M8_01", 0 );
     /* P_CREATECOLLECTIBLESTRUCT */ sub_49081( ref g_U739, g_U847, 945952788, -942653930, 88.35000000, -16.91000000, 10.65000000, 1.50000000, 0.00000000, 1.50000000, "Int_store_00" );
     /* P_CREATECOLLECTIBLE */ sub_49238( ref g_U739 );
    return;
}

/* P_CREATECOLLECTIBLESTRUCT */ void sub_49081(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_822( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* P_CREATECOLLECTIBLE */ void sub_49238(int iParam0)
{
     /* WRITESCRIPTLOG */ sub_822( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_49321( iParam0->_fU12 )) == 1)
        {
             /* WRITESCRIPTLOG */ sub_822( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_822( "CO", "has never been collected.", 0 );
        }
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_49321( iParam0->_fU12 )) == 0)
        {
             /* CLEANPLACEMENT */ sub_9720( iParam0->_fU0 );
            iParam0->_fU0 =  /* CREATEPLACEMENT */ sub_48569( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                     /* WRITESCRIPTLOG */ sub_822( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_822( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ int sub_49321(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

/* P_CREATE_DEAD_BODIES_ON_FIELD */ void sub_49768()
{
     /* CLEANOBJECTARRAY */ sub_49814( ref g_U3941 );
    g_U3941[0] =  /* CREATEOBJECTNOOFFSET */ sub_49923( -1652775333, -4.14443000, 10.10766000, 0.14177000, 0, 0, 2.56000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U3941[0] ))
    {
        FREEZE_OBJECT_POSITION( g_U3941[0], 1 );
    }
    g_U3941[1] =  /* CREATEOBJECTNOOFFSET */ sub_49923( 1816766229, 10.25816000, 2.27307000, 0.14177000, 0, 0, 1.88000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U3941[1] ))
    {
        FREEZE_OBJECT_POSITION( g_U3941[1], 1 );
    }
    g_U3941[2] =  /* CREATEOBJECTNOOFFSET */ sub_49923( 1873472982, 13.91821000, 23.57691000, 0.14177000, 0, 0, 2.23000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U3941[2] ))
    {
        FREEZE_OBJECT_POSITION( g_U3941[2], 1 );
    }
    g_U3941[3] =  /* CREATEOBJECTNOOFFSET */ sub_49923( -1993976541, 11.90281000, 13.09956000, 0.14177000, 0, 0, 2.95000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U3941[3] ))
    {
        FREEZE_OBJECT_POSITION( g_U3941[3], 1 );
    }
    g_U3941[4] =  /* CREATEOBJECTNOOFFSET */ sub_49923( -1993976541, 10.14508000, 8.20610000, 0.14177000, 0, 0, 90.68000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U3941[4] ))
    {
        FREEZE_OBJECT_POSITION( g_U3941[4], 1 );
    }
    g_U3941[5] =  /* CREATEOBJECTNOOFFSET */ sub_49923( -2096019114, 3.94087000, 16.99167000, 0.14177000, 0, 0, -1.16000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U3941[5] ))
    {
        FREEZE_OBJECT_POSITION( g_U3941[5], 1 );
    }
    return;
}

/* CLEANOBJECTARRAY */ void sub_49814(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* CLEANOBJECT */ sub_10490( (uParam0^)[I] );
    }
    return;
}

/* CREATEOBJECTNOOFFSET */ void sub_49923(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_42109( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* P_CREATE_STADIUM_OBJECTS */ void sub_50692()
{
     /* WRITE_STRING */ sub_14754( "[SP]### P_CREATE_STADIUM_OBJECTS ###" );
    if (DOES_OBJECT_EXIST( g_U3704 ))
    {
         /* CLEANOBJECT */ sub_10490( g_U3704 );
    }
    g_U3704 =  /* CREATEOBJECTNOOFFSET */ sub_49923( g_U2390, -10.46000000, 5.99000000, 0.70000000, 0.00000000, 0.00000000, 18.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U3704 ))
    {
        FREEZE_OBJECT_POSITION( g_U3704, 1 );
    }
    return;
}

/* P_SETDOORLOCKED */ void sub_50892(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if (( /* F_DOESDOOREXIST */ sub_50922( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_51006( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_50922(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_51006(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_OPENDOOR */ void sub_51172(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if (( /* F_DOESDOOREXIST */ sub_50922( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_51006( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

/* F_MID04B_PRESETUP */ int sub_51521()
{
     /* WRITESCRIPTLOG */ sub_822( "AT", "F_MID04B_PRESETUP", 0 );
     /* P_CREATE_STORES_SNIPER */ sub_46706();
    return 1;
}

/* P_MID04B_REGISTRATION */ void sub_51596()
{
     /* WRITESCRIPTLOG */ sub_822( "AT", "P_MID04B_REGISTRATION", 0 );
    AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_6", "", 0, 12000, -1, -1082130432, 0 );
    if (NOT (IS_PED_DEAD( g_U4007 )))
    {
         /* WRITESCRIPTLOG */ sub_822( "GA", "Registering Passos script ped with midscene MID_04B_STADIUM", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U4007, "Pass_heli_pilo", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U4007, 0, 0 ), "W_PI_PT92_Aa_H^1", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U4007, 88.40800000, 22.80700000, 9.58500000, 90.35800000 );
        ISEQ_REGISTER_ENTITY( -1310389432, "Passos", g_U4007, 0 );
        CUTSCENE_REGISTER_ISEQ( -1310389432 );
    }
    if (NOT (IS_PED_DEAD( g_U4186 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U4186, "M_Crac_Sold_SR", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U4186, l_U463, l_U466 );
         /* TERMINATEISEQ */ sub_6819( 1812693303, 0 );
         /* P_STREAMREQ_ISEQ_REMOVE */ sub_7129( 1812693303, ref g_U1263 );
    }
    if (NOT (IS_PED_DEAD( g_U4187[1] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U4187[1], "G_CS_K_Sold_SR", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U4187[1], l_U1957, l_U1960 );
        if (NOT (ISEQ_QUERY_STATE( 1154908660, 3 )))
        {
            ISEQ_REGISTER_ENTITY( 1154908660, "Sniped", g_U4187[1], 0 );
        }
    }
    if (NOT (IS_PED_DEAD( g_U4187[2] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U4187[2], "G_CS_K_Sold_SR^1", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U4187[2], l_U1961, l_U1964 );
        if (NOT (ISEQ_QUERY_STATE( 1154908660, 3 )))
        {
            ISEQ_REGISTER_ENTITY( 1154908660, "Executed", g_U4187[2], 0 );
        }
    }
    if (((NOT (ISEQ_QUERY_STATE( 1154908660, 3 ))) AND (NOT (IS_PED_DEAD( g_U4187[2] )))) || (NOT (IS_PED_DEAD( g_U4187[1] ))))
    {
        CUTSCENE_REGISTER_ISEQ( 1154908660 );
    }
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() )))
    {
        TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_1384() );
        CLEAR_PED_TASKS(  /* PLAYER_PED_ID */ sub_1384() );
         /* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ sub_52417( 1 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE(  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_52775(), "W_PI_PT92_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_1384(), 88.35500000, 23.27600000, 9.61400000, 90.35800000 );
        ISEQ_REGISTER_ENTITY( -263036009, "Max",  /* PLAYER_PED_ID */ sub_1384(), 0 );
        CUTSCENE_REGISTER_ISEQ( -263036009 );
    }
    REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U1965._fU188, "W_SR_M82_Aa_H", 0 );
    CUTSCENE_ENABLE_SKIP( 0 );
     /* KILL_ANY_AMBIENT_SPEECH */ sub_53198( 0 );
     /* KILL_ANY_MISSION_SPEECH */ sub_53398( 0 );
    return;
}

/* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ void sub_52417(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1384(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if ((( /* IS_WEAPON_SINGLE_HANDED */ sub_52540( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_52775();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1384(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

/* IS_WEAPON_SINGLE_HANDED */ int sub_52540(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ int sub_52775()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1384(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_52540( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1384(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1384(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1384(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

/* KILL_ANY_AMBIENT_SPEECH */ void sub_53198(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        PRINTSTRING( "\n KILL_ANY_AMBIENT_SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 3) AND (g_U1[I] >= 1))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

/* KILL_ANY_MISSION_SPEECH */ void sub_53398(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        PRINTSTRING( "\n KILL_ANY_MISSION_SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

/* CUTSYS_DEFAULT_HANDLECUTSCENE */ void sub_53605()
{
    return;
}

/* F_MID04B_POST */ int sub_53655()
{
     /* F_CREATE_RESTAURANT_CRACHA_DEAD_BODY */ sub_45143();
    if (NOT (IS_PED_DEAD( g_U4186 )))
    {
        SET_PED_INVINCIBLE( g_U4186, 1 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U4186, 1 );
        FREEZE_PED_POSITION( g_U4186, 1 );
    }
    return 1;
}

/* P_MID04B_PREPARE_BLENDOUT */ void sub_53753()
{
     /* WRITESCRIPTLOG */ sub_822( "AT", "P_MID04B_PREPARE_BLENDOUT", 0 );
    DISPLAY_HUD( 0 );
    CAMERA_PLAY_ANIMATED( "LEVEL_S_STAD_CP_03", "B_OUT_MID_04B_STADIUM_FWD_CAM", 0, g_U649, 0.00000000, 0, 0 );
    l_U1965._fU212 = 1;
    l_U1965._fU164 = 2;
     /* MAL_SETLOCKEDANDREGISTEREDONPLAYER */ sub_3186( ref l_U1965._fU0 );
     /* SB_HANDLESNIPERBEHAVIOUR */ sub_2046( ref l_U1965 );
    if (NOT (ISEQ_QUERY_STATE( -263036009, 3 )))
    {
         /* TELEPORTPED */ sub_43419(  /* PLAYER_PED_ID */ sub_1384(), 88.35500000, 23.27600000, 9.61400000, 90.35800000 );
         /* MAL_REGISTERPEDWITHISEQ */ sub_43536(  /* PLAYER_PED_ID */ sub_1384(), -263036009, "Max" );
        ISEQ_START( -263036009 );
         /* P_STREAMREQ_SCRIPT_STREAM_PLAY_FRONTEND */ sub_54070( "MID_04B_STAD_CON_RUN_BLENDOUT", ref g_U2034 );
         /* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ sub_9204( "MID_04B_STAD_CON_RUN_BLENDOUT", ref g_U2034 );
    }
    if (NOT (ISEQ_QUERY_ENTITY_STATE( -1310389432, "Passos", 3 )))
    {
         /* MAL_TELEPORTPED */ sub_47278( g_U4007, 88.40800000, 22.80700000, 9.58500000, 90.35800000 );
         /* MAL_REGISTERPEDWITHISEQ */ sub_43536( g_U4007, -1310389432, "Passos" );
        ISEQ_START( -1310389432 );
    }
     /* MAL_REMOVEALLGUNSFROMPED */ sub_54685( ref g_U4187[1] );
     /* MAL_REMOVEALLGUNSFROMPED */ sub_54685( ref g_U4187[2] );
    if (NOT (ISEQ_QUERY_STATE( 1154908660, 3 )))
    {
         /* TELEPORTPED */ sub_43419( g_U4187[1], l_U1957, l_U1960 );
         /* TELEPORTPED */ sub_43419( g_U4187[2], l_U1961, l_U1964 );
         /* MAL_REGISTERPEDWITHISEQ */ sub_43536( g_U4187[1], 1154908660, "Sniped" );
         /* MAL_REGISTERPEDWITHISEQ */ sub_43536( g_U4187[2], 1154908660, "Executed" );
        ISEQ_START( 1154908660 );
    }
    if (l_U130)
    {
         /* P_STREAMREQ_ISEQ_INSERT */ sub_33249( 1812693303, ref g_U1263 );
         /* CLEANPED */ sub_9813( g_U4186 );
    }
     /* MAL_RECREATEOBJECTWITHNOROTATION */ sub_55701( ref l_U2206, -1601625009, 40.00000000, 61.90000000, 14.20000000, 1, 0 );
    SET_OBJECT_COLLISION( l_U2206, 0 );
    AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_3_4_6", "", 0, 4000, -1, -1082130432, 0 );
    if ((WAS_CUTSCENE_SKIPPED()) || (g_U855 == 6))
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() )))
        {
            if (NOT (IS_SCRIPTED_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1384() )))
            {
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_55979( ref l_U143 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 0,  /* PLAYER_PED_ID */ sub_1384(), "MAX", ref l_U143, 2, 0 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 1,  /* PLAYER_PED_ID */ sub_1384(), "MAX", ref l_U143, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_56357( "SSTD_STMA", ref l_U143, 8, 1 );
            }
        }
    }
     /* P_CREATE_AND_START_TIMER */ sub_57262( ref l_U192, 6110 );
     /* P_CREATE_AND_START_TIMER */ sub_57262( ref l_U201, 3000 );
     /* P_PRE_FOODCOURT_VCPF */ sub_57337();
     /* MAL_ENEMYSTRUCTCREATE */ sub_58342( ref l_U1207 );
    return;
}

/* P_STREAMREQ_SCRIPT_STREAM_PLAY_FRONTEND */ void sub_54070(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if ( /* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ sub_8453( uParam0, uParam1 ))
    {
        iVar4 =  /* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ sub_8662( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            DISPLAYF( "[CCB]### Playing the SCRIPT_STREAM: {} ###", 1, 1281, ref (uParam1^)[iVar4]._fU0 );
            PLAY_SCRIPT_STREAM_FRONTEND( iVar4 );
        }
        else
        {
            DISPLAYF( "[CCB]### The SCRIPT_STREAM slot is NOT valid!!! {} ###", 1, 1537, uParam0 );
            SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        DISPLAYF( "[CCB]### The SCRIPT_STREAM asset is NOT loaded!!! {} ###", 1, 1537, uParam0 );
        SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

/* MAL_REMOVEALLGUNSFROMPED */ void sub_54685(unknown uParam0)
{
     /* MAL_WRITESCRIPTLOG */ sub_2550( "MAL_RemoveAllGunsFromPed started" );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
         /* MAL_WRITESCRIPTLOG */ sub_2550( "MAL_RemoveAllGunsFromPed WEAPONHAND_LEFT" );
         /* WRITE_INT */ sub_54838( GET_WEAPON_FROM_HAND( (uParam0^), 1, 0 ) );
        if ((GET_WEAPON_FROM_HAND( (uParam0^), 1, 0 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HAND( (uParam0^), 1, 0 ) );
        }
         /* WRITE_INT */ sub_54838( GET_WEAPON_FROM_HAND( (uParam0^), 1, 0 ) );
         /* MAL_WRITESCRIPTLOG */ sub_2550( "MAL_RemoveAllGunsFromPed WEAPONHAND_RIGHT" );
         /* WRITE_INT */ sub_54838( GET_WEAPON_FROM_HAND( (uParam0^), 0, 0 ) );
        if ((GET_WEAPON_FROM_HAND( (uParam0^), 0, 0 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HAND( (uParam0^), 0, 0 ) );
        }
         /* WRITE_INT */ sub_54838( GET_WEAPON_FROM_HAND( (uParam0^), 0, 0 ) );
         /* MAL_WRITESCRIPTLOG */ sub_2550( "MAL_RemoveAllGunsFromPed WEAPONHOLSTER_PISTOL_LEFT" );
         /* WRITE_INT */ sub_54838( GET_WEAPON_FROM_HOLSTER( (uParam0^), 1 ) );
        if ((GET_WEAPON_FROM_HOLSTER( (uParam0^), 1 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HOLSTER( (uParam0^), 1 ) );
        }
         /* WRITE_INT */ sub_54838( GET_WEAPON_FROM_HOLSTER( (uParam0^), 1 ) );
         /* MAL_WRITESCRIPTLOG */ sub_2550( "MAL_RemoveAllGunsFromPed WEAPONHOLSTER_PISTOL_RIGHT" );
         /* WRITE_INT */ sub_54838( GET_WEAPON_FROM_HOLSTER( (uParam0^), 0 ) );
        if ((GET_WEAPON_FROM_HOLSTER( (uParam0^), 0 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HOLSTER( (uParam0^), 0 ) );
        }
         /* WRITE_INT */ sub_54838( GET_WEAPON_FROM_HOLSTER( (uParam0^), 0 ) );
         /* MAL_WRITESCRIPTLOG */ sub_2550( "MAL_RemoveAllGunsFromPed WEAPONHOLSTER_RIFLE" );
         /* WRITE_INT */ sub_54838( GET_WEAPON_FROM_HOLSTER( (uParam0^), 2 ) );
        if ((GET_WEAPON_FROM_HOLSTER( (uParam0^), 2 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HOLSTER( (uParam0^), 2 ) );
        }
         /* WRITE_INT */ sub_54838( GET_WEAPON_FROM_HOLSTER( (uParam0^), 2 ) );
    }
     /* MAL_WRITESCRIPTLOG */ sub_2550( "MAL_RemoveAllGunsFromPed ended" );
    return;
}

/* WRITE_INT */ void sub_54838(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* MAL_RECREATEOBJECTWITHNOROTATION */ void sub_55701(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
     /* MAL_RECREATEOBJECT */ sub_55763( uParam0, uParam1, uParam2, g_U649, uParam5, uParam6 );
    return;
}

/* MAL_RECREATEOBJECT */ void sub_55763(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
     /* CLEANOBJECT */ sub_10490( (uParam0^) );
    (uParam0^) =  /* CREATEOBJECTNOOFFSET */ sub_49923( uParam1, uParam2, uParam5, 0, uParam9, 0 );
    FREEZE_OBJECT_POSITION( (uParam0^), uParam8 );
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_55979(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_56090(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_56357(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_56402( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_56402(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_56489( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_56489(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_56541( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_57059( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_56541(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_57059(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* P_CREATE_AND_START_TIMER */ void sub_57262(unknown uParam0, unknown uParam1)
{
     /* CREATETIMER */ sub_2750( uParam0, uParam1, 1, 0 );
     /* STARTTIMER */ sub_2902( uParam0 );
    return;
}

/* P_PRE_FOODCOURT_VCPF */ void sub_57337()
{
    char[32] cVar2;

     /* MAL_WRITESCRIPTLOG */ sub_2550( "P_Pre_FOODCOURT_VCPF" );
     /* STAD_ENEMYSTRUCTFILL */ sub_57454( ref l_U1013[0], 83.65000000, 66.50000000, 14.04000000, 55.00000000, g_U2500, -78608831, g_U2384, 4, 10, 1, 68019059, 0 );
     /* STAD_ENEMYSTRUCTFILL */ sub_57454( ref l_U1013[1], 84.00000000, 65.50000000, 14.04000000, 55.00000000, g_U2500, 1334062158, g_U2384, 7, 20, 1, 1478009203, 0 );
     /* STAD_ENEMYSTRUCTFILL */ sub_57454( ref l_U1013[2], 63.80000000, 71.37000000, 14.10000000, 300.00000000, g_U2500, -947527620, g_U2384, 6, 20, 1, 1478009203, 0 );
     /* STAD_ENEMYSTRUCTFILL */ sub_57454( ref l_U1013[3], 86.70400000, 54.39400000, 14.04000000, 40.00000000, g_U2500, 1938398204, g_U2384, 4, 10, 1, 68019059, 0 );
     /* STAD_ENEMYSTRUCTFILL */ sub_57454( ref l_U1207, 49.59829000, 81.86976000, 12.99799000, 288.56000000, g_U2508, -720005599, g_U2384, 4, 30, 0, 1478009203, 1 );
     /* STAD_ENEMYSTRUCTFILL */ sub_57454( ref l_U1270[0], 69.44875000, 77.58754000, 9.54103100, 160.18340000, g_U2508, -803235789, g_U2384, 5, 15, 1, 68019059, 0 );
     /* STAD_ENEMYSTRUCTFILL */ sub_57454( ref l_U1270[1], 69.90605000, 78.94419000, 9.55876800, 161.06410000, g_U2508, -578390938, g_U2384, 5, 15, 1, 434544317, 0 );
     /* STAD_ENEMYSTRUCTFILL */ sub_57454( ref l_U1270[2], 71.22384000, 78.47866000, 9.53894900, 90.00000000, g_U2508, -641386835, g_U2384, 5, 15, 1, 68019059, 0 );
     /* STAD_ENEMYSTRUCTFILL */ sub_57454( ref l_U1270[3], 72.49902000, 77.78740000, 9.54347800, 90.00000000, g_U2508, -1395748641, g_U2384, 5, 15, 1, 434544317, 0 );
     /* STAD_ENEMYSTRUCTFILL */ sub_57454( ref l_U1270[4], 71.92077000, 76.29224000, 9.53656300, 90.00000000, g_U2508, -1023592701, g_U2384, 5, 15, 1, 68019059, 0 );
    StrCopy( ref cVar2, "Room_Pressbooth", 32 );
     /* STAD_ENEMYSTRUCTFILL */ sub_57454( ref l_U1499, 43.06530000, 65.15382000, 12.56234000, 0, cVar2, -78608831, g_U2384, 1084227584, 1094713344, 1, 1478009203, 1 );
    return;
}

/* STAD_ENEMYSTRUCTFILL */ void sub_57454(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19)
{
     /* MAL_ENEMYSTRUCTFILL */ sub_57530( uParam0, uParam1, uParam4, uParam18, 68019059, 2, g_U3928, uParam15, uParam16, uParam14, uParam19, uParam17, uParam13, uParam5 );
    return;
}

/* MAL_ENEMYSTRUCTFILL */ void sub_57530(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29)
{
    iParam0->_fU56 = {uParam1};
    iParam0->_fU68 = uParam4;
    iParam0->_fU72 = uParam5;
    iParam0->_fU76 = uParam6;
    iParam0->_fU80 = uParam7;
    iParam0->_fU84 = {uParam8};
    iParam0->_fU116 = uParam16;
    iParam0->_fU120 = uParam17;
    iParam0->_fU124 = uParam18;
    iParam0->_fU128 = uParam19;
    iParam0->_fU132 = uParam20;
    iParam0->_fU136 = uParam21;
    iParam0->_fU140 = {uParam22};
    return;
}

/* MAL_ENEMYSTRUCTCREATE */ void sub_58342(int iParam0)
{
    unknown uVar3;

     /* MAL_WRITESCRIPTLOG */ sub_2550( "MAL_EnemyStructCreate starting" );
     /* MAL_CREATEPEDADV */ sub_58481( iParam0 + 0, iParam0 + 4, iParam0->_fU56, iParam0->_fU68, iParam0->_fU72, iParam0->_fU80, iParam0->_fU84, iParam0->_fU116, iParam0->_fU120, iParam0->_fU124, 1 );
    if (NOT (ARE_STRINGS_EQUAL( iParam0 + 140, ref g_U652 )))
    {
        PRINTSTRING( "[MSWW] ### MAL_EnemyStructCreate adding ped to room: " );
         /* WRITE_STRING */ sub_14754( iParam0 + 140 );
         /* MAL_SETROOMFORPED */ sub_59124( iParam0 + 0, iParam0 + 140 );
    }
    if (iParam0->_fU128)
    {
         /* MAL_WRITESCRIPTLOG */ sub_2550( "MAL_EnemyStructCreate giving ped backup weapon" );
         /* MAL_GIVEPEDWEAPONINHOLSTER */ sub_59273( iParam0->_fU0, iParam0->_fU76, 25000, 1, 0 );
    }
    if (iParam0->_fU132)
    {
        uVar3 = GET_WEAPON_FROM_HAND( iParam0->_fU0, 0, 0 );
         /* MAL_TOGGLEWEAPONATTACHMENTTOWEAPON */ sub_59499( ref uVar3, 14, 1 );
    }
    if (iParam0->_fU136 != 0)
    {
         /* MAL_GIVEPEDPERSISTANTVARIATIONENUM */ sub_59662( iParam0 + 0, iParam0->_fU136 );
    }
    return iParam0->_fU0;
}

/* MAL_CREATEPEDADV */ void sub_58481(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19)
{
     /* P_CREATEPEDSTRUCT */ sub_45628( uParam1, uParam2, uParam5, uParam18, 7, 3, 2, 0, 0 );
    (uParam0^) =  /* MAL_CREATEPED */ sub_43919( uParam0, uParam1, 1, 1, uParam19 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
    }
     /* MAL_GIVEPEDWEAPON */ sub_47462( (uParam0^), uParam6, 25000, 0, 0 );
     /* MAL_SETTEMPLATEANDRANGES */ sub_58601( uParam0, ref uParam8, uParam16, uParam17, 1 );
     /* MAL_SETPEDCOMBATMOVEMENT */ sub_58932( uParam0, uParam7 );
    return (uParam0^);
}

/* MAL_SETTEMPLATEANDRANGES */ void sub_58601(unknown uParam0, unknown uParam1, float fParam2, float fParam3, boolean bParam4)
{
     /* MAL_WRITESCRIPTLOG */ sub_2550( "MAL_SetTemplateAndRanges" );
    PRINTSTRING( "[MSWW]### Template Name: " );
     /* WRITE_STRING */ sub_14754( uParam1 );
    PRINTSTRING( "[MSWW]### Min Range: " );
     /* WRITE_FLOAT */ sub_58745( fParam2 );
    PRINTSTRING( "[MSWW]### Max Range: " );
     /* WRITE_FLOAT */ sub_58745( fParam3 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    if (NOT bParam4)
    {
         /* MAL_SETPEDCOMBATATTRIBUTES */ sub_44063( uParam0, 1, 0 );
    }
    return;
}

/* WRITE_FLOAT */ void sub_58745(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* MAL_SETPEDCOMBATMOVEMENT */ void sub_58932(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETROOMFORPED */ void sub_59124(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_ROOM_FOR_PED_BY_NAME( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_GIVEPEDWEAPONINHOLSTER */ void sub_59273(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    int Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
            while (Result == 0)
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
                 /* MAL_WRITESCRIPTLOG */ sub_2550( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

/* MAL_TOGGLEWEAPONATTACHMENTTOWEAPON */ void sub_59499(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (GET_DOES_WEAPON_EXIST( (uParam0^) ))
    {
        if (bParam2)
        {
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
        else
        {
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
    }
    return;
}

/* MAL_GIVEPEDPERSISTANTVARIATIONENUM */ void sub_59662(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PERSISTENT_PED_VARIATION_ENUM( (uParam0^), uParam1 );
    }
    return;
}

/* F_MID04B_HANDLE_BLENDOUT */ int sub_59767()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;

    if (l_U153._fU52)
    {
         /* WRITESCRIPTLOG */ sub_822( "AT", "F_MID04B_HANDLE_BLENDOUT", 0 );
        if (NOT ( /* F_IMAGEFX_FADE_IN */ sub_59856()))
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        if (NOT (IS_PED_DEAD( g_U4187[1] )))
        {
            SET_PED_INVINCIBLE( g_U4187[1], 0 );
            SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U4187[1], 0 );
            FREEZE_PED_POSITION( g_U4187[1], 0 );
            SET_PED_CORPSE( g_U4187[1], 0 );
        }
        if (NOT (IS_PED_DEAD( g_U4187[2] )))
        {
            SET_PED_INVINCIBLE( g_U4187[2], 0 );
            SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U4187[2], 0 );
            FREEZE_PED_POSITION( g_U4187[2], 0 );
            SET_PED_CORPSE( g_U4187[2], 0 );
        }
        if (NOT (IS_PED_DEAD( l_U1965._fU0 )))
        {
            TASK_AIM_GUN_AT_PED( l_U1965._fU0, g_U4007, -1, 1 );
        }
    }
    if ( /* ISTIMERDONE */ sub_3623( ref l_U192 ))
    {
        uVar2 = { /* MAL_GETPEDCOORDS */ sub_60335( g_U4007 )};
        uVar2._fU8 += 2;
        SET_PED_SHOOTS_AT_COORD( l_U1965._fU0, uVar2 );
    }
    if ( /* MAL_ISACTINTCOMPLETED */ sub_60444( ref g_U4007, 45, 1 ))
    {
        if (NOT (IS_PED_DEAD( l_U1965._fU0 )))
        {
            TASK_AIM_GUN_AT_COORD( l_U1965._fU0, l_U1965._fU72, -1, 0 );
        }
    }
    if (NOT l_U181)
    {
        if (CAMERA_ANIMATED_CURRENT_TIME() > 7575)
        {
            l_U181 = 1;
             /* MAL_TELEPORTPED */ sub_47278( g_U4007, 81.86842000, 39.51786000, 9.59894100, 12.00000000 );
             /* MAL_PEDPLAYERACTIONTREENODE */ sub_60837( g_U4007, "/Global/PASSOS_FOODCOURT/PASSOS_FOODCOURT_SEQ/SUPPRESS/ENTER_COVER" );
        }
    }
    if (NOT l_U183._fU20)
    {
        if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_STAD_CP_03", "B_OUT_MID_04B_STADIUM_FWD_CAM" )) - 750))
        {
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( 0, 1065353216, 0 );
            CAMERA_ANIMATED_STOP( 1000, 1 );
            SIMULATE_PLAYER_INPUT_GAIT(  /* PLAYER_ID */ sub_1422(), 3, 1500, 0 );
             /* STARTTIMER */ sub_2902( ref l_U183 );
        }
    }
    if ( /* MAL_ENEMYSTRUCTARRAYCREATE */ sub_61100( ref l_U1013, "FoodcourtVCPF", ref l_U1190, 1.00000000, 1, 1 ))
    {
        if ( /* MAL_ENEMYSTRUCTARRAYCREATE */ sub_61100( ref l_U1270, "FC_Reinforce", ref l_U1491, 1.00000000, 1, 1 ))
        {
            if ( /* ISTIMERDONE */ sub_3623( ref l_U183 ))
            {
                 /* MAL_ENEMYSTRUCTCREATE */ sub_58342( ref l_U1499 );
                 /* P_POST_FOODCOURT_VCPF */ sub_62586();
                 /* KILL_SPEECH */ sub_65531( ref l_U143, 0 );
                return 1;
            }
        }
    }
    return 0;
}

/* F_IMAGEFX_FADE_IN */ int sub_59856()
{
    if (l_U75)
    {
         /* WRITESCRIPTLOG */ sub_822( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U75 = 0;
        return 1;
        break;
    }
     /* WRITESCRIPTLOG */ sub_822( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

/* MAL_GETPEDCOORDS */ vector sub_60335(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return "[dynamic result, ret vals = 3]";
        break;
        GET_PED_COORDS( uParam0 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        break;
    }
    return vector( 0, 0, 0);
}

/* MAL_ISACTINTCOMPLETED */ int sub_60444(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (( /* MAL_GETACTINTSTATUS */ sub_60483( (uParam0^), uParam1 )) == 1)
    {
        if (bParam2)
        {
             /* MAL_FINISHACTINT */ sub_60571( uParam0, uParam1 );
        }
        return 1;
    }
    return 0;
}

/* MAL_GETACTINTSTATUS */ int sub_60483(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 );
    }
    return 0;
}

/* MAL_FINISHACTINT */ void sub_60571(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_PEDPLAYERACTIONTREENODE */ void sub_60837(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_ACTION_TREE_PLAY_NODE( uParam0, uParam1 );
    }
    return;
}

/* MAL_ENEMYSTRUCTARRAYCREATE */ int sub_61100(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4, boolean bParam5)
{
    int I;

    PRINTSTRING( "[MSWW] ### MAL_EnemyStructArrayCreate starting: " );
     /* WRITE_STRING */ sub_14754( uParam1 );
    if (NOT bParam4)
    {
         /* P_SETUP_AI_GROUP */ sub_61217( uParam2, uParam3, 1 );
        for ( I = 0; I < (uParam0^); I++ )
        {
             /* MAL_ENEMYSTRUCTCREATE */ sub_58342( ref (uParam0^)[I] );
             /* P_QUICK_ADD_PED_TO_GROUP */ sub_61647( (uParam0^)[I]._fU0, uParam2 );
        }
         /* MAL_ESA_GIVEDEBUGNAMES */ sub_62045( uParam0, uParam1 );
    }
    else if ((uParam0^)[0]._fU172 == 0)
    {
         /* P_SETUP_AI_GROUP */ sub_61217( uParam2, uParam3, 1 );
    }
    if ((uParam0^)[0]._fU172 < (uParam0^))
    {
         /* MAL_ENEMYSTRUCTCREATE */ sub_58342( ref (uParam0^)[(uParam0^)[0]._fU172] );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_61647( (uParam0^)[(uParam0^)[0]._fU172]._fU0, uParam2 );
        (uParam0^)[0]._fU172++;
    }
    else
    {
         /* MAL_ESA_GIVEDEBUGNAMES */ sub_62045( uParam0, uParam1 );
        return 1;
    }
    if (bParam5)
    {
         /* MAL_ESA_PROCESSINGFREEZE */ sub_62336( uParam0, 1, 0, -1 );
    }
    return 0;
}

/* P_SETUP_AI_GROUP */ void sub_61217(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_61647(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_14754( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_61217( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_61217( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* MAL_ESA_GIVEDEBUGNAMES */ void sub_62045(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I]._fU0, ref cVar5 );
        }
    }
    return;
}

/* MAL_ESA_PROCESSINGFREEZE */ void sub_62336(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_PROCESSINGFREEZE */ sub_62413( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_PROCESSINGFREEZE */ void sub_62413(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_FREEZE_PROCESSING( iParam0->_fU0, uParam1 );
    }
    return;
}

/* P_POST_FOODCOURT_VCPF */ void sub_62586()
{
    int I;

     /* MAL_WRITESCRIPTLOG */ sub_2550( "P_Post_FOODCOURT_VCPF" );
     /* MAL_ES_SETPEDCOMBATMOVEMENT */ sub_62659( ref l_U1013[2], 0 );
     /* MAL_ESA_SETPEDARRAYRELATIONSHIP */ sub_62754( ref l_U1013, 2, 6 );
     /* MAL_ESA_FREEZE */ sub_62930( ref l_U1013, 1, 0, -1 );
     /* MAL_ESA_TELEPORTTOSPAWN */ sub_63088( ref l_U1013, 0, -1 );
     /* MAL_ESA_CANINITIATEBULLETCAM */ sub_63338( ref l_U1013, 1 );
     /* MAL_ESA_SETFLASHLIGHTDATA */ sub_63527( ref l_U1013, "Flashlight_Stadium" );
    SET_BULLET_CAM_PREF( l_U1013[0]._fU0, "ALL_LMS_01", "ALL_LMS_01", "ALL_LMS_01", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
    SET_BULLET_CAM_PREF( l_U1013[1]._fU0, "ALL_LMS_01", "ALL_LMS_01", "ALL_LMS_01", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
    SET_BULLET_CAM_PREF( l_U1013[2]._fU0, "ALL_LMS_01", "ALL_LMS_01", "ALL_LMS_01", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
    SET_BULLET_CAM_PREF( l_U1013[3]._fU0, "ALL_LMS_01", "ALL_LMS_01", "ALL_LMS_01", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
    SET_PED_ALLOWED_TO_KNEEL_AND_FIRE( l_U1013[0]._fU0, 0 );
    SET_PED_ALLOWED_TO_KNEEL_AND_FIRE( l_U1013[1]._fU0, 0 );
    SET_PED_ALLOWED_TO_KNEEL_AND_FIRE( l_U1013[2]._fU0, 0 );
    SET_PED_ALLOWED_TO_KNEEL_AND_FIRE( l_U1013[3]._fU0, 0 );
    l_U1819[0] = l_U1812;
    l_U1819[1] = l_U1813;
    l_U1819[2] = l_U1814;
    l_U1819[3] = l_U1815;
    l_U1819[4] = l_U1816;
    l_U1819[5] = l_U1817;
    l_U1819[6] = l_U1818;
    l_U1827[0] = 5;
    l_U1827[1] = 4;
    l_U1830[0] = 6;
    l_U1830[1] = 4;
    l_U1833[0] = 3;
    l_U1833[1] = 4;
    l_U1836[0] = 1;
    l_U1836[1] = 2;
    l_U1839[0] = 0;
    l_U1839[1] = 1;
    l_U1842[0] = 0;
    l_U1842[1] = 1;
    for ( I = 0; I < 4; I++ )
    {
        l_U1845[I] = 0;
    }
    l_U1855[0] = {86.52000000, 51.38000000, 10.68000000};
    l_U1855[1] = {85.28000000, 54.56000000, 10.67000000};
    l_U1855[2] = {85.36000000, 54.71000000, 10.37000000};
    l_U1855[3] = {85.34000000, 54.51000000, 11.62000000};
    l_U1855[4] = {86.05000000, 54.19000000, 9.72000000};
    SET_PED_NAME_DEBUG( l_U1013[0]._fU0, "FoodcourtVCPF 0" );
    SET_PED_NAME_DEBUG( l_U1013[1]._fU0, "FoodcourtVCPF 1" );
    SET_PED_NAME_DEBUG( l_U1013[2]._fU0, "FoodcourtVCPF 2" );
    SET_PED_NAME_DEBUG( l_U1013[3]._fU0, "FoodcourtVCPF 3" );
     /* MAL_ES_FREEZE */ sub_62997( ref l_U1207, 1 );
     /* MAL_ES_TELEPORTTOSPAWN */ sub_63166( l_U1207 );
     /* MAL_ES_PROCESSINGFREEZE */ sub_62413( ref l_U1207, 1 );
     /* MAL_ES_SETPEDVISIBLE */ sub_64592( ref l_U1207, 0 );
     /* MAL_ES_GIVETETHER */ sub_64733( ref l_U1207, l_U440, 1 );
    SET_PED_CAN_SLOW_DOWN_WHEN_TURNING( l_U1207._fU0, 0 );
     /* MAL_ES_SETASONESHOTKILL */ sub_64888( l_U1207, 1 );
    SET_PED_NAME_DEBUG( l_U1207._fU0, "Ramp" );
     /* MAL_ES_CLEAN */ sub_10056( ref l_U1270[2] );
     /* MAL_ES_CLEAN */ sub_10056( ref l_U1270[4] );
     /* MAL_ESA_FREEZE */ sub_62930( ref l_U1270, 1, 0, -1 );
     /* MAL_ESA_TELEPORTTOSPAWN */ sub_63088( ref l_U1270, 0, -1 );
     /* MAL_ESA_GIVETETHERARRAY */ sub_65046( ref l_U1270, ref l_U2194, 1 );
     /* MAL_ESA_PROCESSINGFREEZE */ sub_62336( ref l_U1270, 1, 0, -1 );
     /* MAL_ESA_CANINITIATEBULLETCAM */ sub_63338( ref l_U1270, 1 );
    SET_PED_NAME_DEBUG( l_U1270[0]._fU0, "FC_Reinforce 0" );
    SET_PED_NAME_DEBUG( l_U1270[1]._fU0, "FC_Reinforce 1" );
    SET_PED_NAME_DEBUG( l_U1270[2]._fU0, "FC_Reinforce 2" );
    SET_PED_NAME_DEBUG( l_U1270[3]._fU0, "FC_Reinforce 3" );
    SET_PED_NAME_DEBUG( l_U1270[4]._fU0, "FC_Reinforce 4" );
     /* MAL_ES_FREEZE */ sub_62997( ref l_U1499, 1 );
     /* MAL_ES_PROCESSINGFREEZE */ sub_62413( ref l_U1499, 1 );
     /* MAL_ES_SETPEDVISIBLE */ sub_64592( ref l_U1499, 0 );
     /* MAL_ES_GIVETETHER */ sub_64733( ref l_U1499, l_U438, 1 );
    SET_PED_FIRE_AT_COVER( l_U1499._fU0, 0 );
    SET_PED_NAME_DEBUG( l_U1499._fU0, "Schroedinger" );
    return;
}

/* MAL_ES_SETPEDCOMBATMOVEMENT */ void sub_62659(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        iParam0->_fU80 = uParam1;
        SET_PED_COMBAT_MOVEMENT( iParam0->_fU0, uParam1 );
    }
    return;
}

/* MAL_ESA_SETPEDARRAYRELATIONSHIP */ void sub_62754(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* MAL_ES_SETPEDRELATIONSHIP */ sub_62824( ref (uParam0^)[I], uParam1, uParam2 );
    }
    return;
}

/* MAL_ES_SETPEDRELATIONSHIP */ void sub_62824(int iParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_RELATIONSHIP( iParam0->_fU0, uParam1, uParam2 );
    }
    return;
}

/* MAL_ESA_FREEZE */ void sub_62930(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_FREEZE */ sub_62997( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_FREEZE */ void sub_62997(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        FREEZE_PED_POSITION( iParam0->_fU0, uParam1 );
    }
    return;
}

/* MAL_ESA_TELEPORTTOSPAWN */ void sub_63088(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
         /* MAL_ES_TELEPORTTOSPAWN */ sub_63166( (uParam0^)[I] );
    }
    return;
}

/* MAL_ES_TELEPORTTOSPAWN */ void sub_63166(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43)
{
     /* MAL_ES_TELEPORT */ sub_63219( uParam0, uParam0._fU56, uParam0._fU68 );
    return;
}

/* MAL_ES_TELEPORT */ void sub_63219(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47)
{
    if (NOT (IS_PED_DEAD( uParam0._fU0 )))
    {
        SET_PED_COORDS( uParam0._fU0, uParam44, 1 );
        SET_PED_HEADING( uParam0._fU0, uParam47 );
    }
    return;
}

/* MAL_ESA_CANINITIATEBULLETCAM */ void sub_63338(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* MAL_ES_CANINITIATEBULLETCAM */ sub_63403( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_CANINITIATEBULLETCAM */ void sub_63403(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_CAN_INITIATE_BULLET_CAM( iParam0->_fU0, uParam1 );
    }
    return;
}

/* MAL_ESA_SETFLASHLIGHTDATA */ void sub_63527(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* MAL_ES_SETFLASHLIGHTDATA */ sub_63589( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_SETFLASHLIGHTDATA */ void sub_63589(int iParam0, unknown uParam1)
{
    if (iParam0->_fU132)
    {
        if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
        {
            SET_WEAPON_LIGHT_DATA_BY_NAME( GET_WEAPON_FROM_HAND( iParam0->_fU0, 0, 0 ), uParam1 );
        }
    }
    return;
}

/* MAL_ES_SETPEDVISIBLE */ void sub_64592(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_VISIBLE( iParam0->_fU0, uParam1 );
    }
    else
    {
         /* MAL_WRITESCRIPTLOG */ sub_2550( "MAL_ES_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

/* MAL_ES_GIVETETHER */ void sub_64733(int iParam0, unknown uParam1, unknown uParam2)
{
     /* P_TETHERPED */ sub_64771( ref uParam1, iParam0->_fU0, uParam2 );
    return;
}

/* P_TETHERPED */ void sub_64771(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

/* MAL_ES_SETASONESHOTKILL */ void sub_64888(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44)
{
    if (NOT (IS_PED_DEAD( uParam0._fU0 )))
    {
        SET_PED_AS_ONE_SHOT_KILL( uParam0._fU0, uParam44 );
    }
    return;
}

/* MAL_ESA_GIVETETHERARRAY */ void sub_65046(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
         /* MAL_ESA_GIVETETHER */ sub_65111( uParam0, (uParam1^)[I], uParam2, 0, -1 );
    }
    return;
}

/* MAL_ESA_GIVETETHER */ void sub_65111(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    int I;

    if (iParam4 == -1)
    {
        iParam4 = (uParam0^) - 1;
    }
    for ( I = uParam3; I <= iParam4; I++ )
    {
         /* MAL_ES_GIVETETHER */ sub_64733( ref (uParam0^)[I], uParam1, uParam2 );
    }
    return;
}

/* KILL_SPEECH */ void sub_65531(int iParam0, unknown uParam1)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_65559( (iParam0^) )))
    {
        ;
    }
    else
    {
        PRINTSTRING( "\n KILL SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
        {
            if (iParam0->_fU8 == g_U6[iParam0->_fU4])
            {
                STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
            }
        }
    }
    return;
}

/* IS_SCRIPT_SPEECH_STRUCT_VALID */ boolean sub_65559(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

/* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ void sub_65811(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
     /* WRITESCRIPTLOG */ sub_822( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return  /* CUTSYS_PRIVATE_CREATECUTSCENE */ sub_66035( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 65932, 65982, uParam8 );
}

/* CUTSYS_DEFAULT_PREPAREBLENDIN */ void sub_65932()
{
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDIN */ int sub_65982()
{
    return 1;
}

/* CUTSYS_PRIVATE_CREATECUTSCENE */ void sub_66035(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

/* CUTSYS_HANDLECUTSCENE */ void sub_66368(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
             /* WRITESCRIPTLOG */ sub_822( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
             /* WRITESCRIPTLOG */ sub_822( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                 /* WRITESCRIPTLOG */ sub_822( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
             /* WRITESCRIPTLOG */ sub_822( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
             /* WRITESCRIPTLOG */ sub_822( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
             /* WRITESCRIPTLOG */ sub_822( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
             /* LOADSEAMLESSCUTSCENE */ sub_38350( iParam0->_fU0, 0 );
             /* WRITESCRIPTLOG */ sub_822( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
             /* NIS_PRE_SETUP */ sub_67259( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
         /* NIS_PRE_SETUP */ sub_67259( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
         /* WRITESCRIPTLOG */ sub_822( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                 /* P_SET_PLAYER_WEAPONS_VISIBLE */ sub_67803( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
         /* NIS_PRE_SETUP */ sub_67259( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
             /* NIS_POST_SETUP */ sub_68183( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
         /* NIS_POST_SETUP */ sub_68183( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

/* NIS_PRE_SETUP */ void sub_67259(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1422(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1384(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1384() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1384(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* P_SET_PLAYER_WEAPONS_VISIBLE */ void sub_67803(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1384(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1384(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1384(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1384(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1384(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

/* NIS_POST_SETUP */ void sub_68183(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1422(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1384(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_68281();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_68281()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1384(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1384(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1384(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1384(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_68654(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_822( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_822( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_15919( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_68945( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_69422( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_69422( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_69682( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_69422( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_69682( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_69682( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_69422( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_69682( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_69682( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_69682( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_69422( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_69682( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_69682( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_69682( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_69682( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_71262( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_822( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_68945(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_12934( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_822( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_822( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_69422(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_69682(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_71262(int iParam0)
{
     /* WRITE_STRING */ sub_14754( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_71350( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_58745( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_58745( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_58745( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_54838( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_54838( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_54838( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_54838( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_54838( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_54838( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_54838( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_54838( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_54838( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_54838( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_54838( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_58745( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_54838( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_54838( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_54838( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_58745( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_72213( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_54838( iParam0->_fU52 );
     /* WRITE_STRING */ sub_14754( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_54838( iParam0->_fU96 );
     /* WRITE_STRING */ sub_14754( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_54838( iParam0->_fU100 );
     /* WRITE_STRING */ sub_14754( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_54838( iParam0->_fU104 );
     /* WRITE_STRING */ sub_14754( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_54838( iParam0->_fU108 );
     /* WRITE_STRING */ sub_14754( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_54838( iParam0->_fU112 );
     /* WRITE_STRING */ sub_14754( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_54838( iParam0->_fU116 );
     /* WRITE_STRING */ sub_14754( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_54838( iParam0->_fU120 );
     /* WRITE_STRING */ sub_14754( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_54838( iParam0->_fU124 );
     /* WRITE_STRING */ sub_14754( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_54838( iParam0->_fU128 );
     /* WRITE_STRING */ sub_14754( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_54838( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_54838( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_54838( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_71350(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_72213(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* P_HANDLE_STATE_CONCESSIONS_RUN */ void sub_73235(boolean bParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;

    if (bParam0)
    {
         /* P_CREATE_AND_START_TIMER */ sub_57262( ref l_U2197, 3500 );
        ENABLE_GRAVITY_WELL( "s_stad_manual_placement", "GravityWell_Entering_Concession", 1, 0, 0, 0 );
         /* CREATETIMER */ sub_2750( ref l_U2374, 1500, 1, 0 );
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_73387( ref l_U353, 0 ))
    {
         /* MAL_SETACTINT */ sub_73600( g_U4007, 58, 1000 );
        if ((NOT l_U2374._fU20) AND (NOT l_U2374._fU16))
        {
             /* STARTTIMER */ sub_2902( ref l_U2374 );
        }
        l_U1965._fU164 = 1;
        l_U1965._fU212 = 0;
        l_U1965._fU72 = {87.32078000, 25.52820000, 11.33464000};
        l_U1965._fU84 = {87.32078000, 25.52820000, 11.33464000};
    }
    if ( /* MAL_ISACTINTCOMPLETED */ sub_60444( ref g_U4007, 45, 1 ))
    {
        TASK_AIM_GUN_AT_COORD( l_U1965._fU0, l_U1965._fU72, -1, 0 );
    }
    if (l_U1965._fU212)
    {
        if ( /* ISTIMERDONE */ sub_3623( ref l_U2197 ))
        {
            l_U1965._fU212 = 0;
            l_U1965._fU72 = {87.32078000, 25.52820000, 11.33464000};
            l_U1965._fU84 = {87.32078000, 25.52820000, 11.33464000};
            if (NOT l_U353._fU64)
            {
                l_U353._fU64 = 1;
                 /* MAL_SETACTINT */ sub_73600( g_U4007, 58, 1000 );
            }
            if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_73387( ref l_U374, 0 ))
            {
                l_U1965._fU164 = 2;
                l_U395._fU64 = 0;
            }
            else if ((NOT l_U2374._fU20) AND (NOT l_U2374._fU16))
            {
                 /* STARTTIMER */ sub_2902( ref l_U2374 );
            }
            l_U1965._fU164 = 1;;
        }
    }
    else if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_73387( ref l_U374, 0 ))
    {
        l_U1965._fU164 = 2;
        l_U395._fU64 = 0;
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_73387( ref l_U395, 0 ))
    {
        if ((NOT l_U2374._fU20) AND (NOT l_U2374._fU16))
        {
             /* STARTTIMER */ sub_2902( ref l_U2374 );
        }
        l_U1965._fU164 = 1;
        l_U374._fU64 = 0;
    }
    if ( /* ISTIMERDONE */ sub_3623( ref l_U2374 ))
    {
        SET_PED_PERFECT_ACCURACY_OVERRIDE( l_U1965._fU0, 1 );
    }
     /* P_PED_Z_SAFETY_CHECK */ sub_74170( l_U2040, 11.00000000, 1, 0 );
    if ( /* F_IS_PASSOS_IN_FOOD_COURT_ENTRANCE */ sub_74284())
    {
         /* P_PASSOS_ENTER_FOOD_COURT */ sub_74431();
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_73387( ref l_U736, 0 ))
    {
         /* P_SPEECH_PLAY_MONOLOGUE */ sub_74626( "SSTD_BTTB", ref uVar3 );
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_73387( ref l_U227, 0 ))
    {
         /* P_CLOSEDOOR */ sub_74751( ref g_U3269, 0 );
         /* P_CLOSEDOOR */ sub_74751( ref g_U3276, 0 );
         /* MAL_FINISHACTINT */ sub_60571( ref g_U4007, 58 );
        l_U128 = 10;
         /* WRITESCRIPTLOG */ sub_822( "GA", "eCheckpointState = CP_CONCESSIONS_HIDING", 0 );
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_73387(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_73463(  /* PLAYER_PED_ID */ sub_1384(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* F_ISPEDINTRIGGERBOX */ int sub_73463(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* MAL_SETACTINT */ void sub_73600(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_SET_ACTION_INTENTION( uParam0, uParam1, uParam2, g_U649 );
    }
    return;
}

/* P_PED_Z_SAFETY_CHECK */ void sub_74170(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                 /* CLEANPED */ sub_9813( uParam0 );
            }
        }
    }
    return;
}

/* F_IS_PASSOS_IN_FOOD_COURT_ENTRANCE */ int sub_74284()
{
    if (NOT (IS_PED_DEAD( g_U4007 )))
    {
        if ((PED_GET_ACTION_INTENTION_STATUS( g_U4007, 47 )) == 1)
        {
             /* MAL_WRITESCRIPTLOG */ sub_2550( "F_IS_PASSOS_IN_FOOD_COURT_ENTRANCE" );
            return 1;
        }
    }
    return 0;
}

/* P_PASSOS_ENTER_FOOD_COURT */ void sub_74431()
{
     /* MAL_WRITESCRIPTLOG */ sub_2550( "P_PASSOS_ENTER_FOOD_COURT" );
    if (NOT (IS_PED_DEAD( g_U4007 )))
    {
        PED_FINISH_ACTION_INTENTION( g_U4007, 47 );
         /* MAL_TELEPORTPED */ sub_47278( g_U4007, 82.18000000, 50.08000000, 9.58000000, -50.00000000 );
        PED_SET_ACTION_INTENTION( g_U4007, 48, 1000, g_U649 );
    }
    return;
}

/* P_SPEECH_PLAY_MONOLOGUE */ void sub_74626(unknown uParam0, unknown uParam1)
{
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_55979( uParam1 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 0,  /* PLAYER_PED_ID */ sub_1384(), "MAX", uParam1, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 1,  /* PLAYER_PED_ID */ sub_1384(), "MAX", uParam1, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_56357( uParam0, uParam1, 8, 1 );
    return;
}

/* P_CLOSEDOOR */ void sub_74751(int iParam0, int iParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_50922( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_51006( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

/* P_HANDLE_STATE_CONCESSIONS_HIDING */ void sub_74999(boolean bParam0)
{
    if (bParam0)
    {
         /* P_CREATE_AND_START_TIMER */ sub_57262( ref l_U1873, l_U1883 );
        l_U1965._fU164 = 2;
         /* P_PASSOS_FOOD_COURT_TAKE_COVER */ sub_75076();
         /* P_PLAY_MAX_PASSOS_DIALOGUE */ sub_75223( "SSTD_STPB", ref l_U2020 );
        l_U132 = 1;
         /* P_GBL_REFRESH_PAYNE_KILLER_COUNT */ sub_75372();
         /* CLEANOBJECT */ sub_10490( l_U2206 );
        STREAM_HELPERS_REQUEST_AT_LOC( 84.59229000, 31.32314000, 9.59993600, 0 );
    }
    if (( /* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ sub_75580( ref l_U2207 )) == 1)
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_55979( ref l_U2363 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 0,  /* PLAYER_PED_ID */ sub_1384(), "MAX", ref l_U2363, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 1,  /* PLAYER_PED_ID */ sub_1384(), "MAX", ref l_U2363, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_56357( "EXPLORE_ITEM", ref l_U2363, 8, 1 );
    }
     /* F_HANDLE_POI */ sub_75997( ref l_U2207 );
    if (l_U132 == 1)
    {
        if (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_77758()))
        {
             /* P_HANDLE_AMBIENT_SPEECH */ sub_77858();
        }
    }
    if ( /* F_IS_PASSOS_IN_FOOD_COURT_ENTRANCE */ sub_74284())
    {
         /* P_PASSOS_ENTER_FOOD_COURT */ sub_74431();
    }
    if ( /* ISTIMERDONE */ sub_3623( ref l_U1873 ))
    {
        l_U1882 = 1;
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_73387( ref l_U248, 0 ))
    {
         /* SB_DESTROYSNIPER */ sub_10185( ref l_U1965 );
         /* P_CREATE_1ST_SNIPER */ sub_79191();
        ENABLE_GRAVITY_WELL( "s_stad_manual_placement", "GravityWell_Entering_Concession", 0, 0, 0, 0 );
         /* P_LOCK_FOOD_COURT_DOORS */ sub_79757();
         /* P_SET_PED_ROOM */ sub_79830( g_U4007, ref g_U2500 );
        if (NOT l_U1196)
        {
             /* P_ACTIVATE_FOODCOURT_VCPF */ sub_79902();
            l_U1196 = 1;
        }
    }
    if ((NOT l_U1196) AND (l_U1882))
    {
        if ( /* F_DID_PLAYER_FIRE_WEAPON */ sub_80555())
        {
             /* WRITESCRIPTLOG */ sub_822( "[SA]", "Player fired weapon before guards spawned. Spawning and alerting guards!", 0 );
             /* P_ACTIVATE_FOODCOURT_VCPF */ sub_79902();
            l_U1196 = 1;
            l_U128 = 12;
             /* WRITESCRIPTLOG */ sub_822( "GA", "eCheckpointState = CP_CONCESSION_FIGHT", 0 );
        }
    }
    if (( /* HAS_CONCESSION_VCPF_BEEN_ALERTED */ sub_80820()) AND (l_U1196))
    {
        l_U128 = 12;
         /* WRITESCRIPTLOG */ sub_822( "GA", "eCheckpointState = CP_CONCESSION_FIGHT", 0 );
        SET_PED_HAS_SPECIAL_GUN_SOUND( g_U4007, 0 );
    }
    if (l_U1196)
    {
        if (NOT (IS_PED_DEAD( l_U1013[0]._fU0 )))
        {
            if (GET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1013[0]._fU0 ))
            {
                 /* MAL_ESA_BLOCK */ sub_80218( ref l_U1013, 0, 0, -1 );
            }
        }
    }
    if ( /* F_DID_CP_LEAVE_FOOD_COURT */ sub_81489())
    {
         /* WRITESCRIPTLOG */ sub_822( "GA", "Concession enemies left.", 0 );
        l_U1543 = 1;
         /* MAL_ES_CLEAN */ sub_10056( ref l_U1499 );
         /* P_CONCESSION_ENEMIES_LEAVE_NIS_START */ sub_81734();
        l_U128 = 11;
         /* WRITESCRIPTLOG */ sub_822( "GA", "eCheckpointState = CP_NIS_CP_LEAVE", 0 );
        SET_PED_HAS_SPECIAL_GUN_SOUND( g_U4007, 0 );
    }
    return;
}

/* P_PASSOS_FOOD_COURT_TAKE_COVER */ void sub_75076()
{
     /* MAL_WRITESCRIPTLOG */ sub_2550( "P_PASSOS_FOOD_COURT_TAKE_COVER" );
    if (NOT (IS_PED_DEAD( g_U4007 )))
    {
        PED_SET_ACTION_INTENTION( g_U4007, 49, 10000, g_U649 );
    }
    return;
}

/* P_PLAY_MAX_PASSOS_DIALOGUE */ void sub_75223(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() ))) AND (NOT (IS_PED_DEAD( g_U4007 ))))
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_55979( uParam1 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 1, g_U4007, "PASSOS", uParam1, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 0,  /* PLAYER_PED_ID */ sub_1384(), "MAX", uParam1, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_56357( uParam0, uParam1, 7, 1 );
    }
    return;
}

/* P_GBL_REFRESH_PAYNE_KILLER_COUNT */ void sub_75372()
{
     /* WRITESCRIPTLOG */ sub_822( "MF", "P_GBL_REFRESH_PAYNE_KILLER_COUNT - START", 0 );
    g_U4002 = GET_PAYNEKILLER_AMT();
     /* WRITESCRIPTLOG */ sub_822( "MF", "P_GBL_REFRESH_PAYNE_KILLER_COUNT - END", 0 );
    return;
}

/* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ int sub_75580(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND (( /* F_IS_POI_AVAILABLE */ sub_75626( iParam0 )) == 0)))
    {
        if ((( /* F_HASACTIONBEENPRESSED */ sub_75811()) == 1) AND (((IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_1384() )) == 0) AND (((IS_PED_GETTING_UP(  /* PLAYER_PED_ID */ sub_1384() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP(  /* PLAYER_PED_ID */ sub_1384() )) == 0) AND (((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_1384() )) == 0) AND (((IS_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1384() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

/* F_IS_POI_AVAILABLE */ void sub_75626(int iParam0)
{
    return iParam0->_fU56;
}

/* F_HASACTIONBEENPRESSED */ int sub_75811()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

/* F_HANDLE_POI */ int sub_75997(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1384() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_73463(  /* PLAYER_PED_ID */ sub_1384(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_73463(  /* PLAYER_PED_ID */ sub_1384(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_11007( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND (( /* F_ISACTIONINGAVAILABLE */ sub_11103( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (( /* F_HASACTIONBEENPRESSED */ sub_75811()) == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                             /* P_ENABLE_POI */ sub_10549( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                             /* P_ENABLEPOIGLINT */ sub_10608( iParam0, 0 );
                             /* P_ENABLEPOIINTERACTIONTEXT */ sub_10827( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                             /* P_ENABLEPOIGLINT */ sub_10608( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1384(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                         /* P_ENABLEPOIGLINT */ sub_10608( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_ENABLEPOIINTERACTIONTEXT */ sub_10827( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED(  /* PLAYER_PED_ID */ sub_1384(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() )) == 0)
                    {
                        TASK_LOOK_AT_COORD(  /* PLAYER_PED_ID */ sub_1384(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1384(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                     /* P_ENABLEPOIGLINT */ sub_10608( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                     /* P_ENABLEPOIINTERACTIONTEXT */ sub_10827( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_1384() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1384(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                 /* P_ENABLEPOIINTERACTIONTEXT */ sub_10827( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

/* IS_ANY_SPEECH_CURRENTLY_PLAYING */ void sub_77758()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

/* P_HANDLE_AMBIENT_SPEECH */ void sub_77858()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ( /* F_ISPLAYERINTRIGGERREGIONFIRSTTIME */ sub_77899( ref l_U468, 0 ))
    {
        ;
    }
    if (NOT ( /* HASTIMERBEENACTIVATED */ sub_5115( ref g_U3992 )))
    {
         /* P_CREATE_AND_START_TIMER */ sub_57262( ref g_U3992, g_U4001 );
    }
    if ((TIME_SINCE_LAST_MONOLOGUE() > 5000) AND ( /* F_GBL_HAS_PLAYER_JUST_ACQUIRED_PAIN_KILLERS */ sub_78264()))
    {
         /* WRITESCRIPTLOG */ sub_822( "MF", "Playing Speech: SSTD_MFSP", 0 );
         /* P_SPEECH_PLAY_MONOLOGUE */ sub_74626( ref g_U4003, ref uVar2 );
         /* RESETTIMER */ sub_5673( ref g_U3992 );
        return;
    }
    if ( /* F_ISPLAYERINTRIGGERREGION */ sub_77971( ref l_U757, 0 ))
    {
        if ( /* F_GBL_IS_PLAYER_READY_TO_SAY_EXPLORE_SPEECH_MONOLOGUE */ sub_78575( ref l_U1004, 10000, 20000 ))
        {
             /* WRITESCRIPTLOG */ sub_822( "MF", "Playing Speech: SSTD_PECH", 0 );
             /* P_SPEECH_PLAY_MONOLOGUE */ sub_74626( "SSTD_PECH", ref uVar2 );
            return;
        }
    }
    else if ((NOT l_U1004._fU16) AND ( /* HASTIMERBEENACTIVATED */ sub_5115( ref l_U1004 )))
    {
         /* WRITESCRIPTLOG */ sub_822( "MF", "Disabling ambient dialogue timer: tmr_FoodCourt_Amb_Mono", 0 );
         /* DISABLETIMER */ sub_79079( ref l_U1004 );
    }
    return;
}

/* F_ISPLAYERINTRIGGERREGIONFIRSTTIME */ void sub_77899(int iParam0, unknown uParam1)
{
    if (iParam0->_fU548)
    {
        return 0;
    }
    else
    {
        iParam0->_fU548 =  /* F_ISPLAYERINTRIGGERREGION */ sub_77971( iParam0, uParam1 );
    }
    return iParam0->_fU548;
}

/* F_ISPLAYERINTRIGGERREGION */ void sub_77971(int iParam0, unknown uParam1)
{
    int Result;
    int I;
    int J;

    Result = 0;
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() )))
    {
        for ( I = 0; I < iParam0->_fU508; I++ )
        {
            if ( /* F_ISPLAYERINTRIGGERBOX */ sub_78058( iParam0->_fU0[I] ))
            {
                Result = 1;
            }
        }
    }
    if ((uParam1) AND (Result))
    {
        for ( J = 0; J < iParam0->_fU508; J++ )
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( ref iParam0->_fU0[J]._fU0, 0 );
        }
    }
    iParam0->_fU548 = 1;
    return Result;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_78058(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_73463(  /* PLAYER_PED_ID */ sub_1384(), uParam0 );
}

/* F_GBL_HAS_PLAYER_JUST_ACQUIRED_PAIN_KILLERS */ int sub_78264()
{
    if (GET_PAYNEKILLER_AMT() > g_U4002)
    {
         /* WRITESCRIPTLOG */ sub_822( "MF", "Player picked up Payne Killers!", 0 );
        PRINTSTRING( "HAD: " );
         /* WRITE_INT */ sub_54838( g_U4002 );
        PRINTSTRING( "NOW: " );
         /* WRITE_INT */ sub_54838( GET_PAYNEKILLER_AMT() );
        g_U4002 = GET_PAYNEKILLER_AMT();
        return 1;
    }
    g_U4002 = GET_PAYNEKILLER_AMT();
    return 0;
}

/* F_GBL_IS_PLAYER_READY_TO_SAY_EXPLORE_SPEECH_MONOLOGUE */ int sub_78575(int iParam0, unknown uParam1, unknown uParam2)
{
    if (NOT ( /* HASTIMERBEENACTIVATED */ sub_5115( iParam0 )))
    {
         /* WRITESCRIPTLOG */ sub_822( "MF", "F_GBL_IS_PLAYER_READY_TO_SAY_EXPLORE_SPEECH_MONOLOGUE - Starting Timer", 0 );
         /* CREATETIMER */ sub_2750( iParam0, 5000, 1, 0 );
         /* STARTTIMER */ sub_2902( iParam0 );
    }
    if ((GET_PED_SPEED(  /* PLAYER_PED_ID */ sub_1384() )) < 0.10000000)
    {
        iParam0->_fU12 = uParam1;
    }
    else
    {
        iParam0->_fU12 = uParam2;
    }
    if ( /* ISTIMERDONE */ sub_3623( iParam0 ))
    {
         /* WRITESCRIPTLOG */ sub_822( "MF", "F_GBL_IS_PLAYER_READY_TO_SAY_EXPLORE_SPEECH_MONOLOGUE - Timer is complete!", 0 );
        return 1;
    }
    return 0;
}

/* DISABLETIMER */ void sub_79079(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

/* P_CREATE_1ST_SNIPER */ void sub_79191()
{
     /* MAL_WRITESCRIPTLOG */ sub_2550( "P_CREATE_1ST_SNIPER" );
     /* CLEANPED */ sub_9813( l_U2040 );
     /* P_CREATEPEDSTRUCT */ sub_45628( ref l_U2041, l_U2054, l_U2057, g_U2384, 7, 3, 2, 0, 0 );
    l_U2040 =  /* MAL_CREATEPED */ sub_43919( ref l_U2040, ref l_U2041, 1, 0, 0 );
     /* MAL_GIVEPEDPERSISTANTVARIATION */ sub_45782( ref l_U2040, "M3_CP_S1A_Avg" );
     /* MAL_STANDSTILL */ sub_46009( ref l_U2040 );
     /* MAL_GIVEPEDWEAPON */ sub_47462( l_U2040, 1194438308, 25000, 0, 0 );
     /* MAL_SETTEMPLATEANDRANGES */ sub_58601( ref l_U2040, ref g_U3928, 3, 15, 1 );
     /* MAL_GIVEPEDHARDTETHER */ sub_79393( ref l_U2040, l_U437 );
     /* MAL_HIDEINCOVER */ sub_79505( l_U2040, "foodCourt_Simple", "Corner Position25" );
    SET_PED_CAN_BE_MELEED( l_U2040, 0 );
    SET_PED_CAN_MELEE( l_U2040, 0 );
    SET_PED_NAME_DEBUG( l_U2040, "piAttSniper" );
    return;
}

/* MAL_GIVEPEDHARDTETHER */ void sub_79393(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
         /* P_TETHERPED */ sub_64771( ref uParam1, (uParam0^), 1 );
    }
    return;
}

/* MAL_HIDEINCOVER */ void sub_79505(unknown uParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        OPEN_SEQUENCE_TASK( ref uVar5 );
        TASK_COMBAT_SNAP_TO_COVER( 0, uParam1, uParam2, 0 );
        CLOSE_SEQUENCE_TASK( uVar5 );
        TASK_PERFORM_SEQUENCE( uParam0, uVar5 );
        CLEAR_SEQUENCE_TASK( uVar5 );
        SET_PED_FLAG_LOCK_TO_COVER( uParam0, 1 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( uParam0, 1 );
    }
    return;
}

/* P_LOCK_FOOD_COURT_DOORS */ void sub_79757()
{
     /* P_SETDOORLOCKED */ sub_50892( ref g_U3269, 1 );
     /* P_SETDOORLOCKED */ sub_50892( ref g_U3276, 1 );
    return;
}

/* P_SET_PED_ROOM */ void sub_79830(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_ROOM_FOR_PED_BY_NAME( uParam0, uParam1 );
    }
    return;
}

/* P_ACTIVATE_FOODCOURT_VCPF */ void sub_79902()
{
    if (NOT l_U1196)
    {
         /* MAL_WRITESCRIPTLOG */ sub_2550( "P_ACTIVATE_FOODCOURT_VCPF" );
         /* MAL_ESA_FREEZE */ sub_62930( ref l_U1013, 0, 0, -1 );
         /* MAL_REGISTERPEDWITHISEQ */ sub_43536( l_U1013[0]._fU0, 727272178, "s_stad_vcpf_patrol_1" );
         /* MAL_REGISTERPEDWITHISEQ */ sub_43536( l_U1013[1]._fU0, 727272178, "s_stad_vcpf_patrol_2" );
         /* MAL_REGISTERPEDWITHISEQ */ sub_43536( l_U1013[2]._fU0, 727272178, "s_stad_vcpf_patrol_3" );
         /* MAL_REGISTERPEDWITHISEQ */ sub_43536( l_U1013[3]._fU0, 727272178, "s_stad_vcpf_patrol_4" );
         /* MAL_ESA_TELEPORTTOSPAWN */ sub_63088( ref l_U1013, 0, -1 );
        ISEQ_START( 727272178 );
         /* MAL_ESA_PROCESSINGFREEZE */ sub_62336( ref l_U1013, 0, 0, -1 );
         /* MAL_ESA_BLOCK */ sub_80218( ref l_U1013, 0, 0, -1 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_55979( ref l_U1197 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 2, l_U1013[0]._fU0, "M3_CP_05_MUS", ref l_U1197, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 3, l_U1013[1]._fU0, "M3_CP_06_AVG", ref l_U1197, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 4, l_U1013[2]._fU0, "M3_CP_07_AVG", ref l_U1197, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_56357( "SSTD_STCA", ref l_U1197, 8, 1 );
        l_U1196 = 1;
    }
    return;
}

/* MAL_ESA_BLOCK */ void sub_80218(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_BLOCK */ sub_80284( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_BLOCK */ void sub_80284(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( iParam0->_fU0, uParam1 );
    }
    return;
}

/* F_DID_PLAYER_FIRE_WEAPON */ int sub_80555()
{
    if (HAS_SHOT_BEEN_FIRED_IN_AREA(  /* MAL_GETPEDCOORDS */ sub_60335(  /* PLAYER_PED_ID */ sub_1384() ), l_U1871, 0, ref l_U1872 ))
    {
        if (l_U1872 == ( /* PLAYER_PED_ID */ sub_1384()))
        {
            return 1;
        }
    }
    return 0;
}

/* HAS_CONCESSION_VCPF_BEEN_ALERTED */ int sub_80820()
{
    unknown uVar2;

    uVar2 =  /* PLAYER_PED_ID */ sub_1384();
    if (NOT (IS_PED_DEAD( l_U1013[2]._fU0 )))
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() )))
        {
            if (( /* F_HASPEDBEENDAMAGEDBYPED */ sub_80934( l_U1013[2]._fU0, uVar2 )) || ( /* F_DID_PLAYER_FIRE_WEAPON */ sub_80555()))
            {
                 /* WRITESCRIPTLOG */ sub_822( "[AT]", "Player fired weapon. Alert guards!", 0 );
                return 1;
            }
            if (HAS_PED_CLEAR_LOS_TO_PED_IN_FRONT( l_U1013[2]._fU0,  /* PLAYER_PED_ID */ sub_1384() ))
            {
                 /* WRITESCRIPTLOG */ sub_822( "[AT]", "Guard can see Max. Alert guards!", 0 );
                return 1;
            }
            if (( /* GET_DISTANCE_BETWEEN_PEDS */ sub_17469( l_U1013[2]._fU0,  /* PLAYER_PED_ID */ sub_1384(), 1 )) < 25.00000000)
            {
                 /* WRITESCRIPTLOG */ sub_822( "[AT]", "Max is too close to the guard. Alert guards!", 0 );
                return 1;
            }
            if (IS_PED_SHOOTING( l_U1013[3]._fU0 ))
            {
                return 1;
            }
        }
    }
    else
    {
        return 1;
    }
    return 0;
}

/* F_HASPEDBEENDAMAGEDBYPED */ int sub_80934(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
    {
        ;
    }
    if ((NOT (IS_PED_DEAD( uParam1 ))) || (IS_PED_DEAD( uParam1 )))
    {
        ;
    }
    if (HAS_PED_BEEN_DAMAGED_BY_PED( uParam0, uParam1, 0 ))
    {
        return 1;
        break;
    }
    return 0;
}

/* F_DID_CP_LEAVE_FOOD_COURT */ int sub_81489()
{
    if (NOT (IS_PED_DEAD( l_U1013[2]._fU0 )))
    {
        if ((( /* MAL_ES_GETACTINTSTATUS */ sub_81600( ref l_U1013[2], 52 )) == 1) AND (ISEQ_QUERY_ENTITY_STATE( 727272178, "s_stad_vcpf_patrol_3", 3 )))
        {
            return 1;
        }
    }
    return 0;
}

/* MAL_ES_GETACTINTSTATUS */ void sub_81600(int iParam0, unknown uParam1)
{
    return  /* MAL_GETACTINTSTATUS */ sub_60483( iParam0->_fU0, uParam1 );
}

/* P_CONCESSION_ENEMIES_LEAVE_NIS_START */ void sub_81734()
{
     /* WRITESCRIPTLOG */ sub_822( "GA", "P_CONCESSION_ENEMIES_LEAVE_NIS_START start", 0 );
     /* NIS_CREATE_STATIC_CAM */ sub_81882( ref l_U1884, 70.94202000, 68.37791000, 11.58295000, 22.11711000, -0.00011400, 53.47490000, 45.00000000, 5000 );
     /* NIS_PRE_SETUP */ sub_67259( 0, 0, 0, 1 );
    SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1422(), 0, 0 );
     /* MAL_ESA_BLOCK */ sub_80218( ref l_U1013, 1, 0, -1 );
     /* MAL_ES_CLEAN */ sub_10056( ref l_U1013[3] );
     /* NIS_PLAY_STATIC_CAMERA */ sub_82166( ref l_U1884 );
     /* WRITESCRIPTLOG */ sub_822( "GA", "P_CONCESSION_ENEMIES_LEAVE_NIS_START end", 0 );
    return;
}

/* NIS_CREATE_STATIC_CAM */ void sub_81882(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_2750( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U723, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* NIS_PLAY_STATIC_CAMERA */ void sub_82166(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_2902( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

/* NIS_IS_SHOT_FINISHED */ int sub_82431(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || ( /* ISTIMERDONE */ sub_3623( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || ( /* ISTIMERDONE */ sub_3623( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

/* P_PASSOS_MOVE_INTO_FOODCOURT */ void sub_82592()
{
     /* WRITESCRIPTLOG */ sub_822( "RJM", "P_PASSOS_MOVE_INTO_FOODCOURT start", 0 );
    ENABLE_NORMAL_LINE( "foodCourt_Simple", "foodCourtHighCover04", 1 );
    if (NOT (IS_PED_DEAD( g_U4007 )))
    {
        ISEQ_UNREGISTER_ENTITY( -1310389432, "Passos" );
        SET_ROOM_FOR_PED_BY_NAME( g_U4007, ref g_U2500 );
        ISEQ_TERMINATE( -1310389432 );
         /* P_STREAMREQ_ISEQ_REMOVE */ sub_7129( -1310389432, ref g_U1263 );
    }
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() ))) AND (NOT (IS_PED_DEAD( g_U4007 ))))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( g_U4007 );
        ISEQ_REGISTER_ENTITY( -813779471, "passos_entity", g_U4007, 0 );
         /* TELEPORTPED */ sub_43419( g_U4007, 85.84000000, 53.56000000, 9.57000000, 311.00000000 );
        ISEQ_START( -813779471 );
    }
     /* WRITESCRIPTLOG */ sub_822( "RJM", "P_PASSOS_MOVE_INTO_FOODCOURT end", 0 );
    return;
}

/* NIS_RETURN_TO_GAMEPLAY_CAM */ void sub_83003(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

/* P_HANDLE_STATE_CONCESSIONS_FIGHT */ void sub_83215(boolean bParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    int I;

    if (bParam0)
    {
         /* P_START_FOOD_COURT_FIGHT */ sub_83267();
        l_U132 = 0;
         /* KILL_SPEECH */ sub_65531( ref l_U1197, 0 );
         /* MAL_SETACTINT */ sub_73600( g_U4007, 51, 1000 );
         /* P_CREATE_AND_START_TIMER */ sub_57262( ref l_U2157, 2500 );
         /* WRITESCRIPTLOG */ sub_822( "MF", "Playing Speech: SSTD_SBCP", 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 1,  /* PLAYER_PED_ID */ sub_1384(), "MAX", ref uVar3, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 0, g_U4007, "PASSOS", ref uVar3, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_56357( "SSTD_SBCP", ref uVar3, 7, 1 );
         /* P_CREATE_AND_START_TIMER */ sub_57262( ref l_U2316, 10000 );
    }
    if ( /* HASTIMERBEENACTIVATED */ sub_5115( ref l_U2316 ))
    {
        if ( /* MAL_HASPLAYERFIRED */ sub_84804( 1 ))
        {
             /* MAL_WRITESCRIPTLOG */ sub_2550( "ResetTimer(tMaxHasNotFired)" );
             /* RESETTIMER */ sub_5673( ref l_U2316 );
             /* STARTTIMER */ sub_2902( ref l_U2316 );
        }
        else if (NOT (IS_ANY_SPEECH_PLAYING( g_U4007 )))
        {
            if ((l_U2325 < 2) AND ( /* ISTIMERDONE */ sub_3623( ref l_U2316 )))
            {
                 /* MAL_WRITESCRIPTLOG */ sub_2550( "IsTimerDone(tMaxHasNotFired)" );
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_55979( ref l_U2306 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 1, g_U4007, "PASSOS", ref l_U2306, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_56357( "SSTD_CSSO", ref l_U2306, 7, 1 );
                 /* RESETTIMER */ sub_5673( ref l_U2316 );
                 /* P_CREATE_AND_START_TIMER */ sub_57262( ref l_U2316, 12000 );
                l_U2325++;
            }
        }
    }
    if (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_85173( l_U2338 )))
    {
        if ((IS_LAST_MAN_STANDING_ACTIVE()) AND (NOT l_U2337))
        {
            l_U2337 = 1;
        }
        else if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (l_U2337))
        {
            l_U2337 = 0;
             /* MAL_WRITESCRIPTLOG */ sub_2550( "Chance to react to LMS here" );
            if (( /* F_GETRANDOMINTINRANGE */ sub_85401( 0, 3 )) == 0)
            {
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_55979( ref l_U2338 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 1, g_U4007, "PASSOS", ref l_U2338, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_56357( "SSTD_PMPL", ref l_U2338, 7, 1 );
            }
        }
        else if ( /* MAL_ISACTINTCOMPLETED */ sub_60444( ref g_U4007, 46, 1 ))
        {
             /* MAL_WRITESCRIPTLOG */ sub_2550( "Chance to speak while shooting" );
            if (( /* F_GETRANDOMINTINRANGE */ sub_85401( 0, l_U2348 )) > 3)
            {
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_55979( ref l_U2338 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 1, g_U4007, "PASSOS", ref l_U2338, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_56357( "SSTD_PSAE", ref l_U2338, 7, 1 );
                l_U2348 = 0;
            }
            else
            {
                l_U2348++;
            }
        };;;
    }
    if (( /* F_ISPLAYERINTRIGGERBOX */ sub_78058( l_U311 )) AND ((NOT (IS_ANY_SPEECH_PLAYING( g_U4007 ))) AND (NOT l_U2326)))
    {
        l_U2326 = 1;
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 1, g_U4007, "PASSOS", ref uVar13, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_56357( "SSTD_CSLM", ref uVar13, 7, 1 );
    }
    if (( /* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ sub_75580( ref l_U2207 )) == 1)
    {
         /* MAL_WRITESCRIPTLOG */ sub_2550( "F_POI_CAN_PLAY_UNAVALIABLE_MONO(poiFC_Blood)" );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_55979( ref l_U2363 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 0,  /* PLAYER_PED_ID */ sub_1384(), "MAX", ref l_U2363, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 1,  /* PLAYER_PED_ID */ sub_1384(), "MAX", ref l_U2363, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_56357( "EXPLORE_ITEM", ref l_U2363, 8, 1 );
    }
     /* F_HANDLE_POI */ sub_75997( ref l_U2207 );
    if (NOT l_U1498)
    {
        if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_73387( ref l_U332, 0 )) || (( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_85965( ref l_U1013 )) < 1))
        {
             /* MAL_ESA_PROCESSINGFREEZE */ sub_62336( ref l_U1270, 0, 2, -1 );
             /* MAL_ESA_FREEZE */ sub_62930( ref l_U1270, 0, 2, -1 );
             /* MAL_ESA_ALERTNESSANDEMOTIONSTATE */ sub_83890( ref l_U1270, 3, 2 );
             /* MAL_ESA_SETLOCKEDANDREGISTEREDONPLAYER */ sub_83651( ref l_U1270, 2, -1 );
             /* MAL_ES_MOVETOPOINTCOMBATPLAYER */ sub_84279( ref l_U1270[3], 67.60815000, 72.77717000, 9.56550500 );
            SET_PED_SUGGESTED_COVER_POINT( l_U1270[3]._fU0, "GenCover", "452238C2_19390118_Corner1" );
            l_U1498 = 1;
        }
    }
    if ((( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_85965( ref l_U1270 )) + ( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_85965( ref l_U1013 ))) == 1)
    {
         /* MAL_ESA_ASSIGNSPECIFICBULLETCAMTOLASTLIVINGPED */ sub_86273( ref l_U1013, "ALL_LMS_01", 0, 0, 0 );
         /* MAL_ESA_ASSIGNBULLETCAMTOLASTLIVINGPED */ sub_86340( ref l_U1270, 0, 0, 0 );
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_73387( ref l_U248, 0 ))
    {
         /* WRITESCRIPTLOG */ sub_822( "[SA]", "Player triggered tbActivateFoodcourtVCPF.", 0 );
         /* SB_DESTROYSNIPER */ sub_10185( ref l_U1965 );
         /* P_CREATE_1ST_SNIPER */ sub_79191();
         /* P_LOCK_FOOD_COURT_DOORS */ sub_79757();
         /* P_SET_PED_ROOM */ sub_79830( g_U4007, ref g_U2500 );
        ENABLE_GRAVITY_WELL( "s_stad_manual_placement", "GravityWell_Entering_Concession", 0, 0, 0, 0 );
    }
    if ( /* ISTIMERDONE */ sub_3623( ref l_U2157 ))
    {
        uVar23 = nil;
        if (HAS_BULLET_IMPACTED_IN_AREA(  /* MAL_GETPEDCOORDS */ sub_60335( g_U4007 ), 4, ref uVar23 ))
        {
             /* MAL_WRITESCRIPTLOG */ sub_2550( "Passos is flinching" );
             /* MAL_SETACTINT */ sub_73600( g_U4007, 53, 1000 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_822( "AT", "Passos is shooting.", 0 );
             /* MAL_SETACTINT */ sub_73600( g_U4007, 51, 1000 );
        }
         /* P_CREATE_AND_START_TIMER */ sub_57262( ref l_U2157, GET_RANDOM_INT_IN_RANGE( 2500, 5000 ) );
    }
    if ( /* F_IS_PED_IN_REGION */ sub_87019(  /* PLAYER_PED_ID */ sub_1384(), ref l_U1747 ))
    {
        if (l_U1811 != 1)
        {
             /* WRITESCRIPTLOG */ sub_822( "SA", "Player hiding under front railing", "###" );
            l_U1811 = 1;
             /* P_DISTRIBUTE_FOODCOURT_ENEMIES */ sub_87191( ref l_U1839 );
        }
    }
    else if ( /* F_IS_PED_IN_REGION */ sub_87019(  /* PLAYER_PED_ID */ sub_1384(), ref l_U1703 ))
    {
        if (l_U1811 != 2)
        {
             /* WRITESCRIPTLOG */ sub_822( "SA", "Player hiding under near left railing", "###" );
            l_U1811 = 2;
             /* P_DISTRIBUTE_FOODCOURT_ENEMIES */ sub_87191( ref l_U1833 );
        }
    }
    else if ( /* F_IS_PED_IN_REGION */ sub_87019(  /* PLAYER_PED_ID */ sub_1384(), ref l_U1725 ))
    {
        if (l_U1811 != 3)
        {
             /* WRITESCRIPTLOG */ sub_822( "SA", "Player hiding under far left railing", "###" );
            l_U1811 = 3;
             /* P_DISTRIBUTE_FOODCOURT_ENEMIES */ sub_87191( ref l_U1836 );
        }
    }
    else if ( /* F_IS_PED_IN_REGION */ sub_87019(  /* PLAYER_PED_ID */ sub_1384(), ref l_U1638 ))
    {
        if (l_U1811 != 4)
        {
             /* WRITESCRIPTLOG */ sub_822( "SA", "Player hiding under near right railing", "###" );
            l_U1811 = 4;
             /* P_DISTRIBUTE_FOODCOURT_ENEMIES */ sub_87191( ref l_U1827 );
        }
    }
    else if ( /* F_IS_PED_IN_REGION */ sub_87019(  /* PLAYER_PED_ID */ sub_1384(), ref l_U1660 ))
    {
        if (l_U1811 != 5)
        {
             /* WRITESCRIPTLOG */ sub_822( "SA", "Player hiding under far right railing", "###" );
            l_U1811 = 5;
             /* P_DISTRIBUTE_FOODCOURT_ENEMIES */ sub_87191( ref l_U1830 );
        }
    }
    else if ( /* F_IS_PED_IN_REGION */ sub_87019(  /* PLAYER_PED_ID */ sub_1384(), ref l_U1553 ))
    {
        if (l_U1811 != 6)
        {
             /* WRITESCRIPTLOG */ sub_822( "SA", "Player hiding in entrance way.", "###" );
            l_U1811 = 6;
             /* P_DISTRIBUTE_FOODCOURT_ENEMIES */ sub_87191( ref l_U1842 );
        }
    }
    else if (l_U1811 != 0)
    {
         /* WRITESCRIPTLOG */ sub_822( "SA", "Player is in the open", "###" );
        l_U1811 = 0;
         /* P_RESET_FOODCOURT_TETHERS */ sub_88326();
    };;;;;;;
    for ( I = 0; I < 4; I++ )
    {
        if ( /* F_SHOULD_FOODCOURT_VCPF_ATTACK_PASSOS */ sub_88594( I ))
        {
             /* P_FOODCOURT_VCPF_ATTACK_PASSOS */ sub_88771( I );
        }
        else
        {
             /* P_FOODCOURT_VCPF_ATTACK_PLAYER */ sub_89137( I );
        }
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_73387( ref l_U269, 0 ))
    {
         /* P_FAIL_FOODCOURT_START */ sub_89359();
        l_U128 = 13;
         /* WRITESCRIPTLOG */ sub_822( "GA", "eCheckpointState = CP_NIS_FAIL_PASSOS_SHOT_IN_FOODCOURT", 0 );
        return;
    }
    if (NOT l_U2138)
    {
        if (l_U269._fU64)
        {
            if (( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_90319( ref l_U2113, l_U1207._fU0, 0 )) || (IS_PED_DEAD( l_U1207._fU0 )))
            {
                 /* P_PASSOS_MOVE_INTO_FOODCOURT */ sub_82592();
                 /* MAL_TELEPORTPED */ sub_47278( g_U4007, 65.98000000, 75.34000000, 9.55131800, -96.25600000 );
                 /* P_PASSOS_MOVE_UP_FOOD_COURT_RAMP */ sub_90485();
                l_U2138 = 1;
            }
        }
    }
    if (NOT l_U2349)
    {
        if ((( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_85965( ref l_U1013 )) + ( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_85965( ref l_U1270 ))) < 5)
        {
            AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_3_4_5", "", 0, 14000, -1, -1082130432, 0 );
            l_U2349 = 1;
        }
    }
    if ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND ((( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_85965( ref l_U1013 )) + ( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_85965( ref l_U1270 ))) < 1))
    {
         /* MAL_WRITESCRIPTLOG */ sub_2550( "Foodcourt VCPF all dead, trying to move Edison" );
        l_U128 = 14;
         /* WRITESCRIPTLOG */ sub_822( "GA", "eCheckpointState = CP_CONCESSION_CP_GONE", 0 );
    }
    return;
}

/* P_START_FOOD_COURT_FIGHT */ void sub_83267()
{
     /* WRITESCRIPTLOG */ sub_822( "[SA]", "Start P_START_FOOD_COURT_FIGHT", "***" );
     /* P_FOODCOURT_VCPF_SPOT_PLAYER */ sub_83355();
    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1384(), 0 );
     /* MAL_ESA_PROCESSINGFREEZE */ sub_62336( ref l_U1270, 0, 0, 1 );
     /* MAL_ESA_FREEZE */ sub_62930( ref l_U1270, 0, 0, 1 );
     /* MAL_ESA_ALERTNESSANDEMOTIONSTATE */ sub_83890( ref l_U1270, 3, 2 );
     /* MAL_ESA_SETLOCKEDANDREGISTEREDONPLAYER */ sub_83651( ref l_U1270, 0, 1 );
     /* MAL_ES_MOVETOPOINTCOMBATPLAYER */ sub_84279( ref l_U1270[0], 69.32802000, 69.11136000, 9.56245300 );
     /* MAL_ES_MOVETOPOINTCOMBATPLAYER */ sub_84279( ref l_U1270[1], 68.80373000, 73.94593000, 9.55574700 );
    l_U1497 = 1;
     /* WRITESCRIPTLOG */ sub_822( "[SA]", "End P_START_FOOD_COURT_FIGHT", "***" );
    return;
}

/* P_FOODCOURT_VCPF_SPOT_PLAYER */ void sub_83355()
{
     /* WRITESCRIPTLOG */ sub_822( "MF", "P_FOODCOURT_VCPF_SPOT_PLAYER - START", 0 );
     /* MAL_ESA_GIVETETHER */ sub_65111( ref l_U1013, l_U1812, 1, 0, -1 );
     /* MAL_ESA_GIVETETHER */ sub_65111( ref l_U1013, l_U1813, 1, 0, -1 );
     /* MAL_ESA_GIVETETHER */ sub_65111( ref l_U1013, l_U1814, 1, 0, -1 );
     /* MAL_ESA_GIVETETHER */ sub_65111( ref l_U1013, l_U1815, 1, 0, -1 );
     /* MAL_ESA_GIVETETHER */ sub_65111( ref l_U1013, l_U1816, 1, 0, -1 );
     /* MAL_ESA_GIVETETHER */ sub_65111( ref l_U1013, l_U1817, 1, 0, -1 );
     /* MAL_ESA_GIVETETHER */ sub_65111( ref l_U1013, l_U1818, 1, 0, -1 );
    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1013[0]._fU0, 0 );
    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1013[1]._fU0, 0 );
    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1013[2]._fU0, 0 );
    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1013[3]._fU0, 0 );
     /* MAL_ESA_SETLOCKEDANDREGISTEREDONPLAYER */ sub_83651( ref l_U1013, 0, -1 );
     /* WRITESCRIPTLOG */ sub_822( "MF", "P_FOODCOURT_VCPF_SPOT_PLAYER - END", 0 );
    return;
}

/* MAL_ESA_SETLOCKEDANDREGISTEREDONPLAYER */ void sub_83651(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
         /* MAL_REGISTERTARGET */ sub_3288( ref (uParam0^)[I]._fU0,  /* PLAYER_PED_ID */ sub_1384() );
         /* MAL_SETLOCKEDTARGET */ sub_3370( ref (uParam0^)[I]._fU0,  /* PLAYER_PED_ID */ sub_1384() );
    }
    return;
}

/* MAL_ESA_ALERTNESSANDEMOTIONSTATE */ void sub_83890(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* MAL_ES_ALERTNESSANDEMOTIONSTATE */ sub_83961( ref (uParam0^)[I], uParam1, uParam2 );
    }
    return;
}

/* MAL_ES_ALERTNESSANDEMOTIONSTATE */ void sub_83961(int iParam0, unknown uParam1, unknown uParam2)
{
     /* MAL_SETPEDALERTNESSANDEMOTIONSTATE */ sub_84013( iParam0 + 0, uParam1, uParam2 );
    return;
}

/* MAL_SETPEDALERTNESSANDEMOTIONSTATE */ void sub_84013(unknown uParam0, unknown uParam1, unknown uParam2)
{
     /* MAL_SETPEDALERTNESS */ sub_84064( uParam0, uParam1 );
     /* MAL_SETPEDEMOTIONSTATION */ sub_84136( uParam0, uParam2 );
    return;
}

/* MAL_SETPEDALERTNESS */ void sub_84064(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_ALERTNESS( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETPEDEMOTIONSTATION */ void sub_84136(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_EMOTION_STATE( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_ES_MOVETOPOINTCOMBATPLAYER */ void sub_84279(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
     /* MAL_MOVETOPOINTTHENCOMBATPED */ sub_84345( iParam0 + 0,  /* PLAYER_PED_ID */ sub_1384(), uParam1, iParam0->_fU80, 20000, 0 );
    return;
}

/* MAL_MOVETOPOINTTHENCOMBATPED */ void sub_84345(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    unknown uVar10;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        CLEAR_PED_TASKS( (uParam0^) );
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam5 );
        if (NOT (IS_PED_DEAD( uParam1 )))
        {
            OPEN_SEQUENCE_TASK( ref uVar10 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uParam2, 3, uParam6, 1048576000, 0, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, uParam7 );
            TASK_COMBAT_PED( 0, uParam1 );
            CLOSE_SEQUENCE_TASK( uVar10 );
            TASK_PERFORM_SEQUENCE( (uParam0^), uVar10 );
            CLEAR_SEQUENCE_TASK( uVar10 );
        }
    }
    return;
}

/* MAL_HASPLAYERFIRED */ int sub_84804(unknown uParam0)
{
    int iVar3;

    iVar3 = nil;
    if (HAS_SHOT_BEEN_FIRED_IN_AREA(  /* MAL_GETPEDCOORDS */ sub_60335(  /* PLAYER_PED_ID */ sub_1384() ), 2.00000000, uParam0, ref iVar3 ))
    {
        if (iVar3 == ( /* PLAYER_PED_ID */ sub_1384()))
        {
             /* MAL_WRITESCRIPTLOG */ sub_2550( "MAL_HasPlayerFired RETURNING TRUE" );
            return 1;
        }
    }
    return 0;
}

/* IS_SPEECH_CURRENTLY_PLAYING */ int sub_85173(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_65559( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

/* F_GETRANDOMINTINRANGE */ void sub_85401(unknown uParam0, int iParam1)
{
    int Result;

    Result = GET_RANDOM_INT_IN_RANGE( uParam0, iParam1 + 1 );
    if (Result > iParam1)
    {
        Result = iParam1;
    }
    return Result;
}

/* MAL_ESA_GETNUMLIVINGPEDS */ void sub_85965(unknown uParam0)
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            Result++;
        }
    }
    return Result;
}

/* MAL_ESA_ASSIGNSPECIFICBULLETCAMTOLASTLIVINGPED */ void sub_86273(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    unknown Result;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    unknown uVar40;
    unknown uVar41;
    unknown uVar42;
    unknown uVar43;
    unknown uVar44;
    unknown uVar45;
    unknown uVar46;
    unknown uVar47;
    unknown uVar48;
    unknown uVar49;
    unknown uVar50;

    Result = { /* MAL_ESA_ASSIGNBULLETCAMTOLASTLIVINGPED */ sub_86340( uParam0, uParam2, uParam3, uParam4 )};
    if (Result._fU0 != g_U671._fU0)
    {
        SET_BULLET_CAM_PREF( Result._fU0, uParam1, uParam1, uParam1, 0, 1, 0, 0, 0, 0, 0, 0, 0 );
    }
    return Result;
}

/* MAL_ESA_ASSIGNBULLETCAMTOLASTLIVINGPED */ void sub_86340(unknown uParam0, boolean bParam1, unknown uParam2, unknown uParam3)
{
    int I;

    if (( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_85965( uParam0 )) == 1)
    {
        for ( I = 0; I < (uParam0^); I++ )
        {
            if ( /* MAL_SETCANTRIGGERBULLETCAM */ sub_46259( (uParam0^)[I]._fU0, 1 ))
            {
                if (bParam1)
                {
                    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, uParam2 );
                }
                BULLET_CAMERA_TRACK_UNTIL_GROUNDED( uParam3 );
                return (uParam0^)[I];
            }
        }
    }
    return g_U671;
}

/* F_IS_PED_IN_REGION */ int sub_87019(unknown uParam0, unknown uParam1)
{
    int iVar4;
    int I;

    iVar4 = (uParam1^);
    for ( I = 0; I < iVar4; I++ )
    {
        if ( /* F_ISPEDINTRIGGERBOX */ sub_73463( uParam0, (uParam1^)[I] ))
        {
            return 1;
        }
    }
    return 0;
}

/* P_DISTRIBUTE_FOODCOURT_ENEMIES */ void sub_87191(unknown uParam0)
{
    int iVar3;
    int J;
    int I;
    unknown uVar6;
    int iVar7;
    int iVar8;
    int iVar9;
    int iVar10;
    unknown uVar11;
    unknown uVar12;
    int iVar13;

    iVar3 = (uParam0^);
    for ( J = 0; J < 4; J++ )
    {
        iVar7 = 100;
        if (NOT (IS_PED_DEAD( l_U1013[J]._fU0 )))
        {
            for ( I = 0; I < iVar3; I++ )
            {
                iVar8 = ABSI( l_U1845[J] - (uParam0^)[I] );
                if (iVar8 < iVar7)
                {
                    iVar7 = iVar8;
                    uVar6 = (uParam0^)[I];
                }
            }
            l_U1845[J] = uVar6;
             /* P_REMOVEALLTETHERSFROMPED */ sub_87382( l_U1013[J]._fU0 );
             /* MAL_ES_GIVETETHER */ sub_64733( ref l_U1013[J], l_U1819[uVar6], 1 );
        }
    }
    iVar9 = 1;
    for ( iVar10 = 0; iVar10 < 4; iVar10++ )
    {
        if ((l_U1845[iVar10] != l_U1845[0]) || (IS_PED_DEAD( l_U1013[iVar10]._fU0 )))
        {
            iVar9 = 0;
        }
    }
    if ((iVar3 > 1) AND (iVar9))
    {
        uVar11 = GET_RANDOM_INT_IN_RANGE( 0, 3 );
        for ( iVar13 = 0; iVar13 < iVar3; iVar13++ )
        {
            if ((uParam0^)[iVar13] != l_U1845[0])
            {
                uVar12 = (uParam0^)[iVar13];
            }
        }
        l_U1845[uVar11] = uVar12;
         /* P_REMOVEALLTETHERSFROMPED */ sub_87382( l_U1013[uVar11]._fU0 );
         /* MAL_ES_GIVETETHER */ sub_64733( ref l_U1013[uVar11], l_U1819[uVar12], 1 );
    }
    return;
}

/* P_REMOVEALLTETHERSFROMPED */ void sub_87382(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        RESET_PED_TETHERING( uParam0 );
    }
    return;
}

/* P_RESET_FOODCOURT_TETHERS */ void sub_88326()
{
     /* MAL_ESA_CLEARTETHERS */ sub_88368( ref l_U1013 );
     /* MAL_ESA_GIVETETHER */ sub_65111( ref l_U1013, l_U1812, 1, 0, -1 );
     /* MAL_ESA_GIVETETHER */ sub_65111( ref l_U1013, l_U1813, 1, 0, -1 );
     /* MAL_ESA_GIVETETHER */ sub_65111( ref l_U1013, l_U1814, 1, 0, -1 );
     /* MAL_ESA_GIVETETHER */ sub_65111( ref l_U1013, l_U1815, 1, 0, -1 );
     /* MAL_ESA_GIVETETHER */ sub_65111( ref l_U1013, l_U1816, 1, 0, -1 );
     /* MAL_ESA_GIVETETHER */ sub_65111( ref l_U1013, l_U1817, 1, 0, -1 );
     /* MAL_ESA_GIVETETHER */ sub_65111( ref l_U1013, l_U1818, 1, 0, -1 );
    return;
}

/* MAL_ESA_CLEARTETHERS */ void sub_88368(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_REMOVEALLTETHERSFROMPED */ sub_87382( (uParam0^)[I]._fU0 );
    }
    return;
}

/* F_SHOULD_FOODCOURT_VCPF_ATTACK_PASSOS */ int sub_88594(unknown uParam0)
{
    unknown uVar3;

    uVar3 = uParam0;
    if (NOT (IS_PED_DEAD( l_U1013[uVar3]._fU0 )))
    {
        if ((l_U1811 == 1) || (l_U1811 == 6))
        {
            if ((NOT (HAS_PED_CLEAR_LOS_TO_PED_IN_FRONT( l_U1013[uVar3]._fU0,  /* PLAYER_PED_ID */ sub_1384() ))) AND ( /* F_ISPEDINTRIGGERBOX */ sub_73463( l_U1013[uVar3]._fU0, l_U1790 )))
            {
                return 1;
            }
        }
    }
    return 0;
}

/* P_FOODCOURT_VCPF_ATTACK_PASSOS */ void sub_88771(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;

    uVar3 = uParam0;
    if (NOT l_U1850[uVar3])
    {
         /* WRITESCRIPTLOG */ sub_822( "[SA]", "Enemy can't attack player, attacking Passos instead.", 0 );
        uVar4 = l_U1855;
        uVar5 = GET_RANDOM_INT_IN_RANGE( 0, uVar4 );
        uVar6 = GET_RANDOM_INT_IN_RANGE( 0, uVar4 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1013[uVar3]._fU0, 1 );
        OPEN_SEQUENCE_TASK( ref uVar7 );
        TASK_AIM_GUN_AT_COORD( 0, l_U1855[uVar5], 2000, 0 );
        TASK_SHOOT_AT_COORD( 0, l_U1855[uVar5], 5000, -511790439, 0, 0 );
        TASK_AIM_GUN_AT_COORD( 0, l_U1855[uVar6], 2000, 0 );
        TASK_SHOOT_AT_COORD( 0, l_U1855[uVar6], 5000, -511790439, 0, 0 );
        SET_SEQUENCE_TO_REPEAT( uVar7, 1 );
        CLOSE_SEQUENCE_TASK( uVar7 );
        TASK_PERFORM_SEQUENCE( l_U1013[uVar3]._fU0, uVar7 );
        CLEAR_SEQUENCE_TASK( uVar7 );
        l_U1850[uVar3] = 1;
    }
    return;
}

/* P_FOODCOURT_VCPF_ATTACK_PLAYER */ void sub_89137(unknown uParam0)
{
    unknown uVar3;

    uVar3 = uParam0;
    if (NOT (IS_PED_DEAD( l_U1013[uVar3]._fU0 )))
    {
        if (l_U1850[uVar3])
        {
             /* WRITESCRIPTLOG */ sub_822( "[SA]", "Enemy can't attack player, attacking Passos instead.", 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1013[uVar3]._fU0, 0 );
            l_U1850[uVar3] = 0;
        }
    }
    return;
}

/* P_FAIL_FOODCOURT_START */ void sub_89359()
{
    DO_SCREEN_FADE_OUT( 0 );
     /* NIS_PRE_SETUP */ sub_67259( 1, 0, 0, 0 );
     /* MAL_ES_BLOCK */ sub_80284( ref l_U1207, 1 );
     /* MAL_ESA_STANDSTILL */ sub_89425( ref l_U1013 );
     /* MAL_ESA_STANDSTILL */ sub_89425( ref l_U1270 );
    if (( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_85965( ref l_U1013 )) > 0)
    {
        l_U2488 =  /* MAL_ESA_GETFIRSTLIVINGPED */ sub_89533( ref l_U1013 );
        l_U2451 = {88.07494000, 58.21689000, 13.42946000};
        l_U2454 = {29.97064000, -0.00000600, -75.80923000};
        l_U2489 = {90.96531000, 59.20985000, 14.03648000};
        l_U2492 = 140.39010000;
    }
    else if (( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_85965( ref l_U1270 )) > 0)
    {
        l_U2488 =  /* MAL_ESA_GETFIRSTLIVINGPED */ sub_89533( ref l_U1270 );
        l_U2451 = {85.99871000, 58.43734000, 11.08960000};
        l_U2454 = {-5.86227000, -0.00000200, -48.45287000};
        l_U2489 = {87.89513000, 60.69425000, 9.57383900};
        l_U2492 = 158.69310000;
    }
    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U2488, 1 );
    CLEAR_PED_TASKS_IMMEDIATELY( l_U2488 );
     /* NIS_CREATE_STATIC_CAM */ sub_81882( ref l_U2383, l_U2414, l_U2417, 1110704128, 1000 );
     /* NIS_CREATE_STATIC_CAM */ sub_81882( ref l_U2420, l_U2451, l_U2454, 45, 500 );
     /* NIS_CREATE_STATIC_CAM */ sub_81882( ref l_U2457, l_U2414, l_U2417, 1110704128, 1000 );
     /* MAL_TELEPORTPED */ sub_47278( l_U2488, l_U2489, l_U2492 );
    TASK_AIM_GUN_AT_COORD( l_U2488, 88.07162000, 52.45227000, 11.84583000, -1, 1 );
    SET_PED_PERFECT_ACCURACY_OVERRIDE( l_U2488, 1 );
    SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U4007, 0 );
    SET_PED_AS_ONE_SHOT_KILL( g_U4007, 1 );
     /* MAL_SETLOCKEDANDREGISTEREDONPED */ sub_3240( ref l_U2488, g_U4007 );
     /* NIS_PLAY_STATIC_CAMERA */ sub_82166( ref l_U2383 );
     /* NIS_SHAKE_CAMERA */ sub_90119(  /* F_CAM_SHAKE_WOBBLY */ sub_90060(), 0.25000000 );
    DO_SCREEN_FADE_IN( 0 );
    return;
}

/* MAL_ESA_STANDSTILL */ void sub_89425(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* MAL_STANDSTILL */ sub_46009( ref (uParam0^)[I]._fU0 );
    }
    return;
}

/* MAL_ESA_GETFIRSTLIVINGPED */ void sub_89533(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            return (uParam0^)[I]._fU0;
        }
    }
    return nil;
}

/* F_CAM_SHAKE_WOBBLY */ string sub_90060()
{
    return "WOBBLY_SHAKE";
}

/* NIS_SHAKE_CAMERA */ void sub_90119(unknown uParam0, unknown uParam1)
{
    SHAKE_CAM( GET_RENDERING_CAM(), uParam0, uParam1 );
    return;
}

/* F_ISPEDINTRIGGERBOXFIRSTTIME */ void sub_90319(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 =  /* F_ISPEDINTRIGGERBOX */ sub_73463( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

/* P_PASSOS_MOVE_UP_FOOD_COURT_RAMP */ void sub_90485()
{
     /* WRITESCRIPTLOG */ sub_822( "GA", "P_PASSOS_MOVE_UP_FOOD_COURT_RAMP start", 0 );
    if (NOT (IS_PED_DEAD( g_U4007 )))
    {
        PED_SET_ACTION_INTENTION( g_U4007, 48, 1000, g_U649 );
        SET_PED_VISIBLE( g_U4007, 1 );
    }
     /* WRITESCRIPTLOG */ sub_822( "GA", "P_PASSOS_MOVE_UP_FOOD_COURT_RAMP end", 0 );
    return;
}

/* MAL_AIMTHENSHOOTATCOORD */ void sub_91058(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        OPEN_SEQUENCE_TASK( ref uVar8 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_AIM_GUN_AT_COORD( 0, uParam1, 50, uParam5 );
        TASK_SHOOT_AT_COORD( 0, uParam1, 9999999, uParam4, uParam5, 0 );
        CLOSE_SEQUENCE_TASK( uVar8 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar8 );
        CLEAR_SEQUENCE_TASK( uVar8 );
    }
    return;
}

/* MAL_AIMTHENSHOOTATPED */ void sub_91251(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        OPEN_SEQUENCE_TASK( ref uVar6 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (NOT (IS_PED_DEAD( uParam1 )))
        {
            TASK_AIM_GUN_AT_PED( 0, uParam1, 50, uParam3 );
            TASK_SHOOT_AT_PED( 0, uParam1, 9999999, uParam2, uParam3, 0, 0 );
        }
        CLOSE_SEQUENCE_TASK( uVar6 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar6 );
        CLEAR_SEQUENCE_TASK( uVar6 );
    }
    return;
}

/* F_CAM_SHAKE_SMALL_EXPLOSION */ string sub_91594()
{
    return "SMALL_EXPLOSION_SHAKE";
}

/* P_HANDLE_STATE_CONCESSIONS_CP_GONE */ void sub_91686(boolean bParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    unknown uVar40;
    unknown uVar41;
    unknown uVar42;
    unknown uVar43;
    unknown uVar44;
    unknown uVar45;
    unknown uVar46;
    unknown uVar47;
    unknown uVar48;
    unknown uVar49;
    unknown uVar50;
    unknown uVar51;
    unknown uVar52;
    unknown uVar53;
    unknown uVar54;

    if (bParam0)
    {
         /* WRITESCRIPTLOG */ sub_822( "[SA]", "Entering progression state STATE_CONCESSIONS_CP_GONE.", "[STATE]" );
         /* MAL_FINISHACTINT */ sub_60571( ref g_U4007, 48 );
         /* MAL_FINISHACTINT */ sub_60571( ref g_U4007, 49 );
        if (NOT l_U2138)
        {
             /* P_PASSOS_MOVE_INTO_FOODCOURT */ sub_82592();
             /* P_CREATE_AND_START_TIMER */ sub_57262( ref l_U2148, 8000 );
        }
        if (NOT l_U1497)
        {
             /* MAL_ES_TELEPORT */ sub_63219( l_U1270[0], 32.18077000, 62.85104000, 12.01293000, 43.00000000 );
             /* MAL_ES_TELEPORT */ sub_63219( l_U1270[1], 39.67297000, 63.97662000, 11.64519000, 270.00000000 );
             /* MAL_ES_CLEAN */ sub_10056( ref l_U1270[2] );
             /* MAL_ES_CLEAN */ sub_10056( ref l_U1270[3] );
             /* MAL_ES_CLEAN */ sub_10056( ref l_U1270[4] );
             /* MAL_ESA_GIVETETHER */ sub_65111( ref l_U1270, l_U438, 1, 0, -1 );
        }
         /* P_CREATE_AND_START_TIMER */ sub_57262( ref l_U1544, 4000 );
        l_U132 = 1;
         /* P_GBL_REFRESH_PAYNE_KILLER_COUNT */ sub_75372();
         /* P_SET_POI_AVAILABLE */ sub_24446( ref l_U2207, 1 );
        AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_4_5", "", 0, 7000, -1, -1082130432, 0 );
    }
    if ( /* ISTIMERDONE */ sub_3623( ref l_U1544 ))
    {
         /* WRITESCRIPTLOG */ sub_822( "SA", "Playing SSTD_STPH", 0 );
         /* P_PLAY_MAX_PASSOS_DIALOGUE */ sub_75223( "SSTD_STPH", ref l_U133 );
         /* RESETTIMER */ sub_5673( ref l_U1544 );
    }
    if (l_U132 == 1)
    {
        if (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_77758()))
        {
             /* P_HANDLE_AMBIENT_SPEECH */ sub_77858();
        }
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_73387( ref l_U248, 0 ))
    {
         /* WRITESCRIPTLOG */ sub_822( "[SA]", "Player triggered tbActivateFoodcourtVCPF.", 0 );
         /* SB_DESTROYSNIPER */ sub_10185( ref l_U1965 );
         /* P_CREATE_1ST_SNIPER */ sub_79191();
         /* P_LOCK_FOOD_COURT_DOORS */ sub_79757();
         /* P_SET_PED_ROOM */ sub_79830( g_U4007, ref g_U2500 );
        l_U132 = 0;
    }
     /* P_HANDLE_FCBLOOD_SCENE */ sub_92315();
    if ( /* ISTIMERDONE */ sub_3623( ref l_U2148 ))
    {
        if (( /* GET_DISTANCE_BETWEEN_PEDS */ sub_17469( g_U4007,  /* PLAYER_PED_ID */ sub_1384(), 1 )) > 8.00000000)
        {
             /* WRITESCRIPTLOG */ sub_822( "AT", "Passos calls to Max from the ramp.", 0 );
             /* P_START_HEADTRACKING_PED */ sub_92826( g_U4007,  /* PLAYER_PED_ID */ sub_1384(), 3000 );
             /* P_PLAY_MAX_PASSOS_DIALOGUE */ sub_75223( "SSTD_STPI", ref l_U2176 );
        }
        else
        {
             /* P_CREATE_AND_START_TIMER */ sub_57262( ref l_U2148, 2000 );
        }
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_73387( ref l_U311, 0 ))
    {
         /* MAL_ES_PROCESSINGFREEZE */ sub_62413( ref l_U1207, 0 );
         /* MAL_ES_FREEZE */ sub_62997( ref l_U1207, 0 );
         /* MAL_SETLOCKEDANDREGISTEREDONPLAYER */ sub_3186( ref l_U1207._fU0 );
         /* MAL_ES_ALERTNESSANDEMOTIONSTATE */ sub_83961( ref l_U1207, 3, 1 );
         /* MAL_ES_SETPEDVISIBLE */ sub_64592( ref l_U1207, 1 );
         /* MAL_ES_UNBLOCKANDCOMBATPLAYER */ sub_93041( ref l_U1207, 1 );
        l_U1252 = 1;
        l_U2373 = 1;
         /* RESETTIMER */ sub_5673( ref l_U2327 );
    }
    if (l_U1252)
    {
        if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_73387( ref l_U269, 0 )) || ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_73387( ref l_U290, 0 )))
        {
            if (NOT (IS_PED_DEAD( l_U1207._fU0 )))
            {
                 /* MAL_WRITESCRIPTLOG */ sub_2550( "MAKING RAMP ENEMY RUN" );
                l_U1251 = 1;
                 /* MAL_ES_BLOCK */ sub_80284( ref l_U1207, 1 );
                SET_PED_FLAG_LOCK_TO_COVER( l_U1207._fU0, 1 );
                SET_PED_FIRE_AT_COVER( l_U1207._fU0, 0 );
                OPEN_SEQUENCE_TASK( ref uVar3 );
                TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
                TASK_FOLLOW_NAV_MESH_TO_COORD( 0, 43.32378000, 65.64288000, 12.56653000, 3, -1, 1048576000, 0, 0 );
                TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
                TASK_COMBAT_MOVE_TO_COVER( 0, "foodCourt_Simple", "Corner Position24",  /* PLAYER_PED_ID */ sub_1384() );
                CLOSE_SEQUENCE_TASK( uVar3 );
                TASK_PERFORM_SEQUENCE( l_U1207._fU0, uVar3 );
                CLEAR_SEQUENCE_TASK( uVar3 );
                 /* P_REMOVEALLTETHERSFROMPED */ sub_87382( l_U1207._fU0 );
                 /* MAL_ES_GIVETETHER */ sub_64733( ref l_U1207, l_U439, 1 );
                l_U1252 = 0;
                l_U132 = 0;
            }
        }
    }
    if (NOT l_U2373)
    {
        if (( /* F_ISPLAYERINTRIGGERBOX */ sub_78058( l_U290 )) AND (l_U2294))
        {
            if (NOT (IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1384() )))
            {
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 1,  /* PLAYER_PED_ID */ sub_1384(), "MAX", ref uVar4, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_56357( "SSTD_TDUR", ref uVar4, 8, 1 );
                l_U2373 = 1;
            }
        }
    }
    if (NOT l_U2294)
    {
        if ( /* MAL_ISACTINTCOMPLETED */ sub_60444( ref g_U4007, 55, 1 ))
        {
            l_U2294 = 1;
            SET_PED_PRIMARY_LOOKAT( g_U4007,  /* PLAYER_PED_ID */ sub_1384() );
            if (NOT (IS_ANY_SPEECH_PLAYING( g_U4007 )))
            {
                 /* MAL_WRITESCRIPTLOG */ sub_2550( "Playing SSTD_WTGU" );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 1, g_U4007, "PASSOS", ref uVar14, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_56357( "SSTD_WTGU", ref uVar14, 7, 1 );
            }
             /* P_CREATE_AND_START_TIMER */ sub_57262( ref l_U2327, 15000 );
        }
    }
    else
    {
        uVar24 = nil;
        if (HAS_BULLET_IMPACTED_IN_AREA( ( /* MAL_GETPEDCOORDS */ sub_60335( g_U4007 )) - (vector( 0, 0, 1)), 3, ref uVar24 ))
        {
             /* MAL_SETACTINWITHFOCUSPOS */ sub_94128( ref g_U4007,  /* MAL_GETPEDCOORDS */ sub_60335(  /* PLAYER_PED_ID */ sub_1384() ), 57, 1000 );
            if (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_85173( l_U2296 )))
            {
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_55979( ref l_U2296 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 1, g_U4007, "PASSOS", ref l_U2296, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_56357( "SSTD_PSAH", ref l_U2296, 7, 1 );
            }
        }
        else if (NOT l_U2295)
        {
            if ((IS_CONTROL_PRESSED( 0, 6 )) AND (IS_PED_IN_CROSSHAIR_CYLINDER( g_U4007, 1, 10000, 1, -1082130432 )))
            {
                l_U2295 = 1;
                 /* MAL_SETACTINWITHFOCUSPOS */ sub_94128( ref g_U4007,  /* MAL_GETPEDCOORDS */ sub_60335(  /* PLAYER_PED_ID */ sub_1384() ), 56, 1000 );
                if (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_85173( l_U2296 )))
                {
                     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_55979( ref l_U2296 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 1, g_U4007, "PASSOS", ref l_U2296, 2, 0 );
                     /* PLAY_SINGLE_SPEECH */ sub_56357( "SSTD_PAAH", ref l_U2296, 7, 1 );
                }
            }
        }
        else if (NOT (IS_PED_IN_CROSSHAIR_CYLINDER( g_U4007, 1, 10000, 1, -1082130432 )))
        {
            l_U2295 = 0;
        };;;
        if (NOT (IS_ANY_SPEECH_PLAYING( g_U4007 )))
        {
            if ((IS_PLAYER_SHOOTDODGING()) AND (NOT l_U2336))
            {
                l_U2336 = 1;
            }
            else if ((NOT IS_PLAYER_SHOOTDODGING()) AND (l_U2336))
            {
                l_U2336 = 0;
                if (( /* F_GETRANDOMINTINRANGE */ sub_85401( 0, 2 )) == 0)
                {
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 1, g_U4007, "PASSOS", ref uVar25, 2, 0 );
                     /* PLAY_SINGLE_SPEECH */ sub_56357( "SSTD_SDNC", ref uVar25, 7, 1 );
                     /* MAL_WRITESCRIPTLOG */ sub_2550( "PLAYING SSTD_SDNC" );
                }
            }
            else if ((NOT (IS_PED_IN_CROSSHAIR_CYLINDER( g_U4007, 3, 10000, 0, -1082130432 ))) AND ((NOT (IS_BULLET_TIME_ACTIVE( 1 ))) AND ((( /* F_GETRANDOMINTINRANGE */ sub_85401( 0, 2 )) == 0) AND ( /* MAL_HASPLAYERFIRED */ sub_84804( 1 )))))
            {
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 1, g_U4007, "PASSOS", ref uVar35, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_56357( "SSTD_PSOC", ref uVar35, 7, 1 );
                 /* MAL_WRITESCRIPTLOG */ sub_2550( "PLAYING SSTD_PSOC" );
            };;;
        }
    }
    if (NOT (IS_ANY_SPEECH_PLAYING( g_U4007 )))
    {
        if ( /* ISTIMERDONE */ sub_3623( ref l_U2327 ))
        {
             /* MAL_WRITESCRIPTLOG */ sub_2550( "Playing SSTD_DICH" );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 1, g_U4007, "PASSOS", ref uVar45, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_56357( "SSTD_DICH", ref uVar45, 7, 1 );
        }
    }
    if (NOT l_U2138)
    {
        if (l_U269._fU64)
        {
            if (( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_90319( ref l_U2113, l_U1207._fU0, 0 )) || (IS_PED_DEAD( l_U1207._fU0 )))
            {
                 /* MAL_TELEPORTPED */ sub_47278( g_U4007, 65.98000000, 75.34000000, 9.55131800, -96.25600000 );
                 /* P_PASSOS_MOVE_UP_FOOD_COURT_RAMP */ sub_90485();
                l_U2138 = 1;
                CLEAR_PED_PRIMARY_LOOKAT( g_U4007 );
                l_U2294 = 0;
                l_U132 = 1;
                 /* P_GBL_REFRESH_PAYNE_KILLER_COUNT */ sub_75372();
            }
        }
    }
    if (NOT l_U1543)
    {
        if (NOT (IS_PED_DEAD( l_U1207._fU0 )))
        {
            if (( /* MAL_COMPAREPEDPOSAXIS */ sub_95073( l_U1207._fU0, "X", "Greater", 40.50000000 )) AND ( /* MAL_COMPAREPEDPOSAXIS */ sub_95073( l_U1207._fU0, "Y", "Less", 76 )))
            {
                l_U1543 = 1;
                 /* MAL_ES_CLEAN */ sub_10056( ref l_U1499 );
            }
        }
        else
        {
             /* MAL_ES_FREEZE */ sub_62997( ref l_U1499, 0 );
             /* MAL_ES_PROCESSINGFREEZE */ sub_62413( ref l_U1499, 0 );
             /* MAL_ES_SETPEDVISIBLE */ sub_64592( ref l_U1499, 1 );
             /* MAL_ES_STAYINCOVER */ sub_95421( ref l_U1499, "foodCourt_simple", "Corner Position24" );
            l_U1543 = 1;
        }
    }
    if (( /* MAL_GETACTINTSTATUS */ sub_60483( g_U4007, 29 )) == 3)
    {
         /* P_HANDLE_PASSOS_INTERRUPTIONS */ sub_95593( g_U4007, ref l_U2350, ref l_U2351, ref l_U2352, ref l_U2353, ref l_U2354 );
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_73387( ref l_U416, 0 ))
    {
         /* MAL_WRITESCRIPTLOG */ sub_2550( "Playing SSTD_MXDRPLB" );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_55979( ref l_U2030 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 0,  /* PLAYER_PED_ID */ sub_1384(), "MAX", ref l_U2030, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 1,  /* PLAYER_PED_ID */ sub_1384(), "MAX", ref l_U2030, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_56357( "SSTD_MXDRPLB", ref l_U2030, 8, 1 );
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_73387( ref l_U2092, 0 ))
    {
        l_U128 = 15;
         /* WRITESCRIPTLOG */ sub_822( "GA", "eCheckpointState = CP_PRESS_BOOTH", 0 );
    }
    return;
}

/* P_HANDLE_FCBLOOD_SCENE */ void sub_92315()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ( /* F_HANDLE_POI */ sub_75997( ref l_U2207 ))
    {
         /* NIS_PRE_SETUP */ sub_67259( 1, 0, 0, 1 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_STAD_CP_03", "BLOOD_INSPECTION_CAM", 1, 81.32300000, 68.09700000, 11.12300000, 0, 0, 0 );
         /* MAL_SETPEDVISIBLE */ sub_92450(  /* PLAYER_PED_ID */ sub_1384(), 0 );
        if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "ssta_Blood2" )))
        {
             /* KILL_ANY_MISSION_SPEECH */ sub_53398( 0 );
             /* P_SPEECH_PLAY_MONOLOGUE */ sub_74626( "SSTD_LATB", ref uVar2 );
            FOUND_EXPLORATION_ITEM( "ssta_Blood2" );
        }
        l_U2293 = 1;
    }
    if (l_U2293)
    {
        if (CAMERA_ANIMATED_CURRENT_TIME() >= 2950)
        {
             /* MAL_SETPEDVISIBLE */ sub_92450(  /* PLAYER_PED_ID */ sub_1384(), 1 );
            CAMERA_ANIMATED_STOP( 0, 0 );
             /* NIS_POST_SETUP */ sub_68183( 1, 1 );
            l_U2293 = 0;
             /* P_ENABLE_POI */ sub_10549( ref l_U2207, 1 );
        }
    }
    return;
}

/* MAL_SETPEDVISIBLE */ void sub_92450(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_VISIBLE( uParam0, uParam1 );
    }
    else
    {
         /* MAL_WRITESCRIPTLOG */ sub_2550( "MAL_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

/* P_START_HEADTRACKING_PED */ void sub_92826(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND ((DOES_PED_EXIST( uParam1 )) AND ((NOT (IS_PED_DEAD( uParam0 ))) AND (DOES_PED_EXIST( uParam0 )))))
    {
        TASK_LOOK_AT_PED( uParam0, uParam1, uParam2, 0 );
    }
    return;
}

/* MAL_ES_UNBLOCKANDCOMBATPLAYER */ void sub_93041(int iParam0, unknown uParam1)
{
     /* MAL_UNBLOCKANDCOMBATPLAYER */ sub_93096( iParam0 + 0, iParam0->_fU80, uParam1 );
    return;
}

/* MAL_UNBLOCKANDCOMBATPLAYER */ void sub_93096(unknown uParam0, unknown uParam1, unknown uParam2)
{
     /* MAL_UNBLOCKANDCOMBATPED */ sub_93146( uParam0,  /* PLAYER_PED_ID */ sub_1384(), uParam1, uParam2 );
    return;
}

/* MAL_UNBLOCKANDCOMBATPED */ void sub_93146(unknown uParam0, unknown uParam1, unknown uParam2, boolean bParam3)
{
    unknown uVar6;

     /* MAL_WRITESCRIPTLOG */ sub_2550( "MAL_UnblockAndCombatPed" );
    OPEN_SEQUENCE_TASK( ref uVar6 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
         /* MAL_WRITESCRIPTLOG */ sub_2550( "MAL_UnblockAndCombatPed: Victim is not dead" );
        TASK_COMBAT_PED( 0, uParam1 );
    }
    CLOSE_SEQUENCE_TASK( uVar6 );
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
         /* MAL_WRITESCRIPTLOG */ sub_2550( "MAL_UnblockAndCombatPed: Ped is not dead" );
        if (bParam3)
        {
            CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        }
        else
        {
            CLEAR_PED_TASKS( (uParam0^) );
        }
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam2 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar6 );
    }
    CLEAR_SEQUENCE_TASK( uVar6 );
    return;
}

/* MAL_SETACTINWITHFOCUSPOS */ void sub_94128(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_SET_ACTION_INTENTION( (uParam0^), uParam4, uParam5, uParam1 );
    }
    return;
}

/* MAL_COMPAREPEDPOSAXIS */ int sub_95073(unknown uParam0, unknown uParam1, unknown uParam2, float fParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    float fVar9;

    uVar6 = { /* MAL_GETPEDCOORDS */ sub_60335( uParam0 )};
    if (ARE_STRINGS_EQUAL( uParam1, "X" ))
    {
        fVar9 = uVar6._fU0;
    }
    else if (ARE_STRINGS_EQUAL( uParam1, "Y" ))
    {
        fVar9 = uVar6._fU4;
    }
    else if (ARE_STRINGS_EQUAL( uParam1, "Z" ))
    {
        fVar9 = uVar6._fU8;
    };;;
    if (ARE_STRINGS_EQUAL( uParam2, "Greater" ))
    {
        if (fVar9 > fParam3)
        {
            return 1;
        }
    }
    else if (ARE_STRINGS_EQUAL( uParam2, "Less" ))
    {
        if (fVar9 < fParam3)
        {
            return 1;
        }
    }
    return 0;
}

/* MAL_ES_STAYINCOVER */ void sub_95421(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;

    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        OPEN_SEQUENCE_TASK( ref uVar5 );
        TASK_COMBAT_SNAP_TO_COVER( 0, uParam1, uParam2, 0 );
        CLOSE_SEQUENCE_TASK( uVar5 );
        TASK_PERFORM_SEQUENCE( iParam0->_fU0, uVar5 );
        CLEAR_SEQUENCE_TASK( uVar5 );
        SET_PED_FLAG_LOCK_TO_COVER( iParam0->_fU0, 1 );
    }
    return;
}

/* P_HANDLE_PASSOS_INTERRUPTIONS */ void sub_95593(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
     /* MAL_HANDLEPASSOSINTERRUPTIONSWITHDIALOGUE */ sub_95719( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, 95647, 1077936128, 1069547520, 1065353216 );
    return;
}

/* MAL_DUMMYPASSOSINTERRUPTDIALOGUECALL */ void sub_95647(unknown uParam0)
{
    return;
}

/* MAL_HANDLEPASSOSINTERRUPTIONSWITHDIALOGUE */ void sub_95719(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    unknown uVar12;

    if (( /* MAL_GETACTINTSTATUS */ sub_60483( uParam0, 29 )) == 3)
    {
        uVar12 = nil;
        if ((( /* MAL_HASPLAYERFIRED */ sub_84804( 1 )) AND (IS_PED_IN_CROSSHAIR_CYLINDER( uParam0, 2, 10000, 0, -1082130432 ))) || (HAS_BULLET_IMPACTED_IN_AREA(  /* MAL_GETPEDCOORDS */ sub_60335( uParam0 ), 3, ref uVar12 )))
        {
             /* MAL_WRITESCRIPTLOG */ sub_2550( "PLAYER SHOT AT PASSOS" );
             /* MAL_SETACTINWITHFOCUSPOS */ sub_94128( ref uParam0,  /* MAL_GETPEDCOORDS */ sub_60335(  /* PLAYER_PED_ID */ sub_1384() ), 34, 1000 );
            SET_PED_PRIMARY_LOOKAT( uParam0,  /* PLAYER_PED_ID */ sub_1384() );
            (uParam1^) = 1;
            break;
            uParam6;
            0;
            break;
        }
        if (NOT (uParam2^))
        {
            if ((( /* MAL_GETACTINTSTATUS */ sub_60483( uParam0, 32 )) != 3) AND ((( /* MAL_GETACTINTSTATUS */ sub_60483( uParam0, 33 )) != 3) AND (IS_PED_TOUCHING_PED(  /* PLAYER_PED_ID */ sub_1384(), uParam0 ))))
            {
                 /* MAL_WRITESCRIPTLOG */ sub_2550( "BAD TOUCH!!" );
                (uParam2^) = 1;
                (uParam1^) = 1;
                 /* MAL_SETACTINWITHFOCUSPOS */ sub_94128( ref uParam0,  /* MAL_GETPEDCOORDS */ sub_60335(  /* PLAYER_PED_ID */ sub_1384() ), 35, 1000 );
                SET_PED_PRIMARY_LOOKAT( uParam0,  /* PLAYER_PED_ID */ sub_1384() );
                break;
                uParam6;
                1;
                break;
            }
        }
        else if (NOT (IS_PED_TOUCHING_PED(  /* PLAYER_PED_ID */ sub_1384(), uParam0 )))
        {
            (uParam2^) = 0;
        }
        if (NOT (uParam3^))
        {
            if ( /* MAL_CHECKANGLEANDDISTANCEBETWEENPEDANDPLAYER */ sub_96091( ref uParam0, 300, 100, -1, 0, 0 ))
            {
                if ((IS_CONTROL_PRESSED( 0, 6 )) AND (IS_PED_IN_CROSSHAIR_CYLINDER( uParam0, 1, 10000, 0, -1082130432 )))
                {
                    (uParam1^) = 1;
                    (uParam3^) = 1;
                     /* MAL_SETACTINWITHFOCUSPOS */ sub_94128( ref uParam0,  /* MAL_GETPEDCOORDS */ sub_60335(  /* PLAYER_PED_ID */ sub_1384() ), 32, 1000 );
                    SET_PED_PRIMARY_LOOKAT( uParam0,  /* PLAYER_PED_ID */ sub_1384() );
                     /* MAL_WRITESCRIPTLOG */ sub_2550( "PLAYER AIMING AT PASSOS" );
                    break;
                    uParam6;
                    2;
                    break;
                }
            }
        }
        else if ((NOT (IS_CONTROL_PRESSED( 0, 6 ))) || (NOT (IS_PED_IN_CROSSHAIR_CYLINDER( uParam0, 1.50000000, 10000, 0, -1082130432 ))))
        {
            if (( /* MAL_GETACTINTSTATUS */ sub_60483( uParam0, 32 )) != 3)
            {
                (uParam3^) = 0;
                 /* MAL_WRITESCRIPTLOG */ sub_2550( "PLAYER NO LONGER AIMING AT PASSOS" );
            }
        }
        if (NOT (uParam1^))
        {
            if (( /* MAL_CHECKANGLEANDDISTANCEBETWEENPEDANDPLAYER */ sub_96091( ref uParam0, uParam9, 180, -1, 46, 0 )) || (( /* MAL_CHECKANGLEANDDISTANCEBETWEENPEDANDPLAYER */ sub_96091( ref uParam0, uParam8, 45, -1, 31, 0 )) || ( /* MAL_CHECKANGLEANDDISTANCEBETWEENPEDANDPLAYER */ sub_96091( ref uParam0, uParam7, 30, -1, 0, 0 ))))
            {
                 /* MAL_WRITESCRIPTLOG */ sub_2550( "INTERRUPTING PASSOS" );
                 /* MAL_SETACTINWITHFOCUSPOS */ sub_94128( ref uParam0,  /* MAL_GETPEDCOORDS */ sub_60335(  /* PLAYER_PED_ID */ sub_1384() ), 33, 1000 );
                SET_PED_PRIMARY_LOOKAT( uParam0,  /* PLAYER_PED_ID */ sub_1384() );
                (uParam1^) = 1;
            }
        }
        else if (( /* MAL_CHECKANGLEANDDISTANCEBETWEENPEDANDPLAYER */ sub_96091( ref uParam0, -1, 180, uParam8 + 1, 91, 0 )) || ( /* MAL_CHECKANGLEANDDISTANCEBETWEENPEDANDPLAYER */ sub_96091( ref uParam0, -1, 90, uParam7 + 1, 0, 0 )))
        {
            if ((NOT (uParam2^)) AND (NOT (uParam3^)))
            {
                if (( /* MAL_ISACTINTCOMPLETED */ sub_60444( ref uParam0, 35, 1 )) || (( /* MAL_ISACTINTCOMPLETED */ sub_60444( ref uParam0, 32, 1 )) || (( /* MAL_ISACTINTCOMPLETED */ sub_60444( ref uParam0, 34, 1 )) || ( /* MAL_ISACTINTCOMPLETED */ sub_60444( ref uParam0, 33, 1 )))))
                {
                     /* MAL_FINISHACTINT */ sub_60571( ref uParam0, 33 );
                     /* MAL_FINISHACTINT */ sub_60571( ref uParam0, 34 );
                     /* MAL_FINISHACTINT */ sub_60571( ref uParam0, 32 );
                     /* MAL_FINISHACTINT */ sub_60571( ref uParam0, 35 );
                     /* MAL_FINISHACTINT */ sub_60571( ref uParam0, 31 );
                     /* MAL_SETACTINT */ sub_73600( uParam0, 36, 1000 );
                    CLEAR_PED_PRIMARY_LOOKAT( uParam0 );
                    (uParam1^) = 0;
                    (uParam3^) = 0;
                    (uParam2^) = 0;
                    (uParam4^) = 0;
                     /* CREATETIMER */ sub_2750( iParam5,  /* F_GETRANDOMINTINRANGE */ sub_85401( 10000, 15000 ), 1, 0 );
                    return;
                }
            }
        }
        if (( /* MAL_GETACTINTSTATUS */ sub_60483( uParam0, 30 )) == 3)
        {
            if ( /* ISTIMERDONE */ sub_3623( iParam5 ))
            {
                 /* MAL_SETACTINWITHFOCUSPOS */ sub_94128( ref uParam0,  /* MAL_GETPEDCOORDS */ sub_60335(  /* PLAYER_PED_ID */ sub_1384() ), 31, 1000 );
                (uParam4^)++;
                break;
                uParam6;
                3;
                break;
            }
            else if ((uParam4^) < 3)
            {
                if ((iParam5->_fU16) || (NOT ( /* HASTIMERBEENACTIVATED */ sub_5115( iParam5 ))))
                {
                     /* CREATETIMER */ sub_2750( iParam5,  /* F_GETRANDOMINTINRANGE */ sub_85401( 10000, 15000 ), 1, 0 );
                     /* STARTTIMER */ sub_2902( iParam5 );
                }
            }
        }
    }
     /* MAL_ISACTINTCOMPLETED */ sub_60444( ref uParam0, 31, 1 );
     /* MAL_ISACTINTCOMPLETED */ sub_60444( ref uParam0, 36, 1 );
    return;
}

/* MAL_CHECKANGLEANDDISTANCEBETWEENPEDANDPLAYER */ int sub_96091(unknown uParam0, float fParam1, unknown uParam2, float fParam3, float fParam4, boolean bParam5)
{
    float fVar8;

    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        fVar8 =  /* GET_DISTANCE_BETWEEN_PEDS */ sub_17469( (uParam0^),  /* PLAYER_PED_ID */ sub_1384(), 0 );
        if ((fVar8 > fParam1) AND (fParam1 > -1))
        {
            return 0;
        }
        else if ((fVar8 < fParam3) AND (fParam3 > -1))
        {
            return 0;
        }
        else if (NOT (IS_PED_FACING_PED( (uParam0^),  /* PLAYER_PED_ID */ sub_1384(), uParam2 )))
        {
            return 0;
        }
        else if ((IS_PED_FACING_PED( (uParam0^),  /* PLAYER_PED_ID */ sub_1384(), fParam4 )) AND (fParam4 > 0))
        {
            return 0;
        }
        else if (bParam5)
        {
            PRINTSTRING( "MAL_CheckAngleAndDistanceBetweenPedAndPlayer: Actual Distance: " );
            PRINTFLOAT( fVar8 );
            PRINTSTRING( " MAX DISTANCE: " );
            PRINTFLOAT( fParam1 );
            PRINTSTRING( " MIN DISTANCE: " );
            PRINTFLOAT( fParam3 );
            PRINTSTRING( " MAX ANGLE: " );
            PRINTFLOAT( uParam2 );
            PRINTSTRING( " MIN ANGLE: " );
             /* WRITE_FLOAT */ sub_58745( fParam4 );
        }
        return 1;;;;;
    }
    return 0;
}

/* P_HANDLE_STATE_PRESS_BOOTH */ void sub_97498(boolean bParam0)
{
    if (bParam0)
    {
         /* P_CLEAR_PED_HEADTRACKING */ sub_97549( g_U4007 );
         /* P_PASSOS_MOVE_TO_PRESS_LOUNGE */ sub_97808();
         /* MAL_ESA_PROCESSINGFREEZE */ sub_62336( ref l_U1270, 0, 0, -1 );
         /* MAL_ESA_FREEZE */ sub_62930( ref l_U1270, 0, 0, -1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1270[0]._fU0, 0 );
        CLEAR_PED_TASKS( l_U1270[0]._fU0 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( l_U1270[0]._fU0, 33.10590000, 66.71551000, 12.55032000,  /* PLAYER_PED_ID */ sub_1384(), 0, 1092616192, 1101004800, -1082130432, 3 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1270[1]._fU0, 0 );
        CLEAR_PED_TASKS( l_U1270[1]._fU0 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( l_U1270[1]._fU0, 42.29852000, 66.18176000, 12.55529000,  /* PLAYER_PED_ID */ sub_1384(), 0, 1092616192, 1101004800, -1082130432, 3 );
         /* P_START_CHECKPOINT_THREAD */ sub_98352( ref g_U888[7] );
        l_U132 = 0;
    }
     /* P_HANDLE_FCBLOOD_SCENE */ sub_92315();
    if (NOT l_U1543)
    {
        if (NOT (IS_PED_DEAD( l_U1207._fU0 )))
        {
            if (( /* MAL_COMPAREPEDPOSAXIS */ sub_95073( l_U1207._fU0, "X", "Greater", 40.50000000 )) AND ( /* MAL_COMPAREPEDPOSAXIS */ sub_95073( l_U1207._fU0, "Y", "Less", 76 )))
            {
                l_U1543 = 1;
                 /* MAL_ES_CLEAN */ sub_10056( ref l_U1499 );
            }
        }
        else
        {
             /* MAL_ES_FREEZE */ sub_62997( ref l_U1499, 0 );
             /* MAL_ES_PROCESSINGFREEZE */ sub_62413( ref l_U1499, 0 );
             /* MAL_ES_SETPEDVISIBLE */ sub_64592( ref l_U1499, 1 );
             /* MAL_ES_STAYINCOVER */ sub_95421( ref l_U1499, "foodCourt_simple", "Corner Position24" );
            l_U1543 = 1;
        }
    }
    if (NOT l_U2187)
    {
        if ( /* MAL_COMPAREPLAYERPOSAXIS */ sub_98643( "Y", "Less", 73.50000000 ))
        {
             /* MAL_SETPEDALERTNESS */ sub_84064( ref l_U2040, 3 );
             /* MAL_SETLOCKEDANDREGISTEREDONPLAYER */ sub_3186( ref l_U2040 );
             /* MAL_CLEARHIDEINCOVER */ sub_98896( l_U2040 );
             /* MAL_UNBLOCKANDCOMBATPLAYER */ sub_93096( ref l_U2040, 2, 0 );
            l_U2187 = 1;
             /* MAL_ES_SETASONESHOTKILL */ sub_64888( l_U1207, 0 );
            if (NOT (IS_PED_DEAD( l_U1207._fU0 )))
            {
                SET_PED_FLAG_LOCK_TO_COVER( l_U1207._fU0, 0 );
                SET_PED_FIRE_AT_COVER( l_U1207._fU0, 1 );
            }
            if (NOT (IS_PED_DEAD( l_U1499._fU0 )))
            {
                SET_PED_FLAG_LOCK_TO_COVER( l_U1499._fU0, 0 );
                SET_PED_FIRE_AT_COVER( l_U1499._fU0, 1 );
            }
        }
    }
    if (NOT l_U2193)
    {
        if ((IS_PED_DEAD( l_U1499._fU0 )) AND ((( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_85965( ref l_U1270 )) < 1) AND ((NOT (IS_PED_DEAD( l_U1207._fU0 ))) AND (IS_PED_DEAD( l_U2040 )))))
        {
             /* MAL_SETCANTRIGGERBULLETCAM */ sub_46259( l_U1207._fU0, 1 );
            BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
            l_U2193 = 1;
        }
        else if ((IS_PED_DEAD( l_U1499._fU0 )) AND ((( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_85965( ref l_U1270 )) < 1) AND ((IS_PED_DEAD( l_U1207._fU0 )) AND (NOT (IS_PED_DEAD( l_U2040 ))))))
        {
             /* MAL_SETCANTRIGGERBULLETCAM */ sub_46259( l_U2040, 1 );
            BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
            l_U2193 = 1;
        }
        else if ((IS_PED_DEAD( l_U1499._fU0 )) AND ((IS_PED_DEAD( l_U2040 )) AND ((IS_PED_DEAD( l_U1207._fU0 )) AND (( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_85965( ref l_U1270 )) == 1))))
        {
             /* MAL_ESA_ASSIGNBULLETCAMTOLASTLIVINGPED */ sub_86340( ref l_U1270, 0, 0, 1 );
            l_U2193 = 1;
        }
        else if ((( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_85965( ref l_U1270 )) < 1) AND ((IS_PED_DEAD( l_U1207._fU0 )) AND ((IS_PED_DEAD( l_U2040 )) AND (NOT (IS_PED_DEAD( l_U1499._fU0 ))))))
        {
             /* MAL_SETCANTRIGGERBULLETCAM */ sub_46259( l_U1499._fU0, 1 );
            BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
            l_U2193 = 1;
        };;;;
    }
    if (( /* F_HAS_PASSOS_REACHED_PRESS_LOUNGE */ sub_99518()) AND (NOT l_U2134))
    {
         /* WRITESCRIPTLOG */ sub_822( "GA", "Passos arrived at press booth door.", 0 );
         /* STARTTIMER */ sub_2902( ref l_U2139 );
        l_U2134 = 1;
    }
    if ((NOT l_U2136) AND (l_U2134))
    {
        if ( /* ISTIMERDONE */ sub_3623( ref l_U2139 ))
        {
             /* P_PASSOS_SPEAK_MOVE_TO_PRESS_BOOTH */ sub_99748();
        }
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_73387( ref l_U2113, 0 ))
    {
         /* WRITESCRIPTLOG */ sub_822( "GA", "Player entered the press booth", 0 );
        l_U2135 = 1;
    }
    if ((IS_PED_DEAD( l_U1499._fU0 )) AND ((( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_85965( ref l_U1270 )) < 1) AND ((IS_PED_DEAD( l_U1207._fU0 )) AND ((NOT l_U2136) AND ((l_U2134) AND ((l_U2135) AND (l_U2187)))))))
    {
         /* P_PASSOS_MOVE_IN_PRESS_BOOTH */ sub_100360();
        l_U2136 = 1;
    }
    if ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND (( /* F_IS_PASSOS_READY_TO_SHOOT_SNIPER */ sub_100679()) AND ((NOT l_U2137) AND (l_U2136))))
    {
         /* P_PASSOS_IN_PRESS_SHOOT_AT_SNIPER_START */ sub_100822();
        l_U2137 = 1;
        l_U128 = 16;
         /* WRITESCRIPTLOG */ sub_822( "GA", "eCheckpointState = CP_NIS_PASSOS_SHOOTS_SNIPER", 0 );
    }
    if (( /* MAL_GETACTINTSTATUS */ sub_60483( g_U4007, 29 )) == 3)
    {
         /* P_HANDLE_PASSOS_INTERRUPTIONS */ sub_95593( g_U4007, ref l_U2350, ref l_U2351, ref l_U2352, ref l_U2353, ref l_U2354 );
    }
    if ((IS_PED_DEAD( l_U1499._fU0 )) AND ((( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_85965( ref l_U1270 )) < 1) AND ((IS_PED_DEAD( l_U1207._fU0 )) AND (IS_PED_DEAD( l_U2040 )))))
    {
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
        l_U128 = 17;
         /* WRITESCRIPTLOG */ sub_822( "GA", "eCheckpointState = CP_FINISHED", 0 );
    }
    return;
}

/* P_CLEAR_PED_HEADTRACKING */ void sub_97549(int iParam0)
{
    if (NOT (IS_PED_DEAD( iParam0 )))
    {
        if (iParam0 == ( /* PLAYER_PED_ID */ sub_1384()))
        {
             /* WRITESCRIPTLOG */ sub_822( "[AT]", "Clearing headtracking on Max.", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_822( "[AT]", "Clearing headtracking on non-player ped.", 0 );
        }
        TASK_CLEAR_LOOK_AT( iParam0 );
    }
    else
    {
        SCRIPT_ASSERT( "Passed invalid or dead ped to P_CLEAR_PED_HEADTRACKING!", 0 );
    }
    return;
}

/* P_PASSOS_MOVE_TO_PRESS_LOUNGE */ void sub_97808()
{
     /* WRITESCRIPTLOG */ sub_822( "GA", "P_PASSOS_MOVE_TO_PRESS_LOUNGE start", 0 );
    ISEQ_UNREGISTER_ENTITY( -813779471, "passos_entity" );
    ISEQ_TERMINATE( -813779471 );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() ))) AND (NOT (IS_PED_DEAD( g_U4007 ))))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( g_U4007 );
        ISEQ_REGISTER_ENTITY( -647680815, "passos_entity", g_U4007, 0 );
         /* TELEPORTPED */ sub_43419( g_U4007, 47.80000000, 81.90000000, 12.99700000, 174.00000000 );
        SET_ROOM_FOR_PED_BY_NAME( g_U4007, ref g_U2508 );
        ISEQ_START( -647680815 );
    }
     /* WRITESCRIPTLOG */ sub_822( "GA", "P_PASSOS_MOVE_TO_PRESS_LOUNGE end", 0 );
    return;
}

/* P_START_CHECKPOINT_THREAD */ void sub_98352(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

/* MAL_COMPAREPLAYERPOSAXIS */ int sub_98643(unknown uParam0, unknown uParam1, float fParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    float fVar8;

    uVar5 = { /* MAL_GETPEDCOORDS */ sub_60335(  /* PLAYER_PED_ID */ sub_1384() )};
    if (ARE_STRINGS_EQUAL( uParam0, "X" ))
    {
        fVar8 = uVar5._fU0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "Y" ))
    {
        fVar8 = uVar5._fU4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "Z" ))
    {
        fVar8 = uVar5._fU8;
    };;;
    if (ARE_STRINGS_EQUAL( uParam1, "Greater" ))
    {
        if (fVar8 > fParam2)
        {
            return 1;
        }
    }
    else if (ARE_STRINGS_EQUAL( uParam1, "Less" ))
    {
        if (fVar8 < fParam2)
        {
            return 1;
        }
    }
    return 0;
}

/* MAL_CLEARHIDEINCOVER */ void sub_98896(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( uParam0, 0 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( uParam0, 0 );
    }
    return;
}

/* F_HAS_PASSOS_REACHED_PRESS_LOUNGE */ int sub_99518()
{
    if (NOT (IS_PED_DEAD( g_U4007 )))
    {
        if (((PED_GET_ACTION_INTENTION_STATUS( g_U4007, 52 )) == 1) AND (ISEQ_QUERY_ENTITY_STATE( -647680815, "passos_entity", 3 )))
        {
            return 1;
        }
    }
    return 0;
}

/* P_PASSOS_SPEAK_MOVE_TO_PRESS_BOOTH */ void sub_99748()
{
     /* WRITESCRIPTLOG */ sub_822( "GA", "P_PASSOS_SPEAK_MOVE_TO_PRESS_BOOTH start", 0 );
    if ((l_U2186 < 2) AND ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() ))) AND ((ISEQ_QUERY_ENTITY_STATE( -647680815, "passos_entity", 3 )) AND (NOT (IS_PED_DEAD( g_U4007 )))))))
    {
        PED_SET_ACTION_INTENTION( g_U4007, 37, 100, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1384() ) );
        if (l_U2186 == 0)
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_55979( ref l_U2166 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 1, g_U4007, "PASSOS", ref l_U2166, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 0,  /* PLAYER_PED_ID */ sub_1384(), "MAX", ref l_U2166, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_56357( "SSTD_STPJ", ref l_U2166, 7, 1 );
             /* P_CREATE_AND_START_TIMER */ sub_57262( ref l_U2139, 10000 );
        }
        else
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_55979( ref l_U2166 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 1, g_U4007, "PASSOS", ref l_U2166, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56090( 0,  /* PLAYER_PED_ID */ sub_1384(), "MAX", ref l_U2166, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_56357( "SSTD_SWGB", ref l_U2166, 7, 1 );
        }
        l_U2186++;
    }
     /* WRITESCRIPTLOG */ sub_822( "GA", "P_PASSOS_SPEAK_MOVE_TO_PRESS_BOOTH end", 0 );
    return;
}

/* P_PASSOS_MOVE_IN_PRESS_BOOTH */ void sub_100360()
{
     /* WRITESCRIPTLOG */ sub_822( "GA", "P_PASSOS_MOVE_IN_PRESS_BOOTH start", 0 );
     /* KILL_SPEECH */ sub_65531( ref l_U2166, 0 );
    if ((NOT (IS_PED_DEAD( l_U2040 ))) AND ((ISEQ_QUERY_ENTITY_STATE( -647680815, "passos_entity", 3 )) AND (NOT (IS_PED_DEAD( g_U4007 )))))
    {
        SET_PED_HEADING( g_U4007, 80.00000000 );
        PED_SET_ACTION_INTENTION( g_U4007, 47, 10000, 0.00000000, 0.00000000, 0.00000000 );
        SET_PED_DEFAULT_AIM_AT_PED( g_U4007, l_U2040 );
        TASK_LOOK_AT_PED( g_U4007, l_U2040, -1, 0 );
    }
     /* WRITESCRIPTLOG */ sub_822( "GA", "P_PASSOS_MOVE_IN_PRESS_BOOTH end", 0 );
    return;
}

/* F_IS_PASSOS_READY_TO_SHOOT_SNIPER */ int sub_100679()
{
    if ((NOT (IS_PED_DEAD( l_U2040 ))) AND (NOT (IS_PED_DEAD( g_U4007 ))))
    {
        if ((ISEQ_QUERY_STATE( -647680815, 6 )) || ((PED_GET_ACTION_INTENTION_STATUS( g_U4007, 50 )) == 1))
        {
            return 1;
        }
    }
    return 0;
}

/* P_PASSOS_IN_PRESS_SHOOT_AT_SNIPER_START */ void sub_100822()
{
     /* WRITESCRIPTLOG */ sub_822( "AT", "P_PASSOS_IN_PRESS_SHOOT_AT_SNIPER_START start", 0 );
     /* NIS_CREATE_STATIC_CAM */ sub_81882( ref l_U2493, 40.48429000, 68.97411000, 13.53943000, 8.03616500, -0.00000700, -4.95377300, 45.00000000, 800 );
     /* NIS_CREATE_STATIC_CAM */ sub_81882( ref l_U2524, 34.49781000, 67.67491000, 13.46317000, 1.56934300, -0.00002300, 112.08950000, 45.00000000, 2000 );
     /* NIS_PRE_SETUP */ sub_67259( 1, 0, 0, 0 );
    SET_PED_INVINCIBLE( g_U4007, 1 );
     /* TELEPORTPED */ sub_43419( g_U4007, 41.24318000, 71.75642000, 12.56856000, 130.44760000 );
    if (NOT (IS_PED_DEAD( l_U2040 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U2040, 1 );
         /* TELEPORTPED */ sub_43419( l_U2040, 31.64731000, 65.62265000, 12.55025000, 13.62000000 );
        TASK_STAND_STILL( l_U2040, -1 );
        SET_PED_AS_ONE_SHOT_KILL( l_U2040, 1 );
         /* MAL_SETCANTRIGGERBULLETCAMWITHSPECIFICCAM */ sub_101193( l_U2040, "PIST_NORMAL_04_F" );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
    }
    if (NOT (IS_PED_DEAD( g_U4007 )))
    {
         /* FINISHALLACTIONINTENTIONS */ sub_101527( g_U4007 );
         /* MAL_PEDPLAYERACTIONTREENODE */ sub_60837( g_U4007, "/Global/PASSOS_VIG_35_CD/PASSOS_VIG_35_CD_CONTROL/PASSOS_VIG_35_D_BOOTH/PASSOS_SHOOTS_THE_SNIPER" );
        SET_PED_CAN_INITIATE_BULLET_CAM( g_U4007, 1 );
        SET_PED_PERFECT_ACCURACY_OVERRIDE( g_U4007, 1 );
    }
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1384() )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1384() );
         /* TELEPORTPED */ sub_43419(  /* PLAYER_PED_ID */ sub_1384(), 42.20940000, 69.78891000, 12.56539000, 191.72340000 );
    }
     /* NIS_PLAY_STATIC_CAMERA */ sub_82166( ref l_U2493 );
     /* WRITESCRIPTLOG */ sub_822( "AT", "P_PASSOS_IN_PRESS_SHOOT_AT_SNIPER_START end", 0 );
    return;
}

/* MAL_SETCANTRIGGERBULLETCAMWITHSPECIFICCAM */ void sub_101193(unknown Result, unknown uParam1)
{
    if ( /* MAL_SETCANTRIGGERBULLETCAM */ sub_46259( Result, 1 ))
    {
         /* MAL_WRITESCRIPTLOG */ sub_2550( "MAL_SetCanTriggerBulletCamWithSpecificCam has added bullet cam, moving on" );
        PRINTSTRING( "BULLET CAM PREF: " );
         /* WRITE_STRING */ sub_14754( uParam1 );
        if (NOT (IS_PED_DEAD( Result )))
        {
             /* MAL_WRITESCRIPTLOG */ sub_2550( "MAL_SetCanTriggerBulletCamWithSpecificCam setting BC pref" );
            SET_BULLET_CAM_PREF( Result, uParam1, uParam1, uParam1, 0, 1, 0, 0, 0, 0, 0, 0, 0 );
            return Result;
        }
    }
    return nil;
}

/* FINISHALLACTIONINTENTIONS */ void sub_101527(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
         /* WRITESCRIPTLOG */ sub_822( "[SA]", "Clearing ACT_INT_SEQ_ACTION01 - ACT_INT_SEQ_ACTION12 for ped.", 0 );
        PED_FINISH_ACTION_INTENTION( uParam0, 47 );
        PED_FINISH_ACTION_INTENTION( uParam0, 48 );
        PED_FINISH_ACTION_INTENTION( uParam0, 49 );
        PED_FINISH_ACTION_INTENTION( uParam0, 50 );
        PED_FINISH_ACTION_INTENTION( uParam0, 51 );
        PED_FINISH_ACTION_INTENTION( uParam0, 52 );
        PED_FINISH_ACTION_INTENTION( uParam0, 53 );
        PED_FINISH_ACTION_INTENTION( uParam0, 54 );
        PED_FINISH_ACTION_INTENTION( uParam0, 55 );
        PED_FINISH_ACTION_INTENTION( uParam0, 56 );
        PED_FINISH_ACTION_INTENTION( uParam0, 57 );
        PED_FINISH_ACTION_INTENTION( uParam0, 58 );
    }
    return;
}

/* MAL_CLEARACTINT */ void sub_102453(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

/* P_KILL_PED */ void sub_102548(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

/* P_STORES_SNIPER_CUTSCENE_MEMORY_PREP */ void sub_102802()
{
     /* WRITESCRIPTLOG */ sub_822( "SP", "P_STORES_SNIPER_CUTSCENE_MEMORY_PREP", "###" );
     /* TERMINATEISEQ */ sub_6819( -1310389432, 0 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7129( -1310389432, ref g_U1263 );
     /* TERMINATEISEQ */ sub_6819( -263036009, 0 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7129( -263036009, ref g_U1263 );
     /* TERMINATEISEQ */ sub_6819( 727272178, 0 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7129( 727272178, ref g_U1263 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_103006( "LEVEL_S_STAD_CP_03", ref g_U1354 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_103352( g_U2382, ref g_U1069 );
     /* CLEANPLACEMENTARRAY */ sub_9665( ref l_U441 );
     /* CLEANPLACEMENTARRAY */ sub_9665( ref l_U445 );
     /* MAL_ESA_CLEAN */ sub_10008( ref g_U4008 );
     /* MAL_ESA_CLEAN */ sub_10008( ref g_U4141 );
     /* MAL_ESA_CLEAN */ sub_10008( ref l_U1013 );
     /* CLEANPEDARRAY */ sub_9922( ref g_U4187 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( 65476, 1065353216, 0 );
     /* LOADSEAMLESSCUTSCENE */ sub_38350( "03_03_STADIUM", 0 );
    return;
}

/* P_STREAMREQ_ANIM_DICT_REMOVE */ void sub_103006(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_7267( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ANIM_DICT asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE */ void sub_103352(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_7267( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a MODEL_NAME asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Removing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* P_RELEASE_CON_ASSETS */ void sub_104064()
{
     /* WRITESCRIPTLOG */ sub_822( "GA", "P_RELEASE_CON_ASSETS start", 0 );
     /* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ sub_104145( ref l_U113, ref g_U1069 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE_ARRAY */ sub_104250( ref l_U124, ref g_U1214 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_103006( "DAM_KO", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_103006( "DAM_DEAD", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_103006( "LEVEL_S_STAD_CP_03", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_103006( "LEVEL_S_STAD_PU", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_103006( "PAS_INT", ref g_U1354 );
     /* P_UNLOAD_PLGE_ANIM_DICTS */ sub_104784( 0 );
     /* WRITESCRIPTLOG */ sub_822( "GA", "P_RELEASE_CON_ASSETS end", 0 );
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ void sub_104145(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_103352( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE_ARRAY */ void sub_104250(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_104324( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE */ void sub_104324(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_7267( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a WEAPON_TYPE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_UNLOAD_PLGE_ANIM_DICTS */ void sub_104784(boolean bParam0)
{
    if (NOT bParam0)
    {
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_103006( "PLGE_RIFLE_CROUCH", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_103006( "PLGE_PSTL_CROUCH", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_103006( "PLGE_RIFLE_CORE", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_103006( "PLGE_PSTL_CORE", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_103006( "PLGE_RIFLE_CORE_RELOAD", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_103006( "PLGE_PSTL_CORE_RELOAD", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_103006( "PLGE_RIFLE_HANDSIG", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_103006( "PLGE_PSTL_HANDSIG", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_103006( "PLGE_RIFLE_ACTIONS", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_103006( "PLGE_PSTL_ACTIONS", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_103006( "PLGE_RIFLE_KNEE", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_103006( "PLGE_PSTL_KNEE", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_103006( "PLGE_RIFLE_COVER", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_103006( "PLGE_PSTL_COVER", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_103006( "PLGE_RIFLE_REACT", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_103006( "PLGE_PSTL_REACT", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_103006( "PLGE_RIFLE_COVER_EXIT", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_103006( "PLGE_PSTL_COVER_EXIT", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_103006( "PLGE_PSTL_FULLBODY", ref g_U1354 );
    }
    else
    {
         /* UNLOADANIMDICT */ sub_105407( "PLGE_RIFLE_CROUCH" );
         /* UNLOADANIMDICT */ sub_105407( "PLGE_PSTL_CROUCH" );
         /* UNLOADANIMDICT */ sub_105407( "PLGE_RIFLE_CORE" );
         /* UNLOADANIMDICT */ sub_105407( "PLGE_PSTL_CORE" );
         /* UNLOADANIMDICT */ sub_105407( "PLGE_RIFLE_CORE_RELOAD" );
         /* UNLOADANIMDICT */ sub_105407( "PLGE_PSTL_CORE_RELOAD" );
         /* UNLOADANIMDICT */ sub_105407( "PLGE_RIFLE_HANDSIG" );
         /* UNLOADANIMDICT */ sub_105407( "PLGE_PSTL_HANDSIG" );
         /* UNLOADANIMDICT */ sub_105407( "PLGE_RIFLE_ACTIONS" );
         /* UNLOADANIMDICT */ sub_105407( "PLGE_PSTL_ACTIONS" );
         /* UNLOADANIMDICT */ sub_105407( "PLGE_RIFLE_KNEE" );
         /* UNLOADANIMDICT */ sub_105407( "PLGE_PSTL_KNEE" );
         /* UNLOADANIMDICT */ sub_105407( "PLGE_RIFLE_COVER" );
         /* UNLOADANIMDICT */ sub_105407( "PLGE_PSTL_COVER" );
         /* UNLOADANIMDICT */ sub_105407( "PLGE_RIFLE_REACT" );
         /* UNLOADANIMDICT */ sub_105407( "PLGE_PSTL_REACT" );
         /* UNLOADANIMDICT */ sub_105407( "PLGE_RIFLE_COVER_EXIT" );
         /* UNLOADANIMDICT */ sub_105407( "PLGE_PSTL_COVER_EXIT" );
         /* UNLOADANIMDICT */ sub_105407( "PLGE_PSTL_FULLBODY" );
    }
    return;
}

/* UNLOADANIMDICT */ void sub_105407(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}


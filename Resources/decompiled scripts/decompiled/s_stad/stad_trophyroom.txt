void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = -1;
    l_U40 = {64536, 64536, 64536};
    l_U44 = 0;
    l_U45 = 0;
    l_U46 = 1500;
    l_U131 = 0;
    l_U133 = 0;
    l_U143 = 0;
    l_U1237 = 0;
    l_U1345 = {-105.76000000, 20.56500000, 14.28800000};
    l_U1357 = 0;
    l_U1606 = 0;
    l_U1626 = 0;
    l_U1627 = 0;
    l_U1628 = 0;
     /* WRITESCRIPTLOG */ sub_385( "SP", "Script stad_TrophyRoom.sc is starting up...", 0 );
     /* P_TR_POPULATE_VARIABLE_ARRAYS */ sub_503();
    l_U131 = 1;
    while (NOT IS_EXITFLAG_SET())
    {
         /* P_HANDLE_FAILURE */ sub_915();
        if (l_U133 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_12744();
        }
        WAIT( 0 );
    }
     /* P_CLEANUP_TR */ sub_4336( 0 );
     /* P_RELEASE_TR_ASSETS */ sub_68273();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "stad_TrophyRoom" );
     /* WRITESCRIPTLOG */ sub_385( "SP", "Script stad_TrophyRoom.sc is terminating...", 0 );
    return;
}

/* WRITESCRIPTLOG */ void sub_385(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_TR_POPULATE_VARIABLE_ARRAYS */ void sub_503()
{
     /* WRITESCRIPTLOG */ sub_385( "GA", "P_TR_POPULATE_VARIABLE_ARRAYS start", 0 );
    l_U110[0] = g_U2390;
    l_U110[1] = -1652775333;
    l_U110[2] = 1816766229;
    l_U110[3] = 1873472982;
    l_U110[4] = -1993976541;
    l_U110[5] = -2096019114;
    l_U110[6] = g_U2386;
    l_U110[7] = g_U2391;
    l_U110[8] = g_U2392;
    l_U110[9] = g_U2393;
    l_U110[10] = g_U2404;
    l_U110[11] = g_U2405;
    l_U110[12] = g_U2406;
    l_U110[13] = g_U2407;
    l_U110[14] = g_U2397;
    l_U110[15] = g_U852;
    l_U127[0] = 1194438308;
    l_U127[1] = 1478009203;
    l_U127[2] = 434544317;
     /* WRITESCRIPTLOG */ sub_385( "GA", "P_TR_POPULATE_VARIABLE_ARRAYS end", 0 );
    return;
}

/* P_HANDLE_FAILURE */ void sub_915()
{
    if (g_U855 == 9)
    {
        switch (l_U133)
        {
            case 0:
            if (( /* RESTARTING_CHECKPOINT */ sub_1117()) || (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1016() )))
            {
                AUDIO_MUSIC_SUSPEND( 4000 );
                l_U133 = 1;
                 /* WRITESCRIPTLOG */ sub_385( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if ( /* IS_RESTART_ACTIVE */ sub_1645())
            {
                l_U133 = 2;
            }
            else if (( /* F_CHECK_QUIT_RETRY */ sub_1705( 0 )) == 1)
            {
                l_U133 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1016() )))
            {
                if ((g_U888[10]._fU40 != 4) AND (g_U888[10]._fU40 != 0))
                {
                     /* WRITESCRIPTLOG */ sub_385( "CR", "Shutting down script for MCE_SECOND_BLEACHERS.", 0 );
                     /* P_RESET_CHECKPOINT_THREAD */ sub_3282( ref g_U888[10] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U888[10]._fU32 );
                    g_U3884 = 0;
                }
                l_U133 = 3;
                 /* WRITESCRIPTLOG */ sub_385( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
             /* WRITESCRIPTLOG */ sub_385( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1016() ))) AND (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1054() ))))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1054(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1016() ))
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1016(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
             /* P_LOAD_AREA */ sub_3590( 9 );
             /* P_CLEANUP_TR */ sub_4336( 1 );
            l_U133 = 4;
             /* WRITESCRIPTLOG */ sub_385( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
             /* WRITESCRIPTLOG */ sub_385( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            if (l_U74._fU0)
            {
                 /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_8112( ref l_U74,  /* PLAYER_PED_ID */ sub_1016() );
            }
            l_U133 = 5;
             /* WRITESCRIPTLOG */ sub_385( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
             /* WRITESCRIPTLOG */ sub_385( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U131 = 1;
            l_U133 = 0;
             /* WRITESCRIPTLOG */ sub_385( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

/* PLAYER_PED_ID */ int sub_1016()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_1054() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_1054()
{
    return GET_PLAYER_ID();
}

/* RESTARTING_CHECKPOINT */ int sub_1117()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1016() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1016(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1054(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1054(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1016() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1016(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* IS_RESTART_ACTIVE */ void sub_1645()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_1705(int iParam0)
{
    iParam0 = 1;
    switch (l_U45)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_1787( ref l_U47 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1016() )))
            {
                l_U46 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_1921( ref l_U47, l_U46, 1, 1 );
             /* STARTTIMER */ sub_2071( ref l_U47 );
        }
        if ( /* ISTIMERDONE */ sub_2204( ref l_U47 ))
        {
             /* WRITESCRIPTLOG */ sub_385( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1016() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1054() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1054(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U45 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U45 = 2;
            }
            else
            {
                l_U45 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_385( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_2705();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_385( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_2705();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_1787(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* CREATETIMER */ void sub_1921(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_2071(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* ISTIMERDONE */ int sub_2204(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_2705()
{
     /* WRITESCRIPTLOG */ sub_385( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_2780( ref l_U47 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1054() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1054(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U44 = 0;
    l_U44 = l_U44;
    l_U45 = 0;
    return;
}

/* RESETTIMER */ void sub_2780(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_RESET_CHECKPOINT_THREAD */ void sub_3282(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

/* P_LOAD_AREA */ void sub_3590(unknown uParam0)
{
    vector vVar3;
    unknown uVar6;
    int iVar7;
    string sVar8;
    unknown uVar9;

     /* MAL_WRITESCRIPTLOG */ sub_3628( "P_LOAD_AREA" );
    vVar3 = {g_U2138[uParam0]};
    uVar6 = g_U2256[uParam0];
    iVar7 = -1;
    switch (uParam0)
    {
        case 2:
        case 21:
        iVar7 = GET_HASH_KEY( ref g_U2460 );
        sVar8 = "Int_Bsmt_01";
        break;
        case 3:
        case 22:
        iVar7 = GET_HASH_KEY( "Room_Hallway_01" );
        sVar8 = "Int_Bsmt_02";
        break;
        case 4:
        case 23:
        iVar7 = GET_HASH_KEY( "Room_Staircase_02" );
        sVar8 = "Int_Bsmt_03";
        break;
        case 5:
        case 24:
        iVar7 = GET_HASH_KEY( ref g_U2484 );
        sVar8 = "int_store_00";
        break;
        case 9:
        case 27:
        iVar7 = GET_HASH_KEY( ref g_U2548 );
        sVar8 = "int_Trophy_01";
        break;
        case 10:
        vVar3 = {-97.16455000, 22.49700000, 26.58807000};
        SET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1016(), -2.36477500, 2.76315900, 1.17283500, 1 );
        SET_PED_HEADING(  /* PLAYER_PED_ID */ sub_1016(), uVar6 );
        LOAD_SCENE( -2.36477500, 2.76315900, 1.17283500 );
        break;
    }
    if (iVar7 == -1)
    {
        LOAD_SCENE( vVar3 );
    }
    else
    {
        uVar9 = GET_INTERIOR_FROM_NAME( sVar8, 0 );
        SET_INTERIOR_ACTIVE( uVar9, 1, 0 );
        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar9, iVar7 );
    }
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1016() )) == 0)
    {
        SET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1016(), vVar3, 1 );
        SET_PED_HEADING(  /* PLAYER_PED_ID */ sub_1016(), uVar6 );
        FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_1016(), 0 );
    }
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2296[uParam0], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2296[uParam0], 1065353216, 0 );
    return;
}

/* MAL_WRITESCRIPTLOG */ void sub_3628(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar3, 1537, "MSWW", 1537, uParam0, 1537, "###" );
    return;
}

/* P_CLEANUP_TR */ void sub_4336(unknown uParam0)
{
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_385( "GA", "P_CLEANUP_TR start", 0 );
    ISEQ_TERMINATE( -2097834305 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_4414( -2097834305, ref g_U1263 );
    ISEQ_TERMINATE( -825293602 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_4414( -825293602, ref g_U1263 );
    ISEQ_TERMINATE( -1610386741 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_4414( -1610386741, ref g_U1263 );
    if ((g_U855 < 9) || (uParam0))
    {
         /* P_CLEAN_ELEVATOR */ sub_5552( g_U3786 );
        if ((CUTSCENE_NAMED_IS_LOADING( "MID_07_STADIUM" )) || (CUTSCENE_IS_LOADED( "MID_07_STADIUM" )))
        {
            CLEAR_NAMED_CUTSCENE( "MID_07_STADIUM" );
        }
    }
     /* CLEANPLACEMENTARRAY */ sub_5855( ref l_U525 );
     /* CLEANPLACEMENT */ sub_5910( g_U829._fU0 );
     /* MAL_ESA_CLEAN */ sub_6005( ref l_U570 );
     /* P_CLOSEDOOR */ sub_6208( ref g_U3451, 1 );
     /* P_SETDOORLATCH */ sub_6465( ref g_U3451, 0 );
     /* P_SETDOORLOCKED */ sub_6546( ref g_U3451, 1 );
     /* CLEANOBJECT */ sub_5667( l_U1344 );
     /* P_ENABLE_POI */ sub_6707( ref l_U1440, 0 );
     /* P_STOP_SP_CHALLENGES */ sub_7710();
     /* CLEANOBJECT */ sub_5667( l_U1629 );
     /* CLEANOBJECT */ sub_5667( l_U1630 );
    uVar3 = DOOR_FIND_CLOSEST( g_U3458._fU0, g_U3458._fU4 );
    if (DOES_OBJECT_EXIST( uVar3 ))
    {
        SET_OBJECT_VISIBLE( uVar3, 1 );
        SET_OBJECT_COLLISION( uVar3, 1 );
    }
     /* RESETTIMER */ sub_2780( ref g_U3992 );
     /* WRITESCRIPTLOG */ sub_385( "GA", "P_CLEANUP_TR end", 0 );
    return;
}

/* P_STREAMREQ_ISEQ_REMOVE */ void sub_4414(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_4552( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a ISEQ asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ int sub_4552(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if ((uParam1^)[I] == iParam0)
            {
                DISPLAYF( "[CCB] ### The THREADID index matches the asset requested for removal: {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
            else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID index is in use and is active: {} ###", 1, 513, (uParam1^)[I] );
                Result = I;
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is in use, but is no longer active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

/* P_CLEAN_ELEVATOR */ void sub_5552(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47, unknown uParam48, unknown uParam49, unknown uParam50, unknown uParam51, unknown uParam52, unknown uParam53, unknown uParam54, unknown uParam55, unknown uParam56, unknown uParam57, unknown uParam58, unknown uParam59, unknown uParam60, unknown uParam61, unknown uParam62, unknown uParam63, unknown uParam64, unknown uParam65, unknown uParam66, unknown uParam67, unknown uParam68, unknown uParam69, unknown uParam70, unknown uParam71, unknown uParam72, unknown uParam73, unknown uParam74, unknown uParam75, unknown uParam76, unknown uParam77, unknown uParam78, unknown uParam79)
{
     /* WRITE_STRING */ sub_5612( "[SP]### P_CLEAN_ELEVATOR ###" );
     /* CLEANOBJECT */ sub_5667( uParam0._fU232 );
     /* CLEANOBJECT */ sub_5667( uParam0._fU236 );
     /* CLEANOBJECT */ sub_5667( uParam0._fU240 );
     /* CLEANOBJECT */ sub_5667( uParam0._fU244 );
     /* CLEANOBJECT */ sub_5667( uParam0._fU248 );
    return;
}

/* WRITE_STRING */ void sub_5612(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* CLEANOBJECT */ void sub_5667(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* CLEANPLACEMENTARRAY */ void sub_5855(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* CLEANPLACEMENT */ sub_5910( (uParam0^)[I] );
    }
    return;
}

/* CLEANPLACEMENT */ void sub_5910(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

/* MAL_ESA_CLEAN */ void sub_6005(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* MAL_ES_CLEAN */ sub_6053( ref (uParam0^)[I] );
    }
    return;
}

/* MAL_ES_CLEAN */ void sub_6053(int iParam0)
{
     /* CLEANPED */ sub_6083( iParam0->_fU0 );
    iParam0->_fU172 = 0;
    return;
}

/* CLEANPED */ void sub_6083(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* P_CLOSEDOOR */ void sub_6208(int iParam0, int iParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_6234( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_6318( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_6234(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_6318(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_SETDOORLATCH */ void sub_6465(int iParam0, unknown uParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_6234( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_6318( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_LATCH( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

/* P_SETDOORLOCKED */ void sub_6546(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if (( /* F_DOESDOOREXIST */ sub_6234( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_6318( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

/* P_ENABLE_POI */ void sub_6707(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
             /* P_ENABLEPOIGLINT */ sub_6766( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_6766( iParam0, 0 );
         /* P_ENABLEPOIINTERACTIONTEXT */ sub_6985( iParam0, 0 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1016() )) == 0)
        {
            TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_1016() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1016(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

/* P_ENABLEPOIGLINT */ void sub_6766(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

/* P_ENABLEPOIINTERACTIONTEXT */ void sub_6985(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_7165( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

/* P_UPDATEINTERACTIONTEXTAVAILABLE */ void sub_7165(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if (( /* F_ISACTIONINGAVAILABLE */ sub_7261( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if (( /* F_ISACTIONINGAVAILABLE */ sub_7261( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

/* F_ISACTIONINGAVAILABLE */ int sub_7261(int iParam0)
{
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1016() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1054() )) == 0))
    {
        if (((IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_1016() )) == 1) || (((IS_PED_GETTING_UP(  /* PLAYER_PED_ID */ sub_1016() )) == 1) || (((IS_PED_PICKING_UP_PICKUP(  /* PLAYER_PED_ID */ sub_1016() )) == 1) || (((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_1016() )) == 1) || (((IS_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1016() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1016() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

/* P_STOP_SP_CHALLENGES */ void sub_7710()
{
     /* WRITESCRIPTLOG */ sub_385( "CCB", "P_STOP_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_385( "CCB", "Stopping the Stadium_Trophy context...", 0 );
    END_CONTEXT( "Stadium_Trophy" );
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_8112(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_385( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_8331( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_9495( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_9809( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_10244( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_9809( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_10244( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_9809( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_10244( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_10560( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_10244( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_10560( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_10244( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_11132( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_11334( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1016(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_385( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_8331(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_8393( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_8393(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_9495(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_9809(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_5612( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_10244(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_10560(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_5612( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_11132(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_11334(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_8393( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_11432( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_11432(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_HANDLE_EVENTS */ void sub_12744()
{
    int iVar2;

    iVar2 = l_U131;
    switch (l_U131)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_385( "SP", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
         /* P_INITIALIZE_SCRIPT_DATA */ sub_12958();
         /* P_SET_STATIC_DATA */ sub_13289();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U131 = 2;
         /* WRITESCRIPTLOG */ sub_385( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_385( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
         /* P_REQUEST_TR_PERSISTENT_ASSETS */ sub_16625();
         /* P_REQUEST_TR_NONPERSISTENT_ASSETS */ sub_25193();
        l_U131 = 3;
         /* WRITESCRIPTLOG */ sub_385( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if (( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_29446( ref g_U1263 )) AND (( /* F_STREAMREQ_ANIM_DICT_IS_LOADED */ sub_29055( ref g_U1354 )) AND (( /* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ sub_28653( ref g_U1214 )) AND ( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_28256( ref g_U1069 )))))
        {
            if ((NOT l_U74._fU0) AND (g_U854 == 9))
            {
                l_U131 = 4;
                 /* WRITESCRIPTLOG */ sub_385( "SP", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
            }
            else
            {
                l_U131 = 6;
                 /* WRITESCRIPTLOG */ sub_385( "SP", "eCheckpointState = CP_TR_PRE_CREATE_ASSETS", 0 );
            }
        }
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_385( "GA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        g_U3883 = 1;
        FREEZE_TIME_OF_DAY( 21, 0 );
        SET_WEATHER_TYPE_NOW_PERSIST( "CLOUDY" );
        if (( /* HAS_SAVEFILE_LOADED */ sub_30113( ref l_U74 )) == 0)
        {
            if (IS_MAGDEMO())
            {
                 /* MAL_GIVEPEDWEAPON */ sub_30344(  /* PLAYER_PED_ID */ sub_1016(), 68019059, 200, 0, 0 );
                 /* MAL_GIVEPEDWEAPONINHOLSTER */ sub_30553(  /* PLAYER_PED_ID */ sub_1016(), 1194438308, 200, 0, 0 );
            }
            else
            {
                 /* MAL_GIVEPEDWEAPON */ sub_30344(  /* PLAYER_PED_ID */ sub_1016(), 68019059, 100, 0, 0 );
                 /* MAL_GIVEPEDWEAPONINHOLSTER */ sub_30553(  /* PLAYER_PED_ID */ sub_1016(), 1194438308, 100, 0, 0 );
            }
            l_U131 = 5;
             /* WRITESCRIPTLOG */ sub_385( "GA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U131 = 6;
             /* WRITESCRIPTLOG */ sub_385( "SP", "eCheckpointState = CP_TR_PRE_CREATE_ASSETS", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1016() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1016(), 0 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1016(), 0, 0 ) )))
            {
                l_U131 = 6;
                 /* WRITESCRIPTLOG */ sub_385( "GA", "eCheckpointState = CP_TR_PRE_CREATE_ASSETS", 0 );
            }
        }
        break;
        case 6:
        if (l_U132)
        {
             /* P_TROPHY_CREATE_VCPF_PRE */ sub_31085();
        }
        if ( /* MAL_ENEMYSTRUCTARRAYCREATE */ sub_32429( ref l_U570, "Trophy_Room", ref l_U1231, 0.00000000, 1, 1 ))
        {
             /* P_TECH_LIGHTS_ON_LLOD */ sub_36376( 0 );
             /* P_CREATE_STADIUM_OBJECTS */ sub_36916();
             /* P_CREATE_DEAD_BODIES_ON_FIELD */ sub_37111();
             /* P_TROPHY_CREATE_VCPF_POST */ sub_37729();
            l_U131 = 7;
             /* WRITESCRIPTLOG */ sub_385( "GA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 7:
        if (g_U3883)
        {
            l_U131 = 8;
             /* WRITESCRIPTLOG */ sub_385( "GA", "eCheckpointState = CP_TR_NIS_INTRO", 0 );
        }
        break;
        case 8:
        if (l_U132)
        {
            l_U143 = 1;
        }
         /* P_HANDLE_TROPHY_INTRO_NIS */ sub_40129();
        if (l_U143 == 9)
        {
            if (NOT l_U74._fU0)
            {
                g_U855 = 9;
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_48858( ref l_U74, g_U855,  /* PLAYER_PED_ID */ sub_1016(), g_U2138[9], g_U2256[9], 0.00000000, 0.00000000, 1 );
            }
             /* P_SETUP_FREIGHT_ELEVATOR */ sub_53373( 0 );
            l_U131 = 9;
             /* WRITESCRIPTLOG */ sub_385( "GA", "eCheckpointState = CP_TR_HIDING", 0 );
        }
        break;
        case 9:
        if (l_U132)
        {
             /* P_CREATE_AND_START_TIMER */ sub_47832( ref l_U1348, 15000 );
             /* P_START_SP_CHALLENGES */ sub_55318();
        }
        if (( /* MAL_ES_GETACTINTSTATUS */ sub_55485( ref l_U570[0], 48 )) == 1)
        {
             /* MAL_ES_LOOKATPED */ sub_55627( ref l_U570[0],  /* PLAYER_PED_ID */ sub_1016(), -1 );
             /* MAL_ES_FINISHACTINT */ sub_55726( ref l_U570[0], 48 );
             /* MAL_ESA_SETLOCKEDANDREGISTEREDONPLAYER */ sub_55843( ref l_U570, 0, -1 );
        }
        if ( /* ISTIMERDONE */ sub_2204( ref l_U1348 ))
        {
            AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_2_3_6", "", 0, 6000, -1, -1082130432, 0 );
        }
        if ( /* F_TROPHY_SHOULD_FIGHT_START */ sub_56198())
        {
            l_U131 = 10;
             /* WRITESCRIPTLOG */ sub_385( "GA", "eCheckpointState = CP_TR_FIGHT", 0 );
        }
        break;
        case 10:
         /* P_HANDLE_STATE_TROPHY_ROOM_FIGHT */ sub_56488( l_U132 );
        break;
        case 11:
        if (l_U132)
        {
             /* P_START_CHECKPOINT_THREAD */ sub_62325( ref g_U888[10] );
        }
         /* P_HANDLE_STATE_TROPHY_ROOM_ELEVATOR */ sub_62384( l_U132 );
        break;
        case 12:
        if ((NOT HAS_CUTSCENE_FINISHED()) || (g_U855 == 10))
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U131 = 0;
             /* WRITESCRIPTLOG */ sub_385( "SP", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
    }
    if (l_U131 != iVar2)
    {
        l_U132 = 1;
    }
    else
    {
        l_U132 = 0;
    }
    return;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_12958()
{
     /* WRITESCRIPTLOG */ sub_385( "GA", "P_INITIALIZE_SCRIPT_DATA start", 0 );
    l_U132 = 1;
    l_U1237 = 0;
    l_U143 = 0;
    l_U1357 = 0;
    l_U1526 = 0;
    l_U1358 = 0;
     /* CREATETIMER */ sub_1921( ref l_U1570, 10000, 1, 0 );
    l_U1626 = 0;
    l_U1627 = 0;
    l_U1628 = 0;
    l_U1599[0] = "SSTD_V1HS1";
    l_U1599[1] = "SSTD_V1HS2";
    l_U1599[2] = "SSTD_V1HS3";
    l_U1599[3] = "SSTD_V1HS4";
    l_U1599[4] = "SSTD_V1HS5";
    l_U1599[5] = "SSTD_V1HS6";
    l_U1606 = 0;
     /* WRITESCRIPTLOG */ sub_385( "GA", "P_INITIALIZE_SCRIPT_DATA end", 0 );
    return;
}

/* P_SET_STATIC_DATA */ void sub_13289()
{
     /* WRITESCRIPTLOG */ sub_385( "GA", "P_SET_STATIC_DATA start", 0 );
     /* P_CREATETRIGGERBOX */ sub_13427( ref l_U215, "TRIGGER_ELEV_NEAR", -105.62000000, 21.95000000, 12.97000000, 6.00000000, 5.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_13427( ref l_U236, "TRIGGER_TRY_CLEAN_SR", -108.41000000, 26.63000000, 12.97000000, 6.00000000, 14.05000000, 3.00000000, 0.00000000, 0.00000000, -10.40000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_13427( ref l_U257, "TRIGGER_ACTIVATE_ENEMIES", -62.80000000, 70.02000000, 12.97000000, 15.24000000, 2.65000000, 3.00000000, 0.00000000, 0.00000000, -74.43000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_13427( ref l_U278, "TRIGGER_ACTIVATE_ENEMIES2", -76.75000000, 60.48000000, 11.16000000, 26.82000000, 2.65000000, 4.59000000, 0.00000000, 0.00000000, -52.79000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_13427( ref l_U299, "TRIGGER_ACTIVATE_ENEMIES3", -88.04000000, 51.05000000, 11.46000000, 26.82000000, 2.65000000, 4.17000000, 0.00000000, 0.00000000, -38.09000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_13427( ref l_U320[0], "TRIGGER_ACTIVATE_ELEVATOR01", -95.15000000, 41.75000000, 12.96000000, 15.24000000, 2.65000000, 3.00000000, 0.00000000, 0.00000000, -46.81000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_13427( ref l_U320[1], "TRIGGER_ACTIVATE_ELEVATOR02", -99.45000000, 39.84000000, 12.96000000, 12.02000000, 6.24000000, 3.00000000, 0.00000000, 0.00000000, -46.82000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_13427( ref l_U320[2], "TRIGGER_ACTIVATE_ELEVATOR03", -97.89000000, 33.98000000, 12.96000000, 11.49000000, 8.90000000, 3.00000000, 0.00000000, 0.00000000, -12.60000000, 1 );
     /* P_CREATETRIGGERREGION */ sub_14141( ref l_U384, ref l_U320 );
     /* P_CREATETRIGGERBOX */ sub_13427( ref l_U1359, "SPEECH SERVICE ELEVATOR", -107.04000000, 22.23000000, 12.30000000, 6.83000000, 7.88000000, 8.35000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_13427( ref l_U1380, "SPEECH CLAUDIO", -97.42000000, 36.56000000, 12.96000000, 5.58000000, 5.53000000, 3.00000000, 0.00000000, 0.00000000, -11.82000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_13427( ref l_U1401, "SPEECH_AMBIENT", -79.82000000, 59.18000000, 12.97000000, 42.24000000, 58.28000000, 3.00000000, 0.00000000, 0.00000000, -89.43000000, 1 );
     /* P_CREATEPOISTRUCTCOORD */ sub_14740( ref l_U1258, 1, -105.80000000, 20.57000000, 14.27700000, -106.17620000, 20.49670000, 13.98720000, -106.17620000, 20.49670000, 13.98720000, 3.00000000, 4.00000000, 0, 0 );
     /* P_SET_INTERACTIVE_TEXT */ sub_15501( ref l_U1258, 30, "POI_ELEVATOR" );
     /* P_CREATETRIGGERBOX */ sub_13427( ref l_U1527, "TRIG_MEMORIAL_INNER", -97.42000000, 36.67000000, 13.58000000, 7.36000000, 5.29000000, 1.94000000, 0.00000000, 0.00000000, -13.08000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_13427( ref l_U1548, "TRIG_MEMORIAL_OUTER", -97.42000000, 36.67000000, 13.58000000, 12.00000000, 11.00000000, 1.94000000, 0.00000000, 0.00000000, -13.08000000, 1 );
     /* P_CREATEPOISTRUCTTRIGGER */ sub_15899( ref l_U1440, 2, -97.42000000, 36.67000000, 13.58000000, l_U1527, l_U1548, 1, 0 );
     /* P_SET_POI_FORCE_WALK */ sub_16035( ref l_U1440, 0 );
     /* P_SET_INTERACTIVE_TEXT */ sub_15501( ref l_U1440, 30, "POI_STADMEMOR" );
     /* P_SET_POI_AVAILABLE */ sub_16116( ref l_U1440, 0 );
     /* P_SET_POI_REUSABLE */ sub_16198( ref l_U1440, 1 );
     /* P_SETDOORLOCKED */ sub_6546( ref g_U3696, 0 );
     /* P_OPENDOOR */ sub_16267( ref g_U3696, 0, 1, 0.60000000 );
     /* P_CLOSEDOOR */ sub_6208( ref g_U3465, 1 );
     /* P_CLOSEDOOR */ sub_6208( ref g_U3472, 1 );
     /* WRITESCRIPTLOG */ sub_385( "GA", "P_SET_STATIC_DATA end", 0 );
    return;
}

/* P_CREATETRIGGERBOX */ void sub_13427(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATETRIGGERREGION */ void sub_14141(int iParam0, unknown uParam1)
{
    int iVar4;
    int I;

    iVar4 = (uParam1^);
    if (iVar4 > 6)
    {
         /* WRITESCRIPTLOG */ sub_385( "[SA]", "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
        SCRIPT_ASSERT( "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
    }
    for ( I = 0; I < iVar4; I++ )
    {
        iParam0->_fU0[I] = {(uParam1^)[I]};
    }
    iParam0->_fU508 = iVar4;
    iParam0->_fU548 = 0;
    iParam0->_fU552 = 0;
    iParam0->_fU556 = 0;
    iParam0->_fU560 = 0;
    return;
}

/* P_CREATEPOISTRUCTCOORD */ void sub_14740(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
     /* P_CREATEBLANKPOISTRUCT */ sub_14780( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
     /* P_CREATEPOIGLINT */ sub_15173( iParam0 );
    return;
}

/* P_CREATEBLANKPOISTRUCT */ void sub_14780(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

/* P_CREATEPOIGLINT */ void sub_15173(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
     /* P_INITPOIGLINT */ sub_15271( iParam0 );
    return;
}

/* P_INITPOIGLINT */ void sub_15271(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                 /* P_ENABLEPOIGLINT */ sub_6766( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                 /* P_ENABLEPOIGLINT */ sub_6766( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                 /* P_ENABLEPOIGLINT */ sub_6766( iParam0, 1 );
            }
            else
            {
                 /* P_ENABLEPOIGLINT */ sub_6766( iParam0, 0 );
            };;;
        }
        else
        {
             /* P_ENABLEPOIGLINT */ sub_6766( iParam0, 0 );
        }
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_6766( iParam0, 0 );
    }
    return;
}

/* P_SET_INTERACTIVE_TEXT */ void sub_15501(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
     /* P_INITINTERACTIVETEXT */ sub_15557( iParam0 );
    return;
}

/* P_INITINTERACTIVETEXT */ void sub_15557(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

/* P_CREATEPOISTRUCTTRIGGER */ void sub_15899(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47, unknown uParam48)
{
     /* P_CREATEBLANKPOISTRUCT */ sub_14780( iParam0, uParam47 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU80 = 1;
    iParam0->_fU116 = {uParam5};
    iParam0->_fU88 = 1;
    iParam0->_fU216 = {uParam26};
    iParam0->_fU320 = uParam48;
    iParam0->_fU20 = {uParam2};
     /* P_CREATEPOIGLINT */ sub_15173( iParam0 );
    return;
}

/* P_SET_POI_FORCE_WALK */ void sub_16035(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

/* P_SET_POI_AVAILABLE */ void sub_16116(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
     /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_7165( iParam0 );
    return;
}

/* P_SET_POI_REUSABLE */ void sub_16198(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

/* P_OPENDOOR */ void sub_16267(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if (( /* F_DOESDOOREXIST */ sub_6234( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_6318( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

/* P_REQUEST_TR_PERSISTENT_ASSETS */ void sub_16625()
{
     /* WRITESCRIPTLOG */ sub_385( "GA", "P_REQUEST_TR_PERSISTENT_ASSETS start", 0 );
     /* SETUP_SCRIPTED_SPEECH */ sub_16728( "SSTDAUD" );
     /* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ sub_16899( ref l_U110, ref g_U1069 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT_ARRAY */ sub_19821( ref l_U127, ref g_U1214 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21873( "npc_pstl_cover_grenade", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21873( "npc_rifle_cover_grenade", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21873( "mped_grenade_core", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21873( "LEVEL_S_STAD_CP_05", ref g_U1354 );
     /* P_LOAD_PLGE_ANIM_DICTS */ sub_23844( 0, 0 );
     /* WRITESCRIPTLOG */ sub_385( "GA", "P_REQUEST_TR_PERSISTENT_ASSETS end", 0 );
    return;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_16728(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_16772();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_16772()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ void sub_16899(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_16972( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT */ void sub_16972(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 =  /* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ sub_17039( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar4 );
            PRINTNL();
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_17297( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Inserting MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ int sub_17039(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_17297( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is loading: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_17297( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                     /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_17297( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_18828( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being removed: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_17297( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_17297( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ void sub_17297(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_17358( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ int sub_17358(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID is active: {} ###", 1, 513, (uParam1^)[I] );
                if ((uParam1^)[I] == iParam0)
                {
                    DISPLAYF( "The THREADID was already requested by this thread!!!", 0 );
                    DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                    (uParam1^)[I] = nil;
                    Result = I;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The THREADID index was requested by another thread!!! {} ###", 1, 513, I );
                }
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is NOT active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

/* P_STREAMREQ_THREADID_RESET */ void sub_18828(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT_ARRAY */ void sub_19821(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_19895( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT */ void sub_19895(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ sub_19949( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_20210( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ int sub_19949(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_20210( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is loading: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_20210( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The WEAPON_TYPE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_20210( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_18828( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being removed: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_20210( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            DISPLAYF( "The WEAPON_TYPE asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_20210( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ void sub_20210(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_17358( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_INSERT */ void sub_21873(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ sub_21925( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ANIM_DICT asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22177( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ int sub_21925(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22177( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22177( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ANIM_DICT asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22177( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_18828( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22177( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ANIM_DICT asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ANIM_DICT: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
             /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22177( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ void sub_22177(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_17358( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_LOAD_PLGE_ANIM_DICTS */ void sub_23844(boolean bParam0, boolean bParam1)
{
    if (NOT bParam0)
    {
        if (NOT bParam1)
        {
             /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21873( "PLGE_RIFLE_CROUCH", ref g_U1354 );
             /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21873( "PLGE_PSTL_CROUCH", ref g_U1354 );
             /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21873( "PLGE_RIFLE_KNEE", ref g_U1354 );
             /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21873( "PLGE_PSTL_KNEE", ref g_U1354 );
             /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21873( "PLGE_PSTL_CORE", ref g_U1354 );
             /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21873( "PLGE_PSTL_COVER", ref g_U1354 );
        }
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21873( "PLGE_RIFLE_CORE", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21873( "PLGE_RIFLE_CORE_RELOAD", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21873( "PLGE_PSTL_CORE_RELOAD", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21873( "PLGE_RIFLE_HANDSIG", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21873( "PLGE_PSTL_HANDSIG", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21873( "PLGE_RIFLE_ACTIONS", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21873( "PLGE_PSTL_ACTIONS", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21873( "PLGE_RIFLE_COVER", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21873( "PLGE_RIFLE_REACT", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21873( "PLGE_PSTL_REACT", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21873( "PLGE_RIFLE_COVER_EXIT", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21873( "PLGE_PSTL_COVER_EXIT", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21873( "PLGE_PSTL_FULLBODY", ref g_U1354 );
    }
    else
    {
         /* LOADANIMDICT */ sub_24475( "PLGE_RIFLE_CROUCH", 0, 1 );
         /* LOADANIMDICT */ sub_24475( "PLGE_PSTL_CROUCH", 0, 1 );
         /* LOADANIMDICT */ sub_24475( "PLGE_RIFLE_CORE", 0, 1 );
         /* LOADANIMDICT */ sub_24475( "PLGE_PSTL_CORE", 0, 1 );
         /* LOADANIMDICT */ sub_24475( "PLGE_RIFLE_CORE_RELOAD", 0, 1 );
         /* LOADANIMDICT */ sub_24475( "PLGE_PSTL_CORE_RELOAD", 0, 1 );
         /* LOADANIMDICT */ sub_24475( "PLGE_RIFLE_HANDSIG", 0, 1 );
         /* LOADANIMDICT */ sub_24475( "PLGE_PSTL_HANDSIG", 0, 1 );
         /* LOADANIMDICT */ sub_24475( "PLGE_RIFLE_ACTIONS", 0, 1 );
         /* LOADANIMDICT */ sub_24475( "PLGE_PSTL_ACTIONS", 0, 1 );
         /* LOADANIMDICT */ sub_24475( "PLGE_RIFLE_KNEE", 0, 1 );
         /* LOADANIMDICT */ sub_24475( "PLGE_PSTL_KNEE", 0, 1 );
         /* LOADANIMDICT */ sub_24475( "PLGE_RIFLE_COVER", 0, 1 );
         /* LOADANIMDICT */ sub_24475( "PLGE_PSTL_COVER", 0, 1 );
         /* LOADANIMDICT */ sub_24475( "PLGE_RIFLE_REACT", 0, 1 );
         /* LOADANIMDICT */ sub_24475( "PLGE_PSTL_REACT", 0, 1 );
         /* LOADANIMDICT */ sub_24475( "PLGE_RIFLE_COVER_EXIT", 0, 1 );
         /* LOADANIMDICT */ sub_24475( "PLGE_PSTL_COVER_EXIT", 0, 1 );
         /* LOADANIMDICT */ sub_24475( "PLGE_PSTL_FULLBODY", 0, 1 );
    }
    return;
}

/* LOADANIMDICT */ void sub_24475(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an animation dictionary to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_REQUEST_TR_NONPERSISTENT_ASSETS */ void sub_25193()
{
     /* WRITESCRIPTLOG */ sub_385( "GA", "P_REQUEST_TR_NONPERSISTENT_ASSETS start", 0 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_25301( -2097834305, ref g_U1263 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_25301( -825293602, ref g_U1263 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_25301( -1610386741, ref g_U1263 );
     /* WRITESCRIPTLOG */ sub_385( "GA", "P_REQUEST_TR_NONPERSISTENT_ASSETS end", 0 );
    return;
}

/* P_STREAMREQ_ISEQ_INSERT */ void sub_25301(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 =  /* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ sub_25362( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar12 );
            PRINTNL();
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar4 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
             /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_25612( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

/* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ int sub_25362(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_25612( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is loading: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_25612( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                        DISPLAYF( "The ISEQ asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_25612( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loading: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_25612( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### Re-requesting ISEQ: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_18828( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_18828( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being removed: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_25612( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar5 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_25612( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ISEQ_THREADID_SET_ID */ void sub_25612(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_17358( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_LOADED */ int sub_28256(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be requested: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to load: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be removed: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ int sub_28653(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be requested: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to load: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be removed: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ANIM_DICT_IS_LOADED */ int sub_29055(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be requested: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to load: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be removed: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ISEQ_IS_LOADED */ int sub_29446(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be requested: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to load: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be removed: {} ###", 1, 1281, ref uVar3 );
            return 0;
        };;;
    }
    return 1;
}

/* HAS_SAVEFILE_LOADED */ int sub_30113(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_385( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_8112( uParam0,  /* PLAYER_PED_ID */ sub_1016() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* MAL_GIVEPEDWEAPON */ void sub_30344(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    unknown Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                 /* MAL_WRITESCRIPTLOG */ sub_3628( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

/* MAL_GIVEPEDWEAPONINHOLSTER */ void sub_30553(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    int Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
            while (Result == 0)
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
                 /* MAL_WRITESCRIPTLOG */ sub_3628( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

/* P_TROPHY_CREATE_VCPF_PRE */ void sub_31085()
{
     /* STAD_ENEMYSTRUCTFILL */ sub_31185( ref l_U570[0], -64.90600000, 65.74100000, 13.00055000, 316.09500000, g_U2548, 1236030752, g_U2386, 3.00000000, 6.00000000, 1, 1478009203, 1 );
     /* STAD_ENEMYSTRUCTFILL */ sub_31185( ref l_U570[1], -64.03234000, 61.85284000, 13.00055000, 336.28270000, g_U2548, 1509468183, g_U2386, 4.00000000, 12.00000000, 1, 1478009203, 1 );
     /* STAD_ENEMYSTRUCTFILL */ sub_31185( ref l_U570[2], -68.43390000, 59.87180000, 13.00055000, 327.36700000, g_U2548, -723221330, g_U2386, 4.00000000, 12.00000000, 1, 1478009203, 1 );
     /* STAD_ENEMYSTRUCTFILL */ sub_31185( ref l_U570[3], -77.74255000, 69.64697000, 11.80586000, 0.00000000, g_U2548, 322919650, g_U2386, 4.00000000, 40.00000000, 1, 68019059, 0 );
     /* STAD_ENEMYSTRUCTFILL */ sub_31185( ref l_U570[4], -79.56455000, 65.34975000, 11.80586000, 0.00000000, g_U2548, -1604063227, g_U2386, 4.00000000, 40.00000000, 0, 1194438308, 0 );
     /* STAD_ENEMYSTRUCTFILL */ sub_31185( ref l_U570[5], -63.26221000, 62.15272000, 13.04288000, 0.00000000, g_U2548, 180218252, g_U2386, 3.00000000, 6.00000000, 0, 434544317, 0 );
     /* STAD_ENEMYSTRUCTFILL */ sub_31185( ref l_U570[6], -70.08141000, 60.49264000, 13.00030000, 0.00000000, g_U2548, 2075882061, g_U2386, 1084227584, 1094713344, 1, 1478009203, 1 );
     /* STAD_ENEMYSTRUCTFILL */ sub_31185( ref l_U570[7], -85.94783000, 60.42299000, 11.80586000, 0.00000000, g_U2548, 1720864954, g_U2386, 4.00000000, 60.00000000, 1, 68019059, 0 );
     /* STAD_ENEMYSTRUCTFILL */ sub_31185( ref l_U570[8], -87.50047000, 46.18098000, 13.00439000, 0.00000000, g_U2548, -2069088912, g_U2386, 4.00000000, 60.00000000, 1, 1478009203, 1 );
     /* STAD_ENEMYSTRUCTFILL */ sub_31185( ref l_U570[9], -85.84402000, 41.92580000, 13.06829000, 0.00000000, g_U2548, -774071926, g_U2386, 3.00000000, 6.00000000, 0, 1194438308, 0 );
     /* STAD_ENEMYSTRUCTFILL */ sub_31185( ref l_U570[10], -94.36591000, 40.07732000, 13.00015000, 0.00000000, g_U2548, 1029225357, g_U2386, 1084227584, 1094713344, 1, 1478009203, 1 );
     /* STAD_ENEMYSTRUCTFILL */ sub_31185( ref l_U570[11], -95.70468000, 32.67410000, 13.00528000, 0.00000000, g_U2548, 1156140166, g_U2386, 3.00000000, 6.00000000, 0, 434544317, 0 );
     /* STAD_ENEMYSTRUCTFILL */ sub_31185( ref l_U570[12], -102.30520000, 39.26105000, 13.04326000, 0.00000000, g_U2548, -1735269424, g_U2386, 1084227584, 1094713344, 1, 1478009203, 1 );
     /* STAD_ENEMYSTRUCTFILL */ sub_31185( ref l_U570[13], -100.39190000, 32.81915000, 13.01667000, 0.00000000, g_U2548, 987610204, g_U2386, 4.00000000, 60.00000000, 1, 68019059, 0 );
     /* STAD_ENEMYSTRUCTFILL */ sub_31185( ref l_U570[14], -107.28000000, 34.05002000, 13.04798000, 340.00000000, g_U2548, 1306564395, g_U2386, 3.00000000, 6.00000000, 0, 434544317, 0 );
    return;
}

/* STAD_ENEMYSTRUCTFILL */ void sub_31185(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19)
{
     /* MAL_ENEMYSTRUCTFILL */ sub_31261( uParam0, uParam1, uParam4, uParam18, 68019059, 2, g_U3928, uParam15, uParam16, uParam14, uParam19, uParam17, uParam13, uParam5 );
    return;
}

/* MAL_ENEMYSTRUCTFILL */ void sub_31261(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29)
{
    iParam0->_fU56 = {uParam1};
    iParam0->_fU68 = uParam4;
    iParam0->_fU72 = uParam5;
    iParam0->_fU76 = uParam6;
    iParam0->_fU80 = uParam7;
    iParam0->_fU84 = {uParam8};
    iParam0->_fU116 = uParam16;
    iParam0->_fU120 = uParam17;
    iParam0->_fU124 = uParam18;
    iParam0->_fU128 = uParam19;
    iParam0->_fU132 = uParam20;
    iParam0->_fU136 = uParam21;
    iParam0->_fU140 = {uParam22};
    return;
}

/* MAL_ENEMYSTRUCTARRAYCREATE */ int sub_32429(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4, boolean bParam5)
{
    int I;

    PRINTSTRING( "[MSWW] ### MAL_EnemyStructArrayCreate starting: " );
     /* WRITE_STRING */ sub_5612( uParam1 );
    if (NOT bParam4)
    {
         /* P_SETUP_AI_GROUP */ sub_32546( uParam2, uParam3, 1 );
        for ( I = 0; I < (uParam0^); I++ )
        {
             /* MAL_ENEMYSTRUCTCREATE */ sub_32956( ref (uParam0^)[I] );
             /* P_QUICK_ADD_PED_TO_GROUP */ sub_35500( (uParam0^)[I]._fU0, uParam2 );
        }
         /* MAL_ESA_GIVEDEBUGNAMES */ sub_35898( uParam0, uParam1 );
    }
    else if ((uParam0^)[0]._fU172 == 0)
    {
         /* P_SETUP_AI_GROUP */ sub_32546( uParam2, uParam3, 1 );
    }
    if ((uParam0^)[0]._fU172 < (uParam0^))
    {
         /* MAL_ENEMYSTRUCTCREATE */ sub_32956( ref (uParam0^)[(uParam0^)[0]._fU172] );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_35500( (uParam0^)[(uParam0^)[0]._fU172]._fU0, uParam2 );
        (uParam0^)[0]._fU172++;
    }
    else
    {
         /* MAL_ESA_GIVEDEBUGNAMES */ sub_35898( uParam0, uParam1 );
        return 1;
    }
    if (bParam5)
    {
         /* MAL_ESA_PROCESSINGFREEZE */ sub_36189( uParam0, 1, 0, -1 );
    }
    return 0;
}

/* P_SETUP_AI_GROUP */ void sub_32546(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* MAL_ENEMYSTRUCTCREATE */ void sub_32956(int iParam0)
{
    unknown uVar3;

     /* MAL_WRITESCRIPTLOG */ sub_3628( "MAL_EnemyStructCreate starting" );
     /* MAL_CREATEPEDADV */ sub_33095( iParam0 + 0, iParam0 + 4, iParam0->_fU56, iParam0->_fU68, iParam0->_fU72, iParam0->_fU80, iParam0->_fU84, iParam0->_fU116, iParam0->_fU120, iParam0->_fU124, 1 );
    if (NOT (ARE_STRINGS_EQUAL( iParam0 + 140, ref g_U652 )))
    {
        PRINTSTRING( "[MSWW] ### MAL_EnemyStructCreate adding ped to room: " );
         /* WRITE_STRING */ sub_5612( iParam0 + 140 );
         /* MAL_SETROOMFORPED */ sub_35040( iParam0 + 0, iParam0 + 140 );
    }
    if (iParam0->_fU128)
    {
         /* MAL_WRITESCRIPTLOG */ sub_3628( "MAL_EnemyStructCreate giving ped backup weapon" );
         /* MAL_GIVEPEDWEAPONINHOLSTER */ sub_30553( iParam0->_fU0, iParam0->_fU76, 25000, 1, 0 );
    }
    if (iParam0->_fU132)
    {
        uVar3 = GET_WEAPON_FROM_HAND( iParam0->_fU0, 0, 0 );
         /* MAL_TOGGLEWEAPONATTACHMENTTOWEAPON */ sub_35226( ref uVar3, 14, 1 );
    }
    if (iParam0->_fU136 != 0)
    {
         /* MAL_GIVEPEDPERSISTANTVARIATIONENUM */ sub_35389( iParam0 + 0, iParam0->_fU136 );
    }
    return iParam0->_fU0;
}

/* MAL_CREATEPEDADV */ void sub_33095(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19)
{
     /* P_CREATEPEDSTRUCT */ sub_33139( uParam1, uParam2, uParam5, uParam18, 7, 3, 2, 0, 0 );
    (uParam0^) =  /* MAL_CREATEPED */ sub_33261( uParam0, uParam1, 1, 1, uParam19 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
    }
     /* MAL_GIVEPEDWEAPON */ sub_30344( (uParam0^), uParam6, 25000, 0, 0 );
     /* MAL_SETTEMPLATEANDRANGES */ sub_34517( uParam0, ref uParam8, uParam16, uParam17, 1 );
     /* MAL_SETPEDCOMBATMOVEMENT */ sub_34848( uParam0, uParam7 );
    return (uParam0^);
}

/* P_CREATEPEDSTRUCT */ void sub_33139(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

/* MAL_CREATEPED */ void sub_33261(unknown uParam0, unknown uParam1, boolean bParam2, boolean bParam3, unknown uParam4)
{
     /* CLEANPED */ sub_6083( (uParam0^) );
    (uParam0^) =  /* CREATEPED */ sub_33297( uParam1 );
    if (bParam3)
    {
        while (NOT (DOES_PED_EXIST( (uParam0^) )))
        {
            WAIT( 0 );
             /* MAL_WRITESCRIPTLOG */ sub_3628( "MAL_CreatePed waiting for ped to exist" );
        }
    }
    SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), uParam4 );
     /* MAL_SETPEDCOMBATATTRIBUTES */ sub_34348( uParam0, 32, 0 );
    SET_PED_IGNORE_LOS_CHECKS( (uParam0^), NOT bParam2 );
    SET_PED_EMOTION_STATE( (uParam0^), 1 );
    return (uParam0^);
}

/* CREATEPED */ void sub_33297(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_33479( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_34028( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_34129( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* LOADMODEL */ void sub_33479(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_5612( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* SETPEDDEFAULTSTATS */ void sub_34028(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_34129(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* MAL_SETPEDCOMBATATTRIBUTES */ void sub_34348(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_ATTRIBUTES( (uParam0^), uParam1, uParam2 );
    }
    return;
}

/* MAL_SETTEMPLATEANDRANGES */ void sub_34517(unknown uParam0, unknown uParam1, float fParam2, float fParam3, boolean bParam4)
{
     /* MAL_WRITESCRIPTLOG */ sub_3628( "MAL_SetTemplateAndRanges" );
    PRINTSTRING( "[MSWW]### Template Name: " );
     /* WRITE_STRING */ sub_5612( uParam1 );
    PRINTSTRING( "[MSWW]### Min Range: " );
     /* WRITE_FLOAT */ sub_34661( fParam2 );
    PRINTSTRING( "[MSWW]### Max Range: " );
     /* WRITE_FLOAT */ sub_34661( fParam3 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    if (NOT bParam4)
    {
         /* MAL_SETPEDCOMBATATTRIBUTES */ sub_34348( uParam0, 1, 0 );
    }
    return;
}

/* WRITE_FLOAT */ void sub_34661(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* MAL_SETPEDCOMBATMOVEMENT */ void sub_34848(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETROOMFORPED */ void sub_35040(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_ROOM_FOR_PED_BY_NAME( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_TOGGLEWEAPONATTACHMENTTOWEAPON */ void sub_35226(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (GET_DOES_WEAPON_EXIST( (uParam0^) ))
    {
        if (bParam2)
        {
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
        else
        {
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
    }
    return;
}

/* MAL_GIVEPEDPERSISTANTVARIATIONENUM */ void sub_35389(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PERSISTENT_PED_VARIATION_ENUM( (uParam0^), uParam1 );
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_35500(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_5612( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_32546( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_32546( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* MAL_ESA_GIVEDEBUGNAMES */ void sub_35898(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I]._fU0, ref cVar5 );
        }
    }
    return;
}

/* MAL_ESA_PROCESSINGFREEZE */ void sub_36189(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_PROCESSINGFREEZE */ sub_36266( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_PROCESSINGFREEZE */ void sub_36266(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_FREEZE_PROCESSING( iParam0->_fU0, uParam1 );
    }
    return;
}

/* P_TECH_LIGHTS_ON_LLOD */ void sub_36376(boolean bParam0)
{
     /* MAL_WRITESCRIPTLOG */ sub_3628( "P_TECH_LIGHTS_ON_LLOD" );
     /* CLEANOBJECT */ sub_5667( g_U3948 );
     /* CLEANOBJECT */ sub_5667( g_U3949 );
     /* CLEANOBJECT */ sub_5667( g_U3950 );
     /* CLEANOBJECT */ sub_5667( g_U3951 );
     /* CLEANOBJECT */ sub_5667( g_U3952 );
    if (bParam0)
    {
        g_U3952 =  /* CREATEOBJECTNOOFFSET */ sub_36527( g_U2408, 0.00100000, 77.00000000, 42.50000000, 0, 0, 180, 0, 0, 1 );
    }
    else
    {
        g_U3952 =  /* CREATEOBJECTNOOFFSET */ sub_36527( g_U2408, g_U3965, 0, 0, 0, 0, 0, 1 );
    }
    if (DOES_OBJECT_EXIST( g_U3952 ))
    {
        FREEZE_OBJECT_POSITION( g_U3952, 1 );
    }
    return;
}

/* CREATEOBJECTNOOFFSET */ void sub_36527(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_33479( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* P_CREATE_STADIUM_OBJECTS */ void sub_36916()
{
     /* WRITE_STRING */ sub_5612( "[SP]### P_CREATE_STADIUM_OBJECTS ###" );
    if (DOES_OBJECT_EXIST( g_U3704 ))
    {
         /* CLEANOBJECT */ sub_5667( g_U3704 );
    }
    g_U3704 =  /* CREATEOBJECTNOOFFSET */ sub_36527( g_U2390, -10.46000000, 5.99000000, 0.70000000, 0.00000000, 0.00000000, 18.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U3704 ))
    {
        FREEZE_OBJECT_POSITION( g_U3704, 1 );
    }
    return;
}

/* P_CREATE_DEAD_BODIES_ON_FIELD */ void sub_37111()
{
     /* CLEANOBJECTARRAY */ sub_37157( ref g_U3941 );
    g_U3941[0] =  /* CREATEOBJECTNOOFFSET */ sub_36527( -1652775333, -4.14443000, 10.10766000, 0.14177000, 0, 0, 2.56000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U3941[0] ))
    {
        FREEZE_OBJECT_POSITION( g_U3941[0], 1 );
    }
    g_U3941[1] =  /* CREATEOBJECTNOOFFSET */ sub_36527( 1816766229, 10.25816000, 2.27307000, 0.14177000, 0, 0, 1.88000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U3941[1] ))
    {
        FREEZE_OBJECT_POSITION( g_U3941[1], 1 );
    }
    g_U3941[2] =  /* CREATEOBJECTNOOFFSET */ sub_36527( 1873472982, 13.91821000, 23.57691000, 0.14177000, 0, 0, 2.23000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U3941[2] ))
    {
        FREEZE_OBJECT_POSITION( g_U3941[2], 1 );
    }
    g_U3941[3] =  /* CREATEOBJECTNOOFFSET */ sub_36527( -1993976541, 11.90281000, 13.09956000, 0.14177000, 0, 0, 2.95000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U3941[3] ))
    {
        FREEZE_OBJECT_POSITION( g_U3941[3], 1 );
    }
    g_U3941[4] =  /* CREATEOBJECTNOOFFSET */ sub_36527( -1993976541, 10.14508000, 8.20610000, 0.14177000, 0, 0, 90.68000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U3941[4] ))
    {
        FREEZE_OBJECT_POSITION( g_U3941[4], 1 );
    }
    g_U3941[5] =  /* CREATEOBJECTNOOFFSET */ sub_36527( -2096019114, 3.94087000, 16.99167000, 0.14177000, 0, 0, -1.16000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U3941[5] ))
    {
        FREEZE_OBJECT_POSITION( g_U3941[5], 1 );
    }
    return;
}

/* CLEANOBJECTARRAY */ void sub_37157(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* CLEANOBJECT */ sub_5667( (uParam0^)[I] );
    }
    return;
}

/* P_TROPHY_CREATE_VCPF_POST */ void sub_37729()
{
    int I;

     /* MAL_ESA_FREEZE */ sub_37774( ref l_U570, 1, 0, -1 );
     /* MAL_ES_CLEAN */ sub_6053( ref l_U570[6] );
     /* MAL_ES_CLEAN */ sub_6053( ref l_U570[8] );
     /* MAL_ES_CLEAN */ sub_6053( ref l_U570[11] );
     /* P_TROPHY_PREP_FIGHT */ sub_37968();
     /* MAL_ESA_SETFLASHLIGHTDATA */ sub_38426( ref l_U570, "Flashlight_Stadium" );
     /* MAL_ESA_GIVEGRENADES */ sub_38612( ref l_U570, 3, 0, -1 );
     /* MAL_ES_HIDEINCOVER */ sub_38815( ref l_U570[3], "GenCover", "D98C9288_3A5503C4_Corner2" );
     /* MAL_ES_SETPEDVISIBLE */ sub_39024( ref l_U570[3], 0 );
     /* MAL_ES_HIDEINCOVER */ sub_38815( ref l_U570[4], "GenCover", "D98C9288_80FD503E_Popover1" );
     /* MAL_ES_SETPEDVISIBLE */ sub_39024( ref l_U570[5], 0 );
     /* MAL_ES_HIDEINCOVER */ sub_38815( ref l_U570[5], "trophy_simple", "trophyCorner08" );
     /* MAL_ES_HIDEINCOVER */ sub_38815( ref l_U570[7], "GenCover", "D98C9288_E131D17B_Corner2" );
     /* MAL_ES_HIDEINCOVER */ sub_38815( ref l_U570[8], "GenCover", "D98C9288_F7EA001B_Corner1" );
     /* MAL_ES_HIDEINCOVER */ sub_38815( ref l_U570[9], "GenCover", "D98C9288_64FFBC34_Popover1" );
     /* MAL_ES_HIDEINCOVER */ sub_38815( ref l_U570[10], "GenCover", "D98C9288_E394D885_Corner1" );
     /* MAL_ES_HIDEINCOVER */ sub_38815( ref l_U570[11], "GenCover", "D98C9288_EF8D5975_Corner2" );
     /* MAL_ES_HIDEINCOVER */ sub_38815( ref l_U570[12], "trophy_simple", "trophyCorner36" );
     /* MAL_ES_HIDEINCOVER */ sub_38815( ref l_U570[13], "GenCover", "D98C9288_3FF0258_Corner1" );
     /* MAL_ES_PROCESSINGFREEZE */ sub_36266( ref l_U570[14], 1 );
     /* MAL_REGISTERPEDWITHISEQ */ sub_39687( l_U570[0]._fU0, -2097834305, "V42_PATROL_GMED1" );
     /* MAL_REGISTERPEDWITHISEQ */ sub_39687( l_U570[1]._fU0, -2097834305, "V42_PATROL_GMED2" );
     /* MAL_REGISTERPEDWITHISEQ */ sub_39687( l_U570[2]._fU0, -2097834305, "V42_PATROL_GMED3" );
    for ( I = 0; I < l_U570; I++ )
    {
        if ((I mod 2) == 0)
        {
             /* MAL_ES_SETPEDACCURACY */ sub_39885( ref l_U570[I], -729479261 );
        }
    }
    return;
}

/* MAL_ESA_FREEZE */ void sub_37774(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_FREEZE */ sub_37841( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_FREEZE */ void sub_37841(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        FREEZE_PED_POSITION( iParam0->_fU0, uParam1 );
    }
    return;
}

/* P_TROPHY_PREP_FIGHT */ void sub_37968()
{
    int I;

     /* MAL_WRITESCRIPTLOG */ sub_3628( "P_TROPHY_PREP_FIGHT" );
    for ( I = 3; I <= (l_U570 - 1); I++ )
    {
        if (DOES_PED_EXIST( l_U570[I]._fU0 ))
        {
            PRINTSTRING( "ii = " );
             /* WRITE_INT */ sub_38087( I );
            if ((GET_WEAPON_TYPE( GET_WEAPON_FROM_HAND( l_U570[I]._fU0, 0, 0 ) )) == 1478009203)
            {
                 /* MAL_WRITESCRIPTLOG */ sub_3628( "wtType = WEAPONTYPE_SMG_MP5" );
                 /* MAL_ES_TOGGLEEXISTINGWEAPONATTACHMENT */ sub_38220( ref l_U570[I], 0, 14 );
            }
        }
    }
    return;
}

/* WRITE_INT */ void sub_38087(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* MAL_ES_TOGGLEEXISTINGWEAPONATTACHMENT */ void sub_38220(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;

    uVar5 = GET_WEAPON_FROM_HAND( iParam0->_fU0, 0, 0 );
    if (GET_DOES_WEAPON_EXIST( uVar5 ))
    {
         /* MAL_WRITESCRIPTLOG */ sub_3628( "MAL_ES_ToggleExistingWeaponAttachment: Weapon exists!" );
        TOGGLE_WEAPON_ATTACHMENT( uVar5, uParam2, uParam1 );
    }
    return;
}

/* MAL_ESA_SETFLASHLIGHTDATA */ void sub_38426(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* MAL_ES_SETFLASHLIGHTDATA */ sub_38488( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_SETFLASHLIGHTDATA */ void sub_38488(int iParam0, unknown uParam1)
{
    if (iParam0->_fU132)
    {
        if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
        {
            SET_WEAPON_LIGHT_DATA_BY_NAME( GET_WEAPON_FROM_HAND( iParam0->_fU0, 0, 0 ), uParam1 );
        }
    }
    return;
}

/* MAL_ESA_GIVEGRENADES */ void sub_38612(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_GIVEPEDGRENADES */ sub_38685( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_GIVEPEDGRENADES */ void sub_38685(int iParam0, unknown uParam1)
{
     /* MAL_GIVEPEDWEAPONINHOLSTER */ sub_30553( iParam0->_fU0, -1980065396, uParam1, 5, 0 );
    return;
}

/* MAL_ES_HIDEINCOVER */ void sub_38815(int iParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
         /* MAL_ES_STAYINCOVER */ sub_38870( iParam0, uParam1, uParam2 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( iParam0->_fU0, 1 );
    }
    return;
}

/* MAL_ES_STAYINCOVER */ void sub_38870(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;

    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        OPEN_SEQUENCE_TASK( ref uVar5 );
        TASK_COMBAT_SNAP_TO_COVER( 0, uParam1, uParam2, 0 );
        CLOSE_SEQUENCE_TASK( uVar5 );
        TASK_PERFORM_SEQUENCE( iParam0->_fU0, uVar5 );
        CLEAR_SEQUENCE_TASK( uVar5 );
        SET_PED_FLAG_LOCK_TO_COVER( iParam0->_fU0, 1 );
    }
    return;
}

/* MAL_ES_SETPEDVISIBLE */ void sub_39024(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_VISIBLE( iParam0->_fU0, uParam1 );
    }
    else
    {
         /* MAL_WRITESCRIPTLOG */ sub_3628( "MAL_ES_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

/* MAL_REGISTERPEDWITHISEQ */ void sub_39687(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        ISEQ_REGISTER_ENTITY( uParam1, uParam2, uParam0, 0 );
    }
    return;
}

/* MAL_ES_SETPEDACCURACY */ void sub_39885(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_ACCURACY( iParam0->_fU0, uParam1 );
    }
    return;
}

/* P_HANDLE_TROPHY_INTRO_NIS */ void sub_40129()
{
    unknown uVar2;
    unknown uVar3;

    switch (l_U143)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_385( "[SA]", "Starting Trophy intro NIS.", "###" );
        AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_2", 0, 0, -1, -1, -1082130432, 0 );
         /* MAL_RECREATEOBJECTINROOM */ sub_40396( ref l_U1629, -661209093, -50.97398000, 70.24087000, 14.11385000, 0, 0, 65446, "Room_Ramps", 1, 1 );
         /* NIS_PRE_SETUP */ sub_40570( 1, 0, 0, 1 );
         /* MAL_ES_SETPEDVISIBLE */ sub_39024( ref l_U570[5], 0 );
         /* MAL_SETPEDVISIBLE */ sub_40766(  /* PLAYER_PED_ID */ sub_1016(), 0 );
        if ( /* F_ISPLAYERHOLDINGRIFLE */ sub_40885())
        {
             /* P_HOLSTERRIFLEORDUALANDDRAWPISTOL */ sub_41209( ref uVar2, ref uVar2, 1, 0 );
        }
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1016(), 2 ) ))
        {
            SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1016(), 2 ), 0 );
        }
        CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1016() );
         /* MAL_TELEPORTPLAYER */ sub_42311( -46.23914000, 74.14880000, 13.00813000, 90, 0, 0 );
         /* MAL_REGISTERPEDWITHISEQ */ sub_39687(  /* PLAYER_PED_ID */ sub_1016(), -825293602, "Max" );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_STAD_CP_05", "b_in_vig_42a_stadium_cam", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        ISEQ_REGISTER_ENTITY( -825293602, "Door", l_U1629, 1 );
        ISEQ_START( -825293602 );
         /* MAL_TELEPORTPLAYER */ sub_42311( -51.78900000, 71.48600000, 13.02000000, 90, 0, 0 );
         /* NIS_CREATE_STATIC_CAM */ sub_42678( ref l_U144, -64.17183000, 68.48476000, 14.60040000, -5.70851500, 0.00000000, 167.50300000, 45, 3000 );
         /* NIS_CREATE_STATIC_CAM */ sub_42678( ref l_U175, -54.24354000, 73.10049000, 15.11916000, -9.46437100, -0.00012700, 122.75790000, 45, 4000 );
         /* WRITESCRIPTLOG */ sub_385( "CCB", "Playing SSTD_RESP speech.", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_43002( ref l_U1579 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1016() )))
        {
             /* WRITESCRIPTLOG */ sub_385( "CCB", "Adding PLAYER_PED_ID ped for sss_SSTD_RESP script speech.", 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_43203( 1,  /* PLAYER_PED_ID */ sub_1016(), "MAX", ref l_U1579, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_43203( 0,  /* PLAYER_PED_ID */ sub_1016(), "PASSOS", ref l_U1579, 2, 0 );
        }
         /* PLAY_SINGLE_SPEECH */ sub_43473( "SSTD_RESP", ref l_U1579, 7, 1 );
        if (IS_MAGDEMO())
        {
            if (g_U854 == 9)
            {
                DO_SCREEN_FADE_IN( 250 );
                FORCE_PAUSEMENU_OPEN( 1 );
            }
        }
        PLAY_IMAGEFX( "FLASH_WHITE", 4, 0 );
        PLAY_IMAGEFX( "FLICKER_VIBRATE_INTERLACE_01", 4, 0 );
        PLAY_IMAGEFX( "FLICKER_VIBRATE_INTERLACE_01", 4, 0 );
        l_U143 = 2;
        break;
        case 2:
        DO_SCREEN_FADE_IN( 0 );
        if ((CAMERA_ANIMATED_CURRENT_TIME() < 200) AND (CAMERA_ANIMATED_CURRENT_TIME() > 175))
        {
             /* MAL_SETPEDVISIBLE */ sub_40766(  /* PLAYER_PED_ID */ sub_1016(), 1 );
        }
        if ((CAMERA_ANIMATED_CURRENT_TIME() >= 200) AND (NOT (IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1016() ))))
        {
             /* WRITESCRIPTLOG */ sub_385( "JMP", "Window missed, setting player visible now.", 0 );
             /* MAL_SETPEDVISIBLE */ sub_40766(  /* PLAYER_PED_ID */ sub_1016(), 1 );
        }
        if (CAMERA_ANIMATED_CURRENT_TIME() >= 6240)
        {
             /* P_TROPHY_START_PATROL */ sub_44691();
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_43002( ref l_U1238 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_43203( 1, l_U570[0]._fU0, "M3_CP_18_AVG", ref l_U1238, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_43203( 2, l_U570[1]._fU0, "M3_CP_19_MUS", ref l_U1238, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_43203( 3, l_U570[2]._fU0, "M3_CP_20_AVG", ref l_U1238, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_43473( "SSTD_TRCA", ref l_U1238, 8, 1 );
            AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_2_3", "", 0, 5000, -1, -1082130432, 0 );
            l_U143 = 3;
        }
        break;
        case 3:
        if (CAMERA_ANIMATED_CURRENT_TIME() >= 6300)
        {
             /* P_SETUP_TROPHY_PLACEMENTS */ sub_45374();
             /* P_SETUP_TROPHY_DOORS */ sub_46695();
             /* MAL_PEDPLAYERACTIONTREENODE */ sub_47256(  /* PLAYER_PED_ID */ sub_1016(), "/Global/V42_BLEND/V42BLEEDIN_SEQ/MAX/INTO_COVER" );
             /* MAL_TELEPORTPLAYER */ sub_42311( g_U2138[9], g_U2256[9], g_U2296[9], g_U2336[9] );
            if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1016(), 2 ) ))
            {
                SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1016(), 2 ), 1 );
            }
            SET_CAM_SIDE_LEFT( 0 );
            SNAP_PLAYER_TO_COVERPOINT(  /* PLAYER_ID */ sub_1054(), "GenCover", "D98C9288_C1E3B113_Corner2", 0 );
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1016(), 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1054(), 1 );
            l_U143 = 5;
        }
        break;
        case 5:
        if (CAMERA_ANIMATED_CURRENT_TIME() > 8250)
        {
            l_U143 = 6;
        }
        else
        {
             /* WRITESCRIPTLOG_PERIODIC */ sub_47592( "MSWW", "Waiting for end camera to end", ref l_U134, 1000, "###" );
        }
        break;
        case 6:
        if (IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_1016() ))
        {
            ISEQ_TERMINATE( -825293602 );
             /* P_STREAMREQ_ISEQ_REMOVE */ sub_4414( -825293602, ref g_U1263 );
            l_U143 = 7;
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1054(), 0, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( 97.78992000, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( -9.38853000, 1065353216, 0 );
            CAMERA_ANIMATED_STOP( 2000, 1 );
             /* P_CREATE_AND_START_TIMER */ sub_47832( ref l_U206, 2000 );
             /* CLEANOBJECT */ sub_5667( l_U1629 );
             /* P_SETDOORAFFECTEDBYBULLETS */ sub_47910( ref g_U3458, 0 );
             /* P_SETDOORLOCKED */ sub_6546( ref g_U3458, 0 );
             /* P_SETDOORMINMAXLIMIT */ sub_48030( ref g_U3458, -110.00000000, 95.00000000 );
             /* P_OPENDOOR */ sub_16267( ref g_U3458, 1, 1, 1065353216 );
             /* P_SETDOORLATCH */ sub_6465( ref g_U3458, 1 );
            uVar3 = DOOR_FIND_CLOSEST( g_U3458._fU0, g_U3458._fU4 );
            if (DOES_OBJECT_EXIST( uVar3 ))
            {
                SET_OBJECT_VISIBLE( uVar3, 0 );
            }
             /* MAL_RECREATEOBJECTINROOM */ sub_40396( ref l_U1630, -661209093, g_U3458._fU4, 0, 0, 168, ref g_U2548, 1, 1 );
        }
        else
        {
             /* WRITESCRIPTLOG_PERIODIC */ sub_47592( "MSWW", "Waiting for player to be in cover", ref l_U134, 1000, "###" );
        }
        break;
        case 7:
        if ( /* ISTIMERDONE */ sub_2204( ref l_U206 ))
        {
            l_U143 = 8;
        }
        break;
        case 8:
         /* NIS_POST_SETUP */ sub_48457( 1, 1 );
        l_U143 = 9;
        break;
        case 9: break;
    }
    return;
}

/* MAL_RECREATEOBJECTINROOM */ void sub_40396(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
     /* MAL_RECREATEOBJECT */ sub_40449( uParam0, uParam1, uParam2, uParam5, uParam9, uParam10 );
    if (DOES_OBJECT_EXIST( (uParam0^) ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( (uParam0^), uParam8 );
    }
    return;
}

/* MAL_RECREATEOBJECT */ void sub_40449(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
     /* CLEANOBJECT */ sub_5667( (uParam0^) );
    (uParam0^) =  /* CREATEOBJECTNOOFFSET */ sub_36527( uParam1, uParam2, uParam5, 0, uParam9, 0 );
    FREEZE_OBJECT_POSITION( (uParam0^), uParam8 );
    return;
}

/* NIS_PRE_SETUP */ void sub_40570(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1016() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1054(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1016(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1016() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1016(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* MAL_SETPEDVISIBLE */ void sub_40766(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_VISIBLE( uParam0, uParam1 );
    }
    else
    {
         /* MAL_WRITESCRIPTLOG */ sub_3628( "MAL_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

/* F_ISPLAYERHOLDINGRIFLE */ int sub_40885()
{
    int[18] iVar2;
    unknown uVar21;
    int I;

    array(ref iVar2, 18);
    iVar2[0] = -1013714740;
    iVar2[1] = -1074756423;
    iVar2[2] = 1308526797;
    iVar2[3] = 840671040;
    iVar2[4] = 57534114;
    iVar2[5] = 724901397;
    iVar2[6] = 1992962408;
    iVar2[7] = 319712764;
    iVar2[8] = 427207702;
    iVar2[9] = -110877124;
    iVar2[10] = 1224272620;
    iVar2[11] = 10648147;
    iVar2[12] = -2075384407;
    iVar2[13] = 1478009203;
    iVar2[14] = 434544317;
    iVar2[15] = -168327769;
    iVar2[16] = -184942895;
    iVar2[17] = 514118749;
    uVar21 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1016(), 0, 0 );
    if (GET_DOES_WEAPON_EXIST( uVar21 ))
    {
        for ( I = 0; I < iVar2; I++ )
        {
            if ((GET_WEAPON_TYPE( uVar21 )) == iVar2[I])
            {
                return 1;
            }
        }
    }
    return 0;
}

/* P_HOLSTERRIFLEORDUALANDDRAWPISTOL */ void sub_41209(unknown uParam0, unknown uParam1, unknown uParam2, boolean bParam3)
{
    unknown uVar6;

    uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1016(), 0, 0 );
    if (GET_DOES_WEAPON_EXIST( uVar6 ))
    {
        if ( /* F_ISPLAYERHOLDINGRIFLE */ sub_40885())
        {
            (uParam0^) = 1;
            SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1016(), 0, 0, uParam2 );
            uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1016(), 0, 0 );
            if (bParam3)
            {
                 /* WRITESCRIPTLOG */ sub_385( "MSWW", "P_HolsterRifleOrDualAndDrawPistol: Waiting for player to holster RIFLE in right hand...", "###" );
                while (GET_DOES_WEAPON_EXIST( uVar6 ))
                {
                    WAIT( 0 );
                    uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1016(), 0, 0 );
                }
            }
             /* WRITESCRIPTLOG */ sub_385( "MSWW", "P_HolsterRifleOrDualAndDrawPistol: ...right hand RIFLE holstered!", "###" );
        }
    }
    uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1016(), 1, 0 );
    if (GET_DOES_WEAPON_EXIST( uVar6 ))
    {
        (uParam1^) = 1;
        SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1016(), 0, 1, uParam2 );
        uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1016(), 1, 0 );
        if (bParam3)
        {
             /* WRITESCRIPTLOG */ sub_385( "MSWW", "P_HolsterRifleOrDualAndDrawPistol: Waiting for player to holster gun in LEFT hand...", "###" );
            while (GET_DOES_WEAPON_EXIST( uVar6 ))
            {
                WAIT( 0 );
                uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1016(), 1, 0 );
            }
        }
         /* WRITESCRIPTLOG */ sub_385( "MSWW", "P_HolsterRifleOrDualAndDrawPistol: ...LEFT hand gun holstered!", "###" );
    }
    uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1016(), 0, 0 );
    if (NOT (GET_DOES_WEAPON_EXIST( uVar6 )))
    {
        uVar6 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1016(), 0 );
        if (NOT (GET_DOES_WEAPON_EXIST( uVar6 )))
        {
            uVar6 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1016(), 1 );
        }
        SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1016(), uVar6, 0, uParam2 );
        uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1016(), 0, 0 );
        if (bParam3)
        {
             /* WRITESCRIPTLOG */ sub_385( "MSWW", "P_HolsterRifleOrDualAndDrawPistol: Waiting for player to draw gun from HOLSTER...", "###" );
            while (NOT (GET_DOES_WEAPON_EXIST( uVar6 )))
            {
                WAIT( 0 );
                uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1016(), 0, 0 );
            }
        }
         /* WRITESCRIPTLOG */ sub_385( "MSWW", "P_HolsterRifleOrDualAndDrawPistol: ...gun drawn from HOLSTER!", "###" );
    }
    return;
}

/* MAL_TELEPORTPLAYER */ void sub_42311(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 =  /* PLAYER_PED_ID */ sub_1016();
     /* MAL_TELEPORTPED */ sub_42358( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

/* MAL_TELEPORTPED */ void sub_42358(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* NIS_CREATE_STATIC_CAM */ void sub_42678(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_1921( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U723, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_43002(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_43203(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_43473(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_43518( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_43518(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_43605( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_43605(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_43657( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_44175( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_43657(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_44175(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* P_TROPHY_START_PATROL */ void sub_44691()
{
     /* MAL_ESA_FREEZE */ sub_37774( ref l_U570, 0, 0, -1 );
     /* MAL_ESA_TELEPORTTOSPAWN */ sub_44743( ref l_U570, 0, -1 );
     /* MAL_ESA_PROCESSINGFREEZE */ sub_36189( ref l_U570, 0, 0, 6 );
     /* P_TROPHY_PREP_FIGHT */ sub_37968();
    SET_PED_ALERTNESS( l_U570[0]._fU0, 2 );
    SET_PED_ALERTNESS( l_U570[1]._fU0, 2 );
    SET_PED_ALERTNESS( l_U570[2]._fU0, 2 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U570[0]._fU0, 0 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U570[1]._fU0, 0 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U570[2]._fU0, 0 );
    ISEQ_START( -2097834305 );
    return;
}

/* MAL_ESA_TELEPORTTOSPAWN */ void sub_44743(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
         /* MAL_ES_TELEPORTTOSPAWN */ sub_44821( (uParam0^)[I] );
    }
    return;
}

/* MAL_ES_TELEPORTTOSPAWN */ void sub_44821(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43)
{
     /* MAL_ES_TELEPORT */ sub_44874( uParam0, uParam0._fU56, uParam0._fU68 );
    return;
}

/* MAL_ES_TELEPORT */ void sub_44874(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47)
{
    if (NOT (IS_PED_DEAD( uParam0._fU0 )))
    {
        SET_PED_COORDS( uParam0._fU0, uParam44, 1 );
        SET_PED_HEADING( uParam0._fU0, uParam47 );
    }
    return;
}

/* P_SETUP_TROPHY_PLACEMENTS */ void sub_45374()
{
     /* WRITE_STRING */ sub_5612( "[MSWW]### stad_trophy P_SETUP_TROPHY_PLACEMENTS Starting" );
     /* CLEANPLACEMENTARRAY */ sub_5855( ref l_U525 );
    l_U525[0] =  /* CREATEPLACEMENT */ sub_45520( -4072149, -85.68000000, 40.19000000, 14.03000000, 0, 0, 0, 0, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U525[0], "Room_Vip" );
    l_U525[1] =  /* CREATEPLACEMENT */ sub_45520( -4072149, -85.80000000, 40.19000000, 14.03000000, 0, 0, 2, 0, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U525[1], "Room_Vip" );
     /* P_CREATE_S_STA_GG_M1_03 */ sub_45798();
     /* WRITE_STRING */ sub_5612( "[MSWW]### stad_trophy P_SETUP_TROPHY_PLACEMENTS ending" );
    return;
}

/* CREATEPLACEMENT */ void sub_45520(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a placement to exist: {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return Result;
}

/* P_CREATE_S_STA_GG_M1_03 */ void sub_45798()
{
     /* WRITESCRIPTLOG */ sub_385( "CO", "Add_Placement_CL_S_STA_GG_M1_03", 0 );
     /* P_CREATECOLLECTIBLESTRUCT */ sub_45946( ref g_U829, g_U852, 1717549715, -1120519244, -75.96000000, 49.80000000, 12.85000000, 0.00000000, 0.00000000, -1.60000000, "Int_Trophy_01" );
     /* P_CREATECOLLECTIBLE */ sub_46103( ref g_U829 );
    return;
}

/* P_CREATECOLLECTIBLESTRUCT */ void sub_45946(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_385( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* P_CREATECOLLECTIBLE */ void sub_46103(int iParam0)
{
     /* WRITESCRIPTLOG */ sub_385( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_46186( iParam0->_fU12 )) == 1)
        {
             /* WRITESCRIPTLOG */ sub_385( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_385( "CO", "has never been collected.", 0 );
        }
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_46186( iParam0->_fU12 )) == 0)
        {
             /* CLEANPLACEMENT */ sub_5910( iParam0->_fU0 );
            iParam0->_fU0 =  /* CREATEPLACEMENT */ sub_45520( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                     /* WRITESCRIPTLOG */ sub_385( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_385( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ int sub_46186(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

/* P_SETUP_TROPHY_DOORS */ void sub_46695()
{
     /* WRITE_STRING */ sub_5612( "[GA] P_SETUP_TROPHY_DOORS start" );
     /* P_CREATEDOORSTRUCT */ sub_46807( ref l_U528, 1072344017, -51.03000000, 70.25000000, 14.10000000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_CREATEDOORSTRUCT */ sub_46807( ref l_U535, -1940123672, -51.02000000, 72.66000000, 14.10000000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_6546( ref l_U528, 1 );
     /* P_SETDOORLOCKED */ sub_6546( ref l_U535, 1 );
     /* P_CREATEDOORSTRUCT */ sub_46807( ref l_U542, 1072344017, -51.02000000, 73.07000000, 14.10000000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_CREATEDOORSTRUCT */ sub_46807( ref l_U549, -1940123672, -51.00000000, 75.48000000, 14.10000000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_6546( ref l_U542, 1 );
     /* P_SETDOORLOCKED */ sub_6546( ref l_U549, 1 );
     /* P_CREATEDOORSTRUCT */ sub_46807( ref l_U556, 1072344017, -51.01000000, 75.87000000, 14.10000000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_CREATEDOORSTRUCT */ sub_46807( ref l_U563, -1940123672, -50.99000000, 78.27000000, 14.10000000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_6546( ref l_U556, 1 );
     /* P_SETDOORLOCKED */ sub_6546( ref l_U563, 1 );
     /* WRITE_STRING */ sub_5612( "[GA] P_SETUP_TROPHY_DOORS end" );
    return;
}

/* P_CREATEDOORSTRUCT */ void sub_46807(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

/* MAL_PEDPLAYERACTIONTREENODE */ void sub_47256(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_ACTION_TREE_PLAY_NODE( uParam0, uParam1 );
    }
    return;
}

/* WRITESCRIPTLOG_PERIODIC */ void sub_47592(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if ( /* ISTIMERDONE */ sub_2204( uParam2 ))
    {
         /* WRITESCRIPTLOG */ sub_385( uParam0, uParam1, uParam4 );
         /* RESETTIMER */ sub_2780( uParam2 );
         /* STARTTIMER */ sub_2071( uParam2 );
    }
    else if (NOT ( /* HASTIMERBEENACTIVATED */ sub_1787( uParam2 )))
    {
         /* CREATETIMER */ sub_1921( uParam2, uParam3, 1, 0 );
         /* STARTTIMER */ sub_2071( uParam2 );
    }
    return;
}

/* P_CREATE_AND_START_TIMER */ void sub_47832(unknown uParam0, unknown uParam1)
{
     /* CREATETIMER */ sub_1921( uParam0, uParam1, 1, 0 );
     /* STARTTIMER */ sub_2071( uParam0 );
    return;
}

/* P_SETDOORAFFECTEDBYBULLETS */ void sub_47910(int iParam0, unknown uParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_6234( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_6318( iParam0 );
    }
    DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( iParam0->_fU0, iParam0->_fU4 ), uParam1 );
    return;
}

/* P_SETDOORMINMAXLIMIT */ void sub_48030(int iParam0, float fParam1, float fParam2)
{
    if (( /* F_DOESDOOREXIST */ sub_6234( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_6318( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        PRINTSTRING( "[SP]### Error: Door fMinLimit greater than fMaxLimit (default min:-81.0 max:81.0) ###" );
        PRINTNL();
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

/* NIS_POST_SETUP */ void sub_48457(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1016() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1054(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1016(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_48555();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_48555()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1016() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1016(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1016(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1016(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1016(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_48858(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_385( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_385( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_11334( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_49149( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_49626( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_49626( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_49886( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_49626( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_49886( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_49886( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_49626( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_49886( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_49886( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_49886( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_49626( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_49886( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_49886( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_49886( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_49886( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_51466( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_385( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_49149(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_8393( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_385( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_385( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_49626(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_49886(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_51466(int iParam0)
{
     /* WRITE_STRING */ sub_5612( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_51554( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_34661( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_34661( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_34661( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_38087( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_38087( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_38087( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_38087( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_38087( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_38087( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_38087( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_38087( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_38087( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_38087( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_38087( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_34661( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_38087( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_38087( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_38087( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_34661( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_52417( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_38087( iParam0->_fU52 );
     /* WRITE_STRING */ sub_5612( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_38087( iParam0->_fU96 );
     /* WRITE_STRING */ sub_5612( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_38087( iParam0->_fU100 );
     /* WRITE_STRING */ sub_5612( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_38087( iParam0->_fU104 );
     /* WRITE_STRING */ sub_5612( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_38087( iParam0->_fU108 );
     /* WRITE_STRING */ sub_5612( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_38087( iParam0->_fU112 );
     /* WRITE_STRING */ sub_5612( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_38087( iParam0->_fU116 );
     /* WRITE_STRING */ sub_5612( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_38087( iParam0->_fU120 );
     /* WRITE_STRING */ sub_5612( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_38087( iParam0->_fU124 );
     /* WRITE_STRING */ sub_5612( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_38087( iParam0->_fU128 );
     /* WRITE_STRING */ sub_5612( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_38087( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_38087( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_38087( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_51554(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_52417(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* P_SETUP_FREIGHT_ELEVATOR */ void sub_53373(unknown uParam0)
{
    vector[2] vVar3;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;

     /* WRITE_STRING */ sub_5612( "[SP]### P_SETUP_FREIGHT_ELEVATOR ###" );
    array(ref vVar3, 2);
    vVar3[0] = {-104.17000000, 22.06000000, 12.76000000};
    vVar3[1] = {-104.17000000, 22.06000000, 27.62000000};
     /* P_CREATEELEVATORSTRUCTSERVICEDUEL */ sub_53543( ref g_U3786, ref vVar3, 0.00000000, 0.00000000, -90.00000000, g_U2391, g_U2392, g_U2393, 1.00000000 );
    if (g_U854 == 10)
    {
         /* P_CREATEELEVATOR */ sub_54116( ref g_U3786, 1, 1 );
         /* P_OPEN_ELEVATOR_DOORS */ sub_54966( ref g_U3786, 1, 0 );
        SET_OBJECT_COORDS( g_U3786._fU232, -104.17000000, 22.06000000, 27.62000000 );
    }
    else
    {
         /* P_CREATEELEVATOR */ sub_54116( ref g_U3786, 0, uParam0 );
        SET_OBJECT_COORDS( g_U3786._fU232, -104.17000000, 22.06000000, 12.76000000 );
    }
    return;
}

/* P_CREATEELEVATORSTRUCTSERVICEDUEL */ void sub_53543(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
     /* WRITE_STRING */ sub_5612( "[SP]### P_CreateElevatorStructService ###" );
     /* P_CREATEELEVATORSTRUCTSERVICE */ sub_53652( iParam0, uParam1, uParam2, uParam5, uParam6, uParam8 );
    iParam0->_fU288 = 1;
    iParam0->_fU284 = 1;
    iParam0->_fU224 = uParam7;
    iParam0->_fU228 = uParam7;
    return;
}

/* P_CREATEELEVATORSTRUCTSERVICE */ void sub_53652(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
     /* WRITE_STRING */ sub_5612( "[SP]### P_CreateElevatorStructService ###" );
     /* P_CREATEELEVATORSTRUCT */ sub_53758( iParam0, uParam1, uParam2, uParam5, uParam6, uParam6, uParam7 );
    iParam0->_fU288 = 1;
    iParam0->_fU292 = 2.74000000;
    iParam0->_fU296 = 0.05000000;
    return;
}

/* P_CREATEELEVATORSTRUCT */ void sub_53758(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;

     /* WRITE_STRING */ sub_5612( "[SP]### P_CreateElevatorStruct ###" );
    I = 0;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        iParam0->_fU24[I] = {(uParam1^)[I]};
    }
    iParam0->_fU316 = 0;
    iParam0->_fU12 = {uParam2};
    iParam0->_fU212 = uParam5;
    iParam0->_fU216 = uParam6;
    iParam0->_fU220 = uParam7;
    iParam0->_fU284 = 0;
    iParam0->_fU288 = 0;
    iParam0->_fU292 = 0.88000000;
    iParam0->_fU296 = 0.02500000;
    iParam0->_fU300 = 0.00000000;
    iParam0->_fU304 = 0.00000000;
    iParam0->_fU208 = uParam8;
    return;
}

/* P_CREATEELEVATOR */ void sub_54116(int iParam0, unknown uParam1, unknown uParam2)
{
     /* WRITE_STRING */ sub_5612( "[SP]### P_CreateElevator ###" );
    iParam0->_fU0 = {iParam0->_fU24[uParam1]};
     /* CLEANOBJECT */ sub_5667( iParam0->_fU232 );
    iParam0->_fU232 =  /* CREATEOBJECT */ sub_54232( iParam0->_fU212, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
    if ((DOES_OBJECT_EXIST( iParam0->_fU232 )) == 1)
    {
        FREEZE_OBJECT_POSITION( iParam0->_fU232, 1 );
    }
     /* CLEANOBJECT */ sub_5667( iParam0->_fU236 );
    iParam0->_fU236 =  /* CREATEOBJECT */ sub_54232( iParam0->_fU216, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
    if ((DOES_OBJECT_EXIST( iParam0->_fU236 )) == 1)
    {
        FREEZE_OBJECT_POSITION( iParam0->_fU236, 1 );
    }
    if (iParam0->_fU288 == 0)
    {
         /* CLEANOBJECT */ sub_5667( iParam0->_fU240 );
        iParam0->_fU240 =  /* CREATEOBJECT */ sub_54232( iParam0->_fU220, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
        if ((DOES_OBJECT_EXIST( iParam0->_fU240 )) == 1)
        {
            FREEZE_OBJECT_POSITION( iParam0->_fU240, 1 );
        }
    }
    if (iParam0->_fU284 == 1)
    {
         /* CLEANOBJECT */ sub_5667( iParam0->_fU244 );
        iParam0->_fU244 =  /* CREATEOBJECT */ sub_54232( iParam0->_fU224, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
        if ((DOES_OBJECT_EXIST( iParam0->_fU244 )) == 1)
        {
            FREEZE_OBJECT_POSITION( iParam0->_fU244, 1 );
        }
        if (iParam0->_fU288 == 0)
        {
             /* CLEANOBJECT */ sub_5667( iParam0->_fU248 );
            iParam0->_fU248 =  /* CREATEOBJECT */ sub_54232( iParam0->_fU228, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
            if ((DOES_OBJECT_EXIST( iParam0->_fU248 )) == 1)
            {
                FREEZE_OBJECT_POSITION( iParam0->_fU248, 1 );
            }
        }
    }
    return;
}

/* CREATEOBJECT */ void sub_54232(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_33479( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* P_OPEN_ELEVATOR_DOORS */ void sub_54966(int iParam0, int iParam1, int iParam2)
{
     /* WRITE_STRING */ sub_5612( "[SP]### P_OPEN_ELEVATOR_DOORS ###" );
    if (iParam2 == 0)
    {
        if (iParam1 == 1)
        {
            iParam0->_fU308 = 2;
        }
        else if (iParam0->_fU288 == 1)
        {
            ;
        }
        iParam0->_fU308 = 1;;
    }
    else if (iParam1 == 1)
    {
        iParam0->_fU312 = 2;
    }
    else if (iParam0->_fU288 == 1)
    {
        ;
    }
    iParam0->_fU312 = 1;;;
    return;
}

/* P_START_SP_CHALLENGES */ void sub_55318()
{
     /* WRITESCRIPTLOG */ sub_385( "CCB", "P_START_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_385( "CCB", "Starting the Stadium_Trophy context...", 0 );
    START_CONTEXT( "Stadium_Trophy" );
    return;
}

/* MAL_ES_GETACTINTSTATUS */ void sub_55485(int iParam0, unknown uParam1)
{
    return  /* MAL_GETACTINTSTATUS */ sub_55527( iParam0->_fU0, uParam1 );
}

/* MAL_GETACTINTSTATUS */ int sub_55527(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 );
    }
    return 0;
}

/* MAL_ES_LOOKATPED */ void sub_55627(int iParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        ;
    }
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        TASK_LOOK_AT_PED( iParam0->_fU0, uParam1, uParam2, 0 );
    }
    return;
}

/* MAL_ES_FINISHACTINT */ void sub_55726(int iParam0, unknown uParam1)
{
     /* MAL_FINISHACTINT */ sub_55764( iParam0 + 0, uParam1 );
    return;
}

/* MAL_FINISHACTINT */ void sub_55764(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_ESA_SETLOCKEDANDREGISTEREDONPLAYER */ void sub_55843(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
         /* MAL_REGISTERTARGET */ sub_55939( ref (uParam0^)[I]._fU0,  /* PLAYER_PED_ID */ sub_1016() );
         /* MAL_SETLOCKEDTARGET */ sub_56032( ref (uParam0^)[I]._fU0,  /* PLAYER_PED_ID */ sub_1016() );
    }
    return;
}

/* MAL_REGISTERTARGET */ void sub_55939(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETLOCKEDTARGET */ void sub_56032(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* F_TROPHY_SHOULD_FIGHT_START */ int sub_56198()
{
    int I;

    for ( I = 0; I < 3; I++ )
    {
        if ( /* MAL_PED_AWARE_OF_PED */ sub_56268( l_U570[I]._fU0,  /* PLAYER_PED_ID */ sub_1016() ))
        {
            return 1;
        }
    }
    return 0;
}

/* MAL_PED_AWARE_OF_PED */ int sub_56268(unknown uParam0, unknown uParam1)
{
    if (GET_PED_AWARENESS_STATE( uParam0, uParam1, 1 ))
    {
        return 1;
    }
    if (GET_PED_AWARENESS_STATE( uParam0, uParam1, 2 ))
    {
        return 1;
    }
    if (GET_PED_AWARENESS_STATE( uParam0, uParam1, 4 ))
    {
        return 1;
    }
    if (GET_PED_AWARENESS_STATE( uParam0, uParam1, 8 ))
    {
        return 1;
    }
    return 0;
}

/* P_HANDLE_STATE_TROPHY_ROOM_FIGHT */ void sub_56488(boolean bParam0)
{
    if (bParam0)
    {
         /* WRITESCRIPTLOG */ sub_385( "[SA]", "Entering state STATE_TROPHY_ROOM_FIGHT.", 0 );
         /* KILL_SPEECH */ sub_56600( ref l_U1238, 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_43002( ref l_U1248 );
        if (NOT (IS_PED_DEAD( l_U570[0]._fU0 )))
        {
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_43203( 3, l_U570[0]._fU0, "M3_CP_19_MUS", ref l_U1248, 2, 0 );
        }
        else if (NOT (IS_PED_DEAD( l_U570[1]._fU0 )))
        {
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_43203( 3, l_U570[1]._fU0, "M3_CP_19_MUS", ref l_U1248, 2, 0 );
        }
        else
        {
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_43203( 3, l_U570[2]._fU0, "M3_CP_19_MUS", ref l_U1248, 2, 0 );
        }
         /* PLAY_SINGLE_SPEECH */ sub_43473( "SSTD_TRCB", ref l_U1248, 8, 1 );
         /* P_TROPHY_START_FIGHT */ sub_57073();
         /* P_CREATE_AND_START_TIMER */ sub_47832( ref l_U1607, 1500 );
    }
    if (( /* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ sub_57690( ref l_U1440 )) == 1)
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_43002( ref l_U1631 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_43203( 0,  /* PLAYER_PED_ID */ sub_1016(), "MAX", ref l_U1631, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_43203( 1,  /* PLAYER_PED_ID */ sub_1016(), "MAX", ref l_U1631, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_43473( "EXPLORE_ITEM", ref l_U1631, 8, 1 );
    }
     /* F_HANDLE_POI */ sub_58107( ref l_U1440 );
    if ((NOT (IS_CONTROL_PRESSED( 0, 4 ))) AND ((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_1016() )) AND ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND ((NOT (IS_CONTROL_PRESSED( 0, 6 ))) AND (NOT (IS_BULLET_TIME_ACTIVE( 1 )))))))
    {
        if ((NOT (IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1016() ))) AND (l_U1606 < 1))
        {
            if ( /* ISTIMERDONE */ sub_2204( ref l_U1607 ))
            {
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_43002( ref l_U1589 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_43203( 1,  /* PLAYER_PED_ID */ sub_1016(), "MAX", ref l_U1589, 2, 0 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_43203( 2,  /* PLAYER_PED_ID */ sub_1016(), "PASSOS", ref l_U1589, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_43473( l_U1599[l_U1606], ref l_U1589, 8, 1 );
                 /* P_CREATE_AND_START_TIMER */ sub_47832( ref l_U1607, 15000 );
                l_U1606++;
            }
        }
    }
    if (( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_60140( l_U1589 )) AND (IS_LAST_MAN_STANDING_ACTIVE()))
    {
         /* KILL_SPEECH */ sub_56600( ref l_U1589, 0 );
    }
    if ( /* ISTIMERDONE */ sub_2204( ref l_U1348 ))
    {
        AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_2_3_6", "", 0, 6000, -1, -1082130432, 0 );
    }
    if (NOT l_U1237)
    {
        if ((( /* MAL_ESA_GETNUMDEADPEDSWITHLIMITS */ sub_60433( ref l_U570, 0, 3 )) >= 2) || ( /* F_ISPLAYERINTRIGGERBOX */ sub_60371( l_U257 )))
        {
            l_U1237 = 1;
             /* MAL_ES_UNBLOCKANDCOMBATPLAYER */ sub_60601( ref l_U570[6], 0 );
             /* MAL_ESA_CLEARSTAYINCOVER */ sub_61045( ref l_U570, 3, 5 );
        }
    }
    if (NOT l_U278._fU64)
    {
        if ((( /* MAL_ESA_GETNUMDEADPEDSWITHLIMITS */ sub_60433( ref l_U570, 0, 6 )) >= 4) || ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_61234( ref l_U278, 0 )))
        {
             /* MAL_ESA_PROCESSINGFREEZE */ sub_36189( ref l_U570, 0, 7, 10 );
             /* MAL_ESA_VISIBLE */ sub_57574( ref l_U570, 1, 7, 10 );
             /* MAL_ESA_CLEARHIDEINCOVER */ sub_61413( ref l_U570, 7, 10 );
             /* MAL_ESA_SETLOCKEDANDREGISTEREDONPLAYER */ sub_55843( ref l_U570, 7, 10 );
             /* MAL_ESA_UNBLOCKANDCOMBATPLAYER */ sub_61607( ref l_U570, 0, 7, 10 );
            l_U278._fU64 = 1;
        }
    }
    if (NOT l_U299._fU64)
    {
        if ((( /* MAL_ESA_GETNUMDEADPEDSWITHLIMITS */ sub_60433( ref l_U570, 0, 10 )) >= 8) || ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_61234( ref l_U299, 0 )))
        {
             /* MAL_ESA_PROCESSINGFREEZE */ sub_36189( ref l_U570, 0, 11, 13 );
             /* MAL_ESA_VISIBLE */ sub_57574( ref l_U570, 1, 11, 13 );
             /* MAL_ESA_CLEARSTAYINCOVER */ sub_61045( ref l_U570, 11, 13 );
             /* MAL_ESA_SETLOCKEDANDREGISTEREDONPLAYER */ sub_55843( ref l_U570, 11, 13 );
             /* MAL_ESA_UNBLOCKANDCOMBATPLAYER */ sub_61607( ref l_U570, 0, 11, 13 );
            l_U299._fU64 = 1;
        }
    }
    if (( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_61840( ref l_U570 )) < 3)
    {
        if ( /* F_ISPLAYERINTRIGGERREGIONFIRSTTIME */ sub_61957( ref l_U384, 0 ))
        {
            l_U131 = 11;
             /* WRITESCRIPTLOG */ sub_385( "GA", "eCheckpointState = CP_TR_ELEVATOR", 0 );
        }
    }
    return;
}

/* KILL_SPEECH */ void sub_56600(int iParam0, unknown uParam1)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_56628( (iParam0^) )))
    {
        ;
    }
    else
    {
        PRINTSTRING( "\n KILL SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
        {
            if (iParam0->_fU8 == g_U6[iParam0->_fU4])
            {
                STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
            }
        }
    }
    return;
}

/* IS_SCRIPT_SPEECH_STRUCT_VALID */ boolean sub_56628(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

/* P_TROPHY_START_FIGHT */ void sub_57073()
{
    PRINTSTRING( "[MSWW]### P_TROPHY_START_FIGHT altering firing tokens percentile of group with ID: " );
     /* WRITE_INT */ sub_38087( l_U1231._fU0 );
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( l_U1231._fU0, 1.00000000 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( l_U1231._fU0, 1.00000000 );
     /* MAL_ESA_SETLOCKEDANDREGISTEREDONPLAYER */ sub_55843( ref l_U570, 0, -1 );
     /* MAL_ES_SETPEDVISIBLE */ sub_39024( ref l_U570[3], 1 );
     /* MAL_ES_STOPHIDINGBUTSTAYINCOVER */ sub_57284( ref l_U570[3] );
     /* MAL_ES_STOPHIDINGBUTSTAYINCOVER */ sub_57284( ref l_U570[4] );
     /* MAL_ES_SETPEDVISIBLE */ sub_39024( ref l_U570[5], 1 );
     /* MAL_ES_STOPHIDINGBUTSTAYINCOVER */ sub_57284( ref l_U570[5] );
     /* MAL_ESA_BLOCK */ sub_57417( ref l_U570, 0, 3, 5 );
     /* MAL_ESA_VISIBLE */ sub_57574( ref l_U570, 0, 7, -1 );
    return;
}

/* MAL_ES_STOPHIDINGBUTSTAYINCOVER */ void sub_57284(int iParam0)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( iParam0->_fU0, 0 );
    }
    return;
}

/* MAL_ESA_BLOCK */ void sub_57417(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_BLOCK */ sub_57483( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_BLOCK */ void sub_57483(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( iParam0->_fU0, uParam1 );
    }
    return;
}

/* MAL_ESA_VISIBLE */ void sub_57574(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_SETPEDVISIBLE */ sub_39024( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ int sub_57690(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND (( /* F_IS_POI_AVAILABLE */ sub_57736( iParam0 )) == 0)))
    {
        if ((( /* F_HASACTIONBEENPRESSED */ sub_57921()) == 1) AND (((IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_1016() )) == 0) AND (((IS_PED_GETTING_UP(  /* PLAYER_PED_ID */ sub_1016() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP(  /* PLAYER_PED_ID */ sub_1016() )) == 0) AND (((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_1016() )) == 0) AND (((IS_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1016() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

/* F_IS_POI_AVAILABLE */ void sub_57736(int iParam0)
{
    return iParam0->_fU56;
}

/* F_HASACTIONBEENPRESSED */ int sub_57921()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

/* F_HANDLE_POI */ int sub_58107(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1016() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1016() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_58208(  /* PLAYER_PED_ID */ sub_1016(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_58208(  /* PLAYER_PED_ID */ sub_1016(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_7165( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND (( /* F_ISACTIONINGAVAILABLE */ sub_7261( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (( /* F_HASACTIONBEENPRESSED */ sub_57921()) == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                             /* P_ENABLE_POI */ sub_6707( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                             /* P_ENABLEPOIGLINT */ sub_6766( iParam0, 0 );
                             /* P_ENABLEPOIINTERACTIONTEXT */ sub_6985( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                             /* P_ENABLEPOIGLINT */ sub_6766( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1016() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1016(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                         /* P_ENABLEPOIGLINT */ sub_6766( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_ENABLEPOIINTERACTIONTEXT */ sub_6985( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1016() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED(  /* PLAYER_PED_ID */ sub_1016(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1016() )) == 0)
                    {
                        TASK_LOOK_AT_COORD(  /* PLAYER_PED_ID */ sub_1016(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1016() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1016(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                     /* P_ENABLEPOIGLINT */ sub_6766( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                     /* P_ENABLEPOIINTERACTIONTEXT */ sub_6985( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1016() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_1016() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1016() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1016(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                 /* P_ENABLEPOIINTERACTIONTEXT */ sub_6985( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

/* F_ISPEDINTRIGGERBOX */ int sub_58208(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* IS_SPEECH_CURRENTLY_PLAYING */ int sub_60140(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_56628( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_60371(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_58208(  /* PLAYER_PED_ID */ sub_1016(), uParam0 );
}

/* MAL_ESA_GETNUMDEADPEDSWITHLIMITS */ void sub_60433(unknown uParam0, int iParam1, int iParam2)
{
    int Result;
    int I;

    Result = 0;
    I = iParam1;
    for ( I = iParam1; I <= ((iParam1 - 1) + iParam2); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I]._fU0 ))
        {
            if (IS_PED_DEAD( (uParam0^)[I]._fU0 ))
            {
                Result++;
            }
        }
    }
    return Result;
}

/* MAL_ES_UNBLOCKANDCOMBATPLAYER */ void sub_60601(int iParam0, unknown uParam1)
{
     /* MAL_UNBLOCKANDCOMBATPLAYER */ sub_60656( iParam0 + 0, iParam0->_fU80, uParam1 );
    return;
}

/* MAL_UNBLOCKANDCOMBATPLAYER */ void sub_60656(unknown uParam0, unknown uParam1, unknown uParam2)
{
     /* MAL_UNBLOCKANDCOMBATPED */ sub_60706( uParam0,  /* PLAYER_PED_ID */ sub_1016(), uParam1, uParam2 );
    return;
}

/* MAL_UNBLOCKANDCOMBATPED */ void sub_60706(unknown uParam0, unknown uParam1, unknown uParam2, boolean bParam3)
{
    unknown uVar6;

     /* MAL_WRITESCRIPTLOG */ sub_3628( "MAL_UnblockAndCombatPed" );
    OPEN_SEQUENCE_TASK( ref uVar6 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
         /* MAL_WRITESCRIPTLOG */ sub_3628( "MAL_UnblockAndCombatPed: Victim is not dead" );
        TASK_COMBAT_PED( 0, uParam1 );
    }
    CLOSE_SEQUENCE_TASK( uVar6 );
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
         /* MAL_WRITESCRIPTLOG */ sub_3628( "MAL_UnblockAndCombatPed: Ped is not dead" );
        if (bParam3)
        {
            CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        }
        else
        {
            CLEAR_PED_TASKS( (uParam0^) );
        }
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam2 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar6 );
    }
    CLEAR_SEQUENCE_TASK( uVar6 );
    return;
}

/* MAL_ESA_CLEARSTAYINCOVER */ void sub_61045(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
         /* MAL_ES_CLEARSTAYINCOVER */ sub_61120( ref (uParam0^)[I] );
    }
    return;
}

/* MAL_ES_CLEARSTAYINCOVER */ void sub_61120(int iParam0)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( iParam0->_fU0, 0 );
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_61234(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_58208(  /* PLAYER_PED_ID */ sub_1016(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* MAL_ESA_CLEARHIDEINCOVER */ void sub_61413(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
         /* MAL_ES_CLEARHIDEINCOVER */ sub_61488( ref (uParam0^)[I] );
    }
    return;
}

/* MAL_ES_CLEARHIDEINCOVER */ void sub_61488(int iParam0)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
         /* MAL_ES_CLEARSTAYINCOVER */ sub_61120( iParam0 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( iParam0->_fU0, 0 );
    }
    return;
}

/* MAL_ESA_UNBLOCKANDCOMBATPLAYER */ void sub_61607(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_UNBLOCKANDCOMBATPLAYER */ sub_60601( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ESA_GETNUMLIVINGPEDS */ void sub_61840(unknown uParam0)
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            Result++;
        }
    }
    return Result;
}

/* F_ISPLAYERINTRIGGERREGIONFIRSTTIME */ void sub_61957(int iParam0, unknown uParam1)
{
    if (iParam0->_fU548)
    {
        return 0;
    }
    else
    {
        iParam0->_fU548 =  /* F_ISPLAYERINTRIGGERREGION */ sub_62029( iParam0, uParam1 );
    }
    return iParam0->_fU548;
}

/* F_ISPLAYERINTRIGGERREGION */ void sub_62029(int iParam0, unknown uParam1)
{
    int Result;
    int I;
    int J;

    Result = 0;
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1016() )))
    {
        for ( I = 0; I < iParam0->_fU508; I++ )
        {
            if ( /* F_ISPLAYERINTRIGGERBOX */ sub_60371( iParam0->_fU0[I] ))
            {
                Result = 1;
            }
        }
    }
    if ((uParam1) AND (Result))
    {
        for ( J = 0; J < iParam0->_fU508; J++ )
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( ref iParam0->_fU0[J]._fU0, 0 );
        }
    }
    iParam0->_fU548 = 1;
    return Result;
}

/* P_START_CHECKPOINT_THREAD */ void sub_62325(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

/* P_HANDLE_STATE_TROPHY_ROOM_ELEVATOR */ void sub_62384(boolean bParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;

    if (bParam0)
    {
         /* WRITESCRIPTLOG */ sub_385( "[SA]", "Entering state STATE_TROPHY_ROOM_ELEVATOR.", 0 );
         /* P_ENABLE_POI */ sub_6707( ref l_U1258, 1 );
         /* MAL_RECREATEOBJECTWITHNOROTATION */ sub_62524( ref l_U1344, g_U2397, l_U1345, 1, 0 );
         /* P_TROPHY_ELEV_ROOM_REINFORCEMENT */ sub_62599();
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_61234( ref l_U1359, 0 ))
    {
         /* WRITESCRIPTLOG */ sub_385( "MF", "Playing Speech: SSTD_TTDE", 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_43203( 1,  /* PLAYER_PED_ID */ sub_1016(), "MAX", ref uVar3, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_43203( 0,  /* PLAYER_PED_ID */ sub_1016(), "PASSOS", ref uVar3, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_43473( "SSTD_TTDE", ref uVar3, 8, 1 );
    }
    if (( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_61840( ref l_U570 )) < 1)
    {
        if ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_60140( l_U1589 ))
        {
             /* KILL_SPEECH */ sub_56600( ref l_U1589, 1 );
        }
        if (NOT l_U1626)
        {
            if (NOT IS_BULLET_CAMERA_ACTIVE())
            {
                l_U1626 = 1;
                 /* P_SET_POI_AVAILABLE */ sub_16116( ref l_U1440, 1 );
            }
        }
        if ( /* F_HANDLE_POI */ sub_58107( ref l_U1440 ))
        {
             /* NIS_PRE_SETUP */ sub_40570( 1, 0, 0, 1 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_STAD_CP_05", "MEMORIAL_EXPLORE_CAMS_CAM", 0, g_U649, 0, 0, 0 );
             /* MAL_SETPEDVISIBLE */ sub_40766(  /* PLAYER_PED_ID */ sub_1016(), 0 );
            if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "ssta_Memorial" )))
            {
                 /* KILL_ANY_MISSION_SPEECH */ sub_63929( 0 );
                 /* P_SPEECH_PLAY_MONOLOGUE */ sub_64142( "SSTD_TCMR", ref uVar13 );
                FOUND_EXPLORATION_ITEM( "ssta_Memorial" );
                l_U1569 = 10800;
            }
            else
            {
                l_U1569 = 4000;
            }
            l_U1526 = 1;
            l_U1358 = 0;
        }
        if (l_U1526)
        {
            if (CAMERA_ANIMATED_CURRENT_TIME() > l_U1569)
            {
                 /* MAL_SETPEDVISIBLE */ sub_40766(  /* PLAYER_PED_ID */ sub_1016(), 1 );
                 /* P_CREATE_AND_START_TIMER */ sub_47832( ref l_U1570, 10000 );
                CAMERA_ANIMATED_STOP( 0, 0 );
                 /* NIS_POST_SETUP */ sub_48457( 1, 1 );
                 /* P_ENABLE_POI */ sub_6707( ref l_U1440, 1 );
                l_U1526 = 0;
            }
        }
        if ((( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_61840( ref l_U570 )) == 0) AND ((NOT IS_BULLET_CAMERA_ACTIVE()) AND (l_U1358 == 1)))
        {
            if (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_64419()))
            {
                 /* P_HANDLE_AMBIENT_SPEECH */ sub_64519();
            }
        }
    }
    else if (( /* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ sub_57690( ref l_U1440 )) == 1)
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_43002( ref l_U1631 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_43203( 0,  /* PLAYER_PED_ID */ sub_1016(), "MAX", ref l_U1631, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_43203( 1,  /* PLAYER_PED_ID */ sub_1016(), "MAX", ref l_U1631, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_43473( "EXPLORE_ITEM", ref l_U1631, 8, 1 );
    }
     /* F_HANDLE_POI */ sub_58107( ref l_U1440 );;
    if ( /* ISTIMERDONE */ sub_2204( ref l_U1570 ))
    {
         /* P_GBL_REFRESH_PAYNE_KILLER_COUNT */ sub_66005();
        l_U1358 = 1;
    }
    if ( /* ISTIMERDONE */ sub_2204( ref l_U1348 ))
    {
        AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_2_3_6", "", 0, 6000, -1, -1082130432, 0 );
    }
     /* MAL_ESA_ASSIGNBULLETCAMTOLASTLIVINGPED */ sub_66257( ref l_U570, 0, 0, 0 );
    if (NOT l_U1357)
    {
        if (( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_61840( ref l_U570 )) < 1)
        {
            if (IS_BULLET_CAMERA_ACTIVE())
            {
                l_U1357 = 1;
                l_U1358 = 1;
                 /* P_GBL_REFRESH_PAYNE_KILLER_COUNT */ sub_66005();
                AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1_6", "", 0, 12000, 10000, -1082130432, 0 );
            }
        }
    }
    if (NOT (IS_SPHERE_VISIBLE( -106.38130000, 35.30912000, 13.80432000, 1.00000000, 0 )))
    {
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_61234( ref l_U236, 0 ))
        {
             /* CLEANOBJECT */ sub_5667( l_U1630 );
            uVar23 = DOOR_FIND_CLOSEST( g_U3458._fU0, g_U3458._fU4 );
            if (DOES_OBJECT_EXIST( uVar23 ))
            {
                SET_OBJECT_VISIBLE( uVar23, 1 );
                SET_OBJECT_COLLISION( uVar23, 1 );
            }
             /* P_CLOSEDOOR */ sub_6208( ref g_U3458, 1 );
             /* P_CLOSEDOOR */ sub_6208( ref g_U3451, 1 );
             /* P_SETDOORLOCKED */ sub_6546( ref g_U3458, 1 );
             /* P_SETDOORLOCKED */ sub_6546( ref g_U3451, 1 );
             /* P_TROPHY_EARLY_CLEAN_PEDS */ sub_66993();
             /* LOADSEAMLESSCUTSCENE */ sub_67611( "MID_07_STADIUM", 0 );
            if (NOT l_U1357)
            {
                AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1_6", "", 0, 12000, 10000, -1082130432, 0 );
            }
        }
    }
    if ((NOT l_U236._fU64) AND ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_61234( ref l_U215, 0 )))
    {
         /* P_TROPHY_EARLY_CLEAN_PEDS */ sub_66993();
    }
    if ( /* F_HANDLE_POI */ sub_58107( ref l_U1258 ))
    {
        g_U3884 = 1;
        l_U131 = 12;
         /* WRITESCRIPTLOG */ sub_385( "GA", "eCheckpointState = CP_FINISHED", 0 );
    }
    return;
}

/* MAL_RECREATEOBJECTWITHNOROTATION */ void sub_62524(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
     /* MAL_RECREATEOBJECT */ sub_40449( uParam0, uParam1, uParam2, g_U649, uParam5, uParam6 );
    return;
}

/* P_TROPHY_ELEV_ROOM_REINFORCEMENT */ void sub_62599()
{
     /* MAL_WRITESCRIPTLOG */ sub_3628( "P_TROPHY_ELEV_ROOM_REINFORCEMENT - START" );
     /* P_SETDOORAFFECTEDBYBULLETS */ sub_47910( ref g_U3451, 0 );
     /* P_SETDOORLOCKED */ sub_6546( ref g_U3451, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_48030( ref g_U3451, -90.00000000, 88.00000000 );
     /* P_SETDOORLATCH */ sub_6465( ref g_U3451, 1 );
     /* MAL_ES_PROCESSINGFREEZE */ sub_36266( ref l_U570[14], 0 );
     /* MAL_ES_SETPEDVISIBLE */ sub_39024( ref l_U570[14], 1 );
     /* MAL_REGISTERTARGET */ sub_55939( ref l_U570[14]._fU0,  /* PLAYER_PED_ID */ sub_1016() );
     /* MAL_SETLOCKEDTARGET */ sub_56032( ref l_U570[14]._fU0,  /* PLAYER_PED_ID */ sub_1016() );
     /* MAL_ES_ALERTNESSANDEMOTIONSTATE */ sub_62825( ref l_U570[14], 3, 1 );
    if (NOT (IS_PED_DEAD( l_U570[14]._fU0 )))
    {
         /* MAL_ES_REGISTERPEDWITHISEQ */ sub_63145( l_U570[14], -1610386741, "DoorKicker" );
        ISEQ_REGISTER_ENTITY( -1610386741, "Door", l_U1630, 1 );
        SET_OBJECT_COLLISION( l_U1630, 0 );
        ISEQ_START( -1610386741 );
    }
     /* MAL_ES_MOVETOPOINTCOMBATPLAYER */ sub_63285( ref l_U570[14], 65430, 36.27000000, 13.26000000 );
     /* MAL_WRITESCRIPTLOG */ sub_3628( "P_TROPHY_ELEV_ROOM_REINFORCEMENT - END" );
    return;
}

/* MAL_ES_ALERTNESSANDEMOTIONSTATE */ void sub_62825(int iParam0, unknown uParam1, unknown uParam2)
{
     /* MAL_SETPEDALERTNESSANDEMOTIONSTATE */ sub_62877( iParam0 + 0, uParam1, uParam2 );
    return;
}

/* MAL_SETPEDALERTNESSANDEMOTIONSTATE */ void sub_62877(unknown uParam0, unknown uParam1, unknown uParam2)
{
     /* MAL_SETPEDALERTNESS */ sub_62928( uParam0, uParam1 );
     /* MAL_SETPEDEMOTIONSTATION */ sub_63000( uParam0, uParam2 );
    return;
}

/* MAL_SETPEDALERTNESS */ void sub_62928(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_ALERTNESS( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETPEDEMOTIONSTATION */ void sub_63000(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_EMOTION_STATE( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_ES_REGISTERPEDWITHISEQ */ void sub_63145(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45)
{
     /* MAL_REGISTERPEDWITHISEQ */ sub_39687( uParam0._fU0, uParam44, uParam45 );
    return;
}

/* MAL_ES_MOVETOPOINTCOMBATPLAYER */ void sub_63285(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
     /* MAL_MOVETOPOINTTHENCOMBATPED */ sub_63351( iParam0 + 0,  /* PLAYER_PED_ID */ sub_1016(), uParam1, iParam0->_fU80, 20000, 0 );
    return;
}

/* MAL_MOVETOPOINTTHENCOMBATPED */ void sub_63351(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    unknown uVar10;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        CLEAR_PED_TASKS( (uParam0^) );
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam5 );
        if (NOT (IS_PED_DEAD( uParam1 )))
        {
            OPEN_SEQUENCE_TASK( ref uVar10 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uParam2, 3, uParam6, 1048576000, 0, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, uParam7 );
            TASK_COMBAT_PED( 0, uParam1 );
            CLOSE_SEQUENCE_TASK( uVar10 );
            TASK_PERFORM_SEQUENCE( (uParam0^), uVar10 );
            CLEAR_SEQUENCE_TASK( uVar10 );
        }
    }
    return;
}

/* KILL_ANY_MISSION_SPEECH */ void sub_63929(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        PRINTSTRING( "\n KILL_ANY_MISSION_SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

/* P_SPEECH_PLAY_MONOLOGUE */ void sub_64142(unknown uParam0, unknown uParam1)
{
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_43002( uParam1 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_43203( 0,  /* PLAYER_PED_ID */ sub_1016(), "MAX", uParam1, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_43203( 1,  /* PLAYER_PED_ID */ sub_1016(), "MAX", uParam1, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_43473( uParam0, uParam1, 8, 1 );
    return;
}

/* IS_ANY_SPEECH_CURRENTLY_PLAYING */ void sub_64419()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

/* P_HANDLE_AMBIENT_SPEECH */ void sub_64519()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;

    if (NOT ( /* HASTIMERBEENACTIVATED */ sub_1787( ref g_U3992 )))
    {
         /* P_CREATE_AND_START_TIMER */ sub_47832( ref g_U3992, 30000 );
    }
    if ((TIME_SINCE_LAST_MONOLOGUE() > 5000) AND ( /* F_GBL_HAS_PLAYER_JUST_ACQUIRED_PAIN_KILLERS */ sub_64582()))
    {
         /* WRITESCRIPTLOG */ sub_385( "MF", "Playing Speech: SSTD_MFSP", 0 );
         /* P_SPEECH_PLAY_MONOLOGUE */ sub_64142( ref g_U4003, ref uVar2 );
         /* RESETTIMER */ sub_2780( ref g_U3992 );
        return;
    }
    if ((NOT l_U1628) || (NOT l_U1627))
    {
        if ( /* ISTIMERDONE */ sub_2204( ref g_U3992 ))
        {
            if (NOT l_U1627)
            {
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_43203( 1,  /* PLAYER_PED_ID */ sub_1016(), "MAX", ref uVar12, 2, 0 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_43203( 2,  /* PLAYER_PED_ID */ sub_1016(), "PASSOS", ref uVar12, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_43473( "SSTD_DNAE", ref uVar12, 8, 1 );
                 /* RESETTIMER */ sub_2780( ref g_U3992 );
                l_U1627 = 1;
            }
            else
            {
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_43203( 1,  /* PLAYER_PED_ID */ sub_1016(), "MAX", ref uVar22, 2, 0 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_43203( 2,  /* PLAYER_PED_ID */ sub_1016(), "PASSOS", ref uVar22, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_43473( "SSTD_DNAF", ref uVar22, 8, 1 );
                 /* RESETTIMER */ sub_2780( ref g_U3992 );
                l_U1628 = 1;
            }
        }
    }
    if ( /* F_ISPLAYERINTRIGGERBOX */ sub_60371( l_U1401 ))
    {
        if ( /* F_GBL_IS_PLAYER_READY_TO_SAY_EXPLORE_SPEECH_MONOLOGUE */ sub_65106( ref l_U1422, 8000, 15000 ))
        {
             /* WRITESCRIPTLOG */ sub_385( "MF", "Playing Speech: SSTD_ETTR", 0 );
             /* P_SPEECH_PLAY_MONOLOGUE */ sub_64142( "SSTD_ETTR", ref uVar2 );
            return;
        }
    }
    else if ((NOT l_U1431._fU16) AND ( /* HASTIMERBEENACTIVATED */ sub_1787( ref l_U1431 )))
    {
         /* WRITESCRIPTLOG */ sub_385( "MF", "Disabling ambient dialogue timer: tmrTrophy_speech_ETTR", 0 );
         /* DISABLETIMER */ sub_65609( ref l_U1431 );
    }
    if (l_U1422._fU16 == 1)
    {
        if ( /* F_ISPLAYERINTRIGGERBOX */ sub_60371( l_U1401 ))
        {
            if ( /* F_GBL_IS_PLAYER_READY_TO_SAY_EXPLORE_SPEECH_MONOLOGUE */ sub_65106( ref l_U1431, 5000, 10000 ))
            {
                 /* WRITESCRIPTLOG */ sub_385( "MF", "Playing Speech: SSTD_ETRA", 0 );
                 /* P_SPEECH_PLAY_MONOLOGUE */ sub_64142( "SSTD_ETRA", ref uVar2 );
                return;
            }
        }
        else if ((NOT l_U1422._fU16) AND ( /* HASTIMERBEENACTIVATED */ sub_1787( ref l_U1422 )))
        {
             /* WRITESCRIPTLOG */ sub_385( "MF", "Disabling ambient dialogue timer: tmrTrophy_speech_ETRA", 0 );
             /* DISABLETIMER */ sub_65609( ref l_U1422 );
        }
    }
    return;
}

/* F_GBL_HAS_PLAYER_JUST_ACQUIRED_PAIN_KILLERS */ int sub_64582()
{
    if (GET_PAYNEKILLER_AMT() > g_U4002)
    {
         /* WRITESCRIPTLOG */ sub_385( "MF", "Player picked up Payne Killers!", 0 );
        PRINTSTRING( "HAD: " );
         /* WRITE_INT */ sub_38087( g_U4002 );
        PRINTSTRING( "NOW: " );
         /* WRITE_INT */ sub_38087( GET_PAYNEKILLER_AMT() );
        g_U4002 = GET_PAYNEKILLER_AMT();
        return 1;
    }
    g_U4002 = GET_PAYNEKILLER_AMT();
    return 0;
}

/* F_GBL_IS_PLAYER_READY_TO_SAY_EXPLORE_SPEECH_MONOLOGUE */ int sub_65106(int iParam0, unknown uParam1, unknown uParam2)
{
    if (NOT ( /* HASTIMERBEENACTIVATED */ sub_1787( iParam0 )))
    {
         /* WRITESCRIPTLOG */ sub_385( "MF", "F_GBL_IS_PLAYER_READY_TO_SAY_EXPLORE_SPEECH_MONOLOGUE - Starting Timer", 0 );
         /* CREATETIMER */ sub_1921( iParam0, 5000, 1, 0 );
         /* STARTTIMER */ sub_2071( iParam0 );
    }
    if ((GET_PED_SPEED(  /* PLAYER_PED_ID */ sub_1016() )) < 0.10000000)
    {
        iParam0->_fU12 = uParam1;
    }
    else
    {
        iParam0->_fU12 = uParam2;
    }
    if ( /* ISTIMERDONE */ sub_2204( iParam0 ))
    {
         /* WRITESCRIPTLOG */ sub_385( "MF", "F_GBL_IS_PLAYER_READY_TO_SAY_EXPLORE_SPEECH_MONOLOGUE - Timer is complete!", 0 );
        return 1;
    }
    return 0;
}

/* DISABLETIMER */ void sub_65609(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

/* P_GBL_REFRESH_PAYNE_KILLER_COUNT */ void sub_66005()
{
     /* WRITESCRIPTLOG */ sub_385( "MF", "P_GBL_REFRESH_PAYNE_KILLER_COUNT - START", 0 );
    g_U4002 = GET_PAYNEKILLER_AMT();
     /* WRITESCRIPTLOG */ sub_385( "MF", "P_GBL_REFRESH_PAYNE_KILLER_COUNT - END", 0 );
    return;
}

/* MAL_ESA_ASSIGNBULLETCAMTOLASTLIVINGPED */ void sub_66257(unknown uParam0, boolean bParam1, unknown uParam2, unknown uParam3)
{
    int I;

    if (( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_61840( uParam0 )) == 1)
    {
        for ( I = 0; I < (uParam0^); I++ )
        {
            if ( /* MAL_SETCANTRIGGERBULLETCAM */ sub_66348( (uParam0^)[I]._fU0, 1 ))
            {
                if (bParam1)
                {
                    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, uParam2 );
                }
                BULLET_CAMERA_TRACK_UNTIL_GROUNDED( uParam3 );
                return (uParam0^)[I];
            }
        }
    }
    return g_U671;
}

/* MAL_SETCANTRIGGERBULLETCAM */ int sub_66348(unknown uParam0, boolean bParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        if (bParam1)
        {
            if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( uParam0 )))
            {
                 /* MAL_WRITESCRIPTLOG */ sub_3628( "MAL_SetCanTriggerBulletCam: Ped is not able to trigger BC, adding" );
                SET_PED_CAN_TRIGGER_BULLET_CAM( uParam0, bParam1 );
                return 1;
            }
        }
        else if (GET_PED_CAN_TRIGGER_BULLET_CAM( uParam0 ))
        {
             /* MAL_WRITESCRIPTLOG */ sub_3628( "MAL_SetCanTriggerBulletCam turning off BC" );
            SET_PED_CAN_TRIGGER_BULLET_CAM( uParam0, bParam1 );
            return 1;
        }
    }
    return 0;
}

/* P_TROPHY_EARLY_CLEAN_PEDS */ void sub_66993()
{
     /* WRITESCRIPTLOG */ sub_385( "GA", "P_TROPHY_EARLY_CLEAN_PEDS start", 0 );
     /* MAL_ESA_CLEAN */ sub_6005( ref l_U570 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_67094( g_U2386, ref g_U1069 );
     /* WRITESCRIPTLOG */ sub_385( "GA", "P_TROPHY_EARLY_CLEAN_PEDS end", 0 );
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE */ void sub_67094(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_4552( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a MODEL_NAME asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Removing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* LOADSEAMLESSCUTSCENE */ void sub_67611(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* P_RELEASE_TR_ASSETS */ void sub_68273()
{
     /* WRITESCRIPTLOG */ sub_385( "GA", "P_RELEASE_TR_ASSETS start", 0 );
     /* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ sub_68352( ref l_U110, ref g_U1069 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE_ARRAY */ sub_68457( ref l_U127, ref g_U1214 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_68905( "npc_pstl_cover_grenade", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_68905( "npc_rifle_cover_grenade", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_68905( "mped_grenade_core", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_68905( "LEVEL_S_STAD_CP_05", ref g_U1354 );
     /* P_UNLOAD_PLGE_ANIM_DICTS */ sub_69337( 0 );
     /* WRITESCRIPTLOG */ sub_385( "GA", "P_RELEASE_TR_ASSETS end", 0 );
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ void sub_68352(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_67094( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE_ARRAY */ void sub_68457(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_68531( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE */ void sub_68531(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_4552( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a WEAPON_TYPE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_REMOVE */ void sub_68905(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_4552( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ANIM_DICT asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_UNLOAD_PLGE_ANIM_DICTS */ void sub_69337(boolean bParam0)
{
    if (NOT bParam0)
    {
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_68905( "PLGE_RIFLE_CROUCH", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_68905( "PLGE_PSTL_CROUCH", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_68905( "PLGE_RIFLE_CORE", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_68905( "PLGE_PSTL_CORE", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_68905( "PLGE_RIFLE_CORE_RELOAD", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_68905( "PLGE_PSTL_CORE_RELOAD", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_68905( "PLGE_RIFLE_HANDSIG", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_68905( "PLGE_PSTL_HANDSIG", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_68905( "PLGE_RIFLE_ACTIONS", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_68905( "PLGE_PSTL_ACTIONS", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_68905( "PLGE_RIFLE_KNEE", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_68905( "PLGE_PSTL_KNEE", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_68905( "PLGE_RIFLE_COVER", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_68905( "PLGE_PSTL_COVER", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_68905( "PLGE_RIFLE_REACT", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_68905( "PLGE_PSTL_REACT", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_68905( "PLGE_RIFLE_COVER_EXIT", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_68905( "PLGE_PSTL_COVER_EXIT", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_68905( "PLGE_PSTL_FULLBODY", ref g_U1354 );
    }
    else
    {
         /* UNLOADANIMDICT */ sub_69960( "PLGE_RIFLE_CROUCH" );
         /* UNLOADANIMDICT */ sub_69960( "PLGE_PSTL_CROUCH" );
         /* UNLOADANIMDICT */ sub_69960( "PLGE_RIFLE_CORE" );
         /* UNLOADANIMDICT */ sub_69960( "PLGE_PSTL_CORE" );
         /* UNLOADANIMDICT */ sub_69960( "PLGE_RIFLE_CORE_RELOAD" );
         /* UNLOADANIMDICT */ sub_69960( "PLGE_PSTL_CORE_RELOAD" );
         /* UNLOADANIMDICT */ sub_69960( "PLGE_RIFLE_HANDSIG" );
         /* UNLOADANIMDICT */ sub_69960( "PLGE_PSTL_HANDSIG" );
         /* UNLOADANIMDICT */ sub_69960( "PLGE_RIFLE_ACTIONS" );
         /* UNLOADANIMDICT */ sub_69960( "PLGE_PSTL_ACTIONS" );
         /* UNLOADANIMDICT */ sub_69960( "PLGE_RIFLE_KNEE" );
         /* UNLOADANIMDICT */ sub_69960( "PLGE_PSTL_KNEE" );
         /* UNLOADANIMDICT */ sub_69960( "PLGE_RIFLE_COVER" );
         /* UNLOADANIMDICT */ sub_69960( "PLGE_PSTL_COVER" );
         /* UNLOADANIMDICT */ sub_69960( "PLGE_RIFLE_REACT" );
         /* UNLOADANIMDICT */ sub_69960( "PLGE_PSTL_REACT" );
         /* UNLOADANIMDICT */ sub_69960( "PLGE_RIFLE_COVER_EXIT" );
         /* UNLOADANIMDICT */ sub_69960( "PLGE_PSTL_COVER_EXIT" );
         /* UNLOADANIMDICT */ sub_69960( "PLGE_PSTL_FULLBODY" );
    }
    return;
}

/* UNLOADANIMDICT */ void sub_69960(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}


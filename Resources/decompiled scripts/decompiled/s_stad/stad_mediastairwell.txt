void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = -1;
    l_U40 = {64536, 64536, 64536};
    l_U62 = 0;
    l_U63 = 0;
    l_U64 = 1500;
    l_U75 = 0;
    l_U125 = 0;
    l_U127 = 1;
    l_U128 = 0;
    l_U659 = 0;
    l_U690 = 0;
    l_U691 = 0;
    l_U692 = 0;
    l_U725 = {98.53500000, 38.63200000, 2.80000000};
    l_U728 = 90.68300000;
    l_U729 = {96.18500000, 48.58700000, 2.80600000};
    l_U732 = 180.00000000;
    l_U734 = {98.70000000, 38.65000000, 2.76000000};
    l_U737 = {0.00000000, 0.00000000, 105.00000000};
    l_U770 = 2700;
    l_U771 = {108.56200000, 23.34600000, 2.80000000};
    l_U775 = 0;
    l_U777 = 0;
    l_U1143 = {111.29740000, 5.54371600, 2.80012700};
    l_U1195 = 0;
    l_U1206 = 65446;
    l_U1274 = 0;
    l_U1345 = 0;
    l_U1346 = 0;
    l_U1347 = 0;
    l_U1348 = 0;
    l_U1349 = 0;
    l_U1350 = 0;
    l_U1352 = 0;
    l_U1519 = 0;
    l_U1529 = 0;
    l_U1607 = nil;
    l_U1813 = 0;
    l_U1814 = 0;
    l_U1815 = 0;
    l_U1816 = 0;
    l_U1826 = 0;
    l_U1827 = {91.57430000, 62.36010000, 2.78224000};
    l_U1830 = 208.05200000;
    l_U1831 = -5.17400000;
    l_U1832 = -4.26400000;
    l_U1869 = 0;
    l_U1889 = 0;
    l_U1918 = 0;
    l_U1919 = 0;
    l_U1920 = 0;
    l_U1931 = 0;
    l_U1932 = 0;
     /* WRITESCRIPTLOG */ sub_734( "SP", "Script stad_MediaStairwell.sc is starting up...", 0 );
     /* P_MS_POPULATE_VARIABLE_ARRAYS */ sub_852();
    l_U125 = 1;
    l_U75 = 0;
    while (NOT IS_EXITFLAG_SET())
    {
         /* P_HANDLE_FAILURE */ sub_1153();
        if (l_U128 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_13663();
        }
        WAIT( 0 );
    }
     /* P_CLEANUP_MS */ sub_4368( 0 );
     /* P_RELEASE_MS_ASSETS */ sub_94185();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "stad_MediaStairwell" );
     /* WRITESCRIPTLOG */ sub_734( "SP", "Script stad_MediaStairwell.sc is terminating...", 0 );
    return;
}

/* WRITESCRIPTLOG */ void sub_734(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_MS_POPULATE_VARIABLE_ARRAYS */ void sub_852()
{
     /* WRITESCRIPTLOG */ sub_734( "GA", "P_MS_POPULATE_VARIABLE_ARRAYS start", 0 );
    l_U113[0] = g_U851;
    l_U113[1] = g_U2391;
    l_U113[2] = g_U2392;
    l_U113[3] = g_U2393;
    l_U113[4] = g_U2396;
    l_U113[5] = g_U2394;
    l_U113[6] = g_U2381;
    l_U113[7] = 619121117;
    l_U113[8] = 824031458;
    l_U123[0] = 1194438308;
     /* WRITESCRIPTLOG */ sub_734( "GA", "P_MS_POPULATE_VARIABLE_ARRAYS end", 0 );
    return;
}

/* P_HANDLE_FAILURE */ void sub_1153()
{
    if ((g_U855 == 4) || (g_U855 == 3))
    {
        switch (l_U128)
        {
            case 0:
            if (((IS_PED_DEAD( g_U4392 )) AND (DOES_PED_EXIST( g_U4392 ))) || (( /* RESTARTING_CHECKPOINT */ sub_1363()) || (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() ))))
            {
                if (IS_PED_DEAD( g_U4392 ))
                {
                    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
                    RESET_LAST_MAN_STANDING();
                }
                 /* MAL_ESA_BLOCK */ sub_1886( ref l_U778, 1, 0, -1 );
                CLEAR_PED_TASKS_IMMEDIATELY( l_U778[0]._fU0 );
                CLEAR_PED_TASKS_IMMEDIATELY( l_U778[1]._fU0 );
                CLEAR_PED_TASKS_IMMEDIATELY( l_U778[2]._fU0 );
                CLEAR_PED_TASKS_IMMEDIATELY( l_U778[3]._fU0 );
                l_U128 = 1;
                 /* WRITESCRIPTLOG */ sub_734( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if ( /* IS_RESTART_ACTIVE */ sub_2173())
            {
                l_U128 = 2;
            }
            else if (( /* F_CHECK_QUIT_RETRY */ sub_2233( 0 )) == 1)
            {
                l_U128 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
            {
                if ((g_U888[5]._fU40 != 4) AND (g_U888[5]._fU40 != 0))
                {
                     /* WRITESCRIPTLOG */ sub_734( "CR", "Shutting down script for MCE_STORES.", 0 );
                     /* P_RESET_CHECKPOINT_THREAD */ sub_3800( ref g_U888[5] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U888[5]._fU32 );
                    g_U3875 = 0;
                }
                l_U128 = 3;
                 /* WRITESCRIPTLOG */ sub_734( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
             /* WRITESCRIPTLOG */ sub_734( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() ))) AND (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1300() ))))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1300(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1262() ))
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1262(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
             /* P_IMAGEFX_STOP_BULLETCAM */ sub_4105( "STAD_PASSOS_MEDIA_SCRIPTED_FAIL_FX" );
            TERMINATE_GAME_BULLET_CAMERA();
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
             /* P_CLEANUP_MS */ sub_4368( 1 );
             /* P_LOAD_AREA */ sub_8156( g_U855 );
            l_U128 = 4;
             /* WRITESCRIPTLOG */ sub_734( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
             /* WRITESCRIPTLOG */ sub_734( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            if (l_U77._fU0)
            {
                 /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_9025( ref l_U77,  /* PLAYER_PED_ID */ sub_1262() );
            }
            l_U128 = 5;
             /* WRITESCRIPTLOG */ sub_734( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
             /* WRITESCRIPTLOG */ sub_734( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U125 = 1;
            l_U127 = 0;
            l_U128 = 0;
             /* WRITESCRIPTLOG */ sub_734( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

/* PLAYER_PED_ID */ int sub_1262()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_1300() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_1300()
{
    return GET_PLAYER_ID();
}

/* RESTARTING_CHECKPOINT */ int sub_1363()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1262(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1300(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1300(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1262() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1262(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* MAL_ESA_BLOCK */ void sub_1886(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_BLOCK */ sub_1952( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_BLOCK */ void sub_1952(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( iParam0->_fU0, uParam1 );
    }
    return;
}

/* IS_RESTART_ACTIVE */ void sub_2173()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_2233(int iParam0)
{
    iParam0 = 1;
    switch (l_U63)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_2315( ref l_U65 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
            {
                l_U64 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_2449( ref l_U65, l_U64, 1, 1 );
             /* STARTTIMER */ sub_2599( ref l_U65 );
        }
        if ( /* ISTIMERDONE */ sub_2732( ref l_U65 ))
        {
             /* WRITESCRIPTLOG */ sub_734( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1300() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1300(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U63 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U63 = 2;
            }
            else
            {
                l_U63 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_734( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_3233();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_734( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_3233();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_2315(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* CREATETIMER */ void sub_2449(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_2599(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* ISTIMERDONE */ int sub_2732(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_3233()
{
     /* WRITESCRIPTLOG */ sub_734( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_3308( ref l_U65 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1300() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1300(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U62 = 0;
    l_U62 = l_U62;
    l_U63 = 0;
    return;
}

/* RESETTIMER */ void sub_3308(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_RESET_CHECKPOINT_THREAD */ void sub_3800(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

/* P_IMAGEFX_STOP_BULLETCAM */ void sub_4105(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_734( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
     /* CLEANCAMERA */ sub_4215( ref l_U76 );
    l_U75 = 1;
    return;
}

/* CLEANCAMERA */ void sub_4215(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

/* P_CLEANUP_MS */ void sub_4368(boolean bParam0)
{
     /* WRITESCRIPTLOG */ sub_734( "GA", "P_CLEANUP_MS start", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
    {
        SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1262(), 0 );
    }
     /* TERMINATEISEQ */ sub_4462( 1743875163, 0 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_4772( 1743875163, ref g_U1263 );
     /* TERMINATEISEQ */ sub_4462( 1708899639, 0 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_4772( 1708899639, ref g_U1263 );
     /* TERMINATEISEQ */ sub_4462( 1269878088, 0 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_4772( 1269878088, ref g_U1263 );
     /* TERMINATEISEQ */ sub_4462( -1324066065, 0 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_4772( -1324066065, ref g_U1263 );
     /* TERMINATEISEQ */ sub_4462( 1496659887, 0 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_4772( 1496659887, ref g_U1263 );
     /* TERMINATEISEQ */ sub_4462( 1090240116, 0 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_4772( 1090240116, ref g_U1263 );
    if ((CUTSCENE_NAMED_IS_LOADING( "MID_02B_STADIUM" )) || (CUTSCENE_IS_LOADED( "MID_02B_STADIUM" )))
    {
        CLEAR_NAMED_CUTSCENE( "MID_02B_STADIUM" );
    }
     /* P_STREAMREQ_SCRIPT_STREAM_STOP */ sub_6071( "S_STAD_MID_02B_BLENDOUT", ref g_U2034 );
     /* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ sub_6866( "S_STAD_MID_02B_BLENDOUT", ref g_U2034 );
     /* CLEANPED */ sub_7216( g_U4392 );
     /* CLEANPED */ sub_7216( l_U724 );
     /* CLEANOBJECT */ sub_7316( g_U3866 );
     /* CLEANOBJECT */ sub_7316( g_U3867 );
     /* CLEANOBJECT */ sub_7316( l_U733 );
    if (NOT bParam0)
    {
         /* P_CLEAN_ELEVATOR */ sub_7406( g_U3706 );
    }
     /* CLEANPED */ sub_7216( l_U1129 );
     /* MAL_ESA_CLEAN */ sub_7592( ref l_U778 );
     /* CLEANPLACEMENTARRAY */ sub_7714( ref l_U1353 );
     /* WRITESCRIPTLOG */ sub_734( "[SA]", "Disabling static emitter S_STAD_SE_STAIRS_SHOTS.", 0 );
    ENABLE_STATIC_EMITTER( "S_STAD_SE_STAIRS_SHOTS", 0 );
     /* CLEANCAMERA */ sub_4215( ref l_U776 );
    SET_CAM_VIEW_MODE( 1 );
     /* P_STOP_SP_CHALLENGES */ sub_7962();
     /* WRITESCRIPTLOG */ sub_734( "GA", "P_CLEANUP_MS end", 0 );
    return;
}

/* TERMINATEISEQ */ void sub_4462(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            DISPLAYF( "[SP]### Waiting for interactive sequence to terminate: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_STREAMREQ_ISEQ_REMOVE */ void sub_4772(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_4910( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a ISEQ asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ int sub_4910(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if ((uParam1^)[I] == iParam0)
            {
                DISPLAYF( "[CCB] ### The THREADID index matches the asset requested for removal: {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
            else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID index is in use and is active: {} ###", 1, 513, (uParam1^)[I] );
                Result = I;
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is in use, but is no longer active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

/* P_STREAMREQ_SCRIPT_STREAM_STOP */ void sub_6071(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if ( /* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ sub_6121( uParam0, uParam1 ))
    {
        iVar4 =  /* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ sub_6330( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            DISPLAYF( "[CCB]### Stopping the SCRIPT_STREAM: {} ###", 1, 1281, ref (uParam1^)[iVar4]._fU0 );
            STOP_SCRIPT_STREAM( iVar4 );
        }
        else
        {
            DISPLAYF( "[CCB]### The SCRIPT_STREAM slot is NOT valid!!! {} ###", 1, 1537, uParam0 );
            SCRIPT_ASSERT( "Attempting to stop a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        DISPLAYF( "[CCB]### The SCRIPT_STREAM asset is NOT loaded!!! {} ###", 1, 1537, uParam0 );
        DISPLAYF( "Attempting to stop a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ int sub_6121(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB]### The SCRIPT_STREAM is loaded: {} ###", 1, 1281, ref (uParam1^)[I]._fU0 );
                return 1;
            }
        }
    }
    return 0;
}

/* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ int sub_6330(unknown uParam0, unknown uParam1)
{
    int Result;

    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
        {
            return Result;
        }
    }
    return -1;
}

/* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ void sub_6866(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_4910( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a SCRIPT_STREAM asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* CLEANPED */ void sub_7216(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CLEANOBJECT */ void sub_7316(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* P_CLEAN_ELEVATOR */ void sub_7406(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47, unknown uParam48, unknown uParam49, unknown uParam50, unknown uParam51, unknown uParam52, unknown uParam53, unknown uParam54, unknown uParam55, unknown uParam56, unknown uParam57, unknown uParam58, unknown uParam59, unknown uParam60, unknown uParam61, unknown uParam62, unknown uParam63, unknown uParam64, unknown uParam65, unknown uParam66, unknown uParam67, unknown uParam68, unknown uParam69, unknown uParam70, unknown uParam71, unknown uParam72, unknown uParam73, unknown uParam74, unknown uParam75, unknown uParam76, unknown uParam77, unknown uParam78, unknown uParam79)
{
     /* WRITE_STRING */ sub_7466( "[SP]### P_CLEAN_ELEVATOR ###" );
     /* CLEANOBJECT */ sub_7316( uParam0._fU232 );
     /* CLEANOBJECT */ sub_7316( uParam0._fU236 );
     /* CLEANOBJECT */ sub_7316( uParam0._fU240 );
     /* CLEANOBJECT */ sub_7316( uParam0._fU244 );
     /* CLEANOBJECT */ sub_7316( uParam0._fU248 );
    return;
}

/* WRITE_STRING */ void sub_7466(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* MAL_ESA_CLEAN */ void sub_7592(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* MAL_ES_CLEAN */ sub_7640( ref (uParam0^)[I] );
    }
    return;
}

/* MAL_ES_CLEAN */ void sub_7640(int iParam0)
{
     /* CLEANPED */ sub_7216( iParam0->_fU0 );
    iParam0->_fU172 = 0;
    return;
}

/* CLEANPLACEMENTARRAY */ void sub_7714(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* CLEANPLACEMENT */ sub_7769( (uParam0^)[I] );
    }
    return;
}

/* CLEANPLACEMENT */ void sub_7769(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

/* P_STOP_SP_CHALLENGES */ void sub_7962()
{
     /* WRITESCRIPTLOG */ sub_734( "CCB", "P_STOP_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_734( "CCB", "Stopping the Stadium_Media context...", 0 );
    END_CONTEXT( "Stadium_Media" );
    return;
}

/* P_LOAD_AREA */ void sub_8156(unknown uParam0)
{
    vector vVar3;
    unknown uVar6;
    int iVar7;
    string sVar8;
    unknown uVar9;

     /* MAL_WRITESCRIPTLOG */ sub_8194( "P_LOAD_AREA" );
    vVar3 = {g_U2138[uParam0]};
    uVar6 = g_U2256[uParam0];
    iVar7 = -1;
    switch (uParam0)
    {
        case 2:
        case 21:
        iVar7 = GET_HASH_KEY( ref g_U2460 );
        sVar8 = "Int_Bsmt_01";
        break;
        case 3:
        case 22:
        iVar7 = GET_HASH_KEY( "Room_Hallway_01" );
        sVar8 = "Int_Bsmt_02";
        break;
        case 4:
        case 23:
        iVar7 = GET_HASH_KEY( "Room_Staircase_02" );
        sVar8 = "Int_Bsmt_03";
        break;
        case 5:
        case 24:
        iVar7 = GET_HASH_KEY( ref g_U2484 );
        sVar8 = "int_store_00";
        break;
        case 9:
        case 27:
        iVar7 = GET_HASH_KEY( ref g_U2548 );
        sVar8 = "int_Trophy_01";
        break;
        case 10:
        vVar3 = {-97.16455000, 22.49700000, 26.58807000};
        SET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1262(), -2.36477500, 2.76315900, 1.17283500, 1 );
        SET_PED_HEADING(  /* PLAYER_PED_ID */ sub_1262(), uVar6 );
        LOAD_SCENE( -2.36477500, 2.76315900, 1.17283500 );
        break;
    }
    if (iVar7 == -1)
    {
        LOAD_SCENE( vVar3 );
    }
    else
    {
        uVar9 = GET_INTERIOR_FROM_NAME( sVar8, 0 );
        SET_INTERIOR_ACTIVE( uVar9, 1, 0 );
        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar9, iVar7 );
    }
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )) == 0)
    {
        SET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1262(), vVar3, 1 );
        SET_PED_HEADING(  /* PLAYER_PED_ID */ sub_1262(), uVar6 );
        FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_1262(), 0 );
    }
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2296[uParam0], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2296[uParam0], 1065353216, 0 );
    return;
}

/* MAL_WRITESCRIPTLOG */ void sub_8194(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar3, 1537, "MSWW", 1537, uParam0, 1537, "###" );
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_9025(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_734( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_9244( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_10408( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10722( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11157( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10722( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11157( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10722( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11157( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_11473( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11157( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_11473( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11157( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_12045( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_12247( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1262(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_734( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_9244(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_9306( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_9306(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_10408(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_10722(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_7466( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_11157(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_11473(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_7466( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_12045(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_12247(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_9306( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_12345( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_12345(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_HANDLE_EVENTS */ void sub_13663()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    unknown uVar40;
    unknown uVar41;
    unknown uVar42;
    unknown uVar43;
    unknown uVar44;
    unknown uVar45;
    unknown uVar46;
    unknown uVar47;
    unknown uVar48;
    unknown uVar49;
    unknown uVar50;
    unknown uVar51;
    unknown uVar52;
    unknown uVar53;
    unknown uVar54;
    unknown uVar55;
    unknown uVar56;
    unknown uVar57;
    unknown uVar58;
    unknown uVar59;
    unknown uVar60;
    unknown uVar61;
    unknown uVar62;
    unknown uVar63;
    unknown uVar64;
    unknown uVar65;
    unknown uVar66;
    unknown uVar67;
    unknown uVar68;
    unknown uVar69;
    unknown uVar70;
    unknown uVar71;
    unknown uVar72;
    unknown uVar73;
    unknown uVar74;
    unknown uVar75;
    unknown uVar76;
    unknown uVar77;
    unknown uVar78;
    unknown uVar79;
    unknown uVar80;
    unknown uVar81;
    unknown uVar82;
    unknown uVar83;
    unknown uVar84;
    unknown uVar85;

    iVar2 = l_U125;
    if ((g_U855 == 4) || (g_U855 == 3))
    {
         /* UPDATE_PASSOS_HEADTRACKING */ sub_13718();
    }
    switch (l_U125)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_734( "SP", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
         /* P_INITIALIZE_SCRIPT_DATA */ sub_14672();
         /* P_SET_STATIC_DATA */ sub_15546();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U125 = 2;
         /* WRITESCRIPTLOG */ sub_734( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_734( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
         /* P_REQUEST_MS_PERSISTENT_ASSETS */ sub_19270();
         /* P_REQUEST_MS_NONPERSISTENT_ASSETS */ sub_28962();
        l_U125 = 3;
         /* WRITESCRIPTLOG */ sub_734( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if (( /* F_STREAMREQ_ACTION_TREE_IS_LOADED */ sub_36619( ref g_U2012 )) AND (( /* F_STREAMREQ_SCRIPT_STREAM_IS_LOADED */ sub_36233( ref g_U2034 )) AND (( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_35819( ref g_U1263 )) AND (( /* F_STREAMREQ_ANIM_DICT_IS_LOADED */ sub_35428( ref g_U1354 )) AND (( /* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ sub_35026( ref g_U1214 )) AND ( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_34629( ref g_U1069 )))))))
        {
            if ((NOT l_U77._fU0) AND (g_U854 >= 3))
            {
                l_U125 = 4;
                 /* WRITESCRIPTLOG */ sub_734( "SP", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
            }
            else
            {
                l_U125 = 6;
                 /* WRITESCRIPTLOG */ sub_734( "SP", "eCheckpointState = CP_BRANCH_START_MEDIA_OR_STAIRWELL", 0 );
            }
        }
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_734( "GA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        g_U3870 = 1;
        l_U127 = 0;
        if (g_U854 == 3)
        {
             /* P_SETUP_PRACTICE_ELEVATOR */ sub_37252( 1, 0 );
             /* P_OPEN_ELEVATOR_DOORS */ sub_39739( ref g_U3706, 1, 0 );
             /* P_HANDLE_ELEVATOR */ sub_39928( ref g_U3706 );
        }
        if (( /* HAS_SAVEFILE_LOADED */ sub_42005( ref l_U77 )) == 0)
        {
             /* F_GIVEPEDWEAPON */ sub_11473(  /* PLAYER_PED_ID */ sub_1262(), 68019059, 50, 0, 0 );
             /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10722(  /* PLAYER_PED_ID */ sub_1262(), 1194438308, 0, 50, 0 );
            l_U125 = 5;
             /* WRITESCRIPTLOG */ sub_734( "GA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U125 = 6;
             /* WRITESCRIPTLOG */ sub_734( "SP", "eCheckpointState = CP_BRANCH_START_MEDIA_OR_STAIRWELL", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1262(), 0 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1262(), 0, 0 ) )))
            {
                l_U125 = 6;
                 /* WRITESCRIPTLOG */ sub_734( "GA", "eCheckpointState = CP_BRANCH_START_MEDIA_OR_STAIRWELL", 0 );
            }
        }
        break;
        case 6:
        if ((g_U854 == 4) || (g_U855 == 4))
        {
            l_U125 = 17;
             /* WRITESCRIPTLOG */ sub_734( "GA", "eCheckpointState = CP_STAIRWELL_START_DIRECTLY", 0 );
        }
        else
        {
            l_U125 = 7;
             /* WRITESCRIPTLOG */ sub_734( "GA", "eCheckpointState = CP_MEDIA_PRE_CREATE_ASSETS", 0 );
        }
        break;
        case 7:
        if (l_U126)
        {
             /* P_PRESSROOMCS_PRE */ sub_42724();
             /* P_SETUP_EDISON */ sub_43352();
            l_U126 = 0;
            return;
        }
        if ( /* MAL_ENEMYSTRUCTARRAYCREATE */ sub_45297( ref l_U778, "PressroomCS", ref l_U955, 1.00000000, 1, 0 ))
        {
             /* P_PRESSROOMCS_POST */ sub_48569();
             /* P_CREATE_S_STA_GG_M1_02 */ sub_50022();
             /* P_CREATE_PLACEMENTS */ sub_51009();
            l_U125 = 8;
             /* WRITESCRIPTLOG */ sub_734( "GA", "eCheckpointState = CP_MEDIA_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 8:
        if (g_U3870)
        {
            l_U125 = 9;
             /* WRITESCRIPTLOG */ sub_734( "GA", "eCheckpointState = CP_ELEVATOR_NIS", 0 );
        }
        break;
        case 9:
        if (l_U126)
        {
             /* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ sub_58885( ref l_U1842, "MID_02B_STADIUM", 51377, 53401, 54241, 54514, 54628, 56346, 250, 0 );
            l_U1842._fU100 = g_U853;
             /* CUTSYS_SETCUTSCENELOADINTERIORONSKIP */ sub_59457( ref l_U1842, "int_Bsmt_02", "Room_Hallway_01" );
            if (l_U127)
            {
                l_U1842._fU4 = 2;
            }
            else
            {
                l_U1842._fU4 = 7;
                AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1", "", 0, -1, -1, -1082130432, 0 );
            }
        }
        if ( /* CUTSYS_HANDLECUTSCENE */ sub_59636( ref l_U1842 ))
        {
            if (NOT l_U77._fU0)
            {
                g_U855 = 3;
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_61906( ref l_U77, g_U855,  /* PLAYER_PED_ID */ sub_1262(), g_U2138[3], g_U2256[3], g_U2296[3], g_U2336[3], 0 );
            }
            l_U125 = 10;
             /* WRITESCRIPTLOG */ sub_734( "GA", "eCheckpointState = CP_PRESS_ROOM_INVESTIGATION", 0 );
        }
        break;
        case 10:
        if (l_U126)
        {
             /* P_CREATE_AND_START_TIMER */ sub_66549( ref l_U1890, 10000 );
        }
        if ( /* ISTIMERDONE */ sub_2732( ref l_U1890 ))
        {
            if (l_U1889 < 2)
            {
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_66642( ref l_U1879 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 0,  /* PLAYER_PED_ID */ sub_1262(), "MAX", ref l_U1879, 2, 0 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 1, g_U4392, "PASSOS", ref l_U1879, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_56929( "SSTD_NFMR", ref l_U1879, 8, 1 );
                 /* P_CREATE_AND_START_TIMER */ sub_66549( ref l_U1890, 10000 );
                l_U1889++;
            }
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_66837( ref l_U192, 0 ))
        {
            if ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_67045( l_U1879 ))
            {
                 /* KILL_SPEECH */ sub_67273( ref l_U1879, 0 );
            }
            AUDIO_MUSIC_PLAY_ONESHOT();
            SET_CAM_VIEW_MODE( 1 );
             /* P_START_INTERROGATION_PT1 */ sub_67463();
             /* P_CREATE_AND_START_TIMER */ sub_66549( ref l_U693, 25072 );
             /* P_CREATE_AND_START_TIMER */ sub_66549( ref l_U702, 15000 );
             /* RESETTIMER */ sub_3308( ref l_U1890 );
        }
        if ( /* ISTIMERDONE */ sub_2732( ref l_U702 ))
        {
            AUDIO_MUSIC_REQUEST_ONESHOT( "STADIUM_ONESHOT_13", 0 );
        }
        if ( /* ISTIMERDONE */ sub_2732( ref l_U693 ))
        {
            AUDIO_MUSIC_PLAY_ONESHOT();
        }
        if (l_U777 == 0)
        {
            if (((IS_PED_DEAD( l_U724 )) == 0) AND ((DOES_PED_EXIST( l_U724 )) == 1))
            {
                if ((PED_GET_ACTION_INTENTION_STATUS( l_U724, 56 )) == 3)
                {
                    PED_FINISH_ACTION_INTENTION( l_U724, 56 );
                    if (IS_SCRIPTEDFX_ENABLED() == 1)
                    {
                         /* WRITESCRIPTLOG */ sub_734( "SP", "Starting Image FX Bullet Cam", 0 );
                        l_U776 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
                        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
                        SETUP_BULLET_CAMERA_ANIM_SCENE( l_U776, l_U724, l_U724 );
                    }
                    l_U777 = 1;
                }
            }
        }
        if (NOT l_U692)
        {
            if ( /* F_INTERROGATION_PT1_FINISHED */ sub_68077())
            {
                 /* P_START_INTERROGATION_PT2 */ sub_68172();
                l_U692 = 1;
            }
        }
        if ((NOT l_U740._fU68) AND (l_U192._fU64))
        {
            if (NOT (IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U724, ref l_U740._fU0 )))
            {
                l_U740._fU68 = 1;
                 /* MAL_WRITESCRIPTLOG */ sub_8194( "UNFREEZING CHAIR" );
                FREEZE_OBJECT_POSITION( l_U733, 0 );
            }
        }
        if (NOT l_U690)
        {
            if ( /* F_DID_PLAYER_INTERRUPT_INTERROGATION_WITH_GUN */ sub_68485())
            {
                 /* WRITESCRIPTLOG */ sub_734( "GA", "Player interrupted interrogation with shooting.", 0 );
                l_U690 = 1;
                 /* P_UNFREEZE_INTERROGATION_CHAIR */ sub_68740();
                 /* MAL_SETACTINWITHFOCUSPOS */ sub_68889( ref g_U4392,  /* MAL_GETPEDCOORDS */ sub_68813(  /* PLAYER_PED_ID */ sub_1262() ), 48, 1000 );
                l_U1274 = 1;
                 /* P_CREATE_AND_START_TIMER */ sub_66549( ref l_U761, l_U770 );
                 /* CREATETIMER */ sub_2449( ref l_U693, 1000, 1, 0 );
                while ((NOT (IS_PED_DEAD( g_U4392 ))) AND (IS_BULLET_CAMERA_RUNNING( 0 )))
                {
                    if ((IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED()) AND (IS_PED_DEAD( l_U724 )))
                    {
                        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
                    }
                    WAIT( 0 );
                }
                 /* P_INTERRUPT_INTERROGATION */ sub_69075();
            }
        }
        if ((IS_PED_DEAD( g_U4392 )) AND (NOT l_U1348))
        {
            l_U1348 = 1;
             /* P_UNFREEZE_INTERROGATION_CHAIR */ sub_68740();
             /* P_KILL_PED */ sub_69422( l_U724 );
        }
        if (l_U1274)
        {
            if ( /* ISTIMERDONE */ sub_2732( ref l_U761 ))
            {
                l_U125 = 11;
                 /* WRITESCRIPTLOG */ sub_734( "GA", "eCheckpointState = CP_NIS_CS_ENTER_PRESS_ROOM", 0 );
                l_U126 = 1;
                return;
            }
        }
        if ( /* F_INTERROGATION_PT2_FINISHED */ sub_69651())
        {
             /* WRITESCRIPTLOG */ sub_734( "SA", "Interrogation sequence is finished.", 0 );
            l_U125 = 11;
             /* WRITESCRIPTLOG */ sub_734( "GA", "eCheckpointState = CP_NIS_CS_ENTER_PRESS_ROOM", 0 );
            l_U126 = 1;
            return;
        }
        if ((NOT l_U659) AND (l_U1274))
        {
            if (NOT IS_BULLET_CAMERA_ACTIVE())
            {
                 /* P_PASSOS_REACTION_DIALOGUE */ sub_69952();
            }
            l_U659 = 1;
        }
        if ( /* F_ISPLAYERINTRIGGERREGIONFIRSTTIME */ sub_70186( ref l_U277, 0 ))
        {
            l_U125 = 11;
             /* WRITESCRIPTLOG */ sub_734( "GA", "eCheckpointState = CP_NIS_CS_ENTER_PRESS_ROOM", 0 );
        }
        break;
        case 11:
        if (l_U126)
        {
             /* P_MEDIA_CS_ENTER */ sub_70602();
            if (NOT l_U690)
            {
                WAIT( 0 );
                l_U690 = 1;
                 /* P_UNFREEZE_INTERROGATION_CHAIR */ sub_68740();
                 /* MAL_SETACTINWITHFOCUSPOS */ sub_68889( ref g_U4392,  /* MAL_GETPEDCOORDS */ sub_68813(  /* PLAYER_PED_ID */ sub_1262() ), 48, 1000 );
                 /* P_INTERRUPT_INTERROGATION */ sub_69075();
            }
        }
        if ( /* ISTIMERDONE */ sub_2732( ref l_U1579 ))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_66642( ref uVar3 );
             /* WRITESCRIPTLOG */ sub_734( "MF", "Playing Spech: SSTD_SLAB", 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 1,  /* PLAYER_PED_ID */ sub_1262(), "MAX", ref uVar3, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 0, g_U4392, "PASSOS", ref uVar3, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_56929( "SSTD_SLAB", ref uVar3, 8, 1 );
        }
        if ( /* ISTIMERDONE */ sub_2732( ref l_U1588 ))
        {
             /* P_CREATE_AND_START_TIMER */ sub_66549( ref l_U1588, 1000 );
            SHAKE_CAM( l_U1539._fU0,  /* F_CAM_SHAKE_WOBBLY */ sub_71818(), 0.25000000 );
        }
        if ( /* NIS_IS_SHOT_FINISHED */ sub_73900( ref l_U1539, 1 ))
        {
             /* MAL_SETPEDVISIBLE */ sub_71295(  /* PLAYER_PED_ID */ sub_1262(), 1 );
            if (( /* MAL_COMPAREPLAYERPOSAXIS */ sub_70950( "Y", "Less", 48.30000000 )) AND ( /* MAL_COMPAREPLAYERPOSAXIS */ sub_70950( "Y", "Greater", 45.00000000 )))
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1262() );
                 /* MAL_TELEPORTPED */ sub_56052(  /* PLAYER_PED_ID */ sub_1262(), 95.98611000, 43.29938000, 2.80370200, 220.00000000 );
            }
             /* NIS_RETURN_TO_GAMEPLAY_CAM */ sub_74173( 0, 0, 0, 0, 0, 0 );
             /* NIS_POST_SETUP */ sub_61451( 1, 1 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1300(), 0, 0 );
             /* P_CREATE_AND_START_TIMER */ sub_66549( ref l_U1570, 1500 );
             /* P_CREATE_AND_START_TIMER */ sub_66549( ref l_U1597, 1500 );
            l_U125 = 12;
             /* WRITESCRIPTLOG */ sub_734( "GA", "eCheckpointState = CP_PRESS_ROOM_FIGHT", 0 );
        }
        break;
        case 12:
        if (l_U126)
        {
             /* WRITESCRIPTLOG */ sub_734( "[SA]", "Entering state STATE_PRESS_ROOM_FIGHT", "[STATE]" );
             /* P_ENABLE_PLAYER_TO_FIGHT */ sub_74479();
             /* P_PASSOS_HEADTRACK_PRESSROOM_CS */ sub_74576();
             /* P_START_SP_CHALLENGES */ sub_74693();
             /* P_CREATE_AND_START_TIMER */ sub_66549( ref l_U1909, 10000 );
        }
        if (IS_LAST_MAN_STANDING_ACTIVE())
        {
            if (l_U1352 == 0)
            {
                 /* WRITESCRIPTLOG */ sub_734( "NS", "Player is in LMS, make Passos fire blanks", 0 );
                if (NOT (IS_PED_DEAD( g_U4392 )))
                {
                    SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( g_U4392, 0, 0 ), 100 );
                }
                l_U1352 = 1;
            }
        }
        else if (l_U1352 == 1)
        {
             /* WRITESCRIPTLOG */ sub_734( "NS", "Player is not in LMS, make Passos not fire blanks", 0 );
            if (NOT (IS_PED_DEAD( g_U4392 )))
            {
                SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( g_U4392, 0, 0 ), 0 );
            }
            l_U1352 = 0;
        }
        if ( /* HASTIMERBEENACTIVATED */ sub_2315( ref l_U1909 ))
        {
            if ( /* MAL_HASPLAYERFIRED */ sub_75126( 1 ))
            {
                 /* RESETTIMER */ sub_3308( ref l_U1909 );
                 /* STARTTIMER */ sub_2599( ref l_U1909 );
            }
            else if (NOT (IS_ANY_SPEECH_PLAYING( g_U4392 )))
            {
                if ((l_U1918 < 2) AND ( /* ISTIMERDONE */ sub_2732( ref l_U1909 )))
                {
                     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_66642( ref l_U1899 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 1, g_U4392, "PASSOS", ref l_U1899, 2, 0 );
                     /* PLAY_SINGLE_SPEECH */ sub_56929( "SSTD_MRNH", ref l_U1899, 7, 1 );
                     /* RESETTIMER */ sub_3308( ref l_U1909 );
                     /* P_CREATE_AND_START_TIMER */ sub_66549( ref l_U1909, 12000 );
                    l_U1918++;
                }
            }
        }
        if (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_67045( l_U1921 )))
        {
            if ((IS_LAST_MAN_STANDING_ACTIVE()) AND (NOT l_U1920))
            {
                l_U1920 = 1;
            }
            else if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (l_U1920))
            {
                l_U1920 = 0;
                 /* MAL_WRITESCRIPTLOG */ sub_8194( "Chance to react to LMS here" );
                if (( /* F_GETRANDOMINTINRANGE */ sub_75527( 0, 3 )) == 0)
                {
                     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_66642( ref l_U1921 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 1, g_U4392, "PASSOS", ref l_U1921, 2, 0 );
                     /* PLAY_SINGLE_SPEECH */ sub_56929( "SSTD_PMPL", ref l_U1921, 7, 1 );
                }
            }
            else if ( /* MAL_ISACTINTCOMPLETED */ sub_75679( ref g_U4392, 54, 1 ))
            {
                 /* MAL_WRITESCRIPTLOG */ sub_8194( "Chance to speak while shooting" );
                if (( /* F_GETRANDOMINTINRANGE */ sub_75527( 0, l_U1931 )) > 3)
                {
                     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_66642( ref l_U1921 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 1, g_U4392, "PASSOS", ref l_U1921, 2, 0 );
                     /* PLAY_SINGLE_SPEECH */ sub_56929( "SSTD_PSAE", ref l_U1921, 7, 1 );
                    l_U1931 = 0;
                }
                else
                {
                    l_U1931++;
                }
            };;;
        }
        if ( /* ISTIMERDONE */ sub_2732( ref l_U1570 ))
        {
             /* MAL_ES_UNBLOCKANDCOMBATPLAYER */ sub_76051( ref l_U778[0], 0 );
             /* MAL_ESA_CLEARHIDEINCOVER */ sub_76495( ref l_U778, 1, -1 );
             /* MAL_ESA_BLOCK */ sub_1886( ref l_U778, 0, 1, -1 );
        }
        if ( /* ISTIMERDONE */ sub_2732( ref l_U1597 ))
        {
             /* MAL_ESA_BLANKSCHANCE */ sub_49787( ref l_U778, 0, 0, -1 );
        }
        if ( /* F_ISPLAYERINTRIGGERBOX */ sub_70345( l_U586 ))
        {
            if ((IS_PED_DEAD( l_U1606 )) || (l_U1606 == nil))
            {
                l_U1606 =  /* MAL_ESA_GETFIRSTLIVINGPED */ sub_76825( ref l_U778 );
                RESET_PED_TETHERING( l_U1606 );
                 /* MAL_GIVEPEDHARDTETHER */ sub_76964( ref l_U1606, l_U608 );
            }
        }
        else if (l_U1606 != nil)
        {
            RESET_PED_TETHERING( l_U1606 );
             /* MAL_GIVEPEDHARDTETHER */ sub_76964( ref l_U1606, l_U607 );
            l_U1606 = nil;
        }
        if ((NOT l_U740._fU68) AND (l_U192._fU64))
        {
            if (NOT (IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U724, ref l_U740._fU0 )))
            {
                l_U740._fU68 = 1;
                 /* MAL_WRITESCRIPTLOG */ sub_8194( "UNFREEZING CHAIR" );
                FREEZE_OBJECT_POSITION( l_U733, 0 );
            }
        }
        if ((NOT l_U690) AND (IS_PED_DEAD( l_U724 )))
        {
             /* WRITESCRIPTLOG */ sub_734( "SA", "Interrogation CS died!", 0 );
            l_U690 = 1;
             /* P_UNFREEZE_INTERROGATION_CHAIR */ sub_68740();
        }
        if ( /* F_ISPEDINTRIGGERBOX */ sub_66913(  /* PLAYER_PED_ID */ sub_1262(), l_U961 ))
        {
             /* P_PRESS_ROOM_CS_SHOOTS_PASSOS */ sub_77271();
            l_U125 = 13;
             /* WRITESCRIPTLOG */ sub_734( "GA", "eCheckpointState = CP_NIS_ABANDON_PASSOS_IN_PRESS_ROOM_FAIL", 0 );
            l_U126 = 1;
            return;
        }
        if (( /* F_ISPEDINTRIGGERREGION */ sub_78130( ref l_U1672, l_U1607, 0 )) || ((l_U1607 == nil) || ((l_U1607 != nil) AND (IS_PED_DEAD( l_U1607 )))))
        {
            if (( /* MAL_GETACTINTSTATUS */ sub_75718( g_U4392, 56 )) != 3)
            {
                if (( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_78342( ref l_U778 )) > 1)
                {
                     /* MAL_WRITESCRIPTLOG */ sub_8194( "LOOKING FOR A TARGET FOR PASSOS" );
                }
                l_U1607 =  /* F_GET_PASSOS_TARGET */ sub_78493();
                if (l_U1607 != nil)
                {
                    if (NOT (IS_PED_DEAD( g_U4392 )))
                    {
                         /* MAL_WRITESCRIPTLOG */ sub_8194( "GIVING PASSOS A NEW TARGET" );
                        if (l_U1813)
                        {
                            l_U1813 = 0;
                             /* MAL_SETACTINT */ sub_78959( g_U4392, 56, 1000 );
                        }
                         /* MAL_SETLOCKEDANDREGISTEREDONPED */ sub_79036( ref g_U4392, l_U1607 );
                        TASK_SHOOT_AT_PED( g_U4392, l_U1607, -1, -256437761, 1, 0, 0 );
                    }
                }
                else if (NOT l_U1813)
                {
                     /* MAL_WRITESCRIPTLOG */ sub_8194( "NO VALID TARGETS FOR PASSOS" );
                     /* MAL_STANDSTILL */ sub_77381( ref g_U4392 );
                     /* MAL_SETACTINT */ sub_78959( g_U4392, 55, 5000 );
                    l_U1813 = 1;
                }
            }
        }
        if (( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_78342( ref l_U778 )) < 2)
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( g_U4392, 0, 0 ) )) AND (NOT (IS_PED_DEAD( g_U4392 ))))
            {
                SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( g_U4392, 0, 0 ), 100 );
            }
        }
        if (( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_78342( ref l_U778 )) < 1)
        {
             /* P_PASSOS_MOVES_TO_PRESS_ROOM_EXIT */ sub_79310();
             /* P_CREATE_AND_START_TIMER */ sub_66549( ref l_U1284, 2500 );
            AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1_2", "", 0, 6000, 10000, -1082130432, 0 );
            AUDIO_MUSIC_REQUEST_ONESHOT( "STADIUM_ONESHOT_15", 0 );
             /* P_STOP_SP_CHALLENGES */ sub_7962();
             /* MAL_FINISHACTINT */ sub_75806( ref g_U4392, 47 );
             /* MAL_FINISHACTINT */ sub_75806( ref g_U4392, 48 );
             /* MAL_FINISHACTINT */ sub_75806( ref g_U4392, 49 );
             /* MAL_FINISHACTINT */ sub_75806( ref g_U4392, 55 );
            l_U125 = 14;
             /* WRITESCRIPTLOG */ sub_734( "GA", "eCheckpointState = CP_HALLWAY", 0 );
        }
        break;
        case 13: break;
        case 14:
         /* P_HANDLE_PASSOS_INTERRUPTIONS */ sub_79643( g_U4392, ref l_U1814, ref l_U1816, ref l_U1815, ref l_U1826, ref l_U1817 );
         /* P_PASSOS_HEADTRACK_PRESSROOM_PLAYER */ sub_81337();
        if (l_U1302 == 1)
        {
            if (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_81456()))
            {
                 /* P_HANDLE_AMBIENT_SPEECH */ sub_81556();
            }
        }
        if (( /* ISTIMERDONE */ sub_2732( ref l_U1284 )) AND (NOT (IS_ANY_SPEECH_PLAYING( g_U4392 ))))
        {
             /* WRITESCRIPTLOG */ sub_734( "MF", "Playing Spech: SSTD_KTFA", 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 1,  /* PLAYER_PED_ID */ sub_1262(), "MAX", ref uVar13, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 0, g_U4392, "PASSOS", ref uVar13, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_56929( "SSTD_KTFA", ref uVar13, 8, 1 );
            l_U1302 = 1;
        }
        if (( /* MAL_COMPAREPLAYERPOSAXIS */ sub_70950( "Y", "Greater", 21.50000000 )) AND (( /* ISTIMERDONE */ sub_2732( ref l_U1275 )) AND (NOT (IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1262() )))))
        {
            if ((NOT (IS_PED_DEAD( g_U4392 ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() ))))
            {
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_66642( ref l_U1146 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 0,  /* PLAYER_PED_ID */ sub_1262(), "MAX", ref l_U1146, 2, 0 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 1, g_U4392, "PASSOS", ref l_U1146, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_56929( "SSTD_PRPF", ref l_U1146, 8, 1 );
            }
        }
        if ((NOT l_U690) AND (IS_PED_DEAD( l_U724 )))
        {
             /* WRITESCRIPTLOG */ sub_734( "SA", "Interrogation CS died!", 0 );
            l_U690 = 1;
             /* P_UNFREEZE_INTERROGATION_CHAIR */ sub_68740();
        }
        if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_66837( ref l_U150, 0 )) == 1)
        {
             /* P_PLAY_STAIRWELL_GUNFIRE_SOUNDS */ sub_82242();
        }
        if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_66837( ref l_U1108, 0 )) == 1)
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
             /* P_DIRTY_HALLWAY_CS */ sub_82416();
             /* P_CREATE_AND_START_TIMER */ sub_66549( ref l_U1530, 4000 );
            BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
            l_U1302 = 0;
        }
        if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_83274( ref l_U544, l_U1129, 0 ))
        {
            AUDIO_MUSIC_PLAY_ONESHOT();
             /* WRITESCRIPTLOG */ sub_734( "MF", "Playing Spech: SSTD_STFB", 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 1,  /* PLAYER_PED_ID */ sub_1262(), "MAX", ref uVar23, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 0, g_U4392, "PASSOS", ref uVar23, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_56929( "SSTD_YATE", ref uVar23, 8, 1 );
        }
        if (( /* MAL_COMPAREPLAYERPOSAXIS */ sub_70950( "Y", "Less", -2.75000000 )) AND ((( /* GET_DISTANCE_BETWEEN_PEDS */ sub_78648(  /* PLAYER_PED_ID */ sub_1262(), l_U1129, 0 )) > 4) AND ((NOT (IS_PLAYER_DOING_MELEE_GRAPPLE(  /* PLAYER_ID */ sub_1300() ))) AND ((NOT (IS_PED_DEAD( g_U4392 ))) AND ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND (NOT (IS_PED_DEAD( l_U1129 ))))))))
        {
            if ( /* ISTIMERDONE */ sub_2732( ref l_U1530 ))
            {
                 /* P_PASSOS_SHOOTS_DIRTY_CS */ sub_83628();
                l_U125 = 15;
                 /* WRITESCRIPTLOG */ sub_734( "GA", "eCheckpointState = CP_NIS_PASSOS_SHOOTS_DIRTY_CS", 0 );
                l_U126 = 1;
                return;
            }
        }
        if ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND ((l_U1108._fU64) AND (IS_PED_DEAD( l_U1129 ))))
        {
            if (NOT l_U1350)
            {
                 /* NIS_PRE_SETUP */ sub_60527( 1, 0, 0, 1 );
                 /* P_PASSOS_MOVE_DOWN_HALLWAY */ sub_84750();
                l_U125 = 16;
                 /* WRITESCRIPTLOG */ sub_734( "GA", "eCheckpointState = CP_NIS_PASSOS_MOVE_DOWN_HALLWAY", 0 );
                l_U126 = 1;
                return;
            }
        }
        if ((NOT (IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1262() ))) AND (NOT l_U1195))
        {
            if (( /* MAL_COMPAREPLAYERPOSAXIS */ sub_70950( "Y", "Greater", 21.50000000 )) AND ( /* MAL_ISACTINTCOMPLETED */ sub_75679( ref g_U4392, 37, 1 )))
            {
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_66642( ref l_U1166 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 0,  /* PLAYER_PED_ID */ sub_1262(), "MAX", ref l_U1166, 2, 0 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 1, g_U4392, "PASSOS", ref l_U1166, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_56929( "SSTD_PRPJ", ref l_U1166, 8, 1 );
                 /* P_CREATE_AND_START_TIMER */ sub_66549( ref l_U1186, 15000 );
                l_U1195 = 1;
            }
        }
        if ((NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_81456())) AND (l_U1195))
        {
            if ((IS_PLAYER_SHOOTDODGING()) AND (NOT l_U1919))
            {
                l_U1919 = 1;
            }
            else if ((NOT IS_PLAYER_SHOOTDODGING()) AND (l_U1919))
            {
                l_U1919 = 0;
                if (( /* F_GETRANDOMINTINRANGE */ sub_75527( 0, 2 )) == 0)
                {
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 1, g_U4392, "PASSOS", ref uVar33, 2, 0 );
                     /* PLAY_SINGLE_SPEECH */ sub_56929( "SSTD_SDNC", ref uVar33, 7, 1 );
                     /* MAL_WRITESCRIPTLOG */ sub_8194( "PLAYING SSTD_SDNC" );
                }
            }
            else if ((NOT (IS_PED_IN_CROSSHAIR_CYLINDER( g_U4392, 3, 10000, 0, -1082130432 ))) AND ((NOT (IS_BULLET_TIME_ACTIVE( 1 ))) AND ((( /* F_GETRANDOMINTINRANGE */ sub_75527( 0, 2 )) == 0) AND ( /* MAL_HASPLAYERFIRED */ sub_75126( 1 )))))
            {
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 1, g_U4392, "PASSOS", ref uVar43, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_56929( "SSTD_PSOC", ref uVar43, 7, 1 );
                 /* MAL_WRITESCRIPTLOG */ sub_8194( "PLAYING SSTD_PSOC" );
            };;;
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_66837( ref l_U961, 0 ))
        {
             /* RESETTIMER */ sub_3308( ref l_U1186 );
            l_U1195 = 0;
        }
        if (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_81456()))
        {
            if ( /* ISTIMERDONE */ sub_2732( ref l_U1186 ))
            {
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_66642( ref l_U1166 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 0,  /* PLAYER_PED_ID */ sub_1262(), "MAX", ref l_U1166, 2, 0 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 1, g_U4392, "PASSOS", ref l_U1166, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_56929( "SSTD_PRPJ", ref l_U1166, 8, 1 );
                 /* P_CREATE_AND_START_TIMER */ sub_66549( ref l_U1186, 15000 );
            }
        }
        if (l_U1302 == 1)
        {
            if (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_81456()))
            {
                 /* P_HANDLE_AMBIENT_SPEECH */ sub_81556();
            }
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_66837( ref l_U502, 0 ))
        {
             /* MAL_SETACTINT */ sub_78959( g_U4392, 49, 1000 );
            l_U1195 = 0;
        }
        if ( /* MAL_ISACTINTCOMPLETED */ sub_75679( ref g_U4392, 53, 1 ))
        {
             /* TERMINATEISEQ */ sub_4462( -1324066065, 0 );
             /* P_STREAMREQ_ISEQ_REMOVE */ sub_4772( -1324066065, ref g_U1263 );
             /* MAL_TELEPORTPED */ sub_56052( g_U4392, 115.22000000, -22.06759000, 4.60000000, l_U1206 );
             /* MAL_REGISTERPEDWITHISEQ */ sub_82842( g_U4392, 1496659887, "Passos" );
            ISEQ_START( 1496659887 );
             /* MAL_TELEPORTPED */ sub_56052( g_U4392, 115.22000000, -22.06759000, 4.60000000, l_U1206 );
        }
         /* P_HANDLE_RANDOM_IMAGE_FX */ sub_87665();
        if ( /* MAL_ISACTINTCOMPLETED */ sub_75679( ref g_U4392, 46, 1 ))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_66642( ref l_U1156 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 0,  /* PLAYER_PED_ID */ sub_1262(), "MAX", ref l_U1156, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 1, g_U4392, "PASSOS", ref l_U1156, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_56929( "SSTD_PRPK", ref l_U1156, 8, 1 );
        }
        if ( /* MAL_ISACTINTCOMPLETED */ sub_75679( ref g_U4392, 45, 1 ))
        {
             /* MAL_WRITESCRIPTLOG */ sub_8194( "PLAY PASSOS HALLWAY DIALOGUE" );
             /* P_PLAY_PASSOS_HALLWAY_DIALOGUE */ sub_88049();
             /* MAL_SETPRIMARYLOOKAT */ sub_88192( g_U4392,  /* PLAYER_PED_ID */ sub_1262() );
             /* P_CREATE_AND_START_TIMER */ sub_66549( ref l_U1196, GET_RANDOM_INT_IN_RANGE( 5000, 10000 ) );
            l_U1195 = 1;
        }
        if ( /* ISTIMERDONE */ sub_2732( ref l_U1196 ))
        {
             /* MAL_WRITESCRIPTLOG */ sub_8194( "IsTimerDone(tPassosHallwayIdle)" );
            if (l_U1205)
            {
                 /* MAL_SETACTINT */ sub_78959( g_U4392, 50, 1000 );
                 /* P_PLAY_PASSOS_HALLWAY_DIALOGUE */ sub_88049();
            }
            else
            {
                 /* MAL_SETACTINT */ sub_78959( g_U4392, 48, 1000 );
            }
            l_U1205 = NOT l_U1205;
             /* P_CREATE_AND_START_TIMER */ sub_66549( ref l_U1196, GET_RANDOM_INT_IN_RANGE( 5000, 10000 ) );
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_66837( ref l_U171, 0 ))
        {
            l_U125 = 18;
             /* WRITESCRIPTLOG */ sub_734( "GA", "eCheckpointState = CP_STAIRWELL", 0 );
        }
        break;
        case 15:
        if (( /* MAL_GETACTINTSTATUS */ sub_75718( g_U4392, 57 )) == 1)
        {
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 1, g_U4392, "PASSOS", ref uVar53, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_56929( "SSTD_SEMH", ref uVar53, 7, 1 );
        }
        if (( /* MAL_ISACTINTCOMPLETED */ sub_75679( ref g_U4392, 58, 1 )) || ( /* MAL_ISACTINTCOMPLETED */ sub_75679( ref g_U4392, 57, 1 )))
        {
            SET_PED_SHOOTS_AT_COORD( g_U4392, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1129, 65488, 0, 0, 0.50000000 ) );
        }
        if ( /* ISTIMERDONE */ sub_2732( ref l_U1238 ))
        {
             /* NIS_PLAY_STATIC_CAMERA */ sub_71693( ref l_U1207 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( -4.54356400, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( -6.25519200, 1065353216, 0 );
            CAMERA_ANIMATED_STOP( 0, 0 );
            POINT_CAM_AT_PED( l_U1207._fU0, l_U1129, 0.00000000, 0.00000000, 0.00000000, 1 );
             /* P_CREATE_AND_START_TIMER */ sub_66549( ref l_U1247, 10 );
             /* P_CREATE_AND_START_TIMER */ sub_66549( ref l_U1256, 500 );
             /* P_CREATE_AND_START_TIMER */ sub_66549( ref l_U1265, 600 );
            if (NOT (IS_PED_DEAD( l_U1129 )))
            {
                SET_PED_INVINCIBLE( l_U1129, 0 );
            }
        }
        if (l_U1207._fU32)
        {
            if ( /* ISTIMERDONE */ sub_2732( ref l_U1247 ))
            {
                uVar63 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_CAM_ROT( l_U1207._fU0 )};
                STOP_CAM_POINTING( l_U1207._fU0 );
                SET_CAM_ROT( l_U1207._fU0, uVar63 );
                SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U4392, 13502, 0, 0, 0.10000000 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1129, 65488, 0, 0, 0 ), 100, 0, 68019059, 0 );
            }
            if ( /* ISTIMERDONE */ sub_2732( ref l_U1256 ))
            {
                SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U4392, 13502, 0, 0, 0.10000000 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1129, 65488, 0, 0, 0 ), 100, 1, 68019059, 0 );
            }
            if ( /* ISTIMERDONE */ sub_2732( ref l_U1265 ))
            {
                if (NOT (IS_PED_DEAD( l_U1129 )))
                {
                     /* P_KILL_PED */ sub_69422( l_U1129 );
                }
            }
        }
        if ( /* NIS_IS_SHOT_FINISHED */ sub_73900( ref l_U1207, 1 ))
        {
            if (NOT (IS_PED_DEAD( g_U4392 )))
            {
                SET_PED_INVINCIBLE( g_U4392, 0 );
            }
             /* P_PASSOS_MOVE_DOWN_HALLWAY */ sub_84750();
            l_U125 = 16;
             /* WRITESCRIPTLOG */ sub_734( "GA", "eCheckpointState = CP_NIS_PASSOS_MOVE_DOWN_HALLWAY", 0 );
        }
        break;
        case 16:
        if ((NOT l_U1869) AND (CAMERA_ANIMATED_CURRENT_TIME() >= 6887))
        {
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( -4.54356400, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( -6.25519200, 1065353216, 0 );
             /* WRITESCRIPTLOG */ sub_734( "kja", "CP_NIS_PASSOS_MOVE_DOWN_HALLWAY - DID THE CAMERA FLY AWAY AT THIS POINT?", 0 );
            CAMERA_ANIMATED_STOP( 1100, 1 );
             /* P_CREATE_AND_START_TIMER */ sub_66549( ref l_U1870, 1700 );
            l_U1869 = 1;
        }
        if ( /* ISTIMERDONE */ sub_2732( ref l_U1870 ))
        {
             /* MAL_PEDPLAYERACTIONTREENODE */ sub_70707( g_U4392, "/Global/S_STAD_PAS_HAL/SEQ_START/PASSOS_VIG_25_26/EXIT_HALLWAY_IDLE" );
             /* TELEPORTPED */ sub_54974( g_U4392, 107.14460000, -17.06880000, 2.80250000, 270.00000000 );
            l_U502._fU64 = 0;
             /* NIS_POST_SETUP */ sub_61451( 1, 1 );
            l_U1302 = 1;
            ISEQ_UNREGISTER_ENTITY( 1743875163, "s_stad_inter_cs" );
             /* CLEANPED */ sub_7216( l_U724 );
             /* MAL_ESA_CLEAN */ sub_7592( ref l_U778 );
             /* CLEANOBJECT */ sub_7316( l_U733 );
             /* P_STREAMREQ_ISEQ_REMOVE */ sub_4772( 1743875163, ref g_U1263 );
             /* P_STREAMREQ_ISEQ_REMOVE */ sub_4772( 1708899639, ref g_U1263 );
             /* P_STREAMREQ_ISEQ_REMOVE */ sub_4772( 1269878088, ref g_U1263 );
             /* P_STREAMREQ_ISEQ_REMOVE */ sub_4772( -1324066065, ref g_U1263 );
             /* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ sub_89671( ref l_U113, ref g_U1069 );
             /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "LEVEL_S_STAD_CP_02", ref g_U1354 );
             /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "LEVEL_S_STAD_CP_03", ref g_U1354 );
             /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "PAS_INT", ref g_U1354 );
             /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "DAM_DEAD", ref g_U1354 );
            l_U125 = 14;
             /* WRITESCRIPTLOG */ sub_734( "GA", "eCheckpointState = CP_HALLWAY", 0 );
        }
        break;
        case 17:
        if (l_U126)
        {
             /* P_PLAY_STAIRWELL_GUNFIRE_SOUNDS */ sub_82242();
             /* CLEANPED */ sub_7216( g_U4392 );
             /* P_CREATEPEDSTRUCT */ sub_43451( ref g_U4393, 115.22000000, -22.06759000, 4.60000000, l_U1206, g_U2376, 26, 6, 0, 0, 0 );
            g_U4392 =  /* MAL_CREATEPED */ sub_46021( ref g_U4392, ref g_U4393, 1, 0, 0 );
             /* MAL_GIVEPEDPERSISTANTVARIATION */ sub_55885( ref g_U4392, "Pass_Stad_Hat" );
            if ((IS_PED_DEAD( g_U4392 )) == 0)
            {
                SET_ROOM_FOR_PED_BY_NAME( g_U4392, "Room_Staircase_02" );
                SET_PED_SWEAT( g_U4392, 0.00000000, 0.00000000 );
                SET_PED_CAN_TRIGGER_BULLET_CAM( g_U4392, 1 );
                SET_BULLET_CAM_PREF( g_U4392, "ALL_F_06_FAILSAFE", "ALL_F_06_FAILSAFE", "ALL_F_06_FAILSAFE", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
                SET_PED_VALIDATE_BULLET_CAM_HIT( g_U4392, 0 );
                GIVE_WEAPON_TO_PED_HAND( g_U4392, 68019059, 25000, 0 );
                SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( g_U4392, 0 );
                SET_PED_AS_ONE_SHOT_KILL( g_U4392, 1 );
                SET_PED_GORE_AS_ALLY( g_U4392 );
                TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U4392, 1 );
                SET_PED_CAN_INITIATE_BULLET_CAM( g_U4392, 1 );
                SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U4392, 1 );
                SET_PED_CAN_INTERACT_WITH_DOORS( g_U4392, 0 );
                SET_PED_CAN_PUSH_PLAYER( g_U4392, 1 );
                SET_PED_RESIST_TO_OBJECT_COLLISION( g_U4392, 1 );
                "[doubled result, dropped if not asigned]";
                "[doubled result, dropped if not asigned]";
                SET_CAN_AI_KICK_THROUGH_CORPSES( g_U4392, 1 );
                "[doubled result, dropped if not asigned]";
                "[doubled result, dropped if not asigned]";
            }
            if (NOT (IS_PED_DEAD( g_U4392 )))
            {
                 /* MAL_TELEPORTPED */ sub_56052( g_U4392, 115.22000000, -22.06759000, 4.60000000, l_U1206 );
                 /* MAL_REGISTERPEDWITHISEQ */ sub_82842( g_U4392, 1496659887, "Passos" );
                ISEQ_START( 1496659887 );
                 /* MAL_PEDPLAYERACTIONTREENODE */ sub_70707( g_U4392, "/Global/S_STAD_PAS_STAIRS/SEQ_START/TO_STAIRWELL_3/STAIRWELL_2_TO_3" );
                 /* MAL_TELEPORTPED */ sub_56052( g_U4392, 115.22000000, -22.06759000, 4.60000000, l_U1206 );
            }
        }
        if (ISEQ_QUERY_ENTITY_STATE( 1496659887, "Passos", 3 ))
        {
             /* TELEPORTPED */ sub_54974(  /* PLAYER_PED_ID */ sub_1262(), g_U2138[4], g_U2256[4] );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2296[4], 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2336[4], 1065353216, 0 );
            SET_PLAYER_GLOBAL_COMBAT_TIMER_STATE( 0 );
            if ((g_U855 != 4) || (NOT l_U77._fU0))
            {
                g_U855 = 4;
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_61906( ref l_U77, g_U855,  /* PLAYER_PED_ID */ sub_1262(), g_U2138[4], g_U2256[4], g_U2296[4], g_U2336[4], 0 );
            }
             /* P_START_CHECKPOINT_THREAD */ sub_91531( ref g_U888[5] );
            l_U125 = 18;
             /* WRITESCRIPTLOG */ sub_734( "GA", "eCheckpointState = CP_STAIRWELL", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_734( "GA", "Waiting for S_STAD_PAS_STAIRS to start.", 0 );
        }
        break;
        case 18:
        if (l_U126)
        {
             /* WRITESCRIPTLOG */ sub_734( "[SA]", "Entering state STATE_STAIRWELL", "[STATE]" );
             /* MAL_TELEPORTPED */ sub_56052( g_U4392, 115.22000000, -22.06759000, 4.60000000, l_U1206 );
             /* MAL_PEDPLAYERACTIONTREENODE */ sub_70707( g_U4392, "/Global/S_STAD_PAS_STAIRS/SEQ_START/TO_STAIRWELL_3/STAIRWELL_2_TO_3" );
             /* CREATETIMER */ sub_2449( ref l_U630, 1500, 1, 0 );
             /* STARTTIMER */ sub_2599( ref l_U630 );
             /* DISABLETIMER */ sub_91902( ref l_U1196 );
            if (NOT (IS_PED_DEAD( g_U4392 )))
            {
                RESET_PED_TETHERING( g_U4392 );
            }
            l_U1519 = 1;
             /* CREATETIMER */ sub_2449( ref l_U1520, 1000, 1, 0 );
             /* STARTTIMER */ sub_2599( ref l_U1520 );
            l_U1302 = 1;
            if (NOT ( /* F_IMAGEFX_FADE_IN */ sub_56396()))
            {
                DO_SCREEN_FADE_IN( 0 );
            }
             /* NIS_POST_SETUP */ sub_61451( 0, 1 );
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_66837( ref l_U982, 0 ))
        {
             /* CLEANPED */ sub_7216( l_U1129 );
             /* P_CLOSEDOOR */ sub_18448( ref g_U3150, 0 );
             /* P_CLOSEDOOR */ sub_18448( ref g_U3157, 0 );
        }
        if ( /* MAL_ISACTINTCOMPLETED */ sub_75679( ref g_U4392, 56, 1 ))
        {
            l_U1195 = 1;
        }
        if ((NOT (IS_ANY_SPEECH_PLAYING( g_U4392 ))) AND (l_U1195))
        {
            if ((IS_PLAYER_SHOOTDODGING()) AND (NOT l_U1919))
            {
                l_U1919 = 1;
            }
            else if ((NOT IS_PLAYER_SHOOTDODGING()) AND (l_U1919))
            {
                l_U1919 = 0;
                if (( /* F_GETRANDOMINTINRANGE */ sub_75527( 0, 2 )) == 0)
                {
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 1, g_U4392, "PASSOS", ref uVar66, 2, 0 );
                     /* PLAY_SINGLE_SPEECH */ sub_56929( "SSTD_SDNC", ref uVar66, 7, 1 );
                     /* MAL_WRITESCRIPTLOG */ sub_8194( "PLAYING SSTD_SDNC" );
                }
            }
            else if ((NOT (IS_PED_IN_CROSSHAIR_CYLINDER( g_U4392, 1, 10000, 0, -1082130432 ))) AND ((NOT (IS_BULLET_TIME_ACTIVE( 1 ))) AND ((( /* F_GETRANDOMINTINRANGE */ sub_75527( 0, 2 )) == 0) AND ( /* MAL_HASPLAYERFIRED */ sub_75126( 1 )))))
            {
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 1, g_U4392, "PASSOS", ref uVar76, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_56929( "SSTD_PSOC", ref uVar76, 7, 1 );
                 /* MAL_WRITESCRIPTLOG */ sub_8194( "PLAYING SSTD_PSOC" );
            };;;
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_66837( ref l_U1045, 0 ))
        {
             /* P_SETDOORAFFECTEDBYBULLETS */ sub_92432( ref g_U3164, 0 );
             /* P_SETDOORAFFECTEDBYBULLETS */ sub_92432( ref g_U3171, 0 );
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_66837( ref l_U481, 0 ))
        {
            if (g_U855 != 4)
            {
                 /* P_SAVE_IN_STAIRWELL */ sub_92564();
            }
             /* P_UNLOAD_AMED_ANIM_DICTS */ sub_92975();
             /* P_START_CHECKPOINT_THREAD */ sub_91531( ref g_U888[5] );
            SET_PLAYER_GLOBAL_COMBAT_TIMER_STATE( 0 );
        }
        if (( /* F_ISPLAYERINTRIGGERBOX */ sub_70345( l_U523 )) == 1)
        {
             /* P_HANDLE_RANDOM_IMAGE_FX */ sub_87665();
        }
        if (l_U1302 == 1)
        {
            if (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_81456()))
            {
                 /* P_HANDLE_AMBIENT_SPEECH */ sub_81556();
            }
        }
        if (( /* ISTIMERDONE */ sub_2732( ref l_U630 )) == 1)
        {
             /* P_DIAL_MAX_GUNFIGHT */ sub_93660();
        }
        if ( /* CUTSYS_HANDLETRIGGERTYPEDOOR_NOHOLSTERING */ sub_93766( ref l_U609, ref l_U129, 0, 0 ))
        {
            g_U3875 = 1;
            l_U125 = 19;
             /* WRITESCRIPTLOG */ sub_734( "GA", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 19:
        if ((g_U855 == 5) || (NOT HAS_CUTSCENE_FINISHED()))
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U125 = 0;
             /* WRITESCRIPTLOG */ sub_734( "SP", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
    }
    if (l_U125 != iVar2)
    {
        l_U126 = 1;
    }
    else
    {
        l_U126 = 0;
    }
    return;
}

/* UPDATE_PASSOS_HEADTRACKING */ void sub_13718()
{
    boolean bVar2;

    if (NOT (IS_PED_DEAD( g_U4392 )))
    {
        if ((PED_GET_ACTION_INTENTION_STATUS( g_U4392, 51 )) == 3)
        {
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() ))) AND ((NOT (IS_PED_DEAD( g_U4392 ))) AND (NOT l_U775)))
            {
                l_U775 = 1;
                bVar2 = false;
                if ((l_U125 == 12) || (l_U125 == 10))
                {
                    if ((IS_PED_DEAD( l_U724 )) AND ( /* F_IS_PLAYER_BEHIND_PASSOS_DURING_INTERROGATION */ sub_13865()))
                    {
                        ;
                    }
                }
                if (bVar2)
                {
                     /* WRITESCRIPTLOG */ sub_734( "SA", "UPDATE_PASSOS_HEADTRACKING() - Passos headtracking dying CS.", 0 );
                    TASK_LOOK_AT_PED( g_U4392, l_U724, -1, 0 );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_734( "SA", "UPDATE_PASSOS_HEADTRACKING() - Activating headtracking.", 0 );
                    SET_PED_PRIMARY_LOOKAT( g_U4392,  /* PLAYER_PED_ID */ sub_1262() );
                }
            }
        }
        else if (l_U775)
        {
            if (NOT (IS_PED_DEAD( g_U4392 )))
            {
                 /* WRITESCRIPTLOG */ sub_734( "SA", "UPDATE_PASSOS_HEADTRACKING() - Deactivating headtracking.", 0 );
                l_U775 = 0;
                CLEAR_PED_PRIMARY_LOOKAT( g_U4392 );
            }
        }
    }
    return;
}

/* F_IS_PLAYER_BEHIND_PASSOS_DURING_INTERROGATION */ int sub_13865()
{
    vector vVar2;
    vector vVar5;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    float fVar15;

    vVar2 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1262() )};
    vVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U4392 )};
    uVar8 = {vVar2 - vVar5};
    uVar11 = SQRT( (uVar8._fU0 * uVar8._fU0) + (uVar8._fU4 * uVar8._fU4) );
    uVar12._fU0 = uVar8._fU0 / uVar11;
    uVar12._fU4 = uVar8._fU4 / uVar11;
    uVar12._fU8 = 0.00000000;
    fVar15 = GET_HEADING_FROM_VECTOR_2D( uVar12._fU0, uVar12._fU4 );
    if ((fVar15 < 35.00000000) || (fVar15 > 300.00000000))
    {
        return 0;
        break;
    }
    return 1;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_14672()
{
     /* WRITESCRIPTLOG */ sub_734( "SP", "P_INITIALIZE_SCRIPT_DATA", 0 );
    l_U126 = 1;
     /* SETUP_SCRIPTED_SPEECH */ sub_14763( "SSTDAUD" );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    l_U690 = 0;
    l_U777 = 0;
    l_U774 = 0;
    l_U691 = 0;
    l_U692 = 0;
    l_U1274 = 0;
    l_U1345 = 0;
    l_U1346 = 0;
    l_U1347 = 0;
    l_U1348 = 0;
    l_U1349 = 0;
    l_U1350 = 0;
    l_U1351 = 0;
    l_U1302 = 0;
    l_U1519 = 0;
     /* RESETTIMER */ sub_3308( ref l_U1520 );
    l_U1529 = 0;
    l_U1356[0]._fU4 = "CONTRAST_ZOOM_FAST";
    l_U1356[0]._fU16 = 800;
    l_U1356[1]._fU4 = "INTERLACE_CONTRAST_ZOOM_FAST";
    l_U1356[1]._fU16 = 800;
    l_U1356[2]._fU4 = "TRIPLE_INTERLACE_MOVE_RIGHT";
    l_U1356[2]._fU16 = 1500;
    l_U1356[3]._fU4 = "TRIPLE_INTERLACE_HOLD";
    l_U1356[3]._fU16 = 1808;
    l_U1356[4]._fU4 = "TRIPLE_MOVE_RIGHT_FAST";
    l_U1356[4]._fU16 = 1500;
    l_U1356[5]._fU4 = "TRIPLE_IMAGE_MASK_L_FAST";
    l_U1356[5]._fU16 = 920;
     /* CREATETIMER */ sub_2449( ref l_U1530, 2000, 1, 0 );
     /* CREATETIMER */ sub_2449( ref l_U1570, 1500, 1, 0 );
     /* CREATETIMER */ sub_2449( ref l_U1186, 15000, 1, 0 );
    l_U1195 = 0;
    l_U659 = 0;
    l_U1606 = nil;
    l_U1607 = nil;
    l_U1813 = 0;
    l_U1814 = 0;
    l_U1815 = 0;
    l_U1816 = 0;
    l_U1826 = 0;
     /* CREATETIMER */ sub_2449( ref l_U693, 1000, 1, 0 );
     /* CREATETIMER */ sub_2449( ref l_U702, 1000, 1, 0 );
    l_U1869 = 0;
     /* CREATETIMER */ sub_2449( ref l_U1870, 1100, 1, 0 );
    l_U1889 = 0;
     /* CREATETIMER */ sub_2449( ref l_U1890, 10000, 1, 0 );
    l_U1918 = 0;
    l_U1919 = 0;
    l_U1920 = 0;
    l_U1931 = 0;
    l_U1932 = 0;
    l_U1352 = 0;
    return;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_14763(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_14807();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_14807()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* P_SET_STATIC_DATA */ void sub_15546()
{
     /* WRITESCRIPTLOG */ sub_734( "SP", "P_SET_STATIC_DATA", 0 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U192, "TRIGGER_ENTERED_PRESS_ROOM", 96.27000000, 37.58000000, 2.52000000, 7.13000000, 21.62000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U213[0], "TRIGGER_PRESSROOM_CS", 101.98000000, 39.02000000, 2.52000000, 3.60000000, 10.31000000, 4.00000000, 0.00000000, 0.00000000, 22.49000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U213[1], "TRIGGER_PRESSROOM_CS_1", 101.06000000, 30.11000000, 2.52000000, 3.60000000, 14.50000000, 4.00000000, 0.00000000, 0.00000000, -0.63998900, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U213[2], "TRIGGER_PRESSROOM_CS_2", 99.74000000, 44.46000000, 2.52000000, 2.70000000, 2.90000000, 4.00000000, 0.00000000, 0.00000000, -0.63998900, 1 );
     /* P_CREATETRIGGERREGION */ sub_16045( ref l_U277, ref l_U213 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U418, "TRIGGER_GTFO", 100.24000000, 37.65000000, 2.52000000, 2.70000000, 2.90000000, 4.00000000, 0.00000000, 0.00000000, -0.63998900, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U439, "TRIGGER_GTFO2", 98.85000000, 36.47000000, 2.52000000, 1.07000000, 1.61000000, 4.00000000, 0.00000000, 0.00000000, -5.63999000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U460, "TRIGGER_PRESSROOM_EXIT", 109.51000000, 28.51000000, 2.64000000, 8.67000000, 11.79000000, 3.25000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U609, "TRIG_TOP_STAIRS", 110.46000000, -19.46000000, 9.18000000, 3.00000000, 3.04000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U129, "TRIGGER_PRACTICE_FINISHED", 108.80000000, -19.46000000, 9.18000000, 2.48000000, 3.04000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U150, "TRIGGER_GUNFIRE_SOUNDS", 109.17000000, 13.95000000, 2.76000000, 8.44000000, 16.58000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U171, "TRIGGER_GUNFIRE_DIALOGUE", 108.33000000, -19.54000000, 2.76000000, 4.00000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U961, "TRIGGER_PASSOS_ENTER_HALLWAY", 109.24000000, 20.78000000, 2.77000000, 8.44000000, 3.18000000, 3.24000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U982, "PASSOS_STAIRMOVE_01", 116.52000000, -24.71000000, 2.62000000, 12.92000000, 7.19000000, 2.36000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U1003, "PASSOS_STAIRMOVE_01B", 115.12000000, -21.56000000, 4.94000000, 12.92000000, 7.19000000, 8.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U1024, "PASSOS_STAIRMOVE_02", 112.44000000, -19.55000000, 5.38000000, 5.00000000, 3.00000000, 3.00000000, 0.00000000, 30.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U1045, "PASSOS_STAIRMOVE_03", 113.95000000, -24.09000000, 6.97000000, 5.00000000, 3.00000000, 3.00000000, 0.00000000, -30.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U1066, "PASSOS_STAIRMOVE_04", 112.44000000, -19.55000000, 8.64000000, 5.00000000, 3.00000000, 3.00000000, 0.00000000, 30.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U1087, "PASSOS_STAIRMOVE_05", 113.58000000, -21.71000000, 12.07000000, 22.35000000, 19.70000000, 2.57000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U481, "TRIGGER_STAIR_FIRST_PLATFORM", 115.37000000, -19.53000000, 4.68000000, 5.00000000, 3.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U1108, "TRIGGER_DIRTY_HALLWAY_CS", 109.24000000, 14.50000000, 2.77000000, 7.54000000, 1.62000000, 3.24000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U740, "TRIGGER_CHAIR", 98.70000000, 38.65000000, 2.76000000, 0.60000000, 0.60000000, 2.17000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U502, "TRIGGER_PASSOS_INTO_STAIRS", 108.88000000, -1.57000000, 2.77000000, 8.44000000, 3.60000000, 3.24000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U523, "TRIG_INSIDE_STAIRWELL", 111.84000000, -21.76000000, 2.33000000, 12.07000000, 7.51000000, 10.32000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U544, "TRIGGER_HALLWAYONESHOT", 111.99000000, 4.58000000, 2.75000000, 1.17000000, 2.40000000, 2.64000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U565, "TRIG_PASSOS_NO_SHOOT_ASSHOLE", 110.78000000, 4.70000000, 2.76000000, 4.00000000, 4.00000000, 2.75000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U1303, "Speech PGAR", 99.03000000, 26.60000000, 2.24000000, 9.12000000, 5.63000000, 4.21000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U1324, "Speech TAGP", 115.85000000, 4.48000000, 2.24000000, 4.83000000, 8.28000000, 4.21000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U586, "TRIG_SIDE_ROOM", 99.33000000, 27.07000000, 2.53000000, 9.43000000, 6.22000000, 5.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_18295( ref l_U607, "TETHER_MEDIA", 108.10000000, 37.44000000, 2.53000000, 14.50000000, 15.54000000, 5.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_18295( ref l_U608, "TETHER_SIDE_ROOM", 99.33000000, 27.07000000, 2.53000000, 9.43000000, 6.22000000, 5.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CLOSEDOOR */ sub_18448( ref g_U3143, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U1608[0], "TRIG_PAS_EXCLUSION_0", 100.00000000, 30.73000000, 2.61000000, 7.30000000, 7.38000000, 1.25000000, 0.00000000, 0.00000000, 45.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U1608[1], "TRIG_PAS_EXCLUSION_1", 99.25000000, 42.87000000, 2.61000000, 9.20000000, 7.38000000, 1.25000000, 0.00000000, 0.00000000, 55.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15686( ref l_U1608[2], "TRIG_PAS_EXCLUSION_2", 99.09000000, 26.97000000, 2.61000000, 10.15000000, 7.16000000, 2.64000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERREGION */ sub_16045( ref l_U1672, ref l_U1608 );
     /* P_OPENDOOR */ sub_18967( ref g_U3143, 1, 1, 0.10000000 );
    return;
}

/* P_CREATETRIGGERBOX */ void sub_15686(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATETRIGGERREGION */ void sub_16045(int iParam0, unknown uParam1)
{
    int iVar4;
    int I;

    iVar4 = (uParam1^);
    if (iVar4 > 6)
    {
         /* WRITESCRIPTLOG */ sub_734( "[SA]", "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
        SCRIPT_ASSERT( "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
    }
    for ( I = 0; I < iVar4; I++ )
    {
        iParam0->_fU0[I] = {(uParam1^)[I]};
    }
    iParam0->_fU508 = iVar4;
    iParam0->_fU548 = 0;
    iParam0->_fU552 = 0;
    iParam0->_fU556 = 0;
    iParam0->_fU560 = 0;
    return;
}

/* P_CREATETETHERBOX */ void sub_18295(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CLOSEDOOR */ void sub_18448(int iParam0, int iParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_18474( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_18558( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_18474(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_18558(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_OPENDOOR */ void sub_18967(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if (( /* F_DOESDOOREXIST */ sub_18474( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_18558( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

/* P_REQUEST_MS_PERSISTENT_ASSETS */ void sub_19270()
{
     /* WRITESCRIPTLOG */ sub_734( "GA", "P_REQUEST_MS_PERSISTENT_ASSETS start", 0 );
    if ((g_U855 != 4) AND (g_U854 != 4))
    {
         /* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ sub_19391( ref l_U113, ref g_U1069 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22330( "LEVEL_S_STAD_CP_02", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22330( "PAS_INT", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22330( "DAM_DEAD", ref g_U1354 );
         /* P_LOAD_AMED_ANIM_DICTS */ sub_24244();
    }
     /* P_STREAMREQ_ACTION_TREE_INSERT */ sub_24886( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act", ref g_U2012 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT_ARRAY */ sub_26799( ref l_U123, ref g_U1214 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22330( "LEVEL_S_STAD_CP_02a", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22330( "LEVEL_S_STAD_CP_03", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22330( "FACE_PASNYB", ref g_U1354 );
     /* WRITESCRIPTLOG */ sub_734( "GA", "P_REQUEST_MS_PERSISTENT_ASSETS end", 0 );
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ void sub_19391(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_19464( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT */ void sub_19464(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 =  /* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ sub_19531( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar4 );
            PRINTNL();
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_19789( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Inserting MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ int sub_19531(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_19789( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is loading: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_19789( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                     /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_19789( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_21320( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being removed: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_19789( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_19789( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ void sub_19789(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19850( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ int sub_19850(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID is active: {} ###", 1, 513, (uParam1^)[I] );
                if ((uParam1^)[I] == iParam0)
                {
                    DISPLAYF( "The THREADID was already requested by this thread!!!", 0 );
                    DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                    (uParam1^)[I] = nil;
                    Result = I;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The THREADID index was requested by another thread!!! {} ###", 1, 513, I );
                }
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is NOT active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

/* P_STREAMREQ_THREADID_RESET */ void sub_21320(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_INSERT */ void sub_22330(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ sub_22382( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ANIM_DICT asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22634( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ int sub_22382(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22634( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22634( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ANIM_DICT asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22634( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_21320( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22634( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ANIM_DICT asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ANIM_DICT: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
             /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22634( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ void sub_22634(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19850( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_LOAD_AMED_ANIM_DICTS */ void sub_24244()
{
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22330( "PLGE_RIFLE_CROUCH", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22330( "PLGE_PSTL_CROUCH", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22330( "AMED_RIFLE_CORE", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22330( "AMED_PSTL_CORE", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22330( "AMED_RIFLE_CORE_RELOAD", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22330( "AMED_PSTL_CORE_RELOAD", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22330( "PLGE_RIFLE_HANDSIG", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22330( "PLGE_PSTL_HANDSIG", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22330( "PLGE_PSTL_ACTIONS", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22330( "PLGE_RIFLE_ACTIONS", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22330( "AMED_RIFLE_KNEE", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22330( "AMED_PSTL_KNEE", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22330( "AMED_PSTL_COVER", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22330( "AMED_RIFLE_COVER", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22330( "AMED_RIFLE_REACT", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22330( "AMED_PSTL_REACT", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22330( "AMED_RIFLE_COVER_EXIT", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22330( "AMED_PSTL_COVER_EXIT", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22330( "AMED_PSTL_FULLBODY", ref g_U1354 );
    return;
}

/* P_STREAMREQ_ACTION_TREE_INSERT */ void sub_24886(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ACTION_TREE_IS_INDEX_AVAILABLE */ sub_24940( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ACTION_TREE asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
         /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_25198( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ACTION_TREE_IS_INDEX_AVAILABLE */ int sub_24940(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ACTION_TREE is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_25198( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ACTION_TREE is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ACTION_TREE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_25198( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_ACTION_TREE_LOADED( uParam0 ))
                {
                    DISPLAYF( "[CCB] ### The ACTION_TREE is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ACTION_TREE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_25198( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ACTION_TREE is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ACTION_TREE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_21320( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ACTION_TREE is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_25198( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_ACTION_TREE_LOADED( uParam0 ))
        {
            DISPLAYF( "[CCB] ### The ACTION_TREE is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ACTION_TREE is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ACTION_TREE: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
             /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_25198( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ACTION_TREE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ void sub_25198(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19850( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ACTION_TREE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT_ARRAY */ void sub_26799(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_26873( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT */ void sub_26873(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ sub_26927( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_27188( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ int sub_26927(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_27188( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is loading: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_27188( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The WEAPON_TYPE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_27188( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_21320( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being removed: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_27188( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            DISPLAYF( "The WEAPON_TYPE asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_27188( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ void sub_27188(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19850( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_REQUEST_MS_NONPERSISTENT_ASSETS */ void sub_28962()
{
     /* WRITESCRIPTLOG */ sub_734( "GA", "P_REQUEST_MS_NONPERSISTENT_ASSETS start", 0 );
    if ((g_U855 != 4) AND (g_U854 != 4))
    {
         /* P_STREAMREQ_ISEQ_INSERT */ sub_29090( 1743875163, ref g_U1263 );
         /* P_STREAMREQ_ISEQ_INSERT */ sub_29090( 1708899639, ref g_U1263 );
         /* P_STREAMREQ_ISEQ_INSERT */ sub_29090( 1269878088, ref g_U1263 );
         /* P_STREAMREQ_ISEQ_INSERT */ sub_29090( -1324066065, ref g_U1263 );
         /* P_STREAMREQ_ISEQ_INSERT */ sub_29090( 1090240116, ref g_U1263 );
         /* P_STREAMREQ_SCRIPT_STREAM_INSERT */ sub_31971( "S_STAD_MID_02B_BLENDOUT", ref g_U2034 );
    }
     /* P_STREAMREQ_ISEQ_INSERT */ sub_29090( 1496659887, ref g_U1263 );
    if ((l_U127) AND (g_U854 < 3))
    {
         /* LOADSEAMLESSCUTSCENE */ sub_34157( "MID_02B_STADIUM", 0 );
    }
     /* WRITESCRIPTLOG */ sub_734( "GA", "P_REQUEST_MS_NONPERSISTENT_ASSETS end", 0 );
    return;
}

/* P_STREAMREQ_ISEQ_INSERT */ void sub_29090(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 =  /* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ sub_29151( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar12 );
            PRINTNL();
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar4 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
             /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_29401( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

/* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ int sub_29151(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_29401( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is loading: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_29401( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                        DISPLAYF( "The ISEQ asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_29401( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loading: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_29401( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### Re-requesting ISEQ: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_21320( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_21320( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being removed: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_29401( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar5 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_29401( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ISEQ_THREADID_SET_ID */ void sub_29401(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19850( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_SCRIPT_STREAM_INSERT */ void sub_31971(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_SCRIPT_STREAM_IS_INDEX_AVAILABLE */ sub_32027( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing SCRIPT_STREAM asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_32291( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_INDEX_AVAILABLE */ int sub_32027(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_32291( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is already loading!!!", 0 );
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_32291( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (Result <= 2)
                {
                    if ((GET_SCRIPT_STREAM_STATE( uParam0, Result )) == 2)
                    {
                        DISPLAYF( "[CCB] ### The SCRIPT_STREAM is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                        DISPLAYF( "The SCRIPT_STREAM asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_32291( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### The SCRIPT_STREAM is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The SCRIPT_STREAM asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                        (uParam1^)[Result]._fU32 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_21320( ref (uParam1^)[Result]._fU36 );
                        return Result;
                    }
                }
                else
                {
                    DISPLAYF( "[CCB] ### The SCRIPT_STREAM is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The SCRIPT_STREAM asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_32291( Result, uParam1, uParam2 );
                    return -1;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_32291( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (Result <= 2)
        {
            if ((GET_SCRIPT_STREAM_STATE( uParam0, iVar6 )) == 2)
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is already loaded: {} ###", 1, 1537, uParam0 );
                DISPLAYF( "The SCRIPT_STREAM asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing SCRIPT_STREAM: {} ###", 1, 1537, uParam0 );
                StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
                (uParam1^)[iVar6]._fU32 = 3;
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_32291( iVar6, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar6;
            }
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The SCRIPT_STREAM - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ void sub_32291(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19850( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The SCRIPT_STREAM asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* LOADSEAMLESSCUTSCENE */ void sub_34157(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_LOADED */ int sub_34629(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be requested: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to load: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be removed: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ int sub_35026(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be requested: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to load: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be removed: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ANIM_DICT_IS_LOADED */ int sub_35428(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be requested: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to load: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be removed: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ISEQ_IS_LOADED */ int sub_35819(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be requested: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to load: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be removed: {} ###", 1, 1281, ref uVar3 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_LOADED */ int sub_36233(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ACTION_TREE_IS_LOADED */ int sub_36619(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* P_SETUP_PRACTICE_ELEVATOR */ void sub_37252(int iParam0, unknown uParam1)
{
    vector[2] vVar4;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int iVar13;

     /* WRITE_STRING */ sub_7466( "[SP]### P_SETUP_PRACTICE_ELEVATOR ###" );
    array(ref vVar4, 2);
    vVar4[0] = {91.18000000, 62.39000000, -3.39000000};
    vVar4[1] = {91.18000000, 62.39000000, 2.65000000};
    uVar11 = GET_HASH_KEY( "ElevatorRoom" );
    uVar12 = GET_INTERIOR_FROM_NAME( "int_elevator", 0 );
    SET_INTERIOR_ACTIVE( uVar12, 1, 0 );
    LOAD_SCENE_FOR_ROOM_BY_KEY( uVar12, uVar11 );
     /* P_CREATEELEVATORSTRUCTSERVICEDUEL */ sub_37499( ref g_U3706, ref vVar4, 0.00000000, 0.00000000, -90.00000000, g_U2391, g_U2392, g_U2393, 1.00000000 );
    iVar13 = 0;
    if (iParam0 == 1)
    {
        iVar13 = 1;
    }
     /* P_CREATEELEVATOR */ sub_38080( ref g_U3706, iVar13, uParam1 );
    if (iParam0 == 1)
    {
        SET_OBJECT_COORDS( g_U3706._fU232, 91.18000000, 62.39000000, 2.65000000 );
    }
    else
    {
        SET_OBJECT_COORDS( g_U3706._fU232, 91.18000000, 62.39000000, -3.39000000 );
    }
     /* P_ADDELEVATORTOINTERIOR */ sub_39249( ref g_U3706, ref g_U2540 );
     /* P_CLOSE_ELEVATOR_DOORS */ sub_39527( ref g_U3706, 1, 0 );
     /* P_CLOSE_ELEVATOR_DOORS */ sub_39527( ref g_U3706, 1, 1 );
    return;
}

/* P_CREATEELEVATORSTRUCTSERVICEDUEL */ void sub_37499(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
     /* WRITE_STRING */ sub_7466( "[SP]### P_CreateElevatorStructService ###" );
     /* P_CREATEELEVATORSTRUCTSERVICE */ sub_37608( iParam0, uParam1, uParam2, uParam5, uParam6, uParam8 );
    iParam0->_fU288 = 1;
    iParam0->_fU284 = 1;
    iParam0->_fU224 = uParam7;
    iParam0->_fU228 = uParam7;
    return;
}

/* P_CREATEELEVATORSTRUCTSERVICE */ void sub_37608(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
     /* WRITE_STRING */ sub_7466( "[SP]### P_CreateElevatorStructService ###" );
     /* P_CREATEELEVATORSTRUCT */ sub_37714( iParam0, uParam1, uParam2, uParam5, uParam6, uParam6, uParam7 );
    iParam0->_fU288 = 1;
    iParam0->_fU292 = 2.74000000;
    iParam0->_fU296 = 0.05000000;
    return;
}

/* P_CREATEELEVATORSTRUCT */ void sub_37714(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;

     /* WRITE_STRING */ sub_7466( "[SP]### P_CreateElevatorStruct ###" );
    I = 0;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        iParam0->_fU24[I] = {(uParam1^)[I]};
    }
    iParam0->_fU316 = 0;
    iParam0->_fU12 = {uParam2};
    iParam0->_fU212 = uParam5;
    iParam0->_fU216 = uParam6;
    iParam0->_fU220 = uParam7;
    iParam0->_fU284 = 0;
    iParam0->_fU288 = 0;
    iParam0->_fU292 = 0.88000000;
    iParam0->_fU296 = 0.02500000;
    iParam0->_fU300 = 0.00000000;
    iParam0->_fU304 = 0.00000000;
    iParam0->_fU208 = uParam8;
    return;
}

/* P_CREATEELEVATOR */ void sub_38080(int iParam0, unknown uParam1, unknown uParam2)
{
     /* WRITE_STRING */ sub_7466( "[SP]### P_CreateElevator ###" );
    iParam0->_fU0 = {iParam0->_fU24[uParam1]};
     /* CLEANOBJECT */ sub_7316( iParam0->_fU232 );
    iParam0->_fU232 =  /* CREATEOBJECT */ sub_38196( iParam0->_fU212, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
    if ((DOES_OBJECT_EXIST( iParam0->_fU232 )) == 1)
    {
        FREEZE_OBJECT_POSITION( iParam0->_fU232, 1 );
    }
     /* CLEANOBJECT */ sub_7316( iParam0->_fU236 );
    iParam0->_fU236 =  /* CREATEOBJECT */ sub_38196( iParam0->_fU216, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
    if ((DOES_OBJECT_EXIST( iParam0->_fU236 )) == 1)
    {
        FREEZE_OBJECT_POSITION( iParam0->_fU236, 1 );
    }
    if (iParam0->_fU288 == 0)
    {
         /* CLEANOBJECT */ sub_7316( iParam0->_fU240 );
        iParam0->_fU240 =  /* CREATEOBJECT */ sub_38196( iParam0->_fU220, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
        if ((DOES_OBJECT_EXIST( iParam0->_fU240 )) == 1)
        {
            FREEZE_OBJECT_POSITION( iParam0->_fU240, 1 );
        }
    }
    if (iParam0->_fU284 == 1)
    {
         /* CLEANOBJECT */ sub_7316( iParam0->_fU244 );
        iParam0->_fU244 =  /* CREATEOBJECT */ sub_38196( iParam0->_fU224, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
        if ((DOES_OBJECT_EXIST( iParam0->_fU244 )) == 1)
        {
            FREEZE_OBJECT_POSITION( iParam0->_fU244, 1 );
        }
        if (iParam0->_fU288 == 0)
        {
             /* CLEANOBJECT */ sub_7316( iParam0->_fU248 );
            iParam0->_fU248 =  /* CREATEOBJECT */ sub_38196( iParam0->_fU228, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
            if ((DOES_OBJECT_EXIST( iParam0->_fU248 )) == 1)
            {
                FREEZE_OBJECT_POSITION( iParam0->_fU248, 1 );
            }
        }
    }
    return;
}

/* CREATEOBJECT */ void sub_38196(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_38321( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* LOADMODEL */ void sub_38321(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_7466( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_ADDELEVATORTOINTERIOR */ void sub_39249(int iParam0, unknown uParam1)
{
     /* WRITE_STRING */ sub_7466( "[SP]### P_AddElevatorToInterior ###" );
    if ((DOES_OBJECT_EXIST( iParam0->_fU232 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU232, uParam1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU236 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU236, uParam1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU240 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU240, uParam1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU244 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU244, uParam1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU248 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU248, uParam1 );
    }
    return;
}

/* P_CLOSE_ELEVATOR_DOORS */ void sub_39527(int iParam0, int iParam1, int iParam2)
{
     /* WRITE_STRING */ sub_7466( "[SP]### P_CLOSE_ELEVATOR_DOORS ###" );
    if (iParam2 == 0)
    {
        if (iParam1 == 1)
        {
            iParam0->_fU308 = 0;
        }
        else if (iParam0->_fU288 == 1)
        {
            ;
        }
        iParam0->_fU308 = 3;;
    }
    else if (iParam1 == 1)
    {
        iParam0->_fU312 = 0;
    }
    else if (iParam0->_fU288 == 1)
    {
        ;
    }
    iParam0->_fU312 = 3;;;
    return;
}

/* P_OPEN_ELEVATOR_DOORS */ void sub_39739(int iParam0, int iParam1, int iParam2)
{
     /* WRITE_STRING */ sub_7466( "[SP]### P_OPEN_ELEVATOR_DOORS ###" );
    if (iParam2 == 0)
    {
        if (iParam1 == 1)
        {
            iParam0->_fU308 = 2;
        }
        else if (iParam0->_fU288 == 1)
        {
            ;
        }
        iParam0->_fU308 = 1;;
    }
    else if (iParam1 == 1)
    {
        iParam0->_fU312 = 2;
    }
    else if (iParam0->_fU288 == 1)
    {
        ;
    }
    iParam0->_fU312 = 1;;;
    return;
}

/* P_HANDLE_ELEVATOR */ void sub_39928(int iParam0)
{
    int I;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    float fVar8;
    float fVar9;
    float fVar10;
    vector vVar11;
    vector vVar14;

    if (iParam0->_fU316 == 2)
    {
        iParam0->_fU204 = -1;
        I = 0;
        for ( I = 0; I <= 9; I++ )
        {
            if (iParam0->_fU160[I] >= 0)
            {
                iParam0->_fU204 = iParam0->_fU160[I];
                iParam0->_fU160[I] = -1;
                uVar4 = {iParam0->_fU24[iParam0->_fU204] - iParam0->_fU0};
                uVar7 = ABSF( (uVar4._fU0 + uVar4._fU4) + uVar4._fU8 );
                fVar8 = (TIMESTEP() * iParam0->_fU208) * (uVar4._fU0 / uVar7);
                fVar9 = (TIMESTEP() * iParam0->_fU208) * (uVar4._fU4 / uVar7);
                fVar10 = (TIMESTEP() * iParam0->_fU208) * (uVar4._fU8 / uVar7);
                iParam0->_fU148 = {fVar8, fVar9, fVar10};
                iParam0->_fU316 = 1;
                I = 9;
            }
        }
        if (iParam0->_fU204 == -1)
        {
             /* WRITE_STRING */ sub_7466( "[ML] --- ELEVATOR DONE MOVING ---" );
            iParam0->_fU316 = 3;
        }
    }
    if (iParam0->_fU316 == 1)
    {
        iParam0->_fU0 = {iParam0->_fU0 + iParam0->_fU148};
        if ((((ref iParam0->_fU0->_fU8) <= iParam0->_fU24[iParam0->_fU204]._fU8) AND ((ref iParam0->_fU148->_fU8) < 0)) || ((((ref iParam0->_fU0->_fU8) >= iParam0->_fU24[iParam0->_fU204]._fU8) AND ((ref iParam0->_fU148->_fU8) > 0)) || ((((ref iParam0->_fU0->_fU4) <= iParam0->_fU24[iParam0->_fU204]._fU4) AND ((ref iParam0->_fU148->_fU4) < 0)) || ((((ref iParam0->_fU0->_fU4) >= iParam0->_fU24[iParam0->_fU204]._fU4) AND ((ref iParam0->_fU148->_fU4) > 0)) || ((((ref iParam0->_fU0->_fU0) <= iParam0->_fU24[iParam0->_fU204]._fU0) AND ((ref iParam0->_fU148->_fU0) < 0)) || (((ref iParam0->_fU0->_fU0) >= iParam0->_fU24[iParam0->_fU204]._fU0) AND ((ref iParam0->_fU148->_fU0) > 0)))))))
        {
            iParam0->_fU316 = 2;
        }
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU232 )) == 1)
    {
        SET_OBJECT_COORDS( iParam0->_fU232, iParam0->_fU0 );
    }
    if (iParam0->_fU308 == 2)
    {
        iParam0->_fU300 = iParam0->_fU292;
        iParam0->_fU308 = 2;
    }
    else if (iParam0->_fU308 == 0)
    {
        iParam0->_fU300 = 0.00000000;
        iParam0->_fU308 = 0;
    }
    if (iParam0->_fU308 == 1)
    {
        if (iParam0->_fU300 < iParam0->_fU292)
        {
            iParam0->_fU300 += iParam0->_fU296;
        }
        if (iParam0->_fU300 >= iParam0->_fU292)
        {
            iParam0->_fU300 = iParam0->_fU292;
            iParam0->_fU308 = 2;
        }
    }
    else if (iParam0->_fU308 == 3)
    {
        if (iParam0->_fU300 > 0.00000000)
        {
            iParam0->_fU300 -= iParam0->_fU296;
        }
        if (iParam0->_fU300 <= 0.00000000)
        {
            iParam0->_fU300 = 0.00000000;
            iParam0->_fU308 = 0;
        }
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU232 )) == 1)
    {
        vVar11 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU232 )};
    }
    if (iParam0->_fU288 == 0)
    {
        if ((ref iParam0->_fU12->_fU8) == 0.00000000)
        {
            vVar14 = {-iParam0->_fU300, 0.00000000, 0.00000000};
        }
        else if (((ref iParam0->_fU12->_fU8) == -270.00000000) || ((ref iParam0->_fU12->_fU8) == 90.00000000))
        {
            vVar14 = {0.00000000, -iParam0->_fU300, 0.00000000};
        }
        else if (((ref iParam0->_fU12->_fU8) == -180.00000000) || ((ref iParam0->_fU12->_fU8) == 180.00000000))
        {
            vVar14 = {iParam0->_fU300, 0.00000000, 0.00000000};
        }
        else if (((ref iParam0->_fU12->_fU8) == -90.00000000) || ((ref iParam0->_fU12->_fU8) == 270.00000000))
        {
            vVar14 = {0.00000000, iParam0->_fU300, 0.00000000};
        };;;;
    }
    else
    {
        vVar14 = {0.00000000, 0.00000000, iParam0->_fU300};
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU236 )) == 1)
    {
        FREEZE_OBJECT_POSITION( iParam0->_fU236, 0 );
        SET_OBJECT_COORDS( iParam0->_fU236, vVar11 + vVar14 );
        FREEZE_OBJECT_POSITION( iParam0->_fU236, 1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU240 )) == 1)
    {
        FREEZE_OBJECT_POSITION( iParam0->_fU240, 0 );
        SET_OBJECT_COORDS( iParam0->_fU240, vVar11 - vVar14 );
        FREEZE_OBJECT_POSITION( iParam0->_fU240, 1 );
    }
    if (iParam0->_fU284 == 1)
    {
        if (iParam0->_fU312 == 2)
        {
            iParam0->_fU304 = iParam0->_fU292;
            iParam0->_fU312 = 2;
        }
        else if (iParam0->_fU312 == 0)
        {
            iParam0->_fU304 = 0.00000000;
            iParam0->_fU312 = 0;
        }
        if (iParam0->_fU312 == 1)
        {
            if (iParam0->_fU304 < iParam0->_fU292)
            {
                iParam0->_fU304 += iParam0->_fU296;
            }
            if (iParam0->_fU304 >= iParam0->_fU292)
            {
                iParam0->_fU304 = iParam0->_fU292;
                iParam0->_fU312 = 2;
            }
        }
        else if (iParam0->_fU312 == 3)
        {
            if (iParam0->_fU304 > 0.00000000)
            {
                iParam0->_fU304 -= iParam0->_fU296;
            }
            if (iParam0->_fU304 <= 0.00000000)
            {
                iParam0->_fU304 = 0.00000000;
                iParam0->_fU312 = 0;
            }
        }
        if (iParam0->_fU288 == 0)
        {
            if ((ref iParam0->_fU12->_fU8) == 0.00000000)
            {
                vVar14 = {-iParam0->_fU304, 0.00000000, 0.00000000};
            }
            else if (((ref iParam0->_fU12->_fU8) == -270.00000000) || ((ref iParam0->_fU12->_fU8) == 90.00000000))
            {
                vVar14 = {0.00000000, -iParam0->_fU304, 0.00000000};
            }
            else if (((ref iParam0->_fU12->_fU8) == -180.00000000) || ((ref iParam0->_fU12->_fU8) == 180.00000000))
            {
                vVar14 = {iParam0->_fU304, 0.00000000, 0.00000000};
            }
            else if (((ref iParam0->_fU12->_fU8) == -90.00000000) || ((ref iParam0->_fU12->_fU8) == 270.00000000))
            {
                vVar14 = {0.00000000, iParam0->_fU304, 0.00000000};
            };;;;
        }
        else
        {
            vVar14 = {0.00000000, 0.00000000, -iParam0->_fU304};
        }
        if ((DOES_OBJECT_EXIST( iParam0->_fU244 )) == 1)
        {
            FREEZE_OBJECT_POSITION( iParam0->_fU244, 0 );
            SET_OBJECT_COORDS( iParam0->_fU244, vVar11 - vVar14 );
            FREEZE_OBJECT_POSITION( iParam0->_fU244, 1 );
        }
        if ((DOES_OBJECT_EXIST( iParam0->_fU248 )) == 1)
        {
            FREEZE_OBJECT_POSITION( iParam0->_fU248, 0 );
            SET_OBJECT_COORDS( iParam0->_fU248, vVar11 + vVar14 );
            FREEZE_OBJECT_POSITION( iParam0->_fU248, 1 );
        }
    }
    return;
}

/* HAS_SAVEFILE_LOADED */ int sub_42005(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_734( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_9025( uParam0,  /* PLAYER_PED_ID */ sub_1262() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* P_PRESSROOMCS_PRE */ void sub_42724()
{
     /* WRITESCRIPTLOG */ sub_734( "GA", "P_PressRoomCS_Pre start", 0 );
     /* STAD_ENEMYSTRUCTFILL */ sub_42853( ref l_U778[0], 107.51690000, 28.40775000, 2.80131300, 0.00000000, g_U2468, -971903675, g_U2381, 4.00000000, 20.00000000, 0, 1194438308, 0 );
     /* STAD_ENEMYSTRUCTFILL */ sub_42853( ref l_U778[1], 107.47530000, 27.21386000, 2.80131300, 0.00000000, g_U2468, 331095069, g_U2381, 7.00000000, 20.00000000, 0, 68019059, 0 );
     /* STAD_ENEMYSTRUCTFILL */ sub_42853( ref l_U778[2], 108.97530000, 27.21386000, 2.80131300, 0.00000000, g_U2468, 80093634, g_U2381, 7.00000000, 20.00000000, 0, 68019059, 0 );
     /* STAD_ENEMYSTRUCTFILL */ sub_42853( ref l_U778[3], 107.53010000, 24.50423000, 2.80131200, 0.00000000, g_U2468, -113961368, g_U2381, 4.00000000, 20.00000000, 0, 1194438308, 0 );
     /* WRITESCRIPTLOG */ sub_734( "GA", "P_PressRoomCS_Pre end", 0 );
    return;
}

/* STAD_ENEMYSTRUCTFILL */ void sub_42853(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19)
{
     /* MAL_ENEMYSTRUCTFILL */ sub_42929( uParam0, uParam1, uParam4, uParam18, 68019059, 2, g_U3928, uParam15, uParam16, uParam14, uParam19, uParam17, uParam13, uParam5 );
    return;
}

/* MAL_ENEMYSTRUCTFILL */ void sub_42929(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29)
{
    iParam0->_fU56 = {uParam1};
    iParam0->_fU68 = uParam4;
    iParam0->_fU72 = uParam5;
    iParam0->_fU76 = uParam6;
    iParam0->_fU80 = uParam7;
    iParam0->_fU84 = {uParam8};
    iParam0->_fU116 = uParam16;
    iParam0->_fU120 = uParam17;
    iParam0->_fU124 = uParam18;
    iParam0->_fU128 = uParam19;
    iParam0->_fU132 = uParam20;
    iParam0->_fU136 = uParam21;
    iParam0->_fU140 = {uParam22};
    return;
}

/* P_SETUP_EDISON */ void sub_43352()
{
     /* WRITESCRIPTLOG */ sub_734( "SP", "P_SETUP_EDISON", 0 );
     /* CLEANPED */ sub_7216( g_U4392 );
     /* P_CREATEPEDSTRUCT */ sub_43451( ref g_U4393, 95.68065000, 56.61267000, 2.83080900, 170.00000000, g_U2376, 26, 6, 0, 0, 0 );
    g_U4392 =  /* CREATEPED */ sub_43568( ref g_U4393 );
    if (((IS_PED_DEAD( g_U4392 )) == 0) AND ((DOES_PED_EXIST( g_U4392 )) == 1))
    {
         /* P_CLEAR_PED_HEADTRACKING */ sub_44320( g_U4392 );
         /* F_GIVEPEDWEAPON */ sub_11473( g_U4392, 68019059, 25000, 0, 0 );
        SET_PERSISTENT_PED_VARIATION( g_U4392, "Pass_Stad_Hat" );
        SET_ROOM_FOR_PED_BY_NAME( g_U4392, ref g_U2460 );
        SET_PED_SWEAT( g_U4392, 0.00000000, 0.00000000 );
        SET_PED_HEALTH( g_U4392, GET_PED_MAX_HEALTH( g_U4392 ), 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U4392, 1 );
        SET_PED_COMBAT_ATTRIBUTES( g_U4392, 32, 0 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( g_U4392, 0 );
        SET_PED_AS_ONE_SHOT_KILL( g_U4392, 1 );
        SET_PED_GORE_AS_ALLY( g_U4392 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U4392, 1 );
        SET_PED_CAN_INTERACT_WITH_DOORS( g_U4392, 0 );
        SET_PED_CAN_PUSH_PLAYER( g_U4392, 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( g_U4392, 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_CAN_AI_KICK_THROUGH_CORPSES( g_U4392, 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_CONSUMING_AMMO( g_U4392, 0 );
        SET_PED_INVINCIBLE( g_U4392, 0 );
        SET_PED_CAN_INITIATE_BULLET_CAM( g_U4392, 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( g_U4392, 1 );
        SET_PED_VALIDATE_BULLET_CAM_HIT( g_U4392, 0 );
        SET_BULLET_CAM_PREF( g_U4392, "ALL_F_06_FAILSAFE", "ALL_F_06_FAILSAFE", "ALL_F_06_FAILSAFE", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        SET_PED_NAME_DEBUG( g_U4392, "PRACTICE_EDISON!" );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U4392, 1 );
        SET_PED_ACCURACY( g_U4392, -1467320974 );
        SET_ROOM_FOR_PED_BY_NAME( g_U4392, "Room_Hallway_01" );
        SET_PED_ACCURACY( g_U4392, 31186664 );
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( g_U4392, 0, 0 ) ))
        {
            SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( g_U4392, 0, 0 ), 0 );
        }
    }
     /* P_DEACTIVATEPED */ sub_45136( g_U4392 );
    return;
}

/* P_CREATEPEDSTRUCT */ void sub_43451(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

/* CREATEPED */ void sub_43568(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_38321( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_44059( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_44160( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_44059(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_44160(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* P_CLEAR_PED_HEADTRACKING */ void sub_44320(int iParam0)
{
    if (NOT (IS_PED_DEAD( iParam0 )))
    {
        if (iParam0 == ( /* PLAYER_PED_ID */ sub_1262()))
        {
             /* WRITESCRIPTLOG */ sub_734( "[AT]", "Clearing headtracking on Max.", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_734( "[AT]", "Clearing headtracking on non-player ped.", 0 );
        }
        TASK_CLEAR_LOOK_AT( iParam0 );
    }
    else
    {
        SCRIPT_ASSERT( "Passed invalid or dead ped to P_CLEAR_PED_HEADTRACKING!", 0 );
    }
    return;
}

/* P_DEACTIVATEPED */ void sub_45136(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

/* MAL_ENEMYSTRUCTARRAYCREATE */ int sub_45297(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4, boolean bParam5)
{
    int I;

    PRINTSTRING( "[MSWW] ### MAL_EnemyStructArrayCreate starting: " );
     /* WRITE_STRING */ sub_7466( uParam1 );
    if (NOT bParam4)
    {
         /* P_SETUP_AI_GROUP */ sub_45414( uParam2, uParam3, 1 );
        for ( I = 0; I < (uParam0^); I++ )
        {
             /* MAL_ENEMYSTRUCTCREATE */ sub_45824( ref (uParam0^)[I] );
             /* P_QUICK_ADD_PED_TO_GROUP */ sub_47694( (uParam0^)[I]._fU0, uParam2 );
        }
         /* MAL_ESA_GIVEDEBUGNAMES */ sub_48092( uParam0, uParam1 );
    }
    else if ((uParam0^)[0]._fU172 == 0)
    {
         /* P_SETUP_AI_GROUP */ sub_45414( uParam2, uParam3, 1 );
    }
    if ((uParam0^)[0]._fU172 < (uParam0^))
    {
         /* MAL_ENEMYSTRUCTCREATE */ sub_45824( ref (uParam0^)[(uParam0^)[0]._fU172] );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_47694( (uParam0^)[(uParam0^)[0]._fU172]._fU0, uParam2 );
        (uParam0^)[0]._fU172++;
    }
    else
    {
         /* MAL_ESA_GIVEDEBUGNAMES */ sub_48092( uParam0, uParam1 );
        return 1;
    }
    if (bParam5)
    {
         /* MAL_ESA_PROCESSINGFREEZE */ sub_48383( uParam0, 1, 0, -1 );
    }
    return 0;
}

/* P_SETUP_AI_GROUP */ void sub_45414(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* MAL_ENEMYSTRUCTCREATE */ void sub_45824(int iParam0)
{
    unknown uVar3;

     /* MAL_WRITESCRIPTLOG */ sub_8194( "MAL_EnemyStructCreate starting" );
     /* MAL_CREATEPEDADV */ sub_45963( iParam0 + 0, iParam0 + 4, iParam0->_fU56, iParam0->_fU68, iParam0->_fU72, iParam0->_fU80, iParam0->_fU84, iParam0->_fU116, iParam0->_fU120, iParam0->_fU124, 1 );
    if (NOT (ARE_STRINGS_EQUAL( iParam0 + 140, ref g_U652 )))
    {
        PRINTSTRING( "[MSWW] ### MAL_EnemyStructCreate adding ped to room: " );
         /* WRITE_STRING */ sub_7466( iParam0 + 140 );
         /* MAL_SETROOMFORPED */ sub_47045( iParam0 + 0, iParam0 + 140 );
    }
    if (iParam0->_fU128)
    {
         /* MAL_WRITESCRIPTLOG */ sub_8194( "MAL_EnemyStructCreate giving ped backup weapon" );
         /* MAL_GIVEPEDWEAPONINHOLSTER */ sub_47194( iParam0->_fU0, iParam0->_fU76, 25000, 1, 0 );
    }
    if (iParam0->_fU132)
    {
        uVar3 = GET_WEAPON_FROM_HAND( iParam0->_fU0, 0, 0 );
         /* MAL_TOGGLEWEAPONATTACHMENTTOWEAPON */ sub_47420( ref uVar3, 14, 1 );
    }
    if (iParam0->_fU136 != 0)
    {
         /* MAL_GIVEPEDPERSISTANTVARIATIONENUM */ sub_47583( iParam0 + 0, iParam0->_fU136 );
    }
    return iParam0->_fU0;
}

/* MAL_CREATEPEDADV */ void sub_45963(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19)
{
     /* P_CREATEPEDSTRUCT */ sub_43451( uParam1, uParam2, uParam5, uParam18, 7, 3, 2, 0, 0 );
    (uParam0^) =  /* MAL_CREATEPED */ sub_46021( uParam0, uParam1, 1, 1, uParam19 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
    }
     /* MAL_GIVEPEDWEAPON */ sub_46317( (uParam0^), uParam6, 25000, 0, 0 );
     /* MAL_SETTEMPLATEANDRANGES */ sub_46522( uParam0, ref uParam8, uParam16, uParam17, 1 );
     /* MAL_SETPEDCOMBATMOVEMENT */ sub_46853( uParam0, uParam7 );
    return (uParam0^);
}

/* MAL_CREATEPED */ void sub_46021(unknown uParam0, unknown uParam1, boolean bParam2, boolean bParam3, unknown uParam4)
{
     /* CLEANPED */ sub_7216( (uParam0^) );
    (uParam0^) =  /* CREATEPED */ sub_43568( uParam1 );
    if (bParam3)
    {
        while (NOT (DOES_PED_EXIST( (uParam0^) )))
        {
            WAIT( 0 );
             /* MAL_WRITESCRIPTLOG */ sub_8194( "MAL_CreatePed waiting for ped to exist" );
        }
    }
    SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), uParam4 );
     /* MAL_SETPEDCOMBATATTRIBUTES */ sub_46165( uParam0, 32, 0 );
    SET_PED_IGNORE_LOS_CHECKS( (uParam0^), NOT bParam2 );
    SET_PED_EMOTION_STATE( (uParam0^), 1 );
    return (uParam0^);
}

/* MAL_SETPEDCOMBATATTRIBUTES */ void sub_46165(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_ATTRIBUTES( (uParam0^), uParam1, uParam2 );
    }
    return;
}

/* MAL_GIVEPEDWEAPON */ void sub_46317(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    unknown Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                 /* MAL_WRITESCRIPTLOG */ sub_8194( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

/* MAL_SETTEMPLATEANDRANGES */ void sub_46522(unknown uParam0, unknown uParam1, float fParam2, float fParam3, boolean bParam4)
{
     /* MAL_WRITESCRIPTLOG */ sub_8194( "MAL_SetTemplateAndRanges" );
    PRINTSTRING( "[MSWW]### Template Name: " );
     /* WRITE_STRING */ sub_7466( uParam1 );
    PRINTSTRING( "[MSWW]### Min Range: " );
     /* WRITE_FLOAT */ sub_46666( fParam2 );
    PRINTSTRING( "[MSWW]### Max Range: " );
     /* WRITE_FLOAT */ sub_46666( fParam3 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    if (NOT bParam4)
    {
         /* MAL_SETPEDCOMBATATTRIBUTES */ sub_46165( uParam0, 1, 0 );
    }
    return;
}

/* WRITE_FLOAT */ void sub_46666(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* MAL_SETPEDCOMBATMOVEMENT */ void sub_46853(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETROOMFORPED */ void sub_47045(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_ROOM_FOR_PED_BY_NAME( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_GIVEPEDWEAPONINHOLSTER */ void sub_47194(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    int Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
            while (Result == 0)
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
                 /* MAL_WRITESCRIPTLOG */ sub_8194( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

/* MAL_TOGGLEWEAPONATTACHMENTTOWEAPON */ void sub_47420(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (GET_DOES_WEAPON_EXIST( (uParam0^) ))
    {
        if (bParam2)
        {
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
        else
        {
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
    }
    return;
}

/* MAL_GIVEPEDPERSISTANTVARIATIONENUM */ void sub_47583(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PERSISTENT_PED_VARIATION_ENUM( (uParam0^), uParam1 );
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_47694(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_7466( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_45414( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_45414( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* MAL_ESA_GIVEDEBUGNAMES */ void sub_48092(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I]._fU0, ref cVar5 );
        }
    }
    return;
}

/* MAL_ESA_PROCESSINGFREEZE */ void sub_48383(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_PROCESSINGFREEZE */ sub_48460( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_PROCESSINGFREEZE */ void sub_48460(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_FREEZE_PROCESSING( iParam0->_fU0, uParam1 );
    }
    return;
}

/* P_PRESSROOMCS_POST */ void sub_48569()
{
     /* WRITESCRIPTLOG */ sub_734( "GA", "P_PressRoomCS_Post start", 0 );
     /* MAL_ESA_FREEZE */ sub_48645( ref l_U778, 1, 0, -1 );
     /* MAL_ESA_INVINCIBLE */ sub_48804( ref l_U778, 1, 0, -1 );
     /* MAL_ESA_GIVETETHER */ sub_48976( ref l_U778, l_U607, 1, 0, -1 );
     /* MAL_ESA_SETPEDARRAYRELATIONSHIP */ sub_49205( ref l_U778, 2, 6 );
     /* MAL_ESA_SETCANINITIATEBC */ sub_49381( ref l_U778, 1, 0, -1 );
     /* MAL_ESA_VISIBLE */ sub_49560( ref l_U778, 0, 0, -1 );
     /* MAL_ESA_BLANKSCHANCE */ sub_49787( ref l_U778, 100, 0, -1 );
     /* WRITESCRIPTLOG */ sub_734( "GA", "P_PressRoomCS_Post end", 0 );
    return;
}

/* MAL_ESA_FREEZE */ void sub_48645(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_FREEZE */ sub_48712( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_FREEZE */ void sub_48712(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        FREEZE_PED_POSITION( iParam0->_fU0, uParam1 );
    }
    return;
}

/* MAL_ESA_INVINCIBLE */ void sub_48804(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_INVINCIBLE */ sub_48875( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_INVINCIBLE */ void sub_48875(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_INVINCIBLE( iParam0->_fU0, uParam1 );
    }
    return;
}

/* MAL_ESA_GIVETETHER */ void sub_48976(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    int I;

    if (iParam4 == -1)
    {
        iParam4 = (uParam0^) - 1;
    }
    for ( I = uParam3; I <= iParam4; I++ )
    {
         /* MAL_ES_GIVETETHER */ sub_49049( ref (uParam0^)[I], uParam1, uParam2 );
    }
    return;
}

/* MAL_ES_GIVETETHER */ void sub_49049(int iParam0, unknown uParam1, unknown uParam2)
{
     /* P_TETHERPED */ sub_49087( ref uParam1, iParam0->_fU0, uParam2 );
    return;
}

/* P_TETHERPED */ void sub_49087(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

/* MAL_ESA_SETPEDARRAYRELATIONSHIP */ void sub_49205(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* MAL_ES_SETPEDRELATIONSHIP */ sub_49275( ref (uParam0^)[I], uParam1, uParam2 );
    }
    return;
}

/* MAL_ES_SETPEDRELATIONSHIP */ void sub_49275(int iParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_RELATIONSHIP( iParam0->_fU0, uParam1, uParam2 );
    }
    return;
}

/* MAL_ESA_SETCANINITIATEBC */ void sub_49381(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_SETCANINITIATEBC */ sub_49458( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_SETCANINITIATEBC */ void sub_49458(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_CAN_INITIATE_BULLET_CAM( iParam0->_fU0, uParam1 );
    }
    return;
}

/* MAL_ESA_VISIBLE */ void sub_49560(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_SETPEDVISIBLE */ sub_49628( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_SETPEDVISIBLE */ void sub_49628(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_VISIBLE( iParam0->_fU0, uParam1 );
    }
    else
    {
         /* MAL_WRITESCRIPTLOG */ sub_8194( "MAL_ES_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

/* MAL_ESA_BLANKSCHANCE */ void sub_49787(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_BLANKSCHANCE */ sub_49860( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_BLANKSCHANCE */ void sub_49860(int iParam0, unknown uParam1)
{
    unknown uVar4;

    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        uVar4 = GET_WEAPON_FROM_HAND( iParam0->_fU0, 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar4 ))
        {
            SET_WEAPON_CHANCE_TO_FIRE_BLANKS( uVar4, uParam1 );
        }
    }
    return;
}

/* P_CREATE_S_STA_GG_M1_02 */ void sub_50022()
{
     /* WRITESCRIPTLOG */ sub_734( "CO", "Add_Placement_CL_S_STA_GG_M1_02", 0 );
     /* P_CREATECOLLECTIBLESTRUCT */ sub_50165( ref g_U811, g_U851, 824397847, -433386083, 96.17000000, 28.21000000, 2.84000000, 1.50000000, 0.00000000, 3.50000000, "Room_Press" );
     /* P_CREATECOLLECTIBLE */ sub_50322( ref g_U811 );
    return;
}

/* P_CREATECOLLECTIBLESTRUCT */ void sub_50165(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_734( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* P_CREATECOLLECTIBLE */ void sub_50322(int iParam0)
{
     /* WRITESCRIPTLOG */ sub_734( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_50405( iParam0->_fU12 )) == 1)
        {
             /* WRITESCRIPTLOG */ sub_734( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_734( "CO", "has never been collected.", 0 );
        }
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_50405( iParam0->_fU12 )) == 0)
        {
             /* CLEANPLACEMENT */ sub_7769( iParam0->_fU0 );
            iParam0->_fU0 =  /* CREATEPLACEMENT */ sub_50675( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                     /* WRITESCRIPTLOG */ sub_734( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_734( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ int sub_50405(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

/* CREATEPLACEMENT */ void sub_50675(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a placement to exist: {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return Result;
}

/* P_CREATE_PLACEMENTS */ void sub_51009()
{
     /* WRITESCRIPTLOG */ sub_734( "CR", "P_CREATE_PLACEMENTS - Start", 0 );
    l_U1353[0] =  /* CREATEPLACEMENT */ sub_50675( -4072149, 117.45000000, 3.90000000, 3.68200000, 0.00000000, 0.00000000, 0.00000000, 1, 0, 0, 90.00000000 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1353[0], ref g_U2524 );
     /* WRITESCRIPTLOG */ sub_734( "CR", "P_CREATE_PLACEMENTS - End", 0 );
    return;
}

/* P_MID02B_PRECUTSCENESETUP */ int sub_51377()
{
     /* P_CLEAR_PED_HEADTRACKING */ sub_44320( g_U4392 );
     /* P_CLEAR_PED_HEADTRACKING */ sub_44320(  /* PLAYER_PED_ID */ sub_1262() );
     /* P_HOLSTERRIFLEORDUALANDDRAWPISTOL */ sub_51445( ref l_U1345, ref l_U1346, 1, 1 );
    if (NOT (IS_PED_DEAD( g_U4392 )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( g_U4392 );
    }
     /* MAL_RECREATEOBJECTWITHNOROTATIONINROOM */ sub_52838( ref g_U3867, g_U2397, 88.41000000, 64.48000000, -2.05400000, ref g_U2532, 1, 0 );
    return 1;
}

/* P_HOLSTERRIFLEORDUALANDDRAWPISTOL */ void sub_51445(unknown uParam0, unknown uParam1, unknown uParam2, boolean bParam3)
{
    unknown uVar6;

    uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1262(), 0, 0 );
    if (GET_DOES_WEAPON_EXIST( uVar6 ))
    {
        if ( /* F_ISPLAYERHOLDINGRIFLE */ sub_51521())
        {
            (uParam0^) = 1;
            SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1262(), 0, 0, uParam2 );
            uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1262(), 0, 0 );
            if (bParam3)
            {
                 /* WRITESCRIPTLOG */ sub_734( "MSWW", "P_HolsterRifleOrDualAndDrawPistol: Waiting for player to holster RIFLE in right hand...", "###" );
                while (GET_DOES_WEAPON_EXIST( uVar6 ))
                {
                    WAIT( 0 );
                    uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1262(), 0, 0 );
                }
            }
             /* WRITESCRIPTLOG */ sub_734( "MSWW", "P_HolsterRifleOrDualAndDrawPistol: ...right hand RIFLE holstered!", "###" );
        }
    }
    uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1262(), 1, 0 );
    if (GET_DOES_WEAPON_EXIST( uVar6 ))
    {
        (uParam1^) = 1;
        SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1262(), 0, 1, uParam2 );
        uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1262(), 1, 0 );
        if (bParam3)
        {
             /* WRITESCRIPTLOG */ sub_734( "MSWW", "P_HolsterRifleOrDualAndDrawPistol: Waiting for player to holster gun in LEFT hand...", "###" );
            while (GET_DOES_WEAPON_EXIST( uVar6 ))
            {
                WAIT( 0 );
                uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1262(), 1, 0 );
            }
        }
         /* WRITESCRIPTLOG */ sub_734( "MSWW", "P_HolsterRifleOrDualAndDrawPistol: ...LEFT hand gun holstered!", "###" );
    }
    uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1262(), 0, 0 );
    if (NOT (GET_DOES_WEAPON_EXIST( uVar6 )))
    {
        uVar6 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1262(), 0 );
        if (NOT (GET_DOES_WEAPON_EXIST( uVar6 )))
        {
            uVar6 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1262(), 1 );
        }
        SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1262(), uVar6, 0, uParam2 );
        uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1262(), 0, 0 );
        if (bParam3)
        {
             /* WRITESCRIPTLOG */ sub_734( "MSWW", "P_HolsterRifleOrDualAndDrawPistol: Waiting for player to draw gun from HOLSTER...", "###" );
            while (NOT (GET_DOES_WEAPON_EXIST( uVar6 )))
            {
                WAIT( 0 );
                uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1262(), 0, 0 );
            }
        }
         /* WRITESCRIPTLOG */ sub_734( "MSWW", "P_HolsterRifleOrDualAndDrawPistol: ...gun drawn from HOLSTER!", "###" );
    }
    return;
}

/* F_ISPLAYERHOLDINGRIFLE */ int sub_51521()
{
    int[18] iVar2;
    unknown uVar21;
    int I;

    array(ref iVar2, 18);
    iVar2[0] = -1013714740;
    iVar2[1] = -1074756423;
    iVar2[2] = 1308526797;
    iVar2[3] = 840671040;
    iVar2[4] = 57534114;
    iVar2[5] = 724901397;
    iVar2[6] = 1992962408;
    iVar2[7] = 319712764;
    iVar2[8] = 427207702;
    iVar2[9] = -110877124;
    iVar2[10] = 1224272620;
    iVar2[11] = 10648147;
    iVar2[12] = -2075384407;
    iVar2[13] = 1478009203;
    iVar2[14] = 434544317;
    iVar2[15] = -168327769;
    iVar2[16] = -184942895;
    iVar2[17] = 514118749;
    uVar21 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1262(), 0, 0 );
    if (GET_DOES_WEAPON_EXIST( uVar21 ))
    {
        for ( I = 0; I < iVar2; I++ )
        {
            if ((GET_WEAPON_TYPE( uVar21 )) == iVar2[I])
            {
                return 1;
            }
        }
    }
    return 0;
}

/* MAL_RECREATEOBJECTWITHNOROTATIONINROOM */ void sub_52838(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
     /* MAL_RECREATEOBJECTINROOM */ sub_52908( uParam0, uParam1, uParam2, g_U649, uParam5, uParam6, uParam7 );
    return;
}

/* MAL_RECREATEOBJECTINROOM */ void sub_52908(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
     /* MAL_RECREATEOBJECT */ sub_52961( uParam0, uParam1, uParam2, uParam5, uParam9, uParam10 );
    if (DOES_OBJECT_EXIST( (uParam0^) ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( (uParam0^), uParam8 );
    }
    return;
}

/* MAL_RECREATEOBJECT */ void sub_52961(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
     /* CLEANOBJECT */ sub_7316( (uParam0^) );
    (uParam0^) =  /* CREATEOBJECTNOOFFSET */ sub_53013( uParam1, uParam2, uParam5, 0, uParam9, 0 );
    FREEZE_OBJECT_POSITION( (uParam0^), uParam8 );
    return;
}

/* CREATEOBJECTNOOFFSET */ void sub_53013(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_38321( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* P_MID02B_REGISTRATION */ void sub_53401()
{
    if (NOT (IS_PED_DEAD( g_U4392 )))
    {
         /* WRITESCRIPTLOG */ sub_734( "GA", "Registering Passos script ped with midscene MID_02B_STADIUM", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U4392, "Pass_heli_pilo", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U4392, l_U729, l_U732 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U4392, 0, 0 ), "W_PI_PT92_Aa_H^1", 0 );
    }
    if (DOES_OBJECT_EXIST( g_U3706._fU232 ))
    {
         /* WRITESCRIPTLOG */ sub_734( "GA", "Registering elevator room with midscene MID_02B_STADIUM", 0 );
        REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( g_U3706._fU232, "P_ST_FRTELE_AA_H", 0 );
    }
    if (DOES_OBJECT_EXIST( g_U3706._fU236 ))
    {
         /* WRITESCRIPTLOG */ sub_734( "GA", "Registering evelator front door with midscene MID_02B_STADIUM", 0 );
        REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( g_U3706._fU236, "P_ST_FRTELEDR1", 0 );
         /* P_ADDELEVATORTOINTERIOR */ sub_39249( ref g_U3706, ref g_U2540 );
    }
    if (DOES_OBJECT_EXIST( g_U3706._fU244 ))
    {
         /* WRITESCRIPTLOG */ sub_734( "GA", "Registering evelator back door with midscene MID_02B_STADIUM", 0 );
        REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( g_U3706._fU244, "P_ST_FRTELEDR2", 0 );
    }
    if (DOES_OBJECT_EXIST( g_U3866 ))
    {
         /* WRITESCRIPTLOG */ sub_734( "GA", "Registering elevator button to midscene MID_02B_STADIUM", 0 );
        REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( g_U3866, "cs_int05Button", 0 );
    }
    REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1262(), 0, 0 ), "W_PI_PT92_Aa_H", 0 );
    CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_1262(), l_U1827, l_U1830 );
    CUTSCENE_REGISTER_ISEQ( 1269878088 );
    ISEQ_REGISTER_ENTITY( 1269878088, "Max",  /* PLAYER_PED_ID */ sub_1262(), 0 );
    return;
}

/* P_MID02B_HANDLECUTSCENE */ void sub_54241()
{
    if (l_U1842._fU52)
    {
        AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1_2", "", 0, 5000, 7000, -1082130432, 0 );
         /* P_ACTIVATEPED */ sub_54350( g_U4392 );
    }
    if (NOT l_U1349)
    {
        if (GET_CUTSCENE_TIME_MS() >= 250)
        {
             /* CLEANOBJECT */ sub_7316( g_U3867 );
            l_U1349 = 1;
        }
    }
    return;
}

/* P_ACTIVATEPED */ void sub_54350(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

/* P_MID02B_POST */ int sub_54514()
{
     /* MAL_WRITESCRIPTLOG */ sub_8194( "P_MID02B_POST START" );
     /* MAL_ESA_VISIBLE */ sub_49560( ref l_U778, 0, 0, -1 );
    SIMULATE_PLAYER_INPUT_GAIT(  /* PLAYER_ID */ sub_1300(), 2, 1500, 0 );
    STREAM_HELPERS_REQUEST_AT_LOC( 99.41388000, 40.17538000, 2.80667200, 0 );
    return 1;
}

/* P_MID02B_PREPAREBLENDOUT */ void sub_54628()
{
     /* MAL_WRITESCRIPTLOG */ sub_8194( "P_MID02B_PREPAREBLENDOUT START" );
    PED_FINISH_ACTION_INTENTION( g_U4392, 47 );
    PED_FINISH_ACTION_INTENTION( g_U4392, 48 );
    PED_FINISH_ACTION_INTENTION( g_U4392, 49 );
    PED_FINISH_ACTION_INTENTION( g_U4392, 50 );
    PED_FINISH_ACTION_INTENTION( g_U4392, 51 );
    PED_FINISH_ACTION_INTENTION( g_U4392, 52 );
    PED_FINISH_ACTION_INTENTION( g_U4392, 53 );
    PED_FINISH_ACTION_INTENTION( g_U4392, 54 );
    PED_FINISH_ACTION_INTENTION( g_U4392, 55 );
    if (NOT (ISEQ_QUERY_STATE( 1269878088, 3 )))
    {
         /* MAL_WRITESCRIPTLOG */ sub_8194( "IF NOT ISEQ_QUERY_STATE(S_STAD_02BLEADOUT, eSNS_PLAYING)" );
        ISEQ_REGISTER_ENTITY( 1269878088, "Max",  /* PLAYER_PED_ID */ sub_1262(), 0 );
        ISEQ_START( 1269878088 );
         /* TELEPORTPED */ sub_54974(  /* PLAYER_PED_ID */ sub_1262(), l_U1827, l_U1830 );
         /* TELEPORTPED */ sub_54974( g_U4392, l_U729, l_U732 );
         /* P_ACTIVATEPED */ sub_54350( g_U4392 );
    }
    SET_CAM_VIEW_MODE( 0 );
    CAMERA_PLAY_ANIMATED( "LEVEL_S_STAD_CP_02", "B_OUT_MID_02B_STAD_CAM", 0, g_U649, 0.00000000, 0, 0 );
     /* P_STREAMREQ_SCRIPT_STREAM_PLAY_FRONTEND */ sub_55181( "S_STAD_MID_02B_BLENDOUT", ref g_U2034 );
     /* P_PREPARE_INTERROGATION */ sub_55654();
     /* CREATETIMER */ sub_2449( ref l_U1833, 1500, 1, 0 );
     /* STARTTIMER */ sub_2599( ref l_U1833 );
    STREAM_HELPERS_REQUEST_AT_LOC( 99.41388000, 40.17538000, 2.80667200, 1 );
     /* MAL_WRITESCRIPTLOG */ sub_8194( "P_MID02B_PREPAREBLENDOUT END" );
    return;
}

/* TELEPORTPED */ void sub_54974(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_STREAMREQ_SCRIPT_STREAM_PLAY_FRONTEND */ void sub_55181(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if ( /* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ sub_6121( uParam0, uParam1 ))
    {
        iVar4 =  /* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ sub_6330( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            DISPLAYF( "[CCB]### Playing the SCRIPT_STREAM: {} ###", 1, 1281, ref (uParam1^)[iVar4]._fU0 );
            PLAY_SCRIPT_STREAM_FRONTEND( iVar4 );
        }
        else
        {
            DISPLAYF( "[CCB]### The SCRIPT_STREAM slot is NOT valid!!! {} ###", 1, 1537, uParam0 );
            SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        DISPLAYF( "[CCB]### The SCRIPT_STREAM asset is NOT loaded!!! {} ###", 1, 1537, uParam0 );
        SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

/* P_PREPARE_INTERROGATION */ void sub_55654()
{
     /* CLEANOBJECT */ sub_7316( l_U733 );
    l_U733 =  /* CREATEOBJECT */ sub_38196( g_U2394, l_U734, l_U737, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( l_U733 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U733, ref g_U2468 );
        FREEZE_OBJECT_POSITION( l_U733, 1 );
        SET_OBJECT_COLLISION( l_U733, 0 );
    }
     /* CLEANPED */ sub_7216( l_U724 );
     /* P_CREATEPEDSTRUCT */ sub_43451( ref l_U711, l_U725, l_U728, g_U2381, 26, 6, 0, 0, 0 );
     /* MAL_CREATEPED */ sub_46021( ref l_U724, ref l_U711, 1, 0, 0 );
    if (NOT (IS_PED_DEAD( l_U724 )))
    {
         /* MAL_GIVEPEDPERSISTANTVARIATION */ sub_55885( ref l_U724, "M3_CS_12_Mus" );
        FREEZE_PED_POSITION( l_U724, 1 );
         /* MAL_TELEPORTPED */ sub_56052( l_U724, l_U725, l_U728 );
        SET_ROOM_FOR_PED_BY_NAME( l_U724, "Room_Press" );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U724, 1 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U724, 1 );
        APPLY_DAMAGE_TO_PED_BODY_PART( l_U724, 2, 10 );
        SET_PED_EMOTION_STATE( l_U724, 3 );
        SET_PED_AS_ONE_SHOT_KILL( l_U724, 1 );
        STOP_PED_SPEAKING( l_U724, 1 );
        DAMAGE_DECALS_ON_PED( l_U724, 0.50000000 );
    }
    return;
}

/* MAL_GIVEPEDPERSISTANTVARIATION */ void sub_55885(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PRINTSTRING( "[MSWW] ### Assigning scene ped variation: " );
         /* WRITE_STRING */ sub_7466( uParam1 );
        SET_PERSISTENT_PED_VARIATION( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_TELEPORTPED */ void sub_56052(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* F_MID02B_HANDLEBLENDOUT */ int sub_56346()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if (l_U1842._fU52)
    {
        if (NOT ( /* F_IMAGEFX_FADE_IN */ sub_56396()))
        {
            DO_SCREEN_FADE_IN( 0 );
        }
    }
    if (NOT l_U1932)
    {
        if (CAMERA_ANIMATED_CURRENT_TIME() >= 2800)
        {
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 1,  /* PLAYER_PED_ID */ sub_1262(), "MAX", ref uVar2, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_56929( "SSTD_WTHPG", ref uVar2, 7, 1 );
            l_U1932 = 1;
        }
    }
    if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_STAD_CP_02", "B_OUT_MID_02B_STAD_CAM" )) - 100))
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U1831, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U1832, 1065353216, 0 );
        CAMERA_ANIMATED_STOP( 1000, 1 );
    }
    if ( /* ISTIMERDONE */ sub_2732( ref l_U1833 ))
    {
         /* MAL_WRITESCRIPTLOG */ sub_8194( "IsTimerDone(tInterStart)" );
         /* P_START_INTERROGATION */ sub_57996();
    }
    if ((ISEQ_QUERY_STATE( 1269878088, 5 )) || (ISEQ_QUERY_STATE( 1269878088, 6 )))
    {
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U1831, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U1832, 1065353216, 0 );
            CAMERA_ANIMATED_STOP( 1000, 1 );
        }
        AUDIO_MUSIC_REQUEST_ONESHOT( "STADIUM_ONESHOT_2", 0 );
        return 1;
    }
    return 0;
}

/* F_IMAGEFX_FADE_IN */ int sub_56396()
{
    if (l_U75)
    {
         /* WRITESCRIPTLOG */ sub_734( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U75 = 0;
        return 1;
        break;
    }
     /* WRITESCRIPTLOG */ sub_734( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_56687(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_56929(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_56974( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_56974(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_57061( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_57061(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_57113( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_57631( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_57113(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_57631(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* P_START_INTERROGATION */ void sub_57996()
{
    if ((NOT (IS_PED_DEAD( g_U4392 ))) AND (NOT (IS_PED_DEAD( l_U724 ))))
    {
        FREEZE_PED_POSITION( l_U724, 0 );
        SET_ROOM_FOR_PED_BY_NAME( l_U724, "Room_Press" );
        ISEQ_REGISTER_ENTITY( 1743875163, "s_stad_inter_cs", l_U724, 0 );
        ISEQ_REGISTER_ENTITY( 1743875163, "s_stad_inter_pas", g_U4392, 0 );
    }
     /* MAL_TELEPORTPED */ sub_56052( g_U4392, l_U729, l_U732 );
    ISEQ_START( 1743875163 );
     /* MAL_TELEPORTPED */ sub_56052( l_U724, l_U725, l_U728 );
     /* MAL_SETCANTRIGGERBULLETCAM */ sub_58235( l_U724, 1 );
    SET_BULLET_CAM_PREF( l_U724, "VIG_CUSTOM_STAD_01", "VIG_CUSTOM_STAD_01", "VIG_CUSTOM_STAD_01", "VIG_CUSTOM_STAD_01", 0, "PIST_NORMAL_06_N", "ALL_01_MEDIUM_FAILSAFE", "PIST_NORMAL_06_N", "ALL_01_MEDIUM_FAILSAFE", "PIST_NORMAL_06_N", "ALL_01_MEDIUM_FAILSAFE", "PIST_NORMAL_06_N" );
    return;
}

/* MAL_SETCANTRIGGERBULLETCAM */ int sub_58235(unknown uParam0, boolean bParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        if (bParam1)
        {
            if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( uParam0 )))
            {
                 /* MAL_WRITESCRIPTLOG */ sub_8194( "MAL_SetCanTriggerBulletCam: Ped is not able to trigger BC, adding" );
                SET_PED_CAN_TRIGGER_BULLET_CAM( uParam0, bParam1 );
                return 1;
            }
        }
        else if (GET_PED_CAN_TRIGGER_BULLET_CAM( uParam0 ))
        {
             /* MAL_WRITESCRIPTLOG */ sub_8194( "MAL_SetCanTriggerBulletCam turning off BC" );
            SET_PED_CAN_TRIGGER_BULLET_CAM( uParam0, bParam1 );
            return 1;
        }
    }
    return 0;
}

/* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ void sub_58885(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
     /* WRITESCRIPTLOG */ sub_734( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return  /* CUTSYS_PRIVATE_CREATECUTSCENE */ sub_59109( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 59006, 59056, uParam8 );
}

/* CUTSYS_DEFAULT_PREPAREBLENDIN */ void sub_59006()
{
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDIN */ int sub_59056()
{
    return 1;
}

/* CUTSYS_PRIVATE_CREATECUTSCENE */ void sub_59109(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

/* CUTSYS_SETCUTSCENELOADINTERIORONSKIP */ void sub_59457(int iParam0, unknown uParam1, unknown uParam2)
{
    iParam0->_fU68 = 1;
    iParam0->_fU72 = 1;
    iParam0->_fU76 = uParam1;
    iParam0->_fU80 = uParam2;
    iParam0->_fU24 = 1;
    return;
}

/* CUTSYS_HANDLECUTSCENE */ void sub_59636(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
             /* WRITESCRIPTLOG */ sub_734( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
             /* WRITESCRIPTLOG */ sub_734( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                 /* WRITESCRIPTLOG */ sub_734( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
             /* WRITESCRIPTLOG */ sub_734( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
             /* WRITESCRIPTLOG */ sub_734( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
             /* WRITESCRIPTLOG */ sub_734( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
             /* LOADSEAMLESSCUTSCENE */ sub_34157( iParam0->_fU0, 0 );
             /* WRITESCRIPTLOG */ sub_734( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
             /* NIS_PRE_SETUP */ sub_60527( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
         /* NIS_PRE_SETUP */ sub_60527( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
         /* WRITESCRIPTLOG */ sub_734( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                 /* P_SET_PLAYER_WEAPONS_VISIBLE */ sub_61071( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
         /* NIS_PRE_SETUP */ sub_60527( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
             /* NIS_POST_SETUP */ sub_61451( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
         /* NIS_POST_SETUP */ sub_61451( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

/* NIS_PRE_SETUP */ void sub_60527(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1300(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1262(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1262() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1262(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* P_SET_PLAYER_WEAPONS_VISIBLE */ void sub_61071(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1262(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1262(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1262(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1262(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1262(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

/* NIS_POST_SETUP */ void sub_61451(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1300(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1262(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_61549();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_61549()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1262(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1262(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1262(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1262(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_61906(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_734( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_734( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_12247( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_62197( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_62674( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_62674( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_62934( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_62674( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_62934( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_62934( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_62674( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_62934( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_62934( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_62934( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_62674( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_62934( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_62934( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_62934( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_62934( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_64514( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_734( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_62197(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_9306( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_734( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_734( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_62674(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_62934(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_64514(int iParam0)
{
     /* WRITE_STRING */ sub_7466( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_64602( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_46666( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_46666( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_46666( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_64805( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_64805( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_64805( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_64805( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_64805( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_64805( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_64805( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_64805( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_64805( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_64805( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_64805( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_46666( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_64805( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_64805( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_64805( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_46666( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_65506( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_64805( iParam0->_fU52 );
     /* WRITE_STRING */ sub_7466( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_64805( iParam0->_fU96 );
     /* WRITE_STRING */ sub_7466( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_64805( iParam0->_fU100 );
     /* WRITE_STRING */ sub_7466( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_64805( iParam0->_fU104 );
     /* WRITE_STRING */ sub_7466( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_64805( iParam0->_fU108 );
     /* WRITE_STRING */ sub_7466( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_64805( iParam0->_fU112 );
     /* WRITE_STRING */ sub_7466( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_64805( iParam0->_fU116 );
     /* WRITE_STRING */ sub_7466( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_64805( iParam0->_fU120 );
     /* WRITE_STRING */ sub_7466( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_64805( iParam0->_fU124 );
     /* WRITE_STRING */ sub_7466( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_64805( iParam0->_fU128 );
     /* WRITE_STRING */ sub_7466( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_64805( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_64805( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_64805( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_64602(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_64805(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_65506(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* P_CREATE_AND_START_TIMER */ void sub_66549(unknown uParam0, unknown uParam1)
{
     /* CREATETIMER */ sub_2449( uParam0, uParam1, 1, 0 );
     /* STARTTIMER */ sub_2599( uParam0 );
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_66642(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_66837(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_66913(  /* PLAYER_PED_ID */ sub_1262(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* F_ISPEDINTRIGGERBOX */ int sub_66913(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* IS_SPEECH_CURRENTLY_PLAYING */ int sub_67045(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_67088( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

/* IS_SCRIPT_SPEECH_STRUCT_VALID */ boolean sub_67088(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

/* KILL_SPEECH */ void sub_67273(int iParam0, unknown uParam1)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_67088( (iParam0^) )))
    {
        ;
    }
    else
    {
        PRINTSTRING( "\n KILL SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
        {
            if (iParam0->_fU8 == g_U6[iParam0->_fU4])
            {
                STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
            }
        }
    }
    return;
}

/* P_START_INTERROGATION_PT1 */ void sub_67463()
{
     /* WRITESCRIPTLOG */ sub_734( "SP", "P_START_INTERROGATION_PT1", 0 );
    PED_SET_ACTION_INTENTION( g_U4392, 47, 4000, g_U649 );
    PED_SET_ACTION_INTENTION( l_U724, 47, 4000, g_U649 );
    SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1300(), 0 );
    SET_ADRENALINE_NOT_ALLOW( 1 );
    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1262(), 1 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_66642( ref l_U670 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 0,  /* PLAYER_PED_ID */ sub_1262(), "MAX", ref l_U670, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 1, g_U4392, "PASSOS", ref l_U670, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 2, l_U724, "M3_CS_12_AVG", ref l_U670, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_56929( "SSTD_PRPE1", ref l_U670, 8, 1 );
    l_U691 = 1;
    return;
}

/* F_INTERROGATION_PT1_FINISHED */ int sub_68077()
{
    if ((NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_67045( l_U680 ))) AND ((NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_67045( l_U670 ))) AND (l_U691)))
    {
        return 1;
    }
    return 0;
}

/* P_START_INTERROGATION_PT2 */ void sub_68172()
{
     /* WRITESCRIPTLOG */ sub_734( "SP", "P_START_INTERROGATION_PT2", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_66642( ref l_U680 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 0,  /* PLAYER_PED_ID */ sub_1262(), "MAX", ref l_U680, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 1, g_U4392, "PASSOS", ref l_U680, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 2, l_U724, "M3_CS_12_AVG", ref l_U680, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_56929( "SSTD_PRPE2", ref l_U680, 8, 1 );
    return;
}

/* F_DID_PLAYER_INTERRUPT_INTERROGATION_WITH_GUN */ int sub_68485()
{
    if ((IS_PED_DEAD( l_U724 )) AND (DOES_PED_EXIST( l_U724 )))
    {
        return 1;
    }
    if ((NOT (IS_PED_DEAD( l_U724 ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() ))))
    {
        if ((IS_PED_IN_CROSSHAIR_CYLINDER( l_U724, 2.00000000, 100.00000000, 0, -1082130432 )) AND (IS_PED_SHOOTING(  /* PLAYER_PED_ID */ sub_1262() )))
        {
            return 1;
        }
    }
    return 0;
}

/* P_UNFREEZE_INTERROGATION_CHAIR */ void sub_68740()
{
    SET_OBJECT_COLLISION( l_U733, 1 );
    return;
}

/* MAL_GETPEDCOORDS */ vector sub_68813(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return "[dynamic result, ret vals = 3]";
        break;
        GET_PED_COORDS( uParam0 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        break;
    }
    return vector( 0, 0, 0);
}

/* MAL_SETACTINWITHFOCUSPOS */ void sub_68889(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_SET_ACTION_INTENTION( (uParam0^), uParam4, uParam5, uParam1 );
    }
    return;
}

/* P_INTERRUPT_INTERROGATION */ void sub_69075()
{
     /* WRITESCRIPTLOG */ sub_734( "SP", "P_INTERRUPT_INTERROGATION", 0 );
    AUDIO_MUSIC_STOP_ONESHOT();
    AUDIO_MUSIC_REQUEST_ONESHOT( "STADIUM_ONESHOT_12", 0 );
     /* CLEANCAMERA */ sub_4215( ref l_U776 );
    if ((l_U692) || (l_U691))
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
        {
            SET_PED_EMOTION_STATE(  /* PLAYER_PED_ID */ sub_1262(), 3 );
        }
         /* KILL_SPEECH */ sub_67273( ref l_U670, 0 );
         /* KILL_SPEECH */ sub_67273( ref l_U680, 0 );
        l_U691 = 0;
        l_U692 = 0;
    }
    ISEQ_UNREGISTER_ENTITY( 1743875163, "s_stad_inter_cs" );
    SET_PED_RELATIONSHIP( l_U724, 1, 0 );
    STOP_PED_SPEAKING( l_U724, 1 );
    if (NOT (IS_PED_DEAD( l_U724 )))
    {
         /* WRITESCRIPTLOG */ sub_734( "[SA]", "Killing interrogation CS.", 0 );
        PED_SET_ACTION_INTENTION( l_U724, 48, 1000, g_U649 );
         /* P_KILL_PED */ sub_69422( l_U724 );
    }
    return;
}

/* P_KILL_PED */ void sub_69422(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

/* F_INTERROGATION_PT2_FINISHED */ int sub_69651()
{
    if ((l_U692) AND (NOT (IS_PED_DEAD( l_U724 ))))
    {
        if (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_67045( l_U680 )))
        {
             /* WRITESCRIPTLOG */ sub_734( "MF", "SSTD_PRPE2 - Speech has completed!", 0 );
            return 1;
        }
    }
    return 0;
}

/* P_PASSOS_REACTION_DIALOGUE */ void sub_69952()
{
     /* WRITESCRIPTLOG */ sub_734( "MF", "P_PASSOS_REACTION_DIALOGUE - START", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_66642( ref l_U649 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 0,  /* PLAYER_PED_ID */ sub_1262(), "MAX", ref l_U649, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 1, g_U4392, "PASSOS", ref l_U649, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_56929( "SSTD_PRPD", ref l_U649, 8, 1 );
     /* WRITESCRIPTLOG */ sub_734( "MF", "P_PASSOS_REACTION_DIALOGUE - END", 0 );
    return;
}

/* F_ISPLAYERINTRIGGERREGIONFIRSTTIME */ void sub_70186(int iParam0, unknown uParam1)
{
    if (iParam0->_fU548)
    {
        return 0;
    }
    else
    {
        iParam0->_fU548 =  /* F_ISPLAYERINTRIGGERREGION */ sub_70258( iParam0, uParam1 );
    }
    return iParam0->_fU548;
}

/* F_ISPLAYERINTRIGGERREGION */ void sub_70258(int iParam0, unknown uParam1)
{
    int Result;
    int I;
    int J;

    Result = 0;
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
    {
        for ( I = 0; I < iParam0->_fU508; I++ )
        {
            if ( /* F_ISPLAYERINTRIGGERBOX */ sub_70345( iParam0->_fU0[I] ))
            {
                Result = 1;
            }
        }
    }
    if ((uParam1) AND (Result))
    {
        for ( J = 0; J < iParam0->_fU508; J++ )
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( ref iParam0->_fU0[J]._fU0, 0 );
        }
    }
    iParam0->_fU548 = 1;
    return Result;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_70345(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_66913(  /* PLAYER_PED_ID */ sub_1262(), uParam0 );
}

/* P_MEDIA_CS_ENTER */ void sub_70602()
{
     /* MAL_PEDPLAYERACTIONTREENODE */ sub_70707( g_U4392, "/Global/INTERROGATION/INTERROGATION_SEQ/PASSOS/EARLY_EXIT/EARLY_EXIT" );
    WAIT( 0 );
     /* MAL_TELEPORTPED */ sub_56052( g_U4392, 97.77000000, 37.94600000, 2.81100000, 0.00000000 );
     /* NIS_PRE_SETUP */ sub_60527( 1, 0, 0, 1 );
    if ( /* F_ISPLAYERINTRIGGERBOX */ sub_70345( l_U439 ))
    {
         /* MAL_TELEPORTPED */ sub_56052(  /* PLAYER_PED_ID */ sub_1262(), 96.63508000, 36.68617000, 2.80502000, 270.00000000 );
    }
    else if ( /* F_ISPLAYERINTRIGGERBOX */ sub_70345( l_U418 ))
    {
         /* MAL_TELEPORTPED */ sub_56052(  /* PLAYER_PED_ID */ sub_1262(), 99.97811000, 38.86436000, 2.81075300, 220.00000000 );
    }
    else if (( /* MAL_COMPAREPLAYERPOSAXIS */ sub_70950( "Y", "Less", 48.30000000 )) AND ( /* MAL_COMPAREPLAYERPOSAXIS */ sub_70950( "Y", "Greater", 45.00000000 )))
    {
         /* MAL_TELEPORTPED */ sub_56052(  /* PLAYER_PED_ID */ sub_1262(), 95.98611000, 43.29938000, 2.80370200, 220.00000000 );
         /* P_CLOSEDOOR */ sub_18448( ref g_U3101, 1 );
         /* P_CLOSEDOOR */ sub_18448( ref g_U3108, 1 );
    }
    else
    {
        TASK_TURN_PED_TO_FACE_COORD(  /* PLAYER_PED_ID */ sub_1262(), 108.04780000, 33.29097000, 4.15390500, 1, 1085905306 );
    };;;
     /* MAL_SETPEDVISIBLE */ sub_71295(  /* PLAYER_PED_ID */ sub_1262(), 0 );
     /* NIS_CREATE_STATIC_CAM */ sub_71458( ref l_U1539, 96.97000000, 38.13000000, 4.50000000, -9.51000000, 0.00000000, -121.44000000, 35.04000000, 3000 );
     /* NIS_PLAY_STATIC_CAMERA */ sub_71693( ref l_U1539 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
    SHAKE_CAM( l_U1539._fU0,  /* F_CAM_SHAKE_WOBBLY */ sub_71818(), 0.25000000 );
    SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1300(), 1, 0 );
    if (l_U277._fU548)
    {
        SET_PED_SHOOTS_AT_COORD( g_U4392, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U724, 65488, g_U649 ) );
    }
     /* MAL_ESA_TELEPORTTOSPAWN */ sub_71953( ref l_U778, 0, -1 );
     /* MAL_ESA_VISIBLE */ sub_49560( ref l_U778, 1, 0, -1 );
     /* MAL_ESA_FREEZE */ sub_48645( ref l_U778, 0, 0, -1 );
     /* MAL_ESA_INVINCIBLE */ sub_48804( ref l_U778, 0, 0, -1 );
     /* MAL_ESA_SETLOCKEDANDREGISTEREDONPLAYER */ sub_72240( ref l_U778, 0, -1 );
     /* MAL_ESA_ALERTNESSANDEMOTIONSTATE */ sub_72533( ref l_U778, 3, 1 );
     /* MAL_MOVETOPOINTTHENSHOOTATPOINT */ sub_72929( ref l_U778[0]._fU0, 99.61205000, 36.01522000, 4.68080200, 108.58000000, 33.31000000, 2.81000000, 2 );
     /* MAL_ES_PAUSEMOVETOPOINTENTERCOVERPOINT */ sub_73170( ref l_U778[1], 250, 106.21240000, 31.48028000, 2.80341500, "GenCover", "6C71C19F_5F3F49A_Corner2", 1, 0, 1 );
     /* MAL_ES_PAUSEMOVETOPOINTENTERCOVERPOINT */ sub_73170( ref l_U778[2], 0, 107.49020000, 43.20616000, 2.80383400, "GenCover", "6C71C19F_B2EF0638_Corner1", 1, 0, 1 );
     /* MAL_ES_PAUSEMOVETOPOINTENTERCOVERPOINT */ sub_73170( ref l_U778[3], 1000, 114.26490000, 38.33852000, 3.59495500, "GenCover", "6C71C19F_937588CA_Popover1", 1, 0, 1 );
     /* P_CREATE_AND_START_TIMER */ sub_66549( ref l_U1579, 500 );
     /* P_CREATE_AND_START_TIMER */ sub_66549( ref l_U1588, 1000 );
    AUDIO_MUSIC_PLAY_ONESHOT();
    AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1_2_3", "", 0, 3000, -1, -1082130432, 0 );
    return;
}

/* MAL_PEDPLAYERACTIONTREENODE */ void sub_70707(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_ACTION_TREE_PLAY_NODE( uParam0, uParam1 );
    }
    return;
}

/* MAL_COMPAREPLAYERPOSAXIS */ int sub_70950(unknown uParam0, unknown uParam1, float fParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    float fVar8;

    uVar5 = { /* MAL_GETPEDCOORDS */ sub_68813(  /* PLAYER_PED_ID */ sub_1262() )};
    if (ARE_STRINGS_EQUAL( uParam0, "X" ))
    {
        fVar8 = uVar5._fU0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "Y" ))
    {
        fVar8 = uVar5._fU4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "Z" ))
    {
        fVar8 = uVar5._fU8;
    };;;
    if (ARE_STRINGS_EQUAL( uParam1, "Greater" ))
    {
        if (fVar8 > fParam2)
        {
            return 1;
        }
    }
    else if (ARE_STRINGS_EQUAL( uParam1, "Less" ))
    {
        if (fVar8 < fParam2)
        {
            return 1;
        }
    }
    return 0;
}

/* MAL_SETPEDVISIBLE */ void sub_71295(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_VISIBLE( uParam0, uParam1 );
    }
    else
    {
         /* MAL_WRITESCRIPTLOG */ sub_8194( "MAL_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

/* NIS_CREATE_STATIC_CAM */ void sub_71458(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_2449( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U723, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* NIS_PLAY_STATIC_CAMERA */ void sub_71693(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_2599( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

/* F_CAM_SHAKE_WOBBLY */ string sub_71818()
{
    return "WOBBLY_SHAKE";
}

/* MAL_ESA_TELEPORTTOSPAWN */ void sub_71953(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
         /* MAL_ES_TELEPORTTOSPAWN */ sub_72031( (uParam0^)[I] );
    }
    return;
}

/* MAL_ES_TELEPORTTOSPAWN */ void sub_72031(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43)
{
     /* MAL_ES_TELEPORT */ sub_72084( uParam0, uParam0._fU56, uParam0._fU68 );
    return;
}

/* MAL_ES_TELEPORT */ void sub_72084(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47)
{
    if (NOT (IS_PED_DEAD( uParam0._fU0 )))
    {
        SET_PED_COORDS( uParam0._fU0, uParam44, 1 );
        SET_PED_HEADING( uParam0._fU0, uParam47 );
    }
    return;
}

/* MAL_ESA_SETLOCKEDANDREGISTEREDONPLAYER */ void sub_72240(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
         /* MAL_REGISTERTARGET */ sub_72336( ref (uParam0^)[I]._fU0,  /* PLAYER_PED_ID */ sub_1262() );
         /* MAL_SETLOCKEDTARGET */ sub_72429( ref (uParam0^)[I]._fU0,  /* PLAYER_PED_ID */ sub_1262() );
    }
    return;
}

/* MAL_REGISTERTARGET */ void sub_72336(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETLOCKEDTARGET */ void sub_72429(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_ESA_ALERTNESSANDEMOTIONSTATE */ void sub_72533(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* MAL_ES_ALERTNESSANDEMOTIONSTATE */ sub_72604( ref (uParam0^)[I], uParam1, uParam2 );
    }
    return;
}

/* MAL_ES_ALERTNESSANDEMOTIONSTATE */ void sub_72604(int iParam0, unknown uParam1, unknown uParam2)
{
     /* MAL_SETPEDALERTNESSANDEMOTIONSTATE */ sub_72656( iParam0 + 0, uParam1, uParam2 );
    return;
}

/* MAL_SETPEDALERTNESSANDEMOTIONSTATE */ void sub_72656(unknown uParam0, unknown uParam1, unknown uParam2)
{
     /* MAL_SETPEDALERTNESS */ sub_72707( uParam0, uParam1 );
     /* MAL_SETPEDEMOTIONSTATION */ sub_72779( uParam0, uParam2 );
    return;
}

/* MAL_SETPEDALERTNESS */ void sub_72707(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_ALERTNESS( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETPEDEMOTIONSTATION */ void sub_72779(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_EMOTION_STATE( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_MOVETOPOINTTHENSHOOTATPOINT */ void sub_72929(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    unknown uVar10;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam7 );
        OPEN_SEQUENCE_TASK( ref uVar10 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uParam4, 3, 20000, 1048576000, 0, 0 );
        TASK_SHOOT_AT_COORD( 0, uParam1, 9999999, 0, 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar10 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar10 );
        CLEAR_SEQUENCE_TASK( uVar10 );
    }
    return;
}

/* MAL_ES_PAUSEMOVETOPOINTENTERCOVERPOINT */ void sub_73170(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, boolean bParam8, boolean bParam9)
{
    unknown uVar12;

    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        OPEN_SEQUENCE_TASK( ref uVar12 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_PAUSE( 0, uParam1 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uParam2, 3, -1, 1048576000, 0, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        if (bParam8)
        {
            TASK_COMBAT_MOVE_TO_COVER( 0, uParam5, uParam6,  /* PLAYER_PED_ID */ sub_1262() );
        }
        else
        {
            TASK_COMBAT_MOVE_TO_COVER( 0, uParam5, uParam6, 0 );
        }
        CLOSE_SEQUENCE_TASK( uVar12 );
        TASK_PERFORM_SEQUENCE( iParam0->_fU0, uVar12 );
        CLEAR_SEQUENCE_TASK( uVar12 );
        if (bParam7)
        {
            SET_PED_FLAG_LOCK_TO_COVER( iParam0->_fU0, 1 );
        }
        if (bParam9)
        {
            SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( iParam0->_fU0, 1 );
        }
    }
    return;
}

/* NIS_IS_SHOT_FINISHED */ int sub_73900(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || ( /* ISTIMERDONE */ sub_2732( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || ( /* ISTIMERDONE */ sub_2732( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

/* NIS_RETURN_TO_GAMEPLAY_CAM */ void sub_74173(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

/* P_ENABLE_PLAYER_TO_FIGHT */ void sub_74479()
{
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
    {
        SET_PED_EMOTION_STATE(  /* PLAYER_PED_ID */ sub_1262(), 3 );
    }
    SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1300(), 1 );
    SET_ADRENALINE_NOT_ALLOW( 0 );
    return;
}

/* P_PASSOS_HEADTRACK_PRESSROOM_CS */ void sub_74576()
{
    if ((NOT (IS_PED_DEAD( l_U778[0]._fU0 ))) AND (NOT (IS_PED_DEAD( g_U4392 ))))
    {
        TASK_LOOK_AT_PED( g_U4392, l_U778[0]._fU0, -1, 0 );
    }
    return;
}

/* P_START_SP_CHALLENGES */ void sub_74693()
{
     /* WRITESCRIPTLOG */ sub_734( "CCB", "P_START_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_734( "CCB", "Starting the Stadium_Media context...", 0 );
    START_CONTEXT( "Stadium_Media" );
    return;
}

/* MAL_HASPLAYERFIRED */ int sub_75126(unknown uParam0)
{
    int iVar3;

    iVar3 = nil;
    if (HAS_SHOT_BEEN_FIRED_IN_AREA(  /* MAL_GETPEDCOORDS */ sub_68813(  /* PLAYER_PED_ID */ sub_1262() ), 2.00000000, uParam0, ref iVar3 ))
    {
        if (iVar3 == ( /* PLAYER_PED_ID */ sub_1262()))
        {
             /* MAL_WRITESCRIPTLOG */ sub_8194( "MAL_HasPlayerFired RETURNING TRUE" );
            return 1;
        }
    }
    return 0;
}

/* F_GETRANDOMINTINRANGE */ void sub_75527(unknown uParam0, int iParam1)
{
    int Result;

    Result = GET_RANDOM_INT_IN_RANGE( uParam0, iParam1 + 1 );
    if (Result > iParam1)
    {
        Result = iParam1;
    }
    return Result;
}

/* MAL_ISACTINTCOMPLETED */ int sub_75679(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (( /* MAL_GETACTINTSTATUS */ sub_75718( (uParam0^), uParam1 )) == 1)
    {
        if (bParam2)
        {
             /* MAL_FINISHACTINT */ sub_75806( uParam0, uParam1 );
        }
        return 1;
    }
    return 0;
}

/* MAL_GETACTINTSTATUS */ int sub_75718(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 );
    }
    return 0;
}

/* MAL_FINISHACTINT */ void sub_75806(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_ES_UNBLOCKANDCOMBATPLAYER */ void sub_76051(int iParam0, unknown uParam1)
{
     /* MAL_UNBLOCKANDCOMBATPLAYER */ sub_76106( iParam0 + 0, iParam0->_fU80, uParam1 );
    return;
}

/* MAL_UNBLOCKANDCOMBATPLAYER */ void sub_76106(unknown uParam0, unknown uParam1, unknown uParam2)
{
     /* MAL_UNBLOCKANDCOMBATPED */ sub_76156( uParam0,  /* PLAYER_PED_ID */ sub_1262(), uParam1, uParam2 );
    return;
}

/* MAL_UNBLOCKANDCOMBATPED */ void sub_76156(unknown uParam0, unknown uParam1, unknown uParam2, boolean bParam3)
{
    unknown uVar6;

     /* MAL_WRITESCRIPTLOG */ sub_8194( "MAL_UnblockAndCombatPed" );
    OPEN_SEQUENCE_TASK( ref uVar6 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
         /* MAL_WRITESCRIPTLOG */ sub_8194( "MAL_UnblockAndCombatPed: Victim is not dead" );
        TASK_COMBAT_PED( 0, uParam1 );
    }
    CLOSE_SEQUENCE_TASK( uVar6 );
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
         /* MAL_WRITESCRIPTLOG */ sub_8194( "MAL_UnblockAndCombatPed: Ped is not dead" );
        if (bParam3)
        {
            CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        }
        else
        {
            CLEAR_PED_TASKS( (uParam0^) );
        }
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam2 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar6 );
    }
    CLEAR_SEQUENCE_TASK( uVar6 );
    return;
}

/* MAL_ESA_CLEARHIDEINCOVER */ void sub_76495(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
         /* MAL_ES_CLEARHIDEINCOVER */ sub_76570( ref (uParam0^)[I] );
    }
    return;
}

/* MAL_ES_CLEARHIDEINCOVER */ void sub_76570(int iParam0)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
         /* MAL_ES_CLEARSTAYINCOVER */ sub_76626( iParam0 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( iParam0->_fU0, 0 );
    }
    return;
}

/* MAL_ES_CLEARSTAYINCOVER */ void sub_76626(int iParam0)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( iParam0->_fU0, 0 );
    }
    return;
}

/* MAL_ESA_GETFIRSTLIVINGPED */ void sub_76825(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            return (uParam0^)[I]._fU0;
        }
    }
    return nil;
}

/* MAL_GIVEPEDHARDTETHER */ void sub_76964(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
         /* P_TETHERPED */ sub_49087( ref uParam1, (uParam0^), 1 );
    }
    return;
}

/* P_PRESS_ROOM_CS_SHOOTS_PASSOS */ void sub_77271()
{
    unknown uVar2;
    unknown uVar3;

     /* NIS_PRE_SETUP */ sub_60527( 1, 0, 0, 0 );
     /* MAL_ESA_STANDSTILL */ sub_77326( ref l_U778 );
    uVar2 = GET_PED_HEADING( g_U4392 );
    PED_ACTION_TREE_PLAY_NODE( g_U4392, "/Global/INTERROGATION/INTERROGATION_SEQ/PASSOS/VIG_23/IN_COVER_IDLE/ABOUT_TO_DIE" );
    SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U4392, 0 );
    SET_PED_AS_ONE_SHOT_KILL( g_U4392, 1 );
     /* MAL_TELEPORTPED */ sub_56052( g_U4392, 98.20660000, 36.75754000, 2.80644000, uVar2 );
    uVar3 =  /* MAL_ESA_GETFIRSTLIVINGPED */ sub_76825( ref l_U778 );
     /* MAL_TELEPORTPED */ sub_56052( uVar3, 99.14936000, 40.06298000, 2.80661100, 168.87000000 );
     /* MAL_SETLOCKEDTARGET */ sub_72429( ref uVar3, g_U4392 );
     /* MAL_REGISTERTARGET */ sub_72336( ref uVar3, g_U4392 );
     /* MAL_AIMGUNATPED */ sub_77749( uVar3, g_U4392, -1, 1 );
     /* MAL_AIMTHENSHOOTATPED */ sub_77838( ref uVar3, g_U4392, -256437761, 0 );
    return;
}

/* MAL_ESA_STANDSTILL */ void sub_77326(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* MAL_STANDSTILL */ sub_77381( ref (uParam0^)[I]._fU0 );
    }
    return;
}

/* MAL_STANDSTILL */ void sub_77381(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_STAND_STILL( 0, -1 );
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    return;
}

/* MAL_AIMGUNATPED */ void sub_77749(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( uParam0 ))))
    {
        TASK_AIM_GUN_AT_PED( uParam0, uParam1, uParam2, uParam3 );
    }
    return;
}

/* MAL_AIMTHENSHOOTATPED */ void sub_77838(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        OPEN_SEQUENCE_TASK( ref uVar6 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (NOT (IS_PED_DEAD( uParam1 )))
        {
            TASK_AIM_GUN_AT_PED( 0, uParam1, 50, uParam3 );
            TASK_SHOOT_AT_PED( 0, uParam1, 9999999, uParam2, uParam3, 0, 0 );
        }
        CLOSE_SEQUENCE_TASK( uVar6 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar6 );
        CLEAR_SEQUENCE_TASK( uVar6 );
    }
    return;
}

/* F_ISPEDINTRIGGERREGION */ void sub_78130(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int I;
    int J;

    Result = 0;
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        for ( I = 0; I < iParam0->_fU508; I++ )
        {
            if ( /* F_ISPEDINTRIGGERBOX */ sub_66913( uParam1, iParam0->_fU0[I] ))
            {
                Result = 1;
            }
        }
    }
    if ((uParam2) AND (Result))
    {
        for ( J = 0; J < iParam0->_fU508; J++ )
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( ref iParam0->_fU0[J]._fU0, 0 );
        }
    }
    iParam0->_fU552 = 1;
    return Result;
}

/* MAL_ESA_GETNUMLIVINGPEDS */ void sub_78342(unknown uParam0)
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            Result++;
        }
    }
    return Result;
}

/* F_GET_PASSOS_TARGET */ void sub_78493()
{
    int Result;
    int I;

    Result = nil;
    I = 0;
    for ( I = 0; I < l_U778; I++ )
    {
        if ((NOT ( /* F_ISPEDINTRIGGERREGION */ sub_78130( ref l_U1672, l_U778[I]._fU0, 0 ))) AND (NOT (IS_PED_DEAD( l_U778[I]._fU0 ))))
        {
            if (Result == nil)
            {
                Result = l_U778[I]._fU0;
            }
            else if (( /* GET_DISTANCE_BETWEEN_PEDS */ sub_78648( g_U4392, l_U778[I]._fU0, 0 )) < ( /* GET_DISTANCE_BETWEEN_PEDS */ sub_78648( g_U4392, Result, 0 )))
            {
                Result = l_U778[I]._fU0;
            }
        }
    }
    return Result;
}

/* GET_DISTANCE_BETWEEN_PEDS */ void sub_78648(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    }
    if (bParam2)
    {
        return VDIST( uVar5, uVar8 );
        break;
    }
    return VDIST( uVar5._fU0, uVar5._fU4, 0, uVar8._fU0, uVar8._fU4, 0 );
}

/* MAL_SETACTINT */ void sub_78959(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_SET_ACTION_INTENTION( uParam0, uParam1, uParam2, g_U649 );
    }
    return;
}

/* MAL_SETLOCKEDANDREGISTEREDONPED */ void sub_79036(unknown uParam0, unknown uParam1)
{
     /* MAL_REGISTERTARGET */ sub_72336( uParam0, uParam1 );
     /* MAL_SETLOCKEDTARGET */ sub_72429( uParam0, uParam1 );
    return;
}

/* P_PASSOS_MOVES_TO_PRESS_ROOM_EXIT */ void sub_79310()
{
    PED_SET_ACTION_INTENTION( g_U4392, 50, 10000, g_U649 );
     /* P_CLEAR_PED_HEADTRACKING */ sub_44320( g_U4392 );
     /* P_CREATE_AND_START_TIMER */ sub_66549( ref l_U1275, 6500 );
    return;
}

/* P_HANDLE_PASSOS_INTERRUPTIONS */ void sub_79643(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
     /* MAL_HANDLEPASSOSINTERRUPTIONSWITHDIALOGUE */ sub_79769( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, 79697, 1077936128, 1069547520, 1065353216 );
    return;
}

/* MAL_DUMMYPASSOSINTERRUPTDIALOGUECALL */ void sub_79697(unknown uParam0)
{
    return;
}

/* MAL_HANDLEPASSOSINTERRUPTIONSWITHDIALOGUE */ void sub_79769(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    unknown uVar12;

    if (( /* MAL_GETACTINTSTATUS */ sub_75718( uParam0, 29 )) == 3)
    {
        uVar12 = nil;
        if ((( /* MAL_HASPLAYERFIRED */ sub_75126( 1 )) AND (IS_PED_IN_CROSSHAIR_CYLINDER( uParam0, 2, 10000, 0, -1082130432 ))) || (HAS_BULLET_IMPACTED_IN_AREA(  /* MAL_GETPEDCOORDS */ sub_68813( uParam0 ), 3, ref uVar12 )))
        {
             /* MAL_WRITESCRIPTLOG */ sub_8194( "PLAYER SHOT AT PASSOS" );
             /* MAL_SETACTINWITHFOCUSPOS */ sub_68889( ref uParam0,  /* MAL_GETPEDCOORDS */ sub_68813(  /* PLAYER_PED_ID */ sub_1262() ), 34, 1000 );
            SET_PED_PRIMARY_LOOKAT( uParam0,  /* PLAYER_PED_ID */ sub_1262() );
            (uParam1^) = 1;
            break;
            uParam6;
            0;
            break;
        }
        if (NOT (uParam2^))
        {
            if ((( /* MAL_GETACTINTSTATUS */ sub_75718( uParam0, 32 )) != 3) AND ((( /* MAL_GETACTINTSTATUS */ sub_75718( uParam0, 33 )) != 3) AND (IS_PED_TOUCHING_PED(  /* PLAYER_PED_ID */ sub_1262(), uParam0 ))))
            {
                 /* MAL_WRITESCRIPTLOG */ sub_8194( "BAD TOUCH!!" );
                (uParam2^) = 1;
                (uParam1^) = 1;
                 /* MAL_SETACTINWITHFOCUSPOS */ sub_68889( ref uParam0,  /* MAL_GETPEDCOORDS */ sub_68813(  /* PLAYER_PED_ID */ sub_1262() ), 35, 1000 );
                SET_PED_PRIMARY_LOOKAT( uParam0,  /* PLAYER_PED_ID */ sub_1262() );
                break;
                uParam6;
                1;
                break;
            }
        }
        else if (NOT (IS_PED_TOUCHING_PED(  /* PLAYER_PED_ID */ sub_1262(), uParam0 )))
        {
            (uParam2^) = 0;
        }
        if (NOT (uParam3^))
        {
            if ( /* MAL_CHECKANGLEANDDISTANCEBETWEENPEDANDPLAYER */ sub_80141( ref uParam0, 300, 100, -1, 0, 0 ))
            {
                if ((IS_CONTROL_PRESSED( 0, 6 )) AND (IS_PED_IN_CROSSHAIR_CYLINDER( uParam0, 1, 10000, 0, -1082130432 )))
                {
                    (uParam1^) = 1;
                    (uParam3^) = 1;
                     /* MAL_SETACTINWITHFOCUSPOS */ sub_68889( ref uParam0,  /* MAL_GETPEDCOORDS */ sub_68813(  /* PLAYER_PED_ID */ sub_1262() ), 32, 1000 );
                    SET_PED_PRIMARY_LOOKAT( uParam0,  /* PLAYER_PED_ID */ sub_1262() );
                     /* MAL_WRITESCRIPTLOG */ sub_8194( "PLAYER AIMING AT PASSOS" );
                    break;
                    uParam6;
                    2;
                    break;
                }
            }
        }
        else if ((NOT (IS_CONTROL_PRESSED( 0, 6 ))) || (NOT (IS_PED_IN_CROSSHAIR_CYLINDER( uParam0, 1.50000000, 10000, 0, -1082130432 ))))
        {
            if (( /* MAL_GETACTINTSTATUS */ sub_75718( uParam0, 32 )) != 3)
            {
                (uParam3^) = 0;
                 /* MAL_WRITESCRIPTLOG */ sub_8194( "PLAYER NO LONGER AIMING AT PASSOS" );
            }
        }
        if (NOT (uParam1^))
        {
            if (( /* MAL_CHECKANGLEANDDISTANCEBETWEENPEDANDPLAYER */ sub_80141( ref uParam0, uParam9, 180, -1, 46, 0 )) || (( /* MAL_CHECKANGLEANDDISTANCEBETWEENPEDANDPLAYER */ sub_80141( ref uParam0, uParam8, 45, -1, 31, 0 )) || ( /* MAL_CHECKANGLEANDDISTANCEBETWEENPEDANDPLAYER */ sub_80141( ref uParam0, uParam7, 30, -1, 0, 0 ))))
            {
                 /* MAL_WRITESCRIPTLOG */ sub_8194( "INTERRUPTING PASSOS" );
                 /* MAL_SETACTINWITHFOCUSPOS */ sub_68889( ref uParam0,  /* MAL_GETPEDCOORDS */ sub_68813(  /* PLAYER_PED_ID */ sub_1262() ), 33, 1000 );
                SET_PED_PRIMARY_LOOKAT( uParam0,  /* PLAYER_PED_ID */ sub_1262() );
                (uParam1^) = 1;
            }
        }
        else if (( /* MAL_CHECKANGLEANDDISTANCEBETWEENPEDANDPLAYER */ sub_80141( ref uParam0, -1, 180, uParam8 + 1, 91, 0 )) || ( /* MAL_CHECKANGLEANDDISTANCEBETWEENPEDANDPLAYER */ sub_80141( ref uParam0, -1, 90, uParam7 + 1, 0, 0 )))
        {
            if ((NOT (uParam2^)) AND (NOT (uParam3^)))
            {
                if (( /* MAL_ISACTINTCOMPLETED */ sub_75679( ref uParam0, 35, 1 )) || (( /* MAL_ISACTINTCOMPLETED */ sub_75679( ref uParam0, 32, 1 )) || (( /* MAL_ISACTINTCOMPLETED */ sub_75679( ref uParam0, 34, 1 )) || ( /* MAL_ISACTINTCOMPLETED */ sub_75679( ref uParam0, 33, 1 )))))
                {
                     /* MAL_FINISHACTINT */ sub_75806( ref uParam0, 33 );
                     /* MAL_FINISHACTINT */ sub_75806( ref uParam0, 34 );
                     /* MAL_FINISHACTINT */ sub_75806( ref uParam0, 32 );
                     /* MAL_FINISHACTINT */ sub_75806( ref uParam0, 35 );
                     /* MAL_FINISHACTINT */ sub_75806( ref uParam0, 31 );
                     /* MAL_SETACTINT */ sub_78959( uParam0, 36, 1000 );
                    CLEAR_PED_PRIMARY_LOOKAT( uParam0 );
                    (uParam1^) = 0;
                    (uParam3^) = 0;
                    (uParam2^) = 0;
                    (uParam4^) = 0;
                     /* CREATETIMER */ sub_2449( iParam5,  /* F_GETRANDOMINTINRANGE */ sub_75527( 10000, 15000 ), 1, 0 );
                    return;
                }
            }
        }
        if (( /* MAL_GETACTINTSTATUS */ sub_75718( uParam0, 30 )) == 3)
        {
            if ( /* ISTIMERDONE */ sub_2732( iParam5 ))
            {
                 /* MAL_SETACTINWITHFOCUSPOS */ sub_68889( ref uParam0,  /* MAL_GETPEDCOORDS */ sub_68813(  /* PLAYER_PED_ID */ sub_1262() ), 31, 1000 );
                (uParam4^)++;
                break;
                uParam6;
                3;
                break;
            }
            else if ((uParam4^) < 3)
            {
                if ((iParam5->_fU16) || (NOT ( /* HASTIMERBEENACTIVATED */ sub_2315( iParam5 ))))
                {
                     /* CREATETIMER */ sub_2449( iParam5,  /* F_GETRANDOMINTINRANGE */ sub_75527( 10000, 15000 ), 1, 0 );
                     /* STARTTIMER */ sub_2599( iParam5 );
                }
            }
        }
    }
     /* MAL_ISACTINTCOMPLETED */ sub_75679( ref uParam0, 31, 1 );
     /* MAL_ISACTINTCOMPLETED */ sub_75679( ref uParam0, 36, 1 );
    return;
}

/* MAL_CHECKANGLEANDDISTANCEBETWEENPEDANDPLAYER */ int sub_80141(unknown uParam0, float fParam1, unknown uParam2, float fParam3, float fParam4, boolean bParam5)
{
    float fVar8;

    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        fVar8 =  /* GET_DISTANCE_BETWEEN_PEDS */ sub_78648( (uParam0^),  /* PLAYER_PED_ID */ sub_1262(), 0 );
        if ((fVar8 > fParam1) AND (fParam1 > -1))
        {
            return 0;
        }
        else if ((fVar8 < fParam3) AND (fParam3 > -1))
        {
            return 0;
        }
        else if (NOT (IS_PED_FACING_PED( (uParam0^),  /* PLAYER_PED_ID */ sub_1262(), uParam2 )))
        {
            return 0;
        }
        else if ((IS_PED_FACING_PED( (uParam0^),  /* PLAYER_PED_ID */ sub_1262(), fParam4 )) AND (fParam4 > 0))
        {
            return 0;
        }
        else if (bParam5)
        {
            PRINTSTRING( "MAL_CheckAngleAndDistanceBetweenPedAndPlayer: Actual Distance: " );
            PRINTFLOAT( fVar8 );
            PRINTSTRING( " MAX DISTANCE: " );
            PRINTFLOAT( fParam1 );
            PRINTSTRING( " MIN DISTANCE: " );
            PRINTFLOAT( fParam3 );
            PRINTSTRING( " MAX ANGLE: " );
            PRINTFLOAT( uParam2 );
            PRINTSTRING( " MIN ANGLE: " );
             /* WRITE_FLOAT */ sub_46666( fParam4 );
        }
        return 1;;;;;
    }
    return 0;
}

/* P_PASSOS_HEADTRACK_PRESSROOM_PLAYER */ void sub_81337()
{
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() ))) AND (NOT (IS_PED_DEAD( g_U4392 ))))
    {
        TASK_LOOK_AT_PED( g_U4392,  /* PLAYER_PED_ID */ sub_1262(), -1, 0 );
    }
    return;
}

/* IS_ANY_SPEECH_CURRENTLY_PLAYING */ void sub_81456()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

/* P_HANDLE_AMBIENT_SPEECH */ void sub_81556()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_66837( ref l_U1303, 0 ))
    {
         /* WRITESCRIPTLOG */ sub_734( "MF", "Playing Spech: SSTD_PGAR", 0 );
         /* P_SPEECH_PLAY_MONOLOGUE */ sub_81658( "SSTD_PGAR", ref uVar2 );
        return;
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_66837( ref l_U1324, 0 ))
    {
         /* WRITESCRIPTLOG */ sub_734( "MF", "Playing Spech: SSTD_TAGP", 0 );
         /* P_SPEECH_PLAY_MONOLOGUE */ sub_81658( "SSTD_TAGP", ref uVar2 );
        return;
    }
    return;
}

/* P_SPEECH_PLAY_MONOLOGUE */ void sub_81658(unknown uParam0, unknown uParam1)
{
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_66642( uParam1 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 0,  /* PLAYER_PED_ID */ sub_1262(), "MAX", uParam1, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 1,  /* PLAYER_PED_ID */ sub_1262(), "MAX", uParam1, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_56929( uParam0, uParam1, 8, 1 );
    return;
}

/* P_PLAY_STAIRWELL_GUNFIRE_SOUNDS */ void sub_82242()
{
     /* WRITESCRIPTLOG */ sub_734( "[SA]", "Enabling static emitter S_STAD_SE_STAIRS_SHOTS.", 0 );
    ENABLE_STATIC_EMITTER( "S_STAD_SE_STAIRS_SHOTS", 1 );
    return;
}

/* P_DIRTY_HALLWAY_CS */ void sub_82416()
{
     /* MAL_WRITESCRIPTLOG */ sub_8194( "P_DIRTY_HALLWAY_CS" );
     /* P_CREATEPEDSTRUCT */ sub_43451( ref l_U1130, 113.56140000, 4.45019400, 2.80016600, 90, g_U2381, 7, 3, 2, 0, 0 );
    l_U1129 =  /* MAL_CREATEPED */ sub_46021( ref l_U1129, ref l_U1130, 1, 0, 1 );
     /* MAL_GIVEPEDWEAPON */ sub_46317( l_U1129, 434544317, 25000, 0, 0 );
    if (NOT (IS_PED_DEAD( l_U1129 )))
    {
        SET_PERSISTENT_PED_VARIATION( l_U1129, "M3_CS_15_Avg" );
        SET_PED_AI_TEMPLATE( l_U1129, ref g_U3888 );
        SET_PED_COMBAT_RANGE_MIN( l_U1129, 3 );
        SET_PED_COMBAT_RANGE_MAX( l_U1129, 15 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1129, 1 );
        SET_PED_CAN_INTERACT_WITH_DOORS( l_U1129, 1 );
        SET_PED_COMBAT_MOVEMENT( l_U1129, 0 );
        SET_ROOM_FOR_PED_BY_NAME( l_U1129, "Room_Offices" );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U1129, 1 );
        SET_PED_PRIMARY_LOOKAT( l_U1129,  /* PLAYER_PED_ID */ sub_1262() );
    }
     /* MAL_SETLOCKEDANDREGISTEREDONPLAYER */ sub_82742( ref l_U1129 );
     /* MAL_SETPEDALERTNESS */ sub_72707( ref l_U1129, 3 );
     /* MAL_REGISTERPEDWITHISEQ */ sub_82842( l_U1129, 1090240116, "DoorKicker" );
    ISEQ_START( 1090240116 );
    WAIT( 0 );
     /* P_OPENDOOR */ sub_18967( ref g_U3143, 1, 0, 1065353216 );
     /* MAL_UNBLOCKANDCOMBATPLAYER */ sub_76106( ref l_U1129, 0, 0 );
     /* MAL_SETCANTRIGGERBULLETCAM */ sub_58235( l_U1129, 1 );
    SET_BULLET_CAM_PREF( l_U1129, "all_01_far_failsafe", "all_01_med_failsafe", "all_01_far_failsafe", "all_01_med_failsafe", 0, "all_01_far_failsafe", "all_01_med_failsafe", "all_01_far_failsafe", "all_01_med_failsafe", "all_01_far_failsafe", "all_01_med_failsafe", "all_01_far_failsafe" );
    return;
}

/* MAL_SETLOCKEDANDREGISTEREDONPLAYER */ void sub_82742(unknown uParam0)
{
     /* MAL_SETLOCKEDANDREGISTEREDONPED */ sub_79036( uParam0,  /* PLAYER_PED_ID */ sub_1262() );
    return;
}

/* MAL_REGISTERPEDWITHISEQ */ void sub_82842(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        ISEQ_REGISTER_ENTITY( uParam1, uParam2, uParam0, 0 );
    }
    return;
}

/* F_ISPEDINTRIGGERBOXFIRSTTIME */ void sub_83274(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 =  /* F_ISPEDINTRIGGERBOX */ sub_66913( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

/* P_PASSOS_SHOOTS_DIRTY_CS */ void sub_83628()
{
     /* WRITESCRIPTLOG */ sub_734( "GA", "P_PASSOS_SHOOTS_DIRTY_CS start", 0 );
    l_U1350 = 1;
    SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U1129, 0 );
     /* NIS_PRE_SETUP */ sub_60527( 1, 0, 0, 1 );
    DO_SCREEN_FADE_OUT( 0 );
    CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1262() );
     /* TELEPORTPED */ sub_54974(  /* PLAYER_PED_ID */ sub_1262(), 114.20580000, 2.93873200, 2.80012700, 180.00000000 );
     /* MAL_SETPEDVISIBLE */ sub_71295(  /* PLAYER_PED_ID */ sub_1262(), 0 );
     /* NIS_CREATE_STATIC_CAM */ sub_71458( ref l_U1207, 108.69310000, 7.63253500, 4.26966300, -6.14394600, 0.00001300, -137.77320000, 45.00000000, 2000 );
    SET_PED_INVINCIBLE( g_U4392, 1 );
    if (NOT (IS_PED_DEAD( l_U1129 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1129, 1 );
    }
     /* P_PASSOS_MOVE_INTO_HALLWAY */ sub_83891();
    CAMERA_PLAY_ANIMATED( "LEVEL_S_STAD_CP_02", "VIG_24_STAD_PASS_MEDIA_B_CAM", 1, 107.72300000, 18.50000000, 4.37300000, 0.00000000, 0, 0 );
    DO_SCREEN_FADE_IN( 0 );
     /* P_CREATE_AND_START_TIMER */ sub_66549( ref l_U1238, 3300 );
    if (NOT (IS_PED_DEAD( l_U1129 )))
    {
        SET_PED_INVINCIBLE( l_U1129, 1 );
    }
     /* WRITESCRIPTLOG */ sub_734( "GA", "P_PASSOS_SHOOTS_DIRTY_CS end", 0 );
    return;
}

/* P_PASSOS_MOVE_INTO_HALLWAY */ void sub_83891()
{
     /* WRITESCRIPTLOG */ sub_734( "GA", "P_PASSOS_MOVE_INTO_HALLWAY start", 0 );
    if (NOT (IS_PED_DEAD( g_U4392 )))
    {
        ISEQ_UNREGISTER_ENTITY( 1743875163, "s_stad_inter_pas" );
         /* FINISHALLACTIONINTENTIONS */ sub_84030( g_U4392 );
        ISEQ_REGISTER_ENTITY( -1324066065, "PASSOS_HALLWAY", g_U4392, 0 );
         /* TELEPORTPED */ sub_54974( g_U4392, l_U771, 180.00000000 );
        ISEQ_START( -1324066065 );
    }
     /* WRITESCRIPTLOG */ sub_734( "GA", "P_PASSOS_MOVE_INTO_HALLWAY end", 0 );
    return;
}

/* FINISHALLACTIONINTENTIONS */ void sub_84030(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
         /* WRITESCRIPTLOG */ sub_734( "[SA]", "Clearing ACT_INT_SEQ_ACTION01 - ACT_INT_SEQ_ACTION12 for ped.", 0 );
        PED_FINISH_ACTION_INTENTION( uParam0, 47 );
        PED_FINISH_ACTION_INTENTION( uParam0, 48 );
        PED_FINISH_ACTION_INTENTION( uParam0, 49 );
        PED_FINISH_ACTION_INTENTION( uParam0, 50 );
        PED_FINISH_ACTION_INTENTION( uParam0, 51 );
        PED_FINISH_ACTION_INTENTION( uParam0, 52 );
        PED_FINISH_ACTION_INTENTION( uParam0, 53 );
        PED_FINISH_ACTION_INTENTION( uParam0, 54 );
        PED_FINISH_ACTION_INTENTION( uParam0, 55 );
        PED_FINISH_ACTION_INTENTION( uParam0, 56 );
        PED_FINISH_ACTION_INTENTION( uParam0, 57 );
        PED_FINISH_ACTION_INTENTION( uParam0, 58 );
    }
    return;
}

/* P_PASSOS_MOVE_DOWN_HALLWAY */ void sub_84750()
{
    vector vVar2;
    float fVar5;
    unknown uVar6;

     /* WRITESCRIPTLOG */ sub_734( "GA", "P_PASSOS_MOVE_DOWN_HALLWAY start", 0 );
    l_U1350 = 1;
    SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U1129, 0 );
    if (NOT (IS_PED_DEAD( g_U4392 )))
    {
        if (ISEQ_QUERY_ENTITY_STATE( -1324066065, "PASSOS_HALLWAY", 3 ))
        {
            PED_SET_ACTION_INTENTION( g_U4392, 48, 1000, g_U649 );
        }
        else
        {
            ISEQ_UNREGISTER_ENTITY( 1743875163, "s_stad_inter_pas" );
             /* FINISHALLACTIONINTENTIONS */ sub_84030( g_U4392 );
            ISEQ_REGISTER_ENTITY( -1324066065, "PASSOS_HALLWAY", g_U4392, 0 );
            ISEQ_START( -1324066065 );
            WAIT( 0 );
             /* MAL_PEDPLAYERACTIONTREENODE */ sub_70707( g_U4392, "/Global/S_STAD_PAS_HAL/SEQ_START/PASSOS_VIG_25_26/WALK_DOWN_HALL" );
        }
         /* TELEPORTPED */ sub_54974( g_U4392, 108.37800000, 7.70600000, 2.82000000, 180.00000000 );
    }
    CAMERA_PLAY_ANIMATED( "LEVEL_S_STAD_CP_02", "VIG_24_STAD_BSMT_HALLWAY_MAX_CAM", 0, 108.56500000, 16.70600000, 4.59200000, 0.00000000, 0, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 0 );
     /* P_CLOSEDOOR */ sub_18448( ref g_U3143, 1 );
    vVar2 = {111.69600000, 3.75600000, 2.80012700};
    fVar5 = 135;
    CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1262() );
     /* P_HOLSTERRIFLEORDUALANDDRAWPISTOL */ sub_51445( ref uVar6, ref uVar6, 1, 0 );
     /* MAL_TELEPORTPLAYER */ sub_85315( vVar2, fVar5, -4.54356400, -6.25519200 );
     /* MAL_REGISTERPEDWITHISEQ */ sub_82842(  /* PLAYER_PED_ID */ sub_1262(), 1708899639, "Max" );
    ISEQ_START( 1708899639 );
     /* MAL_SETPEDVISIBLE */ sub_71295(  /* PLAYER_PED_ID */ sub_1262(), 1 );
     /* CLEANPED */ sub_7216( l_U1129 );
     /* P_CREATEPEDSTRUCT */ sub_43451( ref l_U1130, 111.56170000, 5.04697200, 2.80012700, 180, g_U2381, 7, 3, 2, 0, 0 );
    l_U1129 =  /* MAL_CREATEPED */ sub_46021( ref l_U1129, ref l_U1130, 1, 0, 1 );
    SET_PERSISTENT_PED_VARIATION( l_U1129, "M3_CS_15_Avg" );
     /* P_CREATE_DEAD_BODY */ sub_85551( l_U1129, 0 );
    SET_PED_COORDS( l_U1129, 111.35790000, 3.38634700, 2.80012700, 1 );
    SET_PED_HEADING( l_U1129, 180 );
    DESTROY_CAM( l_U1207._fU0 );
     /* WRITESCRIPTLOG */ sub_734( "MF", "Playing Spech: sss_VCURA", 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 1,  /* PLAYER_PED_ID */ sub_1262(), "MAX", ref l_U660, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 2, g_U4392, "PASSOS", ref l_U660, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_56929( "SSTD_VCUR", ref l_U660, 8, 1 );
    AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1", "", 0, 8000, -1, -1082130432, 0 );
     /* WRITESCRIPTLOG */ sub_734( "GA", "P_PASSOS_MOVE_DOWN_HALLWAY end", 0 );
    return;
}

/* MAL_TELEPORTPLAYER */ void sub_85315(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 =  /* PLAYER_PED_ID */ sub_1262();
     /* MAL_TELEPORTPED */ sub_56052( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

/* P_CREATE_DEAD_BODY */ void sub_85551(unknown uParam0, unknown uParam1)
{
    char[32] cVar4;
    char[32] cVar12;

    StrCopy( ref cVar4, "DAM_DEAD", 32 );
    switch (uParam1)
    {
        case 0:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
        case 1:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_02", 32 );
        break;
        case 2:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_03", 32 );
        break;
        case 3:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_01", 32 );
        break;
        case 4:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_02", 32 );
        break;
        case 5:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_03", 32 );
        break;
        case 6:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_04", 32 );
        break;
        case 7:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_01", 32 );
        break;
        case 8:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_02", 32 );
        break;
        case 9:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_03", 32 );
        break;
        case 10:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_04", 32 );
        break;
        case 11:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_01", 32 );
        break;
        case 12:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_02", 32 );
        break;
        case 13:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_03", 32 );
        break;
        case 14:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_04", 32 );
        break;
        case 15:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_01", 32 );
        break;
        case 16:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_02", 32 );
        break;
        default:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
    }
    REQUEST_ANIM_DICT( ref cVar4, 0 );
    "[doubled result, dropped if not asigned]";
    while (NOT (HAS_ANIM_DICT_LOADED( ref cVar4, 0 )))
    {
        WAIT( 0 );
         /* WRITE_STRING */ sub_7466( "Waiting for anim dict to load..." );
    }
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        ENABLE_PED_PAIN( uParam0, 0 );
        OVERRIDE_MOVER_PHYSICS_ON_RAGDOLL_SLEEP( uParam0, 1 );
        SET_PED_CORPSE_FROM_ANIM( uParam0, ref cVar4, ref cVar12, 1.00000000, 1 );
    }
    return;
}

/* P_HANDLE_RANDOM_IMAGE_FX */ void sub_87665()
{
    if (IS_SCRIPTEDFX_ENABLED() == 1)
    {
        if (l_U1519 == 1)
        {
            if (( /* ISTIMERDONE */ sub_2732( ref l_U1520 )) == 1)
            {
                 /* WRITESCRIPTLOG */ sub_734( "SP", "Playing Random Image FX", 0 );
                PLAY_IMAGEFX( l_U1356[l_U1529]._fU4, 4, 0 );
                 /* CREATETIMER */ sub_2449( ref l_U1520, l_U1356[l_U1529]._fU16 + (GET_RANDOM_INT_IN_RANGE( 6000, 10000 )), 1, 0 );
                 /* STARTTIMER */ sub_2599( ref l_U1520 );
                l_U1529++;
                if (l_U1529 >= l_U1356)
                {
                    l_U1529 = 0;
                }
            }
        }
    }
    return;
}

/* P_PLAY_PASSOS_HALLWAY_DIALOGUE */ void sub_88049()
{
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_66642( ref l_U1176 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 0,  /* PLAYER_PED_ID */ sub_1262(), "MAX", ref l_U1176, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_56687( 1, g_U4392, "PASSOS", ref l_U1176, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_56929( "SSTD_PRPL", ref l_U1176, 8, 1 );
    return;
}

/* MAL_SETPRIMARYLOOKAT */ void sub_88192(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        if ((NOT (IS_PED_DEAD( uParam1 ))) || (IS_PED_DEAD( uParam1 )))
        {
            SET_PED_PRIMARY_LOOKAT( uParam0, uParam1 );
        }
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ void sub_89671(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_89744( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE */ void sub_89744(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_4910( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a MODEL_NAME asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Removing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_REMOVE */ void sub_90236(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_4910( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ANIM_DICT asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_START_CHECKPOINT_THREAD */ void sub_91531(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

/* DISABLETIMER */ void sub_91902(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

/* P_SETDOORAFFECTEDBYBULLETS */ void sub_92432(int iParam0, unknown uParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_18474( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_18558( iParam0 );
    }
    DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( iParam0->_fU0, iParam0->_fU4 ), uParam1 );
    return;
}

/* P_SAVE_IN_STAIRWELL */ void sub_92564()
{
     /* WRITESCRIPTLOG */ sub_734( "GA", "P_SAVE_IN_STAIRWELL start", 0 );
    if (NOT l_U774)
    {
        l_U774 = 1;
    }
    if (g_U855 != 4)
    {
        g_U855 = 4;
         /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_61906( ref l_U77, g_U855,  /* PLAYER_PED_ID */ sub_1262(), g_U2138[4], g_U2256[4], g_U2296[4], g_U2336[4], 1 );
    }
    ISEQ_UNREGISTER_ENTITY( 1743875163, "s_stad_inter_cs" );
     /* CLEANPED */ sub_7216( l_U724 );
     /* CLEANPED */ sub_7216( l_U1129 );
     /* MAL_ESA_CLEAN */ sub_7592( ref l_U778 );
     /* CLEANOBJECT */ sub_7316( l_U733 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_4772( 1743875163, ref g_U1263 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_4772( 1708899639, ref g_U1263 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_4772( 1269878088, ref g_U1263 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_4772( -1324066065, ref g_U1263 );
     /* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ sub_89671( ref l_U113, ref g_U1069 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "LEVEL_S_STAD_CP_02", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "PAS_INT", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "DAM_DEAD", ref g_U1354 );
     /* WRITESCRIPTLOG */ sub_734( "GA", "P_SAVE_IN_STAIRWELL end", 0 );
    return;
}

/* P_UNLOAD_AMED_ANIM_DICTS */ void sub_92975()
{
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "PLGE_RIFLE_CROUCH", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "PLGE_PSTL_CROUCH", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "AMED_RIFLE_CORE", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "AMED_PSTL_CORE", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "AMED_RIFLE_CORE_RELOAD", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "AMED_PSTL_CORE_RELOAD", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "PLGE_RIFLE_HANDSIG", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "PLGE_PSTL_HANDSIG", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "PLGE_RIFLE_ACTIONS", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "PLGE_PSTL_ACTIONS", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "AMED_RIFLE_KNEE", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "AMED_PSTL_KNEE", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "AMED_RIFLE_COVER", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "AMED_PSTL_COVER", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "AMED_RIFLE_REACT", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "AMED_PSTL_REACT", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "AMED_RIFLE_COVER_EXIT", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "AMED_PSTL_COVER_EXIT", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "AMED_PSTL_FULLBODY", ref g_U1354 );
    return;
}

/* P_DIAL_MAX_GUNFIGHT */ void sub_93660()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

     /* WRITESCRIPTLOG */ sub_734( "ML", "P_DIAL_MAX_GUNFIGHT", "---" );
     /* P_SPEECH_PLAY_MONOLOGUE */ sub_81658( "SSTD_GMUS", ref uVar2 );
    return;
}

/* CUTSYS_HANDLETRIGGERTYPEDOOR_NOHOLSTERING */ int sub_93766(int iParam0, unknown uParam1, boolean bParam2, boolean bParam3)
{
    if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_66837( iParam0, 0 )) == 1)
    {
        if (NOT bParam3)
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1262(), 1 );
        }
        if (NOT bParam2)
        {
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1300(), 0 );
        }
    }
    if ((NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_70345( (iParam0^) ))) AND (iParam0->_fU64))
    {
        iParam0->_fU64 = 0;
        if (NOT bParam3)
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1262(), 0 );
        }
        if (NOT bParam2)
        {
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1300(), 1 );
        }
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_66837( uParam1, 0 ))
    {
        return 1;
    }
    return 0;
}

/* P_RELEASE_MS_ASSETS */ void sub_94185()
{
     /* WRITESCRIPTLOG */ sub_734( "GA", "P_RELEASE_MS_ASSETS start", 0 );
     /* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ sub_89671( ref l_U113, ref g_U1069 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE_ARRAY */ sub_94277( ref l_U123, ref g_U1214 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "LEVEL_S_STAD_CP_02", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "PAS_INT", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "LEVEL_S_STAD_CP_02a", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "LEVEL_S_STAD_CP_03", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "DAM_DEAD", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_90236( "FACE_PASNYB", ref g_U1354 );
     /* P_STREAMREQ_ACTION_TREE_REMOVE */ sub_94895( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act", ref g_U2012 );
     /* P_UNLOAD_AMED_ANIM_DICTS */ sub_92975();
     /* WRITESCRIPTLOG */ sub_734( "GA", "P_RELEASE_MS_ASSETS end", 0 );
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE_ARRAY */ void sub_94277(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_94351( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE */ void sub_94351(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_4910( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a WEAPON_TYPE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_ACTION_TREE_REMOVE */ void sub_94895(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_4910( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ACTION_TREE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}


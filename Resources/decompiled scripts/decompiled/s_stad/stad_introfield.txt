void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = -1;
    l_U40 = {64536, 64536, 64536};
    l_U44 = 0;
    l_U45 = 0;
    l_U46 = 1500;
    l_U75 = 0;
    l_U113 = 0;
    l_U115 = 1;
    l_U116 = 0;
    l_U117 = 0;
    l_U118 = 1;
    l_U278 = {-0.39000000, 28.40000000, 0.23000000};
    l_U281 = 0.00000000;
    l_U296 = {-4.29000000, 66.97000000, -3.19000000};
    l_U299 = 180.00000000;
    l_U311 = 0;
    l_U313 = 0;
    l_U314 = {2.40600000, 0.81100000, 0.00000000};
    l_U317 = 9500;
    l_U327 = {11.20000000, 71.11000000, -3.10000000};
    l_U330 = -85.63000000;
    l_U331 = {26.74000000, 70.91000000, -3.20008700};
    l_U334 = 177.90000000;
    l_U335 = {29.00000000, 58.47000000, -3.22000000};
    l_U338 = 90.00000000;
    l_U339 = {36.60000000, 66.00000000, -3.20011100};
    l_U342 = 0.00000000;
    l_U343 = {48.90000000, 72.30000000, -3.20000000};
    l_U346 = 180.00000000;
    l_U347 = 0;
    l_U348 = 0;
    l_U349 = 0;
    l_U350 = 0;
    l_U351 = 0;
    l_U352 = 0;
    l_U353 = 0;
    l_U364 = 0;
    l_U375 = 0;
    l_U1091 = {35.60753000, 61.47223000, 11.64517000};
    l_U1094 = 144.49880000;
    l_U1114 = 8525;
    l_U1210 = 0;
    l_U1272 = 0;
    l_U1282 = 0;
    l_U1283 = nil;
    l_U1284 = nil;
    l_U1355 = 0;
    l_U1356 = 0;
    l_U1357 = 0;
    l_U1358 = 0;
    l_U1359 = 0;
    l_U1568 = 0;
    l_U1607 = {5.28000000, 70.37000000, -3.20134900};
    l_U1610 = 65446;
    l_U1910 = 0;
    l_U1911 = 1;
    l_U1912 = 0;
    l_U1913 = 0;
    l_U1963 = 0;
    l_U1974 = 0;
    l_U1976 = 0;
    l_U1978 = {31.85000000, 60.76800000, -2.10000000};
    l_U1990 = 0;
    l_U1991 = 0;
    l_U2010 = 0;
    l_U2011 = 0;
    l_U2026 = 0;
    l_U2027 = 0;
     /* MAL_WRITESCRIPTLOG */ sub_898( "Script stad_IntroField.sc is starting up..." );
     /* P_SETUP_ASSET_ARRAYS */ sub_1007();
    l_U113 = 1;
    while (NOT IS_EXITFLAG_SET())
    {
         /* P_HANDLE_FAILURE */ sub_1357();
        if (l_U116 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_13725();
             /* P_PLAY_PLAYER_PAIN_AUDIO */ sub_88218();
             /* P_DISABLE_PLAYER_ADRENALINE */ sub_88403();
        }
        WAIT( 0 );
    }
     /* P_CLEANUP_FIELD */ sub_4044();
     /* P_RELEASE_FIELD_ASSETS */ sub_88499();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "stad_IntroField" );
     /* MAL_WRITESCRIPTLOG */ sub_898( "Script stad_field.sc is terminating..." );
    return;
}

/* MAL_WRITESCRIPTLOG */ void sub_898(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar3, 1537, "MSWW", 1537, uParam0, 1537, "###" );
    return;
}

/* P_SETUP_ASSET_ARRAYS */ void sub_1007()
{
     /* WRITESCRIPTLOG */ sub_1069( "AT", "P_SETUP_ASSET_ARRAYS", 0 );
    l_U2012[0] = -442116668;
    l_U2012[1] = 1049690760;
    l_U2012[2] = 1689856371;
    l_U2012[3] = 279061184;
    l_U2012[4] = -2056814065;
    l_U2012[5] = 1427023677;
    l_U2012[6] = -2073357282;
    l_U2020[0] = 150541352;
    l_U2020[1] = -1074756423;
    l_U2020[2] = -2075384407;
    l_U2020[3] = 68019059;
    return;
}

/* WRITESCRIPTLOG */ void sub_1069(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_HANDLE_FAILURE */ void sub_1357()
{
    if (g_U855 == 1)
    {
        switch (l_U116)
        {
            case 0:
            if (( /* RESTARTING_CHECKPOINT */ sub_1559()) || (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() )))
            {
                l_U116 = 1;
                 /* MAL_WRITESCRIPTLOG */ sub_898( "eFailState = FAIL_WAITING_FOR_PLAYER" );
            }
            break;
            case 1:
            if ( /* IS_RESTART_ACTIVE */ sub_2071())
            {
                l_U116 = 2;
            }
            else if (( /* F_CHECK_QUIT_RETRY */ sub_2131( 0 )) == 1)
            {
                l_U116 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() )))
            {
                if ((g_U888[2]._fU40 != 4) AND (g_U888[2]._fU40 != 0))
                {
                     /* WRITESCRIPTLOG */ sub_1069( "CR", "Shutting down script for MCE_PRACTICE.", 0 );
                     /* P_RESET_CHECKPOINT_THREAD */ sub_3700( ref g_U888[2] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U888[2]._fU32 );
                    g_U3869 = 0;
                    ACTION_TREE_FORCE_UNLOAD( "NPC\AMED.act" );
                }
                l_U116 = 3;
                 /* MAL_WRITESCRIPTLOG */ sub_898( "eFailState = FAIL_CLEANUP_ALL" );
            }
            break;
            case 3:
             /* MAL_WRITESCRIPTLOG */ sub_898( "eFailState = FAIL_CLEANUP_ALL" );
            if (NOT (IS_ACTION_TREE_LOADED( "NPC\AMED.act" )))
            {
                if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() ))) AND (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1496() ))))
                {
                    SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1496(), 0, 0 );
                    if (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1458() ))
                    {
                        SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1458(), 0 );
                    }
                }
                DO_SCREEN_FADE_OUT( 0 );
                DESTROY_ALL_CAMS();
                RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
                AUDIO_MUSIC_SUSPEND( 500 );
                AUDIO_MUSIC_STOP_ONESHOT();
                 /* P_CLEANUP_FIELD */ sub_4044();
                l_U116 = 4;
                 /* MAL_WRITESCRIPTLOG */ sub_898( "eFailState = FAIL_RESTORE_PLAYER" );
            }
            else
            {
                 /* MAL_WRITESCRIPTLOG */ sub_898( "Waiting for AMED.act to unload" );
                ACTION_TREE_FORCE_UNLOAD( "NPC\AMED.act" );
            }
            break;
            case 4:
             /* MAL_WRITESCRIPTLOG */ sub_898( "eFailState = FAIL_RESTORE_PLAYER" );
            if (l_U77._fU0)
            {
                 /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_9061( ref l_U77,  /* PLAYER_PED_ID */ sub_1458() );
            }
            l_U116 = 5;
             /* MAL_WRITESCRIPTLOG */ sub_898( "eFailState = FAIL_RESTART_CHECKPOINT" );
            break;
            case 5:
             /* MAL_WRITESCRIPTLOG */ sub_898( "eFailState = FAIL_RESTART_CHECKPOINT" );
            l_U113 = 1;
            l_U115 = 0;
            l_U116 = 0;
             /* MAL_WRITESCRIPTLOG */ sub_898( "eFailState = FAIL_IDLE" );
            break;
        }
    }
    return;
}

/* PLAYER_PED_ID */ int sub_1458()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_1496() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_1496()
{
    return GET_PLAYER_ID();
}

/* RESTARTING_CHECKPOINT */ int sub_1559()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1458(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1496(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1496(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1458() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1458(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* IS_RESTART_ACTIVE */ void sub_2071()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_2131(int iParam0)
{
    iParam0 = 1;
    switch (l_U45)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_2213( ref l_U47 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() )))
            {
                l_U46 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_2347( ref l_U47, l_U46, 1, 1 );
             /* STARTTIMER */ sub_2497( ref l_U47 );
        }
        if ( /* ISTIMERDONE */ sub_2630( ref l_U47 ))
        {
             /* WRITESCRIPTLOG */ sub_1069( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1496() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1496(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U45 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U45 = 2;
            }
            else
            {
                l_U45 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_1069( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_3131();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_1069( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_3131();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_2213(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* CREATETIMER */ void sub_2347(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_2497(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* ISTIMERDONE */ int sub_2630(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_3131()
{
     /* WRITESCRIPTLOG */ sub_1069( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_3206( ref l_U47 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1496() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1496(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U44 = 0;
    l_U44 = l_U44;
    l_U45 = 0;
    return;
}

/* RESETTIMER */ void sub_3206(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_RESET_CHECKPOINT_THREAD */ void sub_3700(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

/* P_CLEANUP_FIELD */ void sub_4044()
{
     /* MAL_WRITESCRIPTLOG */ sub_898( "P_CLEANUP_FIELD" );
     /* CLEANPEDARRAY */ sub_4099( ref l_U252 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_4262( 1224272620, ref g_U1214 );
    ISEQ_TERMINATE( -1110817698 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_5291( -1110817698, ref g_U1263 );
    ISEQ_TERMINATE( -1424164141 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_5291( -1424164141, ref g_U1263 );
    ISEQ_TERMINATE( 2130328435 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_5291( 2130328435, ref g_U1263 );
    ISEQ_TERMINATE( -1191130939 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_5291( -1191130939, ref g_U1263 );
     /* P_STREAMREQ_SCRIPT_STREAM_STOP */ sub_5773( "S_STAD_EDI_KILL1", ref g_U2034 );
     /* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ sub_6561( "S_STAD_EDI_KILL1", ref g_U2034 );
     /* P_STREAMREQ_SCRIPT_STREAM_STOP */ sub_5773( "S_STAD_VIG15_YELLS", ref g_U2034 );
     /* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ sub_6561( "S_STAD_VIG15_YELLS", ref g_U2034 );
    if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( "STADIUM_ONESHOT_1" ))
    {
        AUDIO_MUSIC_STOP_ONESHOT();
    }
     /* CLEANVEHICLE */ sub_7010( g_U3705 );
     /* CLEANPED */ sub_4149( l_U277 );
     /* CLEANPED */ sub_4149( l_U295 );
     /* CLEANPED */ sub_4149( l_U1090 );
     /* MAL_ESA_CLEAN */ sub_7113( ref l_U679 );
     /* CLEANPLACEMENT */ sub_7236( l_U1336 );
     /* CLEANOBJECT */ sub_7301( l_U1977 );
     /* CLEANOBJECT */ sub_7301( g_U3704 );
     /* MAL_SETCANTRIGGERBULLETCAM */ sub_7371(  /* PLAYER_PED_ID */ sub_1458(), 0 );
     /* NIS_RETURN_TO_GAMEPLAY_CAM */ sub_7642( 0, 0, 0, -859915232, -859915232, 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() )))
    {
        SET_PED_AS_ONE_SHOT_KILL(  /* PLAYER_PED_ID */ sub_1458(), 0 );
        SET_PED_ALLOWED_TO_DUCK(  /* PLAYER_PED_ID */ sub_1458(), 1 );
         /* MAL_SETFOOTSTEPSTYPE */ sub_7813( 0 );
    }
    SET_CAMERA_OVERRIDE( "", "", 0, 1, 1 );
    CAMERA_CLEAR_POINT_AT_TARGET();
     /* CLEANCAMERA */ sub_8040( ref l_U1209 );
     /* CLEANCAMERA */ sub_8040( ref l_U310 );
     /* CLEANCAMERA */ sub_8040( ref l_U312 );
     /* CLEANCAMERA */ sub_8040( ref l_U1973 );
     /* CLEANCAMERA */ sub_8040( ref l_U1975 );
     /* P_CAM_SHAKE_FORCE_DEACTIVATE */ sub_8173( ref l_U1914, 1 );
     /* P_STOP_SP_CHALLENGES */ sub_8359();
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "03_01_stad_txt_comeon", 0 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "03_01_stad_txt_3d_comeon", 0 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "03_01_stad_txt_getoutofthere", 0 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "03_01_stad_txt_3d_getoutofthere", 0 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "03_01_stad_txt_getoffthatfield", 0 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "03_01_stad_txt_3d_getoffthatfield", 0 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "03_01_stad_txt_3d_comeon02", 0 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "03_01_stad_txt_comeon02", 0 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "03_01_stad_txt_getover", 0 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "03_01_stad_txt_3d_getover", 0 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "03_01_stad_txt_killed", 0 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "03_01_stad_txt_3d_killed", 0 );
    return;
}

/* CLEANPEDARRAY */ void sub_4099(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_4149( (uParam0^)[I] );
    }
    return;
}

/* CLEANPED */ void sub_4149(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE */ void sub_4262(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_4393( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a WEAPON_TYPE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ int sub_4393(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if ((uParam1^)[I] == iParam0)
            {
                DISPLAYF( "[CCB] ### The THREADID index matches the asset requested for removal: {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
            else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID index is in use and is active: {} ###", 1, 513, (uParam1^)[I] );
                Result = I;
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is in use, but is no longer active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

/* P_STREAMREQ_ISEQ_REMOVE */ void sub_5291(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_4393( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a ISEQ asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_SCRIPT_STREAM_STOP */ void sub_5773(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if ( /* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ sub_5823( uParam0, uParam1 ))
    {
        iVar4 =  /* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ sub_6032( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            DISPLAYF( "[CCB]### Stopping the SCRIPT_STREAM: {} ###", 1, 1281, ref (uParam1^)[iVar4]._fU0 );
            STOP_SCRIPT_STREAM( iVar4 );
        }
        else
        {
            DISPLAYF( "[CCB]### The SCRIPT_STREAM slot is NOT valid!!! {} ###", 1, 1537, uParam0 );
            SCRIPT_ASSERT( "Attempting to stop a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        DISPLAYF( "[CCB]### The SCRIPT_STREAM asset is NOT loaded!!! {} ###", 1, 1537, uParam0 );
        DISPLAYF( "Attempting to stop a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ int sub_5823(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB]### The SCRIPT_STREAM is loaded: {} ###", 1, 1281, ref (uParam1^)[I]._fU0 );
                return 1;
            }
        }
    }
    return 0;
}

/* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ int sub_6032(unknown uParam0, unknown uParam1)
{
    int Result;

    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
        {
            return Result;
        }
    }
    return -1;
}

/* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ void sub_6561(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_4393( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a SCRIPT_STREAM asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* CLEANVEHICLE */ void sub_7010(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

/* MAL_ESA_CLEAN */ void sub_7113(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* MAL_ES_CLEAN */ sub_7161( ref (uParam0^)[I] );
    }
    return;
}

/* MAL_ES_CLEAN */ void sub_7161(int iParam0)
{
     /* CLEANPED */ sub_4149( iParam0->_fU0 );
    iParam0->_fU172 = 0;
    return;
}

/* CLEANPLACEMENT */ void sub_7236(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

/* CLEANOBJECT */ void sub_7301(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* MAL_SETCANTRIGGERBULLETCAM */ int sub_7371(unknown uParam0, boolean bParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        if (bParam1)
        {
            if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( uParam0 )))
            {
                 /* MAL_WRITESCRIPTLOG */ sub_898( "MAL_SetCanTriggerBulletCam: Ped is not able to trigger BC, adding" );
                SET_PED_CAN_TRIGGER_BULLET_CAM( uParam0, bParam1 );
                return 1;
            }
        }
        else if (GET_PED_CAN_TRIGGER_BULLET_CAM( uParam0 ))
        {
             /* MAL_WRITESCRIPTLOG */ sub_898( "MAL_SetCanTriggerBulletCam turning off BC" );
            SET_PED_CAN_TRIGGER_BULLET_CAM( uParam0, bParam1 );
            return 1;
        }
    }
    return 0;
}

/* NIS_RETURN_TO_GAMEPLAY_CAM */ void sub_7642(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

/* MAL_SETFOOTSTEPSTYPE */ void sub_7813(boolean bParam0)
{
    if (bParam0)
    {
         /* MAL_WRITESCRIPTLOG */ sub_898( "MAL_SetFootstepsType setting movement type to STUMBLE" );
        SET_FOOT_STEP_AUDIO_MOVEMENT(  /* PLAYER_PED_ID */ sub_1458(), 1 );
    }
    else
    {
         /* MAL_WRITESCRIPTLOG */ sub_898( "MAL_SetFootstepsType setting movement type to NORMAL" );
        SET_FOOT_STEP_AUDIO_MOVEMENT(  /* PLAYER_PED_ID */ sub_1458(), 0 );
    }
    return;
}

/* CLEANCAMERA */ void sub_8040(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

/* P_CAM_SHAKE_FORCE_DEACTIVATE */ void sub_8173(int iParam0, int iParam1)
{
    if (iParam0->_fU172 == 1)
    {
        if (iParam1 == 1)
        {
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam1 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam1 );
        }
        else
        {
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam0->_fU160 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam0->_fU160 );
        }
         /* RESETTIMER */ sub_3206( iParam0 + 40 );
         /* RESETTIMER */ sub_3206( iParam0 + 76 );
         /* RESETTIMER */ sub_3206( iParam0 + 112 );
        iParam0->_fU172 = 0;
    }
    return;
}

/* P_STOP_SP_CHALLENGES */ void sub_8359()
{
     /* WRITESCRIPTLOG */ sub_1069( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_9061(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_1069( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_9280( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_10444( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10758( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11237( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10758( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11237( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10758( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11237( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_11553( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11237( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_11553( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11237( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_12125( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_12327( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1458(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_1069( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_9280(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_9342( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_9342(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_10444(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_10758(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_11162( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* WRITE_STRING */ void sub_11162(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_11237(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_11553(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_11162( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_12125(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_12327(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_9342( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_12425( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_12425(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_HANDLE_EVENTS */ void sub_13725()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;

    iVar2 = l_U113;
    switch (l_U113)
    {
        case 0: break;
        case 1:
         /* MAL_WRITESCRIPTLOG */ sub_898( "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA" );
         /* P_INITIALIZE_SCRIPT_DATA */ sub_13949();
         /* P_SET_STATIC_DATA */ sub_15016();
         /* P_INITIALIZE_SP_CHALLENGES */ sub_18602();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U113 = 2;
         /* WRITESCRIPTLOG */ sub_1069( "AT", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
         /* MAL_WRITESCRIPTLOG */ sub_898( "eCheckpointState = CP_INITIAL_REQUEST_ASSETS" );
         /* P_REQUEST_FIELD_PERSISTENT_ASSETS */ sub_18779();
         /* P_REQUEST_FIELD_NONPERSISTENT_ASSETS */ sub_29078();
        l_U113 = 3;
         /* WRITESCRIPTLOG */ sub_1069( "AT", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if (( /* F_STREAMREQ_SCRIPT_STREAM_IS_LOADED */ sub_36790( ref g_U2034 )) AND (( /* F_STREAMREQ_ACTION_TREE_IS_LOADED */ sub_36412( ref g_U2012 )) AND (( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_35998( ref g_U1263 )) AND (( /* F_STREAMREQ_ANIM_DICT_IS_LOADED */ sub_35607( ref g_U1354 )) AND (( /* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ sub_35205( ref g_U1214 )) AND ( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_34808( ref g_U1069 )))))))
        {
            if ((NOT l_U77._fU0) AND (g_U854 <= 1))
            {
                l_U113 = 4;
                 /* MAL_WRITESCRIPTLOG */ sub_898( "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP" );
            }
            else
            {
                l_U113 = 5;
                 /* WRITESCRIPTLOG */ sub_1069( "GA", "eCheckpointState = CP_SETUP", 0 );
            }
        }
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_1069( "AT", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        if (g_U854 == 1)
        {
            l_U115 = 0;
        }
         /* HAS_SAVEFILE_LOADED */ sub_37395( ref l_U77 );
        l_U113 = 5;
         /* WRITESCRIPTLOG */ sub_1069( "GA", "eCheckpointState = CP_SETUP", 0 );
        break;
        case 5:
        if (l_U114)
        {
             /* P_FIELDENEMIESPRE */ sub_37655();
             /* P_SETDOORMINMAXLIMIT */ sub_14647( ref g_U2884, 0.00000000, 90.00000000 );
             /* P_SETDOORMINMAXLIMIT */ sub_14647( ref g_U2891, -90.00000000, 0.00000000 );
             /* P_CLOSEDOOR */ sub_38535( ref g_U2884, 1 );
             /* P_CLOSEDOOR */ sub_38535( ref g_U2891, 1 );
            ENABLE_GRAVITY_WELL( "st_00_fd_simple", "GravWell_EdisonHelpsMax", 1, 0, 0, 0 );
            ENABLE_GRAVITY_WELL( "st_00_fd_simple", "GravWell_TunnelEndCorner", 1, 0, 0, 0 );
             /* P_SETUP_PLAYER */ sub_38795();
             /* P_CREATE_HELICOPTER */ sub_38973();
            l_U119 = 1;
            l_U262 = 1;
        }
        if ( /* F_CREATE_UNIQUE_FIELD_PEDS */ sub_39607())
        {
            if ( /* MAL_ENEMYSTRUCTARRAYCREATE */ sub_42907( ref l_U679, "FieldVictim", ref l_U944, 1, 1, 1 ))
            {
                if (l_U115)
                {
                    if ( /* F_CREATE_CUTSCENE_PEDS */ sub_45616())
                    {
                        if (CUTSCENE_IS_LOADED( "03_01_STAD_concat" ))
                        {
                             /* P_FIELDENEMIESPOST */ sub_46533();
                             /* MAL_ESA_VISIBLE */ sub_47005( ref l_U679, 0, 0, -1 );
                             /* MAL_SETPEDVISIBLE */ sub_47229( l_U277, 0 );
                             /* MAL_SETPEDVISIBLE */ sub_47229( l_U1090, 0 );
                            SET_HELPER_TRACKING_MODE( 1 );
                            l_U113 = 6;
                             /* MAL_WRITESCRIPTLOG */ sub_898( "eCheckpointState = CP_INTRO" );
                        }
                    }
                }
                else
                {
                     /* P_FIELDENEMIESPOST */ sub_46533();
                    l_U113 = 6;
                     /* MAL_WRITESCRIPTLOG */ sub_898( "eCheckpointState = CP_INTRO" );
                }
            }
        }
        break;
        case 6:
        if (l_U114)
        {
             /* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ sub_52393( ref l_U120, "03_01_STAD_concat", 47498, 47551, 49546, 49961, 50010, 52338, 250, 0 );
            l_U120._fU100 = g_U853;
            if (l_U115)
            {
                l_U120._fU4 = 1;
            }
            else
            {
                l_U120._fU4 = 7;
                AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1", "", 0, 15000, -1, -1082130432, 0 );
            }
            SET_SWEAT_ENABLED( 0 );
            l_U115 = 0;
        }
        if ( /* CUTSYS_HANDLECUTSCENE */ sub_53028( ref l_U120 ))
        {
            if (NOT l_U77._fU0)
            {
                g_U855 = 1;
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_55305( ref l_U77, g_U855,  /* PLAYER_PED_ID */ sub_1458(), g_U2138[1] + l_U314, g_U2256[1], g_U2296[1], g_U2336[1], 0 );
            }
             /* NIS_PRE_SETUP */ sub_53919( 1, 0, 0, 1 );
            l_U113 = 7;
        }
        break;
        case 7:
        if (l_U114)
        {
             /* WRITESCRIPTLOG */ sub_1069( "[SA]", "Entering progression state STATE_FIELD.", "[STATE]" );
             /* MAL_ESA_VISIBLE */ sub_47005( ref l_U679, 1, 0, -1 );
            uVar3 = GET_WEAPON_FROM_HAND( l_U1090, 0, 0 );
             /* MAL_TOGGLEWEAPONATTACHMENTTOWEAPON */ sub_44457( ref uVar3, 13, 1 );
            SET_LASER_SIGHT_ATTACHMENT( uVar3, -789406068 );
             /* P_INIT_RANDOM_IMAGEFX_FIELD */ sub_60004();
             /* MAL_FREEZEPED */ sub_62396( ref l_U1090, 0 );
             /* MAL_FREEZEPLAYER */ sub_62459( 0 );
             /* MAL_FREEZEPED */ sub_62396( ref l_U277, 0 );
             /* P_START_SP_CHALLENGES */ sub_62521();
        }
         /* P_HANDLE_FIELD_ENEMIES */ sub_62745();
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_63465( ref l_U1134, 0 ))
        {
             /* WRITESCRIPTLOG */ sub_1069( "GA", "Player has reached safety from sniper.", 0 );
             /* MAL_STANDSTILL */ sub_63723( ref l_U1090 );
             /* RESETTIMER */ sub_3206( ref l_U1124 );
        }
        if (NOT l_U1134._fU64)
        {
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() ))) AND (NOT (IS_PED_DEAD( l_U1090 ))))
            {
                if ((NOT l_U1124._fU16) AND (NOT l_U1124._fU20))
                {
                    if (( /* F_ISPLAYERINTRIGGERBOX */ sub_63933( l_U1632 )) || ( /* ISTIMERDONE */ sub_2630( ref l_U1115 )))
                    {
                         /* WRITESCRIPTLOG */ sub_1069( "GA", "Sniper aiming at Player.", 0 );
                        TASK_AIM_GUN_AT_PED( l_U1090,  /* PLAYER_PED_ID */ sub_1458(), -1, 1 );
                         /* P_CREATE_AND_START_TIMER */ sub_52218( ref l_U1124, 3500 );
                    }
                }
            }
            if ( /* ISTIMERDONE */ sub_2630( ref l_U1124 ))
            {
                 /* WRITESCRIPTLOG */ sub_1069( "GA", "Sniper shooting Max.", 0 );
                 /* P_SNIPER_SHOOT_AT_MAX */ sub_64112();
            }
        }
        else if (NOT l_U1133)
        {
            if ((NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_63933( l_U1134 ))) AND ( /* F_ISPLAYERINTRIGGERBOX */ sub_63933( l_U628 )))
            {
                 /* WRITESCRIPTLOG */ sub_1069( "GA", "Player walked back out on the field.", 0 );
                TASK_AIM_GUN_AT_PED( l_U1090,  /* PLAYER_PED_ID */ sub_1458(), -1, 1 );
                 /* P_CREATE_AND_START_TIMER */ sub_52218( ref l_U1124, 3500 );
                l_U1133 = 1;
            }
        }
        else if ( /* ISTIMERDONE */ sub_2630( ref l_U1124 ))
        {
             /* WRITESCRIPTLOG */ sub_1069( "GA", "Sniper shooting Max.", 0 );
             /* P_SNIPER_SHOOT_AT_MAX */ sub_64112();
        }
        if ( /* F_ISPLAYERINTRIGGERBOX */ sub_63933( l_U1134 ))
        {
             /* WRITESCRIPTLOG */ sub_1069( "GA", "Player has reached safety from sniper.", 0 );
             /* MAL_STANDSTILL */ sub_63723( ref l_U1090 );
             /* RESETTIMER */ sub_3206( ref l_U1124 );
            l_U1133 = 0;
        };;;
        if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_63465( ref l_U1653, 0 )) || (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_63465( ref l_U1632, 0 )) || ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_63465( ref l_U1611, 0 ))))
        {
            l_U118 = 1;
            l_U113 = 13;
            break;
        }
        if (( /* ISTIMERDONE */ sub_2630( ref l_U1105 )) || (( /* ISTIMERDONE */ sub_2630( ref l_U1096 )) == 1))
        {
             /* P_SNIPER_SHOOTS_AT_COORD */ sub_64612( 32.98799000, 49.15228000, 8.79198100 );
        }
        if ( /* ISTIMERDONE */ sub_2630( ref l_U318 ))
        {
             /* MAL_WRITESCRIPTLOG */ sub_898( "RETURN TO GAMEPLAY CAM OH YEAH" );
             /* NIS_POST_SETUP */ sub_54843( 1, 1 );
            SIMULATE_PLAYER_INPUT_GAIT(  /* PLAYER_ID */ sub_1496(), 3, 5000, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( 0, 1065353216, 0 );
            CAMERA_ANIMATED_STOP( 1000, 1 );
             /* P_FIELD_LEADOUT_RETURN_TO_GAMEPLAY */ sub_64843();
             /* P_CREATE_AND_START_TIMER */ sub_52218( ref l_U1273, 2000 );
             /* STARTTIMER */ sub_2497( ref l_U1115 );
            AUDIO_MUSIC_PLAY_ONESHOT();
            AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1_5", "", 0, 1000, -1, -1082130432, 0 );
        }
         /* P_FIELD_PASSOS_CALLS_TO_MAX */ sub_65105();
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_63465( ref l_U397, 0 ))
        {
             /* MAL_SETACTINT */ sub_66726( l_U277, 47, 5000 );
             /* RESETTIMER */ sub_3206( ref l_U1273 );
        }
        if ( /* F_FIELD_HAS_PLAYER_REACHED_PASSOS */ sub_66803())
        {
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
             /* CLEANCAMERA */ sub_8040( ref l_U1209 );
             /* P_CLEANUP_FIELD_SEQUENCE */ sub_66969();
            l_U113 = 8;
        }
        break;
        case 8:
        if (l_U114)
        {
             /* WRITESCRIPTLOG */ sub_1069( "[SA]", "Entering progression state STATE_PASSOS_HELPS_MAX.", "[STATE]" );
             /* P_FORCE_PLAYER_TO_WALK */ sub_67484();
             /* P_SETUP_STEADY_SEQUENCE */ sub_67586();
             /* P_PLAY_FIRST_STEADY_CAM */ sub_67728();
             /* P_RESET_RANDOM_IMAGE_FX */ sub_68069( 0 );
             /* CLEANCAMERA */ sub_8040( ref l_U310 );
            l_U310 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
            l_U311 = 1;
        }
        if (l_U311 == 1)
        {
            if (IS_SCRIPTEDFX_ENABLED() == 1)
            {
                if ((IS_BULLET_CAMERA_SCENE_ACTIVE( l_U310 )) == 0)
                {
                    SETUP_BULLET_CAMERA_ANIM_SCENE( l_U310, l_U277, l_U277 );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_1069( "SP", "Starting Steady Max Image FX Bullet Cam", 0 );
                    l_U311 = 0;
                }
            }
        }
        if ( /* F_IS_PASSOS_STEADYING_MAX */ sub_68433())
        {
             /* P_PLAY_PASSOS_MAX_STEADY_SPEECH */ sub_68542();
            AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1", "", 0, 10000, -1, -1082130432, 0 );
        }
        if ( /* MAL_ISACTINTCOMPLETED */ sub_68809( ref l_U277, 55, 1 ))
        {
             /* P_PLAY_BLOOD_SMEAR_NIS_SPEECH_2 */ sub_69019();
        }
        if (NOT l_U2011)
        {
            if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_STAD_CP_01", "VIG_07B_START_TO_END_CAM" )) - 100))
            {
                l_U2011 = 1;
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( 4.09000000, 1065353216, 0 );
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( -19.00000000, 1065353216, 0 );
                CAMERA_ANIMATED_STOP( 500, 1 );
            }
        }
        uVar4 =  /* PLAYER_PED_ID */ sub_1458();
        if ( /* MAL_ISACTINTCOMPLETED */ sub_68809( ref uVar4, 55, 1 ))
        {
             /* WRITESCRIPTLOG */ sub_1069( "GA", "Passos Help Max return to gameplay cam.", 0 );
             /* CLEANCAMERA */ sub_8040( ref l_U310 );
             /* P_END_STEADY_SEQUENCE */ sub_69596();
            l_U113 = 9;
        }
        break;
        case 9:
        if (l_U114)
        {
             /* WRITESCRIPTLOG */ sub_1069( "[SA]", "Entering progression state STATE_TUNNEL.", "[STATE]" );
             /* P_INIT_RANDOM_IMAGEFX_FIELD */ sub_60004();
             /* P_SPEECH_PLAY_MONOLOGUE */ sub_69882( "SSTD_MGDTT", ref uVar5 );
        }
        if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_63465( ref l_U418, 0 )) == 1)
        {
            if (IS_SCRIPTEDFX_ENABLED() == 1)
            {
                 /* P_RESET_RANDOM_IMAGE_FX */ sub_68069( 0 );
                 /* WRITESCRIPTLOG */ sub_1069( "SP", "Playing Basement Doors Image FX", 0 );
                PLAY_IMAGEFX( "TRIPLE_MOVE_RIGHT_COLOR_SPLIT1", 4, 0 );
                 /* P_INIT_RANDOM_IMAGEFX_FIELD */ sub_60004();
            }
        }
         /* P_HANDLE_FIELD_CAM_SHAKING */ sub_70117();
        if (NOT l_U1133)
        {
            if ((NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_63933( l_U1134 ))) AND ( /* F_ISPLAYERINTRIGGERBOX */ sub_63933( l_U628 )))
            {
                l_U118 = 1;
                l_U113 = 13;
                break;
            }
        }
        else if ( /* ISTIMERDONE */ sub_2630( ref l_U1124 ))
        {
             /* WRITESCRIPTLOG */ sub_1069( "GA", "Sniper shooting Max.", 0 );
             /* P_SNIPER_SHOOT_AT_MAX */ sub_64112();
        }
        if ( /* F_ISPLAYERINTRIGGERBOX */ sub_63933( l_U1134 ))
        {
             /* WRITESCRIPTLOG */ sub_1069( "GA", "Player has reached safety from sniper.", 0 );
             /* MAL_STANDSTILL */ sub_63723( ref l_U1090 );
             /* RESETTIMER */ sub_3206( ref l_U1124 );
            l_U1133 = 0;
        }
        if ( /* MAL_ISACTINTCOMPLETED */ sub_68809( ref l_U277, 47, 0 ))
        {
            if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_63465( ref l_U481, 0 )) == 1)
            {
                 /* P_START_TUNNEL_HEADCRACK_EVENT */ sub_71183();
                SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1458(), 0 );
                 /* P_RESET_RANDOM_IMAGE_FX */ sub_68069( 0 );
                 /* CLEANCAMERA */ sub_8040( ref l_U312 );
                l_U312 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
                l_U313 = 1;
            }
        }
        if (l_U313 == 1)
        {
            if (IS_SCRIPTEDFX_ENABLED() == 1)
            {
                if ((IS_BULLET_CAMERA_SCENE_ACTIVE( l_U312 )) == 0)
                {
                    SETUP_BULLET_CAMERA_ANIM_SCENE( l_U312, l_U277, l_U277 );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_1069( "SP", "Starting Head Crack Image FX Bullet Cam", 0 );
                    l_U313 = 0;
                }
            }
        }
        if ( /* F_HAS_HEADCRACK_CS_DROPPED_GUN */ sub_72372())
        {
             /* P_SWAP_HEADCRACK_GUN_FOR_PLACEMENT */ sub_72512();
        }
        if ( /* F_PASSOS_GRABBED_HEADCRACK_GUN */ sub_72870())
        {
             /* P_PASSOS_PICK_UP_HEADCRACK_GUN */ sub_72966();
            ENABLE_GRAVITY_WELL( "st_00_fd_simple", "GravWell_MaxStumble01", 0, 0, 0, 0 );
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
             /* CLEANCAMERA */ sub_8040( ref l_U312 );
             /* P_CREATE_AND_START_TIMER */ sub_52218( ref l_U1964, 1500 );
        }
        if ( /* ISTIMERDONE */ sub_2630( ref l_U1964 ))
        {
             /* P_SPEECH_PLAY_MONOLOGUE */ sub_69882( "SSTD_VIG09A", ref uVar15 );
        }
        if ( /* F_IS_PLAYER_AT_FIRST_STUMBLE */ sub_73268())
        {
             /* MAL_SETFOOTSTEPSTYPE */ sub_7813( 1 );
             /* P_START_FIRST_STUMBLE */ sub_73459();
             /* P_CREATE_AND_START_TIMER */ sub_52218( ref l_U1346, 6000 );
            AUDIO_MUSIC_REQUEST_ONESHOT( "STADIUM_ONESHOT_2", 0 );
        }
        if (( /* MAL_GETACTINTSTATUS */ sub_68848(  /* PLAYER_PED_ID */ sub_1458(), 55 )) == 1)
        {
            SIMULATE_PLAYER_INPUT_GAIT(  /* PLAYER_ID */ sub_1496(), 3, 2000, 0 );
            uVar25 =  /* PLAYER_PED_ID */ sub_1458();
             /* MAL_FINISHACTINT */ sub_68936( ref uVar25, 55 );
            DISPLAY_HUD( 1 );
             /* MAL_SETFOOTSTEPSTYPE */ sub_7813( 0 );
        }
        if ( /* ISTIMERDONE */ sub_2630( ref l_U1346 ))
        {
             /* P_INIT_RANDOM_IMAGEFX_FIELD */ sub_60004();
             /* P_PLAY_STUMBLE_SPEECH */ sub_73760();
        }
        if ( /* F_IS_PLAYER_AT_TUNNEL_CORNER */ sub_73936())
        {
             /* P_START_HEADTRACKING_PED */ sub_74099(  /* PLAYER_PED_ID */ sub_1458(), l_U277 );
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_63465( ref l_U523, 0 ))
        {
             /* P_FIELD_EARLY_PED_CLEANUP */ sub_74196();
             /* P_PASSOS_START_BASEMENT_SEQUENCE */ sub_74893();
             /* P_START_HEADTRACKING_PED */ sub_74099( l_U277,  /* PLAYER_PED_ID */ sub_1458() );
        }
        if ( /* MAL_ISACTINTCOMPLETED */ sub_68809( ref l_U277, 37, 1 ))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_50903( ref l_U1579 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_51014( 1, l_U277, "PASSOS", ref l_U1579, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_51281( "SSTD_BTPD", ref l_U1579, 8, 1 );
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_63465( ref l_U502, 0 ))
        {
            CLEAR_PED_PRIMARY_LOOKAT( l_U277 );
            l_U113 = 10;
        }
        break;
        case 10:
        if (l_U114)
        {
             /* WRITESCRIPTLOG */ sub_1069( "[SA]", "Entering progression state STATE_BLOOD_SMEAR_NIS.", "[STATE]" );
             /* P_RESET_RANDOM_IMAGE_FX */ sub_68069( 0 );
            l_U1990 = 0;
            l_U1991 = 0;
             /* P_CREATE_AND_START_TIMER */ sub_52218( ref l_U1992, 900 );
            l_U1568 = 1;
        }
        if ( /* ISTIMERDONE */ sub_2630( ref l_U1992 ))
        {
            AUDIO_MUSIC_PLAY_ONESHOT();
        }
        switch (l_U1568)
        {
            case 0: break;
            case 1:
             /* WRITESCRIPTLOG */ sub_1069( "SP", "nisBloodSmearState = NIS2_SETUP", 0 );
             /* CLEANOBJECT */ sub_7301( g_U3704 );
             /* NIS_PRE_SETUP */ sub_53919( 1, 0, 0, 0 );
             /* MAL_SETPEDVISIBLE */ sub_47229(  /* PLAYER_PED_ID */ sub_1458(), 0 );
             /* MAL_PEDPLAYERACTIONTREENODE */ sub_75539( l_U277, "/Global/PASSOS_THROUGH_BASEMENT/PASSOS_THROUGH_BASEMENT_CONTROL/SECTION_1_DOORS_TO_BIN/BLOOD_TRAIL_WAIT" );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_STAD_CP_01", "VIG_11_STADIUM_IDLE_A_TO_IDLE_B_CAM", 1, 10.45500000, 71.86000000, -1.63300000, 90.00000000, 0, 0 );
            SET_CAMERA_OVERRIDE( "UNARMED_INJURED_CAMERA", "", 0, 1, 1 );
             /* P_CREATE_AND_START_TIMER */ sub_52218( ref l_U2001, 500 );
            l_U1568 = 2;
             /* WRITESCRIPTLOG */ sub_1069( "SP", "nisBloodSmearState = NIS2_PLAYING", 0 );
            break;
            case 2:
            if ( /* ISTIMERDONE */ sub_2630( ref l_U2001 ))
            {
                 /* P_PLAY_BLOOD_SMEAR_NIS_SPEECH_1 */ sub_75826();
            }
            if (NOT l_U1990)
            {
                if (CAMERA_ANIMATED_CURRENT_TIME() > 1619)
                {
                    l_U1990 = 1;
                    CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1458() );
                     /* MAL_TELEPORTPLAYER */ sub_76205( l_U1607, l_U1610, 0, 0 );
                     /* MAL_SETPEDVISIBLE */ sub_47229(  /* PLAYER_PED_ID */ sub_1458(), 1 );
                }
            }
            if (NOT l_U1991)
            {
                if (CAMERA_ANIMATED_CURRENT_TIME() > 5369)
                {
                     /* MAL_PEDPLAYERACTIONTREENODE */ sub_75539( l_U277, "/Global/PASSOS_THROUGH_BASEMENT/PASSOS_THROUGH_BASEMENT_CONTROL/SECTION_1_DOORS_TO_BIN/COVER_A_TO_BIN" );
                    l_U1991 = 1;
                     /* MAL_PEDPLAYERACTIONTREENODE */ sub_75539(  /* PLAYER_PED_ID */ sub_1458(), "/Global/S_STAD_INJ1/S_STAD_INJ_SEQ/S_STAD_INJ1/S_STAD_INJ_FIELD/IDLE/STAD_INJ_IDLE" );
                }
            }
            if (CAMERA_ANIMATED_CURRENT_TIME() > 8940)
            {
                 /* MAL_WRITESCRIPTLOG */ sub_898( "Bloodsmear Anim Cam Finished" );
                CAMERA_ANIMATED_STOP( 2750, 1 );
                CAMERA_POINT_AT_COORD( 30.47922000, 71.51909000, -1.90999900, 0 );
                 /* P_CREATE_AND_START_TIMER */ sub_52218( ref l_U1589, 2800 );
                 /* P_CREATE_AND_START_TIMER */ sub_52218( ref l_U1598, 2000 );
                l_U1910 = 1;
                 /* P_INIT_RANDOM_IMAGEFX_HALL */ sub_76665();
                l_U1568 = 3;
            }
            break;
            case 3:
            if ( /* ISTIMERDONE */ sub_2630( ref l_U1598 ))
            {
                if ((NOT (IS_PED_DEAD( l_U277 ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() ))))
                {
                    SET_PED_PRIMARY_LOOKAT( l_U277,  /* PLAYER_PED_ID */ sub_1458() );
                    FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_1458(), 0 );
                    SIMULATE_PLAYER_INPUT_GAIT(  /* PLAYER_ID */ sub_1496(), 2, 1250, 0 );
                }
            }
            if ( /* ISTIMERDONE */ sub_2630( ref l_U1589 ))
            {
                l_U1568 = 0;
                 /* NIS_POST_SETUP */ sub_54843( 1, 1 );
                l_U113 = 11;
            }
            break;
        }
        break;
        case 11:
        if (l_U114)
        {
             /* WRITESCRIPTLOG */ sub_1069( "[SA]", "Entering progression state STATE_LOCKER_ROOM.", "[STATE]" );
            AUDIO_MUSIC_REQUEST_ONESHOT( "STADIUM_ONESHOT_10", 0 );
             /* P_SPEECH_PLAY_MONOLOGUE */ sub_69882( "SSTD_TCRA", ref uVar26 );
            l_U1674 = 0;
            l_U1911 = 0;
            l_U1912 = 1;
        }
         /* P_HANDLE_FIELD_CAM_SHAKING */ sub_70117();
        if (NOT l_U1913)
        {
            uVar36 = { /* MAL_GETPEDCOORDS */ sub_77766(  /* PLAYER_PED_ID */ sub_1458() )};
            if ((NOT (IS_SPHERE_VISIBLE( 8.90405900, 70.50001000, -2.44081100, 1.00000000, 0 ))) AND (uVar36._fU0 > 13.50000000))
            {
                l_U1913 = 1;
                 /* P_CLOSEDOOR */ sub_38535( ref g_U2933, 1 );
                 /* P_CLOSEDOOR */ sub_38535( ref g_U2926, 1 );
                 /* P_SETDOORLOCKED */ sub_77922( ref g_U2933, 1 );
                 /* P_SETDOORLOCKED */ sub_77922( ref g_U2926, 1 );
                 /* CLEANPED */ sub_4149( l_U295 );
                 /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_74332( 279061184, ref g_U1069 );
                 /* P_UNLOAD_PLGE_ANIM_DICTS */ sub_78103( 0 );
            }
        }
        if ( /* F_IS_PASSOS_AT_HOT_TUB */ sub_79563())
        {
             /* P_START_HEADTRACKING_PED */ sub_74099( l_U277,  /* PLAYER_PED_ID */ sub_1458() );
             /* MAL_TELEPORTPED */ sub_50093( l_U277, l_U331, l_U334 );
        }
        if (NOT l_U544._fU64)
        {
            if (( /* MAL_COMPAREPLAYERPOSAXIS */ sub_79735( "Y", "Greater", 71.60000000 )) AND ( /* MAL_COMPAREPLAYERPOSAXIS */ sub_79735( "X", "Greater", 10.90000000 )))
            {
                CLEAR_PED_PRIMARY_LOOKAT( l_U277 );
                 /* P_PASSOS_MOVE_TO_SHOWERS */ sub_80001();
                CAMERA_CLEAR_POINT_AT_TARGET();
                l_U544._fU64 = 1;
            }
        }
        if ( /* F_IS_PASSOS_AT_SHOWERS */ sub_80178())
        {
            CLEAR_PED_PRIMARY_LOOKAT( l_U277 );
             /* MAL_TELEPORTPED */ sub_50093( l_U277, l_U335, l_U338 );
             /* P_CREATE_AND_START_TIMER */ sub_52218( ref l_U1273, 4000 );
        }
        if (l_U349)
        {
            if ((NOT (IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1458() ))) AND ((NOT (IS_ANY_SPEECH_PLAYING( l_U277 ))) AND (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_65216( l_U354 )))))
            {
                if ((l_U364 < 3) AND ( /* ISTIMERDONE */ sub_2630( ref l_U1273 )))
                {
                     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_50903( ref l_U354 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_51014( 1, l_U277, "PASSOS", ref l_U354, 2, 0 );
                     /* PLAY_SINGLE_SPEECH */ sub_51281( "SSTD_MNFM", ref l_U354, 7, 1 );
                     /* P_CREATE_AND_START_TIMER */ sub_52218( ref l_U1273, 11000 );
                    l_U364++;
                }
            }
        }
        if (NOT l_U352)
        {
            if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_63465( ref l_U586, 0 )) || ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_63465( ref l_U565, 0 )))
            {
                 /* WRITESCRIPTLOG */ sub_1069( "GA", "Passos moving to Dark Room door.", 0 );
                l_U352 = 1;
                CLEAR_PED_PRIMARY_LOOKAT( l_U277 );
                 /* P_PASSOS_MOVE_TO_DARK_ROOM_DOOR */ sub_80588();
                l_U349 = 0;
                 /* RESETTIMER */ sub_3206( ref l_U1273 );
            }
        }
        if ( /* F_IS_PASSOS_OUTSIDE_DARK_ROOM */ sub_80709())
        {
             /* MAL_TELEPORTPED */ sub_50093( l_U277, l_U339, l_U342 );
        }
        if ( /* F_ISPLAYERINTRIGGERREGION */ sub_80844( ref l_U1424, 0 ))
        {
             /* P_SET_LOCKER_ROOM_GRAVITY_WELLS_ENABLED */ sub_81036( 0 );
        }
        else
        {
             /* P_SET_LOCKER_ROOM_GRAVITY_WELLS_ENABLED */ sub_81036( 1 );
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_63465( ref l_U649, 0 ))
        {
            SIMULATE_PLAYER_INPUT_GAIT(  /* PLAYER_ID */ sub_1496(), 3, 5000, 0 );
        }
        if ( /* F_IS_PLAYER_AT_SECOND_STUMBLE */ sub_81608())
        {
            l_U113 = 12;
        }
        break;
        case 12:
        if (l_U114)
        {
             /* WRITESCRIPTLOG */ sub_1069( "[SA]", "Entering progression state STATE_DARK_ROOM.", "[STATE]" );
            if (NOT (IS_PED_DEAD( l_U277 )))
            {
                CLEAR_PED_PRIMARY_LOOKAT( l_U277 );
            }
             /* P_START_SECOND_BLOOD_SMEAR */ sub_81879();
             /* P_CREATE_AND_START_TIMER */ sub_52218( ref l_U1981, 2000 );
             /* P_CREATE_AND_START_TIMER */ sub_52218( ref l_U1325, 1500 );
             /* P_CREATE_AND_START_TIMER */ sub_52218( ref l_U1155, 10600 );
             /* P_CREATE_AND_START_TIMER */ sub_52218( ref l_U1164, 11400 );
             /* P_CREATE_AND_START_TIMER */ sub_52218( ref l_U1346, 6000 );
             /* P_RESET_RANDOM_IMAGE_FX */ sub_68069( 0 );
             /* CLEANCAMERA */ sub_8040( ref l_U1973 );
            l_U1973 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
            l_U1974 = 1;
        }
        if (l_U1974 == 1)
        {
            if (IS_SCRIPTEDFX_ENABLED() == 1)
            {
                if ((IS_BULLET_CAMERA_SCENE_ACTIVE( l_U1973 )) == 0)
                {
                    SETUP_BULLET_CAMERA_ANIM_SCENE( l_U1973,  /* PLAYER_PED_ID */ sub_1458(),  /* PLAYER_PED_ID */ sub_1458() );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_1069( "SP", "Curved Wall Lean Image FX started...", 0 );
                    l_U1974 = 0;
                }
            }
        }
        if ( /* ISTIMERDONE */ sub_2630( ref l_U1981 ))
        {
             /* MAL_RECREATEOBJECTWITHNOROTATIONINROOM */ sub_82427( ref l_U1977, 1427023677, l_U1978, ref g_U2452, 1, 0 );
             /* MAL_PLAYOBJECTANIM */ sub_83022( l_U1977, "BLOOD_PARENT", "st_objModels", 1065353216, 0 );
        }
         /* P_HANDLE_FIELD_CAM_SHAKING */ sub_70117();
        if ( /* ISTIMERDONE */ sub_2630( ref l_U1346 ))
        {
             /* P_PLAY_STUMBLE_SPEECH */ sub_73760();
             /* MAL_SETFOOTSTEPSTYPE */ sub_7813( 0 );
        }
        if (l_U2010)
        {
            if (CAMERA_ANIMATED_CURRENT_TIME() > 6000)
            {
                CAMERA_ANIMATED_STOP( 1000, 1 );
                CAMERA_POINT_AT_COORD( 37.24014000, 70.47929000, -2.09090200, 0 );
                 /* NIS_POST_SETUP */ sub_54843( 1, 1 );
                if (NOT (IS_PED_DEAD( l_U277 )))
                {
                    CLEAR_PED_DEFAULT_AIM( l_U277 );
                    TASK_CLEAR_LOOK_AT( l_U277 );
                }
                 /* P_CAM_SHAKE_ACTIVATE */ sub_70224( ref l_U1914 );
                l_U2010 = 0;
                 /* P_START_CHECKPOINT_THREAD */ sub_83288( ref g_U888[2] );
            }
        }
        if ( /* F_IS_PLAYER_AT_THIRD_STUMBLE */ sub_83342())
        {
            CAMERA_CLEAR_POINT_AT_TARGET();
             /* MAL_RECREATEOBJECTWITHNOROTATIONINROOM */ sub_82427( ref l_U1977, -2073357282, l_U1978, ref g_U2452, 1, 0 );
        }
        if ( /* F_IS_PLAYER_AT_FOURTH_STUMBLE */ sub_83513())
        {
             /* MAL_SETFOOTSTEPSTYPE */ sub_7813( 1 );
             /* P_START_THIRD_BLOOD_SMEAR */ sub_83671();
             /* P_CREATE_AND_START_TIMER */ sub_52218( ref l_U1346, 6000 );
             /* P_RESET_RANDOM_IMAGE_FX */ sub_68069( 0 );
             /* CLEANCAMERA */ sub_8040( ref l_U1975 );
            l_U1975 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
            l_U1976 = 1;
        }
        if (l_U1976 == 1)
        {
            if (IS_SCRIPTEDFX_ENABLED() == 1)
            {
                if ((IS_BULLET_CAMERA_SCENE_ACTIVE( l_U1975 )) == 0)
                {
                    SETUP_BULLET_CAMERA_ANIM_SCENE( l_U1975,  /* PLAYER_PED_ID */ sub_1458(),  /* PLAYER_PED_ID */ sub_1458() );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_1069( "SP", "Dark Room Lean Image FX started...", 0 );
                     /* P_INIT_RANDOM_IMAGEFX_HALL */ sub_76665();
                    l_U1976 = 0;
                }
            }
        }
        if ( /* ISTIMERDONE */ sub_2630( ref l_U1155 ))
        {
             /* WRITESCRIPTLOG */ sub_1069( "SA", "Playing S_STAD_VIG15_YELLS", 0 );
            if (NOT (IS_PED_DEAD( l_U277 )))
            {
                 /* P_STREAMREQ_SCRIPT_STREAM_PLAY_FROM_PED */ sub_71533( l_U277, "S_STAD_VIG15_YELLS", ref g_U2034 );
            }
        }
        if ( /* ISTIMERDONE */ sub_2630( ref l_U1164 ))
        {
            AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1", "", 0, 8000, -1, -1082130432, 0 );
             /* P_CLOSE_DARK_ROOM_DOORS */ sub_84207();
             /* P_SHOOT_AT_COORD */ sub_84292( l_U277, 49.00301000, 70.72737000, -1.92489500 );
            PLAY_SOUND_FROM_PED( -1, "S_STAD_LOCKER_ROOM_SHOTS", l_U277 );
            if (IS_SCRIPTEDFX_ENABLED() == 1)
            {
                 /* WRITESCRIPTLOG */ sub_1069( "SP", "Playing Dark Room Passos shot 1 Image FX", 0 );
                PLAY_IMAGEFX( "kill_flash_double", 3, 0 );
            }
             /* STARTTIMER */ sub_2497( ref l_U1173 );
        }
        if ( /* ISTIMERDONE */ sub_2630( ref l_U1173 ))
        {
             /* P_SHOOT_AT_COORD */ sub_84292( l_U277, 49.00301000, 70.72737000, -1.92489500 );
            PLAY_SOUND_FROM_PED( -1, "S_STAD_LOCKER_ROOM_SHOTS", l_U277 );
             /* MAL_TELEPORTPED */ sub_50093( l_U277, l_U343, l_U346 );
            if (IS_SCRIPTEDFX_ENABLED() == 1)
            {
                 /* WRITESCRIPTLOG */ sub_1069( "SP", "Playing Dark Room Passos shot 2 Image FX", 0 );
                PLAY_IMAGEFX( "kill_flash_double", 3, 0 );
            }
             /* STARTTIMER */ sub_2497( ref l_U1191 );
        }
        if ( /* ISTIMERDONE */ sub_2630( ref l_U1191 ))
        {
             /* P_SHOOT_AT_COORD */ sub_84292( l_U277, 49.00301000, 70.72737000, -1.92489500 );
            PLAY_SOUND_FROM_PED( -1, "S_STAD_LOCKER_ROOM_SHOTS", l_U277 );
            if (IS_SCRIPTEDFX_ENABLED() == 1)
            {
                 /* WRITESCRIPTLOG */ sub_1069( "SP", "Playing Dark Room Passos shot 3 Image FX", 0 );
                PLAY_IMAGEFX( "kill_flash_double", 3, 0 );
            }
             /* STARTTIMER */ sub_2497( ref l_U1200 );
        }
        if ( /* ISTIMERDONE */ sub_2630( ref l_U1200 ))
        {
             /* P_SHOOT_AT_COORD */ sub_84292( l_U277, 49.00301000, 70.72737000, -1.92489500 );
            PLAY_SOUND_FROM_PED( -1, "S_STAD_LOCKER_ROOM_SHOTS", l_U277 );
            if (IS_SCRIPTEDFX_ENABLED() == 1)
            {
                 /* WRITESCRIPTLOG */ sub_1069( "SP", "Playing Dark Room Passos shot 4 Image FX", 0 );
                PLAY_IMAGEFX( "kill_flash_double", 3, 0 );
            }
             /* STARTTIMER */ sub_2497( ref l_U1182 );
             /* P_CREATE_AND_START_TIMER */ sub_52218( ref l_U1273, 10000 );
        }
        if ( /* ISTIMERDONE */ sub_2630( ref l_U1182 ))
        {
             /* P_PASSOS_MOVE_INTO_DARK_ROOM */ sub_85111();
        }
        if ((l_U375 < 2) AND ((NOT (IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1458() ))) AND ((NOT (IS_ANY_SPEECH_PLAYING( l_U277 ))) AND (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_65216( l_U365 ))))))
        {
            if ( /* ISTIMERDONE */ sub_2630( ref l_U1273 ))
            {
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_50903( ref l_U365 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_51014( 1, l_U277, "PASSOS", ref l_U365, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_51281( "SSTD_VIG16", ref l_U365, 7, 1 );
                 /* P_CREATE_AND_START_TIMER */ sub_52218( ref l_U1273, 11000 );
                l_U375++;
            }
        }
        if ( /* ISTIMERDONE */ sub_2630( ref l_U1325 ))
        {
             /* P_PASSOS_MOVE_TO_DARK_ROOM_SHOOT_POINT */ sub_85456();
             /* P_PLAY_DARK_ROOM_SPEECH */ sub_85557();
        }
        if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_63465( ref l_U607, 0 )) == 1)
        {
            DISABLE_RESTART_CHECKPOINT( 1 );
            ISEQ_TERMINATE( 2130328435 );
             /* P_STREAMREQ_ISEQ_REMOVE */ sub_5291( 2130328435, ref g_U1263 );
             /* CLEANPED */ sub_4149( l_U277 );
            g_U3869 = 1;
            l_U113 = 14;
        }
        break;
        case 13:
        if (l_U114)
        {
             /* NIS_PRE_SETUP */ sub_53919( 1, 1, 256, 0 );
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1458(), 0 );
            DO_SCREEN_FADE_OUT( 250 );
            l_U117 = 1;
        }
         /* P_HANDLE_FIELD_DEATH_SEQUENCE */ sub_85843();
        break;
        case 14:
        if ((g_U855 == 2) || (NOT HAS_CUTSCENE_FINISHED()))
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U113 = 0;
             /* MAL_WRITESCRIPTLOG */ sub_898( "eCheckpointState = CP_IDLE" );
        }
        break;
    }
     /* P_HANDLE_STATIC_IMAGE_FX */ sub_86857();
     /* P_HANDLE_RANDOM_IMAGE_FX */ sub_87247();
    if (l_U113 != iVar2)
    {
        l_U114 = 1;
    }
    else
    {
        l_U114 = 0;
    }
    return;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_13949()
{
     /* MAL_WRITESCRIPTLOG */ sub_898( "P_INITIALIZE_SCRIPT_DATA" );
    l_U119 = 0;
    l_U262 = 0;
    l_U263 = 0;
    l_U347 = 0;
    l_U348 = 0;
    l_U349 = 0;
    l_U350 = 0;
    l_U351 = 0;
    l_U352 = 0;
    l_U1334 = 0;
    l_U1335 = 0;
    l_U1133 = 0;
    l_U1355 = 0;
    l_U1356 = 0;
    l_U1357 = 0;
    l_U1358 = 0;
    l_U1359 = 0;
    l_U1565 = 1;
    l_U1566 = 1;
    l_U1567 = 1;
    l_U353 = 0;
    l_U1911 = 1;
    l_U1912 = 0;
     /* CREATETIMER */ sub_2347( ref l_U670, 2000, 1, 0 );
     /* CREATETIMER */ sub_2347( ref l_U1115, l_U1114, 1, 0 );
     /* CREATETIMER */ sub_2347( ref l_U1124, 1500, 1, 0 );
     /* CREATETIMER */ sub_2347( ref l_U1173, 2000, 1, 0 );
     /* CREATETIMER */ sub_2347( ref l_U1182, 500, 1, 0 );
     /* CREATETIMER */ sub_2347( ref l_U1273, 4000, 1, 0 );
     /* CREATETIMER */ sub_2347( ref l_U1325, 750, 1, 0 );
     /* CREATETIMER */ sub_2347( ref l_U1191, 1000, 1, 0 );
     /* CREATETIMER */ sub_2347( ref l_U1200, 750, 1, 0 );
     /* CREATETIMER */ sub_2347( ref l_U1164, 11000, 1, 0 );
     /* CREATETIMER */ sub_2347( ref l_U1337, 6000, 1, 0 );
     /* CREATETIMER */ sub_2347( ref l_U1346, 6000, 1, 0 );
    l_U1568 = 0;
    l_U1913 = 0;
     /* P_OPENDOOR */ sub_14348( ref g_U2933, 0, 1, 65446 );
     /* P_OPENDOOR */ sub_14348( ref g_U2926, 0, 1, 90 );
     /* P_SETDOORMINMAXLIMIT */ sub_14647( ref g_U2933, 65445, 65447 );
     /* P_SETDOORMINMAXLIMIT */ sub_14647( ref g_U2926, 89, 91 );
    l_U311 = 0;
    l_U313 = 0;
    l_U1963 = 0;
    l_U1974 = 0;
    l_U1976 = 0;
    l_U1990 = 0;
    l_U1991 = 0;
    l_U2010 = 0;
    l_U2011 = 0;
    l_U117 = 0;
     /* RESETTIMER */ sub_3206( ref l_U1838 );
    l_U1910 = 0;
    l_U1674 = 2;
    l_U1282 = 0;
    l_U1272 = 0;
    l_U1283 = nil;
    l_U1284 = nil;
    l_U364 = 0;
    l_U375 = 0;
    l_U114 = 1;
    return;
}

/* P_OPENDOOR */ void sub_14348(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if (( /* F_DOESDOOREXIST */ sub_14373( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_14457( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_14373(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_14457(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_SETDOORMINMAXLIMIT */ void sub_14647(int iParam0, float fParam1, float fParam2)
{
    if (( /* F_DOESDOOREXIST */ sub_14373( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_14457( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        PRINTSTRING( "[SP]### Error: Door fMinLimit greater than fMaxLimit (default min:-81.0 max:81.0) ###" );
        PRINTNL();
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

/* P_SET_STATIC_DATA */ void sub_15016()
{
     /* MAL_WRITESCRIPTLOG */ sub_898( "P_SET_STATIC_DATA" );
     /* P_CREATETRIGGERBOX */ sub_15140( ref l_U376, "TRIG_3D_IMAGE_FX", 0.00000000, 16.61000000, 0.00000000, 15.00000000, 10.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15140( ref l_U397, "TRIGGER_PASSOS_TO_STAIRS", 0.16000000, 23.75000000, -0.03000000, 11.76000000, 12.06000000, 4.21000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15140( ref l_U418, "TRIG_BSMT_DOORS_IMAGE_FX", -0.03000000, 45.63000000, -3.41000000, 3.00000000, 2.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15140( ref l_U439, "TRIGGER_START_STEADY", -0.08000000, 31.81000000, -0.50000000, 7.90000000, 1.36000000, 2.71000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15140( ref l_U460, "TRIGGER_PASSOS_INTO_BASEMENT", 0.16000000, 40.64000000, -2.84000000, 12.82000000, 8.44000000, 8.34000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15140( ref l_U481, "TRIGGER_START_HEADCRACK", -0.31000000, 52.65000000, -3.41000000, 5.03000000, 15.45000000, 3.21000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15140( ref l_U502, "TRIG_BLOODTRAIL", 7.11000000, 70.89000000, -3.37000000, 3.08000000, 3.04000000, 2.12000000, 0.00000000, 0.00000000, 45.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15140( ref l_U544, "TRIGGER_PASSOS_TO_SHOWERS", 16.03000000, 73.11000000, -3.52000000, 2.51000000, 5.15000000, 2.53000000, 0.00000000, 0.00000000, 1.03000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15140( ref l_U523, "TRIGGER_FIELD_TUNNEL_EXIT", -0.02000000, 66.70000000, -3.19000000, 5.00000000, 5.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15140( ref l_U1360[0], "TRIGGER_DEACTIVATE_GRAV_WELL_0", 29.51000000, 64.48000000, -3.20000000, 3.02000000, 5.91000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15140( ref l_U1360[1], "TRIGGER_DEACTIVATE_GRAV_WELL_1", 30.57000000, 53.74000000, -3.20000000, 1.07000000, 5.82000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15140( ref l_U1360[2], "TRIGGER_DEACTIVATE_GRAV_WELL_2", 23.67000000, 57.63000000, -3.20000000, 1.97000000, 1.64000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERREGION */ sub_16186( ref l_U1424, ref l_U1360 );
     /* P_CREATETRIGGERBOX */ sub_15140( ref l_U565, "TRIGGER_PASSOS_TO_DARKROOM_01", 26.86000000, 66.47000000, -3.52000000, 2.51000000, 5.15000000, 2.53000000, 0.00000000, 0.00000000, 111.94000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15140( ref l_U586, "TRIGGER_PASSOS_TO_DARKROOM_02", 24.57000000, 54.66000000, -3.52000000, 2.51000000, 5.15000000, 2.53000000, 0.00000000, 0.00000000, 24.47000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15140( ref l_U607, "TRIGGER_END_FIELD", 35.99000000, 70.91000000, -3.22000000, 2.51000000, 3.00000000, 2.53000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15140( ref l_U1134, "tb_PlayerSafeFromSniper", -0.08000000, 30.20000000, 0.20000000, 5.00000000, 7.99000000, 2.94000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15140( ref l_U628, "TRIGGER_REACTIVATE_SNIPER", 0.16000000, 21.68000000, -0.03000000, 11.76000000, 12.06000000, 4.21000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15140( ref l_U1611, "TRIGGER_DIE_MAX_DIE_RIGHT", 25.75000000, 8.18000000, -0.10000000, 62.44000000, 16.12000000, 3.27000000, 0.00000000, 0.00000000, -59.94000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15140( ref l_U1653, "TRIGGER_DIE_MAX_DIE_REAR", -0.73000000, -18.25000000, -0.10000000, 81.69000000, 14.75000000, 3.27000000, 0.00000000, 0.00000000, -9.67999000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15140( ref l_U1632, "TRIGGER_DIE_MAX_DIE_LEFT", -10.06000000, 10.35000000, -0.10000000, 42.77000000, 13.38000000, 3.27000000, 0.00000000, 0.00000000, 90.41000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15140( ref l_U1847, "tbImageFXWall", 1.40000000, 54.77000000, -3.73729000, 1.00000000, 1.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15140( ref l_U1868, "tbImageFXCorner01", 6.95958000, 69.80270000, -3.74000000, 10.00000000, 10.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15140( ref l_U1889, "tbImageFXCorner02", 25.77000000, 64.00000000, -3.74000000, 10.00000000, 10.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15140( ref l_U649, "TRIGGER_MAKEGOWALK", 30.80000000, 58.94000000, -3.24000000, 2.90000000, 4.45000000, 2.29000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_17501( ref l_U147[0], 9.20000000, 23.92000000, 0.17000000, 205.00000000, 1670196971, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_17501( ref l_U147[1], 9.40000000, 23.92000000, 0.17000000, 205.00000000, 253926538, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_17501( ref l_U147[2], 9.60000000, 23.92000000, 0.17000000, 205.00000000, -236362279, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_17501( ref l_U147[3], 9.80000000, 23.92000000, 0.17000000, 205.00000000, 1048803264, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_17501( ref l_U147[4], 10.00000000, 23.92000000, 0.17000000, 205.00000000, -1259721122, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_17501( ref l_U147[5], 10.20000000, 23.92000000, 0.17000000, 205.00000000, -55197192, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_17501( ref l_U147[6], 9.00000000, 23.92000000, 0.17000000, 205.00000000, -1838870036, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_17501( ref l_U147[7], 9.00000000, 23.92000000, 0.17000000, 205.00000000, 762087143, 7, 3, 2, 0, 0 );
    ENABLE_GRAVITY_WELL( "st_00_fd_simple", "GravWell_MaxStumble01", 1, 0, 0, 0 );
    ENABLE_GRAVITY_WELL( "st_00_fd_simple", "GravWell_MaxStumbleFall02", 0, 0, 0, 0 );
     /* P_CAM_SHAKE_CREATE_STRUCT */ sub_18057( ref l_U1914, 7, 0.10000000, 0, -1, 1500, 0, 0 );
    return;
}

/* P_CREATETRIGGERBOX */ void sub_15140(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATETRIGGERREGION */ void sub_16186(int iParam0, unknown uParam1)
{
    int iVar4;
    int I;

    iVar4 = (uParam1^);
    if (iVar4 > 6)
    {
         /* WRITESCRIPTLOG */ sub_1069( "[SA]", "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
        SCRIPT_ASSERT( "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
    }
    for ( I = 0; I < iVar4; I++ )
    {
        iParam0->_fU0[I] = {(uParam1^)[I]};
    }
    iParam0->_fU508 = iVar4;
    iParam0->_fU548 = 0;
    iParam0->_fU552 = 0;
    iParam0->_fU556 = 0;
    iParam0->_fU560 = 0;
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_17501(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CAM_SHAKE_CREATE_STRUCT */ void sub_18057(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    if (iParam0->_fU168 == 0)
    {
         /* P_CAM_SHAKE_SET_SHAKE_TYPE */ sub_18113( iParam0, uParam1 );
        iParam0->_fU192 = uParam1;
        iParam0->_fU36 = uParam2;
        iParam0->_fU148 = uParam3;
        iParam0->_fU152 = uParam4;
        iParam0->_fU156 = uParam5;
        iParam0->_fU160 = uParam7;
        iParam0->_fU176 = uParam6;
    }
     /* RESETTIMER */ sub_3206( iParam0 + 40 );
     /* RESETTIMER */ sub_3206( iParam0 + 76 );
     /* RESETTIMER */ sub_3206( iParam0 + 112 );
    iParam0->_fU172 = iParam0->_fU176;
    iParam0->_fU164 = 0;
    iParam0->_fU168 = 1;
    iParam0->_fU184 = 0;
    iParam0->_fU188 = 0;
    return;
}

/* P_CAM_SHAKE_SET_SHAKE_TYPE */ void sub_18113(int iParam0, unknown uParam1)
{
    switch (uParam1)
    {
        case 1:
        StrCopy( ref iParam0->_fU4, "SMALL_EXPLOSION_SHAKE", 32 );
        break;
        case 2:
        StrCopy( ref iParam0->_fU4, "MEDIUM_EXPLOSION_SHAKE", 32 );
        break;
        case 3:
        StrCopy( ref iParam0->_fU4, "LARGE_EXPLOSION_SHAKE", 32 );
        break;
        case 4:
        StrCopy( ref iParam0->_fU4, "HAND_SHAKE", 32 );
        break;
        case 5:
        StrCopy( ref iParam0->_fU4, "JOLT_SHAKE", 32 );
        break;
        case 6:
        StrCopy( ref iParam0->_fU4, "VIBRATE_SHAKE", 32 );
        break;
        case 7:
        StrCopy( ref iParam0->_fU4, "WOBBLY_SHAKE", 32 );
        break;
    }
    iParam0->_fU0 = iParam0->_fU192;
    return;
}

/* P_INITIALIZE_SP_CHALLENGES */ void sub_18602()
{
    return;
}

/* P_REQUEST_FIELD_PERSISTENT_ASSETS */ void sub_18779()
{
     /* MAL_WRITESCRIPTLOG */ sub_898( "P_REQUEST_FIELD_PERSISTENT_ASSETS start" );
     /* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ sub_18880( ref l_U2012, ref g_U1069 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT_ARRAY */ sub_21802( ref l_U2020, ref g_U1214 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_23850( "LEVEL_S_STAD_CP_01", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_23850( "LEVEL_S_STAD_LOCKER", ref g_U1354 );
     /* P_STREAMREQ_ACTION_TREE_INSERT */ sub_25792( "/LEVEL/S_STAD/s_stad_inj1.act", ref g_U2012 );
    if ((NOT l_U77._fU0) AND (g_U854 == 0))
    {
         /* P_LOAD_PLGE_ANIM_DICTS */ sub_27720( 0, 1 );
    }
    else
    {
         /* P_LOAD_PLGE_ANIM_DICTS */ sub_27720( 0, 0 );
    }
     /* MAL_WRITESCRIPTLOG */ sub_898( "P_REQUEST_FIELD_PERSISTENT_ASSETS end" );
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ void sub_18880(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_18953( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT */ void sub_18953(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 =  /* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ sub_19020( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar4 );
            PRINTNL();
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_19278( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Inserting MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ int sub_19020(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_19278( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is loading: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_19278( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                     /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_19278( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_20809( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being removed: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_19278( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_19278( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ void sub_19278(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19339( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ int sub_19339(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID is active: {} ###", 1, 513, (uParam1^)[I] );
                if ((uParam1^)[I] == iParam0)
                {
                    DISPLAYF( "The THREADID was already requested by this thread!!!", 0 );
                    DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                    (uParam1^)[I] = nil;
                    Result = I;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The THREADID index was requested by another thread!!! {} ###", 1, 513, I );
                }
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is NOT active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

/* P_STREAMREQ_THREADID_RESET */ void sub_20809(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT_ARRAY */ void sub_21802(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_21876( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT */ void sub_21876(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ sub_21930( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_22191( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ int sub_21930(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_22191( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is loading: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_22191( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The WEAPON_TYPE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_22191( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_20809( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being removed: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_22191( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            DISPLAYF( "The WEAPON_TYPE asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_22191( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ void sub_22191(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19339( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_INSERT */ void sub_23850(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ sub_23902( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ANIM_DICT asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_24154( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ int sub_23902(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_24154( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_24154( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ANIM_DICT asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_24154( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_20809( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_24154( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ANIM_DICT asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ANIM_DICT: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
             /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_24154( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ void sub_24154(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19339( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ACTION_TREE_INSERT */ void sub_25792(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ACTION_TREE_IS_INDEX_AVAILABLE */ sub_25846( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ACTION_TREE asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
         /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_26104( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ACTION_TREE_IS_INDEX_AVAILABLE */ int sub_25846(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ACTION_TREE is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_26104( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ACTION_TREE is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ACTION_TREE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_26104( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_ACTION_TREE_LOADED( uParam0 ))
                {
                    DISPLAYF( "[CCB] ### The ACTION_TREE is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ACTION_TREE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_26104( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ACTION_TREE is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ACTION_TREE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_20809( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ACTION_TREE is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_26104( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_ACTION_TREE_LOADED( uParam0 ))
        {
            DISPLAYF( "[CCB] ### The ACTION_TREE is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ACTION_TREE is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ACTION_TREE: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
             /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_26104( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ACTION_TREE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ void sub_26104(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19339( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ACTION_TREE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_LOAD_PLGE_ANIM_DICTS */ void sub_27720(boolean bParam0, boolean bParam1)
{
    if (NOT bParam0)
    {
        if (NOT bParam1)
        {
             /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_23850( "PLGE_RIFLE_CROUCH", ref g_U1354 );
             /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_23850( "PLGE_PSTL_CROUCH", ref g_U1354 );
             /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_23850( "PLGE_RIFLE_KNEE", ref g_U1354 );
             /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_23850( "PLGE_PSTL_KNEE", ref g_U1354 );
             /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_23850( "PLGE_PSTL_CORE", ref g_U1354 );
             /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_23850( "PLGE_PSTL_COVER", ref g_U1354 );
        }
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_23850( "PLGE_RIFLE_CORE", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_23850( "PLGE_RIFLE_CORE_RELOAD", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_23850( "PLGE_PSTL_CORE_RELOAD", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_23850( "PLGE_RIFLE_HANDSIG", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_23850( "PLGE_PSTL_HANDSIG", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_23850( "PLGE_RIFLE_ACTIONS", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_23850( "PLGE_PSTL_ACTIONS", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_23850( "PLGE_RIFLE_COVER", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_23850( "PLGE_RIFLE_REACT", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_23850( "PLGE_PSTL_REACT", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_23850( "PLGE_RIFLE_COVER_EXIT", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_23850( "PLGE_PSTL_COVER_EXIT", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_23850( "PLGE_PSTL_FULLBODY", ref g_U1354 );
    }
    else
    {
         /* LOADANIMDICT */ sub_28351( "PLGE_RIFLE_CROUCH", 0, 1 );
         /* LOADANIMDICT */ sub_28351( "PLGE_PSTL_CROUCH", 0, 1 );
         /* LOADANIMDICT */ sub_28351( "PLGE_RIFLE_CORE", 0, 1 );
         /* LOADANIMDICT */ sub_28351( "PLGE_PSTL_CORE", 0, 1 );
         /* LOADANIMDICT */ sub_28351( "PLGE_RIFLE_CORE_RELOAD", 0, 1 );
         /* LOADANIMDICT */ sub_28351( "PLGE_PSTL_CORE_RELOAD", 0, 1 );
         /* LOADANIMDICT */ sub_28351( "PLGE_RIFLE_HANDSIG", 0, 1 );
         /* LOADANIMDICT */ sub_28351( "PLGE_PSTL_HANDSIG", 0, 1 );
         /* LOADANIMDICT */ sub_28351( "PLGE_RIFLE_ACTIONS", 0, 1 );
         /* LOADANIMDICT */ sub_28351( "PLGE_PSTL_ACTIONS", 0, 1 );
         /* LOADANIMDICT */ sub_28351( "PLGE_RIFLE_KNEE", 0, 1 );
         /* LOADANIMDICT */ sub_28351( "PLGE_PSTL_KNEE", 0, 1 );
         /* LOADANIMDICT */ sub_28351( "PLGE_RIFLE_COVER", 0, 1 );
         /* LOADANIMDICT */ sub_28351( "PLGE_PSTL_COVER", 0, 1 );
         /* LOADANIMDICT */ sub_28351( "PLGE_RIFLE_REACT", 0, 1 );
         /* LOADANIMDICT */ sub_28351( "PLGE_PSTL_REACT", 0, 1 );
         /* LOADANIMDICT */ sub_28351( "PLGE_RIFLE_COVER_EXIT", 0, 1 );
         /* LOADANIMDICT */ sub_28351( "PLGE_PSTL_COVER_EXIT", 0, 1 );
         /* LOADANIMDICT */ sub_28351( "PLGE_PSTL_FULLBODY", 0, 1 );
    }
    return;
}

/* LOADANIMDICT */ void sub_28351(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an animation dictionary to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_REQUEST_FIELD_NONPERSISTENT_ASSETS */ void sub_29078()
{
     /* MAL_WRITESCRIPTLOG */ sub_898( "P_REQUEST_FIELD_NONPERSISTENT_ASSETS start" );
    if ((l_U115) AND (g_U855 == 0))
    {
         /* WRITESCRIPTLOG */ sub_1069( "AT", "Requesting 03_01_STAD_concat ...", 0 );
         /* LOADSEAMLESSCUTSCENE */ sub_29262( "03_01_STAD_concat", 0 );
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_21876( 1224272620, ref g_U1214 );
    }
     /* P_STREAMREQ_ISEQ_INSERT */ sub_29625( -1110817698, ref g_U1263 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_29625( -1424164141, ref g_U1263 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_29625( 2130328435, ref g_U1263 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_29625( -1191130939, ref g_U1263 );
     /* P_STREAMREQ_SCRIPT_STREAM_INSERT */ sub_32485( "S_STAD_EDI_KILL1", ref g_U2034 );
     /* P_STREAMREQ_SCRIPT_STREAM_INSERT */ sub_32485( "S_STAD_VIG15_YELLS", ref g_U2034 );
    AUDIO_MUSIC_REQUEST_ONESHOT( "STADIUM_ONESHOT_1", 0 );
     /* MAL_WRITESCRIPTLOG */ sub_898( "P_REQUEST_FIELD_NONPERSISTENT_ASSETS end" );
    return;
}

/* LOADSEAMLESSCUTSCENE */ void sub_29262(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* P_STREAMREQ_ISEQ_INSERT */ void sub_29625(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 =  /* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ sub_29686( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar12 );
            PRINTNL();
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar4 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
             /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_29936( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

/* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ int sub_29686(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_29936( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is loading: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_29936( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                        DISPLAYF( "The ISEQ asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_29936( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loading: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_29936( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### Re-requesting ISEQ: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_20809( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_20809( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being removed: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_29936( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar5 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_29936( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ISEQ_THREADID_SET_ID */ void sub_29936(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19339( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_SCRIPT_STREAM_INSERT */ void sub_32485(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_SCRIPT_STREAM_IS_INDEX_AVAILABLE */ sub_32541( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing SCRIPT_STREAM asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_32805( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_INDEX_AVAILABLE */ int sub_32541(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_32805( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is already loading!!!", 0 );
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_32805( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (Result <= 2)
                {
                    if ((GET_SCRIPT_STREAM_STATE( uParam0, Result )) == 2)
                    {
                        DISPLAYF( "[CCB] ### The SCRIPT_STREAM is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                        DISPLAYF( "The SCRIPT_STREAM asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_32805( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### The SCRIPT_STREAM is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The SCRIPT_STREAM asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                        (uParam1^)[Result]._fU32 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_20809( ref (uParam1^)[Result]._fU36 );
                        return Result;
                    }
                }
                else
                {
                    DISPLAYF( "[CCB] ### The SCRIPT_STREAM is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The SCRIPT_STREAM asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_32805( Result, uParam1, uParam2 );
                    return -1;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_32805( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (Result <= 2)
        {
            if ((GET_SCRIPT_STREAM_STATE( uParam0, iVar6 )) == 2)
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is already loaded: {} ###", 1, 1537, uParam0 );
                DISPLAYF( "The SCRIPT_STREAM asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing SCRIPT_STREAM: {} ###", 1, 1537, uParam0 );
                StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
                (uParam1^)[iVar6]._fU32 = 3;
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_32805( iVar6, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar6;
            }
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The SCRIPT_STREAM - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ void sub_32805(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19339( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The SCRIPT_STREAM asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_LOADED */ int sub_34808(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be requested: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to load: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be removed: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ int sub_35205(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be requested: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to load: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be removed: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ANIM_DICT_IS_LOADED */ int sub_35607(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be requested: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to load: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be removed: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ISEQ_IS_LOADED */ int sub_35998(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be requested: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to load: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be removed: {} ###", 1, 1281, ref uVar3 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ACTION_TREE_IS_LOADED */ int sub_36412(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_LOADED */ int sub_36790(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* HAS_SAVEFILE_LOADED */ int sub_37395(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_1069( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_9061( uParam0,  /* PLAYER_PED_ID */ sub_1458() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* P_FIELDENEMIESPRE */ void sub_37655()
{
     /* STAD_ENEMYSTRUCTFILL */ sub_37742( ref l_U679[0], -5.36000000, 17.09000000, 0.17000000, 336.30000000, g_U652, -1259721122, -442116668, 5, 12, 0, 68019059, 0 );
    l_U950[0]._fU36 = 8000;
    l_U950[0]._fU76 = 5500;
     /* STAD_ENEMYSTRUCTFILL */ sub_37742( ref l_U679[1], 9.71000000, 23.92000000, 0.17000000, 205.00000000, g_U652, -236362279, -442116668, 5, 12, 0, -1074756423, 0 );
    l_U950[1]._fU36 = 6000;
    l_U950[1]._fU76 = 4250;
     /* STAD_ENEMYSTRUCTFILL */ sub_37742( ref l_U679[2], 9.62700000, 12.61500000, 0.17000000, 332.04400000, g_U652, 1048803264, -442116668, 5, 12, 0, 68019059, 0 );
    l_U950[2]._fU36 = 7000;
    l_U950[2]._fU76 = 2250;
     /* STAD_ENEMYSTRUCTFILL */ sub_37742( ref l_U679[3], 12.90000000, 16.61500000, 0.17000000, 24.13000000, g_U652, 1048803264, -442116668, 5, 12, 0, 68019059, 0 );
    l_U950[3]._fU36 = 5000;
    l_U950[3]._fU76 = 3500;
     /* STAD_ENEMYSTRUCTFILL */ sub_37742( ref l_U679[4], 15.54800000, 2.54400000, 0.17000000, 0.00000000, g_U652, 253926538, -442116668, 5, 12, 0, 68019059, 0 );
    l_U950[4]._fU36 = 4250;
    l_U950[4]._fU76 = 3500;
     /* STAD_ENEMYSTRUCTFILL */ sub_37742( ref l_U679[5], -3.72400000, 10.33300000, 0.17261100, 285.89880000, g_U652, 1670196971, 1689856371, 5, 12, 0, 68019059, 0 );
    l_U950[5]._fU36 = 6000;
    l_U950[5]._fU76 = 5000;
    return;
}

/* STAD_ENEMYSTRUCTFILL */ void sub_37742(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19)
{
     /* MAL_ENEMYSTRUCTFILL */ sub_37818( uParam0, uParam1, uParam4, uParam18, 68019059, 2, g_U3928, uParam15, uParam16, uParam14, uParam19, uParam17, uParam13, uParam5 );
    return;
}

/* MAL_ENEMYSTRUCTFILL */ void sub_37818(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29)
{
    iParam0->_fU56 = {uParam1};
    iParam0->_fU68 = uParam4;
    iParam0->_fU72 = uParam5;
    iParam0->_fU76 = uParam6;
    iParam0->_fU80 = uParam7;
    iParam0->_fU84 = {uParam8};
    iParam0->_fU116 = uParam16;
    iParam0->_fU120 = uParam17;
    iParam0->_fU124 = uParam18;
    iParam0->_fU128 = uParam19;
    iParam0->_fU132 = uParam20;
    iParam0->_fU136 = uParam21;
    iParam0->_fU140 = {uParam22};
    return;
}

/* P_CLOSEDOOR */ void sub_38535(int iParam0, int iParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_14373( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_14457( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

/* P_SETUP_PLAYER */ void sub_38795()
{
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() )))
    {
        SET_PAYNEKILLER_AMT( 0 );
        SET_PED_HEALTH(  /* PLAYER_PED_ID */ sub_1458(), 127, 0 );
        SET_CAM_SIDE_LEFT( 1 );
        ENABLE_PED_JUMPING(  /* PLAYER_PED_ID */ sub_1458(), 0 );
        SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1496(), 0 );
        SET_ADRENALINE_NOT_ALLOW( 1 );
        ENABLE_LAST_MAN_STANDING( 0 );
        SET_PED_ALLOWED_TO_DUCK(  /* PLAYER_PED_ID */ sub_1458(), 0 );
        SET_CAMERA_OVERRIDE( "UNARMED_INJURED_CAMERA", "", 0, 1, 1 );
    }
    return;
}

/* P_CREATE_HELICOPTER */ void sub_38973()
{
    g_U3705 =  /* CREATEVEHICLE */ sub_39034( 1049690760, -10.46000000, 5.99000000, 0.70000000, 18.00000000, 0, 0, 0 );
    return;
}

/* CREATEVEHICLE */ void sub_39034(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_39161( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for vehicle to exist: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

/* LOADMODEL */ void sub_39161(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_11162( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* F_CREATE_UNIQUE_FIELD_PEDS */ int sub_39607()
{
    switch (l_U119)
    {
        case 0: break;
        case 1:
         /* P_SETUP_PASSOS */ sub_39703();
        l_U119 = 2;
        break;
        case 2:
         /* P_SETUP_HEADCRACK_CS */ sub_41220();
        l_U119 = 3;
        break;
        case 3:
         /* P_SETUP_FIELD_SNIPER */ sub_41504();
        l_U119 = 4;
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

/* P_SETUP_PASSOS */ void sub_39703()
{
     /* P_CREATEPEDSTRUCT */ sub_39755( ref l_U264, l_U278, l_U281, g_U2376, 26, 6, 0, 0, 0 );
     /* MAL_CREATEPED */ sub_39879( ref l_U277, ref l_U264, 1, 0, 0 );
     /* MAL_GIVEPEDPERSISTANTVARIATION */ sub_40859( ref l_U277, "Pass_Stad_Hat" );
    if (NOT (IS_PED_DEAD( l_U277 )))
    {
        FREEZE_PED_POSITION( l_U277, 1 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U277, 1 );
        SET_PED_SWEAT( l_U277, 0.00000000, 0.00000000 );
        SET_PED_HEALTH( l_U277, 400, 0 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( l_U277, 0 );
        SET_PED_GORE_AS_ALLY( l_U277 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U277, 1 );
        SET_PED_CAN_INTERACT_WITH_DOORS( l_U277, 0 );
        SET_PED_CAN_PUSH_PLAYER( l_U277, 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( l_U277, 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_CAN_AI_KICK_THROUGH_CORPSES( l_U277, 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_VISIBLE( l_U277, 0 );
        SET_PED_INVINCIBLE( l_U277, 1 );
    }
    return;
}

/* P_CREATEPEDSTRUCT */ void sub_39755(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

/* MAL_CREATEPED */ void sub_39879(unknown uParam0, unknown uParam1, boolean bParam2, boolean bParam3, unknown uParam4)
{
     /* CLEANPED */ sub_4149( (uParam0^) );
    (uParam0^) =  /* CREATEPED */ sub_39915( uParam1 );
    if (bParam3)
    {
        while (NOT (DOES_PED_EXIST( (uParam0^) )))
        {
            WAIT( 0 );
             /* MAL_WRITESCRIPTLOG */ sub_898( "MAL_CreatePed waiting for ped to exist" );
        }
    }
    SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), uParam4 );
     /* MAL_SETPEDCOMBATATTRIBUTES */ sub_40726( uParam0, 32, 0 );
    SET_PED_IGNORE_LOS_CHECKS( (uParam0^), NOT bParam2 );
    SET_PED_EMOTION_STATE( (uParam0^), 1 );
    return (uParam0^);
}

/* CREATEPED */ void sub_39915(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_39161( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_40406( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_40507( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_40406(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_40507(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* MAL_SETPEDCOMBATATTRIBUTES */ void sub_40726(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_ATTRIBUTES( (uParam0^), uParam1, uParam2 );
    }
    return;
}

/* MAL_GIVEPEDPERSISTANTVARIATION */ void sub_40859(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PRINTSTRING( "[MSWW] ### Assigning scene ped variation: " );
         /* WRITE_STRING */ sub_11162( uParam1 );
        SET_PERSISTENT_PED_VARIATION( (uParam0^), uParam1 );
    }
    return;
}

/* P_SETUP_HEADCRACK_CS */ void sub_41220()
{
     /* P_CREATEPEDSTRUCT */ sub_39755( ref l_U282, l_U296, l_U299, 279061184, 26, 6, 0, 0, 0 );
     /* MAL_CREATEPED */ sub_39879( ref l_U295, ref l_U282, 1, 0, 0 );
     /* MAL_GIVEPEDPERSISTANTVARIATION */ sub_40859( ref l_U295, "M3_CS_06_Avg" );
    if (NOT (IS_PED_DEAD( l_U295 )))
    {
        FREEZE_PED_POSITION( l_U295, 1 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U295, 1 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U295, 1 );
        SET_PED_NAME_DEBUG( l_U295, "Headcrack" );
        SET_PED_VISIBLE( l_U295, 0 );
        SET_ROOM_FOR_PED_BY_NAME( l_U295, ref g_U2444 );
    }
    SET_PED_NAME_DEBUG( l_U295, "piHeadcrack" );
    l_U2025 =  /* F_GIVEPEDWEAPON */ sub_11553( l_U295, 150541352, 25000, 0, 0 );
    return;
}

/* P_SETUP_FIELD_SNIPER */ void sub_41504()
{
     /* P_CREATEPEDSTRUCT */ sub_39755( ref l_U1077, l_U1091, l_U1094, g_U2377, 8, 4, 2, 0, 0 );
     /* MAL_CREATEPED */ sub_39879( ref l_U1090, ref l_U1077, 0, 0, 0 );
     /* MAL_GIVEPEDPERSISTANTVARIATION */ sub_40859( ref l_U1090, "M3_CP_S1_Avg" );
     /* MAL_SETTEMPLATEANDRANGES */ sub_41632( ref l_U1090, "AIT_SNIPER", 1, 1000, 0 );
    SET_PED_FLAG_SNIPE_MOVING_TARGETS_OVERRIDE( l_U1090, 1 );
    SET_PED_NAME_DEBUG( l_U1090, "piFieldSniper" );
    if (NOT (IS_PED_DEAD( l_U1090 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1090, 1 );
        FREEZE_PED_POSITION( l_U1090, 1 );
        SET_ROOM_FOR_PED_BY_NAME( l_U1090, "Room_Pressbooth" );
        SET_PED_PERFECT_ACCURACY_OVERRIDE( l_U1090, 1 );
        SET_PED_ENABLE_SPAWN_INACCURACY( l_U1090, 0 );
        SET_PED_CONSUMING_AMMO( l_U1090, 0 );
    }
     /* F_GIVEPEDWEAPON */ sub_11553( l_U1090, -2075384407, 25000, 0, 0 );
     /* MAL_SETCANONLYFIREWITHCLEARLOS */ sub_42139( ref l_U1090, 0 );
     /* MAL_SETPEDCONSUMINGAMMO */ sub_42224( ref l_U1090, 0 );
     /* MAL_SETPEDSIGHTRANGE */ sub_42306( l_U1090, 1148846080 );
     /* MAL_SETPEDRELATIONSHIP */ sub_42410( ref l_U1090, 2, 3 );
     /* MAL_SETLOCKEDANDREGISTEREDONPLAYER */ sub_42487( ref l_U1090 );
     /* MAL_SETPEDALERTNESS */ sub_42771( ref l_U1090, 3 );
    return;
}

/* MAL_SETTEMPLATEANDRANGES */ void sub_41632(unknown uParam0, unknown uParam1, float fParam2, float fParam3, boolean bParam4)
{
     /* MAL_WRITESCRIPTLOG */ sub_898( "MAL_SetTemplateAndRanges" );
    PRINTSTRING( "[MSWW]### Template Name: " );
     /* WRITE_STRING */ sub_11162( uParam1 );
    PRINTSTRING( "[MSWW]### Min Range: " );
     /* WRITE_FLOAT */ sub_41776( fParam2 );
    PRINTSTRING( "[MSWW]### Max Range: " );
     /* WRITE_FLOAT */ sub_41776( fParam3 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    if (NOT bParam4)
    {
         /* MAL_SETPEDCOMBATATTRIBUTES */ sub_40726( uParam0, 1, 0 );
    }
    return;
}

/* WRITE_FLOAT */ void sub_41776(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* MAL_SETCANONLYFIREWITHCLEARLOS */ void sub_42139(unknown uParam0, boolean bParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_IGNORE_LOS_CHECKS( (uParam0^), NOT bParam1 );
    }
    return;
}

/* MAL_SETPEDCONSUMINGAMMO */ void sub_42224(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_CONSUMING_AMMO( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETPEDSIGHTRANGE */ void sub_42306(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
         /* MAL_WRITESCRIPTLOG */ sub_898( "MAL_SetPedSightRange" );
        SET_PED_SEEING_RANGE( uParam0, uParam1, 75 );
    }
    return;
}

/* MAL_SETPEDRELATIONSHIP */ void sub_42410(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_RELATIONSHIP( (uParam0^), uParam1, uParam2 );
    }
    return;
}

/* MAL_SETLOCKEDANDREGISTEREDONPLAYER */ void sub_42487(unknown uParam0)
{
     /* MAL_SETLOCKEDANDREGISTEREDONPED */ sub_42541( uParam0,  /* PLAYER_PED_ID */ sub_1458() );
    return;
}

/* MAL_SETLOCKEDANDREGISTEREDONPED */ void sub_42541(unknown uParam0, unknown uParam1)
{
     /* MAL_REGISTERTARGET */ sub_42589( uParam0, uParam1 );
     /* MAL_SETLOCKEDTARGET */ sub_42671( uParam0, uParam1 );
    return;
}

/* MAL_REGISTERTARGET */ void sub_42589(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETLOCKEDTARGET */ void sub_42671(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETPEDALERTNESS */ void sub_42771(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_ALERTNESS( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_ENEMYSTRUCTARRAYCREATE */ int sub_42907(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4, boolean bParam5)
{
    int I;

    PRINTSTRING( "[MSWW] ### MAL_EnemyStructArrayCreate starting: " );
     /* WRITE_STRING */ sub_11162( uParam1 );
    if (NOT bParam4)
    {
         /* P_SETUP_AI_GROUP */ sub_43024( uParam2, uParam3, 1 );
        for ( I = 0; I < (uParam0^); I++ )
        {
             /* MAL_ENEMYSTRUCTCREATE */ sub_43434( ref (uParam0^)[I] );
             /* P_QUICK_ADD_PED_TO_GROUP */ sub_44731( (uParam0^)[I]._fU0, uParam2 );
        }
         /* MAL_ESA_GIVEDEBUGNAMES */ sub_45129( uParam0, uParam1 );
    }
    else if ((uParam0^)[0]._fU172 == 0)
    {
         /* P_SETUP_AI_GROUP */ sub_43024( uParam2, uParam3, 1 );
    }
    if ((uParam0^)[0]._fU172 < (uParam0^))
    {
         /* MAL_ENEMYSTRUCTCREATE */ sub_43434( ref (uParam0^)[(uParam0^)[0]._fU172] );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_44731( (uParam0^)[(uParam0^)[0]._fU172]._fU0, uParam2 );
        (uParam0^)[0]._fU172++;
    }
    else
    {
         /* MAL_ESA_GIVEDEBUGNAMES */ sub_45129( uParam0, uParam1 );
        return 1;
    }
    if (bParam5)
    {
         /* MAL_ESA_PROCESSINGFREEZE */ sub_45420( uParam0, 1, 0, -1 );
    }
    return 0;
}

/* P_SETUP_AI_GROUP */ void sub_43024(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* MAL_ENEMYSTRUCTCREATE */ void sub_43434(int iParam0)
{
    unknown uVar3;

     /* MAL_WRITESCRIPTLOG */ sub_898( "MAL_EnemyStructCreate starting" );
     /* MAL_CREATEPEDADV */ sub_43573( iParam0 + 0, iParam0 + 4, iParam0->_fU56, iParam0->_fU68, iParam0->_fU72, iParam0->_fU80, iParam0->_fU84, iParam0->_fU116, iParam0->_fU120, iParam0->_fU124, 1 );
    if (NOT (ARE_STRINGS_EQUAL( iParam0 + 140, ref g_U652 )))
    {
        PRINTSTRING( "[MSWW] ### MAL_EnemyStructCreate adding ped to room: " );
         /* WRITE_STRING */ sub_11162( iParam0 + 140 );
         /* MAL_SETROOMFORPED */ sub_44082( iParam0 + 0, iParam0 + 140 );
    }
    if (iParam0->_fU128)
    {
         /* MAL_WRITESCRIPTLOG */ sub_898( "MAL_EnemyStructCreate giving ped backup weapon" );
         /* MAL_GIVEPEDWEAPONINHOLSTER */ sub_44231( iParam0->_fU0, iParam0->_fU76, 25000, 1, 0 );
    }
    if (iParam0->_fU132)
    {
        uVar3 = GET_WEAPON_FROM_HAND( iParam0->_fU0, 0, 0 );
         /* MAL_TOGGLEWEAPONATTACHMENTTOWEAPON */ sub_44457( ref uVar3, 14, 1 );
    }
    if (iParam0->_fU136 != 0)
    {
         /* MAL_GIVEPEDPERSISTANTVARIATIONENUM */ sub_44620( iParam0 + 0, iParam0->_fU136 );
    }
    return iParam0->_fU0;
}

/* MAL_CREATEPEDADV */ void sub_43573(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19)
{
     /* P_CREATEPEDSTRUCT */ sub_39755( uParam1, uParam2, uParam5, uParam18, 7, 3, 2, 0, 0 );
    (uParam0^) =  /* MAL_CREATEPED */ sub_39879( uParam0, uParam1, 1, 1, uParam19 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
    }
     /* MAL_GIVEPEDWEAPON */ sub_43676( (uParam0^), uParam6, 25000, 0, 0 );
     /* MAL_SETTEMPLATEANDRANGES */ sub_41632( uParam0, ref uParam8, uParam16, uParam17, 1 );
     /* MAL_SETPEDCOMBATMOVEMENT */ sub_43890( uParam0, uParam7 );
    return (uParam0^);
}

/* MAL_GIVEPEDWEAPON */ void sub_43676(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    unknown Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                 /* MAL_WRITESCRIPTLOG */ sub_898( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

/* MAL_SETPEDCOMBATMOVEMENT */ void sub_43890(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETROOMFORPED */ void sub_44082(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_ROOM_FOR_PED_BY_NAME( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_GIVEPEDWEAPONINHOLSTER */ void sub_44231(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    int Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
            while (Result == 0)
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
                 /* MAL_WRITESCRIPTLOG */ sub_898( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

/* MAL_TOGGLEWEAPONATTACHMENTTOWEAPON */ void sub_44457(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (GET_DOES_WEAPON_EXIST( (uParam0^) ))
    {
        if (bParam2)
        {
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
        else
        {
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
    }
    return;
}

/* MAL_GIVEPEDPERSISTANTVARIATIONENUM */ void sub_44620(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PERSISTENT_PED_VARIATION_ENUM( (uParam0^), uParam1 );
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_44731(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_11162( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_43024( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_43024( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* MAL_ESA_GIVEDEBUGNAMES */ void sub_45129(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I]._fU0, ref cVar5 );
        }
    }
    return;
}

/* MAL_ESA_PROCESSINGFREEZE */ void sub_45420(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_PROCESSINGFREEZE */ sub_45497( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_PROCESSINGFREEZE */ void sub_45497(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_FREEZE_PROCESSING( iParam0->_fU0, uParam1 );
    }
    return;
}

/* F_CREATE_CUTSCENE_PEDS */ int sub_45616()
{
    char[64] cVar2;

    switch (l_U262)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_1069( "AT", "eSpawn0301 = ENTITY_STATE_INIT", 0 );
        l_U263 = 0;
        l_U262 = 2;
         /* WRITESCRIPTLOG */ sub_1069( "AT", "eSpawn0301 = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        StrCopy( ref cVar2, "Creating pi_IM_0301_Entities[", 64 );
        ConcatString(ref cVar2, l_U263, 64);
        ConcatString(ref cVar2, "]", 64);
         /* WRITESCRIPTLOG */ sub_1069( "AT", ref cVar2, 0 );
        l_U252[l_U263] =  /* CREATEPED */ sub_39915( ref l_U147[l_U263] );
        if (NOT (IS_PED_DEAD( l_U252[l_U263] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U252[l_U263], 1 );
            StrCopy( ref cVar2, "pi_IM_0301_Entities[", 64 );
            ConcatString(ref cVar2, l_U263, 64);
            ConcatString(ref cVar2, "]", 64);
            SET_PED_NAME_DEBUG( l_U252[l_U263], ref cVar2 );
        }
        if (l_U263 < 5)
        {
            if (l_U263 < 2)
            {
                 /* F_GIVEPEDWEAPON */ sub_11553( l_U252[l_U263], 68019059, 25000, 0, 0 );
            }
            else
            {
                 /* F_GIVEPEDWEAPON */ sub_11553( l_U252[l_U263], -1074756423, 25000, 0, 0 );
            }
        }
        else if (l_U263 == 5)
        {
             /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10758( l_U252[l_U263], 68019059, 1, 25000, 0 );
        }
        else if (l_U263 == 6)
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U252[l_U263], "Room_Pressbooth" );
            l_U261 =  /* F_GIVEPEDWEAPON */ sub_11553( l_U252[l_U263], 1224272620, 25000, 0, 0 );
             /* MAL_TOGGLEWEAPONATTACHMENTTOWEAPON */ sub_44457( ref l_U261, 13, 1 );
        }
        else if (l_U263 == 7)
        {
             /* F_GIVEPEDWEAPON */ sub_11553( l_U252[l_U263], 68019059, 25000, 0, 0 );
        };;;;
         /* P_DEACTIVATEPED */ sub_46276( l_U252[l_U263] );
        l_U263++;
        if (l_U263 >= l_U252)
        {
            l_U262 = 4;
             /* WRITESCRIPTLOG */ sub_1069( "AT", "eSpawn0301 = ENTITY_STATE_COMPLETE", 0 );
        }
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

/* P_DEACTIVATEPED */ void sub_46276(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

/* P_FIELDENEMIESPOST */ void sub_46533()
{
    int I;

     /* MAL_ES_REGISTERPEDWITHISEQ */ sub_46596( l_U679[0], -1191130939, "PistolRight" );
     /* MAL_ES_REGISTERPEDWITHISEQ */ sub_46596( l_U679[1], -1191130939, "RifleRight" );
     /* MAL_ES_REGISTERPEDWITHISEQ */ sub_46596( l_U679[2], -1191130939, "PistolBack01" );
     /* MAL_ES_REGISTERPEDWITHISEQ */ sub_46596( l_U679[3], -1191130939, "PistolBack02" );
     /* MAL_ES_REGISTERPEDWITHISEQ */ sub_46596( l_U679[4], -1191130939, "PistolLeft" );
     /* MAL_ES_REGISTERPEDWITHISEQ */ sub_46596( l_U679[5], -1191130939, "LeftPointer" );
    for ( I = 0; I < l_U679; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U679[I]._fU0 )))
        {
            SET_PED_DROPS_WEAPONS_WHEN_DEAD( l_U679[I]._fU0, 0 );
        }
    }
    return;
}

/* MAL_ES_REGISTERPEDWITHISEQ */ void sub_46596(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45)
{
     /* MAL_REGISTERPEDWITHISEQ */ sub_46649( uParam0._fU0, uParam44, uParam45 );
    return;
}

/* MAL_REGISTERPEDWITHISEQ */ void sub_46649(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        ISEQ_REGISTER_ENTITY( uParam1, uParam2, uParam0, 0 );
    }
    return;
}

/* MAL_ESA_VISIBLE */ void sub_47005(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_SETPEDVISIBLE */ sub_47073( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_SETPEDVISIBLE */ void sub_47073(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_VISIBLE( iParam0->_fU0, uParam1 );
    }
    else
    {
         /* MAL_WRITESCRIPTLOG */ sub_898( "MAL_ES_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

/* MAL_SETPEDVISIBLE */ void sub_47229(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_VISIBLE( uParam0, uParam1 );
    }
    else
    {
         /* MAL_WRITESCRIPTLOG */ sub_898( "MAL_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

/* CUTSYS_DEFAULT_PRECUTSCENESETUP */ int sub_47498()
{
    return 1;
}

/* P_0301_REGISTER */ void sub_47551()
{
     /* MAL_WRITESCRIPTLOG */ sub_898( "P_0301_Register start" );
    REMOVE_ALL_PED_WEAPONS(  /* PLAYER_PED_ID */ sub_1458() );
     /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10758(  /* PLAYER_PED_ID */ sub_1458(), 68019059, 1, 25000, 0 );
     /* P_ACTIVATEPEDARRAY */ sub_47645( ref l_U252 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() )))
    {
         /* WRITESCRIPTLOG */ sub_1069( "AT", "Registered player.", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1458(), 1 ), "W_PI_PT92_Aa_H^3", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_1458(), g_U2138[0] + l_U314, g_U2256[0] );
        CUTSCENE_REGISTER_ISEQ( -1110817698 );
         /* MAL_REGISTERPEDWITHISEQ */ sub_46649(  /* PLAYER_PED_ID */ sub_1458(), -1110817698, "LeadoutMax" );
    }
    CUTSCENE_REGISTER_ISEQ( -1191130939 );
    if (NOT (IS_PED_DEAD( l_U277 )))
    {
         /* MAL_REGISTERPEDWITHISEQ */ sub_46649( l_U277, -1110817698, "LeadoutPassos" );
    }
    if (NOT (IS_PED_DEAD( l_U252[0] )))
    {
         /* WRITESCRIPTLOG */ sub_1069( "AT", "Registered pi_IM_0301_Entities[0]", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U252[0], "G_CS_K_Sold_PB^4", 1 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U252[0], 0, 0 ), "W_PI_PT92_Aa_H^1", 1 );
    }
    else
    {
        SCRIPT_ASSERT( "PED 0 IS DEAD", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U252[1] )))
    {
         /* WRITESCRIPTLOG */ sub_1069( "AT", "Registered pi_IM_0301_Entities[1]", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U252[1], "G_CS_K_Sold_PB^3", 1 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U252[1], 0, 0 ), "W_PI_PT92_Aa_H^2", 1 );
    }
    else
    {
        SCRIPT_ASSERT( "PED 1 IS DEAD", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U252[2] )))
    {
         /* WRITESCRIPTLOG */ sub_1069( "AT", "Registered pi_IM_0301_Entities[2]", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U252[2], "G_CS_K_Sold_PB^2", 1 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U252[2], 0, 0 ), "W_AR_AK47_Aa_H", 1 );
    }
    else
    {
        SCRIPT_ASSERT( "PED 2 IS DEAD", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U252[3] )))
    {
         /* WRITESCRIPTLOG */ sub_1069( "AT", "Registered pi_IM_0301_Entities[3]", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U252[3], "G_CS_K_Sold_PB^1", 1 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U252[3], 0, 0 ), "W_AR_AK47_Aa_H^1", 1 );
    }
    else
    {
        SCRIPT_ASSERT( "PED 3 IS DEAD", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U252[4] )))
    {
         /* WRITESCRIPTLOG */ sub_1069( "AT", "Registered pi_IM_0301_Entities[4]", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U252[4], "G_CS_K_Sold_PB", 1 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U252[4], 0, 0 ), "W_AR_AK47_Aa_H^2", 1 );
    }
    else
    {
        SCRIPT_ASSERT( "PED 4 IS DEAD", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U252[5] )))
    {
         /* WRITESCRIPTLOG */ sub_1069( "AT", "Registered pi_IM_0301_Entities[5]", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U252[5], "Pass_heli_pilo", 1 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HOLSTER( l_U252[5], 1 ), "W_PI_PT92_Aa_H^4", 1 );
    }
    else
    {
        SCRIPT_ASSERT( "PED 5 IS DEAD", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U252[6] )))
    {
         /* WRITESCRIPTLOG */ sub_1069( "AT", "Registered pi_IM_0301_Entities[6]", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U252[6], "M_Crac_Snip_Avg", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U252[6], 0, 0 ), "W_SR_M82_Aa_H", 0 );
        l_U1095 = GET_WEAPON_FROM_HAND( l_U252[6], 0, 0 );
         /* MAL_TOGGLEWEAPONATTACHMENTTOWEAPON */ sub_44457( ref l_U1095, 13, 1 );
        SET_LASER_SIGHT_ATTACHMENT( l_U1095, -789406068 );
        TOGGLE_WEAPON_ATTACHMENT( l_U1095, 13, 0 );
    }
    else
    {
        SCRIPT_ASSERT( "PED 6 IS DEAD", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U252[7] )))
    {
         /* WRITESCRIPTLOG */ sub_1069( "AT", "Registered pi_IM_0301_Entities[7]", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U252[7], "G_CS_Bag_Avg", 1 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U252[7], 0, 0 ), "W_PI_PT92_Aa_H", 1 );
    }
    else
    {
        SCRIPT_ASSERT( "PED 7 IS DEAD", 0 );
    }
     /* MAL_WRITESCRIPTLOG */ sub_898( "P_0301_Register end" );
    return;
}

/* P_ACTIVATEPEDARRAY */ void sub_47645(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_ACTIVATEPED */ sub_47697( (uParam0^)[I] );
    }
    return;
}

/* P_ACTIVATEPED */ void sub_47697(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

/* P_0301_HANDLE */ void sub_49546()
{
    if (l_U120._fU52)
    {
        AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1", "", 0, 15000, -1, -1082130432, 0 );
    }
    if (NOT l_U2027)
    {
        if (GET_CUTSCENE_TIME() > 5)
        {
            l_U2027 = 1;
             /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_23850( "PLGE_RIFLE_CROUCH", ref g_U1354 );
             /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_23850( "PLGE_PSTL_CROUCH", ref g_U1354 );
             /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_23850( "PLGE_RIFLE_KNEE", ref g_U1354 );
             /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_23850( "PLGE_PSTL_KNEE", ref g_U1354 );
             /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_23850( "PLGE_PSTL_CORE", ref g_U1354 );
             /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_23850( "PLGE_PSTL_COVER", ref g_U1354 );
            l_U2027 = 1;
        }
    }
     /* MAL_SETPEDVISIBLE */ sub_47229( l_U277, 0 );
     /* MAL_ESA_VISIBLE */ sub_47005( ref l_U679, 0, 0, -1 );
    if (l_U353 == 0)
    {
        if (GET_CUTSCENE_TIME_MS() > 31500)
        {
            TOGGLE_WEAPON_ATTACHMENT( l_U1095, 13, 1 );
            l_U353 = 1;
        }
    }
    if (NOT l_U2026)
    {
        if (GET_CUTSCENE_TIME() > 40)
        {
            APPLY_PLAYER_PRELOAD_VARIATION(  /* PLAYER_PED_ID */ sub_1458(), 0 );
            l_U2026 = 1;
        }
    }
    return;
}

/* CUTSYS_DEFAULT_POSTCUTSCENE */ int sub_49961()
{
    return 1;
}

/* P_0301_PREPAREBLENDOUT */ void sub_50010()
{
    int I;

    if (NOT (ISEQ_QUERY_STATE( -1110817698, 3 )))
    {
         /* MAL_TELEPORTPED */ sub_50093(  /* PLAYER_PED_ID */ sub_1458(), g_U2138[0] + l_U314, g_U2256[0] );
         /* MAL_REGISTERPEDWITHISEQ */ sub_46649(  /* PLAYER_PED_ID */ sub_1458(), -1110817698, "LeadoutMax" );
         /* MAL_REGISTERPEDWITHISEQ */ sub_46649( l_U277, -1110817698, "LeadoutPassos" );
        ISEQ_START( -1110817698 );
    }
    CAMERA_PLAY_ANIMATED( "LEVEL_S_STAD_CP_01", "B_OUT_03_01_CAM", 1, 4.56000000, -3.96000000, 4.00000000, 0.00000000, 0, 0 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "03_01_stad_txt_comeon", 1 );
    l_U1283 = "SSTD_FDQA";
    l_U1284 = "03_01_stad_txt_comeon";
     /* CLEANPEDARRAY */ sub_4099( ref l_U252 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_4262( 1224272620, ref g_U1214 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() )))
    {
        REMOVE_ALL_PED_WEAPONS(  /* PLAYER_PED_ID */ sub_1458() );
    }
    SET_HELPER_TRACKING_MODE( 0 );
    FREEZE_TIME_OF_DAY( 21, 0 );
     /* MAL_ESA_VISIBLE */ sub_47005( ref l_U679, 1, 0, -1 );
     /* MAL_ESA_PROCESSINGFREEZE */ sub_45420( ref l_U679, 0, 0, -1 );
    if (NOT (ISEQ_QUERY_STATE( -1191130939, 3 )))
    {
        ISEQ_START( -1191130939 );
         /* MAL_ESA_TELEPORTTOSPAWN */ sub_50518( ref l_U679, 0, -1 );
    }
     /* MAL_AIMGUNATPED */ sub_50782( l_U1090, l_U679[5]._fU0, -1, 1 );
    DO_SCREEN_FADE_IN( 0 );
    if ((NOT (IS_PED_DEAD( l_U277 ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() ))))
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_50903( ref l_U1285 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_51014( 0,  /* PLAYER_PED_ID */ sub_1458(), "MAX", ref l_U1285, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_51014( 1,  /* PLAYER_PED_ID */ sub_1458(), "MAX", ref l_U1285, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_51281( "SSTD_FDMB", ref l_U1285, 8, 1 );
    }
    for ( I = 0; I < l_U950; I++ )
    {
         /* P_CREATE_AND_START_TIMER */ sub_52218( ref l_U950[I]._fU0, l_U950[I]._fU36 );
    }
     /* P_CREATE_AND_START_TIMER */ sub_52218( ref l_U1096, 3000 );
     /* P_CREATE_AND_START_TIMER */ sub_52218( ref l_U1105, 6000 );
     /* P_CREATE_AND_START_TIMER */ sub_52218( ref l_U318, l_U317 );
    return;
}

/* MAL_TELEPORTPED */ void sub_50093(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* MAL_ESA_TELEPORTTOSPAWN */ void sub_50518(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
         /* MAL_ES_TELEPORTTOSPAWN */ sub_50596( (uParam0^)[I] );
    }
    return;
}

/* MAL_ES_TELEPORTTOSPAWN */ void sub_50596(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43)
{
     /* MAL_ES_TELEPORT */ sub_50649( uParam0, uParam0._fU56, uParam0._fU68 );
    return;
}

/* MAL_ES_TELEPORT */ void sub_50649(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47)
{
    if (NOT (IS_PED_DEAD( uParam0._fU0 )))
    {
        SET_PED_COORDS( uParam0._fU0, uParam44, 1 );
        SET_PED_HEADING( uParam0._fU0, uParam47 );
    }
    return;
}

/* MAL_AIMGUNATPED */ void sub_50782(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( uParam0 ))))
    {
        TASK_AIM_GUN_AT_PED( uParam0, uParam1, uParam2, uParam3 );
    }
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_50903(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_51014(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_51281(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_51326( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_51326(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_51413( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_51413(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_51465( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_51983( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_51465(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_51983(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* P_CREATE_AND_START_TIMER */ void sub_52218(unknown uParam0, unknown uParam1)
{
     /* CREATETIMER */ sub_2347( uParam0, uParam1, 1, 0 );
     /* STARTTIMER */ sub_2497( uParam0 );
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDOUT */ int sub_52338()
{
    return 1;
}

/* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ void sub_52393(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
     /* WRITESCRIPTLOG */ sub_1069( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return  /* CUTSYS_PRIVATE_CREATECUTSCENE */ sub_52617( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 52514, 52564, uParam8 );
}

/* CUTSYS_DEFAULT_PREPAREBLENDIN */ void sub_52514()
{
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDIN */ int sub_52564()
{
    return 1;
}

/* CUTSYS_PRIVATE_CREATECUTSCENE */ void sub_52617(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

/* CUTSYS_HANDLECUTSCENE */ void sub_53028(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
             /* WRITESCRIPTLOG */ sub_1069( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
             /* WRITESCRIPTLOG */ sub_1069( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                 /* WRITESCRIPTLOG */ sub_1069( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
             /* WRITESCRIPTLOG */ sub_1069( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
             /* WRITESCRIPTLOG */ sub_1069( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
             /* WRITESCRIPTLOG */ sub_1069( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
             /* LOADSEAMLESSCUTSCENE */ sub_29262( iParam0->_fU0, 0 );
             /* WRITESCRIPTLOG */ sub_1069( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
             /* NIS_PRE_SETUP */ sub_53919( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
         /* NIS_PRE_SETUP */ sub_53919( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
         /* WRITESCRIPTLOG */ sub_1069( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                 /* P_SET_PLAYER_WEAPONS_VISIBLE */ sub_54463( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
         /* NIS_PRE_SETUP */ sub_53919( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
             /* NIS_POST_SETUP */ sub_54843( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
         /* NIS_POST_SETUP */ sub_54843( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

/* NIS_PRE_SETUP */ void sub_53919(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1496(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1458(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1458() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1458(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* P_SET_PLAYER_WEAPONS_VISIBLE */ void sub_54463(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1458(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1458(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1458(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1458(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1458(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

/* NIS_POST_SETUP */ void sub_54843(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1496(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1458(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_54941();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_54941()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1458(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1458(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1458(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1458(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_55305(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_1069( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_1069( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_12327( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_55596( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_56073( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_56073( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_56333( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_56073( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_56333( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_56333( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_56073( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_56333( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_56333( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_56333( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_56073( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_56333( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_56333( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_56333( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_56333( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_57913( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_1069( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_55596(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_9342( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_1069( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_1069( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_56073(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_56333(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_57913(int iParam0)
{
     /* WRITE_STRING */ sub_11162( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_58001( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_41776( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_41776( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_41776( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_58204( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_58204( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_58204( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_58204( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_58204( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_58204( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_58204( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_58204( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_58204( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_58204( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_58204( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_41776( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_58204( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_58204( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_58204( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_41776( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_58905( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_58204( iParam0->_fU52 );
     /* WRITE_STRING */ sub_11162( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_58204( iParam0->_fU96 );
     /* WRITE_STRING */ sub_11162( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_58204( iParam0->_fU100 );
     /* WRITE_STRING */ sub_11162( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_58204( iParam0->_fU104 );
     /* WRITE_STRING */ sub_11162( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_58204( iParam0->_fU108 );
     /* WRITE_STRING */ sub_11162( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_58204( iParam0->_fU112 );
     /* WRITE_STRING */ sub_11162( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_58204( iParam0->_fU116 );
     /* WRITE_STRING */ sub_11162( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_58204( iParam0->_fU120 );
     /* WRITE_STRING */ sub_11162( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_58204( iParam0->_fU124 );
     /* WRITE_STRING */ sub_11162( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_58204( iParam0->_fU128 );
     /* WRITE_STRING */ sub_11162( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_58204( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_58204( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_58204( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_58001(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_58204(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_58905(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* P_INIT_RANDOM_IMAGEFX_FIELD */ void sub_60004()
{
    int iVar2;

    iVar2 = 1500;
     /* P_INIT_IMAGEFX */ sub_60053( ref l_U1675 );
    PRINTSTRING( "[CO] Random Image FX - Index: " );
    PRINTINT( l_U1674 );
    PRINTNL();
    switch (l_U1674)
    {
        case 0:
        l_U1675[0]._fU4 = "INJURED_WALK_01";
        l_U1675[0]._fU8 = 3;
        l_U1675[0]._fU32 = 0;
        iVar2 = 2775;
        l_U1674 = 1;
        break;
        case 1:
        l_U1675[0]._fU4 = "INJURED_WALK_02";
        l_U1675[0]._fU8 = 3;
        l_U1675[0]._fU32 = 0;
        iVar2 = 3200;
        l_U1674 = 2;
        break;
        case 2:
        l_U1675[0]._fU4 = "INJURED_WALK_03";
        l_U1675[0]._fU8 = 3;
        l_U1675[0]._fU32 = 0;
        iVar2 = 2500;
        l_U1674 = 3;
        break;
        case 3:
        l_U1675[0]._fU4 = "GRADE_RED_FAST";
        l_U1675[0]._fU8 = 4;
        l_U1675[0]._fU32 = 0;
        l_U1675[1]._fU4 = "FLICKER_VIBRATE_INTERLACE_M";
        l_U1675[1]._fU8 = 4;
        l_U1675[1]._fU20 = 1;
        l_U1675[1]._fU32 = 0;
        l_U1675[1]._fU12 = 400;
        l_U1675[2]._fU4 = "FLICKER_VIBRATE_INTERLACE_M";
        l_U1675[2]._fU8 = 4;
        l_U1675[2]._fU32 = 0;
        l_U1675[3]._fU4 = "DOUBLE_MASK_INTERLACE_TWITCH";
        l_U1675[3]._fU8 = 4;
        l_U1675[3]._fU20 = 1;
        l_U1675[3]._fU32 = 0;
        l_U1675[3]._fU12 = 800;
        l_U1675[4]._fU4 = "INJURED_WALK_01";
        l_U1675[4]._fU8 = 3;
        l_U1675[4]._fU32 = 0;
        iVar2 = 3500;
        l_U1674 = 4;
        break;
        case 4:
        l_U1675[0]._fU4 = "INJURED_WALK_04";
        l_U1675[0]._fU8 = 3;
        l_U1675[0]._fU32 = 0;
        iVar2 = 1500;
        l_U1674 = 5;
        break;
        case 5:
        l_U1675[0]._fU4 = "GRADE_YELLOW_FAST";
        l_U1675[0]._fU8 = 4;
        l_U1675[0]._fU32 = 0;
        l_U1675[1]._fU4 = "FLICKER_VIBRATE_INTERLACE_01";
        l_U1675[1]._fU20 = 1;
        l_U1675[1]._fU8 = 4;
        l_U1675[1]._fU32 = 0;
        l_U1675[1]._fU12 = 400;
        l_U1675[2]._fU4 = "FLICKER_VIBRATE_INTERLACE_01";
        l_U1675[2]._fU8 = 4;
        l_U1675[2]._fU32 = 0;
        l_U1675[3]._fU4 = "FLICKER_VIBRATE_INTERLACE_01";
        l_U1675[3]._fU8 = 4;
        l_U1675[3]._fU32 = 0;
        l_U1675[3]._fU12 = 800;
        l_U1675[4]._fU4 = "FLICKER_VIBRATE_INTERLACE_01";
        l_U1675[4]._fU8 = 4;
        l_U1675[4]._fU20 = 1;
        l_U1675[4]._fU32 = 0;
        l_U1675[4]._fU12 = 1200;
        l_U1675[5]._fU4 = "FLICKER_VIBRATE_INTERLACE_01";
        l_U1675[5]._fU8 = 4;
        l_U1675[5]._fU32 = 0;
        iVar2 = 1600;
        l_U1674 = 6;
        break;
        case 6:
        l_U1675[0]._fU4 = "TRIPLE_INTERLACE_MOVE_RIGHT";
        l_U1675[0]._fU8 = 4;
        l_U1675[0]._fU32 = 0;
        iVar2 = 1500;
        l_U1674 = 7;
        break;
        case 7:
        l_U1675[0]._fU4 = "GRADE_MAGENTA_FAST";
        l_U1675[0]._fU8 = 4;
        l_U1675[0]._fU32 = 0;
        l_U1675[1]._fU4 = "FLICKER_VIBRATE_01";
        l_U1675[1]._fU8 = 4;
        l_U1675[1]._fU20 = 1;
        l_U1675[1]._fU32 = 0;
        l_U1675[1]._fU12 = 400;
        l_U1675[2]._fU4 = "FLICKER_VIBRATE_01";
        l_U1675[2]._fU8 = 4;
        l_U1675[2]._fU32 = 0;
        l_U1675[3]._fU4 = "GAMMA_SATURATION_COLOR_ZOOM_3";
        l_U1675[3]._fU8 = 4;
        l_U1675[3]._fU32 = 0;
        l_U1675[3]._fU12 = 800;
        iVar2 = 1500;
        l_U1674 = 8;
        break;
        case 8:
        l_U1675[0]._fU4 = "TRIPLE_INTERLACE_HOLD";
        l_U1675[0]._fU8 = 4;
        l_U1675[0]._fU32 = 0;
        iVar2 = 1800;
        l_U1674 = 9;
        break;
        case 9:
        l_U1675[0]._fU4 = "CONTRAST_ZOOM_FAST_BLUE";
        l_U1675[0]._fU8 = 4;
        l_U1675[0]._fU32 = 0;
        l_U1675[1]._fU4 = "FLICKER_VIBRATE_INTERLACE_M";
        l_U1675[1]._fU8 = 4;
        l_U1675[1]._fU20 = 1;
        l_U1675[1]._fU32 = 0;
        l_U1675[1]._fU12 = 600;
        l_U1675[2]._fU4 = "FLICKER_VIBRATE_INTERLACE_M";
        l_U1675[2]._fU8 = 4;
        l_U1675[2]._fU32 = 0;
        l_U1675[3]._fU4 = "INJURED_WALK_03";
        l_U1675[3]._fU8 = 3;
        l_U1675[3]._fU32 = 0;
        l_U1675[3]._fU12 = 600;
        iVar2 = 2500;
        l_U1674 = 10;
        break;
        case 10:
        l_U1675[0]._fU4 = "TRIPLE_MOVE_RIGHT_FAST";
        l_U1675[0]._fU8 = 4;
        l_U1675[0]._fU32 = 0;
        iVar2 = 1500;
        l_U1674 = 11;
        break;
        case 11:
        l_U1675[0]._fU4 = "TRIPLE_IMAGE_MASK_L_FAST";
        l_U1675[0]._fU8 = 4;
        l_U1675[0]._fU32 = 0;
        iVar2 = 900;
        l_U1674 = 0;
        break;
    }
     /* CREATETIMER */ sub_2347( ref l_U1838, iVar2, 1, 0 );
     /* STARTTIMER */ sub_2497( ref l_U1838 );
    l_U74 = 0;
    return;
}

/* P_INIT_IMAGEFX */ void sub_60053(unknown uParam0)
{
    int I;

     /* WRITESCRIPTLOG */ sub_1069( "CO", "P_INIT_IMAGEFX", 0 );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU4 = "";
        (uParam0^)[I]._fU12 = 0;
        (uParam0^)[I]._fU16 = 0;
        (uParam0^)[I]._fU20 = 0;
        (uParam0^)[I]._fU24 = 0;
        (uParam0^)[I]._fU28 = 0;
        (uParam0^)[I]._fU32 = 1;
    }
    return;
}

/* MAL_FREEZEPED */ void sub_62396(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        FREEZE_PED_POSITION( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_FREEZEPLAYER */ void sub_62459(unknown uParam0)
{
    unknown uVar3;

    uVar3 =  /* PLAYER_PED_ID */ sub_1458();
     /* MAL_FREEZEPED */ sub_62396( ref uVar3, uParam0 );
    return;
}

/* P_START_SP_CHALLENGES */ void sub_62521()
{
     /* WRITESCRIPTLOG */ sub_1069( "CCB", "P_START_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_1069( "CCB", "Starting the Stadium context...", 0 );
    START_CONTEXT( "Stadium" );
     /* WRITESCRIPTLOG */ sub_1069( "CCB", "Starting the Stadium_To_Stands context...", 0 );
    START_CONTEXT( "Stadium_To_Stands" );
    return;
}

/* P_HANDLE_FIELD_ENEMIES */ void sub_62745()
{
    int I;

    for ( I = 0; I < l_U679; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U679[I]._fU0 )))
        {
            if ( /* ISTIMERDONE */ sub_2630( ref l_U950[I]._fU0 ))
            {
                 /* P_ACTIVATE_FIELD_VICTIM */ sub_62855( l_U679[I]._fU0 );
                 /* P_CREATE_AND_START_TIMER */ sub_52218( ref l_U950[I]._fU40, l_U950[I]._fU76 );
            }
            if (( /* F_IS_FIELD_VICTIM_FINISHED */ sub_62995( l_U679[I]._fU0 )) || ( /* ISTIMERDONE */ sub_2630( ref l_U950[I]._fU40 )))
            {
                 /* P_SNIPER_SHOOTS_FIELD_VICTIM */ sub_63100( l_U679[I]._fU0 );
                 /* P_KILL_PED */ sub_63363( l_U679[I]._fU0 );
            }
        }
    }
    return;
}

/* P_ACTIVATE_FIELD_VICTIM */ void sub_62855(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_SET_ACTION_INTENTION( uParam0, 47, 1000, g_U649 );
    }
    return;
}

/* F_IS_FIELD_VICTIM_FINISHED */ int sub_62995(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        if ((PED_GET_ACTION_INTENTION_STATUS( uParam0, 47 )) == 1)
        {
            return 1;
        }
    }
    return 0;
}

/* P_SNIPER_SHOOTS_FIELD_VICTIM */ void sub_63100(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_FINISH_ACTION_INTENTION( uParam0, 47 );
        if (NOT (IS_PED_DEAD( l_U1090 )))
        {
            CLEAR_PED_TASKS_IMMEDIATELY( l_U1090 );
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( uParam0, 3228, g_U649 )};
            TASK_AIM_GUN_AT_PED( l_U1090, uParam0, -1, 1 );
            SET_PED_SHOOTS_AT_COORD( l_U1090, uVar3 );
            if (IS_SCRIPTEDFX_ENABLED() == 1)
            {
                PLAY_IMAGEFX( "FLASH_WHITE", 4, 0 );
            }
        }
        START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "Blood_headsoup_S_01", uParam0, 0, 0, 0, 0, 0, 0, 65488, 2.00000000 );
    }
    return;
}

/* P_KILL_PED */ void sub_63363(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_63465(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_63541(  /* PLAYER_PED_ID */ sub_1458(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* F_ISPEDINTRIGGERBOX */ int sub_63541(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* MAL_STANDSTILL */ void sub_63723(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_STAND_STILL( 0, -1 );
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_63933(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_63541(  /* PLAYER_PED_ID */ sub_1458(), uParam0 );
}

/* P_SNIPER_SHOOT_AT_MAX */ void sub_64112()
{
     /* MAL_AIMGUNATPED */ sub_50782( l_U1090,  /* PLAYER_PED_ID */ sub_1458(), -1, 1 );
     /* MAL_REGISTERTARGET */ sub_42589( ref l_U1090,  /* PLAYER_PED_ID */ sub_1458() );
     /* MAL_SETLOCKEDTARGET */ sub_42671( ref l_U1090,  /* PLAYER_PED_ID */ sub_1458() );
     /* MAL_FREEZEPED */ sub_62396( ref l_U1090, 0 );
    TASK_SHOOT_AT_PED( l_U1090,  /* PLAYER_PED_ID */ sub_1458(), -1, -256437761, 1, 0, 0 );
    return;
}

/* P_SNIPER_SHOOTS_AT_COORD */ void sub_64612(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( l_U1090 )))
    {
        SET_PED_SHOOTS_AT_COORD( l_U1090, uParam0 );
        if (IS_SCRIPTEDFX_ENABLED() == 1)
        {
            PLAY_IMAGEFX( "FLASH_WHITE", 4, 0 );
        }
    }
    return;
}

/* P_FIELD_LEADOUT_RETURN_TO_GAMEPLAY */ void sub_64843()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((NOT (IS_PED_DEAD( l_U277 ))) AND ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() ))) == 0))
    {
        CAMERA_POINT_AT_PED( l_U277, 0 );
        TASK_LOOK_AT_PED(  /* PLAYER_PED_ID */ sub_1458(), l_U277, -1, 0 );
    }
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_51014( 0,  /* PLAYER_PED_ID */ sub_1458(), "MAX", ref uVar2, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_51014( 1,  /* PLAYER_PED_ID */ sub_1458(), "MAX", ref uVar2, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_51281( "SSTD_FDMC", ref uVar2, 8, 1 );
    return;
}

/* P_FIELD_PASSOS_CALLS_TO_MAX */ void sub_65105()
{
    int iVar2;

    if (NOT ( /* F_ISPASSOSCALLINGDIALOGUEPLAYING */ sub_65145()))
    {
        if (NOT l_U1282)
        {
            if (((IS_PED_DEAD( l_U277 )) == 0) AND (((DOES_PED_EXIST( l_U277 )) == 1) AND (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() )) == 0) AND ((NOT l_U460._fU64) AND ( /* ISTIMERDONE */ sub_2630( ref l_U1273 ))))))
            {
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_50903( ref l_U1211[l_U1210] );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_51014( 0,  /* PLAYER_PED_ID */ sub_1458(), "MAX", ref l_U1211[l_U1210], 2, 0 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_51014( 1, l_U277, "PASSOS", ref l_U1211[l_U1210], 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_51281( l_U1283, ref l_U1211[l_U1210], 8, 1 );
                 /* P_CREATE_AND_START_TIMER */ sub_52218( ref l_U1273, 4000 );
                if (IS_SCRIPTEDFX_ENABLED() == 1)
                {
                     /* WRITESCRIPTLOG */ sub_1069( "SP", "Playing Passos Beckoning to Max Image FX", 0 );
                     /* CLEANCAMERA */ sub_8040( ref l_U1209 );
                    l_U1209 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
                    SETUP_BULLET_CAMERA_SCENE( l_U1209, l_U1284, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
                    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
                }
                l_U1210++;
                if (l_U1210 >= l_U1211)
                {
                    l_U1210 = 0;
                }
                l_U1282 = 1;
            }
        }
        else if (l_U1282)
        {
            l_U1282 = 0;
            l_U1272 =  /* F_ISPLAYERINTRIGGERBOX */ sub_63933( l_U376 );
            iVar2 = l_U1210;
            if (iVar2 == 0)
            {
                l_U1283 = "SSTD_FDQA";
                if (l_U1272 == 0)
                {
                    l_U1284 = "03_01_stad_txt_comeon";
                }
                else
                {
                    l_U1284 = "03_01_stad_txt_3d_comeon";
                }
            }
            else if (iVar2 == 1)
            {
                l_U1283 = "SSTD_FDQB";
                if (l_U1272 == 0)
                {
                    l_U1284 = "03_01_stad_txt_getoutofthere";
                }
                else
                {
                    l_U1284 = "03_01_stad_txt_3d_getoutofthere";
                }
            }
            else if (iVar2 == 2)
            {
                l_U1283 = "SSTD_FDQC";
                if (l_U1272 == 0)
                {
                    l_U1284 = "03_01_stad_txt_getoffthatfield";
                }
                else
                {
                    l_U1284 = "03_01_stad_txt_3d_getoffthatfield";
                }
            }
            else if (iVar2 == 3)
            {
                l_U1283 = "SSTD_FDQD";
                if (l_U1272 == 0)
                {
                    l_U1284 = "03_01_stad_txt_comeon02";
                }
                else
                {
                    l_U1284 = "03_01_stad_txt_3d_comeon02";
                }
            }
            else if (iVar2 == 4)
            {
                l_U1283 = "SSTD_FDQE";
                if (l_U1272 == 0)
                {
                    l_U1284 = "03_01_stad_txt_getover";
                }
                else
                {
                    l_U1284 = "03_01_stad_txt_3d_getover";
                }
            }
            else if (iVar2 == 5)
            {
                l_U1283 = "SSTD_FDQF";
                if (l_U1272 == 0)
                {
                    l_U1284 = "03_01_stad_txt_killed";
                }
                else
                {
                    l_U1284 = "03_01_stad_txt_3d_killed";
                }
            };;;;;;
            BULLET_CAMERA_PRELOAD_TEXT_BINK( l_U1284, 1 );
        }
    }
    return;
}

/* F_ISPASSOSCALLINGDIALOGUEPLAYING */ int sub_65145()
{
    int I;

    for ( I = 0; I < l_U1211; I++ )
    {
        if (( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_65216( l_U1211[I] )) == 1)
        {
            return 1;
        }
    }
    return 0;
}

/* IS_SPEECH_CURRENTLY_PLAYING */ int sub_65216(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_65259( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

/* IS_SCRIPT_SPEECH_STRUCT_VALID */ boolean sub_65259(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

/* MAL_SETACTINT */ void sub_66726(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_SET_ACTION_INTENTION( uParam0, uParam1, uParam2, g_U649 );
    }
    return;
}

/* F_FIELD_HAS_PLAYER_REACHED_PASSOS */ int sub_66803()
{
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() )))
    {
        if (GET_PED_REACHED_TARGETED_GRAVWELL_CENTER(  /* PLAYER_PED_ID */ sub_1458(), "st_00_fd_simple", "GravWell_EdisonHelpsMax", 1 ))
        {
            return 1;
        }
    }
    return 0;
}

/* P_CLEANUP_FIELD_SEQUENCE */ void sub_66969()
{
    ISEQ_UNREGISTER_ENTITY( -1110817698, "LeadoutMax" );
    ISEQ_UNREGISTER_ENTITY( -1110817698, "LeadoutPassos" );
     /* TERMINATEISEQ */ sub_67065( -1110817698, 1 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_5291( -1110817698, ref g_U1263 );
    return;
}

/* TERMINATEISEQ */ void sub_67065(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            DISPLAYF( "[SP]### Waiting for interactive sequence to terminate: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_FORCE_PLAYER_TO_WALK */ void sub_67484()
{
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() ))) AND (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1496() ))))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1496(), 0, 0 );
        SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1458(), 1 );
    }
    return;
}

/* P_SETUP_STEADY_SEQUENCE */ void sub_67586()
{
     /* MAL_REGISTERPEDWITHISEQ */ sub_46649(  /* PLAYER_PED_ID */ sub_1458(), -1424164141, "SteadyMax" );
     /* MAL_REGISTERPEDWITHISEQ */ sub_46649( l_U277, -1424164141, "SteadyPassos" );
     /* MAL_REGISTERPEDWITHISEQ */ sub_46649( l_U295, -1424164141, "HeadcrackCS" );
    ISEQ_START( -1424164141 );
    return;
}

/* P_PLAY_FIRST_STEADY_CAM */ void sub_67728()
{
     /* WRITESCRIPTLOG */ sub_1069( "GA", "Starting Passos Help Max cameras.", 0 );
     /* NIS_PRE_SETUP */ sub_53919( 1, 0, 0, 0 );
    CAMERA_PLAY_ANIMATED( "LEVEL_S_STAD_CP_01", "VIG_07B_START_TO_END_CAM", 0, g_U649, 0.00000000, 1, 500 );
    CAMERA_CLEAR_POINT_AT_TARGET();
    SET_CAMERA_OVERRIDE( "TUNNEL_INJURED_CAMERA", "", 0, 1, 1 );
     /* MAL_ESA_KILLARRAY */ sub_67941( ref l_U679, 0, -1 );
    return;
}

/* MAL_ESA_KILLARRAY */ void sub_67941(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
             /* P_KILL_PED */ sub_63363( (uParam0^)[I]._fU0 );
        }
    }
    return;
}

/* P_RESET_RANDOM_IMAGE_FX */ void sub_68069(boolean bParam0)
{
     /* WRITESCRIPTLOG */ sub_1069( "SP", "P_RESET_RANDOM_IMAGE_FX", 0 );
    if (bParam0)
    {
         /* P_CLEAN_IMAGEFX */ sub_68153( ref l_U1675 );
    }
     /* RESETTIMER */ sub_3206( ref l_U1838 );
    return;
}

/* P_CLEAN_IMAGEFX */ void sub_68153(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        STOP_IMAGEFX( (uParam0^)[I]._fU0, 0 );
    }
    return;
}

/* F_IS_PASSOS_STEADYING_MAX */ int sub_68433()
{
    if (NOT (IS_PED_DEAD( l_U277 )))
    {
        if (((PED_GET_ACTION_INTENTION_STATUS( l_U277, 53 )) == 3) AND (NOT l_U347))
        {
            l_U347 = 1;
            return 1;
        }
    }
    return 0;
}

/* P_PLAY_PASSOS_MAX_STEADY_SPEECH */ void sub_68542()
{
    if ((NOT (IS_PED_DEAD( l_U277 ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() ))))
    {
         /* WRITESCRIPTLOG */ sub_1069( "AT", "Passos asks Max if he's okay.", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_50903( ref l_U1295 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_51014( 0,  /* PLAYER_PED_ID */ sub_1458(), "MAX", ref l_U1295, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_51014( 1, l_U277, "PASSOS", ref l_U1295, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_51281( "SSTD_FDMA", ref l_U1295, 8, 1 );
    }
    return;
}

/* MAL_ISACTINTCOMPLETED */ int sub_68809(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (( /* MAL_GETACTINTSTATUS */ sub_68848( (uParam0^), uParam1 )) == 1)
    {
        if (bParam2)
        {
             /* MAL_FINISHACTINT */ sub_68936( uParam0, uParam1 );
        }
        return 1;
    }
    return 0;
}

/* MAL_GETACTINTSTATUS */ int sub_68848(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 );
    }
    return 0;
}

/* MAL_FINISHACTINT */ void sub_68936(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

/* P_PLAY_BLOOD_SMEAR_NIS_SPEECH_2 */ void sub_69019()
{
    if (((IS_PED_DEAD( l_U277 )) == 0) AND (((DOES_PED_EXIST( l_U277 )) == 1) AND ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() )) == 0)))
    {
         /* SETUP_SCRIPTED_SPEECH */ sub_69122( "SSTDAUD" );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_50903( ref l_U1569 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_51014( 1,  /* PLAYER_PED_ID */ sub_1458(), "MAX", ref l_U1569, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_51014( 0, l_U277, "PASSOS", ref l_U1569, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_51281( "SSTD_FDPD", ref l_U1569, 8, 1 );
    }
    return;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_69122(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_69166();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_69166()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* P_END_STEADY_SEQUENCE */ void sub_69596()
{
    if ((NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1496() ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() ))))
    {
        if (NOT l_U2011)
        {
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( 4.09000000, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( -19.00000000, 1065353216, 0 );
            CAMERA_ANIMATED_STOP( 750, 1 );
        }
        PED_FINISH_ACTION_INTENTION(  /* PLAYER_PED_ID */ sub_1458(), 55 );
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1496(), 1, 0 );
        TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_1458() );
         /* NIS_POST_SETUP */ sub_54843( 1, 1 );
    }
    return;
}

/* P_SPEECH_PLAY_MONOLOGUE */ void sub_69882(unknown uParam0, unknown uParam1)
{
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_50903( uParam1 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_51014( 0,  /* PLAYER_PED_ID */ sub_1458(), "MAX", uParam1, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_51014( 1,  /* PLAYER_PED_ID */ sub_1458(), "MAX", uParam1, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_51281( uParam0, uParam1, 8, 1 );
    return;
}

/* P_HANDLE_FIELD_CAM_SHAKING */ void sub_70117()
{
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() )))
    {
        if ((GET_PED_SPEED(  /* PLAYER_PED_ID */ sub_1458() )) > 0.10000000)
        {
            if ((l_U1963 == 1) AND (NOT l_U1914._fU172))
            {
                 /* P_CAM_SHAKE_ACTIVATE */ sub_70224( ref l_U1914 );
            }
             /* P_CAM_SHAKE_HANDLE */ sub_70318( ref l_U1914 );
            l_U1963 = 0;
        }
        else if ((l_U1914._fU172) AND (NOT l_U1963))
        {
            l_U1963 = 1;
             /* P_CAM_SHAKE_FORCE_DEACTIVATE */ sub_8173( ref l_U1914, 1 );
             /* P_SHAKE_CAM */ sub_70547( "JOLT_SHAKE", 0.15000000 );
        }
    }
    return;
}

/* P_CAM_SHAKE_ACTIVATE */ void sub_70224(int iParam0)
{
     /* RESETTIMER */ sub_3206( iParam0 + 40 );
     /* RESETTIMER */ sub_3206( iParam0 + 76 );
     /* RESETTIMER */ sub_3206( iParam0 + 112 );
    iParam0->_fU172 = 1;
    iParam0->_fU164 = 0;
    return;
}

/* P_CAM_SHAKE_HANDLE */ void sub_70318(int iParam0)
{
    if (iParam0->_fU172 == 1)
    {
        if (iParam0->_fU164 == 0)
        {
             /* CREATETIMER */ sub_2347( iParam0 + 40, iParam0->_fU148, 1, 0 );
             /* STARTTIMER */ sub_2497( iParam0 + 40 );
            if (iParam0->_fU152 > 0)
            {
                 /* CREATETIMER */ sub_2347( iParam0 + 76, iParam0->_fU152, 1, 0 );
                 /* STARTTIMER */ sub_2497( iParam0 + 76 );
            }
            iParam0->_fU164 = 1;
        }
        if ( /* ISTIMERDONE */ sub_2630( iParam0 + 40 ))
        {
             /* WRITESCRIPTLOG */ sub_1069( "ML", "P_HANDLE_CAM_SHAKE is shaking the camera", "---" );
             /* P_SHAKE_CAM */ sub_70547( iParam0 + 4, iParam0->_fU36 );
            if (iParam0->_fU156 > 0)
            {
                 /* CREATETIMER */ sub_2347( iParam0 + 112, iParam0->_fU156, 1, 0 );
                 /* STARTTIMER */ sub_2497( iParam0 + 112 );
            }
        }
        if ( /* ISTIMERDONE */ sub_2630( iParam0 + 112 ))
        {
             /* P_SHAKE_CAM */ sub_70547( iParam0 + 4, iParam0->_fU36 );
             /* CREATETIMER */ sub_2347( iParam0 + 112, iParam0->_fU156, 1, 0 );
             /* STARTTIMER */ sub_2497( iParam0 + 112 );
        }
        if ( /* ISTIMERDONE */ sub_2630( iParam0 + 76 ))
        {
             /* WRITESCRIPTLOG */ sub_1069( "ML", "P_HANDLE_CAM_SHAKE is done shaking the camera", "---" );
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam0->_fU160 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam0->_fU160 );
             /* RESETTIMER */ sub_3206( iParam0 + 112 );
            iParam0->_fU172 = 0;
        }
    }
    return;
}

/* P_SHAKE_CAM */ void sub_70547(unknown uParam0, unknown uParam1)
{
    SHAKE_CAM( GET_RENDERING_CAM(), uParam0, uParam1 );
    SHAKE_GAMEPLAY_CAM( uParam0, uParam1 );
    return;
}

/* P_START_TUNNEL_HEADCRACK_EVENT */ void sub_71183()
{
    if (((IS_PED_DEAD( l_U295 )) == 0) AND ((DOES_PED_EXIST( l_U295 )) == 1))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( l_U295 );
        FREEZE_PED_POSITION( l_U295, 0 );
        SET_PED_VISIBLE( l_U295, 1 );
    }
     /* TELEPORTPED */ sub_71314( l_U295, l_U296, l_U299 );
     /* MAL_WRITESCRIPTLOG */ sub_898( "PLAYER IN TRIGGERBOX FIRST TIME!" );
     /* WRITESCRIPTLOG */ sub_1069( "GA", "Triggering head crack.", 0 );
     /* MAL_FINISHACTINT */ sub_68936( ref l_U277, 47 );
     /* MAL_SETACTINT */ sub_66726( l_U277, 48, 1000 );
     /* MAL_SETACTINT */ sub_66726( l_U295, 47, 1000 );
     /* P_STREAMREQ_SCRIPT_STREAM_PLAY_FROM_PED */ sub_71533( l_U295, "S_STAD_EDI_KILL1", ref g_U2034 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_50903( ref l_U300 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_51014( 2, l_U295, "M3_CS_06_AVG", ref l_U300, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_51014( 1, l_U277, "PASSOS", ref l_U300, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_51281( "SSTD_BTPC", ref l_U300, 8, 1 );
    return;
}

/* TELEPORTPED */ void sub_71314(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_STREAMREQ_SCRIPT_STREAM_PLAY_FROM_PED */ void sub_71533(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = -1;
    if ( /* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ sub_5823( uParam1, uParam2 ))
    {
        iVar5 =  /* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ sub_6032( uParam1, uParam2 );
        if (NOT (iVar5 == -1))
        {
            if (NOT (IS_PED_DEAD( uParam0 )))
            {
                DISPLAYF( "[CCB]### Playing the SCRIPT_STREAM from ped: {} ###", 1, 1281, ref (uParam2^)[iVar5]._fU0 );
                PLAY_SCRIPT_STREAM_FROM_PED( uParam0, iVar5 );
            }
            else
            {
                DISPLAYF( "The ped is NOT valid!!!", 0 );
            }
        }
        else
        {
            DISPLAYF( "[CCB]### The SCRIPT_STREAM slot is NOT valid!!! {} ###", 1, 1537, uParam1 );
            SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        DISPLAYF( "[CCB]### The SCRIPT_STREAM asset is NOT loaded!!! {} ###", 1, 1537, uParam1 );
        SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

/* F_HAS_HEADCRACK_CS_DROPPED_GUN */ int sub_72372()
{
    if ((ISEQ_QUERY_ENTITY_STATE( -1424164141, "HeadcrackCS", 3 )) AND (NOT (IS_PED_DEAD( l_U295 ))))
    {
        if (( /* MAL_ISACTINTCOMPLETED */ sub_68809( ref l_U295, 52, 1 )) AND ((NOT l_U1334) == 1))
        {
            l_U1334 = 1;
            return 1;
        }
    }
    return 0;
}

/* P_SWAP_HEADCRACK_GUN_FOR_PLACEMENT */ void sub_72512()
{
     /* WRITESCRIPTLOG */ sub_1069( "GA", "Swapping headcrack gun for gun placement.", 0 );
    l_U1336 =  /* CREATEPLACEMENT */ sub_72659( 39142315, -0.20000000, 65.92000000, -3.19000000, 4.70000000, 0.00000000, 3.00000000, 1, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1336, ref g_U2444 );
    REMOVE_ALL_PED_WEAPONS( l_U295 );
    return;
}

/* CREATEPLACEMENT */ void sub_72659(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a placement to exist: {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return Result;
}

/* F_PASSOS_GRABBED_HEADCRACK_GUN */ int sub_72870()
{
    if (((PED_GET_ACTION_INTENTION_STATUS( l_U277, 54 )) == 1) AND (NOT l_U1335))
    {
        l_U1335 = 1;
        return 1;
    }
    return 0;
}

/* P_PASSOS_PICK_UP_HEADCRACK_GUN */ void sub_72966()
{
    PED_FINISH_ACTION_INTENTION( l_U277, 54 );
     /* MAL_GIVEPEDWEAPON */ sub_43676( l_U277, 150541352, 25000, 0, 0 );
     /* CLEANPLACEMENT */ sub_7236( l_U1336 );
    if (((IS_PED_DEAD( l_U295 )) == 0) AND ((DOES_PED_EXIST( l_U295 )) == 1))
    {
        if ((GET_DOES_WEAPON_EXIST( l_U2025 )) == 1)
        {
            REMOVE_PED_WEAPON( l_U295, l_U2025 );
        }
        SET_PED_COLLISION( l_U295, 0 );
    }
    return;
}

/* F_IS_PLAYER_AT_FIRST_STUMBLE */ int sub_73268()
{
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() )) == 0)
    {
        if ((GET_PED_REACHED_TARGETED_GRAVWELL_CENTER(  /* PLAYER_PED_ID */ sub_1458(), "st_00_fd_simple", "GravWell_MaxStumble01", 0 )) AND (NOT l_U1356))
        {
            l_U1356 = 1;
             /* MAL_WRITESCRIPTLOG */ sub_898( "REACHED CENTRE OF GRAVWELL" );
            return 1;
        }
    }
    return 0;
}

/* P_START_FIRST_STUMBLE */ void sub_73459()
{
    DISPLAY_HUD( 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() )))
    {
        PED_SET_ACTION_INTENTION(  /* PLAYER_PED_ID */ sub_1458(), 55, 1000, g_U649 );
        if ((DOES_PED_EXIST( l_U295 )) == 1)
        {
            if (((IS_PED_DEAD( l_U295 )) == 0) || ((IS_PED_DEAD( l_U295 )) == 1))
            {
                TASK_LOOK_AT_PED(  /* PLAYER_PED_ID */ sub_1458(), l_U295, -1, 0 );
            }
        }
        SET_CAM_SIDE_LEFT( 1 );
    }
    return;
}

/* P_PLAY_STUMBLE_SPEECH */ void sub_73760()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

     /* WRITESCRIPTLOG */ sub_1069( "NS", "P_PLAY_STUMBLE_SPEECH", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_50903( ref uVar2 );
    STOP_CURRENT_PLAYING_AMBIENT_SPEECH(  /* PLAYER_PED_ID */ sub_1458() );
    PLAY_PED_AMBIENT_SPEECH(  /* PLAYER_PED_ID */ sub_1458(), "STUMBLE_PAIN_LARGE", 1, 1, 0, 0, 30000 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_51014( 0,  /* PLAYER_PED_ID */ sub_1458(), "MAX", ref uVar2, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_51281( "SSTD_STCR", ref uVar2, 8, 1 );
    return;
}

/* F_IS_PLAYER_AT_TUNNEL_CORNER */ int sub_73936()
{
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() )))
    {
        if ((GET_PED_REACHED_TARGETED_GRAVWELL_CENTER(  /* PLAYER_PED_ID */ sub_1458(), "st_00_fd_simple", "GravWell_TunnelEndCorner", 0 )) AND (NOT l_U1359))
        {
            l_U1359 = 1;
            return 1;
        }
    }
    return 0;
}

/* P_START_HEADTRACKING_PED */ void sub_74099(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( uParam0 ))))
    {
        SET_PED_PRIMARY_LOOKAT( uParam0, uParam1 );
    }
    return;
}

/* P_FIELD_EARLY_PED_CLEANUP */ void sub_74196()
{
     /* WRITESCRIPTLOG */ sub_1069( "GA", "P_FIELD_EARLY_PED_CLEANUP start", 0 );
     /* TERMINATEISEQ */ sub_67065( -1191130939, 1 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_5291( -1191130939, ref g_U1263 );
     /* CLEANPED */ sub_4149( l_U1090 );
     /* MAL_ESA_CLEAN */ sub_7113( ref l_U679 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_74332( g_U2377, ref g_U1069 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_74332( 1689856371, ref g_U1069 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_74332( -2056814065, ref g_U1069 );
     /* CLEANOBJECT */ sub_7301( g_U3704 );
     /* CLEANVEHICLE */ sub_7010( g_U3705 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_74332( 1049690760, ref g_U1069 );
     /* WRITESCRIPTLOG */ sub_1069( "GA", "P_FIELD_EARLY_PED_CLEANUP end", 0 );
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE */ void sub_74332(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_4393( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a MODEL_NAME asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Removing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* P_PASSOS_START_BASEMENT_SEQUENCE */ void sub_74893()
{
    if (NOT (IS_PED_DEAD( l_U277 )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( l_U277 );
         /* MAL_TELEPORTPED */ sub_50093( l_U277, l_U327, l_U330 );
         /* MAL_REGISTERPEDWITHISEQ */ sub_46649( l_U277, 2130328435, "Passos" );
        ISEQ_START( 2130328435 );
    }
    return;
}

/* MAL_PEDPLAYERACTIONTREENODE */ void sub_75539(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_ACTION_TREE_PLAY_NODE( uParam0, uParam1 );
    }
    return;
}

/* P_PLAY_BLOOD_SMEAR_NIS_SPEECH_1 */ void sub_75826()
{
    char[12] cVar2;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if ((NOT (IS_PED_DEAD( l_U277 ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() ))))
    {
        array(ref cVar2, 2);
        StrCopy( ref cVar2[0], "SSTD_BTMA", 16 );
        StrCopy( ref cVar2[1], "SSTD_BTMAB", 16 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_50903( ref l_U1305 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_51014( 0,  /* PLAYER_PED_ID */ sub_1458(), "MAX", ref l_U1305, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_51014( 1, l_U277, "PASSOS", ref l_U1305, 2, 0 );
         /* PLAY_MULTIPLE_SPEECH */ sub_76008( ref cVar2, ref l_U1305, 7, 1 );
    }
    return;
}

/* PLAY_MULTIPLE_SPEECH */ void sub_76008(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_MULTIPLE_SPEECH_FROM_BLOCK */ sub_76055( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_MULTIPLE_SPEECH_FROM_BLOCK */ void sub_76055(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;

    StrCopy( ref cVar7, uParam1, 16 );
    return  /* PLAYSPEECHMAIN */ sub_51413( uParam0, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* MAL_TELEPORTPLAYER */ void sub_76205(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 =  /* PLAYER_PED_ID */ sub_1458();
     /* MAL_TELEPORTPED */ sub_50093( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

/* P_INIT_RANDOM_IMAGEFX_HALL */ void sub_76665()
{
    int iVar2;

    iVar2 = 2500;
     /* P_INIT_IMAGEFX */ sub_60053( ref l_U1675 );
    switch (l_U1674)
    {
        case 0:
        l_U1675[0]._fU4 = "INJURED_WALK_01";
        l_U1675[0]._fU8 = 3;
        l_U1675[0]._fU32 = 0;
        l_U1674 = 1;
        break;
        case 1:
        l_U1675[0]._fU4 = "FLICKER_VIBRATE_INTERLACE_M";
        l_U1675[0]._fU8 = 4;
        l_U1675[0]._fU32 = 0;
        l_U1674 = 2;
        break;
        case 2:
        l_U1675[0]._fU4 = "INJURED_WALK_02";
        l_U1675[0]._fU8 = 3;
        l_U1675[0]._fU32 = 0;
        l_U1674 = 3;
        break;
        case 3:
        l_U1675[0]._fU4 = "DOUBLE_MASK_INTERLACE_TWITCH";
        l_U1675[0]._fU8 = 4;
        l_U1675[0]._fU32 = 0;
        l_U1674 = 4;
        break;
        case 4:
        l_U1675[0]._fU4 = "INJURED_WALK_04";
        l_U1675[0]._fU8 = 3;
        l_U1675[0]._fU32 = 0;
        l_U1674 = 5;
        break;
        case 5:
        l_U1675[0]._fU4 = "FLICKER_VIBRATE_LIGHTEN";
        l_U1675[0]._fU8 = 4;
        l_U1675[0]._fU32 = 0;
        l_U1674 = 6;
        break;
        case 6:
        l_U1675[0]._fU4 = "TRIPLE_IMAGE_MASK_L_FAST";
        l_U1675[0]._fU8 = 4;
        l_U1675[0]._fU32 = 0;
        l_U1674 = 7;
        break;
        case 7:
        l_U1675[0]._fU4 = "FLICKER_VIBRATE_01";
        l_U1675[0]._fU8 = 4;
        l_U1675[0]._fU32 = 0;
        l_U1674 = 0;
        break;
        case 8:
        l_U1675[0]._fU4 = "TRIPLE_MOVE_RIGHT_FAST";
        l_U1675[0]._fU8 = 4;
        l_U1675[0]._fU32 = 0;
        break;
    }
     /* CREATETIMER */ sub_2347( ref l_U1838, iVar2, 1, 0 );
     /* STARTTIMER */ sub_2497( ref l_U1838 );
    l_U74 = 0;
    return;
}

/* MAL_GETPEDCOORDS */ vector sub_77766(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return "[dynamic result, ret vals = 3]";
        break;
        GET_PED_COORDS( uParam0 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        break;
    }
    return vector( 0, 0, 0);
}

/* P_SETDOORLOCKED */ void sub_77922(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if (( /* F_DOESDOOREXIST */ sub_14373( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_14457( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

/* P_UNLOAD_PLGE_ANIM_DICTS */ void sub_78103(boolean bParam0)
{
    if (NOT bParam0)
    {
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_78172( "PLGE_RIFLE_CROUCH", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_78172( "PLGE_PSTL_CROUCH", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_78172( "PLGE_RIFLE_CORE", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_78172( "PLGE_PSTL_CORE", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_78172( "PLGE_RIFLE_CORE_RELOAD", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_78172( "PLGE_PSTL_CORE_RELOAD", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_78172( "PLGE_RIFLE_HANDSIG", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_78172( "PLGE_PSTL_HANDSIG", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_78172( "PLGE_RIFLE_ACTIONS", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_78172( "PLGE_PSTL_ACTIONS", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_78172( "PLGE_RIFLE_KNEE", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_78172( "PLGE_PSTL_KNEE", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_78172( "PLGE_RIFLE_COVER", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_78172( "PLGE_PSTL_COVER", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_78172( "PLGE_RIFLE_REACT", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_78172( "PLGE_PSTL_REACT", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_78172( "PLGE_RIFLE_COVER_EXIT", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_78172( "PLGE_PSTL_COVER_EXIT", ref g_U1354 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_78172( "PLGE_PSTL_FULLBODY", ref g_U1354 );
    }
    else
    {
         /* UNLOADANIMDICT */ sub_79058( "PLGE_RIFLE_CROUCH" );
         /* UNLOADANIMDICT */ sub_79058( "PLGE_PSTL_CROUCH" );
         /* UNLOADANIMDICT */ sub_79058( "PLGE_RIFLE_CORE" );
         /* UNLOADANIMDICT */ sub_79058( "PLGE_PSTL_CORE" );
         /* UNLOADANIMDICT */ sub_79058( "PLGE_RIFLE_CORE_RELOAD" );
         /* UNLOADANIMDICT */ sub_79058( "PLGE_PSTL_CORE_RELOAD" );
         /* UNLOADANIMDICT */ sub_79058( "PLGE_RIFLE_HANDSIG" );
         /* UNLOADANIMDICT */ sub_79058( "PLGE_PSTL_HANDSIG" );
         /* UNLOADANIMDICT */ sub_79058( "PLGE_RIFLE_ACTIONS" );
         /* UNLOADANIMDICT */ sub_79058( "PLGE_PSTL_ACTIONS" );
         /* UNLOADANIMDICT */ sub_79058( "PLGE_RIFLE_KNEE" );
         /* UNLOADANIMDICT */ sub_79058( "PLGE_PSTL_KNEE" );
         /* UNLOADANIMDICT */ sub_79058( "PLGE_RIFLE_COVER" );
         /* UNLOADANIMDICT */ sub_79058( "PLGE_PSTL_COVER" );
         /* UNLOADANIMDICT */ sub_79058( "PLGE_RIFLE_REACT" );
         /* UNLOADANIMDICT */ sub_79058( "PLGE_PSTL_REACT" );
         /* UNLOADANIMDICT */ sub_79058( "PLGE_RIFLE_COVER_EXIT" );
         /* UNLOADANIMDICT */ sub_79058( "PLGE_PSTL_COVER_EXIT" );
         /* UNLOADANIMDICT */ sub_79058( "PLGE_PSTL_FULLBODY" );
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_REMOVE */ void sub_78172(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_4393( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ANIM_DICT asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* UNLOADANIMDICT */ void sub_79058(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

/* F_IS_PASSOS_AT_HOT_TUB */ int sub_79563()
{
    if (NOT (IS_PED_DEAD( l_U277 )))
    {
        if (( /* MAL_ISACTINTCOMPLETED */ sub_68809( ref l_U277, 47, 1 )) AND (NOT l_U348))
        {
            l_U348 = 1;
            return 1;
        }
    }
    return 0;
}

/* MAL_COMPAREPLAYERPOSAXIS */ int sub_79735(unknown uParam0, unknown uParam1, float fParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    float fVar8;

    uVar5 = { /* MAL_GETPEDCOORDS */ sub_77766(  /* PLAYER_PED_ID */ sub_1458() )};
    if (ARE_STRINGS_EQUAL( uParam0, "X" ))
    {
        fVar8 = uVar5._fU0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "Y" ))
    {
        fVar8 = uVar5._fU4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "Z" ))
    {
        fVar8 = uVar5._fU8;
    };;;
    if (ARE_STRINGS_EQUAL( uParam1, "Greater" ))
    {
        if (fVar8 > fParam2)
        {
            return 1;
        }
    }
    else if (ARE_STRINGS_EQUAL( uParam1, "Less" ))
    {
        if (fVar8 < fParam2)
        {
            return 1;
        }
    }
    return 0;
}

/* P_PASSOS_MOVE_TO_SHOWERS */ void sub_80001()
{
     /* WRITESCRIPTLOG */ sub_1069( "GA", "Passos moving in to showers.", 0 );
    PED_SET_ACTION_INTENTION( l_U277, 49, 5000, g_U649 );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() ))) AND (NOT (IS_PED_DEAD( l_U277 ))))
    {
        SET_PED_DEFAULT_AIM_AT_PED( l_U277,  /* PLAYER_PED_ID */ sub_1458() );
    }
    return;
}

/* F_IS_PASSOS_AT_SHOWERS */ int sub_80178()
{
    if (NOT (IS_PED_DEAD( l_U277 )))
    {
        if (( /* MAL_ISACTINTCOMPLETED */ sub_68809( ref l_U277, 49, 1 )) AND ((NOT l_U349) == 1))
        {
            l_U349 = 1;
            return 1;
        }
    }
    return 0;
}

/* P_PASSOS_MOVE_TO_DARK_ROOM_DOOR */ void sub_80588()
{
    if (NOT (IS_PED_DEAD( l_U277 )))
    {
        PED_SET_ACTION_INTENTION( l_U277, 50, 1000, g_U649 );
        CLEAR_PED_PRIMARY_LOOKAT( l_U277 );
    }
    return;
}

/* F_IS_PASSOS_OUTSIDE_DARK_ROOM */ int sub_80709()
{
    if (NOT (IS_PED_DEAD( l_U277 )))
    {
        if (( /* MAL_ISACTINTCOMPLETED */ sub_68809( ref l_U277, 50, 1 )) AND (NOT l_U350))
        {
            l_U350 = 1;
            return 1;
        }
    }
    return 0;
}

/* F_ISPLAYERINTRIGGERREGION */ void sub_80844(int iParam0, unknown uParam1)
{
    int Result;
    int I;
    int J;

    Result = 0;
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() )))
    {
        for ( I = 0; I < iParam0->_fU508; I++ )
        {
            if ( /* F_ISPLAYERINTRIGGERBOX */ sub_63933( iParam0->_fU0[I] ))
            {
                Result = 1;
            }
        }
    }
    if ((uParam1) AND (Result))
    {
        for ( J = 0; J < iParam0->_fU508; J++ )
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( ref iParam0->_fU0[J]._fU0, 0 );
        }
    }
    iParam0->_fU548 = 1;
    return Result;
}

/* P_SET_LOCKER_ROOM_GRAVITY_WELLS_ENABLED */ void sub_81036(int iParam0)
{
    if (l_U1565 != iParam0)
    {
        ENABLE_GRAVITY_WELL( "st_00_fd_simple", "GravWell_MaxStumbles02", iParam0, 0, 0, 0 );
        l_U1565 = iParam0;
    }
    if (l_U1566 != iParam0)
    {
        ENABLE_GRAVITY_WELL( "st_00_fd_simple", "GravWell_MaxStumbles03", iParam0, 0, 0, 0 );
        ENABLE_GRAVITY_WELL( "st_00_fd_simple", "GravWell_MaxStumbles04", iParam0, 0, 0, 0 );
        l_U1566 = iParam0;
    }
    if (l_U1567 != iParam0)
    {
        ENABLE_GRAVITY_WELL( "st_00_fd_simple", "GravWell_ShowersToDarkroom01", iParam0, 0, 0, 0 );
        ENABLE_GRAVITY_WELL( "st_00_fd_simple", "GravWell_ShowersToDarkroom02", iParam0, 0, 0, 0 );
        ENABLE_GRAVITY_WELL( "st_00_fd_simple", "GravWell_ShowersToDarkroom03", iParam0, 0, 0, 0 );
        ENABLE_GRAVITY_WELL( "st_00_fd_simple", "GravWell_ShowersToDarkroom04", iParam0, 0, 0, 0 );
        l_U1567 = iParam0;
    }
    return;
}

/* F_IS_PLAYER_AT_SECOND_STUMBLE */ int sub_81608()
{
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() )))
    {
        if ((GET_PED_REACHED_TARGETED_GRAVWELL_CENTER(  /* PLAYER_PED_ID */ sub_1458(), "st_00_fd_simple", "GravWell_MaxStumbles02", 0 )) AND (NOT l_U1357))
        {
            l_U1357 = 1;
            return 1;
        }
    }
    return 0;
}

/* P_START_SECOND_BLOOD_SMEAR */ void sub_81879()
{
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() )))
    {
         /* WRITESCRIPTLOG */ sub_1069( "[SA]", "Second smear.", 0 );
         /* NIS_PRE_SETUP */ sub_53919( 0, 0, 0, 1 );
        AUDIO_MUSIC_PLAY_ONESHOT();
        SET_PED_SYNC_POINT(  /* PLAYER_PED_ID */ sub_1458(), g_U3972, -90.00000000 );
        PED_SET_ACTION_INTENTION(  /* PLAYER_PED_ID */ sub_1458(), 52, 5000, g_U649 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_STAD_CP_01", "VIG_15_STADIUM_CAM", 1, 28.10000000, 59.08200000, -1.45100000, 0.00000000, 1, 750 );
        l_U2010 = 1;
        WAIT( 1 );
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1496(), 0, 0 );
         /* MAL_SETFOOTSTEPSTYPE */ sub_7813( 1 );
    }
    return;
}

/* MAL_RECREATEOBJECTWITHNOROTATIONINROOM */ void sub_82427(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
     /* MAL_RECREATEOBJECTINROOM */ sub_82497( uParam0, uParam1, uParam2, g_U649, uParam5, uParam6, uParam7 );
    return;
}

/* MAL_RECREATEOBJECTINROOM */ void sub_82497(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
     /* MAL_RECREATEOBJECT */ sub_82550( uParam0, uParam1, uParam2, uParam5, uParam9, uParam10 );
    if (DOES_OBJECT_EXIST( (uParam0^) ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( (uParam0^), uParam8 );
    }
    return;
}

/* MAL_RECREATEOBJECT */ void sub_82550(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
     /* CLEANOBJECT */ sub_7301( (uParam0^) );
    (uParam0^) =  /* CREATEOBJECTNOOFFSET */ sub_82602( uParam1, uParam2, uParam5, 0, uParam9, 0 );
    FREEZE_OBJECT_POSITION( (uParam0^), uParam8 );
    return;
}

/* CREATEOBJECTNOOFFSET */ void sub_82602(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_39161( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* MAL_PLAYOBJECTANIM */ void sub_83022(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        PLAY_OBJECT_ANIM( uParam0, uParam1, uParam2, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( uParam0, uParam1, uParam2, uParam4 );
        SET_OBJECT_ANIM_SPEED( uParam0, uParam1, uParam2, uParam3 );
    }
    return;
}

/* P_START_CHECKPOINT_THREAD */ void sub_83288(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

/* F_IS_PLAYER_AT_THIRD_STUMBLE */ int sub_83342()
{
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() )))
    {
        if (GET_PED_REACHED_TARGETED_GRAVWELL_CENTER(  /* PLAYER_PED_ID */ sub_1458(), "st_00_fd_simple", "GravWell_MaxStumbles03", 0 ))
        {
            return 1;
        }
    }
    return 0;
}

/* F_IS_PLAYER_AT_FOURTH_STUMBLE */ int sub_83513()
{
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() )))
    {
        if ((GET_PED_REACHED_TARGETED_GRAVWELL_CENTER(  /* PLAYER_PED_ID */ sub_1458(), "st_00_fd_simple", "GravWell_MaxStumbles04", 0 )) AND (NOT l_U1358))
        {
            l_U1358 = 1;
            return 1;
        }
    }
    return 0;
}

/* P_START_THIRD_BLOOD_SMEAR */ void sub_83671()
{
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() )))
    {
         /* WRITESCRIPTLOG */ sub_1069( "[SA]", "Third smear.", 0 );
        SET_PED_SYNC_POINT(  /* PLAYER_PED_ID */ sub_1458(), 35.80000000, 64.86700000, -3.20000000, 0.00000000 );
        PED_SET_ACTION_INTENTION(  /* PLAYER_PED_ID */ sub_1458(), 53, 1000, g_U649 );
        CAMERA_CLEAR_POINT_AT_TARGET();
        SET_CAM_SIDE_LEFT( 1 );
    }
    return;
}

/* P_CLOSE_DARK_ROOM_DOORS */ void sub_84207()
{
     /* P_CLOSEDOOR */ sub_38535( ref g_U2968, 0 );
     /* P_CLOSEDOOR */ sub_38535( ref g_U2975, 0 );
    return;
}

/* P_SHOOT_AT_COORD */ void sub_84292(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_SHOOTS_AT_COORD( uParam0, uParam1 );
    }
    return;
}

/* P_PASSOS_MOVE_INTO_DARK_ROOM */ void sub_85111()
{
    if (NOT (IS_PED_DEAD( l_U277 )))
    {
        PED_ACTION_TREE_PLAY_NODE( l_U277, "/Global/PASSOS_THROUGH_BASEMENT/PASSOS_THROUGH_BASEMENT_CONTROL/INTO_DARKROOM/AFTER_DARKROOM_HOLD" );
    }
    return;
}

/* P_PASSOS_MOVE_TO_DARK_ROOM_SHOOT_POINT */ void sub_85456()
{
    if (NOT (IS_PED_DEAD( l_U277 )))
    {
        PED_SET_ACTION_INTENTION( l_U277, 51, 1000, g_U649 );
    }
    return;
}

/* P_PLAY_DARK_ROOM_SPEECH */ void sub_85557()
{
    if ((NOT (IS_PED_DEAD( l_U277 ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() ))))
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_50903( ref l_U1315 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_51014( 0,  /* PLAYER_PED_ID */ sub_1458(), "MAX", ref l_U1315, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_51014( 1, l_U277, "PASSOS", ref l_U1315, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_51281( "SSTD_BTPA", ref l_U1315, 8, 1 );
    }
    return;
}

/* P_HANDLE_FIELD_DEATH_SEQUENCE */ void sub_85843()
{
    vector vVar2;
    float fVar5;
    vector vVar6;
    vector vVar9;
    vector vVar12;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    unknown uVar40;
    unknown uVar41;
    unknown uVar42;
    unknown uVar43;
    unknown uVar44;
    unknown uVar45;
    unknown uVar46;
    unknown uVar47;
    unknown uVar48;

    switch (l_U117)
    {
        case 1:
        if (IS_SCREEN_FADED_OUT())
        {
            l_U117 = 2;
        }
        break;
        case 2:
        if (l_U118)
        {
            vVar2 = {14.71981000, -0.81798800, 0.17263800};
            fVar5 = 299.43780000;
            vVar6 = {14.11945000, -4.56673700, 0.41104700};
            vVar9 = {7.19548600, 0.00000300, -16.67859000};
        }
        else
        {
            vVar2 = {1.34340600, 25.28127000, 0.17263800};
            fVar5 = 215.09000000;
            vVar6 = {-2.98952500, 21.23214000, 0.53261800};
            vVar9 = {1.03530700, 0.00003300, -48.05409000};
        }
        FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_1458(), 1 );
        CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1458() );
         /* MAL_TELEPORTPLAYER */ sub_76205( vVar2, fVar5, 0, 0 );
         /* MAL_SETLOCKEDANDREGISTEREDONPLAYER */ sub_42487( ref l_U1090 );
        SET_PED_AI_TEMPLATE( l_U1090, "AIT_EXPERT" );
        SET_PED_ACCURACY( l_U1090, 31186664 );
        TASK_AIM_GUN_AT_COORD( l_U1090, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS(  /* PLAYER_PED_ID */ sub_1458(), 65488, g_U649 ), -1, 1 );
         /* MAL_FREEZEPED */ sub_62396( ref l_U1090, 1 );
        vVar12 = {l_U1077._fU0};
        vVar12 = {vVar12 + (vector( 0, 0, 0.20000000))};
         /* MAL_TELEPORTPED */ sub_50093( l_U1090, vVar12, GET_PED_HEADING( l_U1090 ) );
         /* CLEANCAMERA */ sub_8040( ref l_U1209 );
         /* NIS_CREATE_STATIC_CAM */ sub_86313( ref uVar15, vVar6, vVar9, 1110704128, 1000 );
         /* NIS_PLAY_STATIC_CAMERA */ sub_86546( ref uVar15 );
        DO_SCREEN_FADE_IN( 250 );
        l_U117 = 3;
        break;
        case 3:
        if (IS_SCREEN_FADED_IN())
        {
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_1458(), 0 );
            uVar46 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS(  /* PLAYER_PED_ID */ sub_1458(), 65488, g_U649 )};
            SET_PED_SHOOTS_AT_COORD( l_U1090, uVar46 );
            l_U117 = 4;
        }
        break;
        case 4: break;
    }
    return;
}

/* NIS_CREATE_STATIC_CAM */ void sub_86313(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_2347( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U723, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* NIS_PLAY_STATIC_CAMERA */ void sub_86546(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_2497( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

/* P_HANDLE_STATIC_IMAGE_FX */ void sub_86857()
{
    if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_86904( ref l_U1847,  /* PLAYER_PED_ID */ sub_1458(), 0 ))
    {
        PLAY_IMAGEFX( "DOUBLE_WIDE_INTERLACE_FLASH_07", 4, 0 );
    }
    if (l_U1910)
    {
        PLAY_IMAGEFX( "GAMMA_SATURATION_COLOR_ZOOM", 4, 0 );
        l_U1910 = 0;
    }
    if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_86904( ref l_U1868,  /* PLAYER_PED_ID */ sub_1458(), 0 ))
    {
        PLAY_IMAGEFX( "GAMMA_SATURATION_COLOR_ZOOM_3", 4, 0 );
    }
    if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_86904( ref l_U1889,  /* PLAYER_PED_ID */ sub_1458(), 0 ))
    {
        PLAY_IMAGEFX( "GAMMA_ZOOM_1", 4, 0 );
    }
    return;
}

/* F_ISPEDINTRIGGERBOXFIRSTTIME */ void sub_86904(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 =  /* F_ISPEDINTRIGGERBOX */ sub_63541( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

/* P_HANDLE_RANDOM_IMAGE_FX */ void sub_87247()
{
    if (( /* ISTIMERDONE */ sub_2630( ref l_U1838 )) == 1)
    {
        if (l_U1911 == 1)
        {
             /* P_INIT_RANDOM_IMAGEFX_FIELD */ sub_60004();
        }
        if (l_U1912 == 1)
        {
             /* P_INIT_RANDOM_IMAGEFX_HALL */ sub_76665();
        }
    }
     /* P_HANDLE_IMAGEFX */ sub_87338( ref l_U1675 );
    return;
}

/* P_HANDLE_IMAGEFX */ void sub_87338(unknown uParam0)
{
    int I;
    int J;

    switch (l_U74)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_1069( "CO", "P_HANDLE_IMAGEFX", 0 );
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (uParam0^)[I]._fU32)
            {
                 /* CREATETIMER */ sub_2347( ref (uParam0^)[I]._fU36, (uParam0^)[I]._fU12, 1, 0 );
                 /* STARTTIMER */ sub_2497( ref (uParam0^)[I]._fU36 );
                if ((uParam0^)[I]._fU20 > 0)
                {
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        l_U74 = 1;
        break;
        case 1:
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if ( /* ISTIMERDONE */ sub_2630( ref (uParam0^)[I]._fU36 ))
            {
                (uParam0^)[I]._fU0 = PLAY_IMAGEFX( (uParam0^)[I]._fU4, (uParam0^)[I]._fU8, (uParam0^)[I]._fU28 );
                if ((uParam0^)[I]._fU16 > 0)
                {
                     /* CREATETIMER */ sub_2347( ref (uParam0^)[I]._fU72, (uParam0^)[I]._fU16, 1, 0 );
                     /* STARTTIMER */ sub_2497( ref (uParam0^)[I]._fU72 );
                }
                if ((uParam0^)[I]._fU20 > 0)
                {
                    for ( J = I + 1; J <= (I + (uParam0^)[I]._fU20); J++ )
                    {
                        PRINTSTRING( "******* [CO] ***** STARTING CHILD FOR index : " );
                        PRINTINT( J );
                        PRINTNL();
                        (uParam0^)[J]._fU0 = PLAY_IMAGEFX( (uParam0^)[J]._fU4, (uParam0^)[J]._fU8, (uParam0^)[I]._fU28 );
                        if ((uParam0^)[J]._fU16 > 0)
                        {
                             /* CREATETIMER */ sub_2347( ref (uParam0^)[J]._fU72, (uParam0^)[J]._fU16, 1, 0 );
                             /* STARTTIMER */ sub_2497( ref (uParam0^)[J]._fU72 );
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
            if ( /* ISTIMERDONE */ sub_2630( ref (uParam0^)[I]._fU72 ))
            {
                STOP_IMAGEFX( (uParam0^)[I]._fU0, (uParam0^)[I]._fU24 );
                (uParam0^)[I]._fU32 = 1;
                if ((uParam0^)[I]._fU20 > 0)
                {
                    if ((uParam0^)[I]._fU20 == 1)
                    {
                        STOP_IMAGEFX( (uParam0^)[I + 1]._fU0, (uParam0^)[I + 1]._fU24 );
                        (uParam0^)[I + 1]._fU32 = 1;
                    }
                    else
                    {
                        for ( J = I + 1; J <= (uParam0^)[I]._fU20; J++ )
                        {
                            STOP_IMAGEFX( (uParam0^)[J]._fU0, (uParam0^)[J]._fU24 );
                            (uParam0^)[J]._fU32 = 1;
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        break;
    }
    return;
}

/* P_PLAY_PLAYER_PAIN_AUDIO */ void sub_88218()
{
    if (NOT l_U1355)
    {
         /* P_CREATE_AND_START_TIMER */ sub_52218( ref l_U1337, 6000 );
        l_U1355 = 1;
    }
    if ( /* ISTIMERDONE */ sub_2630( ref l_U1337 ))
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1458() )))
        {
            if ((GET_PED_SPEED(  /* PLAYER_PED_ID */ sub_1458() )) > 0.10000000)
            {
                PLAY_PED_AMBIENT_SPEECH(  /* PLAYER_PED_ID */ sub_1458(), "STUMBLE_PAIN", 1, 1, 0, 0, 30000 );
            }
        }
         /* P_CREATE_AND_START_TIMER */ sub_52218( ref l_U1337, GET_RANDOM_INT_IN_RANGE( 6000, 7000 ) );
    }
    return;
}

/* P_DISABLE_PLAYER_ADRENALINE */ void sub_88403()
{
    if (GET_ADRENALINE_AMT() > 0.01000000)
    {
        SET_ADRENALINE_AMT( 0.00000000 );
    }
    return;
}

/* P_RELEASE_FIELD_ASSETS */ void sub_88499()
{
     /* MAL_WRITESCRIPTLOG */ sub_898( "P_RELEASE_FIELD_ASSETS" );
     /* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ sub_88572( ref l_U2012, ref g_U1069 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE_ARRAY */ sub_88677( ref l_U2020, ref g_U1214 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_78172( "LEVEL_S_STAD_CP_01", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_78172( "LEVEL_S_STAD_LOCKER", ref g_U1354 );
     /* P_STREAMREQ_ACTION_TREE_REMOVE */ sub_88872( "/LEVEL/S_STAD/s_stad_inj1.act", ref g_U2012 );
     /* P_UNLOAD_PLGE_ANIM_DICTS */ sub_78103( 0 );
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ void sub_88572(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_74332( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE_ARRAY */ void sub_88677(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_4262( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_ACTION_TREE_REMOVE */ void sub_88872(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_4393( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ACTION_TREE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}


void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = -1;
    l_U40 = {64536, 64536, 64536};
    l_U62 = 0;
    l_U63 = 0;
    l_U64 = 1500;
    l_U144 = 1;
    l_U145 = 0;
    l_U147 = 0;
    l_U320 = {43.82200000, 71.14400000, -3.21000000};
    l_U323 = {0.00000000, 0.00000000, 0.00000000};
    l_U336 = 0;
    l_U337 = 10.00000000;
    l_U570 = 0;
    l_U616 = 0;
    StrCopy( ref l_U617, "Basement01_Use_elevator", 64 );
    l_U633 = {66.63642000, 90.46851000, -4.01000000};
    l_U872 = 0;
    l_U1012 = 0;
    l_U1040 = 0;
    l_U1041 = {88.39400000, 64.48000000, -2.05400000};
    l_U1044 = 0;
    l_U1045 = 0;
    l_U1046 = {71.12200000, 94.67600000, -4.00000000};
    l_U1049 = 180.17000000;
    l_U1050 = {72.03000000, 94.68000000, -4.00000000};
    l_U1053 = 180.00000000;
    l_U1063 = 0;
    l_U1064 = 0;
    l_U1065 = 0;
    l_U1085 = 0;
    l_U1086 = 0;
    l_U1087 = 0;
    l_U1088 = 0;
    l_U1089 = 0;
    l_U1090 = 0;
    l_U1118 = 0;
    l_U1119 = 0;
    l_U1120 = 0;
    l_U1130 = 0;
    l_U1418 = 0;
    l_U1701 = 0;
    l_U1702 = 0;
    l_U1703 = 0;
    l_U1713 = 0;
    l_U1728 = 0;
    l_U1729 = 0;
    l_U1740 = 0;
     /* WRITESCRIPTLOG */ sub_693( "SP", "Script stad_PracField.sc is starting up...", 0 );
     /* P_PRAC_POPULATE_VARIABLE_ARRAYS */ sub_811();
    l_U145 = 1;
    while (NOT IS_EXITFLAG_SET())
    {
         /* P_HANDLE_FAILURE */ sub_1164();
        if (l_U147 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_12849();
             /* P_MONITOR_TV */ sub_13279( ref l_U1429 );
        }
        WAIT( 0 );
    }
     /* P_CLEANUP_PRACTICEROOM */ sub_3897( 0 );
     /* P_CLEAN_MOVIE */ sub_85200( ref l_U1429 );
     /* P_RELEASE_PRACTICEROOM_ASSETS */ sub_85315();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "stad_PracField" );
     /* WRITESCRIPTLOG */ sub_693( "SP", "Script stad_PracField.sc is terminating...", 0 );
    return;
}

/* WRITESCRIPTLOG */ void sub_693(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_PRAC_POPULATE_VARIABLE_ARRAYS */ void sub_811()
{
     /* WRITESCRIPTLOG */ sub_693( "GA", "P_PRAC_POPULATE_VARIABLE_ARRAYS start", 0 );
    l_U128[0] = g_U2391;
    l_U128[1] = g_U2392;
    l_U128[2] = g_U2393;
    l_U128[3] = g_U2396;
    l_U128[4] = g_U2397;
    l_U128[5] = 850656818;
    l_U128[6] = 1267966326;
    l_U128[7] = 1217913072;
    l_U128[8] = g_U2380;
    l_U128[9] = 619121117;
    l_U128[10] = 824031458;
    l_U128[11] = -1856433758;
    l_U141[0] = 434544317;
    l_U141[1] = 1194438308;
     /* WRITESCRIPTLOG */ sub_693( "GA", "P_PRAC_POPULATE_VARIABLE_ARRAYS end", 0 );
    return;
}

/* P_HANDLE_FAILURE */ void sub_1164()
{
    if (g_U855 == 2)
    {
        switch (l_U147)
        {
            case 0:
            if (((IS_PED_DEAD( l_U1714 )) AND (DOES_PED_EXIST( l_U1714 ))) || (( /* RESTARTING_CHECKPOINT */ sub_1366()) || (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() ))))
            {
                if (IS_PED_DEAD( l_U1714 ))
                {
                    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
                    RESET_LAST_MAN_STANDING();
                }
                l_U147 = 1;
                 /* WRITESCRIPTLOG */ sub_693( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if ( /* IS_RESTART_ACTIVE */ sub_1943())
            {
                l_U147 = 2;
            }
            else if (( /* F_CHECK_QUIT_RETRY */ sub_2003( 0 )) == 1)
            {
                l_U147 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )))
            {
                if ((g_U888[3]._fU40 != 4) AND (g_U888[3]._fU40 != 0))
                {
                     /* WRITESCRIPTLOG */ sub_693( "CR", "Shutting down script for MCE_MEDIA.", 0 );
                     /* P_RESET_CHECKPOINT_THREAD */ sub_3569( ref g_U888[3] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U888[3]._fU32 );
                    g_U3870 = 0;
                }
                l_U147 = 3;
                 /* WRITESCRIPTLOG */ sub_693( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
             /* WRITESCRIPTLOG */ sub_693( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() ))) AND (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1303() ))))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1303(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1265() ))
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1265(), 0 );
                }
            }
            TERMINATE_GAME_BULLET_CAMERA();
            CAMERA_FREEZE_FRAME( 0, 400, 0, 0 );
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
             /* P_CLEANUP_PRACTICEROOM */ sub_3897( 1 );
             /* P_LOAD_AREA */ sub_7298( 2 );
            l_U147 = 4;
             /* WRITESCRIPTLOG */ sub_693( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
             /* WRITESCRIPTLOG */ sub_693( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            if (l_U92._fU0)
            {
                 /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_8167( ref l_U92,  /* PLAYER_PED_ID */ sub_1265() );
            }
            l_U147 = 5;
             /* WRITESCRIPTLOG */ sub_693( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
             /* WRITESCRIPTLOG */ sub_693( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U145 = 1;
            l_U144 = 0;
            l_U147 = 0;
             /* WRITESCRIPTLOG */ sub_693( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

/* PLAYER_PED_ID */ int sub_1265()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_1303() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_1303()
{
    return GET_PLAYER_ID();
}

/* RESTARTING_CHECKPOINT */ int sub_1366()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1265(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1303(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1303(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1265() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1265(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* IS_RESTART_ACTIVE */ void sub_1943()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_2003(int iParam0)
{
    iParam0 = 1;
    switch (l_U63)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_2085( ref l_U65 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )))
            {
                l_U64 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_2219( ref l_U65, l_U64, 1, 1 );
             /* STARTTIMER */ sub_2369( ref l_U65 );
        }
        if ( /* ISTIMERDONE */ sub_2502( ref l_U65 ))
        {
             /* WRITESCRIPTLOG */ sub_693( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1303() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1303(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U63 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U63 = 2;
            }
            else
            {
                l_U63 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_693( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_3003();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_693( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_3003();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_2085(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* CREATETIMER */ void sub_2219(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_2369(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* ISTIMERDONE */ int sub_2502(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_3003()
{
     /* WRITESCRIPTLOG */ sub_693( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_3078( ref l_U65 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1303() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1303(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U62 = 0;
    l_U62 = l_U62;
    l_U63 = 0;
    return;
}

/* RESETTIMER */ void sub_3078(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_RESET_CHECKPOINT_THREAD */ void sub_3569(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

/* P_CLEANUP_PRACTICEROOM */ void sub_3897(boolean bParam0)
{
     /* WRITESCRIPTLOG */ sub_693( "SP", "P_CLEANUP_PRACTICEROOM", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )))
    {
        SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1265(), 0 );
    }
    if ((CUTSCENE_NAMED_IS_LOADING( "03_02_STAD_concat" )) || (CUTSCENE_IS_LOADED( "03_02_STAD_concat" )))
    {
        CLEAR_NAMED_CUTSCENE( "03_02_STAD_concat" );
    }
     /* TERMINATEISEQ */ sub_4092( -843316873, 0 );
     /* TERMINATEISEQ */ sub_4092( 109790724, 0 );
     /* TERMINATEISEQ */ sub_4092( -395445998, 0 );
     /* TERMINATEISEQ */ sub_4092( -991527869, 0 );
     /* TERMINATEISEQ */ sub_4092( 908686940, 0 );
     /* TERMINATEISEQ */ sub_4092( -1343439341, 0 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_4457( -843316873, ref g_U1263 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_4457( 109790724, ref g_U1263 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_4457( -395445998, ref g_U1263 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_4457( -991527869, ref g_U1263 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_4457( 908686940, ref g_U1263 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_4457( -1343439341, ref g_U1263 );
    if (bParam0)
    {
        ;
    }
    else if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( l_U1714, 0, 0 ) )) AND (NOT (IS_PED_DEAD( l_U1714 ))))
    {
        SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U1714, 0, 0 ), 0 );
    }
     /* CLEANPED */ sub_5669( l_U1714 );
     /* CLEANOBJECT */ sub_5759( g_U3866 );
     /* CLEANOBJECT */ sub_5759( g_U3867 );
     /* CLEANOBJECT */ sub_5759( l_U1131 );
     /* CLEANPLACEMENT */ sub_5838( l_U338 );
     /* CLEANPLACEMENT */ sub_5838( l_U339 );
     /* CLEANPLACEMENT */ sub_5838( l_U340 );
     /* CLEANPLACEMENT */ sub_5838( l_U341 );
     /* MAL_ESA_CLEAN */ sub_5932( ref l_U645 );
     /* MAL_ESA_CLEAN */ sub_5932( ref l_U873 );
     /* CLEANOBJECT */ sub_5759( l_U319 );
     /* CLEANOBJECT */ sub_5759( l_U318 );
     /* P_STOP_SP_CHALLENGES */ sub_6079();
     /* P_ENABLE_POI */ sub_6241( ref l_U1237, 0 );
    DESTROY_DYNAMIC_PATH_OBSTRUCTION( l_U1751[0] );
    DESTROY_DYNAMIC_PATH_OBSTRUCTION( l_U1751[1] );
    DESTROY_DYNAMIC_PATH_OBSTRUCTION( l_U1751[2] );
    return;
}

/* TERMINATEISEQ */ void sub_4092(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            DISPLAYF( "[SP]### Waiting for interactive sequence to terminate: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_STREAMREQ_ISEQ_REMOVE */ void sub_4457(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_4595( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a ISEQ asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ int sub_4595(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if ((uParam1^)[I] == iParam0)
            {
                DISPLAYF( "[CCB] ### The THREADID index matches the asset requested for removal: {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
            else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID index is in use and is active: {} ###", 1, 513, (uParam1^)[I] );
                Result = I;
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is in use, but is no longer active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

/* CLEANPED */ void sub_5669(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CLEANOBJECT */ void sub_5759(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* CLEANPLACEMENT */ void sub_5838(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

/* MAL_ESA_CLEAN */ void sub_5932(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* MAL_ES_CLEAN */ sub_5980( ref (uParam0^)[I] );
    }
    return;
}

/* MAL_ES_CLEAN */ void sub_5980(int iParam0)
{
     /* CLEANPED */ sub_5669( iParam0->_fU0 );
    iParam0->_fU172 = 0;
    return;
}

/* P_STOP_SP_CHALLENGES */ void sub_6079()
{
     /* WRITESCRIPTLOG */ sub_693( "CCB", "P_STOP_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_693( "CCB", "Stopping the Stadium_Practice context...", 0 );
    END_CONTEXT( "Stadium_Practice" );
    return;
}

/* P_ENABLE_POI */ void sub_6241(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
             /* P_ENABLEPOIGLINT */ sub_6300( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_6300( iParam0, 0 );
         /* P_ENABLEPOIINTERACTIONTEXT */ sub_6519( iParam0, 0 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )) == 0)
        {
            TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_1265() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1265(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

/* P_ENABLEPOIGLINT */ void sub_6300(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

/* P_ENABLEPOIINTERACTIONTEXT */ void sub_6519(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_6699( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

/* P_UPDATEINTERACTIONTEXTAVAILABLE */ void sub_6699(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if (( /* F_ISACTIONINGAVAILABLE */ sub_6795( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if (( /* F_ISACTIONINGAVAILABLE */ sub_6795( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

/* F_ISACTIONINGAVAILABLE */ int sub_6795(int iParam0)
{
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1303() )) == 0))
    {
        if (((IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_1265() )) == 1) || (((IS_PED_GETTING_UP(  /* PLAYER_PED_ID */ sub_1265() )) == 1) || (((IS_PED_PICKING_UP_PICKUP(  /* PLAYER_PED_ID */ sub_1265() )) == 1) || (((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_1265() )) == 1) || (((IS_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1265() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1265() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

/* P_LOAD_AREA */ void sub_7298(unknown uParam0)
{
    vector vVar3;
    unknown uVar6;
    int iVar7;
    string sVar8;
    unknown uVar9;

     /* MAL_WRITESCRIPTLOG */ sub_7336( "P_LOAD_AREA" );
    vVar3 = {g_U2138[uParam0]};
    uVar6 = g_U2256[uParam0];
    iVar7 = -1;
    switch (uParam0)
    {
        case 2:
        case 21:
        iVar7 = GET_HASH_KEY( ref g_U2460 );
        sVar8 = "Int_Bsmt_01";
        break;
        case 3:
        case 22:
        iVar7 = GET_HASH_KEY( "Room_Hallway_01" );
        sVar8 = "Int_Bsmt_02";
        break;
        case 4:
        case 23:
        iVar7 = GET_HASH_KEY( "Room_Staircase_02" );
        sVar8 = "Int_Bsmt_03";
        break;
        case 5:
        case 24:
        iVar7 = GET_HASH_KEY( ref g_U2484 );
        sVar8 = "int_store_00";
        break;
        case 9:
        case 27:
        iVar7 = GET_HASH_KEY( ref g_U2548 );
        sVar8 = "int_Trophy_01";
        break;
        case 10:
        vVar3 = {-97.16455000, 22.49700000, 26.58807000};
        SET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1265(), -2.36477500, 2.76315900, 1.17283500, 1 );
        SET_PED_HEADING(  /* PLAYER_PED_ID */ sub_1265(), uVar6 );
        LOAD_SCENE( -2.36477500, 2.76315900, 1.17283500 );
        break;
    }
    if (iVar7 == -1)
    {
        LOAD_SCENE( vVar3 );
    }
    else
    {
        uVar9 = GET_INTERIOR_FROM_NAME( sVar8, 0 );
        SET_INTERIOR_ACTIVE( uVar9, 1, 0 );
        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar9, iVar7 );
    }
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )) == 0)
    {
        SET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1265(), vVar3, 1 );
        SET_PED_HEADING(  /* PLAYER_PED_ID */ sub_1265(), uVar6 );
        FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_1265(), 0 );
    }
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2296[uParam0], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2296[uParam0], 1065353216, 0 );
    return;
}

/* MAL_WRITESCRIPTLOG */ void sub_7336(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar3, 1537, "MSWW", 1537, uParam0, 1537, "###" );
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_8167(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_693( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_8386( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_9550( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_9864( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_10343( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_9864( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_10343( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_9864( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_10343( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_10659( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_10343( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_10659( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_10343( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_11231( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_11433( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1265(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_693( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_8386(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_8448( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_8448(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_9550(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_9864(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_10268( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* WRITE_STRING */ void sub_10268(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_10343(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_10659(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_10268( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_11231(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_11433(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_8448( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_11531( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_11531(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_HANDLE_EVENTS */ void sub_12849()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    unknown uVar40;
    unknown uVar41;
    unknown uVar42;
    unknown uVar43;
    float fVar44;
    unknown uVar45;

    iVar2 = l_U145;
    if (g_U855 == 2)
    {
         /* UPDATE_PASSOS_HEADTRACKING */ sub_12896();
         /* P_MONITOR_TV */ sub_13279( ref l_U1429 );
    }
    switch (l_U145)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_693( "SP", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
         /* P_INITIALIZE_SCRIPT_DATA */ sub_19770();
         /* P_SET_STATIC_DATA */ sub_20267();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U145 = 2;
         /* WRITESCRIPTLOG */ sub_693( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_693( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
         /* P_REQUEST_PRACTICEROOM_PERSISTENT_ASSETS */ sub_23726();
         /* P_REQUEST_PRACTICEROOM_NONPERSISTENT_ASSETS */ sub_30880();
        l_U145 = 3;
         /* WRITESCRIPTLOG */ sub_693( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if (( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_36180( ref g_U1263 )) AND (( /* F_STREAMREQ_ANIM_DICT_IS_LOADED */ sub_35789( ref g_U1354 )) AND (( /* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ sub_35387( ref g_U1214 )) AND ( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_34990( ref g_U1069 )))))
        {
            if ((NOT l_U92._fU0) AND (g_U854 == 2))
            {
                l_U145 = 4;
                 /* WRITESCRIPTLOG */ sub_693( "SP", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
            }
            else
            {
                l_U145 = 6;
                 /* WRITESCRIPTLOG */ sub_693( "SP", "eCheckpointState = CP_SETUP", 0 );
            }
        }
        break;
        case 4:
        g_U3869 = 1;
        l_U144 = 0;
        if (NOT ( /* HAS_SAVEFILE_LOADED */ sub_36754( ref l_U92 )))
        {
             /* F_GIVEPEDWEAPON */ sub_10659(  /* PLAYER_PED_ID */ sub_1265(), 68019059, 50, 0, 0 );
            l_U145 = 5;
             /* WRITESCRIPTLOG */ sub_693( "GA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U145 = 6;
             /* WRITESCRIPTLOG */ sub_693( "SP", "eCheckpointState = CP_SETUP", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )))
        {
            if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1265(), 0, 0 ) ))
            {
                l_U145 = 6;
                 /* WRITESCRIPTLOG */ sub_693( "GA", "eCheckpointState = CP_SETUP", 0 );
            }
        }
        break;
        case 6:
        if (l_U146)
        {
             /* P_PRACTICE_PLACE_PLACEMENTS */ sub_37217();
             /* P_PRACTICEROOMCSPRE */ sub_38063();
             /* P_SETUP_PRACTICE_ELEVATOR */ sub_38672( 0, 0 );
             /* MAL_RECREATEOBJECTWITHNOROTATIONINROOM */ sub_40636( ref g_U3866, g_U2396, l_U1041, ref g_U2532, 1, 0 );
             /* MAL_RECREATEOBJECTINROOM */ sub_40706( ref l_U1131, 1217913072, 69.12030000, 101.22100000, -3.72599000, 65446, 0, -1.01000000, ref g_U2460, 0, 0 );
            SET_OBJECT_VISIBLE( l_U1131, 0 );
             /* P_SETUP_EDISON */ sub_41251();
            SET_PED_SWEAT(  /* PLAYER_PED_ID */ sub_1265(), 0.00000000, -1.00000000 );
            SET_SWEAT_ENABLED( 1 );
             /* P_CREATETVSTRUCT */ sub_42904();
            l_U146 = 0;
            return;
        }
        if ( /* MAL_ENEMYSTRUCTARRAYCREATE */ sub_43964( ref l_U645, "PracCS", ref l_U866, 1.00000000, 1, 1 ))
        {
             /* P_PRACTICEROOMCSPOST */ sub_47236();
            l_U145 = 7;
             /* WRITESCRIPTLOG */ sub_693( "SP", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 7:
        if (g_U3869)
        {
            if (l_U144)
            {
                if (CUTSCENE_IS_LOADED( "03_02_STAD_concat" ))
                {
                    l_U145 = 8;
                     /* WRITESCRIPTLOG */ sub_693( "GA", "eCheckpointState = CP_PRACTICE_ROOM_NIS", 0 );
                }
                else if (CUTSCENE_NAMED_IS_LOADING( "03_02_STAD_concat" ))
                {
                     /* WRITESCRIPTLOG */ sub_693( "GA", "Waiting for cutscene 03_02_STAD_concat to load.", 0 );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_693( "GA", "Requesting cutscene 03_02_STAD_concat to load.", 0 );
                    PRE_STREAM_SEAMLESS_CUTSCENE( "03_02_STAD_concat" );
                }
            }
            else
            {
                l_U145 = 8;
                 /* WRITESCRIPTLOG */ sub_693( "SP", "eCheckpointState = CP_PRACTICE_ROOM_NIS", 0 );
            }
        }
        break;
        case 8:
        if (l_U146)
        {
             /* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ sub_63076( ref l_U1091, "03_02_STAD_concat", 49157, 49344, 50689, 51225, 53358, 60935, 250, 0 );
            l_U1091._fU100 = g_U853;
            if (l_U144)
            {
                l_U1091._fU4 = 2;
            }
            else
            {
                l_U1091._fU4 = 7;
                AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1_3", 0, 0, -1, -1, -1082130432, 0 );
            }
        }
        if ( /* CUTSYS_HANDLECUTSCENE */ sub_63694( ref l_U1091 ))
        {
             /* WRITESCRIPTLOG */ sub_693( "SP", "eCheckpointState = CP_HIDING_IN_PRACTICE_ROOM", 0 );
            l_U145 = 9;
        }
        break;
        case 9:
        if (l_U146)
        {
            if ((IS_PED_DEAD( l_U645[0]._fU0 )) == 0)
            {
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U645[0]._fU0, 0 );
            }
            if ((IS_PED_DEAD( l_U645[1]._fU0 )) == 0)
            {
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U645[1]._fU0, 0 );
            }
            if ((IS_PED_DEAD( l_U645[2]._fU0 )) == 0)
            {
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U645[2]._fU0, 0 );
            }
        }
         /* F_HANDLE_POI */ sub_13641( ref l_U1323 );
         /* F_HANDLE_POI */ sub_13641( ref l_U1237 );
        if (( /* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ sub_66139( ref l_U1323 )) == 1)
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_54885( ref l_U1741 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 0,  /* PLAYER_PED_ID */ sub_1265(), "MAX", ref l_U1741, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 1,  /* PLAYER_PED_ID */ sub_1265(), "MAX", ref l_U1741, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_55267( "EXPLORE_ITEM", ref l_U1741, 8, 1 );
        }
        if (( /* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ sub_66139( ref l_U1237 )) == 1)
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_54885( ref l_U1741 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 0,  /* PLAYER_PED_ID */ sub_1265(), "MAX", ref l_U1741, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 1,  /* PLAYER_PED_ID */ sub_1265(), "MAX", ref l_U1741, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_55267( "EXPLORE_ITEM", ref l_U1741, 8, 1 );
        }
        if (( /* F_SHOULD_PRACTICE_CS_ENGAGE */ sub_66591()) == 1)
        {
            SET_CAM_VIEW_MODE( 1 );
            AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1_2_3_6", "", 0, 1000, -1, -1082130432, 0 );
             /* WRITESCRIPTLOG */ sub_693( "SP", "eCheckpointState = CP_PRACTICE_ROOM_FIGHT", 0 );
            l_U145 = 11;
        }
        if (( /* F_CHECK_PRACTICE_CS_LEAVING */ sub_66986()) == 1)
        {
             /* NIS_PRE_SETUP */ sub_64585( 1, 0, 0, 1 );
            AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1_2", "", 0, 7000, -1, -1082130432, 0 );
             /* P_PRAC_START_CS_LEAVE_ROOM */ sub_67193();
             /* WRITESCRIPTLOG */ sub_693( "SP", "eCheckpointState = CP_NIS_CS_LEAVE_PRACTICE_ROOM", 0 );
            l_U145 = 10;
        }
        break;
        case 10:
        if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_STAD_CP_02", "VIG_18_STADIUM_CAM" )) - 600))
        {
            if (NOT (IS_PED_DEAD( l_U1714 )))
            {
                 /* P_PASSOS_COME_OUT_OF_COVER */ sub_68064();
                TASK_LOOK_AT_COORD( l_U1714, 49.96000000, 69.30000000, -2.10000000, 5000, 0 );
            }
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )))
            {
                if ((GET_PED_HEADING(  /* PLAYER_PED_ID */ sub_1265() )) > 180.00000000)
                {
                    SET_GAMEPLAY_CAM_RELATIVE_HEADING( -108.00000000, 0, 0 );
                }
                else
                {
                    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 72.00000000, 0, 0 );
                }
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( -12.33600000, 1065353216, 0 );
                CAMERA_ANIMATED_STOP( 0, 0 );
            }
             /* NIS_POST_SETUP */ sub_65509( 1, 1 );
             /* MAL_ESA_CLEAN */ sub_5932( ref l_U645 );
            STREAM_HELPERS_REQUEST_AT_LOC( 46.66368000, 70.31908000, -2.23933200, 0 );
             /* MAL_ESA_CLEAN */ sub_5932( ref l_U873 );
            SET_CAM_VIEW_MODE( 1 );
             /* WRITESCRIPTLOG */ sub_693( "SP", "eCheckpointState = CP_PRACTICE_ROOM_CS_GONE", 0 );
            l_U145 = 14;
        }
        break;
        case 11:
        if (l_U146)
        {
             /* P_START_PRACTICE_ROOM_FIGHT */ sub_68549();
             /* MAL_ESA_GIVETETHERARRAY */ sub_69161( ref l_U645, ref l_U316, 1 );
             /* P_CREATE_AND_START_TIMER */ sub_61005( ref l_U598, 10000 );
        }
        if ( /* HASTIMERBEENACTIVATED */ sub_2085( ref l_U598 ))
        {
            if ( /* MAL_HASPLAYERFIRED */ sub_69495( 1 ))
            {
                 /* RESETTIMER */ sub_3078( ref l_U598 );
                 /* STARTTIMER */ sub_2369( ref l_U598 );
            }
            else if (NOT (IS_ANY_SPEECH_PLAYING( l_U1714 )))
            {
                if ((l_U616 < 3) AND ( /* ISTIMERDONE */ sub_2502( ref l_U598 )))
                {
                     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_54885( ref l_U540 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 1, l_U1714, "PASSOS", ref l_U540, 2, 0 );
                     /* PLAY_SINGLE_SPEECH */ sub_55267( "SSTD_MNSP", ref l_U540, 7, 1 );
                     /* RESETTIMER */ sub_3078( ref l_U598 );
                     /* P_CREATE_AND_START_TIMER */ sub_61005( ref l_U598, 12000 );
                    l_U616++;
                }
            }
        }
        if (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_68692( l_U1730 )))
        {
            if ((IS_LAST_MAN_STANDING_ACTIVE()) AND (NOT l_U1729))
            {
                l_U1729 = 1;
            }
            else if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (l_U1729))
            {
                l_U1729 = 0;
                if (( /* F_GETRANDOMINTINRANGE */ sub_69926( 0, 3 )) == 0)
                {
                     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_54885( ref l_U1730 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 1, l_U1714, "PASSOS", ref l_U1730, 2, 0 );
                     /* PLAY_SINGLE_SPEECH */ sub_55267( "SSTD_PMPL", ref l_U1730, 7, 1 );
                }
            }
            else if ( /* MAL_ISACTINTCOMPLETED */ sub_61132( ref l_U1714, 55, 1 ))
            {
                if (( /* F_GETRANDOMINTINRANGE */ sub_69926( 0, l_U1740 )) > 3)
                {
                     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_54885( ref l_U1730 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 1, l_U1714, "PASSOS", ref l_U1730, 2, 0 );
                     /* PLAY_SINGLE_SPEECH */ sub_55267( "SSTD_PSAE", ref l_U1730, 7, 1 );
                    l_U1740 = 0;
                }
                else
                {
                    l_U1740++;
                }
            };;;
        }
        if (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_70188()))
        {
            if (( /* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ sub_66139( ref l_U1323 )) == 1)
            {
                 /* MAL_WRITESCRIPTLOG */ sub_7336( "F_POI_CAN_PLAY_UNAVALIABLE_MONO(poiManagerBrancoPicture)" );
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_54885( ref l_U1741 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 0,  /* PLAYER_PED_ID */ sub_1265(), "MAX", ref l_U1741, 2, 0 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 1,  /* PLAYER_PED_ID */ sub_1265(), "MAX", ref l_U1741, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_55267( "EXPLORE_ITEM", ref l_U1741, 8, 1 );
            }
            if (( /* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ sub_66139( ref l_U1237 )) == 1)
            {
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_54885( ref l_U1741 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 0,  /* PLAYER_PED_ID */ sub_1265(), "MAX", ref l_U1741, 2, 0 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 1,  /* PLAYER_PED_ID */ sub_1265(), "MAX", ref l_U1741, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_55267( "EXPLORE_ITEM", ref l_U1741, 8, 1 );
            }
        }
         /* F_HANDLE_POI */ sub_13641( ref l_U1323 );
         /* F_HANDLE_POI */ sub_13641( ref l_U1237 );
        if ((( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_70572( ref l_U645 )) + ( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_70572( ref l_U873 ))) > 1)
        {
            if ( /* ISTIMERDONE */ sub_2502( ref l_U1704 ))
            {
                 /* P_PASSOS_ABANDONED_IN_PRAC_START_NIS */ sub_70708();
                 /* WRITESCRIPTLOG */ sub_693( "SP", "eCheckpointState = CP_NIS_PASSOS_ABANDONED", 0 );
                l_U145 = 12;
            }
            else if ((NOT ( /* HASTIMERBEENACTIVATED */ sub_2085( ref l_U1704 ))) AND ( /* MAL_COMPAREPLAYERPOSAXIS */ sub_72141( "X", "Greater", 77.00000000 )))
            {
                 /* P_CREATE_AND_START_TIMER */ sub_61005( ref l_U1704, 8000 );
                if (NOT (IS_ANY_SPEECH_PLAYING( l_U1714 )))
                {
                     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_54885( ref l_U550 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 1, l_U1714, "PASSOS", ref l_U550, 2, 0 );
                     /* PLAY_SINGLE_SPEECH */ sub_55267( "SSTD_DLMB", ref l_U550, 7, 1 );
                }
            }
            else if (( /* MAL_COMPAREPLAYERPOSAXIS */ sub_72141( "X", "Less", 77.00000000 )) AND ( /* HASTIMERBEENACTIVATED */ sub_2085( ref l_U1704 )))
            {
                 /* CREATETIMER */ sub_2219( ref l_U1704, 8000, 1, 0 );
            };;;
        }
        if (NOT l_U1713)
        {
            if ((( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_70572( ref l_U645 )) + ( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_70572( ref l_U873 ))) == 1)
            {
                if (( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_70572( ref l_U645 )) > 0)
                {
                    uVar3 =  /* MAL_ESA_GETFIRSTLIVINGPED */ sub_70786( ref l_U645 );
                }
                else
                {
                    uVar3 =  /* MAL_ESA_GETFIRSTLIVINGPED */ sub_70786( ref l_U873 );
                }
                 /* MAL_SETLOCKEDANDREGISTEREDONPLAYER */ sub_72606( ref uVar3 );
                SET_PED_COMBAT_RANGE_MIN( uVar3, 3 );
                SET_PED_COMBAT_RANGE_MAX( uVar3, 6 );
                 /* MAL_NOUSECOVER */ sub_47696( ref uVar3 );
                l_U1713 = 1;
            }
        }
        if ( /* ISTIMERDONE */ sub_2502( ref l_U1031 ))
        {
             /* P_PLAY_SPEECH_SSTD_PRGB */ sub_72721();
        }
        if (NOT l_U1040)
        {
            if ((( /* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ sub_73147(  /* PLAYER_PED_ID */ sub_1265(), 50.94263000, 70.54079000, -3.04136100 )) < 25) || ((( /* MAL_ESA_GETNUMDEADPEDS */ sub_72998( ref l_U645 )) > 1) || ( /* ISTIMERDONE */ sub_2502( ref l_U1013 ))))
            {
                 /* P_SETDOORMINMAXLIMIT */ sub_53702( ref g_U2996, -90.00000000, 0.00000000 );
                 /* P_SETDOORMINMAXLIMIT */ sub_53702( ref g_U3003, 0.00000000, 90.00000000 );
                 /* P_SETDOORLOCKED */ sub_54058( ref g_U2996, 0 );
                 /* P_SETDOORLOCKED */ sub_54058( ref g_U3003, 0 );
                 /* P_SETDOORAFFECTEDBYBULLETS */ sub_67413( ref g_U3003, 0 );
                 /* P_SETDOORAFFECTEDBYBULLETS */ sub_67413( ref g_U2996, 0 );
                 /* P_SETDOORAUTOCLOSE */ sub_73350( ref g_U3003, 1 );
                 /* P_SETDOORAUTOCLOSE */ sub_73350( ref g_U2996, 1 );
                 /* MAL_ESA_ALERTNESSANDEMOTIONSTATE */ sub_73446( ref l_U873, 3, 1 );
                 /* MAL_ESA_GIVETETHERARRAY */ sub_69161( ref l_U873, ref l_U316, 1 );
                 /* MAL_ESA_SETLOCKEDANDREGISTEREDONPLAYER */ sub_73820( ref l_U873, 0, -1 );
                 /* MAL_ES_MOVETOPOINTTAKECOVERAGAINSTPLAYER */ sub_73986( ref l_U873[0], 56.93676000, 71.23228000, -3.19990400, 1 );
                 /* MAL_ES_MOVETOPOINTTAKECOVERAGAINSTPLAYER */ sub_73986( ref l_U873[1], 53.36208000, 78.48571000, -3.99989600, 1 );
                 /* MAL_ES_MOVETOPOINTTAKECOVERAGAINSTPLAYER */ sub_73986( ref l_U873[2], 55.22354000, 74.26091000, -3.99871000, 1 );
                 /* MAL_ESA_SETLOCKEDANDREGISTEREDONPED */ sub_74303( ref l_U645,  /* PLAYER_PED_ID */ sub_1265(), 0, -1 );
                 /* P_CREATE_AND_START_TIMER */ sub_61005( ref l_U1022, 2000 );
                l_U1040 = 1;
            }
        }
        if ( /* ISTIMERDONE */ sub_2502( ref l_U1022 ))
        {
             /* P_CLOSEDOOR */ sub_74471( ref g_U3003, 0 );
             /* P_CLOSEDOOR */ sub_74471( ref g_U2996, 0 );
        }
        if (l_U1022._fU16)
        {
            ;
        }
        if ((( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_70572( ref l_U645 )) + ( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_70572( ref l_U873 ))) == 1)
        {
             /* MAL_ESA_ASSIGNBULLETCAMTOLASTLIVINGPED */ sub_74665( ref l_U645, 0, 0, 0 );
             /* MAL_ESA_ASSIGNBULLETCAMTOLASTLIVINGPED */ sub_74665( ref l_U873, 0, 0, 0 );
        }
        if (NOT l_U1085)
        {
            if ( /* F_IS_PASSOS_FINISHED_PRACTICE_BLENDOUT */ sub_75196())
            {
                 /* P_PASSOS_PRACTICE_START_SHOOTING */ sub_75320();
                l_U1085 = 1;
            }
        }
        if ((( /* MAL_COMPAREPEDPOSAXIS */ sub_75788( l_U1084, "Y", "Greater", 83.50000000 )) AND (NOT (IS_PED_DEAD( l_U1084 )))) || (((( /* GET_DISTANCE_BETWEEN_PEDS */ sub_12981( l_U1714, l_U1084, 0 )) >= 10) AND (NOT (IS_PED_DEAD( l_U1084 )))) || ((l_U1084 != nil) AND (IS_PED_DEAD( l_U1084 )))))
        {
            if (NOT l_U1086)
            {
                if ((l_U1084 != nil) AND (IS_PED_DEAD( l_U1084 )))
                {
                    if (HAS_PED_BEEN_DAMAGED_BY_PED( l_U1084, l_U1714, 0 ))
                    {
                         /* MAL_WRITESCRIPTLOG */ sub_7336( "PASSOS KILLED A MAN, PUT A GUN AGAINST HIS HEAD, PULLED HIS TRIGGER NOW HE'S DEAD" );
                        l_U1086 = 1;
                    }
                }
            }
            l_U1084 =  /* F_GET_PASSOS_TARGET */ sub_76168();
            if (l_U1084 != nil)
            {
                if ((( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_70572( ref l_U645 )) + ( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_70572( ref l_U873 ))) == 1)
                {
                    if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( l_U1714, 0, 0 ) )) AND (NOT (IS_PED_DEAD( l_U1714 ))))
                    {
                        SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U1714, 0, 0 ), 100 );
                    }
                }
                else if ((NOT l_U1086) || (( /* GET_DISTANCE_BETWEEN_PEDS */ sub_12981( l_U1714, l_U1084, 0 )) < 10))
                {
                    SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U1714, 0, 0 ), 0 );
                }
                else if (l_U1086)
                {
                    SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U1714, 0, 0 ), 100 );
                };;;
                if (NOT (IS_PED_DEAD( l_U1714 )))
                {
                    PED_SET_ACTION_INTENTION( l_U1714, 56, 1000, g_U649 );
                    TASK_SHOOT_AT_PED( l_U1714, l_U1084, -1, -256437761, 1, 0, 0 );
                }
            }
            else
            {
                 /* MAL_WRITESCRIPTLOG */ sub_7336( "Telling Passos to return to idle" );
                 /* MAL_SETACTINT */ sub_76982( l_U1714, 58, 1000 );
                 /* MAL_STANDSTILL */ sub_77054( ref l_U1714 );
            }
        }
        if ((( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_70572( ref l_U645 )) + ( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_70572( ref l_U873 ))) < 1)
        {
            AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1_2", "", 0, 6000, -1, -1082130432, 0 );
             /* MAL_WRITESCRIPTLOG */ sub_7336( "CHANGING MUSIC" );
             /* P_PASSOS_COME_OUT_OF_COVER */ sub_68064();
            l_U145 = 13;
             /* WRITESCRIPTLOG */ sub_693( "SP", "eCheckpointState = CP_PRACTICE_ROOM_BULLET_CAM", 0 );
        }
        break;
        case 12: break;
        case 13:
        if (NOT IS_BULLET_CAMERA_ACTIVE())
        {
             /* WRITESCRIPTLOG */ sub_693( "SP", "eCheckpointState = CP_PRACTICE_ROOM_CS_GONE", 0 );
            l_U145 = 14;
        }
        break;
        case 14:
        if (l_U146)
        {
             /* WRITESCRIPTLOG */ sub_693( "[SA]", "Entering state STATE_PRACTICE_ROOM_CS_GONE", "[STATE]" );
            STREAM_HELPERS_REQUEST_AT_LOC( 46.66368000, 70.31908000, -2.23933200, 0 );
             /* P_START_CHECKPOINT_THREAD */ sub_77541( ref g_U888[3] );
             /* MAL_RECREATEOBJECTWITHNOROTATIONINROOM */ sub_40636( ref g_U3867, g_U2397, l_U1041, ref g_U2532, 1, 0 );
             /* P_ENABLE_POI */ sub_6241( ref l_U342, 1 );
             /* P_LOCK_PRACTICE_ROOM_ENTRANCE */ sub_53645();
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_54885( ref l_U470 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 0,  /* PLAYER_PED_ID */ sub_1265(), "MAX", ref l_U470, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 1, l_U1714, "PASSOS", ref l_U470, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_55267( "SSTD_PRPA", ref l_U470, 8, 1 );
             /* P_CREATE_AND_START_TIMER */ sub_61005( ref l_U580, 3500 );
             /* DISABLETIMER */ sub_77734( ref l_U1066 );
             /* MAL_FINISHACTINT */ sub_61259( ref l_U1714, 50 );
             /* MAL_FINISHACTINT */ sub_61259( ref l_U1714, 56 );
             /* MAL_FINISHACTINT */ sub_61259( ref l_U1714, 58 );
             /* P_SET_POI_AVAILABLE */ sub_23170( ref l_U1323, 1 );
             /* P_SET_POI_AVAILABLE */ sub_23170( ref l_U1237, 1 );
            l_U1700 = 1;
             /* F_GBL_HAS_PLAYER_JUST_ACQUIRED_PAIN_KILLERS */ sub_77841();
        }
        if ( /* F_HANDLE_POI */ sub_13641( ref l_U1323 ))
        {
             /* NIS_PRE_SETUP */ sub_64585( 1, 0, 0, 1 );
             /* MAL_SETPEDVISIBLE */ sub_78079(  /* PLAYER_PED_ID */ sub_1265(), 0 );
            CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAM_WAL_15_F", 1, 66.81000000, 100.01200000, -1.85000000, 180, 0, 0 );
            if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "ssta_VicPic" )))
            {
                 /* KILL_ANY_MISSION_SPEECH */ sub_78287( 0 );
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_54885( ref l_U1419 );
                 /* P_SPEECH_PLAY_MONOLOGUE */ sub_78512( "SSTD_MSFTS", ref l_U1419 );
                FOUND_EXPLORATION_ITEM( "ssta_VicPic" );
                 /* CREATETIMER */ sub_2219( ref l_U1409, 500, 1, 0 );
            }
            else
            {
                 /* CREATETIMER */ sub_2219( ref l_U1409, 4000, 1, 0 );
            }
            l_U1418 = 1;
        }
        if ( /* F_HANDLE_POI */ sub_13641( ref l_U1237 ))
        {
             /* NIS_PRE_SETUP */ sub_64585( 1, 0, 0, 1 );
             /* MAL_SETPEDVISIBLE */ sub_78079(  /* PLAYER_PED_ID */ sub_1265(), 0 );
            CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAM_WAL_15_F", 1, 87.14000000, 67.24000000, -2.73000000, 0, 0, 0 );
            if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "ssta_BloodStn" )))
            {
                 /* KILL_ANY_MISSION_SPEECH */ sub_78287( 0 );
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_54885( ref l_U1419 );
                 /* P_SPEECH_PLAY_MONOLOGUE */ sub_78512( "SSTD_ASWD", ref l_U1419 );
                FOUND_EXPLORATION_ITEM( "ssta_BloodStn" );
                 /* CREATETIMER */ sub_2219( ref l_U1409, 500, 1, 0 );
            }
            else
            {
                 /* CREATETIMER */ sub_2219( ref l_U1409, 4000, 1, 0 );
            }
            l_U1418 = 1;
        }
        if (l_U1418)
        {
            if (NOT ( /* HASTIMERBEENACTIVATED */ sub_2085( ref l_U1409 )))
            {
                if (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_68692( l_U1419 )))
                {
                     /* STARTTIMER */ sub_2369( ref l_U1409 );
                }
            }
            if ( /* ISTIMERDONE */ sub_2502( ref l_U1409 ))
            {
                 /* MAL_SETPEDVISIBLE */ sub_78079(  /* PLAYER_PED_ID */ sub_1265(), 1 );
                CAMERA_ANIMATED_STOP( 0, 0 );
                 /* NIS_POST_SETUP */ sub_65509( 1, 1 );
                l_U1418 = 0;
                 /* P_ENABLE_POI */ sub_6241( ref l_U1323, 1 );
                 /* P_ENABLE_POI */ sub_6241( ref l_U1237, 1 );
            }
        }
         /* MAL_ISDOORCLOSEDBUTNOTLOCKED */ sub_79025( ref g_U3003, 1, 1036831949 );
         /* MAL_ISDOORCLOSEDBUTNOTLOCKED */ sub_79025( ref g_U2996, 1, 1036831949 );
        if (l_U1700)
        {
            if (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_70188()))
            {
                 /* P_HANDLE_AMBIENT_SPEECH */ sub_79334();
            }
        }
        if ((NOT ( /* IS_SCRIPTED_MOVIE_PLAYING */ sub_79644( ref l_U1429 ))) AND ((NOT l_U1418) AND (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_70188()))))
        {
            if ((NOT ( /* F_SHOULD_PASSOS_MOVE_TO_ELEVATOR */ sub_79935())) AND ( /* MAL_ISACTINTCOMPLETED */ sub_61132( ref l_U1714, 38, 1 )))
            {
                 /* WRITESCRIPTLOG */ sub_693( "MF", "Playing Speech: SSTD_PRPG A", 0 );
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_54885( ref l_U490 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 0,  /* PLAYER_PED_ID */ sub_1265(), "MAX", ref l_U490, 2, 0 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 1, l_U1714, "PASSOS", ref l_U490, 2, 0 );
                if (( /* IS_SCRIPTED_MOVIE_PLAYING */ sub_79644( ref l_U1429 )) == 0)
                {
                     /* PLAY_SINGLE_SPEECH */ sub_55267( "SSTD_PRPG", ref l_U490, 8, 1 );
                }
                 /* P_CREATE_AND_START_TIMER */ sub_61005( ref l_U1054, 12000 );
            }
        }
        if (NOT l_U1063)
        {
            if ((NOT ( /* IS_SCRIPTED_MOVIE_PLAYING */ sub_79644( ref l_U1429 ))) AND ((NOT l_U1418) AND (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_70188()))))
            {
                if ( /* ISTIMERDONE */ sub_2502( ref l_U1054 ))
                {
                     /* WRITESCRIPTLOG */ sub_693( "MF", "Playing Speech: SSTD_PRPG B", 0 );
                     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_54885( ref l_U490 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 0,  /* PLAYER_PED_ID */ sub_1265(), "MAX", ref l_U490, 2, 0 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 1, l_U1714, "PASSOS", ref l_U490, 2, 0 );
                    if (( /* IS_SCRIPTED_MOVIE_PLAYING */ sub_79644( ref l_U1429 )) == 0)
                    {
                         /* PLAY_SINGLE_SPEECH */ sub_55267( "SSTD_PRPG", ref l_U490, 8, 1 );
                    }
                     /* P_CREATE_AND_START_TIMER */ sub_61005( ref l_U1054, 12000 );
                }
                else if ((IS_PLAYER_SHOOTDODGING()) AND (NOT l_U1728))
                {
                    l_U1728 = 1;
                }
                else if ((NOT IS_PLAYER_SHOOTDODGING()) AND (l_U1728))
                {
                    l_U1728 = 0;
                    if (( /* F_GETRANDOMINTINRANGE */ sub_69926( 0, 2 )) == 0)
                    {
                         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 1, l_U1714, "PASSOS", ref uVar4, 2, 0 );
                         /* PLAY_SINGLE_SPEECH */ sub_55267( "SSTD_SDNC", ref uVar4, 7, 1 );
                         /* MAL_WRITESCRIPTLOG */ sub_7336( "PLAYING SSTD_SDNC" );
                    }
                }
                else if ((NOT (IS_PED_IN_CROSSHAIR_CYLINDER( l_U1714, 3, 10000, 0, -1082130432 ))) AND ((NOT (IS_BULLET_TIME_ACTIVE( 1 ))) AND ((( /* F_GETRANDOMINTINRANGE */ sub_69926( 0, 2 )) == 0) AND ( /* MAL_HASPLAYERFIRED */ sub_69495( 1 )))))
                {
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 1, l_U1714, "PASSOS", ref uVar14, 2, 0 );
                     /* PLAY_SINGLE_SPEECH */ sub_55267( "SSTD_PSOC", ref uVar14, 7, 1 );
                     /* MAL_WRITESCRIPTLOG */ sub_7336( "PLAYING SSTD_PSOC" );
                };;;;
            }
            else if ((NOT IS_PLAYER_SHOOTDODGING()) AND (l_U1728))
            {
                l_U1728 = 0;
            }
        }
        else if (( /* F_ISPLAYERINTRIGGERBOX */ sub_66661( l_U190 )) AND ((NOT l_U1064) AND (l_U1044)))
        {
            if ((NOT l_U1418) AND (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_68692( l_U500 ))))
            {
                if ( /* ISTIMERDONE */ sub_2502( ref l_U1054 ))
                {
                     /* WRITESCRIPTLOG */ sub_693( "MF", "Playing Speech: SSTD_PRPI", 0 );
                     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_54885( ref l_U500 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 0,  /* PLAYER_PED_ID */ sub_1265(), "MAX", ref l_U500, 2, 0 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 1, l_U1714, "PASSOS", ref l_U500, 2, 0 );
                     /* PLAY_SINGLE_SPEECH */ sub_55267( "SSTD_PRPI", ref l_U500, 8, 1 );
                    l_U1064 = 1;
                }
            }
        }
        if (l_U1044)
        {
            if ((NOT ( /* IS_SCRIPTED_MOVIE_PLAYING */ sub_79644( ref l_U1429 ))) AND ((NOT l_U1418) AND ((NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_70188())) AND (( /* MAL_COMPAREPLAYERPOSAXIS */ sub_72141( "X", "Less", 77.50000000 )) AND ((NOT l_U570) AND (l_U190._fU64))))))
            {
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_54885( ref l_U560 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 0,  /* PLAYER_PED_ID */ sub_1265(), "MAX", ref l_U560, 2, 0 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 1, l_U1714, "PASSOS", ref l_U560, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_55267( "SSTD_NATD", ref l_U560, 8, 1 );
                l_U570 = 1;
                l_U1728 = 0;
            }
            else if ((NOT ( /* IS_SCRIPTED_MOVIE_PLAYING */ sub_79644( ref l_U1429 ))) AND ((NOT l_U1418) AND ((NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_70188())) AND (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_68692( l_U530 ))))))
            {
                if ((l_U1065 < 2) AND (((l_U1054._fU16) || ( /* ISTIMERDONE */ sub_2502( ref l_U1054 ))) AND ( /* F_ISPLAYERINTRIGGERBOX */ sub_66661( l_U190 ))))
                {
                     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_54885( ref l_U530 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 0,  /* PLAYER_PED_ID */ sub_1265(), "MAX", ref l_U530, 2, 0 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 1, l_U1714, "PASSOS", ref l_U530, 2, 0 );
                     /* PLAY_SINGLE_SPEECH */ sub_55267( "SSTD_ATDB", ref l_U530, 8, 1 );
                     /* P_CREATE_AND_START_TIMER */ sub_61005( ref l_U1054, 10000 );
                    l_U1065++;
                }
                else if (( /* F_ISPLAYERINTRIGGERBOX */ sub_66661( l_U190 )) AND (( /* MAL_COMPAREPEDPOSAXIS */ sub_75788( l_U1714, "X", "Greater", 85.30000000 )) AND (NOT ( /* HASTIMERBEENACTIVATED */ sub_2085( ref l_U1054 )))))
                {
                     /* P_CREATE_AND_START_TIMER */ sub_61005( ref l_U1054, 10000 );
                }
                else if ( /* MAL_COMPAREPEDPOSAXIS */ sub_75788( l_U1714, "X", "Greater", 85.30000000 ))
                {
                    if ((IS_PLAYER_SHOOTDODGING()) AND (NOT l_U1728))
                    {
                        l_U1728 = 1;
                    }
                    else if ((NOT IS_PLAYER_SHOOTDODGING()) AND (l_U1728))
                    {
                        l_U1728 = 0;
                        if (( /* F_GETRANDOMINTINRANGE */ sub_69926( 0, 2 )) == 0)
                        {
                             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 1, l_U1714, "PASSOS", ref uVar24, 2, 0 );
                             /* PLAY_SINGLE_SPEECH */ sub_55267( "SSTD_SDNC", ref uVar24, 7, 1 );
                             /* MAL_WRITESCRIPTLOG */ sub_7336( "PLAYING SSTD_SDNC" );
                        }
                    }
                    else if ((NOT (IS_PED_IN_CROSSHAIR_CYLINDER( l_U1714, 3, 10000, 0, -1082130432 ))) AND ((NOT (IS_BULLET_TIME_ACTIVE( 1 ))) AND ((( /* F_GETRANDOMINTINRANGE */ sub_69926( 0, 2 )) == 0) AND ( /* MAL_HASPLAYERFIRED */ sub_69495( 1 )))))
                    {
                         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 1, l_U1714, "PASSOS", ref uVar34, 2, 0 );
                         /* PLAY_SINGLE_SPEECH */ sub_55267( "SSTD_PSOC", ref uVar34, 7, 1 );
                         /* MAL_WRITESCRIPTLOG */ sub_7336( "PLAYING SSTD_PSOC" );
                    };;;
                };;;
            }
             /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_79375( ref l_U190, 0 );
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_79375( ref l_U274, 0 ))
        {
            PLAY_IMAGEFX( "FLICKER_VIBRATE_INTERLACE_01", 4, 0 );
        }
        if ( /* F_SHOULD_PASSOS_MOVE_TO_ELEVATOR */ sub_79935())
        {
             /* P_PASSOS_MOVE_TO_ELEVATOR */ sub_81803();
            l_U1063 = 1;
             /* P_CREATE_AND_START_TIMER */ sub_61005( ref l_U1054, 12000 );
             /* P_CREATE_AND_START_TIMER */ sub_61005( ref l_U1066, GET_RANDOM_INT_IN_RANGE( 8000, 15000 ) );
             /* MAL_SETPRIMARYLOOKAT */ sub_82113( l_U1714,  /* PLAYER_PED_ID */ sub_1265() );
            l_U1118 = 0;
            l_U1119 = 0;
            l_U1120 = 0;
            l_U1130 = 0;
             /* CREATETIMER */ sub_2219( ref l_U1121,  /* F_GETRANDOMINTINRANGE */ sub_69926( 10000, 15000 ), 1, 0 );
        }
        if ( /* ISTIMERDONE */ sub_2502( ref l_U1066 ))
        {
             /* WRITESCRIPTLOG */ sub_693( "SA", "Playing Passos's idle animation.", 0 );
             /* MAL_SETACTINT */ sub_76982( l_U1714, 53, 1000 );
             /* P_CREATE_AND_START_TIMER */ sub_61005( ref l_U1066, GET_RANDOM_INT_IN_RANGE( 8000, 15000 ) );
        }
        if (NOT l_U1703)
        {
            if (( /* MAL_GETACTINTSTATUS */ sub_61171( l_U1714, 51 )) == 3)
            {
                l_U1703 = 1;
                SET_PED_PRIMARY_LOOKAT( l_U1714,  /* PLAYER_PED_ID */ sub_1265() );
                 /* MAL_FINISHACTINT */ sub_61259( ref l_U1714, 33 );
                 /* MAL_FINISHACTINT */ sub_61259( ref l_U1714, 34 );
                 /* MAL_FINISHACTINT */ sub_61259( ref l_U1714, 32 );
                 /* MAL_FINISHACTINT */ sub_61259( ref l_U1714, 35 );
                 /* MAL_FINISHACTINT */ sub_61259( ref l_U1714, 31 );
                 /* MAL_FINISHACTINT */ sub_61259( ref l_U1714, 36 );
                 /* MAL_FINISHACTINT */ sub_61259( ref l_U1714, 47 );
                 /* MAL_FINISHACTINT */ sub_61259( ref l_U1714, 48 );
            }
            else
            {
                fVar44 = 3.00000000;
                if (( /* MAL_COMPAREPEDPOSAXIS */ sub_75788( l_U1714, "X", "Less", 75.50000000 )) AND ( /* MAL_COMPAREPEDPOSAXIS */ sub_75788( l_U1714, "X", "Greater", 72.30000000 )))
                {
                    fVar44 = 6.00000000;
                }
                 /* MAL_HANDLEPASSOSINTERRUPTIONSWITHDIALOGUE */ sub_82918( l_U1714, ref l_U1118, ref l_U1120, ref l_U1119, ref l_U1130, ref l_U1121, 82608, 6, 1069547520, 1065353216 );
            }
        }
        else
        {
            uVar45 = nil;
            if ((( /* MAL_GETACTINTSTATUS */ sub_61171( l_U1714, 52 )) == 3) AND (HAS_BULLET_IMPACTED_IN_AREA( ( /* MAL_GETPEDCOORDS */ sub_69535( l_U1714 )) - (vector( 0, 0, 1)), 3, ref uVar45 )))
            {
                 /* MAL_SETACTINWITHFOCUSPOS */ sub_83090( ref l_U1714,  /* MAL_GETPEDCOORDS */ sub_69535(  /* PLAYER_PED_ID */ sub_1265() ), 58, 1000 );
                if (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_68692( l_U1755 )))
                {
                     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_54885( ref l_U1755 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 1, l_U1714, "PASSOS", ref l_U1755, 2, 0 );
                     /* PLAY_SINGLE_SPEECH */ sub_55267( "SSTD_PSAH", ref l_U1755, 7, 1 );
                }
            }
            else if (NOT l_U1702)
            {
                if ((IS_CONTROL_PRESSED( 0, 6 )) AND ((( /* MAL_GETACTINTSTATUS */ sub_61171( l_U1714, 52 )) == 3) AND (IS_PED_IN_CROSSHAIR_CYLINDER( l_U1714, 1, 10000, 1, -1082130432 ))))
                {
                    l_U1702 = 1;
                     /* MAL_SETACTINWITHFOCUSPOS */ sub_83090( ref l_U1714,  /* MAL_GETPEDCOORDS */ sub_69535(  /* PLAYER_PED_ID */ sub_1265() ), 57, 1000 );
                    if (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_68692( l_U1755 )))
                    {
                         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_54885( ref l_U1755 );
                         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 1, l_U1714, "PASSOS", ref l_U1755, 2, 0 );
                         /* PLAY_SINGLE_SPEECH */ sub_55267( "SSTD_PAAH", ref l_U1755, 7, 1 );
                    }
                }
            }
            else if (NOT (IS_PED_IN_CROSSHAIR_CYLINDER( l_U1714, 1, 10000, 1, -1082130432 )))
            {
                l_U1702 = 0;
            };;;
        }
        if ((NOT IS_BULLET_CAMERA_ACTIVE()) AND ((NOT (IS_PED_DEAD( l_U1714 ))) AND ( /* F_HANDLE_POI */ sub_13641( ref l_U342 ))))
        {
            g_U3870 = 1;
            CLEAR_PED_PRIMARY_LOOKAT( l_U1714 );
            l_U145 = 15;
             /* WRITESCRIPTLOG */ sub_693( "SP", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 15:
        if ((g_U855 == 3) || (NOT HAS_CUTSCENE_FINISHED()))
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U145 = 0;
             /* WRITESCRIPTLOG */ sub_693( "SP", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
    }
    if (l_U145 != iVar2)
    {
        l_U146 = 1;
    }
    else
    {
        l_U146 = 0;
    }
    return;
}

/* UPDATE_PASSOS_HEADTRACKING */ void sub_12896()
{
    if (NOT (IS_PED_DEAD( l_U1714 )))
    {
        if ((( /* GET_DISTANCE_BETWEEN_PEDS */ sub_12981(  /* PLAYER_PED_ID */ sub_1265(), l_U1714, 1 )) < l_U337) AND ((PED_GET_ACTION_INTENTION_STATUS( l_U1714, 51 )) == 3))
        {
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() ))) AND ((NOT (IS_PED_DEAD( l_U1714 ))) AND (NOT l_U336)))
            {
                l_U336 = 1;
                TASK_LOOK_AT_PED( l_U1714,  /* PLAYER_PED_ID */ sub_1265(), -1, 0 );
            }
        }
        else if (l_U336)
        {
            if (NOT (IS_PED_DEAD( l_U1714 )))
            {
                l_U336 = 0;
                TASK_CLEAR_LOOK_AT( l_U1714 );
            }
        }
    }
    return;
}

/* GET_DISTANCE_BETWEEN_PEDS */ void sub_12981(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    }
    if (bParam2)
    {
        return VDIST( uVar5, uVar8 );
        break;
    }
    return VDIST( uVar5._fU0, uVar5._fU4, 0, uVar8._fU0, uVar8._fU4, 0 );
}

/* P_MONITOR_TV */ void sub_13279(int iParam0)
{
    if (DOES_OBJECT_EXIST( iParam0->_fU40 ))
    {
        if ((GET_OBJECT_HEALTH( iParam0->_fU40 )) < 1000.00000000)
        {
            if (iParam0->_fU4)
            {
                 /* CLEANOBJECT */ sub_5759( iParam0->_fU40 );
            }
            if ((ref iParam0->_fU496->_fU0) == 1)
            {
                 /* P_ENABLE_POI */ sub_6241( iParam0 + 496, 0 );
            }
        }
    }
    switch (iParam0->_fU940)
    {
        case 0:
        if (DOES_OBJECT_EXIST( iParam0->_fU40 ))
        {
            if (((GET_OBJECT_HEALTH( iParam0->_fU40 )) == 1000.00000000) AND ((( /* ENEMIES_DETECTED */ sub_13510()) == 0) AND (iParam0->_fU0 == 0)))
            {
                if ((IS_SCRIPT_MOVIE_PLAYING( 2 )) == 0)
                {
                    if ( /* F_HANDLE_POI */ sub_13641( iParam0 + 496 ))
                    {
                        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )))
                        {
                            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1303(), 0, 0 );
                            REENABLE_PLAYER_INPUT( 30 );
                        }
                        iParam0->_fU944 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1265(), 0, 0 );
                        if (iParam0->_fU1072)
                        {
                            if ( /* IS_WEAPON_TWO_HANDED */ sub_15600( iParam0->_fU944 ))
                            {
                                 /* P_PLAYER_UNHOLSTER_FOR_TV */ sub_15909( iParam0 );
                            }
                        }
                        else
                        {
                             /* P_PLAYER_HOLSTER_FOR_TV */ sub_16098();
                        }
                        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )))
                        {
                            if (IS_PED_DUAL_WIELDING(  /* PLAYER_PED_ID */ sub_1265() ))
                            {
                                 /* CREATETIMER */ sub_2219( ref l_U74, 1200, 1, 0 );
                            }
                            else
                            {
                                 /* CREATETIMER */ sub_2219( ref l_U74, 500, 1, 0 );
                            }
                        }
                         /* LOADISEQ */ sub_16266( iParam0->_fU76, 0 );
                         /* STARTTIMER */ sub_2369( ref l_U74 );
                        iParam0->_fU940 = 1;
                    }
                }
            }
        }
        break;
        case 1:
        if (( /* ISTIMERDONE */ sub_2502( ref l_U74 )) AND ( /* ARE_WEAPONS_HOLSTERED */ sub_16582( iParam0 )))
        {
            if (( /* IS_VALID_ISEQ */ sub_16696( iParam0 )) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() ))))
            {
                ISEQ_REGISTER_ENTITY( iParam0->_fU76, "Max",  /* PLAYER_PED_ID */ sub_1265(), 0 );
            }
            if ( /* IS_VALID_ISEQ */ sub_16696( iParam0 ))
            {
                ISEQ_START( iParam0->_fU76 );
            }
             /* P_ENABLE_POI */ sub_6241( iParam0 + 496, 0 );
            iParam0->_fU940 = 2;
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_693( "rw", "waiting for weapon to holster", 0 );
        }
        break;
        case 2:
        if ( /* IS_VALID_ISEQ */ sub_16696( iParam0 ))
        {
            CAMERA_PLAY_ANIMATED( iParam0->_fU100, iParam0->_fU96, 0, iParam0->_fU108, iParam0->_fU120, 0, 0 );
             /* TELEPORTPED */ sub_16938(  /* PLAYER_PED_ID */ sub_1265(), iParam0->_fU80, iParam0->_fU92 );
        }
        PRELOAD_MOVIE( 2, iParam0 + 8, 0,  /* F_ALLOCATE_FROM_CUTSCENE_HEAP */ sub_17015() );
        if ( /* IS_VALID_ISEQ */ sub_16696( iParam0 ))
        {
             /* CREATETIMER */ sub_2219( iParam0 + 840, iParam0->_fU916, 1, 0 );
        }
        else
        {
             /* CREATETIMER */ sub_2219( iParam0 + 840, 0, 1, 0 );
        }
         /* STARTTIMER */ sub_2369( iParam0 + 840 );
        iParam0->_fU940 = 3;
        break;
        case 3:
        if ( /* ISTIMERDONE */ sub_2502( iParam0 + 840 ))
        {
             /* RESETTIMER */ sub_3078( iParam0 + 840 );
            if ( /* IS_VALID_ISEQ */ sub_16696( iParam0 ))
            {
                ISEQ_UNREGISTER_ENTITY( iParam0->_fU76, "Max" );
                ISEQ_TERMINATE( iParam0->_fU76 );
            }
            CAMERA_ANIMATED_STOP( 0, 0 );
            iParam0->_fU124 = CREATE_CAM_WITH_PARAMS( "DEFAULT_SCRIPTED_CAMERA", iParam0->_fU128, iParam0->_fU140, 45, 0 );
            if (iParam0->_fU924 != 0)
            {
                SET_CAM_FAR_DOF( iParam0->_fU124, iParam0->_fU924, iParam0->_fU928 );
                SET_CAM_DOF_STRENGTH( iParam0->_fU124, iParam0->_fU932 );
            }
            SET_CAM_ACTIVE( iParam0->_fU124, 1 );
            RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )))
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1265(), 0 );
                DISPLAY_HUD( 0 );
            }
            if ((iParam0->_fU912 == 0) AND ((DOES_OBJECT_EXIST( iParam0->_fU40 )) == 1))
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU40, iParam0 + 44 );
                FREEZE_OBJECT_POSITION( iParam0->_fU40, 1 );
                SET_OBJECT_COLLISION( iParam0->_fU40, 0 );
            }
             /* P_ENABLE_POI */ sub_6241( iParam0 + 496, 0 );
             /* P_ENABLE_POI */ sub_6241( iParam0 + 152, 1 );
            if ((IS_SCRIPT_MOVIE_PLAYING( 2 )) == 0)
            {
                SET_MOVIE_LOOP( 2, 0 );
                PLAY_MOVIE( 2, 0 );
                AUDIO_ENABLE_TV_MOVIE( 1 );
            }
            if ((NOT ( /* HASTIMERBEENACTIVATED */ sub_2085( iParam0 + 876 ))) AND (( /* IS_VALID_ISEQ */ sub_16696( iParam0 )) AND (iParam0->_fU920 > 0)))
            {
                 /* CREATETIMER */ sub_2219( iParam0 + 876, iParam0->_fU920, 1, 0 );
                 /* STARTTIMER */ sub_2369( iParam0 + 876 );
            }
            STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
            iParam0->_fU940 = 4;
        }
        break;
        case 4:
        if ( /* ISTIMERDONE */ sub_2502( iParam0 + 876 ))
        {
             /* LOADISEQ */ sub_16266( iParam0->_fU76, 0 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )))
            {
                ISEQ_REGISTER_ENTITY( iParam0->_fU76, "Max",  /* PLAYER_PED_ID */ sub_1265(), 0 );
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1265(), 1 );
            }
             /* TELEPORTPED */ sub_16938(  /* PLAYER_PED_ID */ sub_1265(), iParam0->_fU80, iParam0->_fU92 );
            if ( /* IS_VALID_ISEQ */ sub_16696( iParam0 ))
            {
                SET_CAM_ACTIVE( iParam0->_fU124, 0 );
                CAMERA_PLAY_ANIMATED( iParam0->_fU100, iParam0->_fU96, 0, iParam0->_fU108, iParam0->_fU120, 0, 0 );
                ISEQ_START( iParam0->_fU76 );
            }
            CLEAR_PED_PRIMARY_LOOKAT(  /* PLAYER_PED_ID */ sub_1265() );
            SET_COORD_PRIMARY_LOOKAT(  /* PLAYER_PED_ID */ sub_1265(), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ) );
             /* RESETTIMER */ sub_3078( iParam0 + 840 );
             /* CREATETIMER */ sub_2219( iParam0 + 840, iParam0->_fU916, 1, 0 );
             /* STARTTIMER */ sub_2369( iParam0 + 840 );
             /* P_ENABLE_POI */ sub_6241( iParam0 + 496, 0 );
             /* P_ENABLE_POI */ sub_6241( iParam0 + 152, 0 );
        }
        if ( /* ISTIMERDONE */ sub_2502( iParam0 + 840 ))
        {
             /* RESETTIMER */ sub_3078( iParam0 + 840 );
            if ( /* IS_VALID_ISEQ */ sub_16696( iParam0 ))
            {
                ISEQ_UNREGISTER_ENTITY( iParam0->_fU76, "Max" );
                ISEQ_TERMINATE( iParam0->_fU76 );
            }
            if ( /* IS_VALID_ISEQ */ sub_16696( iParam0 ))
            {
                if (IS_ANIMATED_CAMERA_PLAYING())
                {
                    CAMERA_ANIMATED_STOP( 0, 0 );
                }
            }
            if ((DOES_CAM_EXIST( iParam0->_fU124 )) == 0)
            {
                iParam0->_fU124 = CREATE_CAM_WITH_PARAMS( "DEFAULT_SCRIPTED_CAMERA", iParam0->_fU128, iParam0->_fU140, 45, 0 );
                if (iParam0->_fU924 != 0)
                {
                    SET_CAM_FAR_DOF( iParam0->_fU124, iParam0->_fU924, iParam0->_fU928 );
                    SET_CAM_DOF_STRENGTH( iParam0->_fU124, iParam0->_fU932 );
                }
            }
            SET_CAM_ACTIVE( iParam0->_fU124, 1 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1303(), 0, 0 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(  /* PLAYER_PED_ID */ sub_1265(), 1 );
                REENABLE_PLAYER_INPUT( 30 );
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1265(), 0 );
                DISPLAY_HUD( 0 );
            }
            RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
            if ((iParam0->_fU912 == 0) AND ((DOES_OBJECT_EXIST( iParam0->_fU40 )) == 1))
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU40, iParam0 + 44 );
                FREEZE_OBJECT_POSITION( iParam0->_fU40, 1 );
                SET_OBJECT_COLLISION( iParam0->_fU40, 0 );
            }
             /* P_ENABLE_POI */ sub_6241( iParam0 + 152, 1 );
        }
        if (( /* ENEMIES_DETECTED */ sub_13510()) || ((( /* IS_MOVIE_FINISHED */ sub_18426( iParam0 )) AND ((ref iParam0->_fU152->_fU0) == 1)) || ( /* F_HANDLE_POI */ sub_13641( iParam0 + 152 ))))
        {
             /* TELEPORTPED */ sub_16938(  /* PLAYER_PED_ID */ sub_1265(), iParam0->_fU1012, iParam0->_fU1024 );
             /* P_ENABLE_POI */ sub_6241( iParam0 + 152, 0 );
            if ( /* IS_VALID_ISEQ */ sub_16696( iParam0 ))
            {
                 /* CREATETIMER */ sub_2219( iParam0 + 1028, iParam0->_fU1064, 1, 0 );
            }
            else
            {
                 /* CREATETIMER */ sub_2219( iParam0 + 1028, iParam0->_fU1068, 1, 0 );
            }
             /* STARTTIMER */ sub_2369( iParam0 + 1028 );
            if ( /* IS_VALID_ISEQ */ sub_16696( iParam0 ))
            {
                 /* LOADISEQ */ sub_16266( iParam0->_fU1008, 0 );
                ISEQ_REGISTER_ENTITY( iParam0->_fU1008, "Max",  /* PLAYER_PED_ID */ sub_1265(), 0 );
                ISEQ_START( iParam0->_fU1008 );
            }
            iParam0->_fU940 = 5;
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )))
        {
            SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1265(), 1 );
        }
        if ( /* IS_VALID_ISEQ */ sub_16696( iParam0 ))
        {
            CAMERA_PLAY_ANIMATED( iParam0->_fU100, iParam0->_fU104, 0, iParam0->_fU108, iParam0->_fU120, 0, 0 );
            iParam0->_fU1080 = 1;
        }
        SET_CAM_ACTIVE( iParam0->_fU124, 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        iParam0->_fU940 = 6;
        break;
        case 6:
        if ( /* ISTIMERDONE */ sub_2502( iParam0 + 1028 ))
        {
            if ( /* IS_VALID_ISEQ */ sub_16696( iParam0 ))
            {
                ISEQ_UNREGISTER_ENTITY( iParam0->_fU1008, "Max" );
                ISEQ_TERMINATE( iParam0->_fU1008 );
            }
            iParam0->_fU0 = 1;
            DISPLAY_HUD( 1 );
            DESTROY_CAM( iParam0->_fU124 );
            STOP_MOVIE( 2 );
            AUDIO_ENABLE_TV_MOVIE( 0 );
            RELEASE_MOVIE( 2 );
            if (iParam0->_fU912 == 0)
            {
                 /* CLEANOBJECT */ sub_5759( iParam0->_fU40 );
            }
             /* CREATETIMER */ sub_2219( ref l_U83, 750, 1, 0 );
             /* STARTTIMER */ sub_2369( ref l_U83 );
            iParam0->_fU940 = 7;
        }
        break;
        case 7:
        if ( /* ISTIMERDONE */ sub_2502( ref l_U83 ))
        {
            if (iParam0->_fU1072 == 0)
            {
                 /* P_PLAYER_UNHOLSTER_FOR_TV */ sub_15909( iParam0 );
            }
            iParam0->_fU940 = 8;
        }
        break;
        case 8:
        if ( /* HAS_UNHOLSTERED_WEAPON */ sub_19102( iParam0 ))
        {
            DESTROY_CAM( iParam0->_fU124 );
            if ( /* IS_VALID_ISEQ */ sub_16696( iParam0 ))
            {
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU1076, 1065353216, 0 );
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( 0, 1065353216, 0 );
            }
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )))
            {
                CLEAR_PED_PRIMARY_LOOKAT(  /* PLAYER_PED_ID */ sub_1265() );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(  /* PLAYER_PED_ID */ sub_1265(), 0 );
            }
            iParam0->_fU940 = 0;
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_693( "rw", " waiting to reholster weapon ", 0 );
        }
        break;
        default: break;
    }
    if ((iParam0->_fU1080) AND ((CAMERA_ANIMATED_CURRENT_TIME() > ((CAMERA_ANIMATED_LENGTH( iParam0->_fU100, iParam0->_fU104 )) - ( /* GET_TV_FREEZE_VALUE */ sub_19394()))) AND (IS_ANIMATED_CAMERA_PLAYING())))
    {
        iParam0->_fU1080 = 0;
         /* P_RUN_EXIT_CAM */ sub_19467();
    }
    return;
}

/* ENEMIES_DETECTED */ int sub_13510()
{
    float fVar2;

    fVar2 = 50.00000000;
    if (IS_PED_IN_SPHERE_AREA_OF_ANY_ENEMY_PEDS(  /* PLAYER_PED_ID */ sub_1265(), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1265() ), fVar2, 0 ))
    {
        return 1;
    }
    return 0;
}

/* F_HANDLE_POI */ int sub_13641(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1265() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_13742(  /* PLAYER_PED_ID */ sub_1265(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_13742(  /* PLAYER_PED_ID */ sub_1265(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_6699( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND (( /* F_ISACTIONINGAVAILABLE */ sub_6795( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (( /* F_HASACTIONBEENPRESSED */ sub_14605()) == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                             /* P_ENABLE_POI */ sub_6241( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                             /* P_ENABLEPOIGLINT */ sub_6300( iParam0, 0 );
                             /* P_ENABLEPOIINTERACTIONTEXT */ sub_6519( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                             /* P_ENABLEPOIGLINT */ sub_6300( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1265(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                         /* P_ENABLEPOIGLINT */ sub_6300( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_ENABLEPOIINTERACTIONTEXT */ sub_6519( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED(  /* PLAYER_PED_ID */ sub_1265(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )) == 0)
                    {
                        TASK_LOOK_AT_COORD(  /* PLAYER_PED_ID */ sub_1265(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1265(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                     /* P_ENABLEPOIGLINT */ sub_6300( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                     /* P_ENABLEPOIINTERACTIONTEXT */ sub_6519( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_1265() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1265(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                 /* P_ENABLEPOIINTERACTIONTEXT */ sub_6519( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

/* F_ISPEDINTRIGGERBOX */ int sub_13742(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* F_HASACTIONBEENPRESSED */ int sub_14605()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

/* IS_WEAPON_TWO_HANDED */ int sub_15600(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* P_PLAYER_UNHOLSTER_FOR_TV */ void sub_15909(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )))
    {
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1265(), 0 ) ))
        {
            iParam0->_fU944 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1265(), 0 );
        }
        else if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1265(), 1 ) ))
        {
            iParam0->_fU944 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1265(), 1 );
        }
        SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1265(), iParam0->_fU944, 0, iVar3 );
    }
    return;
}

/* P_PLAYER_HOLSTER_FOR_TV */ void sub_16098()
{
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )))
    {
        SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1265(), 0, 0, 0 );
        SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1265(), 0, 1, 0 );
    }
    return;
}

/* LOADISEQ */ void sub_16266(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                DISPLAYF( "[SP]### Waiting for interactive sequence to be loaded: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* ARE_WEAPONS_HOLSTERED */ int sub_16582(int iParam0)
{
    if ((iParam0->_fU1072 == 1) || ((GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1265(), 0, 0 )) != iParam0->_fU944))
    {
        return 1;
    }
    return 0;
}

/* IS_VALID_ISEQ */ int sub_16696(unknown uParam0)
{
    return 1;
    return 0;
}

/* TELEPORTPED */ void sub_16938(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* F_ALLOCATE_FROM_CUTSCENE_HEAP */ int sub_17015()
{
    return 1;
    return 0;
}

/* IS_MOVIE_FINISHED */ int sub_18426(int iParam0)
{
    if ( /* IS_VALID_ISEQ */ sub_16696( iParam0 ))
    {
        if ((GET_SCRIPT_MOVIE_FRAMES_REMAINING( 2 )) < ((iParam0->_fU1068 / 1000) * 30.00000000))
        {
            return 1;
        }
    }
    else if ((IS_PAUSE_MENU_ACTIVE() == 0) AND ((IS_SCRIPT_MOVIE_PLAYING( 2 )) == 0))
    {
        return 1;
    }
    return 0;
}

/* HAS_UNHOLSTERED_WEAPON */ int sub_19102(int iParam0)
{
    if ((iParam0->_fU1072) || ((GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1265(), 0, 0 )) == iParam0->_fU944))
    {
        return 1;
    }
    return 0;
}

/* GET_TV_FREEZE_VALUE */ int sub_19394()
{
    return 300;
    return 1500;
}

/* P_RUN_EXIT_CAM */ void sub_19467()
{
    int iVar2;

    iVar2 = 1500;
    iVar2 = 500;
    CAMERA_FREEZE_FRAME( 1, iVar2, 1500, 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1303(), 1, 0 );
    }
    return;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_19770()
{
     /* WRITESCRIPTLOG */ sub_693( "SP", "P_INITIALIZE_SCRIPT_DATA", 0 );
    l_U146 = 1;
    ENABLE_GRAVITY_WELL( "st_00_fd_simple", ref l_U617, 0, 0, 0, 0 );
     /* SETUP_SCRIPTED_SPEECH */ sub_19894( "SSTDAUD" );
    l_U872 = 0;
    l_U1044 = 0;
    l_U336 = 0;
     /* RESETTIMER */ sub_3078( ref l_U636 );
    l_U1045 = 0;
     /* RESETTIMER */ sub_3078( ref l_U1054 );
    l_U1063 = 0;
    l_U1064 = 0;
    l_U1118 = 0;
    l_U1119 = 0;
    l_U1120 = 0;
    l_U1130 = 0;
    l_U1012 = 0;
    l_U1700 = 0;
     /* CREATETIMER */ sub_2219( ref l_U1022, 1000, 1, 0 );
    l_U1040 = 0;
    l_U1701 = 0;
    l_U1702 = 0;
    l_U1703 = 0;
     /* CREATETIMER */ sub_2219( ref l_U1704, 8000, 1, 0 );
    l_U1713 = 0;
    l_U1085 = 0;
    l_U1086 = 0;
    l_U1418 = 0;
    l_U570 = 0;
    l_U1728 = 0;
    l_U1729 = 0;
    l_U1740 = 0;
    l_U1065 = 0;
    l_U616 = 0;
    return;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_19894(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_19938();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_19938()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* P_SET_STATIC_DATA */ void sub_20267()
{
     /* WRITESCRIPTLOG */ sub_693( "SP", "P_SET_STATIC_DATA", 0 );
     /* P_CREATEPEDSTRUCT */ sub_20363( ref l_U1715, 72.60000000, 93.90000000, -3.90000000, 170.00000000, g_U2376, 26, 6, 0, 0, 0 );
     /* P_CREATETRIGGERBOX */ sub_20552( ref l_U148, "TRIGGER_MAX_COVER_AREA", 70.50000000, 90.74000000, -4.16000000, 3.84000000, 1.17000000, 3.27000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_20552( ref l_U169, "TRIGGER_REMOVE_FLEE_CS", 47.01000000, 71.49000000, -3.29000000, 2.16000000, 5.81000000, 3.01000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_20552( ref l_U190, "TRIGGER_IN_ELEVATOR_ROOM", 86.21000000, 67.49000000, -4.00000000, 15.47000000, 17.47000000, 3.15000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_20552( ref l_U211, "TRIGGER_CS_KILLS_PASSOS_01", 73.33000000, 90.08000000, -4.16000000, 1.30000000, 2.51000000, 3.27000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_20552( ref l_U232, "TRIGGER_CS_KILLS_PASSOS_02", 65.71000000, 90.74000000, -4.16000000, 2.87000000, 1.17000000, 3.27000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_20552( ref l_U253, "TRIGGER_LEFT_PRACTICE", 79.22000000, 74.85000000, -4.00000000, 3.26000000, 12.39000000, 3.15000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_20552( ref l_U274, "TRIGGER_LEFT_PRACTICE_IFX", 79.22000000, 74.85000000, -4.00000000, 3.26000000, 12.39000000, 3.15000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_20552( ref l_U295, "TRIGGER_LOCKED_DOORS", 94.72000000, 67.49000000, -4.06000000, 2.46000000, 3.34000000, 3.33000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_20552( ref l_U428, "TRIG_PRAC_ELEV_BUTTON", 87.11000000, 64.43000000, -3.26000000, 3.00000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_20552( ref l_U449, "TRIG_PRAC_ELEV_BUTTON_CLOSE", 87.74000000, 64.49000000, -3.26000000, 1.50000000, 1.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_20552( ref l_U1132, "gym_speech", 64.19000000, 99.48000000, -4.06000000, 5.54000000, 4.74000000, 2.78000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_20552( ref l_U1174, "gym_medical", 70.61000000, 97.60000000, -4.06000000, 5.82000000, 8.84000000, 2.78000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_20552( ref l_U1153, "gym_strategy", 66.34000000, 65.48000000, -3.38000000, 17.56000000, 6.47000000, 2.78000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_20552( ref l_U1195, "gym_blood", 91.40000000, 67.62000000, -4.03000000, 3.16000000, 4.42000000, 3.79000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_20552( ref l_U1216, "gym_door", 95.38000000, 67.62000000, -4.03000000, 3.16000000, 4.42000000, 3.79000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_21811( ref l_U316[0], "TETHER_PRAC0", 63.41000000, 72.88000000, -4.15000000, 26.19000000, 21.08000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATEPOISTRUCTTRIGGER */ sub_21920( ref l_U342, 1, 88.35000000, 64.48000000, -2.06800000, l_U449, l_U428, 0, 0 );
     /* P_SET_INTERACTIVE_TEXT */ sub_22683( ref l_U342, 30, "POI_ELEVATOR" );
     /* P_CREATEPOISTRUCTCOORD */ sub_22953( ref l_U1237, 2, 94.17157000, 67.52854000, -2.98343000, 94.17157000, 67.52854000, -2.98343000, 94.17157000, 67.52854000, -2.98343000, 1.50000000, 3.00000000, 1, 0 );
     /* P_SET_INTERACTIVE_TEXT */ sub_22683( ref l_U1237, 30, "POI_STADFCBLOOD" );
     /* P_SET_POI_FORCE_WALK */ sub_23115( ref l_U1237, 0 );
     /* P_SET_POI_AVAILABLE */ sub_23170( ref l_U1237, 0 );
     /* P_SET_POI_REUSABLE */ sub_23252( ref l_U1237, 1 );
     /* P_CREATEPOISTRUCTCOORD */ sub_22953( ref l_U1323, 2, 0.00000000, 0.00000000, 0.00000000, 61.30734000, 99.91102000, -2.53000000, 61.30734000, 99.91102000, -2.53000000, 1.50000000, 3.00000000, 1, 0 );
     /* P_SET_POI_FORCE_WALK */ sub_23115( ref l_U1323, 0 );
     /* P_SET_INTERACTIVE_TEXT */ sub_22683( ref l_U1323, 30, "POI_OFFPICTURE" );
     /* P_SET_POI_AVAILABLE */ sub_23170( ref l_U1323, 0 );
     /* P_SET_POI_REUSABLE */ sub_23252( ref l_U1323, 1 );
    l_U1751[0] = CREATE_DYNAMIC_PATH_OBSTRUCTION( 69.57111000, 100.87420000, -3.99989600, 69.57111000, 87.66347000, -3.99989600, 0.10000000 );
    l_U1751[1] = CREATE_DYNAMIC_PATH_OBSTRUCTION( 69.57111000, 87.66347000, -3.99989600, 59.20061000, 87.66347000, -3.99989600, 0.10000000 );
    l_U1751[2] = CREATE_DYNAMIC_PATH_OBSTRUCTION( 59.20061000, 87.66347000, -3.99989600, 59.20061000, 92.56924000, -3.99989600, 0.10000000 );
    return;
}

/* P_CREATEPEDSTRUCT */ void sub_20363(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATETRIGGERBOX */ void sub_20552(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATETETHERBOX */ void sub_21811(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATEPOISTRUCTTRIGGER */ void sub_21920(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47, unknown uParam48)
{
     /* P_CREATEBLANKPOISTRUCT */ sub_21964( iParam0, uParam47 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU80 = 1;
    iParam0->_fU116 = {uParam5};
    iParam0->_fU88 = 1;
    iParam0->_fU216 = {uParam26};
    iParam0->_fU320 = uParam48;
    iParam0->_fU20 = {uParam2};
     /* P_CREATEPOIGLINT */ sub_22355( iParam0 );
    return;
}

/* P_CREATEBLANKPOISTRUCT */ void sub_21964(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

/* P_CREATEPOIGLINT */ void sub_22355(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
     /* P_INITPOIGLINT */ sub_22453( iParam0 );
    return;
}

/* P_INITPOIGLINT */ void sub_22453(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                 /* P_ENABLEPOIGLINT */ sub_6300( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                 /* P_ENABLEPOIGLINT */ sub_6300( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                 /* P_ENABLEPOIGLINT */ sub_6300( iParam0, 1 );
            }
            else
            {
                 /* P_ENABLEPOIGLINT */ sub_6300( iParam0, 0 );
            };;;
        }
        else
        {
             /* P_ENABLEPOIGLINT */ sub_6300( iParam0, 0 );
        }
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_6300( iParam0, 0 );
    }
    return;
}

/* P_SET_INTERACTIVE_TEXT */ void sub_22683(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
     /* P_INITINTERACTIVETEXT */ sub_22739( iParam0 );
    return;
}

/* P_INITINTERACTIVETEXT */ void sub_22739(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

/* P_CREATEPOISTRUCTCOORD */ void sub_22953(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
     /* P_CREATEBLANKPOISTRUCT */ sub_21964( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
     /* P_CREATEPOIGLINT */ sub_22355( iParam0 );
    return;
}

/* P_SET_POI_FORCE_WALK */ void sub_23115(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

/* P_SET_POI_AVAILABLE */ void sub_23170(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
     /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_6699( iParam0 );
    return;
}

/* P_SET_POI_REUSABLE */ void sub_23252(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

/* P_REQUEST_PRACTICEROOM_PERSISTENT_ASSETS */ void sub_23726()
{
     /* WRITESCRIPTLOG */ sub_693( "GA", "P_REQUEST_PRACTICEROOM_PERSISTENT_ASSETS start", 0 );
    ACTION_TREE_FORCE_UNLOAD( "NPC\PLGE.act" );
     /* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ sub_23870( ref l_U128, ref g_U1069 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT_ARRAY */ sub_26792( ref l_U141, ref g_U1214 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_28840( "LEVEL_S_STAD_CP_01", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_28840( "LEVEL_S_STAD_CP_02", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_28840( "LEVEL_S_STAD_PRACT", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_28840( "PAS_INT", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_28840( "EXPL_CAM", ref g_U1354 );
     /* WRITESCRIPTLOG */ sub_693( "GA", "P_REQUEST_PRACTICEROOM_PERSISTENT_ASSETS end", 0 );
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ void sub_23870(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_23943( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT */ void sub_23943(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 =  /* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ sub_24010( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar4 );
            PRINTNL();
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_24268( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Inserting MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ int sub_24010(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_24268( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is loading: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_24268( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                     /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_24268( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_25799( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being removed: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_24268( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_24268( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ void sub_24268(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_24329( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ int sub_24329(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID is active: {} ###", 1, 513, (uParam1^)[I] );
                if ((uParam1^)[I] == iParam0)
                {
                    DISPLAYF( "The THREADID was already requested by this thread!!!", 0 );
                    DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                    (uParam1^)[I] = nil;
                    Result = I;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The THREADID index was requested by another thread!!! {} ###", 1, 513, I );
                }
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is NOT active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

/* P_STREAMREQ_THREADID_RESET */ void sub_25799(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT_ARRAY */ void sub_26792(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_26866( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT */ void sub_26866(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ sub_26920( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_27181( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ int sub_26920(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_27181( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is loading: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_27181( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The WEAPON_TYPE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_27181( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_25799( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being removed: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_27181( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            DISPLAYF( "The WEAPON_TYPE asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_27181( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ void sub_27181(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_24329( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_INSERT */ void sub_28840(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ sub_28892( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ANIM_DICT asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_29144( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ int sub_28892(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_29144( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_29144( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ANIM_DICT asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_29144( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_25799( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_29144( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ANIM_DICT asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ANIM_DICT: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
             /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_29144( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ void sub_29144(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_24329( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_REQUEST_PRACTICEROOM_NONPERSISTENT_ASSETS */ void sub_30880()
{
     /* WRITESCRIPTLOG */ sub_693( "GA", "P_REQUEST_PRACTICEROOM_NONPERSISTENT_ASSETS start", 0 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_31008( -843316873, ref g_U1263 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_31008( 109790724, ref g_U1263 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_31008( -395445998, ref g_U1263 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_31008( -991527869, ref g_U1263 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_31008( 908686940, ref g_U1263 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_31008( -1343439341, ref g_U1263 );
    if ((l_U144) AND (g_U854 != 2))
    {
         /* LOADSEAMLESSCUTSCENE */ sub_33912( "03_02_STAD_concat", 0 );
    }
     /* P_LOAD_AMED_ANIM_DICTS */ sub_34252();
     /* WRITESCRIPTLOG */ sub_693( "GA", "P_REQUEST_PRACTICEROOM_NONPERSISTENT_ASSETS end", 0 );
    return;
}

/* P_STREAMREQ_ISEQ_INSERT */ void sub_31008(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 =  /* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ sub_31069( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar12 );
            PRINTNL();
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar4 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
             /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_31319( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

/* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ int sub_31069(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_31319( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is loading: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_31319( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                        DISPLAYF( "The ISEQ asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_31319( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loading: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_31319( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### Re-requesting ISEQ: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_25799( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_25799( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being removed: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_31319( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar5 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_31319( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ISEQ_THREADID_SET_ID */ void sub_31319(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_24329( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* LOADSEAMLESSCUTSCENE */ void sub_33912(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* P_LOAD_AMED_ANIM_DICTS */ void sub_34252()
{
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_28840( "PLGE_RIFLE_CROUCH", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_28840( "PLGE_PSTL_CROUCH", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_28840( "AMED_RIFLE_CORE", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_28840( "AMED_PSTL_CORE", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_28840( "AMED_RIFLE_CORE_RELOAD", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_28840( "AMED_PSTL_CORE_RELOAD", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_28840( "PLGE_RIFLE_HANDSIG", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_28840( "PLGE_PSTL_HANDSIG", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_28840( "PLGE_PSTL_ACTIONS", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_28840( "PLGE_RIFLE_ACTIONS", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_28840( "AMED_RIFLE_KNEE", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_28840( "AMED_PSTL_KNEE", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_28840( "AMED_PSTL_COVER", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_28840( "AMED_RIFLE_COVER", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_28840( "AMED_RIFLE_REACT", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_28840( "AMED_PSTL_REACT", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_28840( "AMED_RIFLE_COVER_EXIT", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_28840( "AMED_PSTL_COVER_EXIT", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_28840( "AMED_PSTL_FULLBODY", ref g_U1354 );
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_LOADED */ int sub_34990(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be requested: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to load: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be removed: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ int sub_35387(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be requested: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to load: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be removed: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ANIM_DICT_IS_LOADED */ int sub_35789(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be requested: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to load: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be removed: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ISEQ_IS_LOADED */ int sub_36180(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be requested: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to load: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be removed: {} ###", 1, 1281, ref uVar3 );
            return 0;
        };;;
    }
    return 1;
}

/* HAS_SAVEFILE_LOADED */ int sub_36754(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_693( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_8167( uParam0,  /* PLAYER_PED_ID */ sub_1265() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* P_PRACTICE_PLACE_PLACEMENTS */ void sub_37217()
{
     /* WRITESCRIPTLOG */ sub_693( "SP", "P_PRACTICE_PLACE_PLACEMENTS", "###" );
    l_U338 = CREATE_PLACEMENT_ROTATE( -4072149, 67.88000000, 97.08000000, -2.78500000, 0, 0, -2.55000000, 1, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U338, ref g_U2460 );
    l_U341 = CREATE_PLACEMENT_ROTATE( -4072149, 115.27000000, 3.06000000, 3.68500000, 0.00000000, 0.00000000, 187.34000000, 1, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U341, ref g_U2524 );
     /* CLEANOBJECT */ sub_5759( l_U335 );
    l_U335 =  /* CREATEOBJECT */ sub_37491( 2040909830, 61.30734000, 99.91102000, -2.53000000, 0.00000000, 0.00000000, -90.00000000, 0, 0, 0 );
    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U335, ref g_U2460 );
    return;
}

/* CREATEOBJECT */ void sub_37491(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_37616( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* LOADMODEL */ void sub_37616(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_10268( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_PRACTICEROOMCSPRE */ void sub_38063()
{
     /* STAD_ENEMYSTRUCTFILL */ sub_38155( ref l_U645[0], 79.13000000, 70.85000000, -3.19000000, -87.75000000, g_U2532, -1643967787, 619121117, 5, 35, 0, 68019059, 0 );
     /* STAD_ENEMYSTRUCTFILL */ sub_38155( ref l_U645[1], 77.66000000, 71.46000000, -3.19000000, 47.16000000, g_U2532, 609980643, 824031458, 3, 36, 0, 434544317, 0 );
     /* STAD_ENEMYSTRUCTFILL */ sub_38155( ref l_U645[2], 77.10000000, 70.89000000, -3.19000000, 43.10000000, g_U2532, 1470963791, g_U2380, 5, 35, 0, 434544317, 0 );
     /* STAD_ENEMYSTRUCTFILL */ sub_38155( ref l_U645[3], 46.51248000, 70.24899000, -3.19990400, 43.10000000, g_U2556, 1106927700, g_U2380, 5, 15, 0, 68019059, 0 );
     /* STAD_ENEMYSTRUCTFILL */ sub_38155( ref l_U645[4], 46.99508000, 72.02740000, -3.19990400, 43.10000000, g_U2556, 1474623808, g_U2380, 5, 15, 0, 68019059, 0 );
    return;
}

/* STAD_ENEMYSTRUCTFILL */ void sub_38155(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19)
{
     /* MAL_ENEMYSTRUCTFILL */ sub_38231( uParam0, uParam1, uParam4, uParam18, 68019059, 2, g_U3928, uParam15, uParam16, uParam14, uParam19, uParam17, uParam13, uParam5 );
    return;
}

/* MAL_ENEMYSTRUCTFILL */ void sub_38231(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29)
{
    iParam0->_fU56 = {uParam1};
    iParam0->_fU68 = uParam4;
    iParam0->_fU72 = uParam5;
    iParam0->_fU76 = uParam6;
    iParam0->_fU80 = uParam7;
    iParam0->_fU84 = {uParam8};
    iParam0->_fU116 = uParam16;
    iParam0->_fU120 = uParam17;
    iParam0->_fU124 = uParam18;
    iParam0->_fU128 = uParam19;
    iParam0->_fU132 = uParam20;
    iParam0->_fU136 = uParam21;
    iParam0->_fU140 = {uParam22};
    return;
}

/* P_SETUP_PRACTICE_ELEVATOR */ void sub_38672(int iParam0, unknown uParam1)
{
    vector[2] vVar4;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int iVar13;

     /* WRITE_STRING */ sub_10268( "[SP]### P_SETUP_PRACTICE_ELEVATOR ###" );
    array(ref vVar4, 2);
    vVar4[0] = {91.18000000, 62.39000000, -3.39000000};
    vVar4[1] = {91.18000000, 62.39000000, 2.65000000};
    uVar11 = GET_HASH_KEY( "ElevatorRoom" );
    uVar12 = GET_INTERIOR_FROM_NAME( "int_elevator", 0 );
    SET_INTERIOR_ACTIVE( uVar12, 1, 0 );
    LOAD_SCENE_FOR_ROOM_BY_KEY( uVar12, uVar11 );
     /* P_CREATEELEVATORSTRUCTSERVICEDUEL */ sub_38919( ref g_U3706, ref vVar4, 0.00000000, 0.00000000, -90.00000000, g_U2391, g_U2392, g_U2393, 1.00000000 );
    iVar13 = 0;
    if (iParam0 == 1)
    {
        iVar13 = 1;
    }
     /* P_CREATEELEVATOR */ sub_39500( ref g_U3706, iVar13, uParam1 );
    if (iParam0 == 1)
    {
        SET_OBJECT_COORDS( g_U3706._fU232, 91.18000000, 62.39000000, 2.65000000 );
    }
    else
    {
        SET_OBJECT_COORDS( g_U3706._fU232, 91.18000000, 62.39000000, -3.39000000 );
    }
     /* P_ADDELEVATORTOINTERIOR */ sub_40131( ref g_U3706, ref g_U2540 );
     /* P_CLOSE_ELEVATOR_DOORS */ sub_40409( ref g_U3706, 1, 0 );
     /* P_CLOSE_ELEVATOR_DOORS */ sub_40409( ref g_U3706, 1, 1 );
    return;
}

/* P_CREATEELEVATORSTRUCTSERVICEDUEL */ void sub_38919(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
     /* WRITE_STRING */ sub_10268( "[SP]### P_CreateElevatorStructService ###" );
     /* P_CREATEELEVATORSTRUCTSERVICE */ sub_39028( iParam0, uParam1, uParam2, uParam5, uParam6, uParam8 );
    iParam0->_fU288 = 1;
    iParam0->_fU284 = 1;
    iParam0->_fU224 = uParam7;
    iParam0->_fU228 = uParam7;
    return;
}

/* P_CREATEELEVATORSTRUCTSERVICE */ void sub_39028(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
     /* WRITE_STRING */ sub_10268( "[SP]### P_CreateElevatorStructService ###" );
     /* P_CREATEELEVATORSTRUCT */ sub_39134( iParam0, uParam1, uParam2, uParam5, uParam6, uParam6, uParam7 );
    iParam0->_fU288 = 1;
    iParam0->_fU292 = 2.74000000;
    iParam0->_fU296 = 0.05000000;
    return;
}

/* P_CREATEELEVATORSTRUCT */ void sub_39134(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;

     /* WRITE_STRING */ sub_10268( "[SP]### P_CreateElevatorStruct ###" );
    I = 0;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        iParam0->_fU24[I] = {(uParam1^)[I]};
    }
    iParam0->_fU316 = 0;
    iParam0->_fU12 = {uParam2};
    iParam0->_fU212 = uParam5;
    iParam0->_fU216 = uParam6;
    iParam0->_fU220 = uParam7;
    iParam0->_fU284 = 0;
    iParam0->_fU288 = 0;
    iParam0->_fU292 = 0.88000000;
    iParam0->_fU296 = 0.02500000;
    iParam0->_fU300 = 0.00000000;
    iParam0->_fU304 = 0.00000000;
    iParam0->_fU208 = uParam8;
    return;
}

/* P_CREATEELEVATOR */ void sub_39500(int iParam0, unknown uParam1, unknown uParam2)
{
     /* WRITE_STRING */ sub_10268( "[SP]### P_CreateElevator ###" );
    iParam0->_fU0 = {iParam0->_fU24[uParam1]};
     /* CLEANOBJECT */ sub_5759( iParam0->_fU232 );
    iParam0->_fU232 =  /* CREATEOBJECT */ sub_37491( iParam0->_fU212, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
    if ((DOES_OBJECT_EXIST( iParam0->_fU232 )) == 1)
    {
        FREEZE_OBJECT_POSITION( iParam0->_fU232, 1 );
    }
     /* CLEANOBJECT */ sub_5759( iParam0->_fU236 );
    iParam0->_fU236 =  /* CREATEOBJECT */ sub_37491( iParam0->_fU216, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
    if ((DOES_OBJECT_EXIST( iParam0->_fU236 )) == 1)
    {
        FREEZE_OBJECT_POSITION( iParam0->_fU236, 1 );
    }
    if (iParam0->_fU288 == 0)
    {
         /* CLEANOBJECT */ sub_5759( iParam0->_fU240 );
        iParam0->_fU240 =  /* CREATEOBJECT */ sub_37491( iParam0->_fU220, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
        if ((DOES_OBJECT_EXIST( iParam0->_fU240 )) == 1)
        {
            FREEZE_OBJECT_POSITION( iParam0->_fU240, 1 );
        }
    }
    if (iParam0->_fU284 == 1)
    {
         /* CLEANOBJECT */ sub_5759( iParam0->_fU244 );
        iParam0->_fU244 =  /* CREATEOBJECT */ sub_37491( iParam0->_fU224, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
        if ((DOES_OBJECT_EXIST( iParam0->_fU244 )) == 1)
        {
            FREEZE_OBJECT_POSITION( iParam0->_fU244, 1 );
        }
        if (iParam0->_fU288 == 0)
        {
             /* CLEANOBJECT */ sub_5759( iParam0->_fU248 );
            iParam0->_fU248 =  /* CREATEOBJECT */ sub_37491( iParam0->_fU228, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
            if ((DOES_OBJECT_EXIST( iParam0->_fU248 )) == 1)
            {
                FREEZE_OBJECT_POSITION( iParam0->_fU248, 1 );
            }
        }
    }
    return;
}

/* P_ADDELEVATORTOINTERIOR */ void sub_40131(int iParam0, unknown uParam1)
{
     /* WRITE_STRING */ sub_10268( "[SP]### P_AddElevatorToInterior ###" );
    if ((DOES_OBJECT_EXIST( iParam0->_fU232 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU232, uParam1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU236 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU236, uParam1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU240 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU240, uParam1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU244 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU244, uParam1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU248 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU248, uParam1 );
    }
    return;
}

/* P_CLOSE_ELEVATOR_DOORS */ void sub_40409(int iParam0, int iParam1, int iParam2)
{
     /* WRITE_STRING */ sub_10268( "[SP]### P_CLOSE_ELEVATOR_DOORS ###" );
    if (iParam2 == 0)
    {
        if (iParam1 == 1)
        {
            iParam0->_fU308 = 0;
        }
        else if (iParam0->_fU288 == 1)
        {
            ;
        }
        iParam0->_fU308 = 3;;
    }
    else if (iParam1 == 1)
    {
        iParam0->_fU312 = 0;
    }
    else if (iParam0->_fU288 == 1)
    {
        ;
    }
    iParam0->_fU312 = 3;;;
    return;
}

/* MAL_RECREATEOBJECTWITHNOROTATIONINROOM */ void sub_40636(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
     /* MAL_RECREATEOBJECTINROOM */ sub_40706( uParam0, uParam1, uParam2, g_U649, uParam5, uParam6, uParam7 );
    return;
}

/* MAL_RECREATEOBJECTINROOM */ void sub_40706(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
     /* MAL_RECREATEOBJECT */ sub_40759( uParam0, uParam1, uParam2, uParam5, uParam9, uParam10 );
    if (DOES_OBJECT_EXIST( (uParam0^) ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( (uParam0^), uParam8 );
    }
    return;
}

/* MAL_RECREATEOBJECT */ void sub_40759(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
     /* CLEANOBJECT */ sub_5759( (uParam0^) );
    (uParam0^) =  /* CREATEOBJECTNOOFFSET */ sub_40811( uParam1, uParam2, uParam5, 0, uParam9, 0 );
    FREEZE_OBJECT_POSITION( (uParam0^), uParam8 );
    return;
}

/* CREATEOBJECTNOOFFSET */ void sub_40811(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_37616( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* P_SETUP_EDISON */ void sub_41251()
{
     /* WRITESCRIPTLOG */ sub_693( "SP", "P_SETUP_EDISON", "###" );
    if (((IS_PED_DEAD( l_U1714 )) == 1) || ((DOES_PED_EXIST( l_U1714 )) == 0))
    {
        l_U1714 =  /* CREATEPED */ sub_41349( ref l_U1715 );
    }
     /* F_GIVEPEDWEAPON */ sub_10659( l_U1714, 68019059, 25000, 0, 0 );
    if (((IS_PED_DEAD( l_U1714 )) == 0) AND ((DOES_PED_EXIST( l_U1714 )) == 1))
    {
         /* P_CLEAR_PED_HEADTRACKING */ sub_42122( l_U1714 );
        SET_PERSISTENT_PED_VARIATION( l_U1714, "Pass_Stad_Hat" );
        SET_ROOM_FOR_PED_BY_NAME( l_U1714, ref g_U2460 );
        SET_PED_SWEAT( l_U1714, 0.00000000, 0.00000000 );
        SET_PED_HEALTH( l_U1714, GET_PED_MAX_HEALTH( l_U1714 ), 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1714, 1 );
        SET_PED_COMBAT_ATTRIBUTES( l_U1714, 32, 0 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( l_U1714, 0 );
        SET_PED_AS_ONE_SHOT_KILL( l_U1714, 1 );
        SET_PED_GORE_AS_ALLY( l_U1714 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U1714, 1 );
        SET_PED_CAN_INTERACT_WITH_DOORS( l_U1714, 0 );
        SET_PED_CAN_PUSH_PLAYER( l_U1714, 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( l_U1714, 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_CAN_AI_KICK_THROUGH_CORPSES( l_U1714, 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_CONSUMING_AMMO( l_U1714, 0 );
        SET_PED_INVINCIBLE( l_U1714, 0 );
        SET_PED_CAN_INITIATE_BULLET_CAM( l_U1714, 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U1714, 1 );
        SET_PED_VALIDATE_BULLET_CAM_HIT( l_U1714, 0 );
        SET_BULLET_CAM_PREF( l_U1714, "ALL_F_06_FAILSAFE", "ALL_F_06_FAILSAFE", "ALL_F_06_FAILSAFE", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        SET_PED_NAME_DEBUG( l_U1714, "PRACTICE_EDISON!" );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U1714, 1 );
        SET_PED_ACCURACY( l_U1714, 31186664 );
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( l_U1714, 0, 0 ) ))
        {
            SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U1714, 0, 0 ), 0 );
        }
    }
    return;
}

/* CREATEPED */ void sub_41349(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_37616( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_41840( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_41941( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_41840(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_41941(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* P_CLEAR_PED_HEADTRACKING */ void sub_42122(int iParam0)
{
    if (NOT (IS_PED_DEAD( iParam0 )))
    {
        if (iParam0 == ( /* PLAYER_PED_ID */ sub_1265()))
        {
             /* WRITESCRIPTLOG */ sub_693( "[AT]", "Clearing headtracking on Max.", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_693( "[AT]", "Clearing headtracking on non-player ped.", 0 );
        }
        TASK_CLEAR_LOOK_AT( iParam0 );
    }
    else
    {
        SCRIPT_ASSERT( "Passed invalid or dead ped to P_CLEAR_PED_HEADTRACKING!", 0 );
    }
    return;
}

/* P_CREATETVSTRUCT */ void sub_42904()
{
    l_U1429._fU0 = 0;
    StrCopy( ref l_U1429._fU8, "TV_02_16x9_stad", 32 );
    l_U1429._fU40 =  /* CREATEOBJECTNOOFFSET */ sub_40811( -1856433758, 57.55002000, 65.71690000, -1.65285000, 0.00000000, 0.00000000, -90.00000000, 0, 0, 0 );
    l_U1429._fU912 = 1;
    l_U1429._fU44 = {g_U2460};
    l_U1429._fU76 = -991527869;
    l_U1429._fU916 = 1400;
    l_U1429._fU920 = 79500;
    l_U1429._fU920 = 77500;
    l_U1429._fU80 = {58.26000000, 66.24000000, -3.20000000};
    l_U1429._fU92 = 90;
    l_U1429._fU96 = "03_STADIUM_TV_POWER_ON_CAM";
    l_U1429._fU100 = "LEVEL_S_STAD_CP_02";
    l_U1429._fU104 = "03_STADIUM_TV_POWER_OFF_CAM";
    l_U1429._fU108 = {60.64000000, 62.83000000, -1.20000000};
    l_U1429._fU120 = 42.20000000;
    l_U1429._fU128 = {59.81000000, 65.75000000, -1.77000000};
    l_U1429._fU140 = {0.97000000, 0.00000000, 90.33000000};
    l_U1429._fU924 = 2.10000000;
    l_U1429._fU928 = 2.30000000;
    l_U1429._fU948 = -991527869;
    l_U1429._fU952 = {58.26000000, 66.24000000, -3.20000000};
    l_U1429._fU964 = 90;
    l_U1429._fU1004 = 1300;
    l_U1429._fU1008 = -991527869;
    l_U1429._fU1012 = {58.26000000, 66.24000000, -3.20000000};
    l_U1429._fU1024 = 90;
    l_U1429._fU1064 = 2100;
    l_U1429._fU1068 = 1900;
    l_U1429._fU1076 = 13.23316000;
    FREEZE_OBJECT_POSITION( l_U1429._fU40, 1 );
    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1429._fU40, ref l_U1429._fU44 );
     /* P_INIT_TV_POI */ sub_43567( ref l_U1429 );
    return;
}

/* P_INIT_TV_POI */ void sub_43567(int iParam0)
{
    float fVar3;
    float fVar4;

    fVar3 = 1.10000000;
    fVar4 = 1.50000000;
    if (DOES_OBJECT_EXIST( iParam0->_fU40 ))
    {
        SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( iParam0->_fU40, 1 );
    }
     /* P_CREATEPOISTRUCTCOORD */ sub_22953( iParam0 + 152, 2, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), 10.00000000, 10.00000000, 0, 0 );
     /* P_SET_INTERACTIVE_TEXT */ sub_22683( iParam0 + 152, 30, "POI_STOPWATCHTV" );
     /* P_SET_POI_FORCE_WALK */ sub_23115( iParam0 + 152, 0 );
     /* P_CREATEPOISTRUCTCOORD */ sub_22953( iParam0 + 496, 2, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), fVar3, fVar4, 1, 0 );
     /* P_SET_INTERACTIVE_TEXT */ sub_22683( iParam0 + 496, 30, "POI_WATCHTV" );
     /* P_SET_POI_FORCE_WALK */ sub_23115( iParam0 + 496, 0 );
     /* RESETTIMER */ sub_3078( iParam0 + 840 );
     /* RESETTIMER */ sub_3078( iParam0 + 876 );
     /* RESETTIMER */ sub_3078( iParam0 + 968 );
     /* RESETTIMER */ sub_3078( iParam0 + 1028 );
    iParam0->_fU936 = 0;
    iParam0->_fU940 = 0;
    iParam0->_fU1080 = 0;
    return;
}

/* MAL_ENEMYSTRUCTARRAYCREATE */ int sub_43964(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4, boolean bParam5)
{
    int I;

    PRINTSTRING( "[MSWW] ### MAL_EnemyStructArrayCreate starting: " );
     /* WRITE_STRING */ sub_10268( uParam1 );
    if (NOT bParam4)
    {
         /* P_SETUP_AI_GROUP */ sub_44081( uParam2, uParam3, 1 );
        for ( I = 0; I < (uParam0^); I++ )
        {
             /* MAL_ENEMYSTRUCTCREATE */ sub_44491( ref (uParam0^)[I] );
             /* P_QUICK_ADD_PED_TO_GROUP */ sub_46361( (uParam0^)[I]._fU0, uParam2 );
        }
         /* MAL_ESA_GIVEDEBUGNAMES */ sub_46759( uParam0, uParam1 );
    }
    else if ((uParam0^)[0]._fU172 == 0)
    {
         /* P_SETUP_AI_GROUP */ sub_44081( uParam2, uParam3, 1 );
    }
    if ((uParam0^)[0]._fU172 < (uParam0^))
    {
         /* MAL_ENEMYSTRUCTCREATE */ sub_44491( ref (uParam0^)[(uParam0^)[0]._fU172] );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_46361( (uParam0^)[(uParam0^)[0]._fU172]._fU0, uParam2 );
        (uParam0^)[0]._fU172++;
    }
    else
    {
         /* MAL_ESA_GIVEDEBUGNAMES */ sub_46759( uParam0, uParam1 );
        return 1;
    }
    if (bParam5)
    {
         /* MAL_ESA_PROCESSINGFREEZE */ sub_47050( uParam0, 1, 0, -1 );
    }
    return 0;
}

/* P_SETUP_AI_GROUP */ void sub_44081(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* MAL_ENEMYSTRUCTCREATE */ void sub_44491(int iParam0)
{
    unknown uVar3;

     /* MAL_WRITESCRIPTLOG */ sub_7336( "MAL_EnemyStructCreate starting" );
     /* MAL_CREATEPEDADV */ sub_44630( iParam0 + 0, iParam0 + 4, iParam0->_fU56, iParam0->_fU68, iParam0->_fU72, iParam0->_fU80, iParam0->_fU84, iParam0->_fU116, iParam0->_fU120, iParam0->_fU124, 1 );
    if (NOT (ARE_STRINGS_EQUAL( iParam0 + 140, ref g_U652 )))
    {
        PRINTSTRING( "[MSWW] ### MAL_EnemyStructCreate adding ped to room: " );
         /* WRITE_STRING */ sub_10268( iParam0 + 140 );
         /* MAL_SETROOMFORPED */ sub_45712( iParam0 + 0, iParam0 + 140 );
    }
    if (iParam0->_fU128)
    {
         /* MAL_WRITESCRIPTLOG */ sub_7336( "MAL_EnemyStructCreate giving ped backup weapon" );
         /* MAL_GIVEPEDWEAPONINHOLSTER */ sub_45861( iParam0->_fU0, iParam0->_fU76, 25000, 1, 0 );
    }
    if (iParam0->_fU132)
    {
        uVar3 = GET_WEAPON_FROM_HAND( iParam0->_fU0, 0, 0 );
         /* MAL_TOGGLEWEAPONATTACHMENTTOWEAPON */ sub_46087( ref uVar3, 14, 1 );
    }
    if (iParam0->_fU136 != 0)
    {
         /* MAL_GIVEPEDPERSISTANTVARIATIONENUM */ sub_46250( iParam0 + 0, iParam0->_fU136 );
    }
    return iParam0->_fU0;
}

/* MAL_CREATEPEDADV */ void sub_44630(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19)
{
     /* P_CREATEPEDSTRUCT */ sub_20363( uParam1, uParam2, uParam5, uParam18, 7, 3, 2, 0, 0 );
    (uParam0^) =  /* MAL_CREATEPED */ sub_44688( uParam0, uParam1, 1, 1, uParam19 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
    }
     /* MAL_GIVEPEDWEAPON */ sub_44984( (uParam0^), uParam6, 25000, 0, 0 );
     /* MAL_SETTEMPLATEANDRANGES */ sub_45189( uParam0, ref uParam8, uParam16, uParam17, 1 );
     /* MAL_SETPEDCOMBATMOVEMENT */ sub_45520( uParam0, uParam7 );
    return (uParam0^);
}

/* MAL_CREATEPED */ void sub_44688(unknown uParam0, unknown uParam1, boolean bParam2, boolean bParam3, unknown uParam4)
{
     /* CLEANPED */ sub_5669( (uParam0^) );
    (uParam0^) =  /* CREATEPED */ sub_41349( uParam1 );
    if (bParam3)
    {
        while (NOT (DOES_PED_EXIST( (uParam0^) )))
        {
            WAIT( 0 );
             /* MAL_WRITESCRIPTLOG */ sub_7336( "MAL_CreatePed waiting for ped to exist" );
        }
    }
    SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), uParam4 );
     /* MAL_SETPEDCOMBATATTRIBUTES */ sub_44832( uParam0, 32, 0 );
    SET_PED_IGNORE_LOS_CHECKS( (uParam0^), NOT bParam2 );
    SET_PED_EMOTION_STATE( (uParam0^), 1 );
    return (uParam0^);
}

/* MAL_SETPEDCOMBATATTRIBUTES */ void sub_44832(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_ATTRIBUTES( (uParam0^), uParam1, uParam2 );
    }
    return;
}

/* MAL_GIVEPEDWEAPON */ void sub_44984(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    unknown Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                 /* MAL_WRITESCRIPTLOG */ sub_7336( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

/* MAL_SETTEMPLATEANDRANGES */ void sub_45189(unknown uParam0, unknown uParam1, float fParam2, float fParam3, boolean bParam4)
{
     /* MAL_WRITESCRIPTLOG */ sub_7336( "MAL_SetTemplateAndRanges" );
    PRINTSTRING( "[MSWW]### Template Name: " );
     /* WRITE_STRING */ sub_10268( uParam1 );
    PRINTSTRING( "[MSWW]### Min Range: " );
     /* WRITE_FLOAT */ sub_45333( fParam2 );
    PRINTSTRING( "[MSWW]### Max Range: " );
     /* WRITE_FLOAT */ sub_45333( fParam3 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    if (NOT bParam4)
    {
         /* MAL_SETPEDCOMBATATTRIBUTES */ sub_44832( uParam0, 1, 0 );
    }
    return;
}

/* WRITE_FLOAT */ void sub_45333(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* MAL_SETPEDCOMBATMOVEMENT */ void sub_45520(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETROOMFORPED */ void sub_45712(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_ROOM_FOR_PED_BY_NAME( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_GIVEPEDWEAPONINHOLSTER */ void sub_45861(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    int Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
            while (Result == 0)
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
                 /* MAL_WRITESCRIPTLOG */ sub_7336( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

/* MAL_TOGGLEWEAPONATTACHMENTTOWEAPON */ void sub_46087(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (GET_DOES_WEAPON_EXIST( (uParam0^) ))
    {
        if (bParam2)
        {
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
        else
        {
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
    }
    return;
}

/* MAL_GIVEPEDPERSISTANTVARIATIONENUM */ void sub_46250(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PERSISTENT_PED_VARIATION_ENUM( (uParam0^), uParam1 );
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_46361(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_10268( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_44081( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_44081( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* MAL_ESA_GIVEDEBUGNAMES */ void sub_46759(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I]._fU0, ref cVar5 );
        }
    }
    return;
}

/* MAL_ESA_PROCESSINGFREEZE */ void sub_47050(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_PROCESSINGFREEZE */ sub_47127( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_PROCESSINGFREEZE */ void sub_47127(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_FREEZE_PROCESSING( iParam0->_fU0, uParam1 );
    }
    return;
}

/* P_PRACTICEROOMCSPOST */ void sub_47236()
{
    int I;

     /* MAL_ESA_FREEZE */ sub_47276( ref l_U645, 1, 0, -1 );
     /* MAL_ESA_VISIBLE */ sub_47435( ref l_U645, 0, 0, -1 );
     /* MAL_ES_NOUSECOVER */ sub_47662( ref l_U645[1] );
    for ( I = 0; I < l_U645; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U645[I]._fU0 )))
        {
            SET_PED_CAN_INTERACT_WITH_DOORS( l_U645[I]._fU0, 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U645[I]._fU0, 1 );
        }
    }
     /* MAL_REMOVEALLGUNSFROMPED */ sub_47854( ref l_U645[3]._fU0 );
     /* MAL_REMOVEALLGUNSFROMPED */ sub_47854( ref l_U645[4]._fU0 );
    return;
}

/* MAL_ESA_FREEZE */ void sub_47276(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_FREEZE */ sub_47343( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_FREEZE */ void sub_47343(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        FREEZE_PED_POSITION( iParam0->_fU0, uParam1 );
    }
    return;
}

/* MAL_ESA_VISIBLE */ void sub_47435(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_SETPEDVISIBLE */ sub_47503( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_SETPEDVISIBLE */ void sub_47503(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_VISIBLE( iParam0->_fU0, uParam1 );
    }
    else
    {
         /* MAL_WRITESCRIPTLOG */ sub_7336( "MAL_ES_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

/* MAL_ES_NOUSECOVER */ void sub_47662(int iParam0)
{
     /* MAL_NOUSECOVER */ sub_47696( iParam0 + 0 );
    return;
}

/* MAL_NOUSECOVER */ void sub_47696(unknown uParam0)
{
     /* MAL_SETPEDCOMBATATTRIBUTES */ sub_44832( uParam0, 1, 0 );
    return;
}

/* MAL_REMOVEALLGUNSFROMPED */ void sub_47854(unknown uParam0)
{
     /* MAL_WRITESCRIPTLOG */ sub_7336( "MAL_RemoveAllGunsFromPed started" );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
         /* MAL_WRITESCRIPTLOG */ sub_7336( "MAL_RemoveAllGunsFromPed WEAPONHAND_LEFT" );
         /* WRITE_INT */ sub_48007( GET_WEAPON_FROM_HAND( (uParam0^), 1, 0 ) );
        if ((GET_WEAPON_FROM_HAND( (uParam0^), 1, 0 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HAND( (uParam0^), 1, 0 ) );
        }
         /* WRITE_INT */ sub_48007( GET_WEAPON_FROM_HAND( (uParam0^), 1, 0 ) );
         /* MAL_WRITESCRIPTLOG */ sub_7336( "MAL_RemoveAllGunsFromPed WEAPONHAND_RIGHT" );
         /* WRITE_INT */ sub_48007( GET_WEAPON_FROM_HAND( (uParam0^), 0, 0 ) );
        if ((GET_WEAPON_FROM_HAND( (uParam0^), 0, 0 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HAND( (uParam0^), 0, 0 ) );
        }
         /* WRITE_INT */ sub_48007( GET_WEAPON_FROM_HAND( (uParam0^), 0, 0 ) );
         /* MAL_WRITESCRIPTLOG */ sub_7336( "MAL_RemoveAllGunsFromPed WEAPONHOLSTER_PISTOL_LEFT" );
         /* WRITE_INT */ sub_48007( GET_WEAPON_FROM_HOLSTER( (uParam0^), 1 ) );
        if ((GET_WEAPON_FROM_HOLSTER( (uParam0^), 1 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HOLSTER( (uParam0^), 1 ) );
        }
         /* WRITE_INT */ sub_48007( GET_WEAPON_FROM_HOLSTER( (uParam0^), 1 ) );
         /* MAL_WRITESCRIPTLOG */ sub_7336( "MAL_RemoveAllGunsFromPed WEAPONHOLSTER_PISTOL_RIGHT" );
         /* WRITE_INT */ sub_48007( GET_WEAPON_FROM_HOLSTER( (uParam0^), 0 ) );
        if ((GET_WEAPON_FROM_HOLSTER( (uParam0^), 0 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HOLSTER( (uParam0^), 0 ) );
        }
         /* WRITE_INT */ sub_48007( GET_WEAPON_FROM_HOLSTER( (uParam0^), 0 ) );
         /* MAL_WRITESCRIPTLOG */ sub_7336( "MAL_RemoveAllGunsFromPed WEAPONHOLSTER_RIFLE" );
         /* WRITE_INT */ sub_48007( GET_WEAPON_FROM_HOLSTER( (uParam0^), 2 ) );
        if ((GET_WEAPON_FROM_HOLSTER( (uParam0^), 2 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HOLSTER( (uParam0^), 2 ) );
        }
         /* WRITE_INT */ sub_48007( GET_WEAPON_FROM_HOLSTER( (uParam0^), 2 ) );
    }
     /* MAL_WRITESCRIPTLOG */ sub_7336( "MAL_RemoveAllGunsFromPed ended" );
    return;
}

/* WRITE_INT */ void sub_48007(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* P_MEDROOMCUT_PRECUTSCENESETUP */ int sub_49157()
{
     /* P_CLEAR_PED_HEADTRACKING */ sub_42122( l_U1714 );
     /* P_CLEAR_PED_HEADTRACKING */ sub_42122(  /* PLAYER_PED_ID */ sub_1265() );
     /* P_0302_PRESETUP */ sub_49219();
    return 1;
}

/* P_0302_PRESETUP */ void sub_49219()
{
     /* F_GIVEPEDWEAPONTOHOLSTER */ sub_9864( l_U1714, 68019059, 1, 25000, 0 );
    l_U319 =  /* CREATEOBJECT */ sub_37491( 1267966326, l_U320, l_U323, 0, 0, 0 );
    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U319, ref g_U2556 );
    FREEZE_OBJECT_POSITION( l_U319, 1 );
    return;
}

/* P_MEDROOMCUT_REGISTRATION */ void sub_49344()
{
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( -467517074, 37.34900000, 71.69900000, -2.10000000 ), "P_DR_DorMet_Cb_L_H01", 0 );
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( -545157512, 37.34900000, 69.29900000, -2.10000000 ), "P_DR_DorMet_Cb_R_H01", 0 );
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( -393921389, 49.96267000, 71.69955000, -2.10299000 ), "P_DR_DorMet_Aa_L_H", 0 );
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( 290920020, 73.08439000, 93.11200000, -2.89997000 ), "P_DR_Glass_Ab_H", 0 );
    CUTSCENE_OBJECT_OVERRIDE_VISIBILITY( "P_DR_Glass_Ab_H" );
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( g_U3706._fU244, "P_ST_FRTELEDR2", 0 );
    if (NOT (IS_PED_DEAD( l_U645[0]._fU0 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U645[0]._fU0, "G_CS_K_Sold_PR", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U645[0]._fU0, 0, 0 ), "W_PI_PT92_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U645[0]._fU0, l_U645[0]._fU56, l_U645[0]._fU68 );
    }
    if (NOT (IS_PED_DEAD( l_U645[1]._fU0 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U645[1]._fU0, "G_CS_K_Sold_PR^1", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U645[1]._fU0, 0, 0 ), "W_SG_BenM3_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U645[1]._fU0, l_U645[1]._fU56, l_U645[1]._fU68 );
    }
    if (NOT (IS_PED_DEAD( l_U645[2]._fU0 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U645[2]._fU0, "G_CS_K_Sold_PR^2", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U645[2]._fU0, 0, 0 ), "W_SG_BenM3_Aa_H^1", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U645[2]._fU0, l_U645[2]._fU56, l_U645[2]._fU68 );
    }
    if (NOT (IS_PED_DEAD( l_U645[3]._fU0 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U645[3]._fU0, "G_CS_K_Sold_PR^3", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U645[4]._fU0 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U645[4]._fU0, "G_CS_K_Sold_PR^4", 0 );
    }
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )))
    {
        CUTSCENE_REGISTER_ISEQ( -843316873 );
         /* MAL_REGISTERPEDWITHISEQ */ sub_50332(  /* PLAYER_PED_ID */ sub_1265(), -843316873, "03_02_BLEND_MAX" );
        CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_1265(), l_U1046, l_U1049 );
    }
    if (NOT (IS_PED_DEAD( l_U1714 )))
    {
        CUTSCENE_REGISTER_ISEQ( 109790724 );
        ISEQ_REGISTER_ENTITY( 109790724, "s_stad_practice_pas_fi", l_U1714, 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1714, "Pass_heli_pilo", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U1714, l_U1050, l_U1053 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U1714, 0, 0 ), "W_PI_Clt1911_Aa_H^1", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HOLSTER( l_U1714, 1 ), "W_PI_Clt1911_Aa_H", 1 );
    }
    FREEZE_TIME_OF_DAY( 22, 0 );
    SET_CAM_VIEW_MODE( 1 );
     /* CREATETIMER */ sub_2219( ref l_U326, 5000, 1, 0 );
     /* STARTTIMER */ sub_2369( ref l_U326 );
    return;
}

/* MAL_REGISTERPEDWITHISEQ */ void sub_50332(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        ISEQ_REGISTER_ENTITY( uParam1, uParam2, uParam0, 0 );
    }
    return;
}

/* P_MEDROOMCUT_HANDLE */ void sub_50689()
{
    if (l_U1091._fU52)
    {
        AUDIO_MUSIC_REQUEST_ONESHOT( "STADIUM_ONESHOT_11", 0 );
        DISABLE_RESTART_CHECKPOINT( 0 );
    }
    if (NOT l_U1087)
    {
        if (GET_CUTSCENE_TIME_MS() > 68740)
        {
             /* WRITESCRIPTLOG */ sub_693( "SA", "Changing ped variation", "###" );
            APPLY_PLAYER_PRELOAD_VARIATION(  /* PLAYER_PED_ID */ sub_1265(), 1 );
            l_U1087 = 1;
        }
    }
    if (NOT l_U1088)
    {
        if (GET_CUTSCENE_TIME_MS() > 19343)
        {
            l_U1088 = 1;
            AUDIO_MUSIC_SUSPEND( 10000 );
        }
    }
    if (NOT l_U1089)
    {
        if (GET_CUTSCENE_TIME_MS() > 77951)
        {
            l_U1089 = 1;
            AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1", "", 0, 6000, -1, -1082130432, 0 );
        }
    }
    if (NOT l_U1090)
    {
        if (GET_CUTSCENE_TIME_MS() > 106655)
        {
            l_U1090 = 1;
            AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1_3", "", 0, 1000, -1, -1082130432, 0 );
            AUDIO_MUSIC_PLAY_ONESHOT();
        }
    }
    if ( /* ISTIMERDONE */ sub_2502( ref l_U326 ))
    {
         /* WRITESCRIPTLOG */ sub_693( "SA", "Turning storage room lights on.", "###" );
         /* CLEANOBJECT */ sub_5759( l_U319 );
        l_U318 =  /* CREATEOBJECT */ sub_37491( 850656818, l_U320, l_U323, 0, 0, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U318, ref g_U2556 );
        FREEZE_OBJECT_POSITION( l_U318, 1 );
    }
    return;
}

/* P_MEDROOMCUT_POST */ int sub_51225()
{
     /* P_CLOSE_ELEVATOR_DOORS */ sub_40409( ref g_U3706, 1, 0 );
     /* P_HANDLE_ELEVATOR */ sub_51270( ref g_U3706 );
    l_U1045 = 1;
    return 1;
}

/* P_HANDLE_ELEVATOR */ void sub_51270(int iParam0)
{
    int I;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    float fVar8;
    float fVar9;
    float fVar10;
    vector vVar11;
    vector vVar14;

    if (iParam0->_fU316 == 2)
    {
        iParam0->_fU204 = -1;
        I = 0;
        for ( I = 0; I <= 9; I++ )
        {
            if (iParam0->_fU160[I] >= 0)
            {
                iParam0->_fU204 = iParam0->_fU160[I];
                iParam0->_fU160[I] = -1;
                uVar4 = {iParam0->_fU24[iParam0->_fU204] - iParam0->_fU0};
                uVar7 = ABSF( (uVar4._fU0 + uVar4._fU4) + uVar4._fU8 );
                fVar8 = (TIMESTEP() * iParam0->_fU208) * (uVar4._fU0 / uVar7);
                fVar9 = (TIMESTEP() * iParam0->_fU208) * (uVar4._fU4 / uVar7);
                fVar10 = (TIMESTEP() * iParam0->_fU208) * (uVar4._fU8 / uVar7);
                iParam0->_fU148 = {fVar8, fVar9, fVar10};
                iParam0->_fU316 = 1;
                I = 9;
            }
        }
        if (iParam0->_fU204 == -1)
        {
             /* WRITE_STRING */ sub_10268( "[ML] --- ELEVATOR DONE MOVING ---" );
            iParam0->_fU316 = 3;
        }
    }
    if (iParam0->_fU316 == 1)
    {
        iParam0->_fU0 = {iParam0->_fU0 + iParam0->_fU148};
        if ((((ref iParam0->_fU0->_fU8) <= iParam0->_fU24[iParam0->_fU204]._fU8) AND ((ref iParam0->_fU148->_fU8) < 0)) || ((((ref iParam0->_fU0->_fU8) >= iParam0->_fU24[iParam0->_fU204]._fU8) AND ((ref iParam0->_fU148->_fU8) > 0)) || ((((ref iParam0->_fU0->_fU4) <= iParam0->_fU24[iParam0->_fU204]._fU4) AND ((ref iParam0->_fU148->_fU4) < 0)) || ((((ref iParam0->_fU0->_fU4) >= iParam0->_fU24[iParam0->_fU204]._fU4) AND ((ref iParam0->_fU148->_fU4) > 0)) || ((((ref iParam0->_fU0->_fU0) <= iParam0->_fU24[iParam0->_fU204]._fU0) AND ((ref iParam0->_fU148->_fU0) < 0)) || (((ref iParam0->_fU0->_fU0) >= iParam0->_fU24[iParam0->_fU204]._fU0) AND ((ref iParam0->_fU148->_fU0) > 0)))))))
        {
            iParam0->_fU316 = 2;
        }
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU232 )) == 1)
    {
        SET_OBJECT_COORDS( iParam0->_fU232, iParam0->_fU0 );
    }
    if (iParam0->_fU308 == 2)
    {
        iParam0->_fU300 = iParam0->_fU292;
        iParam0->_fU308 = 2;
    }
    else if (iParam0->_fU308 == 0)
    {
        iParam0->_fU300 = 0.00000000;
        iParam0->_fU308 = 0;
    }
    if (iParam0->_fU308 == 1)
    {
        if (iParam0->_fU300 < iParam0->_fU292)
        {
            iParam0->_fU300 += iParam0->_fU296;
        }
        if (iParam0->_fU300 >= iParam0->_fU292)
        {
            iParam0->_fU300 = iParam0->_fU292;
            iParam0->_fU308 = 2;
        }
    }
    else if (iParam0->_fU308 == 3)
    {
        if (iParam0->_fU300 > 0.00000000)
        {
            iParam0->_fU300 -= iParam0->_fU296;
        }
        if (iParam0->_fU300 <= 0.00000000)
        {
            iParam0->_fU300 = 0.00000000;
            iParam0->_fU308 = 0;
        }
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU232 )) == 1)
    {
        vVar11 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU232 )};
    }
    if (iParam0->_fU288 == 0)
    {
        if ((ref iParam0->_fU12->_fU8) == 0.00000000)
        {
            vVar14 = {-iParam0->_fU300, 0.00000000, 0.00000000};
        }
        else if (((ref iParam0->_fU12->_fU8) == -270.00000000) || ((ref iParam0->_fU12->_fU8) == 90.00000000))
        {
            vVar14 = {0.00000000, -iParam0->_fU300, 0.00000000};
        }
        else if (((ref iParam0->_fU12->_fU8) == -180.00000000) || ((ref iParam0->_fU12->_fU8) == 180.00000000))
        {
            vVar14 = {iParam0->_fU300, 0.00000000, 0.00000000};
        }
        else if (((ref iParam0->_fU12->_fU8) == -90.00000000) || ((ref iParam0->_fU12->_fU8) == 270.00000000))
        {
            vVar14 = {0.00000000, iParam0->_fU300, 0.00000000};
        };;;;
    }
    else
    {
        vVar14 = {0.00000000, 0.00000000, iParam0->_fU300};
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU236 )) == 1)
    {
        FREEZE_OBJECT_POSITION( iParam0->_fU236, 0 );
        SET_OBJECT_COORDS( iParam0->_fU236, vVar11 + vVar14 );
        FREEZE_OBJECT_POSITION( iParam0->_fU236, 1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU240 )) == 1)
    {
        FREEZE_OBJECT_POSITION( iParam0->_fU240, 0 );
        SET_OBJECT_COORDS( iParam0->_fU240, vVar11 - vVar14 );
        FREEZE_OBJECT_POSITION( iParam0->_fU240, 1 );
    }
    if (iParam0->_fU284 == 1)
    {
        if (iParam0->_fU312 == 2)
        {
            iParam0->_fU304 = iParam0->_fU292;
            iParam0->_fU312 = 2;
        }
        else if (iParam0->_fU312 == 0)
        {
            iParam0->_fU304 = 0.00000000;
            iParam0->_fU312 = 0;
        }
        if (iParam0->_fU312 == 1)
        {
            if (iParam0->_fU304 < iParam0->_fU292)
            {
                iParam0->_fU304 += iParam0->_fU296;
            }
            if (iParam0->_fU304 >= iParam0->_fU292)
            {
                iParam0->_fU304 = iParam0->_fU292;
                iParam0->_fU312 = 2;
            }
        }
        else if (iParam0->_fU312 == 3)
        {
            if (iParam0->_fU304 > 0.00000000)
            {
                iParam0->_fU304 -= iParam0->_fU296;
            }
            if (iParam0->_fU304 <= 0.00000000)
            {
                iParam0->_fU304 = 0.00000000;
                iParam0->_fU312 = 0;
            }
        }
        if (iParam0->_fU288 == 0)
        {
            if ((ref iParam0->_fU12->_fU8) == 0.00000000)
            {
                vVar14 = {-iParam0->_fU304, 0.00000000, 0.00000000};
            }
            else if (((ref iParam0->_fU12->_fU8) == -270.00000000) || ((ref iParam0->_fU12->_fU8) == 90.00000000))
            {
                vVar14 = {0.00000000, -iParam0->_fU304, 0.00000000};
            }
            else if (((ref iParam0->_fU12->_fU8) == -180.00000000) || ((ref iParam0->_fU12->_fU8) == 180.00000000))
            {
                vVar14 = {iParam0->_fU304, 0.00000000, 0.00000000};
            }
            else if (((ref iParam0->_fU12->_fU8) == -90.00000000) || ((ref iParam0->_fU12->_fU8) == 270.00000000))
            {
                vVar14 = {0.00000000, iParam0->_fU304, 0.00000000};
            };;;;
        }
        else
        {
            vVar14 = {0.00000000, 0.00000000, -iParam0->_fU304};
        }
        if ((DOES_OBJECT_EXIST( iParam0->_fU244 )) == 1)
        {
            FREEZE_OBJECT_POSITION( iParam0->_fU244, 0 );
            SET_OBJECT_COORDS( iParam0->_fU244, vVar11 - vVar14 );
            FREEZE_OBJECT_POSITION( iParam0->_fU244, 1 );
        }
        if ((DOES_OBJECT_EXIST( iParam0->_fU248 )) == 1)
        {
            FREEZE_OBJECT_POSITION( iParam0->_fU248, 0 );
            SET_OBJECT_COORDS( iParam0->_fU248, vVar11 + vVar14 );
            FREEZE_OBJECT_POSITION( iParam0->_fU248, 1 );
        }
    }
    return;
}

/* P_MEDROOMCUT_BLENDOUT_PREPARE */ void sub_53358()
{
     /* CLEANPED */ sub_5669( l_U645[3]._fU0 );
     /* CLEANPED */ sub_5669( l_U645[4]._fU0 );
    if (g_U855 != 2)
    {
        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1303() )) == 0))
        {
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1303(), 1 );
            SET_PLAYER_SPRINT(  /* PLAYER_ID */ sub_1303(), 1 );
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1265(), 0 );
            ENABLE_PED_JUMPING(  /* PLAYER_PED_ID */ sub_1265(), 1 );
            SET_PED_HEALTH(  /* PLAYER_PED_ID */ sub_1265(), GET_PED_MAX_HEALTH(  /* PLAYER_PED_ID */ sub_1265() ), 0 );
            SET_PAYNEKILLER_AMT( 3 );
            SET_ADRENALINE_NOT_ALLOW( 0 );
            SET_PED_EMOTION_STATE(  /* PLAYER_PED_ID */ sub_1265(), 1 );
            SET_PED_EMOTION_STATE(  /* PLAYER_PED_ID */ sub_1265(), 3 );
            REMOVE_ALL_PED_WEAPONS(  /* PLAYER_PED_ID */ sub_1265() );
             /* F_GIVEPEDWEAPON */ sub_10659(  /* PLAYER_PED_ID */ sub_1265(), 68019059, 50, 0, 0 );
        }
    }
    SET_OBJECT_VISIBLE( l_U1131, 1 );
     /* P_LOCK_PRACTICE_ROOM_ENTRANCE */ sub_53645();
     /* CREATETIMER */ sub_2219( ref l_U636, 1000, 1, 0 );
     /* STARTTIMER */ sub_2369( ref l_U636 );
     /* P_START_SP_CHALLENGES */ sub_54245();
     /* P_OPENDOOR */ sub_54415( ref g_U3038, 0, 1, 1065353216 );
    SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( g_U3038._fU0, g_U3038._fU4, 1, -1.00000000 );
    if (NOT (ISEQ_QUERY_STATE( -843316873, 3 )))
    {
         /* MAL_REGISTERPEDWITHISEQ */ sub_50332(  /* PLAYER_PED_ID */ sub_1265(), -843316873, "03_02_BLEND_MAX" );
         /* TELEPORTPED */ sub_16938(  /* PLAYER_PED_ID */ sub_1265(), l_U1046, l_U1049 );
        ISEQ_START( -843316873 );
    }
    if ((NOT (IS_PED_DEAD( l_U1714 ))) AND (NOT (ISEQ_QUERY_STATE( 109790724, 3 ))))
    {
         /* MAL_REGISTERPEDWITHISEQ */ sub_50332( l_U1714, 109790724, "s_stad_practice_pas_fi" );
         /* TELEPORTPED */ sub_16938( l_U1714, l_U1050, l_U1053 );
        ISEQ_START( 109790724 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1714, 0 );
    }
    SET_CAM_VIEW_MODE( 0 );
    CAMERA_PLAY_ANIMATED( "LEVEL_S_STAD_CP_02", "03_02_STADIUM_PT2_CAM", 0, g_U649, 0.00000000, 0, 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_54885( ref l_U480 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 0,  /* PLAYER_PED_ID */ sub_1265(), "MAX", ref l_U480, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 1, l_U1714, "PASSOS", ref l_U480, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_55267( "SSTD_PRPMP", ref l_U480, 8, 1 );
     /* STAD_ENEMYSTRUCTFILL */ sub_38155( ref l_U873[0], 48.24604000, 70.60831000, -3.19990400, 270, g_U2556, 1807965786, g_U2380, 3, 36, 0, 434544317, 0 );
     /* STAD_ENEMYSTRUCTFILL */ sub_38155( ref l_U873[1], 46.58592000, 70.70052000, -3.19990400, 270, g_U2556, 1117855034, g_U2380, 5, 32, 0, 68019059, 0 );
     /* STAD_ENEMYSTRUCTFILL */ sub_38155( ref l_U873[2], 44.45412000, 70.84146000, -3.19990400, 270, g_U2556, -1921057858, g_U2380, 5, 30, 0, 68019059, 0 );
    if (NOT l_U92._fU0)
    {
        g_U855 = 2;
         /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_56413( ref l_U92, g_U855,  /* PLAYER_PED_ID */ sub_1265(), g_U2138[2], g_U2256[2], 0.00000000, 0.00000000, 1 );
    }
    return;
}

/* P_LOCK_PRACTICE_ROOM_ENTRANCE */ void sub_53645()
{
     /* P_SETDOORMINMAXLIMIT */ sub_53702( ref g_U2996, -90.00000000, 0.00000000 );
     /* P_SETDOORMINMAXLIMIT */ sub_53702( ref g_U3003, 0.00000000, 90.00000000 );
     /* P_SETDOORLOCKED */ sub_54058( ref g_U2996, 1 );
     /* P_SETDOORLOCKED */ sub_54058( ref g_U3003, 1 );
    return;
}

/* P_SETDOORMINMAXLIMIT */ void sub_53702(int iParam0, float fParam1, float fParam2)
{
    if (( /* F_DOESDOOREXIST */ sub_53737( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_53821( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        PRINTSTRING( "[SP]### Error: Door fMinLimit greater than fMaxLimit (default min:-81.0 max:81.0) ###" );
        PRINTNL();
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_53737(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_53821(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_SETDOORLOCKED */ void sub_54058(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if (( /* F_DOESDOOREXIST */ sub_53737( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_53821( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

/* P_START_SP_CHALLENGES */ void sub_54245()
{
     /* WRITESCRIPTLOG */ sub_693( "CCB", "P_START_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_693( "CCB", "Starting the Stadium_Practice context...", 0 );
    START_CONTEXT( "Stadium_Practice" );
    return;
}

/* P_OPENDOOR */ void sub_54415(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if (( /* F_DOESDOOREXIST */ sub_53737( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_53821( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_54885(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_54996(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_55267(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_55312( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_55312(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_55399( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_55399(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_55451( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_55969( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_55451(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_55969(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_56413(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_693( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_693( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_11433( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_56704( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_57181( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_57181( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_57441( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_57181( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_57441( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_57441( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_57181( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_57441( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_57441( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_57441( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_57181( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_57441( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_57441( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_57441( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_57441( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_59021( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_693( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_56704(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_8448( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_693( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_693( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_57181(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_57441(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_59021(int iParam0)
{
     /* WRITE_STRING */ sub_10268( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_59109( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_45333( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_45333( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_45333( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_48007( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_48007( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_48007( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_48007( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_48007( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_48007( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_48007( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_48007( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_48007( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_48007( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_48007( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_45333( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_48007( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_48007( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_48007( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_45333( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_59972( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_48007( iParam0->_fU52 );
     /* WRITE_STRING */ sub_10268( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_48007( iParam0->_fU96 );
     /* WRITE_STRING */ sub_10268( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_48007( iParam0->_fU100 );
     /* WRITE_STRING */ sub_10268( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_48007( iParam0->_fU104 );
     /* WRITE_STRING */ sub_10268( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_48007( iParam0->_fU108 );
     /* WRITE_STRING */ sub_10268( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_48007( iParam0->_fU112 );
     /* WRITE_STRING */ sub_10268( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_48007( iParam0->_fU116 );
     /* WRITE_STRING */ sub_10268( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_48007( iParam0->_fU120 );
     /* WRITE_STRING */ sub_10268( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_48007( iParam0->_fU124 );
     /* WRITE_STRING */ sub_10268( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_48007( iParam0->_fU128 );
     /* WRITE_STRING */ sub_10268( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_48007( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_48007( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_48007( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_59109(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_59972(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* F_MEDROOMCUT_BLENDOUT_HANDLE */ int sub_60935()
{
    unknown uVar2;

    if (l_U1091._fU52)
    {
        DO_SCREEN_FADE_IN( 0 );
         /* P_CREATE_AND_START_TIMER */ sub_61005( ref l_U607, 1500 );
    }
    if (NOT l_U1012)
    {
        l_U1012 =  /* MAL_ENEMYSTRUCTARRAYCREATE */ sub_43964( ref l_U873, "PracReinforce", ref l_U1006, 1.00000000, 1, 0 );
    }
    uVar2 =  /* PLAYER_PED_ID */ sub_1265();
    if ( /* MAL_ISACTINTCOMPLETED */ sub_61132( ref uVar2, 58, 1 ))
    {
         /* MAL_WRITESCRIPTLOG */ sub_7336( "SNAPPING PLAYER INTO COVER" );
         /* MAL_WRITESTRINGANDVECTOR */ sub_61413( "Player's pre-cover pos", "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1265() ) );
         /* MAL_WRITESTRINGANDFLOAT */ sub_61544( "Player's pre-cover heading", GET_PED_HEADING(  /* PLAYER_PED_ID */ sub_1265() ) );
        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1303() )) == 0))
        {
            SNAP_PLAYER_TO_COVERPOINT(  /* PLAYER_ID */ sub_1303(), "GenCover", "1B8362E3_F9EF6764_Corner1", 1 );
        }
    }
    if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_STAD_CP_02", "03_02_STADIUM_PT2_CAM" )) - 10))
    {
         /* MAL_WRITESTRINGANDVECTOR */ sub_61413( "Player's post-cover pos", "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1265() ) );
         /* MAL_WRITESTRINGANDFLOAT */ sub_61544( "Player's post-cover heading", GET_PED_HEADING(  /* PLAYER_PED_ID */ sub_1265() ) );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( -86.76362000, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( -5.46892500, 1065353216, 0 );
        CAMERA_FREEZE_FRAME( 1, 750, 0, 0 );
        AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1_2_3", "", 0, 5000, -1, -1082130432, 0 );
        return 1;
    }
    if (NOT l_U1701)
    {
        if (CAMERA_ANIMATED_CURRENT_TIME() >= 5219)
        {
             /* MAL_PEDPLAYERACTIONTREENODE */ sub_62089( l_U1714, "/Global/PAS_F_TO_G/PAS_F_TO_G_SEQ/PAS_AT_G/pas_in_cover_g_look_around" );
             /* TELEPORTPED */ sub_16938( l_U1714, 66.63642000, 90.86852000, -4.01000000, 180.00000000 );
            l_U1701 = 1;
             /* MAL_ESA_FREEZE */ sub_47276( ref l_U645, 0, 0, -1 );
             /* MAL_ESA_PROCESSINGFREEZE */ sub_47050( ref l_U645, 0, 0, -1 );
             /* MAL_ESA_VISIBLE */ sub_47435( ref l_U645, 1, 0, -1 );
            if (NOT (ISEQ_QUERY_STATE( -395445998, 3 )))
            {
                 /* MAL_ESA_TELEPORTTOSPAWN */ sub_62262( ref l_U645, 0, -1 );
                 /* MAL_REGISTERPEDWITHISEQ */ sub_50332( l_U645[0]._fU0, -395445998, "CS_PRAC_ROOM_GMED1" );
                 /* MAL_REGISTERPEDWITHISEQ */ sub_50332( l_U645[1]._fU0, -395445998, "CS_PRAC_ROOM_GMED2" );
                 /* MAL_REGISTERPEDWITHISEQ */ sub_50332( l_U645[2]._fU0, -395445998, "CS_PRAC_ROOM_GMED3" );
                ISEQ_START( -395445998 );
            }
            if (((IS_PED_DEAD( l_U645[0]._fU0 )) == 0) AND ((DOES_PED_EXIST( l_U645[0]._fU0 )) == 1))
            {
                TASK_GO_STRAIGHT_TO_COORD( l_U645[0]._fU0, 42.97786000, 70.68591000, -3.19992800, 3, -1 );
            }
            if (((IS_PED_DEAD( l_U645[1]._fU0 )) == 0) AND ((DOES_PED_EXIST( l_U645[1]._fU0 )) == 1))
            {
                TASK_GO_STRAIGHT_TO_COORD( l_U645[1]._fU0, 42.97786000, 70.68591000, -3.19992800, 3, -1 );
            }
            if (((IS_PED_DEAD( l_U645[2]._fU0 )) == 0) AND ((DOES_PED_EXIST( l_U645[2]._fU0 )) == 1))
            {
                TASK_GO_STRAIGHT_TO_COORD( l_U645[2]._fU0, 42.97786000, 70.68591000, -3.19992800, 3, -1 );
            }
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_54885( ref l_U510 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 0,  /* PLAYER_PED_ID */ sub_1265(), "MAX", ref l_U510, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 1, l_U1714, "PASSOS", ref l_U510, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 2, l_U645[0]._fU0, "M3_CS_09_MUS", ref l_U510, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 3, l_U645[1]._fU0, "M3_CS_10_AVG", ref l_U510, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_55267( "SSTD_PRGA", ref l_U510, 8, 1 );
        }
    }
    return 0;
}

/* P_CREATE_AND_START_TIMER */ void sub_61005(unknown uParam0, unknown uParam1)
{
     /* CREATETIMER */ sub_2219( uParam0, uParam1, 1, 0 );
     /* STARTTIMER */ sub_2369( uParam0 );
    return;
}

/* MAL_ISACTINTCOMPLETED */ int sub_61132(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (( /* MAL_GETACTINTSTATUS */ sub_61171( (uParam0^), uParam1 )) == 1)
    {
        if (bParam2)
        {
             /* MAL_FINISHACTINT */ sub_61259( uParam0, uParam1 );
        }
        return 1;
    }
    return 0;
}

/* MAL_GETACTINTSTATUS */ int sub_61171(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 );
    }
    return 0;
}

/* MAL_FINISHACTINT */ void sub_61259(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_WRITESTRINGANDVECTOR */ void sub_61413(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    DISPLAYF( "[MSWW] ### {0}: {1} ###", 2, 1537, uParam0, 1027, uParam1 );
    return;
}

/* MAL_WRITESTRINGANDFLOAT */ void sub_61544(unknown uParam0, unknown uParam1)
{
    DISPLAYF( "[MSWW] ### {0}: {1} ###", 2, 1537, uParam0, 769, uParam1 );
    return;
}

/* MAL_PEDPLAYERACTIONTREENODE */ void sub_62089(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_ACTION_TREE_PLAY_NODE( uParam0, uParam1 );
    }
    return;
}

/* MAL_ESA_TELEPORTTOSPAWN */ void sub_62262(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
         /* MAL_ES_TELEPORTTOSPAWN */ sub_62340( (uParam0^)[I] );
    }
    return;
}

/* MAL_ES_TELEPORTTOSPAWN */ void sub_62340(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43)
{
     /* MAL_ES_TELEPORT */ sub_62393( uParam0, uParam0._fU56, uParam0._fU68 );
    return;
}

/* MAL_ES_TELEPORT */ void sub_62393(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47)
{
    if (NOT (IS_PED_DEAD( uParam0._fU0 )))
    {
        SET_PED_COORDS( uParam0._fU0, uParam44, 1 );
        SET_PED_HEADING( uParam0._fU0, uParam47 );
    }
    return;
}

/* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ void sub_63076(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
     /* WRITESCRIPTLOG */ sub_693( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return  /* CUTSYS_PRIVATE_CREATECUTSCENE */ sub_63300( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 63197, 63247, uParam8 );
}

/* CUTSYS_DEFAULT_PREPAREBLENDIN */ void sub_63197()
{
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDIN */ int sub_63247()
{
    return 1;
}

/* CUTSYS_PRIVATE_CREATECUTSCENE */ void sub_63300(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

/* CUTSYS_HANDLECUTSCENE */ void sub_63694(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
             /* WRITESCRIPTLOG */ sub_693( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
             /* WRITESCRIPTLOG */ sub_693( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                 /* WRITESCRIPTLOG */ sub_693( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
             /* WRITESCRIPTLOG */ sub_693( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
             /* WRITESCRIPTLOG */ sub_693( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
             /* WRITESCRIPTLOG */ sub_693( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
             /* LOADSEAMLESSCUTSCENE */ sub_33912( iParam0->_fU0, 0 );
             /* WRITESCRIPTLOG */ sub_693( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
             /* NIS_PRE_SETUP */ sub_64585( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
         /* NIS_PRE_SETUP */ sub_64585( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
         /* WRITESCRIPTLOG */ sub_693( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                 /* P_SET_PLAYER_WEAPONS_VISIBLE */ sub_65129( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
         /* NIS_PRE_SETUP */ sub_64585( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
             /* NIS_POST_SETUP */ sub_65509( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
         /* NIS_POST_SETUP */ sub_65509( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

/* NIS_PRE_SETUP */ void sub_64585(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1303(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1265(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1265() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1265(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* P_SET_PLAYER_WEAPONS_VISIBLE */ void sub_65129(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1265(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1265(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1265(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1265(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1265(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

/* NIS_POST_SETUP */ void sub_65509(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1303(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1265(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_65607();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_65607()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1265(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1265(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1265(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1265(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ int sub_66139(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND (( /* F_IS_POI_AVAILABLE */ sub_66185( iParam0 )) == 0)))
    {
        if ((( /* F_HASACTIONBEENPRESSED */ sub_14605()) == 1) AND (((IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_1265() )) == 0) AND (((IS_PED_GETTING_UP(  /* PLAYER_PED_ID */ sub_1265() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP(  /* PLAYER_PED_ID */ sub_1265() )) == 0) AND (((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_1265() )) == 0) AND (((IS_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1265() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

/* F_IS_POI_AVAILABLE */ void sub_66185(int iParam0)
{
    return iParam0->_fU56;
}

/* F_SHOULD_PRACTICE_CS_ENGAGE */ int sub_66591()
{
    if (l_U872 == 0)
    {
        if (l_U1045 == 1)
        {
            if (( /* ISTIMERDONE */ sub_2502( ref l_U1075 )) || (((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_1265() )) == 0) || ((IS_CONTROL_JUST_PRESSED( 0, 4 )) || (( /* F_ISPLAYERINTRIGGERBOX */ sub_66661( l_U148 )) == 0))))
            {
                 /* CREATETIMER */ sub_2219( ref l_U1075, 1000, 1, 0 );
                 /* P_CREATE_AND_START_TIMER */ sub_61005( ref l_U571, 100 );
                 /* P_CLEAR_PED_HEADTRACKING */ sub_42122(  /* PLAYER_PED_ID */ sub_1265() );
                l_U872 = 1;
                return 1;
            }
            else if ((NOT l_U1075._fU20) AND (IS_CONTROL_JUST_PRESSED( 0, 6 )))
            {
                 /* P_CREATE_AND_START_TIMER */ sub_61005( ref l_U1075, 1000 );
            }
        }
    }
    return 0;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_66661(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_13742(  /* PLAYER_PED_ID */ sub_1265(), uParam0 );
}

/* F_CHECK_PRACTICE_CS_LEAVING */ int sub_66986()
{
    int I;

    for ( I = 0; I <= (l_U645 - 1); I++ )
    {
        if ((IS_PED_DEAD( l_U645[I]._fU0 )) == 0)
        {
            if ((PED_GET_ACTION_INTENTION_STATUS( l_U645[I]._fU0, 52 )) == 3)
            {
                return 1;
            }
        }
    }
    return 0;
}

/* P_PRAC_START_CS_LEAVE_ROOM */ void sub_67193()
{
     /* WRITESCRIPTLOG */ sub_693( "GA", "P_PRAC_CS_LEAVE_ROOM start", 0 );
     /* P_UNLOCK_PRACTICE_ROOM_ENTRANCE */ sub_67272();
    STREAM_HELPERS_REQUEST_AT_LOC( 46.66368000, 70.31908000, -2.23933200, 1 );
     /* P_SETDOORAFFECTEDBYBULLETS */ sub_67413( ref g_U3003, 0 );
     /* P_SETDOORAFFECTEDBYBULLETS */ sub_67413( ref g_U2996, 0 );
     /* MAL_GOTOCOORDVIANAVMESH */ sub_67548( ref l_U645[0]._fU0, 42.97786000, 70.68591000, -3.19992800, 1, 2, 1 );
     /* MAL_GOTOCOORDVIANAVMESH */ sub_67548( ref l_U645[1]._fU0, 42.97786000, 70.68591000, -3.19992800, 1, 2, 1 );
     /* MAL_GOTOCOORDVIANAVMESH */ sub_67548( ref l_U645[2]._fU0, 42.97786000, 70.68591000, -3.19992800, 1, 2, 1 );
     /* MAL_ESA_CLEAN */ sub_5932( ref l_U873 );
    CAMERA_PLAY_ANIMATED( "LEVEL_S_STAD_CP_02", "VIG_18_STADIUM_CAM", 1, 56.96000000, 76.15000000, -1.80000000, 270, 0, 0 );
     /* P_CLEAR_PED_HEADTRACKING */ sub_42122(  /* PLAYER_PED_ID */ sub_1265() );
     /* WRITESCRIPTLOG */ sub_693( "GA", "P_PRAC_CS_LEAVE_ROOM end", 0 );
    return;
}

/* P_UNLOCK_PRACTICE_ROOM_ENTRANCE */ void sub_67272()
{
     /* P_SETDOORLOCKED */ sub_54058( ref g_U2996, 0 );
     /* P_SETDOORLOCKED */ sub_54058( ref g_U3003, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_53702( ref g_U2996, -90.00000000, 90.00000000 );
     /* P_SETDOORMINMAXLIMIT */ sub_53702( ref g_U3003, -90.00000000, 90.00000000 );
    return;
}

/* P_SETDOORAFFECTEDBYBULLETS */ void sub_67413(int iParam0, unknown uParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_53737( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_53821( iParam0 );
    }
    DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( iParam0->_fU0, iParam0->_fU4 ), uParam1 );
    return;
}

/* MAL_GOTOCOORDVIANAVMESH */ void sub_67548(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    unknown uVar9;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        OPEN_SEQUENCE_TASK( ref uVar9 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, uParam6 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uParam1, uParam5, -1, 1048576000, 0, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, uParam4 );
        TASK_STAND_STILL( 0, -1 );
        CLOSE_SEQUENCE_TASK( uVar9 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar9 );
        CLEAR_SEQUENCE_TASK( uVar9 );
    }
    return;
}

/* P_PASSOS_COME_OUT_OF_COVER */ void sub_68064()
{
     /* WRITESCRIPTLOG */ sub_693( "GA", "P_PASSOS_COME_OUT_OF_COVER start", 0 );
    if (NOT (IS_PED_DEAD( l_U1714 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1714, 1 );
         /* TELEPORTPED */ sub_16938( l_U1714, l_U633, 180.00000000 );
        PED_SET_ACTION_INTENTION( l_U1714, 47, 10000, g_U649 );
    }
     /* WRITESCRIPTLOG */ sub_693( "GA", "P_PASSOS_COME_OUT_OF_COVER end", 0 );
    return;
}

/* P_START_PRACTICE_ROOM_FIGHT */ void sub_68549()
{
     /* WRITESCRIPTLOG */ sub_693( "MF", "P_START_PRACTICE_ROOM_FIGHT - START", 0 );
    STREAM_HELPERS_REQUEST_AT_LOC( 46.66368000, 70.31908000, -2.23933200, 1 );
     /* P_CREATE_AND_START_TIMER */ sub_61005( ref l_U1013, 8000 );
     /* P_CREATE_AND_START_TIMER */ sub_61005( ref l_U1031, 1000 );
    if (( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_68692( l_U510 )) == 1)
    {
         /* KILL_SPEECH */ sub_68922( ref l_U510, 0 );
    }
     /* WRITESCRIPTLOG */ sub_693( "MF", "P_START_PRACTICE_ROOM_FIGHT - END", 0 );
    return;
}

/* IS_SPEECH_CURRENTLY_PLAYING */ int sub_68692(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_68735( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

/* IS_SCRIPT_SPEECH_STRUCT_VALID */ boolean sub_68735(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

/* KILL_SPEECH */ void sub_68922(int iParam0, unknown uParam1)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_68735( (iParam0^) )))
    {
        ;
    }
    else
    {
        PRINTSTRING( "\n KILL SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
        {
            if (iParam0->_fU8 == g_U6[iParam0->_fU4])
            {
                STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
            }
        }
    }
    return;
}

/* MAL_ESA_GIVETETHERARRAY */ void sub_69161(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
         /* MAL_ESA_GIVETETHER */ sub_69226( uParam0, (uParam1^)[I], uParam2, 0, -1 );
    }
    return;
}

/* MAL_ESA_GIVETETHER */ void sub_69226(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    int I;

    if (iParam4 == -1)
    {
        iParam4 = (uParam0^) - 1;
    }
    for ( I = uParam3; I <= iParam4; I++ )
    {
         /* MAL_ES_GIVETETHER */ sub_69299( ref (uParam0^)[I], uParam1, uParam2 );
    }
    return;
}

/* MAL_ES_GIVETETHER */ void sub_69299(int iParam0, unknown uParam1, unknown uParam2)
{
     /* P_TETHERPED */ sub_69337( ref uParam1, iParam0->_fU0, uParam2 );
    return;
}

/* P_TETHERPED */ void sub_69337(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

/* MAL_HASPLAYERFIRED */ int sub_69495(unknown uParam0)
{
    int iVar3;

    iVar3 = nil;
    if (HAS_SHOT_BEEN_FIRED_IN_AREA(  /* MAL_GETPEDCOORDS */ sub_69535(  /* PLAYER_PED_ID */ sub_1265() ), 2.00000000, uParam0, ref iVar3 ))
    {
        if (iVar3 == ( /* PLAYER_PED_ID */ sub_1265()))
        {
             /* MAL_WRITESCRIPTLOG */ sub_7336( "MAL_HasPlayerFired RETURNING TRUE" );
            return 1;
        }
    }
    return 0;
}

/* MAL_GETPEDCOORDS */ vector sub_69535(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return "[dynamic result, ret vals = 3]";
        break;
        GET_PED_COORDS( uParam0 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        break;
    }
    return vector( 0, 0, 0);
}

/* F_GETRANDOMINTINRANGE */ void sub_69926(unknown uParam0, int iParam1)
{
    int Result;

    Result = GET_RANDOM_INT_IN_RANGE( uParam0, iParam1 + 1 );
    if (Result > iParam1)
    {
        Result = iParam1;
    }
    return Result;
}

/* IS_ANY_SPEECH_CURRENTLY_PLAYING */ void sub_70188()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

/* MAL_ESA_GETNUMLIVINGPEDS */ void sub_70572(unknown uParam0)
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            Result++;
        }
    }
    return Result;
}

/* P_PASSOS_ABANDONED_IN_PRAC_START_NIS */ void sub_70708()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;

     /* NIS_PRE_SETUP */ sub_64585( 1, 0, 0, 1 );
    if (( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_70572( ref l_U645 )) > 0)
    {
        uVar2 =  /* MAL_ESA_GETFIRSTLIVINGPED */ sub_70786( ref l_U645 );
    }
    else
    {
        uVar2 =  /* MAL_ESA_GETFIRSTLIVINGPED */ sub_70786( ref l_U873 );
    }
    CLEAR_PED_TASKS_IMMEDIATELY( uVar2 );
    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( uVar2, 1 );
     /* MAL_TELEPORTPED */ sub_70958( uVar2, 74.04474000, 90.37959000, -3.99989600, 90 );
     /* MAL_SETPEDCONSUMINGAMMO */ sub_71035( ref uVar2, 0 );
    RELOAD_PED_WEAPONS( uVar2 );
    SET_PED_PERFECT_ACCURACY_OVERRIDE( uVar2, 1 );
     /* MAL_SETLOCKEDANDREGISTEREDONPED */ sub_71132( ref uVar2, l_U1714 );
    CLEAR_PED_TASKS_IMMEDIATELY( l_U1714 );
     /* MAL_PEDPLAYERACTIONTREENODE */ sub_62089( l_U1714, "/Global/PAS_F_TO_G/PAS_F_TO_G_SEQ/PAS_AT_G/pas_in_cover_g_idle" );
    SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U1714, 0 );
    SET_PED_INVINCIBLE( l_U1714, 0 );
     /* MAL_TELEPORTPED */ sub_70958( l_U1714, 66.58089000, 90.84168000, -3.99491000, 180 );
     /* NIS_CREATE_STATIC_CAM */ sub_71534( ref uVar3, 63.60009000, 90.29189000, -3.91446200, 12.89441000, -0.00001300, -84.32330000, 1110704128, 1000 );
     /* NIS_PLAY_CAM */ sub_71766( ref uVar3 );
    SHAKE_CAM( uVar3._fU0,  /* F_CAM_SHAKE_WOBBLY */ sub_71928(), 0.25000000 );
    TASK_SHOOT_AT_PED( uVar2, l_U1714, -1, -256437761, 1, 0, 0 );
    SET_PED_SHOOTS_AT_COORD( uVar2, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1714, 14989, g_U649 ) );
    return;
}

/* MAL_ESA_GETFIRSTLIVINGPED */ void sub_70786(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            return (uParam0^)[I]._fU0;
        }
    }
    return nil;
}

/* MAL_TELEPORTPED */ void sub_70958(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* MAL_SETPEDCONSUMINGAMMO */ void sub_71035(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_CONSUMING_AMMO( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETLOCKEDANDREGISTEREDONPED */ void sub_71132(unknown uParam0, unknown uParam1)
{
     /* MAL_REGISTERTARGET */ sub_71180( uParam0, uParam1 );
     /* MAL_SETLOCKEDTARGET */ sub_71262( uParam0, uParam1 );
    return;
}

/* MAL_REGISTERTARGET */ void sub_71180(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETLOCKEDTARGET */ void sub_71262(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* NIS_CREATE_STATIC_CAM */ void sub_71534(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_2219( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U723, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* NIS_PLAY_CAM */ void sub_71766(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    if (iParam0->_fU92 == 1)
    {
        SET_CAM_ACTIVE_WITH_INTERP( iParam0->_fU0, iParam0->_fU120, iParam0->_fU88, iParam0->_fU100, iParam0->_fU104 );
    }
    else
    {
        SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    }
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_2369( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

/* F_CAM_SHAKE_WOBBLY */ string sub_71928()
{
    return "WOBBLY_SHAKE";
}

/* MAL_COMPAREPLAYERPOSAXIS */ int sub_72141(unknown uParam0, unknown uParam1, float fParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    float fVar8;

    uVar5 = { /* MAL_GETPEDCOORDS */ sub_69535(  /* PLAYER_PED_ID */ sub_1265() )};
    if (ARE_STRINGS_EQUAL( uParam0, "X" ))
    {
        fVar8 = uVar5._fU0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "Y" ))
    {
        fVar8 = uVar5._fU4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "Z" ))
    {
        fVar8 = uVar5._fU8;
    };;;
    if (ARE_STRINGS_EQUAL( uParam1, "Greater" ))
    {
        if (fVar8 > fParam2)
        {
            return 1;
        }
    }
    else if (ARE_STRINGS_EQUAL( uParam1, "Less" ))
    {
        if (fVar8 < fParam2)
        {
            return 1;
        }
    }
    return 0;
}

/* MAL_SETLOCKEDANDREGISTEREDONPLAYER */ void sub_72606(unknown uParam0)
{
     /* MAL_SETLOCKEDANDREGISTEREDONPED */ sub_71132( uParam0,  /* PLAYER_PED_ID */ sub_1265() );
    return;
}

/* P_PLAY_SPEECH_SSTD_PRGB */ void sub_72721()
{
     /* WRITESCRIPTLOG */ sub_693( "MF", "P_PLAY_SPEECH_SSTD_PRGB - START", 0 );
     /* KILL_SPEECH */ sub_68922( ref l_U510, 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_54885( ref l_U520 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 2, l_U645[1]._fU0, "M3_CS_11_MUS", ref l_U520, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 3, l_U645[2]._fU0, "M3_CS_10_AVG", ref l_U520, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_55267( "SSTD_PRGB", ref l_U520, 8, 1 );
     /* WRITESCRIPTLOG */ sub_693( "MF", "P_PLAY_SPEECH_SSTD_PRGB - END", 0 );
    return;
}

/* MAL_ESA_GETNUMDEADPEDS */ void sub_72998(unknown uParam0)
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I]._fU0 ))
        {
            if (IS_PED_DEAD( (uParam0^)[I]._fU0 ))
            {
                Result++;
            }
        }
    }
    return Result;
}

/* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ void sub_73147(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    else
    {
        return -1.00000000;
    }
    return VDIST( uVar6, uParam1 );
}

/* P_SETDOORAUTOCLOSE */ void sub_73350(int iParam0, unknown uParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_53737( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_53821( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_AUTO_CLOSE( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

/* MAL_ESA_ALERTNESSANDEMOTIONSTATE */ void sub_73446(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* MAL_ES_ALERTNESSANDEMOTIONSTATE */ sub_73517( ref (uParam0^)[I], uParam1, uParam2 );
    }
    return;
}

/* MAL_ES_ALERTNESSANDEMOTIONSTATE */ void sub_73517(int iParam0, unknown uParam1, unknown uParam2)
{
     /* MAL_SETPEDALERTNESSANDEMOTIONSTATE */ sub_73569( iParam0 + 0, uParam1, uParam2 );
    return;
}

/* MAL_SETPEDALERTNESSANDEMOTIONSTATE */ void sub_73569(unknown uParam0, unknown uParam1, unknown uParam2)
{
     /* MAL_SETPEDALERTNESS */ sub_73620( uParam0, uParam1 );
     /* MAL_SETPEDEMOTIONSTATION */ sub_73692( uParam0, uParam2 );
    return;
}

/* MAL_SETPEDALERTNESS */ void sub_73620(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_ALERTNESS( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETPEDEMOTIONSTATION */ void sub_73692(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_EMOTION_STATE( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_ESA_SETLOCKEDANDREGISTEREDONPLAYER */ void sub_73820(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
         /* MAL_REGISTERTARGET */ sub_71180( ref (uParam0^)[I]._fU0,  /* PLAYER_PED_ID */ sub_1265() );
         /* MAL_SETLOCKEDTARGET */ sub_71262( ref (uParam0^)[I]._fU0,  /* PLAYER_PED_ID */ sub_1265() );
    }
    return;
}

/* MAL_ES_MOVETOPOINTTAKECOVERAGAINSTPLAYER */ void sub_73986(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    unknown uVar7;

    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() ))) AND (NOT (IS_PED_DEAD( iParam0->_fU0 ))))
    {
         /* MAL_WRITESCRIPTLOG */ sub_7336( "MAL_ES_MoveToPointTakeCoverAgainstPlayer" );
        CLEAR_PED_TASKS( iParam0->_fU0 );
        OPEN_SEQUENCE_TASK( ref uVar7 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, uParam4 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uParam1, 3, -1, 1048576000, 0, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_MOVE_TO_COVER_COORDS( 0, uParam1, 0 );
        CLOSE_SEQUENCE_TASK( uVar7 );
        TASK_PERFORM_SEQUENCE( iParam0->_fU0, uVar7 );
        CLEAR_SEQUENCE_TASK( uVar7 );
    }
    return;
}

/* MAL_ESA_SETLOCKEDANDREGISTEREDONPED */ void sub_74303(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_REGISTERTARGET */ sub_71180( ref (uParam0^)[I]._fU0, uParam1 );
         /* MAL_SETLOCKEDTARGET */ sub_71262( ref (uParam0^)[I]._fU0, uParam1 );
    }
    return;
}

/* P_CLOSEDOOR */ void sub_74471(int iParam0, int iParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_53737( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_53821( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

/* MAL_ESA_ASSIGNBULLETCAMTOLASTLIVINGPED */ void sub_74665(unknown uParam0, boolean bParam1, unknown uParam2, unknown uParam3)
{
    int I;

    if (( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_70572( uParam0 )) == 1)
    {
        for ( I = 0; I < (uParam0^); I++ )
        {
            if ( /* MAL_SETCANTRIGGERBULLETCAM */ sub_74756( (uParam0^)[I]._fU0, 1 ))
            {
                if (bParam1)
                {
                    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, uParam2 );
                }
                BULLET_CAMERA_TRACK_UNTIL_GROUNDED( uParam3 );
                return (uParam0^)[I];
            }
        }
    }
    return g_U671;
}

/* MAL_SETCANTRIGGERBULLETCAM */ int sub_74756(unknown uParam0, boolean bParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        if (bParam1)
        {
            if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( uParam0 )))
            {
                 /* MAL_WRITESCRIPTLOG */ sub_7336( "MAL_SetCanTriggerBulletCam: Ped is not able to trigger BC, adding" );
                SET_PED_CAN_TRIGGER_BULLET_CAM( uParam0, bParam1 );
                return 1;
            }
        }
        else if (GET_PED_CAN_TRIGGER_BULLET_CAM( uParam0 ))
        {
             /* MAL_WRITESCRIPTLOG */ sub_7336( "MAL_SetCanTriggerBulletCam turning off BC" );
            SET_PED_CAN_TRIGGER_BULLET_CAM( uParam0, bParam1 );
            return 1;
        }
    }
    return 0;
}

/* F_IS_PASSOS_FINISHED_PRACTICE_BLENDOUT */ int sub_75196()
{
    if (NOT (IS_PED_DEAD( l_U1714 )))
    {
        if ((PED_GET_ACTION_INTENTION_STATUS( l_U1714, 50 )) == 3)
        {
            PED_FINISH_ACTION_INTENTION( l_U1714, 50 );
            return 1;
        }
    }
    return 0;
}

/* P_PASSOS_PRACTICE_START_SHOOTING */ void sub_75320()
{
    if (((IS_PED_DEAD( l_U1714 )) == 0) AND ((DOES_PED_EXIST( l_U1714 )) == 1))
    {
         /* WRITESCRIPTLOG */ sub_693( "[SA]", "Telling Passos to start firing.", 0 );
        PED_SET_ACTION_INTENTION( l_U1714, 56, 1000, g_U649 );
        SET_PED_ACCURACY( l_U1714, -1467320974 );
         /* MAL_AIMTHENSHOOTATPED */ sub_75509( ref l_U1714, l_U645[0]._fU0, -511790439, 0 );
        l_U1084 = l_U645[0]._fU0;
    }
    return;
}

/* MAL_AIMTHENSHOOTATPED */ void sub_75509(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        OPEN_SEQUENCE_TASK( ref uVar6 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (NOT (IS_PED_DEAD( uParam1 )))
        {
            TASK_AIM_GUN_AT_PED( 0, uParam1, 50, uParam3 );
            TASK_SHOOT_AT_PED( 0, uParam1, 9999999, uParam2, uParam3, 0, 0 );
        }
        CLOSE_SEQUENCE_TASK( uVar6 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar6 );
        CLEAR_SEQUENCE_TASK( uVar6 );
    }
    return;
}

/* MAL_COMPAREPEDPOSAXIS */ int sub_75788(unknown uParam0, unknown uParam1, unknown uParam2, float fParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    float fVar9;

    uVar6 = { /* MAL_GETPEDCOORDS */ sub_69535( uParam0 )};
    if (ARE_STRINGS_EQUAL( uParam1, "X" ))
    {
        fVar9 = uVar6._fU0;
    }
    else if (ARE_STRINGS_EQUAL( uParam1, "Y" ))
    {
        fVar9 = uVar6._fU4;
    }
    else if (ARE_STRINGS_EQUAL( uParam1, "Z" ))
    {
        fVar9 = uVar6._fU8;
    };;;
    if (ARE_STRINGS_EQUAL( uParam2, "Greater" ))
    {
        if (fVar9 > fParam3)
        {
            return 1;
        }
    }
    else if (ARE_STRINGS_EQUAL( uParam2, "Less" ))
    {
        if (fVar9 < fParam3)
        {
            return 1;
        }
    }
    return 0;
}

/* F_GET_PASSOS_TARGET */ void sub_76168()
{
    int Result;
    int iVar3;
    int I;

    Result = nil;
    iVar3 = nil;
    for ( I = 0; I < l_U645; I++ )
    {
        if (( /* MAL_COMPAREPEDPOSAXIS */ sub_75788( l_U645[I]._fU0, "Y", "Less", 83.50000000 )) AND (NOT (IS_PED_DEAD( l_U645[I]._fU0 ))))
        {
            if (Result == nil)
            {
                Result = l_U645[I]._fU0;
            }
            else if (( /* GET_DISTANCE_BETWEEN_PEDS */ sub_12981( l_U1714, l_U645[I]._fU0, 0 )) < ( /* GET_DISTANCE_BETWEEN_PEDS */ sub_12981( l_U1714, Result, 0 )))
            {
                Result = l_U645[I]._fU0;
            }
        }
    }
    I = 0;
    for ( I = 0; I < l_U873; I++ )
    {
        if (( /* MAL_COMPAREPEDPOSAXIS */ sub_75788( l_U873[I]._fU0, "Y", "Less", 83.50000000 )) AND (NOT (IS_PED_DEAD( l_U873[I]._fU0 ))))
        {
            if (iVar3 == nil)
            {
                iVar3 = l_U873[I]._fU0;
            }
            else if (( /* GET_DISTANCE_BETWEEN_PEDS */ sub_12981( l_U1714, l_U873[I]._fU0, 0 )) < ( /* GET_DISTANCE_BETWEEN_PEDS */ sub_12981( l_U1714, iVar3, 0 )))
            {
                iVar3 = l_U873[I]._fU0;
            }
        }
    }
    if (( /* GET_DISTANCE_BETWEEN_PEDS */ sub_12981( l_U1714, Result, 0 )) < ( /* GET_DISTANCE_BETWEEN_PEDS */ sub_12981( l_U1714, iVar3, 0 )))
    {
        return Result;
    }
    else
    {
        return iVar3;
    }
     /* MAL_WRITESCRIPTLOG */ sub_7336( "GET PASSOS TARGET IS NULL" );
    return nil;
}

/* MAL_SETACTINT */ void sub_76982(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_SET_ACTION_INTENTION( uParam0, uParam1, uParam2, g_U649 );
    }
    return;
}

/* MAL_STANDSTILL */ void sub_77054(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_STAND_STILL( 0, -1 );
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    return;
}

/* P_START_CHECKPOINT_THREAD */ void sub_77541(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

/* DISABLETIMER */ void sub_77734(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

/* F_GBL_HAS_PLAYER_JUST_ACQUIRED_PAIN_KILLERS */ int sub_77841()
{
    if (GET_PAYNEKILLER_AMT() > g_U4002)
    {
         /* WRITESCRIPTLOG */ sub_693( "MF", "Player picked up Payne Killers!", 0 );
        PRINTSTRING( "HAD: " );
         /* WRITE_INT */ sub_48007( g_U4002 );
        PRINTSTRING( "NOW: " );
         /* WRITE_INT */ sub_48007( GET_PAYNEKILLER_AMT() );
        g_U4002 = GET_PAYNEKILLER_AMT();
        return 1;
    }
    g_U4002 = GET_PAYNEKILLER_AMT();
    return 0;
}

/* MAL_SETPEDVISIBLE */ void sub_78079(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_VISIBLE( uParam0, uParam1 );
    }
    else
    {
         /* MAL_WRITESCRIPTLOG */ sub_7336( "MAL_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

/* KILL_ANY_MISSION_SPEECH */ void sub_78287(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        PRINTSTRING( "\n KILL_ANY_MISSION_SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

/* P_SPEECH_PLAY_MONOLOGUE */ void sub_78512(unknown uParam0, unknown uParam1)
{
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_54885( uParam1 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 0,  /* PLAYER_PED_ID */ sub_1265(), "MAX", uParam1, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 1,  /* PLAYER_PED_ID */ sub_1265(), "MAX", uParam1, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_55267( uParam0, uParam1, 8, 1 );
    return;
}

/* MAL_ISDOORCLOSEDBUTNOTLOCKED */ int sub_79025(unknown uParam0, boolean bParam1, float fParam2)
{
    if (NOT ( /* F_ISDOORLOCKED */ sub_79068( uParam0 )))
    {
        if ((( /* F_GETDOOROPENRATIO */ sub_79154( uParam0 )) > (fParam2 * -1)) AND (( /* F_GETDOOROPENRATIO */ sub_79154( uParam0 )) < fParam2))
        {
            if (bParam1)
            {
                 /* P_SETDOORLOCKED */ sub_54058( uParam0, 1 );
            }
            return 1;
        }
    }
    return 0;
}

/* F_ISDOORLOCKED */ void sub_79068(int iParam0)
{
    unknown Result;
    unknown uVar4;

    if (( /* F_DOESDOOREXIST */ sub_53737( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_53821( iParam0 );
    }
    GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref Result, ref uVar4 );
    return Result;
}

/* F_GETDOOROPENRATIO */ void sub_79154(int iParam0)
{
    int iVar3;
    float Result;

    if (( /* F_DOESDOOREXIST */ sub_53737( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_53821( iParam0 );
    }
    iVar3 = 0;
    Result = 0.00000000;
    GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar3, ref Result );
    return Result;
}

/* P_HANDLE_AMBIENT_SPEECH */ void sub_79334()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_79375( ref l_U1174, 0 ))
    {
         /* WRITESCRIPTLOG */ sub_693( "MF", "Playing Speech: SSTD_BMDR", 0 );
         /* P_SPEECH_PLAY_MONOLOGUE */ sub_78512( "SSTD_BMDR", ref uVar2 );
        return;
    }
    if (TIME_SINCE_LAST_MONOLOGUE() > 5000)
    {
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_79375( ref l_U1153, 0 ))
        {
             /* WRITESCRIPTLOG */ sub_693( "MF", "Playing Speech: SSTD_GISR", 0 );
            if (( /* IS_SCRIPTED_MOVIE_PLAYING */ sub_79644( ref l_U1429 )) == 0)
            {
                 /* P_SPEECH_PLAY_MONOLOGUE */ sub_78512( "SSTD_GISR", ref uVar2 );
            }
            return;
        }
    }
    if (NOT ( /* HASTIMERBEENACTIVATED */ sub_2085( ref g_U3992 )))
    {
         /* P_CREATE_AND_START_TIMER */ sub_61005( ref g_U3992, g_U4001 );
    }
    if ((TIME_SINCE_LAST_MONOLOGUE() > 5000) AND ( /* F_GBL_HAS_PLAYER_JUST_ACQUIRED_PAIN_KILLERS */ sub_77841()))
    {
         /* WRITESCRIPTLOG */ sub_693( "MF", "Playing Speech: SSTD_MFSP", 0 );
         /* P_SPEECH_PLAY_MONOLOGUE */ sub_78512( ref g_U4003, ref uVar2 );
         /* RESETTIMER */ sub_3078( ref g_U3992 );
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_79375(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_13742(  /* PLAYER_PED_ID */ sub_1265(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* IS_SCRIPTED_MOVIE_PLAYING */ int sub_79644(int iParam0)
{
     /* WRITESCRIPTLOG */ sub_693( "rw", "IS_SCRIPTED_MOVIE_PLAYING", 0 );
    if (iParam0->_fU940 != 0)
    {
        return 1;
    }
    return 0;
}

/* F_SHOULD_PASSOS_MOVE_TO_ELEVATOR */ int sub_79935()
{
    if (((PED_GET_ACTION_INTENTION_STATUS( l_U1714, 47 )) == 3) AND ((NOT l_U1044) AND ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() ))) AND (NOT (IS_PED_DEAD( l_U1714 ))))))
    {
        if (( /* F_ISPEDINTRIGGERBOX */ sub_13742(  /* PLAYER_PED_ID */ sub_1265(), l_U190 )) || ((( /* GET_DISTANCE_BETWEEN_PEDS */ sub_12981( l_U1714,  /* PLAYER_PED_ID */ sub_1265(), 0 )) < 15) || (l_U253._fU64)))
        {
            return 1;
        }
    }
    return 0;
}

/* P_PASSOS_MOVE_TO_ELEVATOR */ void sub_81803()
{
    l_U1044 = 1;
    PED_SET_ACTION_INTENTION( l_U1714, 48, 1000, g_U649 );
     /* WRITESCRIPTLOG */ sub_693( "ML", "P_PASSOS_MOVE_TO_ELEVATOR", "---" );
    if ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_68692( l_U470 ))
    {
         /* KILL_SPEECH */ sub_68922( ref l_U470, 0 );
    }
    if ((NOT (IS_PED_DEAD( l_U1714 ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() ))))
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_54885( ref l_U470 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 0,  /* PLAYER_PED_ID */ sub_1265(), "MAX", ref l_U470, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 1, l_U1714, "PASSOS", ref l_U470, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_55267( "SSTD_PRPA", ref l_U470, 8, 1 );
    }
    return;
}

/* MAL_SETPRIMARYLOOKAT */ void sub_82113(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        if ((NOT (IS_PED_DEAD( uParam1 ))) || (IS_PED_DEAD( uParam1 )))
        {
            SET_PED_PRIMARY_LOOKAT( uParam0, uParam1 );
        }
    }
    return;
}

/* P_PASINTERRUPTDIAG */ void sub_82608(int iParam0)
{
    boolean bVar3;
    string sVar4;

    bVar3 = false;
    if (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_68692( l_U1755 )))
    {
        bVar3 = true;
    }
    else if (l_U1765 != 0)
    {
        if (((NOT (IS_ANY_SPEECH_PLAYING( l_U1714 ))) AND ((l_U1765 == 3) AND (iParam0 == 1))) || (iParam0 == 0))
        {
            bVar3 = true;
        }
    }
    if (bVar3)
    {
        if (iParam0 == 2)
        {
            sVar4 = "SSTD_PAAH";
        }
        else if (iParam0 == 0)
        {
            sVar4 = "SSTD_PSAH";
        }
        else if (iParam0 == 1)
        {
            sVar4 = "SSTD_PBTP";
        }
        else if (iParam0 == 3)
        {
            sVar4 = "SSTD_MFLP";
        };;;;
        l_U1765 = iParam0;
         /* KILL_SPEECH */ sub_68922( ref l_U1755, 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_54885( ref l_U1755 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54996( 1, l_U1714, "PASSOS", ref l_U1755, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_55267( sVar4, ref l_U1755, 7, 1 );
    }
    return;
}

/* MAL_HANDLEPASSOSINTERRUPTIONSWITHDIALOGUE */ void sub_82918(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    unknown uVar12;

    if (( /* MAL_GETACTINTSTATUS */ sub_61171( uParam0, 29 )) == 3)
    {
        uVar12 = nil;
        if ((( /* MAL_HASPLAYERFIRED */ sub_69495( 1 )) AND (IS_PED_IN_CROSSHAIR_CYLINDER( uParam0, 2, 10000, 0, -1082130432 ))) || (HAS_BULLET_IMPACTED_IN_AREA(  /* MAL_GETPEDCOORDS */ sub_69535( uParam0 ), 3, ref uVar12 )))
        {
             /* MAL_WRITESCRIPTLOG */ sub_7336( "PLAYER SHOT AT PASSOS" );
             /* MAL_SETACTINWITHFOCUSPOS */ sub_83090( ref uParam0,  /* MAL_GETPEDCOORDS */ sub_69535(  /* PLAYER_PED_ID */ sub_1265() ), 34, 1000 );
            SET_PED_PRIMARY_LOOKAT( uParam0,  /* PLAYER_PED_ID */ sub_1265() );
            (uParam1^) = 1;
            break;
            uParam6;
            0;
            break;
        }
        if (NOT (uParam2^))
        {
            if ((( /* MAL_GETACTINTSTATUS */ sub_61171( uParam0, 32 )) != 3) AND ((( /* MAL_GETACTINTSTATUS */ sub_61171( uParam0, 33 )) != 3) AND (IS_PED_TOUCHING_PED(  /* PLAYER_PED_ID */ sub_1265(), uParam0 ))))
            {
                 /* MAL_WRITESCRIPTLOG */ sub_7336( "BAD TOUCH!!" );
                (uParam2^) = 1;
                (uParam1^) = 1;
                 /* MAL_SETACTINWITHFOCUSPOS */ sub_83090( ref uParam0,  /* MAL_GETPEDCOORDS */ sub_69535(  /* PLAYER_PED_ID */ sub_1265() ), 35, 1000 );
                SET_PED_PRIMARY_LOOKAT( uParam0,  /* PLAYER_PED_ID */ sub_1265() );
                break;
                uParam6;
                1;
                break;
            }
        }
        else if (NOT (IS_PED_TOUCHING_PED(  /* PLAYER_PED_ID */ sub_1265(), uParam0 )))
        {
            (uParam2^) = 0;
        }
        if (NOT (uParam3^))
        {
            if ( /* MAL_CHECKANGLEANDDISTANCEBETWEENPEDANDPLAYER */ sub_83363( ref uParam0, 300, 100, -1, 0, 0 ))
            {
                if ((IS_CONTROL_PRESSED( 0, 6 )) AND (IS_PED_IN_CROSSHAIR_CYLINDER( uParam0, 1, 10000, 0, -1082130432 )))
                {
                    (uParam1^) = 1;
                    (uParam3^) = 1;
                     /* MAL_SETACTINWITHFOCUSPOS */ sub_83090( ref uParam0,  /* MAL_GETPEDCOORDS */ sub_69535(  /* PLAYER_PED_ID */ sub_1265() ), 32, 1000 );
                    SET_PED_PRIMARY_LOOKAT( uParam0,  /* PLAYER_PED_ID */ sub_1265() );
                     /* MAL_WRITESCRIPTLOG */ sub_7336( "PLAYER AIMING AT PASSOS" );
                    break;
                    uParam6;
                    2;
                    break;
                }
            }
        }
        else if ((NOT (IS_CONTROL_PRESSED( 0, 6 ))) || (NOT (IS_PED_IN_CROSSHAIR_CYLINDER( uParam0, 1.50000000, 10000, 0, -1082130432 ))))
        {
            if (( /* MAL_GETACTINTSTATUS */ sub_61171( uParam0, 32 )) != 3)
            {
                (uParam3^) = 0;
                 /* MAL_WRITESCRIPTLOG */ sub_7336( "PLAYER NO LONGER AIMING AT PASSOS" );
            }
        }
        if (NOT (uParam1^))
        {
            if (( /* MAL_CHECKANGLEANDDISTANCEBETWEENPEDANDPLAYER */ sub_83363( ref uParam0, uParam9, 180, -1, 46, 0 )) || (( /* MAL_CHECKANGLEANDDISTANCEBETWEENPEDANDPLAYER */ sub_83363( ref uParam0, uParam8, 45, -1, 31, 0 )) || ( /* MAL_CHECKANGLEANDDISTANCEBETWEENPEDANDPLAYER */ sub_83363( ref uParam0, uParam7, 30, -1, 0, 0 ))))
            {
                 /* MAL_WRITESCRIPTLOG */ sub_7336( "INTERRUPTING PASSOS" );
                 /* MAL_SETACTINWITHFOCUSPOS */ sub_83090( ref uParam0,  /* MAL_GETPEDCOORDS */ sub_69535(  /* PLAYER_PED_ID */ sub_1265() ), 33, 1000 );
                SET_PED_PRIMARY_LOOKAT( uParam0,  /* PLAYER_PED_ID */ sub_1265() );
                (uParam1^) = 1;
            }
        }
        else if (( /* MAL_CHECKANGLEANDDISTANCEBETWEENPEDANDPLAYER */ sub_83363( ref uParam0, -1, 180, uParam8 + 1, 91, 0 )) || ( /* MAL_CHECKANGLEANDDISTANCEBETWEENPEDANDPLAYER */ sub_83363( ref uParam0, -1, 90, uParam7 + 1, 0, 0 )))
        {
            if ((NOT (uParam2^)) AND (NOT (uParam3^)))
            {
                if (( /* MAL_ISACTINTCOMPLETED */ sub_61132( ref uParam0, 35, 1 )) || (( /* MAL_ISACTINTCOMPLETED */ sub_61132( ref uParam0, 32, 1 )) || (( /* MAL_ISACTINTCOMPLETED */ sub_61132( ref uParam0, 34, 1 )) || ( /* MAL_ISACTINTCOMPLETED */ sub_61132( ref uParam0, 33, 1 )))))
                {
                     /* MAL_FINISHACTINT */ sub_61259( ref uParam0, 33 );
                     /* MAL_FINISHACTINT */ sub_61259( ref uParam0, 34 );
                     /* MAL_FINISHACTINT */ sub_61259( ref uParam0, 32 );
                     /* MAL_FINISHACTINT */ sub_61259( ref uParam0, 35 );
                     /* MAL_FINISHACTINT */ sub_61259( ref uParam0, 31 );
                     /* MAL_SETACTINT */ sub_76982( uParam0, 36, 1000 );
                    CLEAR_PED_PRIMARY_LOOKAT( uParam0 );
                    (uParam1^) = 0;
                    (uParam3^) = 0;
                    (uParam2^) = 0;
                    (uParam4^) = 0;
                     /* CREATETIMER */ sub_2219( iParam5,  /* F_GETRANDOMINTINRANGE */ sub_69926( 10000, 15000 ), 1, 0 );
                    return;
                }
            }
        }
        if (( /* MAL_GETACTINTSTATUS */ sub_61171( uParam0, 30 )) == 3)
        {
            if ( /* ISTIMERDONE */ sub_2502( iParam5 ))
            {
                 /* MAL_SETACTINWITHFOCUSPOS */ sub_83090( ref uParam0,  /* MAL_GETPEDCOORDS */ sub_69535(  /* PLAYER_PED_ID */ sub_1265() ), 31, 1000 );
                (uParam4^)++;
                break;
                uParam6;
                3;
                break;
            }
            else if ((uParam4^) < 3)
            {
                if ((iParam5->_fU16) || (NOT ( /* HASTIMERBEENACTIVATED */ sub_2085( iParam5 ))))
                {
                     /* CREATETIMER */ sub_2219( iParam5,  /* F_GETRANDOMINTINRANGE */ sub_69926( 10000, 15000 ), 1, 0 );
                     /* STARTTIMER */ sub_2369( iParam5 );
                }
            }
        }
    }
     /* MAL_ISACTINTCOMPLETED */ sub_61132( ref uParam0, 31, 1 );
     /* MAL_ISACTINTCOMPLETED */ sub_61132( ref uParam0, 36, 1 );
    return;
}

/* MAL_SETACTINWITHFOCUSPOS */ void sub_83090(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_SET_ACTION_INTENTION( (uParam0^), uParam4, uParam5, uParam1 );
    }
    return;
}

/* MAL_CHECKANGLEANDDISTANCEBETWEENPEDANDPLAYER */ int sub_83363(unknown uParam0, float fParam1, unknown uParam2, float fParam3, float fParam4, boolean bParam5)
{
    float fVar8;

    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1265() ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        fVar8 =  /* GET_DISTANCE_BETWEEN_PEDS */ sub_12981( (uParam0^),  /* PLAYER_PED_ID */ sub_1265(), 0 );
        if ((fVar8 > fParam1) AND (fParam1 > -1))
        {
            return 0;
        }
        else if ((fVar8 < fParam3) AND (fParam3 > -1))
        {
            return 0;
        }
        else if (NOT (IS_PED_FACING_PED( (uParam0^),  /* PLAYER_PED_ID */ sub_1265(), uParam2 )))
        {
            return 0;
        }
        else if ((IS_PED_FACING_PED( (uParam0^),  /* PLAYER_PED_ID */ sub_1265(), fParam4 )) AND (fParam4 > 0))
        {
            return 0;
        }
        else if (bParam5)
        {
            PRINTSTRING( "MAL_CheckAngleAndDistanceBetweenPedAndPlayer: Actual Distance: " );
            PRINTFLOAT( fVar8 );
            PRINTSTRING( " MAX DISTANCE: " );
            PRINTFLOAT( fParam1 );
            PRINTSTRING( " MIN DISTANCE: " );
            PRINTFLOAT( fParam3 );
            PRINTSTRING( " MAX ANGLE: " );
            PRINTFLOAT( uParam2 );
            PRINTSTRING( " MIN ANGLE: " );
             /* WRITE_FLOAT */ sub_45333( fParam4 );
        }
        return 1;;;;;
    }
    return 0;
}

/* P_CLEAN_MOVIE */ void sub_85200(int iParam0)
{
     /* WRITESCRIPTLOG */ sub_693( "rw", "P_CLEAN_MOVIE", 0 );
     /* CLEANOBJECT */ sub_5759( iParam0->_fU40 );
     /* TERMINATEISEQ */ sub_4092( iParam0->_fU76, 1 );
    if (IS_SCRIPT_MOVIE_PLAYING( 2 ))
    {
        STOP_MOVIE( 2 );
    }
    RELEASE_MOVIE( 2 );
    return;
}

/* P_RELEASE_PRACTICEROOM_ASSETS */ void sub_85315()
{
     /* WRITESCRIPTLOG */ sub_693( "SP", "P_RELEASE_PRACTICEROOM_ASSETS", 0 );
     /* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ sub_85408( ref l_U128, ref g_U1069 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE_ARRAY */ sub_85956( ref l_U141, ref g_U1214 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_86400( "LEVEL_S_STAD_CP_01", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_86400( "LEVEL_S_STAD_CP_02", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_86400( "LEVEL_S_STAD_PRACT", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_86400( "PAS_INT", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_86400( "EXPL_CAM", ref g_U1354 );
     /* P_UNLOAD_AMED_ANIM_DICTS */ sub_86836();
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ void sub_85408(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_85481( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE */ void sub_85481(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_4595( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a MODEL_NAME asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Removing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE_ARRAY */ void sub_85956(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_86030( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE */ void sub_86030(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_4595( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a WEAPON_TYPE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_REMOVE */ void sub_86400(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_4595( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ANIM_DICT asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_UNLOAD_AMED_ANIM_DICTS */ void sub_86836()
{
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_86400( "PLGE_RIFLE_CROUCH", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_86400( "PLGE_PSTL_CROUCH", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_86400( "AMED_RIFLE_CORE", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_86400( "AMED_PSTL_CORE", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_86400( "AMED_RIFLE_CORE_RELOAD", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_86400( "AMED_PSTL_CORE_RELOAD", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_86400( "PLGE_RIFLE_HANDSIG", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_86400( "PLGE_PSTL_HANDSIG", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_86400( "PLGE_RIFLE_ACTIONS", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_86400( "PLGE_PSTL_ACTIONS", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_86400( "AMED_RIFLE_KNEE", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_86400( "AMED_PSTL_KNEE", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_86400( "AMED_RIFLE_COVER", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_86400( "AMED_PSTL_COVER", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_86400( "AMED_RIFLE_REACT", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_86400( "AMED_PSTL_REACT", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_86400( "AMED_RIFLE_COVER_EXIT", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_86400( "AMED_PSTL_COVER_EXIT", ref g_U1354 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_86400( "AMED_PSTL_FULLBODY", ref g_U1354 );
    return;
}


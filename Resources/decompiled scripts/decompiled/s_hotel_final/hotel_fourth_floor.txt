void main()
{
    unknown uVar2;

    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = -1;
    l_U40 = {64536, 64536, 64536};
    l_U89 = "PED_DEF";
    l_U131 = 1.00000000;
    l_U143 = 0;
    l_U184 = 0;
    l_U204 = 1;
    l_U205 = 0;
    l_U206 = 1;
    l_U207 = 0;
    l_U266 = 1;
    l_U285 = "12_02_HOTEL_concat";
    l_U416 = 0;
    l_U417 = 0;
    l_U418 = 1500;
    StrCopy( ref l_U428, "FE_PLAYER", 32 );
    l_U436 = 0;
    l_U437 = 0;
    l_U438 = 0;
    l_U439 = 0;
    l_U440 = 1;
    l_U441 = 1;
    l_U442 = 0;
    l_U443 = 0;
    l_U444 = 0;
    l_U445 = 0;
    l_U482 = 0;
    l_U483 = 0;
    l_U484 = 0;
    l_U485 = 0;
    l_U486 = 0;
    l_U487 = 1227027608;
    l_U488 = -1880196335;
    l_U1161 = 0;
    l_U1162 = 0;
    l_U1184 = -1;
    l_U1185 = {5.50000000, 4.30000000, 24.84000000};
    l_U1274 = {5.46000000, 5.35000000, 23.74000000};
    l_U1363 = {11.61000000, 28.60000000, 23.76000000};
    l_U1366 = {11.55500000, 27.99000000, 22.85500000};
    l_U1369 = -38.55700000;
    l_U1500 = 0;
    l_U1502 = {-10.76000000, -12.20000000, 23.66000000};
    l_U1506 = 0;
    sub_659( "MW", "hotel_fourth_floor script started.", 0 );
    sub_708();
    if (g_U854 == 5)
    {
        l_U441 = 0;
        sub_862( 1 );
        sub_1952();
        sub_5663();
        if (NOT (sub_6026( ref l_U446 )))
        {
            uVar2 = sub_10297( sub_6151(), -612753081, 200, 0, 0 );
            sub_10509( sub_6151(), -612753081, 50, 1, 0 );
            SET_PAYNEKILLER_AMT( 6 );
        }
        SET_PED_MODEL_LOD_DISTANCES( l_U487, 25.00000000, 100.00000000 );
        sub_10705();
        g_U855 = g_U854;
        l_U204 = 5;
        l_U205 = 5;
        l_U437 = 3;
    }
    sub_659( "MW", "Entering Main Logic Loops for: hotel_fourth_floor ...", 0 );
    while (NOT IS_EXITFLAG_SET())
    {
        if (g_U855 == 5)
        {
            sub_16693();
            sub_18091();
        }
        sub_22483( ref l_U943, "Pool Attackers " );
        sub_22483( ref l_U980, "Pool Attack stage 2" );
        sub_22483( ref l_U1029, "Tennnis Court guys" );
        sub_22483( ref l_U1105, "Cafe Guys" );
        sub_22483( ref l_U1157, "Cafe Reinforcements" );
        sub_22784();
        WAIT( 0 );
    }
    RESET_PED_MODEL_LOD_DISTANCES( l_U487 );
    sub_20337();
    g_U997 = 1;
    sub_47294();
    sub_47364();
    sub_659( "AT", "Script hotel_fourth_floor.sc is ending . . .", 0 );
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "hotel_fourth_floor" );
    return;
}

void sub_659(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_708()
{
    sub_659( "AT", "P_SETUP_ASSET_ARRAYS start", 0 );
    l_U1478[0] = l_U487;
    l_U1478[1] = l_U488;
    l_U1478[2] = 1844670898;
    sub_659( "AT", "P_SETUP_ASSET_ARRAYS end", 0 );
    return;
}

void sub_862(unknown uParam0)
{
    int I;

    sub_659( "MW", "P_LOAD_FOURTH_FLOOR_ASSETS start", 0 );
    REQUEST_ANIM_DICT( "npc_pstl_cover_grenade", 0 );
    "[doubled result, dropped if not asigned]";
    REQUEST_ANIM_DICT( "npc_rifle_cover_grenade", 0 );
    "[doubled result, dropped if not asigned]";
    sub_996( g_U853, uParam0 );
    sub_1184( "SHOTAUD" );
    for ( I = 0; I < l_U1478; I++ )
    {
        sub_996( l_U1478[I], uParam0 );
    }
    sub_1364( "LEVEL_S_HOTEL_CP_04", 0, uParam0 );
    sub_1364( "EXPL_CAM", 0, uParam0 );
    sub_1461( 1632315867, uParam0 );
    sub_1461( -905531099, uParam0 );
    sub_1687( "S_HOTEL_PIANO", 0, uParam0 );
    sub_1764( uParam0 );
    sub_659( "MW", "P_LOAD_FOURTH_FLOOR_ASSETS end", 0 );
    return;
}

void sub_996(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_1101( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_1101(unknown uParam0)
{
    return;
}

void sub_1184(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_1204();
    return;
}

void sub_1204()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_1364(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_1461(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_1687(unknown uParam0, unknown uParam1, int iParam2)
{
    if (iParam2 == 0)
    {
        REQUEST_SCRIPT_STREAM( uParam0, uParam1 );
    }
    else
    {
        while ((LOAD_SCRIPT_STREAM( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_1764(unknown uParam0)
{
    sub_1781( -1013714740, uParam0 );
    sub_1781( -184942895, uParam0 );
    sub_1781( 1478009203, uParam0 );
    sub_1781( -612753081, uParam0 );
    sub_1781( -1980065396, uParam0 );
    return;
}

void sub_1781(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_1952()
{
    sub_659( "MW", "P_SET_STATIC_GAMEPLAY_DATA start", 0 );
    sub_2079( ref l_U762, "TB_SWIMMING_POOL", -6.28669200, -11.80040000, 21.67061000, 16.37000000, 3.45000000, 6.12000000, 0.00000000, 0.00000000, 12.00000000, 1 );
    sub_2079( ref l_U489, "TRIGGER_ACTIVATE_SWIMMING_POOL", -6.28669200, -11.80040000, 21.67061000, 16.37000000, 3.45000000, 6.12000000, 0.00000000, 0.00000000, 12.00000000, 1 );
    sub_2079( ref l_U510, "TRIGGER_ACTIVATE_SWIMMING_POOL_s2", -0.31063800, -27.92695000, 19.00000000, 16.37000000, 3.45000000, 6.12000000, 0.00000000, 0.00000000, 24.50000000, 1 );
    sub_2079( ref l_U531, "TRIGGER_ACTIVATE_TennisCourt", 5.77171300, -40.63548000, 21.65027000, 8.00000000, 3.00000000, 4.12000000, 0.00000000, 0.00000000, 49.00000000, 1 );
    sub_2079( ref l_U552, "TRIGGER_ACTIVATE_Cafe", 20.28595000, -32.37046000, 21.65027000, 12.00000000, 14.00000000, 4.12000000, 0.00000000, 0.00000000, 49.00000000, 1 );
    sub_2079( ref l_U573, "TRIGGER_RELEASE_Cafe", 14.23945000, -23.04194000, 21.65027000, 12.00000000, 2.00000000, 4.12000000, 0.00000000, 0.00000000, 39.00000000, 1 );
    sub_2079( ref l_U594, "TRIGGER_ACTIVATE_CafeReinf", 9.75580900, -16.61072000, 22.60000000, 12.00000000, 2.00000000, 4.12000000, 0.00000000, 0.00000000, 29.00000000, 1 );
    sub_2079( ref l_U657, "TRIGGER_ACTIVATE_CafeReinf_2", 5.99871100, -0.84047300, 22.65287000, 11.00000000, 2.00000000, 4.12000000, 0.00000000, 0.00000000, -10.00000000, 1 );
    sub_2079( ref l_U678, "TRIGGER_ACTIVATE_CafeReinf_3", 6.16397600, 1.01796400, 22.65229000, 11.00000000, 2.00000000, 4.12000000, 0.00000000, 0.00000000, -20.00000000, 1 );
    sub_2079( ref l_U699, "TRIGGER_KitchenArea", 18.71000000, 27.86000000, 21.60000000, 6.50000000, 6.00000000, 4.12000000, 0.00000000, 0.00000000, -45.00000000, 1 );
    sub_2079( ref l_U720, "TRIGGER_KitchenDoorSafety", 11.44000000, 16.90000000, 21.60000000, 12.00000000, 2.00000000, 4.12000000, 0.00000000, 0.00000000, -10.00000000, 1 );
    sub_2079( ref l_U783, "TRIGGER_DANGER_ZONE_A", -7.60000000, -16.04000000, 22.84000000, 21.00000000, 19.00000000, 6.07000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_2079( ref l_U804, "TRIGGER_DANGER_ZONE_B", -5.11000000, -24.04000000, 22.84000000, 21.00000000, 22.00000000, 8.07000000, 0.00000000, 0.00000000, 24.50000000, 1 );
    sub_2079( ref l_U825, "TRIGGER_DANGER_ZONE_C", -4.11000000, -32.04000000, 22.84000000, 21.00000000, 23.00000000, 12.07000000, 0.00000000, 0.00000000, 49.00000000, 1 );
    sub_2079( ref l_U615, "TRIGGER_KITCHEN_DOOR", 16.52700000, 25.66900000, 21.88200000, 2.60000000, 2.60000000, 4.00000000, 0.00000000, 0.00000000, 45.00000000, 1 );
    sub_2079( ref l_U636, "TRIGGER_KITCHEN_DOOR_FORCE_WALK", 16.52700000, 25.66900000, 21.88200000, 6.50000000, 6.50000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_2079( ref l_U741, "TRIG_4TH_RESTAURANT", 11.07000000, 12.28000000, 21.94000000, 20.00000000, 43.70000000, 4.00000000, 0.00000000, 0.00000000, -178.56000000, 1 );
    sub_3570( ref l_U846, "POOL_FIGHT_LIMIT", -3.79345800, -25.72417000, 20.84600000, 11.25000000, 30.25000000, 4.50000000, 0.00000000, 0.00000000, 24.50000000, 1 );
    sub_3662( ref l_U903[0], 12.25780000, -36.66658000, 22.65027000, 219.07230000, -1280236693, 7, 3, 2, 0, 0 );
    sub_3662( ref l_U903[1], 8.71684400, -35.56975000, 22.65027000, 223.97720000, -1271270087, 7, 3, 2, 0, 0 );
    sub_3662( ref l_U903[2], 8.71684400, -36.56975000, 22.65027000, 223.97720000, 44146671, 7, 3, 2, 0, 0 );
    sub_3662( ref l_U953[0], 9.30587000, -35.81195000, 22.64057000, 223.97720000, -687300239, 7, 3, 2, 0, 0 );
    sub_3662( ref l_U953[1], 11.57834000, -34.69257000, 22.64772000, 223.97720000, -611318444, 7, 3, 2, 0, 0 );
    sub_3662( ref l_U853[0], -10.75200000, -11.29200000, 22.65000000, -180.00000000, -889433552, 7, 3, 2, 0, 0 );
    sub_3662( ref l_U853[1], -9.64800000, -12.19000000, 22.65000000, 90.00000000, 1663961723, 7, 3, 2, 0, 0 );
    sub_3662( ref l_U853[2], -10.70200000, -13.86700000, 22.65000000, -45.00000000, -611318444, 7, 3, 2, 0, 0 );
    sub_3662( ref l_U989[0], 30.10539000, -35.40363000, 22.62214000, 45.00000000, 44146671, 7, 3, 2, 0, 0 );
    sub_3662( ref l_U989[1], 31.53743000, -36.36205000, 22.62765000, 45.00000000, -2074958641, 7, 3, 2, 0, 0 );
    sub_3662( ref l_U989[2], 33.35685000, -37.50569000, 22.63465000, 45.00000000, -687300239, 7, 3, 2, 0, 0 );
    sub_3662( ref l_U1039[0], 9.90894500, -12.58148000, 22.88043000, 210, -368821311, 7, 3, 2, 0, 0 );
    sub_3662( ref l_U1039[1], 5.63787100, -15.84390000, 22.88070000, 210.00000000, 1352653294, 7, 3, 2, 0, 0 );
    sub_3662( ref l_U1039[2], 4.38191900, -1.22622400, 22.68000000, 210.00000000, 875817116, 7, 3, 2, 0, 0 );
    sub_3662( ref l_U1039[3], 4.38453700, 2.79509600, 22.68500000, 210, 1964737617, 7, 3, 2, 0, 0 );
    sub_3662( ref l_U1039[4], 9.23936600, -0.67114200, 22.68000000, 210, 2034260149, 7, 3, 2, 0, 0 );
    sub_3662( ref l_U1117[0], 7.65510100, 24.54995000, 22.85215000, 210, -1157241841, 7, 3, 2, 0, 0 );
    sub_3662( ref l_U1117[1], 10.13462000, 29.52373000, 22.85203000, 210.00000000, 403843684, 7, 3, 2, 0, 0 );
    sub_3662( ref l_U1117[2], 16.24917000, 20.06991000, 22.65202000, 210.00000000, -923354557, 7, 3, 2, 0, 0 );
    sub_4575( ref l_U1277, 2, l_U1363, l_U1363, l_U1363, 1.50000000, 3.00000000, 0, 0 );
    sub_5423( ref l_U1277, 30, "POI_RP_PIANO" );
    sub_5584( ref l_U1277, 0 );
    sub_659( "MW", "P_SET_STATIC_GAMEPLAY_DATA end", 0 );
    return;
}

void sub_2079(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_3570(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_3662(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_4575(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
    sub_4590( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
    sub_4958( iParam0 );
    return;
}

void sub_4590(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_4958(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_5037( iParam0 );
    return;
}

void sub_5037(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_5096( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_5096( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_5096( iParam0, 1 );
            }
            else
            {
                sub_5096( iParam0, 0 );
            };;;
        }
        else
        {
            sub_5096( iParam0, 0 );
        }
    }
    else
    {
        sub_5096( iParam0, 0 );
    }
    return;
}

void sub_5096(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_5423(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_5454( iParam0 );
    return;
}

void sub_5454(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_5584(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

void sub_5663()
{
    sub_659( "MW", "P_INITIALIZE_FOURTH_FLOOR_SCRIPT_DATA start", 0 );
    l_U438 = 0;
    l_U1184 = -1;
    l_U1161 = 0;
    l_U442 = 0;
    l_U1162 = 0;
    l_U443 = 0;
    l_U444 = 0;
    l_U445 = 0;
    l_U482 = 0;
    l_U483 = 0;
    l_U484 = 0;
    l_U485 = 0;
    l_U486 = 0;
    l_U1477 = 0;
    l_U1476 = 0;
    g_U996 = 0;
    l_U1500 = 0;
    l_U439 = 0;
    l_U1506 = 0;
    sub_5848( ref l_U1431 );
    sub_659( "MW", "P_INITIALIZE_FOURTH_FLOOR_SCRIPT_DATA end", 0 );
    return;
}

void sub_5848(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

int sub_6026(unknown uParam0)
{
    sub_659( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_6217( uParam0, sub_6151() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

int sub_6151()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_6173() );
    }
    return 0;
}

void sub_6173()
{
    return GET_PLAYER_ID();
}

void sub_6217(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_659( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_6401( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_7478( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_7770( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_8117( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_7770( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_8117( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_7770( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_8117( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_8402( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_8117( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_8402( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_8117( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_8895( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_9056( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_6151(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_659( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_6401(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_6433( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_6433(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_7478(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_7770(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_1101( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_8117(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_8402(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_1101( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_8895(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_9056(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_6433( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_9128( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_9128(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_10297(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    unknown Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                sub_10445( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

void sub_10445(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    return;
}

void sub_10509(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    int Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
            while (Result == 0)
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
                sub_10445( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

void sub_10705()
{
    sub_10715();
    sub_13587();
    sub_14391();
    sub_15289();
    return;
}

void sub_10715()
{
    sub_10729( ref l_U893 );
    sub_10866( ref l_U847, 1.00000000, 0 );
    sub_11038();
    sub_11147( -1569615261, -612753081, 25000, 25000 );
    sub_11292( ref l_U853, ref l_U893, ref l_U847, 0, 1.00000000, "AIT_EXPERT", 0, 0, 25000, 2, 0, 25000, "VIG 03: " );
    sub_11038();
    sub_13424( ref l_U893, "Vig 03 Ped:" );
    l_U1505 = CREATE_OBJECT( l_U488, l_U1502, 1, 0 );
    return;
}

void sub_10729(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_10763( (uParam0^)[I] );
    }
    return;
}

void sub_10763(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_10866(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_11038()
{
    int I;

    for ( I = 0; I < 10; I++ )
    {
        l_U90[I]._fU0 = 0;
        l_U90[I]._fU4 = 25000;
        l_U90[I]._fU8 = 0;
        l_U90[I]._fU12 = 25000;
    }
    return;
}

void sub_11147(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < 10; I++ )
    {
        l_U90[I]._fU0 = uParam0;
        l_U90[I]._fU4 = uParam2;
        l_U90[I]._fU8 = uParam1;
        l_U90[I]._fU12 = uParam3;
    }
    return;
}

void sub_11292(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5, boolean bParam6, unknown uParam7, unknown uParam8, unknown uParam9, int iParam10, unknown uParam11, unknown uParam12)
{
    int I;
    unknown uVar16;
    int iVar17;

    if ((uParam0^) != (uParam1^))
    {
        SCRIPT_ASSERT( "PED_ARRAY_INITIALIZE - Array sizes don't match!!", 0 );
        return;
    }
    sub_10866( uParam2, uParam4, 0 );
    if (IS_STRING_NULL( uParam12 ))
    {
        uParam12 = l_U89;
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_10763( (uParam1^)[I] );
        (uParam1^)[I] = sub_11447( ref (uParam0^)[I] );
        if (sub_12114( (uParam1^)[I] ))
        {
            sub_12175( (uParam1^)[I] );
            SET_PED_AI_TEMPLATE( (uParam1^)[I], uParam5 );
            SET_PED_ALERTNESS( (uParam1^)[I], uParam9 );
            SET_PED_ALLOWED_TO_SURRENDER( (uParam1^)[I], 0 );
            sub_12333( (uParam1^)[I], uParam2 );
            if (iParam3 != 0)
            {
                if (iParam3 != -1569615261)
                {
                    uVar16 = sub_8402( (uParam1^)[I], iParam3, uParam8, 0, 0 );
                }
                if (iParam10 != 0)
                {
                    sub_7770( (uParam1^)[I], iParam10, 0, uParam11, 0 );
                }
            }
            else if (I < 10)
            {
                iVar17 = l_U90[I]._fU0;
                if ((iVar17 != -1569615261) AND (iVar17 != 0))
                {
                    sub_8402( (uParam1^)[I], iVar17, l_U90[I]._fU4, 0, 0 );
                }
                if (l_U90[I]._fU8 != 0)
                {
                    sub_7770( (uParam1^)[I], l_U90[I]._fU8, 0, l_U90[I]._fU12, 0 );
                }
            }
            if (bParam6)
            {
                sub_12828( (uParam1^)[I], iParam3 );
            }
            switch (uParam7)
            {
                case 0: break;
                case 1:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 13, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 13, 1 );
                break;
                case 2:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 14, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 14, 1 );
                break;
                case 3:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 12, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 12, 1 );
                break;
            }
        }
        WAIT( 1 );
    }
    sub_13424( uParam1, uParam12 );
    return;
}

void sub_11447(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_996( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_11926( iParam0->_fU40 );
    sub_12006( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_11926(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_12006(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

int sub_12114(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (DOES_PED_EXIST( uParam0 )))
    {
        return 1;
    }
    return 0;
}

void sub_12175(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_12333(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_1101( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_10866( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_10866( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_12828(unknown uParam0, unknown uParam1)
{
    switch (uParam1)
    {
        case -1569615261:
        case 406496141:
        case -862236369:
        case 456708483:
        case -1464892298:
        case 68019059:
        case -612753081:
        case -820634585:
        SET_PED_COMBAT_RANGE_MAX( uParam0, 10.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case 434544317:
        case 1845102363:
        case -168327769:
        case -184942895:
        case 514118749:
        case 1964270085:
        case -691403429:
        case 1478009203:
        case -1404433099:
        case 1194438308:
        SET_PED_COMBAT_RANGE( uParam0, 1 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 20.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case -1013714740:
        case -1074756423:
        case 1308526797:
        case 840671040:
        case 57534114:
        case 724901397:
        case 1992962408:
        SET_PED_COMBAT_RANGE( uParam0, 2 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 30.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case 1224272620:
        case 10648147:
        case 377623895:
        case 319712764:
        case -110877124:
        case -1659006841:
        SET_PED_COMBAT_RANGE( uParam0, 3 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 50.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 5.00000000 );
        break;
    }
    return;
}

void sub_13424(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_13587()
{
    int I;

    sub_10729( ref l_U943 );
    sub_10729( ref l_U980 );
    sub_10866( ref l_U897, 1.00000000, 0 );
    sub_11038();
    sub_11147( -1013714740, 0, 25000, 25000 );
    sub_13665( 0, -184942895, 0, 25000, 25000 );
    sub_13665( 1, 1478009203, 0, 25000, 25000 );
    sub_11292( ref l_U903, ref l_U943, ref l_U897, 0, 1.00000000, "AIT_EXPERT", 0, 0, 25000, 2, 0, 25000, "POOL ATTACK:" );
    sub_11038();
    sub_13845( ref l_U943, l_U846, 1 );
    for ( I = 0; I <= (l_U903 - 1); I++ )
    {
        if (sub_12114( l_U943[I] ))
        {
            SET_PED_CAN_AVOID_DEATH_ZONES( l_U943[I], 0 );
            SET_PED_ALLOWED_TO_SURRENDER( l_U943[I], 0 );
            sub_7770( l_U943[I], -1980065396, 5, 3, 1 );
        }
    }
    sub_10866( ref l_U947, 1.00000000, 0 );
    sub_10866( ref l_U947, 1.00000000, 0 );
    sub_11038();
    sub_11147( -1013714740, 0, 25000, 25000 );
    sub_13665( 0, -184942895, 0, 25000, 25000 );
    sub_11292( ref l_U953, ref l_U980, ref l_U947, 0, 1.00000000, "AIT_EXPERT", 0, 0, 25000, 2, 0, 25000, "POOL ATTACK S2:" );
    sub_11038();
    sub_13845( ref l_U980, l_U846, 1 );
    for ( I = 0; I <= (l_U953 - 1); I++ )
    {
        if (sub_12114( l_U980[I] ))
        {
            SET_PED_CAN_AVOID_DEATH_ZONES( l_U980[I], 0 );
            SET_PED_ALLOWED_TO_SURRENDER( l_U980[I], 0 );
            sub_7770( l_U980[I], -1980065396, 5, 3, 1 );
        }
    }
    return;
}

int sub_13665(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (iParam0 < 10)
    {
        l_U90[iParam0]._fU0 = uParam1;
        l_U90[iParam0]._fU4 = uParam3;
        l_U90[iParam0]._fU8 = uParam2;
        l_U90[iParam0]._fU12 = uParam4;
        return 1;
    }
    return 0;
}

void sub_13845(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_13881( ref (uParam0^)[I], uParam1, uParam2 );
    }
    return;
}

void sub_13881(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (sub_12114( (uParam0^) ))
    {
        RESET_PED_TETHERING( (uParam0^) );
        sub_13920( ref uParam1, (uParam0^), uParam2 );
    }
    return;
}

void sub_13920(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_14391()
{
    int I;

    sub_10729( ref l_U1105 );
    sub_10729( ref l_U1029 );
    sub_10729( ref l_U1157 );
    sub_10866( ref l_U983, 1.00000000, 0 );
    sub_11038();
    sub_11147( -1013714740, 0, 25000, 25000 );
    sub_13665( 0, -184942895, 0, 25000, 25000 );
    sub_13665( 1, -612753081, 0, 25000, 25000 );
    sub_11292( ref l_U989, ref l_U1029, ref l_U983, 0, 1.00000000, "AIT_EXPERT", 0, 0, 25000, 3, 0, 25000, "TENNIS COURT:" );
    sub_11038();
    for ( I = 0; I <= (l_U989 - 1); I++ )
    {
        if (sub_12114( l_U1029[I] ))
        {
            SET_PED_ALLOWED_TO_SURRENDER( l_U1029[I], 0 );
            SET_PED_CAN_AVOID_DEATH_ZONES( l_U1029[I], 0 );
        }
    }
    sub_10866( ref l_U1033, 1.00000000, 0 );
    sub_11038();
    sub_11147( -1013714740, 0, 25000, 25000 );
    sub_13665( 2, -184942895, 0, 25000, 25000 );
    sub_13665( 3, 1478009203, 0, 25000, 25000 );
    sub_11292( ref l_U1039, ref l_U1105, ref l_U1033, 0, 1.00000000, "AIT_EXPERT", 0, 0, 25000, 2, 0, 25000, "CAFE:" );
    sub_11038();
    for ( I = 0; I <= (l_U1039 - 1); I++ )
    {
        if (sub_12114( l_U1105[I] ))
        {
            SET_PED_ALLOWED_TO_SURRENDER( l_U1105[I], 0 );
            SET_PED_CAN_AVOID_DEATH_ZONES( l_U1105[I], 0 );
            SET_PED_COMBAT_MOVEMENT( l_U1105[I], 1 );
            if (I > 1)
            {
                sub_14897( ref l_U1105[I], g_U1378 );
            }
        }
    }
    sub_10866( ref l_U1111, 1.00000000, 0 );
    sub_11038();
    sub_11147( 1478009203, 0, 25000, 25000 );
    sub_13665( 0, -184942895, 0, 25000, 25000 );
    sub_13665( 3, -1013714740, 0, 25000, 25000 );
    sub_11292( ref l_U1117, ref l_U1157, ref l_U1111, 0, 1.00000000, "AIT_EXPERT", 0, 0, 25000, 2, 0, 25000, "CAFE REINF:" );
    sub_11038();
    for ( I = 0; I <= (l_U1117 - 1); I++ )
    {
        if (sub_12114( l_U1157[I] ))
        {
            SET_PED_ALLOWED_TO_SURRENDER( l_U1157[I], 0 );
            SET_PED_CAN_AVOID_DEATH_ZONES( l_U1157[I], 0 );
            SET_PED_COMBAT_MOVEMENT( l_U1157[I], 1 );
        }
    }
    sub_15199( ref l_U1157, g_U1378 );
    return;
}

void sub_14897(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    if (sub_12114( (uParam0^) ))
    {
        SET_ROOM_FOR_PED_BY_NAME( (uParam0^), ref uParam1 );
    }
    return;
}

void sub_15199(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (sub_12114( (uParam0^)[I] ))
        {
            sub_14897( ref (uParam0^)[I], uParam1 );
        }
    }
    return;
}

void sub_15289()
{
    sub_659( "MW", "P_CREATE_FOURTH_FLOOR_PLACEMENTS start", 0 );
    sub_15351();
    l_U1492[0] = sub_15928( -4072149, 2.38000000, 6.71000000, 23.66000000, 0, 0, 2.30000000, 0, 1, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1492[0], "Room_Bar" );
    l_U1492[1] = sub_15928( -4072149, -6.26000000, -3.68000000, 23.64000000, 0, 0, 0.75000000, 0, 1, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1492[1], "Room_Elevator" );
    l_U1492[2] = sub_15928( -4072149, -6.08000000, -3.89000000, 23.64000000, 0, 0, 1.40000000, 0, 1, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1492[2], "Room_Elevator" );
    l_U1501 = sub_15928( -2117698134, -6.58500000, -3.03000000, 23.06860000, 1.20000000, -1.22000000, -0.60000000, 0, 1, 0, 90.00000000 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1501, "Room_Elevator" );
    sub_659( "MW", "P_CREATE_FOURTH_FLOOR_PLACEMENTS end", 0 );
    return;
}

void sub_15351()
{
    sub_659( "CO", "P_CREATE_S_HOT_GG_G3_03", 0 );
    sub_15465( ref g_U830, g_U853, -1771106472, 376282907, -10.34000000, -5.73000000, 22.68000000, 1.50000000, 0.00000000, 5.00000000, "Room_Elevator" );
    sub_15594( ref g_U830 );
    return;
}

void sub_15465(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_659( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_15594(int iParam0)
{
    sub_659( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_15655( iParam0->_fU12 )) == 1)
        {
            sub_659( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_659( "CO", "has never been collected.", 0 );
        }
        if ((sub_15655( iParam0->_fU12 )) == 0)
        {
            sub_15860( iParam0->_fU0 );
            iParam0->_fU0 = sub_15928( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_659( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_659( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_15655(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_15860(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_15928(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_16693()
{
    if (l_U206 != l_U204)
    {
        sub_659( "TEH", "playing music:changed CUR FLAG", 0 );
        sub_16769( l_U204 );
        sub_16769( l_U205 );
        l_U206 = l_U204;
    }
    else if (l_U207 != l_U205)
    {
        sub_659( "TEH", "playing music:changed NEW FLAG", 0 );
        sub_16769( l_U204 );
        sub_16769( l_U205 );
        l_U207 = l_U205;
    }
    switch (l_U204)
    {
        case 1:
        sub_659( "TEH", "playing music: MC_STARTUP", 0 );
        l_U265 = 0;
        l_U204 = 5;
        l_U205 = 5;
        break;
        case 4:
        sub_659( "TEH", "playing music: MC_CHECKPOINT_RESTART_SECOND_FLOOR ", 0 );
        l_U204 = 5;
        l_U205 = 5;
        break;
        case 5:
        if (l_U205 == 5)
        {
            sub_659( "TEH", "playing music: MC_GAMEPLAY_STARTS", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "HOTEL_SONG", "HOTEL_SONG_1", "", 0, 6000, 3000, -1082130432, 0 );
            l_U265 = 0;
            l_U204 = 2;
            l_U205 = 2;
        }
        break;
        case 2:
        if (l_U205 == 2)
        {
            if (l_U265 == 0)
            {
                AUDIO_MUSIC_PRELOAD_ONESHOT( "HOTEL_ONESHOT_16", 0 );
                if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( 0 ))
                {
                    sub_659( "TEH", "playing music: Succesfully preloaded oneshot_10", 0 );
                    l_U265 = 1;
                }
            }
            else
            {
                l_U204 = 3;
            }
        }
        break;
        case 3:
        if (l_U205 == 3)
        {
            if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( 0 ))
            {
                AUDIO_MUSIC_PLAY_ONESHOT();
                sub_659( "TEH", "playing music: Succesfully played oneshot_10", 0 );
                l_U265 = 0;
                l_U204 = 6;
            }
        }
        break;
        case 6:
        if (l_U205 == 6)
        {
            AUDIO_MUSIC_FORCE_TRACK( "HOTEL_SONG", "HOTEL_SONG_1_6", "", 0, 3000, 5000, -1082130432, 0 );
            l_U265 = 0;
            l_U204 = 7;
            l_U205 = 7;
        }
        break;
        case 7:
        if (l_U205 == 7)
        {
            if (l_U265 == 0)
            {
                AUDIO_MUSIC_PRELOAD_ONESHOT( "HOTEL_ONESHOT_11", 0 );
                if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( "HOTEL_ONESHOT_11" ))
                {
                    sub_659( "TEH", "playing music: Sussesfully preloaded oneshot_11", 0 );
                    l_U265 = 1;
                }
            }
            else
            {
                l_U204 = 8;
            }
        }
        break;
        case 8:
        if (l_U205 == 8)
        {
            if (l_U265 == 1)
            {
                if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( 0 ))
                {
                    sub_659( "TEH", "playing music: Succesfully played oneshot_11", 0 );
                    AUDIO_MUSIC_PLAY_ONESHOT();
                    sub_659( "TEH", "playing music: MC_ENTER_TENNIS_COURT ", 0 );
                    AUDIO_MUSIC_FORCE_TRACK( "HOTEL_SONG", "HOTEL_SONG_1_2_6", "", 0, 5000, 6000, -1082130432, 0 );
                    l_U265 = 0;
                    l_U204 = 9;
                }
            }
        }
        break;
        case 9:
        if (l_U205 == 9)
        {
            AUDIO_MUSIC_FORCE_TRACK( "HOTEL_SONG", "HOTEL_SONG_1", "", 0, 6000, 5000, -1082130432, 0 );
            l_U204 = 10;
        }
        break;
    }
    return;
}

void sub_16769(unknown uParam0)
{
    return;
}

void sub_18091()
{
    if ((sub_18113()) || (IS_PED_DEAD( sub_6151() )))
    {
        l_U436 = 2;
        sub_659( "MW", "Player died on hotel_fourth_floor OR Restart", 0 );
        if (sub_18610())
        {
            if ((g_U856[6]._fU40 != 4) AND (g_U856[6]._fU40 != 0))
            {
                sub_659( "GA", "Shutting down script for 5th Construction.", 0 );
                g_U996 = 0;
                sub_18741( ref g_U856[6] );
                SET_EXITFLAG_FOR_SCRIPT( g_U856[6]._fU32 );
            }
        }
        else
        {
            while ((sub_18800( 0 )) == 0)
            {
                WAIT( 0 );
            }
            if ((g_U856[6]._fU40 != 4) AND (g_U856[6]._fU40 != 0))
            {
                sub_659( "GA", "Shutting down script for 5th Construction.", 0 );
                g_U996 = 0;
                sub_18741( ref g_U856[6] );
                SET_EXITFLAG_FOR_SCRIPT( g_U856[6]._fU32 );
            }
            while (IS_PED_DEAD( sub_6151() ))
            {
                WAIT( 0 );
            }
        }
        if ((IS_BULLET_CAMERA_RUNNING( 0 )) AND (IS_DEATH_PANEL_WIPE_ALLOWED() == 0))
        {
            sub_20211( 0 );
        }
        if (NOT (IS_PED_DEAD( sub_6151() )))
        {
            if (GET_IS_PED_FORCED_TO_WALK( sub_6151() ))
            {
                SET_PED_FORCED_TO_WALK( sub_6151(), 0 );
            }
        }
        sub_20337();
        END_CONTEXT( "HOTEL_SWIMMING_POOL" );
        sub_21823( ref l_U446, sub_6151() );
        l_U441 = 0;
        l_U436 = 3;
        sub_1952();
        sub_5663();
        sub_10705();
        sub_22224( ref g_U1582, 0 );
        sub_22224( ref g_U1589, 0 );
        l_U436 = 0;
        l_U437 = 3;
        l_U204 = 4;
    }
    return;
}

int sub_18113()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_6151() )))
        {
            SET_PED_FORCED_TO_WALK( sub_6151(), 0 );
            SET_PLAYER_FORCED_AIM( sub_6173(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_6173(), 1 );
            if ((IS_PED_VISIBLE( sub_6151() )) == 0)
            {
                SET_PED_VISIBLE( sub_6151(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_18610()
{
    return g_U648;
}

void sub_18741(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

int sub_18800(int iParam0)
{
    iParam0 = 1;
    switch (l_U417)
    {
        case 0:
        if (NOT (sub_18861( ref l_U419 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_6151() )))
            {
                l_U418 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_18971( ref l_U419, l_U418, 1, 1 );
            sub_19107( ref l_U419 );
        }
        if (sub_19227( ref l_U419 ))
        {
            sub_659( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_6151() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_6173() )))
            {
                SET_PLAYER_CONTROL( sub_6173(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U417 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U417 = 2;
            }
            else
            {
                l_U417 = 3;
            }
        }
        break;
        case 2:
        sub_659( "NS", "Player will QUIT", 0 );
        sub_19714();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_659( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_19714();
        return 1;
        break;
    }
    return 0;
}

int sub_18861(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_18971(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_19107(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_19227(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_19714()
{
    sub_659( "NS", "P_PostFailRetryCleanup", 0 );
    sub_5848( ref l_U419 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_6173() )))
    {
        SET_PLAYER_CONTROL( sub_6173(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U416 = 0;
    l_U416 = l_U416;
    l_U417 = 0;
    return;
}

void sub_20211(unknown uParam0)
{
    if ((IS_SCREEN_FADING_OUT() == 0) AND (IS_SCREEN_FADED_OUT() == 0))
    {
        DO_SCREEN_FADE_OUT( uParam0 );
        while (IS_SCREEN_FADED_OUT() == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_20337()
{
    sub_659( "MW", "P_CLEANUP_FOURTH_FLOOR start", 0 );
    ISEQ_UNREGISTER_ENTITY( 607624886, "cp1" );
    ISEQ_UNREGISTER_ENTITY( 607624886, "cp2" );
    ISEQ_UNREGISTER_ENTITY( 607624886, "cp3" );
    sub_20449( 607624886, 0 );
    ISEQ_UNREGISTER_ENTITY( 1632315867, "max" );
    sub_20449( 1632315867, 0 );
    sub_20449( -905531099, 0 );
    ENABLE_WALLA_ZONE( "S_HOTEL_WZ_4TH_FLOOR_DECK", 0 );
    if (((GET_SCRIPT_STREAM_STATE( "S_HOTEL_PIANO", 0 )) == 2) || ((GET_SCRIPT_STREAM_STATE( "S_HOTEL_PIANO", 0 )) == 1))
    {
        STOP_SCRIPT_STREAM( 0 );
    }
    sub_20795( ref l_U1277, 0 );
    sub_10729( ref l_U893 );
    sub_10729( ref l_U943 );
    sub_10729( ref l_U980 );
    sub_10729( ref l_U1029 );
    sub_10729( ref l_U1105 );
    sub_10729( ref l_U1157 );
    sub_21560( ref l_U1492 );
    sub_15860( l_U1501 );
    sub_15860( g_U830._fU0 );
    sub_21644( l_U1505 );
    sub_21644( l_U1183 );
    FREEZE_TIME_OF_DAY( 12, 0 );
    sub_21707( ref l_U1467 );
    sub_659( "MW", "P_CLEANUP_FOURTH_FLOOR end", 0 );
    return;
}

void sub_20449(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_20795(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_5096( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_5096( iParam0, 0 );
        sub_20866( iParam0, 0 );
        if ((IS_PED_DEAD( sub_6151() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_6151() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_6151(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_20866(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_21017( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_21017(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_21078( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_21078( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_21078(int iParam0)
{
    if (((IS_PED_DEAD( sub_6151() )) == 0) AND ((IS_PLAYER_DEAD( sub_6173() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_6151() )) == 1) || (((IS_PED_GETTING_UP( sub_6151() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_6151() )) == 1) || (((IS_PED_IN_COVER( sub_6151() )) == 1) || (((IS_PED_DUCKING( sub_6151() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_6151() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_21560(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_15860( (uParam0^)[I] );
    }
    return;
}

void sub_21644(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_21707(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

void sub_21823(unknown uParam0, unknown uParam1)
{
    sub_6217( uParam0, uParam1 );
    sub_21844( uParam0 );
    return;
}

void sub_21844(int iParam0)
{
    unknown uVar3;

    sub_659( "BSW", "RESTORE_WATERBOTTLE_STATE start", 0 );
    uVar3 = sub_21900();
    if (GET_DOES_WEAPON_EXIST( uVar3 ))
    {
        SET_SUPPRESSOR_DAMAGE_LEVEL( uVar3, iParam0->_fU48 );
    }
    return;
}

void sub_21900()
{
    boolean bVar2;
    unknown Result;

    sub_659( "BSW", "DOES_PLAYER_HAVE_WATERBOTTLE start", 0 );
    bVar2 = false;
    if (sub_21962())
    {
        Result = GET_WEAPON_FROM_SLOT( sub_6151(), 0 );
        if (GET_DOES_WEAPON_EXIST( Result ))
        {
            if ((GET_WEAPON_TYPE( Result )) == 811797242)
            {
                bVar2 = true;
            }
        }
        if (NOT bVar2)
        {
            Result = GET_WEAPON_FROM_SLOT( sub_6151(), 1 );
            if (GET_DOES_WEAPON_EXIST( Result ))
            {
                if ((GET_WEAPON_TYPE( Result )) == 811797242)
                {
                    bVar2 = true;
                }
            }
        }
    }
    if (bVar2)
    {
        return Result;
        break;
    }
    return nil;
}

int sub_21962()
{
    if (sub_12114( sub_6151() ))
    {
        return 1;
    }
    return 0;
}

void sub_22224(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_22236( iParam0 )) == 0)
    {
        sub_22302( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

int sub_22236(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_22302(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_22483(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (sub_12114( (uParam0^)[I] ))
        {
            uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( (uParam0^)[I] )};
            if (uVar4._fU8 < 19.00000000)
            {
                sub_659( "TEH", uParam1, 0 );
                sub_16769( I );
                SCRIPT_ASSERT( "Guy is falling without permission! see script log ", 0 );
                sub_10763( (uParam0^)[I] );
            }
        }
    }
    return;
}

void sub_22784()
{
    unknown uVar2;
    int iVar3;
    int I;
    unknown uVar5;

    if (l_U436 == 0)
    {
        switch (l_U437)
        {
            case 0:
            sub_1952();
            sub_5663();
            sub_22946( l_U285, 0 );
            sub_23195( 0 );
            l_U437 = 1;
            break;
            case 1:
            if (g_U1002)
            {
                sub_23354( 5 );
                sub_862( 0 );
                sub_22946( l_U285, 1 );
                sub_23195( 1 );
                l_U437 = 2;
                break;
            }
            return;
            case 2:
            if (sub_23692( 1, 0, 0 ))
            {
                sub_862( 1 );
                sub_10705();
                l_U437 = 3;
            }
            break;
            case 3:
            if (sub_27068())
            {
                sub_31584( ref l_U943, 0 );
                sub_31584( ref l_U980, 0 );
                sub_31584( ref l_U1029, 0 );
                sub_31584( ref l_U1105, 0 );
                sub_31584( ref l_U1157, 0 );
                SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
                l_U437 = 4;
            }
            sub_31734();
            break;
            case 4:
            sub_31734();
            if (l_U439 == -1)
            {
                START_CONTEXT( "HOTEL_SWIMMING_POOL" );
                l_U437 = 5;
            }
            break;
            case 5:
            if (((sub_35682( ref l_U893 )) == 0) || (sub_35537( ref l_U489, 0 )))
            {
                sub_35770();
                l_U1162 = 1;
                l_U437 = 6;
                ENABLE_WALLA_ZONE( "S_HOTEL_WZ_4TH_FLOOR_DECK", 1 );
            }
            if ((SCRIPT_VAR_EXISTS( "SP_SV_OUT_OF_POOL" )) == 0)
            {
                SCRIPT_VAR_ADD_INT( "SP_SV_OUT_OF_POOL" );
            }
            if (sub_36314( l_U762 ))
            {
                SCRIPT_VAR_SET_INT( "SP_SV_OUT_OF_POOL", 0 );
            }
            else
            {
                SCRIPT_VAR_SET_INT( "SP_SV_OUT_OF_POOL", 1 );
            }
            break;
            case 6:
            if (sub_35537( ref l_U489, 0 ))
            {
                l_U1162 = 1;
                sub_36437();
                l_U437 = 7;
            }
            else if (sub_35537( ref l_U510, 0 ))
            {
                sub_36437();
                l_U437 = 7;
            }
            if (sub_36314( l_U762 ))
            {
                SCRIPT_VAR_SET_INT( "SP_SV_OUT_OF_POOL", 0 );
            }
            else
            {
                SCRIPT_VAR_SET_INT( "SP_SV_OUT_OF_POOL", 1 );
            }
            break;
            case 7:
            if (sub_35537( ref l_U531, 0 ))
            {
                END_CONTEXT( "HOTEL_SWIMMING_POOL" );
                sub_36851( ref l_U943 );
                for ( I = 0; I <= (l_U943 - 1); I++ )
                {
                    if (sub_12114( l_U943[I] ))
                    {
                        SET_PED_COMBAT_ATTRIBUTES( l_U943[I], 8192, 1 );
                    }
                }
                sub_36851( ref l_U980 );
                for ( I = 0; I <= (l_U980 - 1); I++ )
                {
                    if (sub_12114( l_U980[I] ))
                    {
                        SET_PED_COMBAT_ATTRIBUTES( l_U980[I], 8192, 1 );
                    }
                }
                l_U205 = 8;
                sub_37078();
                sub_37516();
                l_U437 = 8;
            }
            break;
            case 8:
            if (sub_35537( ref l_U552, 0 ))
            {
                sub_38324();
                g_U996 = 1;
                l_U437 = 9;
                sub_659( "GA", "hotEntState = HOT_ENT_CAFE", 0 );
            }
            break;
            case 9:
            sub_38779();
            if (((sub_35682( ref l_U1105 )) <= 5) || (sub_35537( ref l_U573, 0 )))
            {
                sub_41900();
                l_U437 = 10;
                sub_659( "GA", "hotEntState = HOT_ENT_CAFE_REINF", 0 );
            }
            break;
            case 10:
            sub_38779();
            if (((sub_35682( ref l_U1105 )) <= 2) || (sub_35537( ref l_U594, 0 )))
            {
                sub_42070();
                l_U437 = 12;
                sub_659( "GA", "hotEntState = HOT_ENT_FINISH_BATTLE", 0 );
            }
            break;
            case 12:
            sub_38779();
            iVar3 = sub_35682( ref l_U1105 );
            iVar3 += sub_35682( ref l_U1157 );
            iVar3 += sub_35682( ref l_U1029 );
            iVar3 += sub_35682( ref l_U943 );
            iVar3 += sub_35682( ref l_U980 );
            iVar3 += sub_35682( ref l_U893 );
            if ((l_U442 == 0) AND (iVar3 == 1))
            {
                sub_659( "TEH", "Last guy - getting bullet cam", 0 );
                uVar2 = nil;
                uVar2 = sub_42500( ref l_U1105 );
                if (NOT (sub_12114( uVar2 )))
                {
                    sub_659( "TEH", "Last guy - pi4floor_cafe_Reinf", 0 );
                    uVar2 = sub_42500( ref l_U1157 );
                }
                if (NOT (sub_12114( uVar2 )))
                {
                    sub_659( "TEH", "Last guy - pi4floor_TennisCourt", 0 );
                    uVar2 = sub_42500( ref l_U1029 );
                }
                if (NOT (sub_12114( uVar2 )))
                {
                    sub_659( "TEH", "Last guy - pi4floor_PoolAttack", 0 );
                    uVar2 = sub_42500( ref l_U943 );
                }
                if (NOT (sub_12114( uVar2 )))
                {
                    sub_659( "TEH", "Last guy - pi4floor_PoolAttack_S2", 0 );
                    uVar2 = sub_42500( ref l_U980 );
                }
                if (NOT (sub_12114( uVar2 )))
                {
                    sub_659( "TEH", "Last guy -pi4floor_Vig_03", 0 );
                    uVar2 = sub_42500( ref l_U893 );
                }
                sub_659( "TEH", "Last guy - pi4floor_cafe", 0 );
                l_U442 = 1;
            }
            else if (iVar3 == 0)
            {
                sub_659( "TEH", "no guys left", 0 );
                sub_20795( ref l_U1277, 1 );
                sub_38203( ref l_U1188, 1 );
                sub_1461( -905531099, 0 );
                sub_1687( "S_HOTEL_PIANO", 0, 0 );
                l_U437 = 13;
                l_U205 = 9;
                sub_43132( ref l_U1492, ref l_U1496 );
                sub_659( "GA", "hotEntState = HOT_ENT_EXIT_SECTION", 0 );
            }
            break;
            case 13:
            if (sub_39161( ref l_U1277 ))
            {
                l_U1506 = 3;
            }
            sub_43388();
            sub_38779();
            sub_45809();
            if (NOT l_U1500)
            {
                if (sub_46407( "SHOT_MXFNDPLS", ref l_U1492, ref l_U1496 ))
                {
                    sub_659( "SBA", "Playing Pill monologue for puiKillHousePainkillers", "..." );
                    l_U1500 = 1;
                }
            }
            if (NOT IS_LAST_MAN_STANDING_ACTIVE())
            {
                if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
                {
                    if (sub_36314( l_U636 ))
                    {
                        uVar5 = GET_WEAPON_FROM_HAND( sub_6151(), 0, 0 );
                        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
                        {
                            if ((sub_25790( uVar5 )) == 1)
                            {
                                sub_24469( 0 );
                            }
                        }
                    }
                    if (sub_46768( l_U636, l_U615, 1 ))
                    {
                        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
                        l_U437 = 14;
                    }
                    else if (l_U486 == 0)
                    {
                        sub_46109( "SHOT_LSTENDD", ref l_U1401 );
                        sub_45201( ref l_U1431, 50000 );
                        l_U486 = 1;
                    }
                    if (NOT l_U1476)
                    {
                        if (sub_19227( ref l_U1431 ))
                        {
                            if ((l_U1506 == 0) AND (NOT sub_45938()))
                            {
                                sub_46109( "SHOT_MXDDLK", ref l_U1411 );
                                l_U1476 = 1;
                            }
                            else
                            {
                                sub_45201( ref l_U1431, 50000 );
                            }
                        }
                    }
                }
            }
            break;
            case 14: break;
        }
    }
    return;
}

void sub_22946(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_23195(unknown uParam0)
{
    sub_659( "TEH", "LOAD_HOTEL_CUT_12_02_ASSETS", "***" );
    sub_996( 547887525, uParam0 );
    sub_996( 466468872, uParam0 );
    sub_996( 75711909, uParam0 );
    sub_996( 1742372968, uParam0 );
    sub_996( -212388889, uParam0 );
    sub_1461( 1632315867, uParam0 );
    return;
}

void sub_23354(unknown uParam0)
{
    int iVar3;
    string sVar4;

    switch (uParam0)
    {
        case 20:
        case 0:
        iVar3 = 20;
        sVar4 = "SUNNY";
        break;
        case 1:
        iVar3 = 12;
        sVar4 = "SUNNY";
        break;
        case 2:
        case 3:
        case 4:
        iVar3 = 9;
        sVar4 = "SUNNY";
        break;
        case 5:
        iVar3 = 12;
        sVar4 = "SUNNY";
        break;
        case 6:
        case 7:
        case 8:
        case 9:
        iVar3 = 9;
        sVar4 = "SUNNY_WINDY";
        break;
        case 10:
        iVar3 = 12;
        sVar4 = "SUNNY_WINDY";
        break;
        default:
        iVar3 = 12;
        sVar4 = "SUNNY";
        break;
    }
    SET_TIME_OF_DAY( iVar3, 0 );
    FREEZE_TIME_OF_DAY( iVar3, 0 );
    SET_WEATHER_TYPE_NOW_PERSIST( sVar4 );
    SET_WEATHER_TRANSITION_IMMEDIATE( 1 );
    return;
}

void sub_23692(boolean bParam0, boolean bParam1, unknown uParam2)
{
    int Result;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    Result = 0;
    uVar8 = GET_INTERIOR_AT_COORDS( -5.20781100, 1.24380300, 23.75783000 );
    if (IS_STRING_NULL( uParam2 ))
    {
        uParam2 = l_U285;
    }
    switch (l_U266)
    {
        case 1:
        sub_659( "RJM", "PLAY_HOTEL_CUT_12_02 start", "*****" );
        sub_23864( 1, 0, 0, 1 );
        sub_22946( uParam2, 1 );
        sub_1461( 1632315867, 1 );
        sub_23195( 1 );
        sub_24048();
        sub_24399( ref l_U286 );
        if (bParam0)
        {
            CUTSCENE_REGISTER_ISEQ( 1632315867 );
        }
        l_U414 = 0;
        l_U266 = 2;
        break;
        case 2:
        if (bParam1)
        {
            START_CUTSCENE_CAPTURE( uParam2 );
        }
        CUTSCENE_ENABLE_SKIP( 0 );
        START_SEAMLESS_CUTSCENE();
        l_U266 = 3;
        break;
        case 3:
        l_U266 = 4;
        break;
        case 4:
        if (HAS_CUTSCENE_FINISHED())
        {
            sub_25698();
            CAMERA_PLAY_ANIMATED( "LEVEL_S_HOTEL_CP_04", "B_OUT_MID_06_HOTEL_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
            if (IS_SCREEN_FADED_OUT())
            {
                SET_INTERIOR_ACTIVE( uVar8, 1, 0 );
                LOAD_SCENE_FOR_ROOM_BY_KEY( uVar8, GET_HASH_KEY( ref g_U1370 ) );
                LOAD_SCENE( -5.20781100, 1.24380300, 23.75783000 );
            }
            l_U266 = 5;
        }
        else if (NOT l_U414)
        {
            if (GET_CUTSCENE_TIME() > 60)
            {
                sub_659( "RJM", "Setting 12_02 models as no longer needed", 0 );
                l_U414 = 1;
            }
        }
        break;
        case 5:
        if (bParam1)
        {
            STOP_CUTSCENE_CAPTURE();
        }
        Result = 1;
        sub_10729( ref l_U286 );
        sub_26441();
        if (NOT bParam0)
        {
            sub_26699( 1, 1 );
        }
        l_U266 = 0;
        sub_659( "RJM", "PLAY_HOTEL_CUT_12_02 end", "*****" );
        break;
        case 0:
        l_U266 = 1;
        break;
    }
    return Result;
}

void sub_23864(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_6151() )))
        {
            SET_PLAYER_CONTROL( sub_6173(), 0, uParam2 );
            SET_PED_DUCKING( sub_6151(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_6151() );
            }
            SET_PED_INVINCIBLE( sub_6151(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_24048()
{
    int I;

    sub_3662( ref l_U296[0], 0, 0, 0, 0, -1929099819, 26, 6, 0, 0, 0 );
    sub_3662( ref l_U296[1], 0, 0, 0, 0, 415659566, 26, 6, 0, 0, 0 );
    sub_3662( ref l_U296[2], 0, 0, 0, 0, -723071531, 26, 6, 0, 0, 0 );
    sub_3662( ref l_U296[3], 0, 0, 0, 0, -1039118240, 26, 6, 0, 0, 0 );
    sub_3662( ref l_U296[4], 0, 0, 0, 0, -1761435522, 26, 6, 0, 0, 0 );
    sub_3662( ref l_U296[5], 0, 0, 0, 0, 2050789585, 26, 6, 0, 0, 0 );
    sub_3662( ref l_U296[6], 0, 0, 0, 0, 1526704145, 26, 6, 0, 0, 0 );
    sub_3662( ref l_U296[7], 0, 0, 0, 0, -907256100, 26, 6, 0, 0, 0 );
    sub_3662( ref l_U296[8], 0, 0, 0, 0, 1374765765, 26, 6, 0, 0, 0 );
    for ( I = 0; I <= (l_U286 - 1); I++ )
    {
        l_U286[I] = sub_11447( ref l_U296[I] );
        WAIT( 0 );
    }
    return;
}

void sub_24399(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    sub_659( "RJM", "REGISTER_PEDS_HOTEL_CUT_12_02", "***" );
    if (sub_21962())
    {
        sub_24469( 1 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_6151(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( sub_6151(), 0, 0 ), "W_PI_Clt1911_Aa_H", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_SLOT( sub_6151(), 2 ), "W_AR_97LC_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( sub_6151(), g_U1020[5], g_U1123[5] );
        CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "GenCover", "D03F5BFC_7539FBC9_Corner1", 1, 1 );
        CUTSCENE_SET_COVER_CAMERA_DIRECTION( g_U1158[5], g_U1193[5] );
        ISEQ_REGISTER_ENTITY( 1632315867, "max", sub_6151(), 0 );
    }
    REGISTER_HIDE_ENTITY_AT_POSITION( 951250609, 2.51825000, 20.70648000, 18.94560000 );
    sub_25313( ref (uParam0^)[0], "Sero_Unif_3" );
    sub_25313( ref (uParam0^)[1], "M_Hotl_Pris_A" );
    sub_25313( ref (uParam0^)[2], "M_Hotl_Pris_A^1" );
    sub_25313( ref (uParam0^)[3], "M_Hotl_Pris_A^2" );
    sub_25313( ref (uParam0^)[4], "M_Hotl_Pris_A^3" );
    sub_25313( ref (uParam0^)[5], "M_Hotl_Pris_A^4" );
    sub_25313( ref (uParam0^)[6], "F_Hotl_Pris_A" );
    sub_25313( ref (uParam0^)[7], "F_Hotl_Pris_A^1" );
    sub_25313( ref (uParam0^)[8], "F_Hotl_Pris_A^2" );
    return;
}

void sub_24469(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_6151() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND( sub_6151(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if (((sub_24549( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 = sub_24758();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_6151(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

int sub_24549(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_24758()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_6151() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_6151(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_24549( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_6151(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_6151(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_6151(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

void sub_25313(unknown uParam0, unknown uParam1)
{
    if (sub_12114( (uParam0^) ))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( (uParam0^), uParam1, 0 );
        SET_PED_NAME_DEBUG( (uParam0^), uParam1 );
    }
    return;
}

void sub_25698()
{
    unknown uVar2;

    if ((IS_PED_DEAD( sub_6151() )) == 0)
    {
        uVar2 = sub_25727();
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            REMOVE_PED_WEAPON( sub_6151(), uVar2 );
        }
    }
    return;
}

int sub_25727()
{
    unknown Result;
    unknown uVar3;

    if ((IS_PED_DEAD( sub_6151() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_6151(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_25790( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_6151(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
    }
    return 0;
}

int sub_25790(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_26441()
{
    sub_659( "RJM", "UNLOAD_HOTEL_CUT_12_02_ASSETS", "***" );
    sub_26505( 547887525 );
    sub_26505( 466468872 );
    sub_26505( 75711909 );
    sub_26505( 1742372968 );
    sub_26505( -212388889 );
    return;
}

void sub_26505(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_1101( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_26699(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_6151() )))
    {
        SET_PLAYER_CONTROL( sub_6173(), 1, 0 );
        SET_PED_INVINCIBLE( sub_6151(), 0 );
        if (bParam0)
        {
            sub_26780();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_26780()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_6151() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_6151(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_6151(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_6151(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_6151(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_27068()
{
    int Result;

    Result = 0;
    switch (l_U438)
    {
        case 0:
        sub_23864( 1, 0, 0, 1 );
        g_U855 = 5;
        if (NOT l_U446._fU0)
        {
            sub_27229( ref l_U446, g_U855, sub_6151(), g_U1020[g_U855], g_U1123[g_U855], g_U1158[g_U855], g_U1193[g_U855], l_U441 );
        }
        sub_659( "bsw", "HANDLE_MID_06_BLENDOUT - BLENDOUT_START", 0 );
        if ((ISEQ_QUERY_STATE( 1632315867, 3 )) == 0)
        {
            sub_659( "bsw", "starting HANDLE_MID_06_BLENDOUT WITHOUT the cutscene", 0 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_HOTEL_CP_04", "B_OUT_MID_06_HOTEL_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
            sub_1461( 1632315867, 1 );
            ISEQ_REGISTER_ENTITY( 1632315867, "max", sub_6151(), 0 );
            ISEQ_START( 1632315867 );
            SNAP_PLAYER_TO_COVERPOINT( sub_6173(), "GenCover", "D03F5BFC_7539FBC9_Corner1", 1 );
        }
        DO_SCREEN_FADE_IN( 0 );
        l_U438 = 1;
        break;
        case 1:
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1158[5], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1193[5], 1065353216, 0 );
        l_U438 = 2;
        break;
        case 2:
        if (l_U204 == 3)
        {
            l_U205 = 3;
        }
        l_U438 = 3;
        break;
        case 3:
        if (l_U204 == 3)
        {
            l_U205 = 3;
        }
        if ((CAMERA_ANIMATED_CURRENT_TIME() + 1) >= (CAMERA_ANIMATED_LENGTH( "LEVEL_S_HOTEL_CP_04", "B_OUT_MID_06_HOTEL_CAM" )))
        {
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1158[5], 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1193[5], 1065353216, 0 );
            CAMERA_FREEZE_FRAME( 1, 500, 0, 0 );
            CAMERA_ANIMATED_STOP( 0, 0 );
            l_U438 = 5;
        }
        break;
        case 5:
        Result = 1;
        sub_26699( 1, 1 );
        break;
    }
    return Result;
}

void sub_27229(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_27241( uParam0 );
    sub_27358( uParam0, uParam1, uParam2, uParam3, uParam6, uParam7, uParam8, uParam9 );
    return;
}

void sub_27241(int iParam0)
{
    unknown uVar3;

    sub_659( "BSW", "SAVE_WATERBOTTLE_STATE start", 0 );
    uVar3 = sub_21900();
    if (GET_DOES_WEAPON_EXIST( uVar3 ))
    {
        iParam0->_fU48 = GET_SUPPRESSOR_DAMAGE_LEVEL( uVar3 );
    }
    return;
}

void sub_27358(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_659( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_659( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_9056( iParam1 );
        sub_27617( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_28068( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_28068( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_28300( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_28068( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_28300( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_28300( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_28068( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_28300( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_28300( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_28300( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_28068( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_28300( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_28300( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_28300( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_28300( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_29858( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_659( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_27617(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_6433( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_659( "TEH", "Ending context", 0 );
        sub_659( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_28068(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_28300(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_29858(int iParam0)
{
    sub_1101( "CHECKPOINT DATA" );
    sub_29897( iParam0->_fU4 );
    sub_29920( iParam0->_fU16 );
    sub_29920( iParam0->_fU20 );
    sub_29920( iParam0->_fU24 );
    sub_16769( iParam0->_fU28 );
    sub_16769( iParam0->_fU56 );
    sub_16769( iParam0->_fU60 );
    sub_16769( iParam0->_fU64 );
    sub_16769( iParam0->_fU68 );
    sub_16769( iParam0->_fU72 );
    sub_16769( iParam0->_fU76 );
    sub_16769( iParam0->_fU80 );
    sub_16769( iParam0->_fU84 );
    sub_16769( iParam0->_fU88 );
    sub_16769( iParam0->_fU92 );
    sub_29920( iParam0->_fU32 );
    sub_16769( iParam0->_fU36 );
    sub_16769( iParam0->_fU40 );
    sub_16769( iParam0->_fU44 );
    sub_29920( iParam0->_fU136 );
    sub_30155( iParam0->_fU140 );
    sub_16769( iParam0->_fU52 );
    sub_1101( "---nRightHolsterAttachmentEnabled: " );
    sub_16769( iParam0->_fU96 );
    sub_1101( "---nRightHolsterAttachmentToggled: " );
    sub_16769( iParam0->_fU100 );
    sub_1101( "---nLeftHolsterAttachmentEnabled: " );
    sub_16769( iParam0->_fU104 );
    sub_1101( "---nLeftHolsterAttachmentToggled: " );
    sub_16769( iParam0->_fU108 );
    sub_1101( "---nRifleHolsterAttachmentEnabled: " );
    sub_16769( iParam0->_fU112 );
    sub_1101( "---nRifleHolsterAttachmentToggled: " );
    sub_16769( iParam0->_fU116 );
    sub_1101( "---nRightHandAttachmentEnabled: " );
    sub_16769( iParam0->_fU120 );
    sub_1101( "---nRightHandAttachmentToggled: " );
    sub_16769( iParam0->_fU124 );
    sub_1101( "---nLeftHandAttachmentEnabled: " );
    sub_16769( iParam0->_fU128 );
    sub_1101( "---nLeftHandAttachmentToggled: " );
    sub_16769( iParam0->_fU132 );
    sub_16769( l_U1 );
    sub_16769( 144 );
    return;
}

void sub_29897(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_29920(unknown uParam0)
{
    return;
}

void sub_30155(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_31584(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_31619( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_31619(unknown uParam0, unknown uParam1)
{
    if (sub_12114( uParam0 ))
    {
        SET_PED_VISIBLE( uParam0, uParam1 );
    }
    return;
}

void sub_31734()
{
    unknown uVar2;
    int iVar3;
    unknown uVar4;

    if (l_U483 == 0)
    {
        if ((ISEQ_QUERY_ENTITY_ANIMATION_PHASE( 607624886, "CP1", "VIGNETTE_A" )) > 0.44000000)
        {
            sub_659( "MW", "Vig 03 Bag pickup phase", 0 );
            sub_21644( l_U1505 );
            sub_8402( l_U893[0], -184942895, 25000, 0, 0 );
            sub_8402( l_U893[1], -1013714740, 25000, 0, 0 );
            SET_PED_PROP_INDEX( l_U893[0], 12, 0, 0, 255 );
            l_U483 = 1;
        }
    }
    if (l_U484 == 0)
    {
        if ((ISEQ_QUERY_ENTITY_ANIMATION_PHASE( 607624886, "CP1", "VIGNETTE_A" )) > 0.90000000)
        {
            if (l_U483 == 1)
            {
                sub_31986();
            }
            if (sub_12114( l_U893[0] ))
            {
                SET_PED_ALERTNESS( l_U893[0], 4 );
            }
            if (sub_12114( l_U893[1] ))
            {
                SET_PED_ALERTNESS( l_U893[1], 4 );
            }
            if (sub_12114( l_U893[2] ))
            {
                SET_PED_ALERTNESS( l_U893[2], 4 );
            }
            l_U484 = 1;
        }
    }
    if (l_U485 == 0)
    {
        if ((ISEQ_QUERY_ENTITY_ANIMATION_PHASE( 607624886, "CP1", "VIGNETTE_A" )) >= 0.95000000)
        {
            if (sub_12114( l_U893[0] ))
            {
                SET_PED_COMBAT_ATTRIBUTES( l_U893[0], 131072, 1 );
                TASK_COMBAT_PED( l_U893[0], sub_6151() );
            }
            if (sub_12114( l_U893[1] ))
            {
                SET_PED_COMBAT_ATTRIBUTES( l_U893[1], 131072, 1 );
                TASK_COMBAT_PED( l_U893[1], sub_6151() );
            }
            if (sub_12114( l_U893[2] ))
            {
                SET_PED_COMBAT_ATTRIBUTES( l_U893[2], 131072, 1 );
                TASK_COMBAT_PED( l_U893[2], sub_6151() );
            }
            l_U485 = 1;
        }
    }
    iVar3 = 0;
    switch (l_U439)
    {
        case 0:
        sub_1461( 607624886, 1 );
        ISEQ_REGISTER_ENTITY( 607624886, "cp1", l_U893[0], 0 );
        ISEQ_REGISTER_ENTITY( 607624886, "cp2", l_U893[1], 0 );
        ISEQ_REGISTER_ENTITY( 607624886, "cp3", l_U893[2], 0 );
        sub_32982();
        ISEQ_START( 607624886 );
        WAIT( 0 );
        l_U439 = 3;
        break;
        case 3:
        if ((ISEQ_QUERY_ENTITY_ANIMATION_PHASE( 607624886, "cp1", "VIGNETTE_A" )) > 0.90000000)
        {
            if (sub_12114( l_U893[0] ))
            {
                SET_PED_ALERTNESS( l_U893[0], 4 );
            }
            if (sub_12114( l_U893[1] ))
            {
                SET_PED_ALERTNESS( l_U893[1], 4 );
            }
            if (sub_12114( l_U893[2] ))
            {
                SET_PED_ALERTNESS( l_U893[2], 4 );
            }
        }
        if ((ISEQ_QUERY_ENTITY_ANIMATION_PHASE( 607624886, "cp1", "VIGNETTE_A" )) >= 0.95000000)
        {
            if (sub_12114( l_U893[0] ))
            {
                sub_34562( ref l_U893[0] );
                TASK_COMBAT_PED( l_U893[0], sub_6151() );
            }
            if (sub_12114( l_U893[1] ))
            {
                sub_34562( ref l_U893[1] );
                TASK_COMBAT_PED( l_U893[1], sub_6151() );
            }
            if (sub_12114( l_U893[2] ))
            {
                sub_34562( ref l_U893[2] );
                TASK_COMBAT_PED( l_U893[2], sub_6151() );
            }
        }
        if (sub_12114( l_U893[0] ))
        {
            if (sub_34807( l_U893[0], 58, 3 ))
            {
                REMOVE_ALL_PED_WEAPONS( l_U893[0] );
                sub_8402( l_U893[0], -184942895, 25000, 0, 0 );
                l_U443 = 1;
            }
        }
        if (sub_12114( l_U893[1] ))
        {
            if (sub_34807( l_U893[1], 58, 3 ))
            {
                REMOVE_ALL_PED_WEAPONS( l_U893[1] );
                sub_8402( l_U893[1], -1013714740, 25000, 0, 0 );
                l_U444 = 1;
            }
        }
        if (NOT l_U445)
        {
            if (sub_12114( l_U893[2] ))
            {
                REMOVE_ALL_PED_WEAPONS( l_U893[2] );
                sub_8402( l_U893[2], -1013714740, 25000, 0, 0 );
                l_U445 = 1;
            }
        }
        if (((ISEQ_QUERY_ENTITY_STATE( 607624886, "cp3", 3 )) == 0) || (((ISEQ_QUERY_ENTITY_STATE( 607624886, "cp2", 3 )) == 0) || ((ISEQ_QUERY_ENTITY_STATE( 607624886, "cp1", 3 )) == 0)))
        {
            l_U205 = 6;
            if (l_U483 == 1)
            {
                sub_31986();
            }
            sub_659( "TEH", "S_HOTEL_VIG03: Iseq completed", "***" );
            l_U1161 = 1;
            l_U439 = 6;
        }
        break;
        case 6:
        sub_659( "SBA", "P_HANDLE_VIG_03 = ISS_SCRIPT_FINISHING", "*****" );
        SET_OBJECT_DYNAMIC( l_U1505, 1 );
        ISEQ_UNREGISTER_ENTITY( 607624886, "cp1" );
        ISEQ_UNREGISTER_ENTITY( 607624886, "cp2" );
        ISEQ_UNREGISTER_ENTITY( 607624886, "cp3" );
        ISEQ_TERMINATE( 607624886 );
        l_U439 = -1;
        break;
    }
    return;
}

void sub_31986()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;

    if (sub_12114( l_U893[0] ))
    {
        SET_PED_COMBAT_ATTRIBUTES( l_U893[0], 16, 0 );
        sub_659( "MW", "Vig 03 set alert phase drop bag", 0 );
        if ((GET_PED_PROP_INDEX( l_U893[0], 12 )) >= 0)
        {
            sub_659( "SBA", "P_DROP_ALL_PED_PROPS: Dropping LEFT prop", "***" );
            uVar2 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PEP_PROP_ROTATION( l_U893[0], 12 )};
            uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_PROP_POSITION( l_U893[0], 12 )};
            KNOCK_OFF_PROP_AT_ANCHOR_POINT( l_U893[0], 12 );
        }
        CLEAR_PED_PROP( l_U893[0], 12 );
        l_U1505 = sub_32243( l_U488, uVar5, uVar2, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U1505 ))
        {
            SET_OBJECT_COLLISION( l_U1505, 1 );
        }
    }
    return;
}

void sub_32243(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_996( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_32982()
{
    sub_32996( ref l_U893 );
    sub_33147( ref l_U1482 );
    sub_33242( 1, l_U893[0], "M12_CP_17_AVG", ref l_U1482, 2, 0 );
    sub_33242( 2, l_U893[1], "M12_CP_18_AVG", ref l_U1482, 2, 0 );
    sub_33242( 3, l_U893[2], "M12_CP_19_MUS", ref l_U1482, 2, 0 );
    sub_33532( "SHOT_VIG10D", ref l_U1482, 8, 1 );
    return;
}

void sub_32996(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_33027( (uParam0^)[I] );
    }
    return;
}

void sub_33027(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_33147(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_33242(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_33532(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_33556( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_33556(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_33611( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_33611(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_33646( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_34140( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_33646(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_34140(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_34562(unknown uParam0)
{
    if ((sub_21962()) AND (sub_12114( (uParam0^) )))
    {
        sub_34598( uParam0, sub_6151() );
    }
    return;
}

void sub_34598(unknown uParam0, unknown uParam1)
{
    if ((sub_12114( uParam1 )) AND (sub_12114( (uParam0^) )))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

int sub_34807(unknown uParam0, unknown uParam1, int iParam2)
{
    if (sub_12114( uParam0 ))
    {
        if ((PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 )) == iParam2)
        {
            PED_FINISH_ACTION_INTENTION( uParam0, uParam1 );
            sub_659( "SBA", "F_IS_ACTION_INTENTION_STATUS_REACHED: Returning TRUE", "***" );
            return 1;
        }
    }
    return 0;
}

void sub_35537(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_35579( sub_6151(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

int sub_35579(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_35682(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_35770()
{
    unknown uVar2;

    sub_32996( ref l_U943 );
    sub_35793( ref l_U943 );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
    TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 3.02973700, -33.81005000, 21.82840000, sub_6151(), 3, 1, 1056964608, 0, 1, 0 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    CLOSE_SEQUENCE_TASK( uVar2 );
    TASK_PERFORM_SEQUENCE( l_U943[0], uVar2 );
    CLEAR_SEQUENCE_TASK( uVar2 );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
    TASK_PAUSE( 0, 900 );
    TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 1.31876200, -37.16117000, 22.65969000, sub_6151(), 3, 1, 1056964608, 0, 1, 0 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    CLOSE_SEQUENCE_TASK( uVar2 );
    TASK_PERFORM_SEQUENCE( l_U943[1], uVar2 );
    CLEAR_SEQUENCE_TASK( uVar2 );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
    TASK_PAUSE( 0, 1200 );
    TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 4.96063500, -34.25096000, 22.66930000, sub_6151(), 3, 1, 1056964608, 0, 1, 0 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    CLOSE_SEQUENCE_TASK( uVar2 );
    TASK_PERFORM_SEQUENCE( l_U943[2], uVar2 );
    CLEAR_SEQUENCE_TASK( uVar2 );
    return;
}

void sub_35793(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (sub_12114( (uParam0^)[I] ))
        {
            CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^)[I] );
        }
    }
    return;
}

void sub_36314(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_35579( sub_6151(), uParam0 );
}

void sub_36437()
{
    unknown uVar2;

    sub_32996( ref l_U980 );
    sub_35793( ref l_U980 );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
    TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 1.42747900, -37.53111000, 22.65672000, sub_6151(), 3, 1, 1056964608, 0, 1, 0 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    CLOSE_SEQUENCE_TASK( uVar2 );
    TASK_PERFORM_SEQUENCE( l_U980[0], uVar2 );
    CLEAR_SEQUENCE_TASK( uVar2 );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
    TASK_PAUSE( 0, 1000 );
    TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 3.23332500, -35.50423000, 22.68361000, sub_6151(), 3, 1, 1056964608, 0, 1, 0 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    CLOSE_SEQUENCE_TASK( uVar2 );
    TASK_PERFORM_SEQUENCE( l_U980[0], uVar2 );
    CLEAR_SEQUENCE_TASK( uVar2 );
    return;
}

void sub_36851(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (sub_12114( (uParam0^)[I] ))
        {
            RESET_PED_TETHERING( (uParam0^)[I] );
        }
    }
    return;
}

void sub_37078()
{
    unknown uVar2;

    sub_32996( ref l_U1029 );
    sub_35793( ref l_U1029 );
    REGISTER_TARGET( l_U1029[0], sub_6151() );
    SET_LOCKED_TARGET( l_U1029[0], sub_6151() );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 18.38025000, -37.80847000, 22.65027000, sub_6151(), 3, 1, 1056964608, 0, 1, 0 );
    CLOSE_SEQUENCE_TASK( uVar2 );
    TASK_PERFORM_SEQUENCE( l_U1029[0], uVar2 );
    CLEAR_SEQUENCE_TASK( uVar2 );
    REGISTER_TARGET( l_U1029[1], sub_6151() );
    SET_LOCKED_TARGET( l_U1029[1], sub_6151() );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
    TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 14.78745000, -24.03197000, 22.65027000, sub_6151(), 3, 1, 1056964608, 0, 1, 0 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    CLOSE_SEQUENCE_TASK( uVar2 );
    TASK_PERFORM_SEQUENCE( l_U1029[1], uVar2 );
    CLEAR_SEQUENCE_TASK( uVar2 );
    REGISTER_TARGET( l_U1029[2], sub_6151() );
    SET_LOCKED_TARGET( l_U1029[2], sub_6151() );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
    TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 16.86653000, -21.93858000, 22.65027000, sub_6151(), 3, 1, 1056964608, 0, 1, 0 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    CLOSE_SEQUENCE_TASK( uVar2 );
    TASK_PERFORM_SEQUENCE( l_U1029[2], uVar2 );
    CLEAR_SEQUENCE_TASK( uVar2 );
    return;
}

void sub_37516()
{
    sub_659( "SBA", "P_CREATE_NEWS_ARTICLE_POI", 0 );
    sub_21644( l_U1183 );
    l_U1183 = sub_37596( 1844670898, l_U1274, 0, 0, 28, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U1183 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1183, "Room_Bar" );
        FREEZE_OBJECT_POSITION( l_U1183, 1 );
        sub_37901( ref l_U1188, 1, l_U1274, l_U1183, 1, 0, 1.50000000, 3.00000000, 1, 0 );
        sub_5423( ref l_U1188, 30, "POI_HOT_NEWS" );
        sub_5584( ref l_U1188, 0 );
        sub_38203( ref l_U1188, 0 );
        sub_38263( ref l_U1188, 1 );
    }
    return;
}

void sub_37596(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_996( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_37901(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;

    sub_4590( iParam0, uParam10 );
    if ((DOES_OBJECT_EXIST( uParam5 )) == 1)
    {
        uVar14 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( uParam5 )};
        iParam0->_fU4 = uParam1;
        iParam0->_fU308 = uParam7;
        if (iParam0->_fU308 == 0)
        {
            iParam0->_fU100 = {uVar14};
            iParam0->_fU200 = {uVar14};
        }
        iParam0->_fU112 = uParam8;
        iParam0->_fU212 = uParam9;
        iParam0->_fU300 = uParam6;
        iParam0->_fU312 = uParam5;
        iParam0->_fU320 = uParam11;
        iParam0->_fU20 = {uParam2};
        sub_4958( iParam0 );
    }
    else
    {
        SCRIPT_ASSERT( "[SP]### WARNING!!! (P_CreateObjectPOIStruct): Object doesn't exist! ###", 0 );
    }
    return;
}

void sub_38203(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
    sub_21017( iParam0 );
    return;
}

void sub_38263(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

void sub_38324()
{
    sub_32996( ref l_U1105 );
    sub_35793( ref l_U1157 );
    sub_38402( l_U1105[0], "GenCover", "D03F5BFC_FD2BFB49_Popover1", 0, 1 );
    sub_38402( l_U1105[1], "GenCover", "D03F5BFC_A666CDC0_Popover2", 0, 1 );
    sub_38402( l_U1105[4], "GenCover", "D03F5BFC_F4A03126_Popover1", 0, 1 );
    sub_38402( l_U1105[2], "GenCover", "D03F5BFC_13072A77_Popover1", 0, 1 );
    TASK_ATTACK_MOVE( l_U1105[3], 8.09386300, -19.01948000, 22.88054000, 8.00000000, 1101004800, -1082130432, 3 );
    return;
}

void sub_38402(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (sub_12114( uParam0 ))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
        sub_38436( ref uParam0, uParam4 );
        TASK_COMBAT_SNAP_TO_COVER( uParam0, uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_38436(unknown uParam0, unknown uParam1)
{
    if (sub_12114( (uParam0^) ))
    {
        SET_PED_FLAG_LOCK_TO_COVER( (uParam0^), uParam1 );
    }
    return;
}

void sub_38779()
{
    if (NOT (sub_38793( ref l_U1188 )))
    {
        if ((sub_38828( ref l_U1188 )) == 1)
        {
            sub_39078( "EXPLORE_ITEM", ref l_U1173 );
        }
    }
    if (sub_39161( ref l_U1188 ))
    {
        l_U1184 = 0;
    }
    if (sub_40905())
    {
        sub_20795( ref l_U1188, 1 );
        sub_659( "SBA", "P_HANDLE_NEWS_ARTICLE_POI: POI has been used, re-enabling", 0 );
    }
    return;
}

void sub_38793(int iParam0)
{
    return iParam0->_fU56;
}

int sub_38828(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND ((sub_38793( iParam0 )) == 0)))
    {
        if ((sub_38984() == 1) AND (((IS_PED_RELOADING( sub_6151() )) == 0) AND (((IS_PED_GETTING_UP( sub_6151() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP( sub_6151() )) == 0) AND (((IS_PED_IN_COVER( sub_6151() )) == 0) AND (((IS_PED_DUCKING( sub_6151() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

int sub_38984()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

void sub_39078(unknown uParam0, unknown uParam1)
{
    sub_33147( uParam1 );
    sub_33242( 0, sub_6151(), "MAX", uParam1, 2, 0 );
    sub_33242( 1, sub_6151(), "MAX", uParam1, 2, 0 );
    sub_33532( uParam0, uParam1, 8, 1 );
    return;
}

int sub_39161(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_6151() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_6151() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_35579( sub_6151(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_35579( sub_6151(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_21017( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_21078( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_38984() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_20795( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_5096( iParam0, 0 );
                            sub_20866( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_5096( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_6151() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_6151(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_5096( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_20866( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_6151() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_6151(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_6151() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_6151(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_6151() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_6151(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_5096( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_20866( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_6151() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_6151() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_6151() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_6151(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_20866( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

void sub_40905()
{
    int Result;

    Result = 0;
    switch (l_U1184)
    {
        case 0:
        sub_659( "SBA", "HANDLE_NEWS_ARTICLE_CAM: eNewsArticle = ASS_SETUP", 0 );
        sub_23864( 1, 0, 0, 1 );
        l_U1184 = 3;
        break;
        case 3:
        sub_659( "SBA", "HANDLE_NEWS_ARTICLE_CAM: eNewsArticle = ASS_WAITING_TO_PLAY", 0 );
        CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAM_GND_25_F_CAM", 1, l_U1185, 0.00000000, 0, 0 );
        if (sub_21962())
        {
            SET_PED_VISIBLE( sub_6151(), 0 );
        }
        if ((HAS_EXPLORATION_ITEM_BEEN_FOUND( "shot_Newspaper" )) == 0)
        {
            FOUND_EXPLORATION_ITEM( "shot_Newspaper" );
            sub_41255( 0 );
            sub_41366( "SHOT_MXNSART", ref l_U1163 );
        }
        l_U1184 = 4;
        break;
        case 4:
        if ((NOT IS_ANIMATED_CAMERA_PLAYING()) || (CAMERA_ANIMATED_CURRENT_TIME() >= 5000))
        {
            sub_659( "SBA", "HANDLE_NEWS_ARTICLE_CAM: Cam cut done, going to eNewsArticle = ASS_FINISHED", 0 );
            l_U1184 = 5;
        }
        break;
        case 5:
        sub_26699( 1, 1 );
        CAMERA_ANIMATED_STOP( 0, 0 );
        if (sub_21962())
        {
            SET_PED_VISIBLE( sub_6151(), 1 );
        }
        Result = 1;
        sub_659( "SBA", "HANDLE_NEWS_ARTICLE_CAM: going to eNewsArticle = ASS_INACTIVE", 0 );
        l_U1184 = -1;
        break;
    }
    return Result;
}

void sub_41255(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

void sub_41366(unknown uParam0, unknown uParam1)
{
    sub_41392( uParam0, uParam1, sub_6151(), "MAX", 1 );
    return;
}

void sub_41392(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if ((NOT (IS_PED_DEAD( uParam2 ))) AND (NOT (IS_PED_DEAD( sub_6151() ))))
    {
        sub_33147( uParam1 );
        sub_33242( 0, sub_6151(), "MAX", uParam1, 2, 0 );
        sub_33242( uParam4, uParam2, uParam3, uParam1, 2, 0 );
        sub_33532( uParam0, uParam1, 8, 1 );
    }
    return;
}

void sub_41900()
{
    sub_41915( ref l_U1105, 0 );
    return;
}

void sub_41915(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_38436( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_42070()
{
    sub_32996( ref l_U1157 );
    sub_35793( ref l_U1157 );
    TASK_COMBAT_MOVE_TO_COVER( l_U1157[0], "GenCover", "D03F5BFC_9A34B221_Popover1", sub_6151() );
    TASK_COMBAT_MOVE_TO_COVER( l_U1157[1], "GenCover", "D03F5BFC_F9220CD4_Popover2", sub_6151() );
    TASK_COMBAT_MOVE_TO_COVER( l_U1157[2], "GenCover", "D03F5BFC_738A6815_Corner2", sub_6151() );
    return;
}

void sub_42500(unknown uParam0)
{
    int I;

    if ((sub_35682( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_43132(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (DOES_PLACEMENT_EXIST( (uParam0^)[I] ))
        {
            sub_659( "RJM", "DO_ANY_PAINKILLERS_STILL_EXIST - Found a pill in there, we can still play some V.O.", 0 );
            (uParam1^)[I] = 1;
        }
        else
        {
            (uParam1^)[I] = 0;
        }
    }
    return;
}

void sub_43388()
{
    switch (l_U1506)
    {
        case 0: break;
        case 1:
        sub_659( "SP", "ePianoNISState = NIS2_REQUEST_ASSETS", 0 );
        sub_1461( -905531099, 0 );
        sub_1687( "S_HOTEL_PIANO", 0, 0 );
        l_U1506 = 2;
        sub_659( "SP", "ePianoNISState = NIS2_LOAD_ASSETS", 0 );
        case 2:
        if (((LOAD_SCRIPT_STREAM( "S_HOTEL_PIANO", 0 )) == 1) AND (((ISEQ_QUERY_STATE( -905531099, 2 )) == 1) AND ((ISEQ_IS_LOADED( -905531099 )) == 1)))
        {
            l_U1506 = 3;
            sub_659( "SP", "ePianoNISState = NIS2_SETUP", 0 );
            break;
        }
        return;
        case 3:
        sub_659( "SP", "ePianoNISState = NIS2_SETUP", 0 );
        ISEQ_REGISTER_ENTITY( -905531099, "Max", sub_6151(), 0 );
        ISEQ_START( -905531099 );
        sub_23864( 1, 0, 0, 1 );
        l_U1506 = 4;
        sub_659( "SP", "ePianoNISState = NIS2_FIRST_FRAME", 0 );
        break;
        case 4:
        sub_659( "SP", "ePianoNISState = NIS2_FIRST_FRAME", 0 );
        if ((IS_PED_DEAD( sub_6151() )) == 0)
        {
            if ((IS_PED_DUAL_WIELDING( sub_6151() )) == 0)
            {
                sub_43961( ref l_U247, 1, 1 );
            }
            sub_24469( 1 );
            CLEAR_PED_TASKS_IMMEDIATELY( sub_6151() );
            RESET_PLAYER_INPUT_GAIT( 0 );
            sub_44804( sub_6151(), l_U1366, l_U1369 );
            FREEZE_PED_POSITION( sub_6151(), 1 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_HOTEL_CP_04", "VIG_04_HOT_MAX_PLAY_PIANO_FWD_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
            AUDIO_MUSIC_ADJUST_VOLUME( 0.00000000 );
            PLAY_SCRIPT_STREAM_FROM_COORD( 11.61000000, 28.60000000, 23.76000000, 0 );
            sub_45002( sub_6151() );
            SET_PED_DEFAULT_AIM_AHEAD( sub_6151() );
            sub_41255( 0 );
            sub_45201( ref l_U1449, 9475 );
            sub_45201( ref l_U1458, 16100 );
            sub_45201( ref l_U1467, 32150 );
            l_U1506 = 5;
            sub_659( "SP", "ePianoNISState = NIS2_PLAYING", 0 );
            sub_18971( ref l_U1507, 500, 1, 0 );
            sub_19107( ref l_U1507 );
        }
        break;
        case 5:
        AUDIO_MUSIC_ADJUST_VOLUME( -24.00000000 );
        if (sub_19227( ref l_U1507 ))
        {
            FREEZE_PED_POSITION( sub_6151(), 0 );
        }
        if (sub_19227( ref l_U1449 ))
        {
            sub_39078( "SHOT_MXPNOA", ref l_U208 );
        }
        if (sub_19227( ref l_U1458 ))
        {
            sub_39078( "SHOT_MXPNOB", ref l_U218 );
        }
        if (sub_19227( ref l_U1467 ))
        {
            sub_39078( "SHOT_PRFCTPN", ref l_U228 );
        }
        if ((PED_GET_ACTION_INTENTION_STATUS( sub_6151(), 47 )) == 3)
        {
            PED_FINISH_ACTION_INTENTION( sub_6151(), 47 );
            SIMULATE_PLAYER_INPUT_GAIT( sub_6173(), 2, 500, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.01000000, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( -5.43000000, 1065353216, 0 );
            CAMERA_ANIMATED_STOP( 0, 0 );
            AUDIO_MUSIC_ADJUST_VOLUME( 0.00000000 );
            l_U1506 = 6;
            sub_659( "SP", "ePianoNISState = NIS2_FINISHED", 0 );
        }
        break;
        case 6:
        sub_659( "SP", "ePianoNISState = NIS2_FINISHED", 0 );
        CLEAR_PED_DEFAULT_AIM( sub_6151() );
        sub_26699( 1, 1 );
        if (NOT l_U1476)
        {
            sub_45201( ref l_U1431, 50000 );
        }
        l_U1506 = 0;
        sub_659( "SP", "ePianoNISState = NIS2_IDLE", 0 );
        break;
    }
    return;
}

void sub_43961(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

    sub_43973( iParam0 );
    if ((IS_PED_DEAD( sub_6151() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND( sub_6151(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if ((sub_24549( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if ((sub_25790( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND( sub_6151(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER( sub_6151(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER( sub_6151(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER( sub_6151(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD( sub_6151() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND( sub_6151(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_6151(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND( sub_6151(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_6151(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD( sub_6151() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND( sub_6151(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if ((sub_25790( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND( sub_6151(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND( sub_6151(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_6151(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

void sub_43973(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

void sub_44804(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_45002(unknown uParam0)
{
    if (sub_12114( uParam0 ))
    {
        PED_FINISH_ACTION_INTENTION( uParam0, 47 );
        PED_FINISH_ACTION_INTENTION( uParam0, 48 );
        PED_FINISH_ACTION_INTENTION( uParam0, 49 );
        PED_FINISH_ACTION_INTENTION( uParam0, 50 );
        PED_FINISH_ACTION_INTENTION( uParam0, 51 );
        PED_FINISH_ACTION_INTENTION( uParam0, 52 );
        PED_FINISH_ACTION_INTENTION( uParam0, 53 );
        PED_FINISH_ACTION_INTENTION( uParam0, 54 );
        PED_FINISH_ACTION_INTENTION( uParam0, 55 );
        PED_FINISH_ACTION_INTENTION( uParam0, 56 );
        PED_FINISH_ACTION_INTENTION( uParam0, 57 );
        PED_FINISH_ACTION_INTENTION( uParam0, 58 );
    }
    return;
}

void sub_45201(unknown uParam0, unknown uParam1)
{
    sub_18971( uParam0, uParam1, 1, 0 );
    sub_19107( uParam0 );
    return;
}

void sub_45809()
{
    if (NOT l_U1477)
    {
        if (NOT (sub_36314( l_U741 )))
        {
            if (NOT (sub_18861( ref l_U1440 )))
            {
                sub_659( "SBA", "P_HANDLE_MAX_BACK_OUTSIDE_VO: Starting timer", 0 );
                sub_45201( ref l_U1440, 30000 );
            }
            else if (NOT sub_45938())
            {
                if (IS_OBJECT_ON_SCREEN( l_U1183 ))
                {
                    if (sub_19227( ref l_U1440 ))
                    {
                        sub_659( "SBA", "P_HANDLE_MAX_BACK_OUTSIDE_VO: Playing VO", 0 );
                        sub_46109( "SHOT_MXGPTRF", ref l_U1421 );
                        if (NOT l_U1476)
                        {
                            sub_45201( ref l_U1431, 50000 );
                        }
                        l_U1477 = 1;
                    }
                }
            }
        }
        else if (sub_18861( ref l_U1440 ))
        {
            sub_659( "SBA", "P_HANDLE_MAX_BACK_OUTSIDE_VO: Resetting timer", 0 );
            sub_5848( ref l_U1440 );
        }
    }
    return;
}

void sub_45938()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

void sub_46109(unknown uParam0, unknown uParam1)
{
    sub_659( "SBA", "P_SPEECH_PLAY_MAX_MONOLOGUE", "***" );
    if (sub_21962())
    {
        sub_33147( uParam1 );
        sub_33242( 0, sub_6151(), "MAX", uParam1, 2, 0 );
        sub_33242( 1, sub_6151(), "MAX", uParam1, 2, 0 );
        sub_33532( uParam0, uParam1, 8, 1 );
    }
    return;
}

int sub_46407(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    if ((IS_PLAYER_DEAD( sub_6173() )) == 0)
    {
        if (sub_45938() == 0)
        {
            for ( I = 0; I <= ((uParam1^) - 1); I++ )
            {
                if ((uParam2^)[I])
                {
                    if ((HAS_PLACEMENT_BEEN_COLLECTED( (uParam1^)[I] )) || (NOT (DOES_PLACEMENT_EXIST( (uParam1^)[I] ))))
                    {
                        (uParam2^)[I] = 0;
                        if (TIME_SINCE_LAST_MONOLOGUE() > 5000)
                        {
                            sub_33147( ref l_U194 );
                            sub_46109( uParam0, ref l_U194 );
                            return 1;
                        }
                    }
                }
            }
        }
    }
    return 0;
}

int sub_46768(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, boolean bParam42)
{
    if (sub_21962())
    {
        if ((NOT (GET_IS_PED_FORCED_TO_WALK( sub_6151() ))) AND (sub_36314( uParam0 )))
        {
            sub_659( "RJM", "UPDATE_FORCEWALK_AND_TRIGGER_PAIR - Force walk enabled", 0 );
            SET_PED_FORCED_TO_WALK( sub_6151(), 1 );
        }
        else if ((GET_IS_PED_FORCED_TO_WALK( sub_6151() )) AND (NOT (sub_36314( uParam0 ))))
        {
            sub_659( "RJM", "UPDATE_FORCEWALK_AND_TRIGGER_PAIR - Force walk disabled", 0 );
            SET_PED_FORCED_TO_WALK( sub_6151(), 0 );
        }
    }
    if (sub_36314( uParam21 ))
    {
        if (bParam42)
        {
            SET_PED_FORCED_TO_WALK( sub_6151(), 0 );
        }
        return 1;
    }
    return 0;
}

void sub_47294()
{
    sub_47309( -184942895 );
    sub_47309( 1478009203 );
    sub_47309( -1980065396 );
    return;
}

void sub_47309(unknown uParam0)
{
    SET_WEAPON_AS_NO_LONGER_NEEDED( uParam0 );
    return;
}

void sub_47364()
{
    int I;

    sub_659( "MW", "P_UNLOAD_ASSETS start", 0 );
    REMOVE_ANIM_DICT( "npc_pstl_cover_grenade", 0 );
    REMOVE_ANIM_DICT( "npc_rifle_cover_grenade", 0 );
    for ( I = 0; I < l_U1478; I++ )
    {
        sub_26505( l_U1478[I] );
    }
    sub_26505( g_U853 );
    sub_47549( "LEVEL_S_HOTEL_CP_04" );
    sub_47549( "EXPL_CAM" );
    sub_659( "MW", "P_UNLOAD_ASSETS end", 0 );
    return;
}

void sub_47549(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}


void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U85 = "PED_DEF";
    l_U127 = 1.00000000;
    l_U139 = 0;
    l_U180 = 0;
    l_U201 = 0;
    l_U203 = 1;
    l_U204 = 0;
    l_U205 = 1;
    l_U206 = 0;
    l_U217 = 1;
    l_U236 = "12_03_HOTEL_concat";
    l_U267 = 1;
    l_U286 = "MID_07_HOTEL_concat";
    l_U288 = 0;
    l_U289 = 0;
    l_U290 = 1500;
    l_U372 = 0;
    l_U374 = 0;
    l_U375 = 0;
    l_U376 = 0;
    l_U377 = 0;
    l_U554 = 0;
    l_U555 = 0;
    l_U827 = 0;
    l_U837 = 1;
    l_U857 = 0;
    l_U858 = "12_04_HOTEL_concat";
    l_U1013 = 5100;
    l_U1014 = 3000;
    l_U1015 = 1000;
    l_U1016 = l_U1013 - l_U1015;
    l_U1017 = l_U1015 + 1000;
    sub_553( "AT", "Script hotel_5f_construction.sc is starting up...", 0 );
    sub_602();
    sub_804( 0 );
    if ((g_U854 <= 7) AND (g_U854 >= 6))
    {
        g_U997 = 1;
        g_U855 = g_U854;
        sub_964();
        l_U372 = 1;
    }
    else
    {
        sub_1327();
        l_U372 = 3;
    }
    while (NOT IS_EXITFLAG_SET())
    {
        if ((g_U855 == 6) || (g_U855 == 7))
        {
            sub_2134();
        }
        sub_2827();
        if (l_U377 == 0)
        {
            sub_10942();
        }
        WAIT( 0 );
    }
    sub_5486();
    sub_41728();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "hotel_5f_construction" );
    sub_553( "AT", "Script hotel_5f_construction.sc is terminating...", 0 );
    return;
}

void sub_553(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_602()
{
    sub_553( "AT", "P_SETUP_ASSET_ARRAYS start", 0 );
    l_U828[0] = g_U1452;
    l_U828[1] = -357942719;
    l_U828[2] = -1231373761;
    l_U828[3] = -835965385;
    l_U828[4] = -1538058993;
    l_U828[5] = 24025937;
    l_U828[6] = g_U852;
    l_U828[7] = -1991592028;
    sub_553( "bsw", "P_SETUP_ASSET_ARRAYS end", 0 );
    return;
}

void sub_804(unknown uParam0)
{
    sub_821( -110877124, uParam0 );
    sub_821( -1013714740, uParam0 );
    sub_821( 514118749, uParam0 );
    sub_821( -612753081, uParam0 );
    return;
}

void sub_821(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_964()
{
    sub_553( "AT", "P_LOAD_ASSETS start", 0 );
    sub_1008( 1 );
    sub_1327();
    sub_804( 1 );
    sub_1928( "SHOTAUD" );
    sub_553( "AT", "P_LOAD_ASSETS end", 0 );
    return;
}

void sub_1008(unknown uParam0)
{
    int I;

    for ( I = 0; I < l_U828; I++ )
    {
        sub_1045( l_U828[I], uParam0 );
    }
    sub_1248( "EXPL_CAM", 0, uParam0 );
    return;
}

void sub_1045(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_1150( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_1150(unknown uParam0)
{
    return;
}

void sub_1248(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_1327()
{
    if (g_U855 <= 6)
    {
        sub_1355( 1179793949, 1 );
        if (g_U855 == 6)
        {
            sub_1568( l_U858, 1 );
        }
        else
        {
            sub_1568( l_U236, 1 );
            sub_1045( -643110723, 1 );
            sub_1045( 75711909, 1 );
            sub_1045( -1538058993, 1 );
        }
    }
    else if (g_U855 == 7)
    {
        sub_1355( 951295712, 1 );
        sub_1568( l_U286, 1 );
    }
    return;
}

void sub_1355(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_1568(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_1928(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_1948();
    return;
}

void sub_1948()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_2134()
{
    if (l_U205 != l_U203)
    {
        sub_553( "TEH", "playing music:changed CUR FLAG", 0 );
        sub_2210( l_U203 );
        sub_2210( l_U204 );
        l_U205 = l_U203;
    }
    else if (l_U206 != l_U204)
    {
        sub_553( "TEH", "playing music:changed NEW FLAG", 0 );
        sub_2210( l_U203 );
        sub_2210( l_U204 );
        l_U206 = l_U204;
    }
    switch (l_U203)
    {
        case 1:
        AUDIO_MUSIC_SUSPEND( 5000 );
        l_U203 = 3;
        break;
        case 2:
        AUDIO_MUSIC_SUSPEND( 5000 );
        l_U203 = 3;
        break;
        case 3:
        if (l_U204 == 3)
        {
            l_U216 = 0;
            sub_553( "TEH", "playing music: MC_GAMEPLAY_STARTS", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "HOTEL_SONG", "HOTEL_SONG_5", "", 0, 5000, 5000, -1082130432, 0 );
            l_U203 = 4;
        }
        break;
        case 4:
        if (l_U204 == 4)
        {
            l_U216 = 0;
            sub_553( "TEH", "playing music: MC_C4_USE_LINE", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "HOTEL_SONG", "HOTEL_SONG_3_5", "", 0, 5000, 5000, -1082130432, 0 );
            l_U203 = 5;
        }
        break;
        case 5:
        if (l_U204 == 5)
        {
            sub_553( "TEH", "playing music: MC_C4_PLANTING", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "HOTEL_SONG", "HOTEL_SONG_3", "", 0, 10000, 10000, -1082130432, 0 );
            l_U203 = 6;
            l_U204 = 6;
        }
        break;
    }
    return;
}

void sub_2210(unknown uParam0)
{
    return;
}

void sub_2827()
{
    if ((g_U855 == 7) || (g_U855 == 6))
    {
        switch (l_U377)
        {
            case 0:
            if (IS_PED_DEAD( sub_2917() ))
            {
                l_U377 = 1;
                sub_553( "AT", "PLAYER DIED: eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            else if (sub_3069())
            {
                l_U377 = 1;
                sub_553( "SBA", "RESTARTING CHECKPOINT: eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 1:
            if (sub_3579())
            {
                if ((g_U856[8]._fU40 != 4) AND (g_U856[8]._fU40 != 0))
                {
                    sub_553( "GA", "Shutting down script for 5th Fight.", 0 );
                    g_U998 = 0;
                    sub_3703( ref g_U856[8] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U856[8]._fU32 );
                }
                l_U377 = 2;
            }
            else if ((sub_3768( 0 )) == 1)
            {
                if ((g_U856[8]._fU40 != 4) AND (g_U856[8]._fU40 != 0))
                {
                    sub_553( "GA", "Shutting down script for 5th Fight.", 0 );
                    g_U998 = 0;
                    sub_3703( ref g_U856[8] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U856[8]._fU32 );
                }
                l_U377 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_2917() )))
            {
                l_U377 = 3;
                sub_553( "AT", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_553( "AT", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_2917() ))) AND (NOT (IS_PLAYER_DEAD( sub_2939() ))))
            {
                SET_PLAYER_CONTROL( sub_2939(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_2917() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_2917(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            if (IS_ANIMATED_CAMERA_PLAYING())
            {
                CAMERA_ANIMATED_STOP( 0, 0 );
            }
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            l_U203 = 2;
            g_U1007 = 0;
            g_U1005 = 0;
            g_U1006 = 0;
            sub_5486();
            l_U377 = 4;
            sub_553( "AT", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_553( "AT", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            if (g_U855 == 6)
            {
                sub_6222( ref l_U300, sub_2917() );
                sub_553( "BSW", "max spawns where there's no collision, so we need to freeze him", 0 );
                FREEZE_PED_POSITION( sub_2917(), 1 );
            }
            else
            {
                sub_6222( ref l_U336, sub_2917() );
            }
            l_U377 = 5;
            sub_553( "AT", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_553( "AT", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U372 = 3;
            l_U377 = 0;
            sub_553( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_2917()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_2939() );
    }
    return 0;
}

void sub_2939()
{
    return GET_PLAYER_ID();
}

int sub_3069()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_2917() )))
        {
            SET_PED_FORCED_TO_WALK( sub_2917(), 0 );
            SET_PLAYER_FORCED_AIM( sub_2939(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_2939(), 1 );
            if ((IS_PED_VISIBLE( sub_2917() )) == 0)
            {
                SET_PED_VISIBLE( sub_2917(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_3579()
{
    return g_U648;
}

void sub_3703(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

int sub_3768(int iParam0)
{
    iParam0 = 1;
    switch (l_U289)
    {
        case 0:
        if (NOT (sub_3829( ref l_U291 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_2917() )))
            {
                l_U290 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_3939( ref l_U291, l_U290, 1, 1 );
            sub_4075( ref l_U291 );
        }
        if (sub_4195( ref l_U291 ))
        {
            sub_553( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_2917() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_2939() )))
            {
                SET_PLAYER_CONTROL( sub_2939(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U289 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U289 = 2;
            }
            else
            {
                l_U289 = 3;
            }
        }
        break;
        case 2:
        sub_553( "NS", "Player will QUIT", 0 );
        sub_4682();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_553( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_4682();
        return 1;
        break;
    }
    return 0;
}

int sub_3829(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_3939(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_4075(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_4195(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_4682()
{
    sub_553( "NS", "P_PostFailRetryCleanup", 0 );
    sub_4732( ref l_U291 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_2939() )))
    {
        SET_PLAYER_CONTROL( sub_2939(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U288 = 0;
    l_U288 = l_U288;
    l_U289 = 0;
    return;
}

void sub_4732(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_5486()
{
    int I;

    sub_553( "AT", "P_CLEANUP_ALL start", 0 );
    ISEQ_UNREGISTER_ENTITY( 1179793949, "max" );
    ISEQ_UNREGISTER_ENTITY( 1179793949, "fifth_door" );
    sub_5578( 1179793949, 0 );
    sub_5782( g_U1729 );
    for ( I = 0; I <= 2; I++ )
    {
        sub_5782( l_U784[I]._fU0 );
        sub_5782( l_U784[I]._fU4 );
    }
    sub_5882( l_U236 );
    sub_5882( l_U858 );
    sub_5882( l_U286 );
    sub_5997( ref l_U859 );
    sub_553( "AT", "P_CLEANUP_ALL end", 0 );
    return;
}

void sub_5578(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_5782(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_5882(unknown uParam0)
{
    if ((CUTSCENE_NAMED_IS_LOADING( uParam0 )) || (CUTSCENE_IS_LOADED( uParam0 )))
    {
        sub_553( "SBA", "Clearing cutscene:", 0 );
        sub_1150( uParam0 );
        CLEAR_NAMED_CUTSCENE( uParam0 );
    }
    return;
}

void sub_5997(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        STOP_IMAGEFX( (uParam0^)[I]._fU0, 0 );
    }
    return;
}

void sub_6222(unknown uParam0, unknown uParam1)
{
    sub_6236( uParam0, uParam1 );
    sub_10257( uParam0 );
    return;
}

void sub_6236(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_553( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_6420( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_7497( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_7789( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_8136( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_7789( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_8136( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_7789( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_8136( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_8421( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_8136( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_8421( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_8136( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_8914( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_9075( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_2917(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_553( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_6420(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_6452( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_6452(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_7497(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_7789(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_1150( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_8136(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_8421(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_1150( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_8914(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_9075(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_6452( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_9147( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_9147(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_10257(int iParam0)
{
    unknown uVar3;

    sub_553( "BSW", "RESTORE_WATERBOTTLE_STATE start", 0 );
    uVar3 = sub_10313();
    if (GET_DOES_WEAPON_EXIST( uVar3 ))
    {
        SET_SUPPRESSOR_DAMAGE_LEVEL( uVar3, iParam0->_fU48 );
    }
    return;
}

void sub_10313()
{
    boolean bVar2;
    unknown Result;

    sub_553( "BSW", "DOES_PLAYER_HAVE_WATERBOTTLE start", 0 );
    bVar2 = false;
    if (sub_10375())
    {
        Result = GET_WEAPON_FROM_SLOT( sub_2917(), 0 );
        if (GET_DOES_WEAPON_EXIST( Result ))
        {
            if ((GET_WEAPON_TYPE( Result )) == 811797242)
            {
                bVar2 = true;
            }
        }
        if (NOT bVar2)
        {
            Result = GET_WEAPON_FROM_SLOT( sub_2917(), 1 );
            if (GET_DOES_WEAPON_EXIST( Result ))
            {
                if ((GET_WEAPON_TYPE( Result )) == 811797242)
                {
                    bVar2 = true;
                }
            }
        }
    }
    if (bVar2)
    {
        return Result;
        break;
    }
    return nil;
}

int sub_10375()
{
    if (sub_10390( sub_2917() ))
    {
        return 1;
    }
    return 0;
}

int sub_10390(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (DOES_PED_EXIST( uParam0 )))
    {
        return 1;
    }
    return 0;
}

void sub_10942()
{
    int iVar2;

    iVar2 = l_U372;
    sub_10959();
    switch (l_U372)
    {
        case 0: break;
        case 1:
        if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
        {
            sub_553( "AT", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
            if ((NOT (sub_16787( ref l_U336 ))) AND (NOT (sub_16787( ref l_U300 ))))
            {
                sub_8421( sub_2917(), -612753081, 50, 0, 0 );
                sub_7789( sub_2917(), -1013714740, 2, 100, 0 );
                sub_7789( sub_2917(), -612753081, 1, 50, 0 );
                SET_PAYNEKILLER_AMT( 3 );
                l_U372 = 2;
                sub_553( "AT", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
            }
            else
            {
                l_U372 = 3;
                sub_553( "AT", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
            }
        }
        break;
        case 2:
        if (NOT (IS_PED_DEAD( sub_2917() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_2917(), 2 ) )) AND ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_2917(), 1 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_2917(), 0, 0 ) ))))
            {
                l_U372 = 3;
                sub_553( "AT", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
            }
        }
        break;
        case 3:
        sub_553( "AT", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
        sub_17413();
        sub_19134();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U372 = 4;
        sub_553( "AT", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 4:
        sub_553( "AT", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        l_U372 = 5;
        sub_553( "AT", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 5:
        if (g_U997)
        {
            sub_553( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
            if (g_U855 < 6)
            {
                g_U855 = 6;
                sub_1008( 0 );
                sub_20869();
                l_U372 = 6;
            }
            else if (g_U855 == 6)
            {
                l_U372 = 7;
                sub_20869();
                if (NOT l_U300._fU0)
                {
                    sub_21890( ref l_U300, g_U855, sub_2917(), g_U1020[6], g_U1123[6], g_U1158[6], g_U1193[6], 0 );
                }
            }
            else if (g_U855 == 7)
            {
                sub_25652( ref l_U784[2] );
                sub_19658( ref g_U1652, 1, 1, 1065353216 );
                sub_26112( ref g_U1652, 1 );
                l_U372 = 10;
            };;;
            sub_26182( g_U855 );
            sub_26480();
            sub_27578();
        }
        break;
        case 6:
        if (sub_27838( 1, 0, 0 ))
        {
            if (NOT l_U300._fU0)
            {
                sub_21890( ref l_U300, g_U855, sub_2917(), g_U1020[6], g_U1123[6], g_U1158[6], g_U1193[6], 0 );
            }
            sub_1008( 1 );
            l_U372 = 7;
        }
        break;
        case 7:
        if (sub_32205())
        {
            sub_1568( l_U858, 0 );
            sub_1355( 951295712, 0 );
            sub_33170( ref g_U1011, ref g_U1014 );
            l_U372 = 8;
            sub_553( "AT", "eCheckpointState = CP_FIFTH_FLOOR_GAMEPLAY", 0 );
        }
        break;
        case 8:
        sub_33420();
        if (sub_33719( ref l_U420, 0 ))
        {
            sub_32843( "SHOT_MXATPLR", ref l_U506 );
            sub_3939( ref l_U535, 30000, 1, 0 );
            sub_4075( ref l_U535 );
            sub_20183( ref l_U469, 0 );
            sub_20183( ref l_U462, 0 );
        }
        if (sub_33719( ref l_U441, 0 ))
        {
            sub_33902();
        }
        if ((l_U420._fU64) AND (NOT l_U555))
        {
            if (NOT (IS_SPHERE_VISIBLE( 24.95912000, 42.39193000, 29.91838000, 1.00000000, 0 )))
            {
                l_U555 = 1;
                sub_20183( ref l_U469, 1 );
                sub_20183( ref l_U462, 1 );
                sub_20323( ref l_U469, 1 );
                sub_20323( ref l_U462, 1 );
            }
        }
        if (sub_4195( ref l_U535 ))
        {
            if (NOT sub_34585())
            {
                sub_14262( "SHOT_MXTLEXP", ref l_U486 );
            }
            else
            {
                sub_553( "SBA", "VO playing: resetting tmrExplosivesRoomHint", 0 );
                sub_3939( ref l_U535, 5000, 1, 0 );
                sub_4075( ref l_U535 );
            }
        }
        sub_34761();
        if (NOT l_U554)
        {
            if (sub_34901( "SHOT_MXFNDPLS", ref g_U1011, ref g_U1014 ))
            {
                sub_553( "SBA", "Playing Pill monologue for puiKillHousePainkillers", "..." );
                l_U554 = 1;
            }
        }
        if (sub_33719( ref l_U399, 0 ))
        {
            sub_553( "SBA", "eCheckpointState going to CP_HANDLE_12_04", 0 );
            sub_1045( 928600325, 0 );
            sub_35236();
            l_U372 = 9;
            break;
        }
        sub_35815( ref l_U859 );
        break;
        case 9:
        if (sub_36566( 1, 0, 0 ))
        {
            sub_25652( ref l_U784[2] );
            sub_19658( ref g_U1652, 1, 1, 1065353216 );
            sub_26112( ref g_U1652, 1 );
            SET_PED_FORCED_TO_WALK( sub_2917(), 0 );
            sub_1568( l_U286, 0 );
            if (IS_CUSTOM_PLAYER_VARIATION() == 0)
            {
                SET_PED_COMPONENT_VARIATION( sub_2917(), 5, 0, 2, 0 );
                SET_PED_COMPONENT_VARIATION( sub_2917(), 11, 3, 0, 0 );
            }
            l_U372 = 10;
        }
        break;
        case 10:
        if (sub_37461())
        {
            sub_27767( ref g_U1791, 1 );
            sub_553( "SBA", "P_HANDLE_EVENTS: Advancing to CP_FIRST_PILLAR", "***" );
            l_U372 = 11;
            sub_3939( ref l_U544, 30000, 1, 0 );
            sub_4075( ref l_U544 );
        }
        break;
        case 11:
        sub_38216();
        sub_34761();
        if (NOT l_U554)
        {
            if (sub_34901( "SHOT_MXFNDPLS", ref g_U1011, ref g_U1014 ))
            {
                sub_553( "SBA", "Playing Pill monologue for puiKillHousePainkillers", "..." );
                l_U554 = 1;
            }
        }
        sub_10973( ref l_U585[0] );
        sub_10973( ref l_U585[1] );
        if ((l_U585[1]._fU64) || (l_U585[0]._fU64))
        {
            g_U1018 = sub_38602();
            if (g_U1018 == 0)
            {
                g_U1019 = 1;
            }
            else
            {
                g_U1019 = 0;
            }
            g_U1003 = 0;
            l_U372 = 12;
            sub_553( "SBA", "P_HANDLE_EVENTS: Advancing to CP_MID_07", "***" );
        }
        break;
        case 12:
        if (sub_38836( 1, l_U758[g_U1018], l_U765[g_U1018], l_U768[g_U1018], l_U775[g_U1018], 0, 0 ))
        {
            g_U998 = 1;
            l_U372 = 13;
        }
        if ((NOT l_U827) AND (g_U1003))
        {
            sub_25652( ref l_U784[g_U1018] );
            l_U827 = 1;
        }
        break;
        case 13:
        if (sub_40449( l_U768[g_U1018], l_U775[g_U1018], 0.00000000, 0.00000000 ))
        {
            sub_15870( 1, 1 );
            if (NOT l_U553)
            {
                sub_3939( ref l_U544, 30000, 1, 0 );
                sub_4075( ref l_U544 );
            }
            l_U372 = 14;
        }
        break;
        case 14:
        sub_10973( ref l_U585[0] );
        sub_10973( ref l_U585[1] );
        sub_38216();
        if (NOT l_U554)
        {
            if (sub_34901( "SHOT_MXFNDPLS", ref g_U1011, ref g_U1014 ))
            {
                sub_553( "SBA", "Playing Pill monologue for puiKillHousePainkillers", "..." );
                l_U554 = 1;
            }
        }
        if ((l_U585[1]._fU64) AND (l_U585[0]._fU64))
        {
            sub_27767( ref g_U1791, 0 );
            sub_41208();
            g_U999 = 1;
            l_U372 = 15;
            sub_553( "SBA", "P_HANDLE_EVENTS: Advancing to CP_FINISHED", "***" );
        }
        break;
        case 15:
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U372 = 0;
        sub_553( "AT", "eCheckpointState = CP_IDLE", 0 );
        break;
    }
    if (l_U372 != iVar2)
    {
        l_U373 = 1;
    }
    else
    {
        l_U373 = 0;
    }
    return;
}

void sub_10959()
{
    if (sub_10973( ref g_U1791 ))
    {
        g_U1790 = 0;
    }
    if (sub_13671())
    {
        sub_12296( ref g_U1791, 1 );
        sub_553( "SBA", "P_HANDLE_BRANCO_RECEIPT_POI: POI has been used", 0 );
    }
    if (sub_16318( ref g_U1791 ))
    {
        sub_14262( "EXPLORE_ITEM", ref g_U1890 );
    }
    return;
}

int sub_10973(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_2917() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_2917() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_11059( sub_2917(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_11059( sub_2917(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_11848( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_11909( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_12219() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_12296( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_12340( iParam0, 0 );
                            sub_12540( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_12340( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_2917() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_2917(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_12340( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_12540( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_2917() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_2917(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_2917() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_2917(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_2917() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_2917(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_12340( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_12540( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_2917() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_2917() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_2917() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_2917(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_12540( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

int sub_11059(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_11848(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_11909( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_11909( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_11909(int iParam0)
{
    if (((IS_PED_DEAD( sub_2917() )) == 0) AND ((IS_PLAYER_DEAD( sub_2939() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_2917() )) == 1) || (((IS_PED_GETTING_UP( sub_2917() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_2917() )) == 1) || (((IS_PED_IN_COVER( sub_2917() )) == 1) || (((IS_PED_DUCKING( sub_2917() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_2917() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

int sub_12219()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

void sub_12296(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_12340( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_12340( iParam0, 0 );
        sub_12540( iParam0, 0 );
        if ((IS_PED_DEAD( sub_2917() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_2917() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_2917(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_12340(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_12540(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_11848( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_13671()
{
    int Result;

    Result = 0;
    switch (g_U1790)
    {
        case 0:
        sub_553( "SBA", "HANDLE_BRANCO_RECEIPT_CAM: eBrancoReceipt = ASS_SETUP", 0 );
        sub_13800( 1, 0, 0, 1 );
        sub_13960( 0 );
        g_U1790 = 3;
        break;
        case 3:
        sub_553( "SBA", "HANDLE_BRANCO_RECEIPT_CAM: eBrancoReceipt = ASS_WAITING_TO_PLAY", 0 );
        CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAM_GND_15_F_CAM", 1, -12.14000000, -1.36000000, 30.70000000, 163.45000000, 0, 0 );
        if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "shot_Receipt" )))
        {
            sub_13960( 0 );
            sub_14262( "SHOT_MXSNPNVS", ref g_U1880 );
            FOUND_EXPLORATION_ITEM( "shot_Receipt" );
        }
        else
        {
            sub_3939( ref g_U1901, 4000, 1, 0 );
            sub_4075( ref g_U1901 );
        }
        if (NOT (IS_PED_DEAD( sub_2917() )))
        {
            CLEAR_PED_TASKS_IMMEDIATELY( sub_2917() );
            RESET_PLAYER_INPUT_GAIT( 0 );
            SET_PED_VISIBLE( sub_2917(), 0 );
        }
        g_U1790 = 4;
        break;
        case 4:
        if (((NOT (sub_15559( g_U1880 ))) AND (NOT g_U1901._fU20)) || (sub_4195( ref g_U1901 )))
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
            if (NOT (IS_PED_DEAD( sub_2917() )))
            {
                SET_PED_VISIBLE( sub_2917(), 1 );
            }
            sub_553( "SBA", "HANDLE_BRANCO_RECEIPT_CAM: Cam cut done, going to eBrancoReceipt = ASS_FINISHED", 0 );
            g_U1790 = 5;
        }
        break;
        case 5:
        sub_15870( 1, 1 );
        Result = 1;
        sub_553( "SBA", "HANDLE_BRANCO_RECEIPT_CAM: going to eBrancoReceipt = ASS_INACTIVE", 0 );
        g_U1790 = -1;
        break;
    }
    return Result;
}

void sub_13800(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_2917() )))
        {
            SET_PLAYER_CONTROL( sub_2939(), 0, uParam2 );
            SET_PED_DUCKING( sub_2917(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_2917() );
            }
            SET_PED_INVINCIBLE( sub_2917(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_13960(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

void sub_14262(unknown uParam0, unknown uParam1)
{
    sub_553( "SBA", "P_SPEECH_PLAY_MAX_MONOLOGUE", "***" );
    if (sub_10375())
    {
        sub_14331( uParam1 );
        sub_14411( 0, sub_2917(), "MAX", uParam1, 2, 0 );
        sub_14411( 1, sub_2917(), "MAX", uParam1, 2, 0 );
        sub_14636( uParam0, uParam1, 8, 1 );
    }
    return;
}

void sub_14331(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_14411(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_14636(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_14660( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_14660(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_14715( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_14715(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_14750( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_15244( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_14750(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_15244(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

int sub_15559(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_15572( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

boolean sub_15572(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_15870(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_2917() )))
    {
        SET_PLAYER_CONTROL( sub_2939(), 1, 0 );
        SET_PED_INVINCIBLE( sub_2917(), 0 );
        if (bParam0)
        {
            sub_15951();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_15951()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_2917() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_2917(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_2917(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_2917(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_2917(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

int sub_16318(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND ((sub_16330( iParam0 )) == 0)))
    {
        if ((sub_12219() == 1) AND (((IS_PED_RELOADING( sub_2917() )) == 0) AND (((IS_PED_GETTING_UP( sub_2917() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP( sub_2917() )) == 0) AND (((IS_PED_IN_COVER( sub_2917() )) == 0) AND (((IS_PED_DUCKING( sub_2917() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_16330(int iParam0)
{
    return iParam0->_fU56;
}

int sub_16787(unknown uParam0)
{
    sub_553( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_6236( uParam0, sub_2917() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_17413()
{
    sub_553( "AT", "P_INITIALIZE_SCRIPT_DATA start", 0 );
    g_U1019 = 1;
    g_U1018 = 0;
    l_U374 = 0;
    l_U375 = 0;
    l_U376 = 0;
    l_U578[0] = {6.18200000, 27.82300000, 29.73200000};
    l_U578[1] = {5.65200000, 7.48800000, 29.73200000};
    l_U758[0] = {6.76150000, 29.54434000, 28.65191000};
    l_U765[0] = 205.02000000;
    l_U758[1] = {6.21000000, 5.71000000, 28.65191000};
    l_U765[1] = 0.29000000;
    l_U768[0] = {5.50200000, 31.82300000, 30.00000000};
    l_U775[0] = 310.00000000;
    l_U768[1] = {5.97300000, 3.09400000, 30.00000000};
    l_U775[1] = 90.00000000;
    l_U778[0] = 11.62487000;
    l_U781[0] = -4.90613400;
    l_U778[1] = 0.78177200;
    l_U781[1] = -9.21415500;
    sub_4732( ref l_U526 );
    sub_4732( ref l_U535 );
    l_U553 = 0;
    l_U554 = 0;
    l_U577 = 0;
    l_U373 = 1;
    sub_17838( ref l_U585[0], 1, l_U578[0], l_U578[0], l_U578[0], g_U1910, 3.00000000, 1, 0 );
    sub_18519( ref l_U585[0], 30, "POI_EXPLOSIVE" );
    sub_17838( ref l_U585[1], 1, l_U578[1], l_U578[1], l_U578[1], g_U1910, 3.00000000, 1, 0 );
    sub_18519( ref l_U585[1], 30, "POI_EXPLOSIVE" );
    l_U555 = 0;
    g_U1900 = 0;
    g_U1790 = -1;
    l_U784[2]._fU8 = {-5.98000000, 9.28000000, 30.31500000};
    l_U784[2]._fU20 = {90, 195, -10};
    l_U784[2]._fU32 = {-5.99000000, 9.25500000, 30.35000000};
    l_U784[2]._fU44 = {90, 195, -10};
    l_U784[1]._fU8 = {5.89000000, 7.04000000, 30.16000000};
    l_U784[1]._fU20 = {90, 65446, -10};
    l_U784[1]._fU32 = {5.88000000, 7.01200000, 30.20000000};
    l_U784[1]._fU44 = {90, 65446, -10};
    l_U784[0]._fU8 = {6.82000000, 28.48000000, 30.20000000};
    l_U784[0]._fU20 = {65446, 65446, 65501};
    l_U784[0]._fU32 = {6.84000000, 28.51000000, 30.24000000};
    l_U784[0]._fU44 = {65446, 65446, 65501};
    l_U827 = 0;
    sub_553( "AT", "P_INITIALIZE_SCRIPT_DATA end", 0 );
    return;
}

void sub_17838(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
    sub_17853( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
    sub_18221( iParam0 );
    return;
}

void sub_17853(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_18221(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_18300( iParam0 );
    return;
}

void sub_18300(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_12340( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_12340( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_12340( iParam0, 1 );
            }
            else
            {
                sub_12340( iParam0, 0 );
            };;;
        }
        else
        {
            sub_12340( iParam0, 0 );
        }
    }
    else
    {
        sub_12340( iParam0, 0 );
    }
    return;
}

void sub_18519(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_18550( iParam0 );
    return;
}

void sub_18550(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_19134()
{
    sub_553( "AT", "P_SET_STATIC_DATA start", 0 );
    sub_19250( ref l_U399, "TRIGGER_ARMOURY", -6.24000000, 0.21000000, 28.49000000, 2.50000000, 4.00000000, 2.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_19250( ref l_U556, "TRIGGER_ARMOURY_WALK", -6.38000000, 3.27000000, 28.49000000, 3.00000000, 4.00000000, 3.00000000, 0.00000000, 0.00000000, 88.50000000, 1 );
    sub_19250( ref l_U420, "TRIGGER_PILLAR_SPEECH", 14.10000000, 33.53600000, 28.49000000, 6.11000000, 3.23000000, 2.11000000, 0.00000000, 0.00000000, -43.74000000, 1 );
    sub_19250( ref l_U378, "TRIGGER_GATE_SPEECH", -10.11000000, 4.89000000, 28.49000000, 1.50000000, 2.50000000, 2.11000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_19250( ref l_U441, "TRIGGER_IMAGEFX_CP05", 13.60000000, 32.93000000, 28.49000000, 6.11000000, 6.23000000, 2.11000000, 0.00000000, 0.00000000, -43.74000000, 1 );
    sub_19658( ref g_U1652, 1, 1, 0.20000000 );
    sub_19907( ref l_U462, g_U1476, 26.33442000, 41.70376000, 29.75548000, g_U657 );
    sub_19907( ref l_U469, g_U1477, 24.97613000, 43.92115000, 29.75548000, g_U657 );
    sub_19995( ref l_U462, 0, 90 );
    sub_19995( ref l_U469, 65446, 0 );
    sub_20109( ref l_U462, 1 );
    sub_20109( ref l_U469, 1 );
    sub_20183( ref l_U462, 1 );
    sub_20183( ref l_U469, 1 );
    sub_20323( ref l_U462, 1 );
    sub_20323( ref l_U469, 1 );
    sub_20469( ref l_U462, ref l_U469 );
    sub_553( "AT", "P_SET_STATIC_DATA end", 0 );
    return;
}

void sub_19250(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_19658(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_19670( iParam0 )) == 0)
    {
        sub_19736( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

int sub_19670(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_19736(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_19907(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

void sub_19995(int iParam0, float fParam1, float fParam2)
{
    if ((sub_19670( iParam0 )) == 0)
    {
        sub_19736( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        ;
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

void sub_20109(int iParam0, unknown uParam1)
{
    if ((sub_19670( iParam0 )) == 0)
    {
        sub_19736( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_AUTO_CLOSE( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

void sub_20183(int iParam0, int iParam1)
{
    if ((sub_19670( iParam0 )) == 0)
    {
        sub_19736( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

void sub_20323(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_19670( iParam0 )) == 0)
    {
        sub_19736( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

void sub_20469(unknown uParam0, unknown uParam1)
{
    sub_19995( uParam0, 0, 90 );
    sub_19995( uParam1, 65446, 0 );
    sub_20109( uParam0, 1 );
    sub_20109( uParam1, 1 );
    return;
}

void sub_20869()
{
    sub_553( "SBA", "P_SETUP_GAMEPLAY", 0 );
    sub_20910();
    sub_20323( ref l_U462, 0 );
    sub_20323( ref l_U469, 0 );
    sub_19658( ref l_U462, 1, 0, 0.20000000 );
    sub_19658( ref l_U462, 1, 0, 0.10000000 );
    return;
}

void sub_20910()
{
    sub_553( "CO", "P_CREATE_S_HOT_GG_G3_02", 0 );
    sub_21020( ref g_U812, g_U852, -1011553821, 560477456, -7.22000000, 26.34000000, 28.69000000, 1.50000000, 0.00000000, 10.00000000, "Room_F5_01" );
    sub_21149( ref g_U812 );
    return;
}

void sub_21020(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_553( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_21149(int iParam0)
{
    sub_553( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_21210( iParam0->_fU12 )) == 1)
        {
            sub_553( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_553( "CO", "has never been collected.", 0 );
        }
        if ((sub_21210( iParam0->_fU12 )) == 0)
        {
            sub_21415( iParam0->_fU0 );
            iParam0->_fU0 = sub_21483( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_553( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_553( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_21210(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_21415(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_21483(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_21890(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_21902( uParam0 );
    sub_22019( uParam0, uParam1, uParam2, uParam3, uParam6, uParam7, uParam8, uParam9 );
    return;
}

void sub_21902(int iParam0)
{
    unknown uVar3;

    sub_553( "BSW", "SAVE_WATERBOTTLE_STATE start", 0 );
    uVar3 = sub_10313();
    if (GET_DOES_WEAPON_EXIST( uVar3 ))
    {
        iParam0->_fU48 = GET_SUPPRESSOR_DAMAGE_LEVEL( uVar3 );
    }
    return;
}

void sub_22019(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_553( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_553( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_9075( iParam1 );
        sub_22278( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_22729( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_22729( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_22961( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_22729( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_22961( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_22961( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_22729( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_22961( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_22961( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_22961( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_22729( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_22961( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_22961( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_22961( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_22961( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_24519( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_553( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_22278(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_6452( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_553( "TEH", "Ending context", 0 );
        sub_553( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_22729(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_22961(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_24519(int iParam0)
{
    sub_1150( "CHECKPOINT DATA" );
    sub_24558( iParam0->_fU4 );
    sub_24581( iParam0->_fU16 );
    sub_24581( iParam0->_fU20 );
    sub_24581( iParam0->_fU24 );
    sub_2210( iParam0->_fU28 );
    sub_2210( iParam0->_fU56 );
    sub_2210( iParam0->_fU60 );
    sub_2210( iParam0->_fU64 );
    sub_2210( iParam0->_fU68 );
    sub_2210( iParam0->_fU72 );
    sub_2210( iParam0->_fU76 );
    sub_2210( iParam0->_fU80 );
    sub_2210( iParam0->_fU84 );
    sub_2210( iParam0->_fU88 );
    sub_2210( iParam0->_fU92 );
    sub_24581( iParam0->_fU32 );
    sub_2210( iParam0->_fU36 );
    sub_2210( iParam0->_fU40 );
    sub_2210( iParam0->_fU44 );
    sub_24581( iParam0->_fU136 );
    sub_24816( iParam0->_fU140 );
    sub_2210( iParam0->_fU52 );
    sub_1150( "---nRightHolsterAttachmentEnabled: " );
    sub_2210( iParam0->_fU96 );
    sub_1150( "---nRightHolsterAttachmentToggled: " );
    sub_2210( iParam0->_fU100 );
    sub_1150( "---nLeftHolsterAttachmentEnabled: " );
    sub_2210( iParam0->_fU104 );
    sub_1150( "---nLeftHolsterAttachmentToggled: " );
    sub_2210( iParam0->_fU108 );
    sub_1150( "---nRifleHolsterAttachmentEnabled: " );
    sub_2210( iParam0->_fU112 );
    sub_1150( "---nRifleHolsterAttachmentToggled: " );
    sub_2210( iParam0->_fU116 );
    sub_1150( "---nRightHandAttachmentEnabled: " );
    sub_2210( iParam0->_fU120 );
    sub_1150( "---nRightHandAttachmentToggled: " );
    sub_2210( iParam0->_fU124 );
    sub_1150( "---nLeftHandAttachmentEnabled: " );
    sub_2210( iParam0->_fU128 );
    sub_1150( "---nLeftHandAttachmentToggled: " );
    sub_2210( iParam0->_fU132 );
    sub_2210( l_U1 );
    sub_2210( 144 );
    return;
}

void sub_24558(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_24581(unknown uParam0)
{
    return;
}

void sub_24816(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_25652(int iParam0)
{
    sub_553( "SBA", "P_CREATE_5TH_FLOOR_EXPLOSIVE", 0 );
    sub_5782( iParam0->_fU0 );
    iParam0->_fU0 = sub_25735( 24025937, iParam0->_fU8, iParam0->_fU20, 0, 0, 0 );
    iParam0->_fU4 = sub_25735( -1991592028, iParam0->_fU32, iParam0->_fU44, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( iParam0->_fU0 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, ref g_U1418 );
        FREEZE_OBJECT_POSITION( iParam0->_fU0, 1 );
    }
    if (DOES_OBJECT_EXIST( iParam0->_fU4 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU4, ref g_U1418 );
        FREEZE_OBJECT_POSITION( iParam0->_fU4, 1 );
    }
    return;
}

void sub_25735(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_1045( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_26112(int iParam0, unknown uParam1)
{
    if ((sub_19670( iParam0 )) == 0)
    {
        sub_19736( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_LATCH( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

void sub_26182(unknown uParam0)
{
    int iVar3;
    string sVar4;

    switch (uParam0)
    {
        case 20:
        case 0:
        iVar3 = 20;
        sVar4 = "SUNNY";
        break;
        case 1:
        iVar3 = 12;
        sVar4 = "SUNNY";
        break;
        case 2:
        case 3:
        case 4:
        iVar3 = 9;
        sVar4 = "SUNNY";
        break;
        case 5:
        iVar3 = 12;
        sVar4 = "SUNNY";
        break;
        case 6:
        case 7:
        case 8:
        case 9:
        iVar3 = 9;
        sVar4 = "SUNNY_WINDY";
        break;
        case 10:
        iVar3 = 12;
        sVar4 = "SUNNY_WINDY";
        break;
        default:
        iVar3 = 12;
        sVar4 = "SUNNY";
        break;
    }
    SET_TIME_OF_DAY( iVar3, 0 );
    FREEZE_TIME_OF_DAY( iVar3, 0 );
    SET_WEATHER_TYPE_NOW_PERSIST( sVar4 );
    SET_WEATHER_TRANSITION_IMMEDIATE( 1 );
    return;
}

void sub_26480()
{
    sub_553( "SBA", "P_CREATE_FIFTH_FLOOR_PLACEMENTS start", 0 );
    if (NOT g_U1007)
    {
        sub_553( "SBA", "P_CREATE_FIFTH_FLOOR_PLACEMENTS: creating RPD", 0 );
        sub_21415( g_U1010 );
        g_U1010 = sub_21483( -217311068, -5.28500000, -2.11900000, 29.08000000, 0.00000000, -1.08000000, -1.52000000, 1, 1, 0, 1119092736 );
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U1010, ref g_U1418 );
    }
    if (NOT g_U1005)
    {
        sub_553( "SBA", "P_CREATE_FIFTH_FLOOR_PLACEMENTS: creating pills 1", 0 );
        sub_21415( g_U1011[0] );
        g_U1011[0] = sub_21483( -4072149, -7.28500000, -2.20000000, 29.62100000, 0, 0, 0.50000000, 0, 0, 0, 1119092736 );
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U1011[0], ref g_U1418 );
    }
    if (NOT g_U1006)
    {
        sub_553( "SBA", "P_CREATE_FIFTH_FLOOR_PLACEMENTS: creating pills 2", 0 );
        sub_21415( g_U1011[1] );
        g_U1011[1] = sub_21483( -4072149, -7.58500000, -2.26000000, 29.62100000, g_U657, 0, 0, 0, 1119092736 );
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U1011[1], ref g_U1418 );
    }
    if (NOT (DOES_PLACEMENT_EXIST( g_U1017 )))
    {
        sub_553( "SBA", "P_CHECK_5TH_FLOOR_PLACEMENTS: CREATE AMMO BAG", "***" );
        sub_21415( g_U1017 );
        g_U1017 = CREATE_AMMOBAG_PLACEMENT_ROTATE( -8.95000000, -2.16500000, 28.74000000, 0, 0, 1.87000000, 0, -1.00000000, 0, 1119092736 );
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U1017, ref g_U1418 );
        sub_27177( g_U1017 );
        SET_AMMOBAG_AMMO_AMOUNT( g_U1017, 581312862, 100 );
    }
    sub_553( "SBA", "P_CREATE_FIFTH_FLOOR_PLACEMENTS end", 0 );
    return;
}

void sub_27177(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        SET_AMMOBAG_REGEN_TIME( uParam0, 10.00000000 );
        SET_AMMOBAG_REGEN_RANGE( uParam0, 3.00000000 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1088031219, 45 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 954369040, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1138793073, 95 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1087746638, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1295933220, 30 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1383321053, 85 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1481241171, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1889644301, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -790090695, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1742569970, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1575030772, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1622373246, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 558118158, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1701914198, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1126469201, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 936600426, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 205668857, 0 );
    }
    return;
}

void sub_27578()
{
    sub_553( "SBA", "P_CREATE_BRANCO_RECEIPT_POI", 0 );
    sub_17838( ref g_U1791, 1, g_U1877, g_U1877, g_U1877, 1.50000000, 3.00000000, 1, 0 );
    sub_18519( ref g_U1791, 30, "POI_HOT_RECEIPT" );
    sub_27703( ref g_U1791, 1 );
    sub_27735( ref g_U1791, 0 );
    sub_27767( ref g_U1791, 0 );
    return;
}

void sub_27703(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

void sub_27735(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

void sub_27767(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
    sub_11848( iParam0 );
    return;
}

void sub_27838(boolean bParam0, boolean bParam1, unknown uParam2)
{
    int Result;

    Result = 0;
    if (IS_STRING_NULL( uParam2 ))
    {
        uParam2 = l_U236;
    }
    switch (l_U217)
    {
        case 1:
        sub_553( "RJM", "PLAY_HOTEL_CUT_12_03 start", "*****" );
        sub_13800( 1, 0, 0, 1 );
        sub_1568( uParam2, 1 );
        if (NOT bParam0)
        {
            sub_28005();
        }
        else
        {
            sub_1355( 1179793949, 1 );
            CUTSCENE_REGISTER_ISEQ( 1179793949 );
        }
        sub_28301();
        sub_29184( ref l_U237, bParam0 );
        sub_31246();
        ISEQ_REGISTER_ENTITY( 1179793949, "fifth_door", g_U1729, 1 );
        l_U217 = 2;
        break;
        case 2:
        if (bParam1)
        {
            START_CUTSCENE_CAPTURE( uParam2 );
        }
        CUTSCENE_ENABLE_SKIP( 0 );
        START_SEAMLESS_CUTSCENE();
        l_U217 = 3;
        break;
        case 3:
        l_U217 = 4;
        break;
        case 4:
        if (HAS_CUTSCENE_FINISHED())
        {
            sub_30525( l_U218, 1 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_HOTEL_CP_05", "B_OUT_12_03_HOTEL_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
            l_U217 = 5;
        }
        break;
        case 5:
        if (bParam1)
        {
            STOP_CUTSCENE_CAPTURE();
        }
        Result = 1;
        sub_31683();
        sub_31905( ref l_U237 );
        sub_15870( 1, 1 );
        l_U217 = 0;
        sub_553( "RJM", "PLAY_HOTEL_CUT_12_03 end", "*****" );
        break;
        case 0:
        l_U217 = 1;
        break;
    }
    return Result;
}

void sub_28005()
{
    sub_553( "RJM", "BLOCKLOAD_HOTEL_CUT_12_03_ASSETS", "***" );
    sub_28072( -643110723 );
    sub_28072( 75711909 );
    return;
}

void sub_28072(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_1150( "[SP]### ERROR! (BlockLoadModel) Trying to block load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    LOAD_ALL_OBJECTS_NOW();
    while ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        LOAD_ALL_OBJECTS_NOW();
        WAIT( 0 );
    }
    return;
}

void sub_28301()
{
    int I;

    sub_28336( ref l_U240[0], 0, 0, 0, 0, -1929099819, 26, 6, 0, 0, 0 );
    sub_28336( ref l_U240[1], 0, 0, 0, 0, 1856636111, 26, 6, 0, 0, 0 );
    for ( I = 0; I <= (l_U237 - 1); I++ )
    {
        l_U237[I] = sub_28499( ref l_U240[I] );
    }
    return;
}

void sub_28336(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_28499(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_1045( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_28978( iParam0->_fU40 );
    sub_29058( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_28978(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_29058(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_29184(unknown uParam0, boolean bParam1)
{
    sub_553( "RJM", "REGISTER_PEDS_HOTEL_CUT_12_03", "***" );
    if (sub_10375())
    {
        sub_29259( ref l_U218, 1, 1 );
        sub_30525( l_U218, 0 );
        sub_30624( 1 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_2917(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( sub_2917(), 0, 0 ), "W_PI_Clt1911_Aa_H", 0 );
        if (bParam1)
        {
            CUTSCENE_REGISTER_PED_TELEPORT( sub_2917(), 34.33100000, 48.73200000, 28.65600000, 120.00000000 );
        }
        ISEQ_REGISTER_ENTITY( 1179793949, "max", sub_2917(), 0 );
    }
    sub_31158( ref (uParam0^)[0], "Sero_Unif_3" );
    sub_31158( ref (uParam0^)[1], "Dr_Arth_Doc" );
    return;
}

void sub_29259(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

    sub_29271( iParam0 );
    if ((IS_PED_DEAD( sub_2917() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND( sub_2917(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if ((sub_29450( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if ((sub_29678( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND( sub_2917(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER( sub_2917(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER( sub_2917(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER( sub_2917(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD( sub_2917() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND( sub_2917(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_2917(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND( sub_2917(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_2917(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD( sub_2917() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND( sub_2917(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if ((sub_29678( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND( sub_2917(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND( sub_2917(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_2917(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

void sub_29271(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

int sub_29450(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_29678(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_30525(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;

    uVar21 = uParam0._fU24._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar21, uParam18 );
    }
    uVar22 = uParam0._fU60._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar22, uParam18 );
    }
    return;
}

void sub_30624(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_2917() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND( sub_2917(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if (((sub_29450( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 = sub_30729();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_2917(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

int sub_30729()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_2917() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_2917(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_29450( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_2917(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_2917(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_2917(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

void sub_31158(unknown uParam0, unknown uParam1)
{
    if (sub_10390( (uParam0^) ))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( (uParam0^), uParam1, 1 );
        SET_PED_NAME_DEBUG( (uParam0^), uParam1 );
    }
    return;
}

void sub_31246()
{
    sub_553( "BSW", "CREATE_BLENDOUT_DOOR start", 0 );
    sub_5782( g_U1729 );
    sub_1045( -1538058993, 1 );
    g_U1729 = sub_25735( -1538058993, 33.29000000, 48.88000000, 28.65198000, 0.00000000, 0.00000000, 120.00000000, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( g_U1729 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U1729, ref g_U1434 );
        FREEZE_OBJECT_POSITION( g_U1729, 1 );
    }
    sub_553( "BSW", "CREATE_BLENDOUT_DOOR end", 0 );
    return;
}

void sub_31683()
{
    sub_553( "RJM", "UNLOAD_HOTEL_CUT_12_03_ASSETS", "***" );
    sub_31747( -643110723 );
    sub_31747( 75711909 );
    return;
}

void sub_31747(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_1150( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_31905(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_31939( (uParam0^)[I] );
    }
    return;
}

void sub_31939(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_32205()
{
    int Result;

    Result = 0;
    switch (l_U374)
    {
        case 0:
        sub_13800( 1, 0, 0, 1 );
        sub_553( "bsw", "HANDLE_12_03_BLENDOUT - BLENDOUT_START", 0 );
        if ((ISEQ_QUERY_STATE( 1179793949, 3 )) == 0)
        {
            sub_553( "bsw", "starting HANDLE_12_03_BLENDOUT WITHOUT the cutscene", 0 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_HOTEL_CP_05", "B_OUT_12_03_HOTEL_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
            sub_31246();
            sub_1355( 1179793949, 1 );
            sub_32527( sub_2917(), 34.33100000, 48.73200000, 28.65600000, 120.00000000 );
            ISEQ_REGISTER_ENTITY( 1179793949, "max", sub_2917(), 0 );
            ISEQ_REGISTER_ENTITY( 1179793949, "fifth_door", g_U1729, 1 );
            ISEQ_START( 1179793949 );
            FREEZE_PED_POSITION( sub_2917(), 0 );
            sub_32666();
        }
        sub_3939( ref l_U995, l_U1013, 1, 0 );
        sub_4075( ref l_U995 );
        sub_3939( ref l_U1004, l_U1016, 1, 0 );
        sub_4075( ref l_U1004 );
        DO_SCREEN_FADE_IN( 0 );
        sub_32843( "SHOT_MXOTDR", ref l_U476 );
        l_U204 = 3;
        l_U374 = 2;
        break;
        case 2:
        l_U374 = 1;
        break;
        case 1:
        if (sub_4195( ref l_U1004 ))
        {
            sub_553( "bsw", "simulating player gait", 0 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1158[6], 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1193[6], 1065353216, 0 );
            SIMULATE_PLAYER_INPUT_GAIT( sub_2939(), 2, l_U1017, 0 );
        }
        if (sub_4195( ref l_U995 ))
        {
            CAMERA_FREEZE_FRAME( 1, 500, 0, 0 );
            l_U374 = 3;
        }
        break;
        case 3:
        Result = 1;
        sub_5782( g_U1729 );
        sub_15870( 1, 1 );
        break;
    }
    return Result;
}

void sub_32527(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_32666()
{
    unknown uVar2;

    sub_553( "BSW", "CLEAR_FORCED_COLLISION_LOAD_FOR_HOTEL", 0 );
    uVar2 = GET_INTERIOR_AT_COORDS( g_U1020[g_U854] );
    CLEAR_INTERIOR_COLLISION_REQUIRED( uVar2 );
    return;
}

void sub_32843(unknown uParam0, unknown uParam1)
{
    sub_14331( uParam1 );
    sub_14411( 0, sub_2917(), "MAX", uParam1, 2, 0 );
    sub_14411( 1, sub_2917(), "MAX", uParam1, 2, 0 );
    sub_14636( uParam0, uParam1, 8, 1 );
    return;
}

void sub_33170(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (DOES_PLACEMENT_EXIST( (uParam0^)[I] ))
        {
            sub_553( "RJM", "DO_ANY_PAINKILLERS_STILL_EXIST - Found a pill in there, we can still play some V.O.", 0 );
            (uParam1^)[I] = 1;
        }
        else
        {
            (uParam1^)[I] = 0;
        }
    }
    return;
}

void sub_33420()
{
    if (NOT (IS_PED_DEAD( sub_2917() )))
    {
        if (l_U577)
        {
            if (NOT (sub_33464( l_U556 )))
            {
                sub_553( "GA", "Player moved away from forced to walk close to armory door trigger.", 0 );
                SET_PED_FORCED_TO_WALK( sub_2917(), 0 );
                l_U577 = 0;
            }
        }
        else if (sub_33464( l_U556 ))
        {
            sub_553( "GA", "Player forced to walk close to armory door trigger.", 0 );
            SET_PED_FORCED_TO_WALK( sub_2917(), 1 );
            l_U577 = 1;
        }
    }
    return;
}

void sub_33464(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_11059( sub_2917(), uParam0 );
}

void sub_33719(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_11059( sub_2917(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_33902()
{
    unknown uVar2;

    sub_553( "CCB", "P_INITIALIZE_IMAGEFX_MID_CP_05", 0 );
    sub_33961( ref l_U859 );
    l_U859[0]._fU4 = "DOUBLE_TINT_BLUE_FLASH";
    l_U859[0]._fU12 = 0;
    l_U859[0]._fU16 = 1500;
    l_U859[0]._fU8 = 4;
    l_U859[0]._fU32 = 0;
    l_U859[1]._fU4 = "INTERLACE_LIGHT";
    l_U859[1]._fU12 = 100;
    l_U859[1]._fU8 = 4;
    l_U859[1]._fU32 = 0;
    l_U859[2]._fU4 = "FLASH_WHITE";
    l_U859[2]._fU12 = 200;
    l_U859[2]._fU8 = 4;
    l_U859[2]._fU32 = 0;
    l_U859[3]._fU4 = "DOUBLE_MOVE_RIGHT";
    l_U859[3]._fU12 = 600;
    l_U859[3]._fU24 = 1;
    l_U859[3]._fU8 = 4;
    l_U859[3]._fU32 = 0;
    l_U859[4]._fU4 = "FLASH_WHITE";
    l_U859[4]._fU12 = 1300;
    l_U859[4]._fU8 = 4;
    l_U859[4]._fU32 = 0;
    l_U200 = 0;
    return;
}

void sub_33961(unknown uParam0)
{
    int I;

    sub_553( "CO", "P_INIT_IMAGEFX", 0 );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU4 = "";
        (uParam0^)[I]._fU12 = 0;
        (uParam0^)[I]._fU16 = 0;
        (uParam0^)[I]._fU20 = 0;
        (uParam0^)[I]._fU24 = 0;
        (uParam0^)[I]._fU28 = 0;
        (uParam0^)[I]._fU32 = 1;
    }
    return;
}

void sub_34585()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

void sub_34761()
{
    if (sub_33719( ref l_U378, 0 ))
    {
        sub_3939( ref l_U526, 600, 1, 0 );
        sub_4075( ref l_U526 );
    }
    if (sub_4195( ref l_U526 ))
    {
        if (NOT sub_34585())
        {
            sub_14262( "SHOT_MXGTRMP", ref l_U496 );
        }
    }
    return;
}

int sub_34901(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    if ((IS_PLAYER_DEAD( sub_2939() )) == 0)
    {
        if (sub_34585() == 0)
        {
            for ( I = 0; I <= ((uParam1^) - 1); I++ )
            {
                if ((uParam2^)[I])
                {
                    if ((HAS_PLACEMENT_BEEN_COLLECTED( (uParam1^)[I] )) || (NOT (DOES_PLACEMENT_EXIST( (uParam1^)[I] ))))
                    {
                        (uParam2^)[I] = 0;
                        if (TIME_SINCE_LAST_MONOLOGUE() > 5000)
                        {
                            sub_14331( ref l_U190 );
                            sub_14262( uParam0, ref l_U190 );
                            return 1;
                        }
                    }
                }
            }
        }
    }
    return 0;
}

void sub_35236()
{
    sub_553( "RJM", "REGISTER_PEDS_HOTEL_CUT_12_04", "***" );
    if (sub_10375())
    {
        sub_29259( ref l_U838, 0, 1 );
        sub_35317( 0 );
        l_U856 = sub_30729();
        if (GET_DOES_WEAPON_EXIST( l_U856 ))
        {
            SET_WEAPON_VISIBLE( l_U856, 1 );
            SELECT_WEAPON_TO_HAND( sub_2917(), l_U856, 0, 1 );
        }
        CUTSCENE_REGISTER_PED_TELEPORT( sub_2917(), g_U1020[7], g_U1123[7] );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_2917(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U856, "W_PI_Clt1911_Aa_H", 0 );
        ISEQ_REGISTER_ENTITY( 951295712, "max", sub_2917(), 0 );
    }
    REGISTER_HIDE_ENTITY_AT_POSITION( -995190896, -5.57350000, 1.90177000, 29.94901000 );
    return;
}

void sub_35317(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_2917() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_2917(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_2917(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_2917(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_2917(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_2917(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_35815(unknown uParam0)
{
    int I;
    int J;

    switch (l_U200)
    {
        case 0:
        sub_553( "CO", "P_HANDLE_IMAGEFX", 0 );
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (uParam0^)[I]._fU32)
            {
                sub_3939( ref (uParam0^)[I]._fU36, (uParam0^)[I]._fU12, 1, 0 );
                sub_4075( ref (uParam0^)[I]._fU36 );
                if ((uParam0^)[I]._fU20 > 0)
                {
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        l_U200 = 1;
        break;
        case 1:
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (sub_4195( ref (uParam0^)[I]._fU36 ))
            {
                (uParam0^)[I]._fU0 = PLAY_IMAGEFX( (uParam0^)[I]._fU4, (uParam0^)[I]._fU8, (uParam0^)[I]._fU28 );
                if ((uParam0^)[I]._fU16 > 0)
                {
                    sub_3939( ref (uParam0^)[I]._fU72, (uParam0^)[I]._fU16, 1, 0 );
                    sub_4075( ref (uParam0^)[I]._fU72 );
                }
                if ((uParam0^)[I]._fU20 > 0)
                {
                    for ( J = I + 1; J <= (I + (uParam0^)[I]._fU20); J++ )
                    {
                        (uParam0^)[J]._fU0 = PLAY_IMAGEFX( (uParam0^)[J]._fU4, (uParam0^)[J]._fU8, (uParam0^)[I]._fU28 );
                        if ((uParam0^)[J]._fU16 > 0)
                        {
                            sub_3939( ref (uParam0^)[J]._fU72, (uParam0^)[J]._fU16, 1, 0 );
                            sub_4075( ref (uParam0^)[J]._fU72 );
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
            if (sub_4195( ref (uParam0^)[I]._fU72 ))
            {
                STOP_IMAGEFX( (uParam0^)[I]._fU0, (uParam0^)[I]._fU24 );
                (uParam0^)[I]._fU32 = 1;
                if ((uParam0^)[I]._fU20 > 0)
                {
                    if ((uParam0^)[I]._fU20 == 1)
                    {
                        STOP_IMAGEFX( (uParam0^)[I + 1]._fU0, (uParam0^)[I + 1]._fU24 );
                        (uParam0^)[I + 1]._fU32 = 1;
                    }
                    else
                    {
                        for ( J = I + 1; J <= (uParam0^)[I]._fU20; J++ )
                        {
                            STOP_IMAGEFX( (uParam0^)[J]._fU0, (uParam0^)[J]._fU24 );
                            (uParam0^)[J]._fU32 = 1;
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        break;
    }
    return;
}

void sub_36566(boolean bParam0, boolean bParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    Result = 0;
    if (IS_STRING_NULL( uParam2 ))
    {
        uParam2 = l_U858;
    }
    switch (l_U837)
    {
        case 1:
        sub_553( "RJM", "PLAY_HOTEL_CUT_12_04 start", "*****" );
        sub_1568( uParam2, 1 );
        sub_13800( 1, 0, 0, 1 );
        if (NOT bParam0)
        {
            sub_36725();
            sub_35236();
        }
        else
        {
            sub_1355( 951295712, 1 );
            CUTSCENE_REGISTER_ISEQ( 951295712 );
        }
        l_U837 = 2;
        break;
        case 2:
        if (bParam1)
        {
            START_CUTSCENE_CAPTURE( uParam2 );
        }
        START_SEAMLESS_CUTSCENE();
        l_U837 = 3;
        break;
        case 3:
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1158[7], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1193[7], 1065353216, 0 );
        l_U837 = 4;
        break;
        case 4:
        if (HAS_CUTSCENE_FINISHED())
        {
            CAMERA_PLAY_ANIMATED( "LEVEL_S_HOTEL_CP_06", "B_OUT_12_04_HOTEL_FWD_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
            if (bParam1)
            {
                STOP_CUTSCENE_CAPTURE();
            }
            sub_35317( 1 );
            Result = 1;
            if (NOT bParam0)
            {
                sub_37049();
            }
            sub_553( "RJM", "PLAY_HOTEL_CUT_12_04 end", "*****" );
            l_U837 = 0;
        }
        else
        {
            iVar6 = GET_CUTSCENE_TIME_MS();
            if (l_U203 == 4)
            {
                if (iVar6 > 12000)
                {
                    l_U204 = 4;
                }
            }
            if ((NOT l_U857) AND (iVar6 > 33000))
            {
                sub_553( "SBA", "PLAY_HOTEL_CUT_12_04: Making rifle visible", "***" );
                sub_30525( l_U838, 1 );
                l_U857 = 1;
            }
        }
        break;
        case 0:
        l_U837 = 1;
        break;
    }
    return Result;
}

void sub_36725()
{
    sub_553( "RJM", "BLOCKLOAD_HOTEL_CUT_12_04_ASSETS", "***" );
    return;
}

void sub_37049()
{
    sub_553( "RJM", "UNLOAD_HOTEL_CUT_12_04_ASSETS", "***" );
    return;
}

void sub_37461()
{
    int Result;

    Result = 0;
    switch (l_U375)
    {
        case 0:
        sub_13800( 1, 0, 0, 1 );
        l_U203 = 5;
        l_U204 = 5;
        sub_553( "bsw", "HANDLE_12_04_BLENDOUT - BLENDOUT_START", 0 );
        if ((ISEQ_QUERY_STATE( 951295712, 3 )) == 0)
        {
            sub_553( "bsw", "starting HANDLE_12_04_BLENDOUT WITHOUT the cutscene", 0 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_HOTEL_CP_06", "B_OUT_12_04_HOTEL_FWD_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
            sub_1355( 951295712, 1 );
            ISEQ_REGISTER_ENTITY( 951295712, "max", sub_2917(), 0 );
            ISEQ_START( 951295712 );
            sub_32666();
        }
        DO_SCREEN_FADE_IN( 0 );
        l_U375 = 2;
        break;
        case 2:
        g_U855 = 7;
        if (NOT l_U336._fU0)
        {
            sub_21890( ref l_U336, g_U855, sub_2917(), g_U1020[g_U855], g_U1123[g_U855], g_U1158[g_U855], g_U1193[g_U855], 0 );
        }
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1158[7], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1193[7], 1065353216, 0 );
        l_U375 = 1;
        break;
        case 1:
        if ((CAMERA_ANIMATED_CURRENT_TIME() + 1) >= (CAMERA_ANIMATED_LENGTH( "LEVEL_S_HOTEL_CP_06", "B_OUT_12_04_HOTEL_FWD_CAM" )))
        {
            CAMERA_FREEZE_FRAME( 1, 750, 0, 0 );
            l_U375 = 3;
        }
        break;
        case 3:
        Result = 1;
        sub_5782( g_U1729 );
        sub_15870( 1, 1 );
        break;
    }
    return Result;
}

void sub_38216()
{
    if (NOT l_U553)
    {
        if (sub_4195( ref l_U544 ))
        {
            if (NOT sub_34585())
            {
                sub_14262( "SHOT_MXTLPLEX", ref l_U516 );
                l_U553 = 1;
            }
            else
            {
                sub_553( "SBA", "HANDLE_PILLAR_HINT_DIALOGUE: VO already playing, starting rety timer", 0 );
                sub_3939( ref l_U544, 5000, 1, 0 );
                sub_4075( ref l_U544 );
            }
        }
    }
    return;
}

int sub_38602()
{
    int Result;

    for ( Result = 0; Result < l_U585; Result++ )
    {
        if (l_U585[Result]._fU64)
        {
            return Result;
        }
    }
    return -1;
}

void sub_38836(boolean bParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, boolean bParam9, unknown uParam10)
{
    int Result;
    int iVar14;

    Result = 0;
    if (IS_STRING_NULL( uParam10 ))
    {
        uParam10 = l_U286;
    }
    switch (l_U267)
    {
        case 1:
        sub_553( "RJM", "PLAY_HOTEL_MID_07 start", "*****" );
        sub_1568( uParam10, 1 );
        sub_13800( 1, 0, 0, 1 );
        if (NOT bParam0)
        {
            sub_39004();
        }
        else
        {
            sub_1355( 951295712, 1 );
            CUTSCENE_REGISTER_ISEQ( 951295712 );
        }
        sub_39108( uParam1, uParam4 );
        l_U267 = 2;
        break;
        case 2:
        if (bParam9)
        {
            START_CUTSCENE_CAPTURE( uParam10 );
        }
        START_SEAMLESS_CUTSCENE();
        l_U267 = 3;
        break;
        case 3:
        sub_29259( ref l_U268, 0, 1 );
        sub_30624( 1 );
        sub_35317( 0 );
        if (sub_39393())
        {
            PLAYER_ENABLE_COMPONENT( 11, 0 );
        }
        l_U267 = 4;
        break;
        case 4:
        if (HAS_CUTSCENE_FINISHED())
        {
            sub_35317( 1 );
            if (sub_39393())
            {
                PLAYER_ENABLE_COMPONENT( 11, 1 );
            }
            g_U1003 = 1;
            if (bParam0)
            {
                CAMERA_PLAY_ANIMATED( "LEVEL_S_HOTEL_CP_06", "B_OUT_12_04_HOTEL_FWD_CAM", 1, uParam5, uParam8, 0, 0 );
            }
            l_U267 = 5;
        }
        else
        {
            iVar14 = GET_CUTSCENE_TIME_MS();
            if ((NOT g_U1003) AND (iVar14 > 7600))
            {
                g_U1003 = 1;
            }
        }
        break;
        case 5:
        if (bParam9)
        {
            STOP_CUTSCENE_CAPTURE();
        }
        Result = 1;
        sub_40194();
        if (NOT bParam0)
        {
            sub_15870( 1, 1 );
        }
        l_U267 = 0;
        sub_553( "RJM", "PLAY_HOTEL_MID_07 end", "*****" );
        break;
        case 0:
        l_U267 = 1;
        break;
    }
    return Result;
}

void sub_39004()
{
    sub_553( "RJM", "BLOCKLOAD_MID_07_ASSETS", "***" );
    sub_28072( 466468872 );
    return;
}

void sub_39108(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    sub_553( "RJM", "REGISTER_PEDS_MID_07", "***" );
    if (sub_10375())
    {
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_2917(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( sub_2917(), 0, 0 ), "W_PI_Clt1911_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( sub_2917(), uParam0, uParam3 );
        ISEQ_REGISTER_ENTITY( 951295712, "max", sub_2917(), 0 );
    }
    return;
}

int sub_39393()
{
    int iVar2;

    sub_553( "BSW", "CAN_TOGGLE_BAG start", "***" );
    iVar2 = sub_39450( GET_CUSTOM_PLAYER_VARIATION() );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        return 1;
    }
    if ((iVar2 == 48) || ((iVar2 == 47) || ((iVar2 == 46) || ((iVar2 == 45) || (iVar2 == 44)))))
    {
        sub_553( "BSW", "CAN_TOGGLE_BAG got a no-no variation, return false", "***" );
        return 0;
    }
    return 1;
}

int sub_39450(unknown uParam0)
{
    unknown uVar3;

    uVar3 = uParam0;
    switch (uVar3)
    {
        case 1:
        return 44;
        break;
        case 2:
        return 46;
        break;
        case 3:
        return 3;
        break;
        case 4:
        return 10;
        break;
        case 5:
        return 15;
        break;
        case 6:
        return 18;
        break;
        case 7:
        return 20;
        break;
        case 8:
        return 24;
        break;
        case 9:
        return 26;
        break;
        case 10:
        return 31;
        break;
        case 11:
        return 36;
        break;
        case 12:
        return 1;
        break;
        case 13:
        return 16;
        break;
        case 14:
        return 29;
        break;
        case 15:
        return 32;
        break;
        case 16:
        return 41;
        break;
        case 17:
        return 37;
        break;
        case 18:
        return 48;
        break;
        case 19:
        return 45;
        break;
        case 20:
        return 47;
        break;
    }
    return 49;
}

void sub_40194()
{
    sub_553( "RJM", "UNLOAD_MID_07_ASSETS", "***" );
    sub_31747( 466468872 );
    return;
}

void sub_40449(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    int Result;

    Result = 0;
    switch (l_U376)
    {
        case 0:
        sub_13800( 1, 0, 0, 1 );
        sub_553( "bsw", "HANDLE_12_04_BLENDOUT - BLENDOUT_START", 0 );
        if ((ISEQ_QUERY_STATE( 951295712, 3 )) == 0)
        {
            sub_553( "bsw", "starting HANDLE_12_04_BLENDOUT WITHOUT the cutscene", 0 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_HOTEL_CP_06", "B_OUT_12_04_HOTEL_FWD_CAM", 1, uParam0, uParam3, 0, 0 );
            sub_1355( 951295712, 1 );
            ISEQ_REGISTER_ENTITY( 951295712, "max", sub_2917(), 0 );
            ISEQ_START( 951295712 );
        }
        DO_SCREEN_FADE_IN( 0 );
        l_U376 = 2;
        break;
        case 2:
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
        l_U376 = 1;
        break;
        case 1:
        if ((CAMERA_ANIMATED_CURRENT_TIME() + 1) >= (CAMERA_ANIMATED_LENGTH( "LEVEL_S_HOTEL_CP_06", "B_OUT_12_04_HOTEL_FWD_CAM" )))
        {
            CAMERA_FREEZE_FRAME( 1, 750, 0, 0 );
            l_U376 = 3;
        }
        break;
        case 3:
        Result = 1;
        sub_15870( 1, 1 );
        break;
    }
    return Result;
}

void sub_41208()
{
    if (NOT (DOES_PLACEMENT_EXIST( g_U1011[0] )))
    {
        sub_553( "SBA", "P_CHECK_5TH_FLOOR_PLACEMENTS: gbGot5thFloorPills1 = TRUE", "***" );
        g_U1005 = 1;
    }
    if (NOT (DOES_PLACEMENT_EXIST( g_U1011[1] )))
    {
        sub_553( "SBA", "P_CHECK_5TH_FLOOR_PLACEMENTS: gbGot5thFloorPills2 = TRUE", "***" );
        g_U1006 = 1;
    }
    if (NOT (DOES_PLACEMENT_EXIST( g_U1010 )))
    {
        sub_553( "SBA", "P_CHECK_5TH_FLOOR_PLACEMENTS: gbGot5thFloorRPD = TRUE", "***" );
        g_U1007 = 1;
    }
    return;
}

void sub_41728()
{
    int I;

    sub_553( "AT", "P_UNLOAD_ASSETS start", 0 );
    for ( I = 0; I < l_U828; I++ )
    {
        sub_31747( l_U828[I] );
    }
    sub_31747( -643110723 );
    sub_31747( 75711909 );
    sub_41845( "EXPL_CAM" );
    sub_553( "AT", "P_UNLOAD_ASSETS end", 0 );
    return;
}

void sub_41845(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}


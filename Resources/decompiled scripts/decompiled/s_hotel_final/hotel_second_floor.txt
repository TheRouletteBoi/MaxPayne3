void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = -1;
    l_U40 = {64536, 64536, 64536};
    l_U89 = "PED_DEF";
    l_U131 = 1.00000000;
    l_U143 = 0;
    l_U184 = 0;
    l_U205 = 0;
    l_U207 = 1;
    l_U208 = 0;
    l_U209 = 1;
    l_U210 = 0;
    l_U221 = 1;
    l_U240 = "MID_04_HOTEL";
    l_U242 = 0;
    l_U243 = 0;
    l_U244 = 1500;
    l_U326 = 0;
    l_U328 = 0;
    l_U329 = 0;
    l_U330 = 762297658;
    l_U332 = {27.04000000, -51.90500000, 13.12000000};
    l_U355 = {25.07500000, 43.12600000, 13.68400000};
    l_U358 = {0.00000000, 0.00000000, 0.00000000};
    l_U373 = {-7.19000000, -7.42000000, 13.05300000};
    l_U383 = 0;
    l_U1401 = 0;
    l_U1402 = 0;
    l_U1403 = 0;
    l_U1404 = 0;
    l_U1405 = 0;
    l_U1406 = 0;
    l_U1427 = {28.80000000, -32.41000000, 13.05000000};
    l_U1430 = {0, 0, 338};
    l_U1435 = {28.83000000, -32.96000000, 14.01300000};
    l_U1438 = {-1.57000000, 0, 0.40160000};
    l_U1441 = {0.17500000, 0.10000000, -0.17500000};
    l_U1444 = {1.27000000, 0.90000000, 0.00000000};
    l_U1454 = {28.55000000, -31.21000000, 13.05500000};
    l_U1457 = {0.00000000, 0.00000000, 0.00000000};
    l_U1460 = {25.86000000, -31.75000000, 13.05000000};
    l_U1463 = {1.57000000, 0.00000000, 90.00000000};
    l_U1466 = {27.28000000, -31.36000000, 13.06000000};
    l_U1469 = {0.00000000, 0.00000000, 0.00000000};
    l_U1490 = 25;
    l_U1559 = {26.50500000, -31.67300000, 13.05200000};
    l_U1562 = {24.81991000, -28.99470000, 13.05261000};
    l_U1749 = 0;
    l_U1750 = 0;
    l_U1751 = 0;
    l_U1752 = 0;
    l_U1753 = 0;
    l_U1754 = 0;
    l_U1755 = 0;
    l_U1756 = 0;
    l_U1757 = 0;
    l_U1758 = 0;
    l_U1809 = 0;
    l_U1810 = 0;
    l_U1811 = 0;
    l_U2075 = -1;
    l_U2076 = {2.15000000, -5.75000000, 14.35000000};
    l_U2079 = {0.00000000, 0.00000000, 100.00000000};
    l_U2082 = {1.13400000, -6.32400000, 13.05295000};
    l_U2085 = 300.00000000;
    l_U2205 = {-0.72531400, -9.08833800, 15.48838000};
    l_U2208 = {-19.12753000, 0.00002400, -28.12246000};
    l_U2229 = -1;
    l_U2316 = {26.12000000, 31.28000000, 13.97000000};
    l_U2352 = -1;
    l_U2439 = {27.18000000, 28.35000000, 14.26000000};
    l_U2655 = 2000;
    l_U2656 = 1500;
    l_U2657 = (l_U2655 - l_U2656) + 250;
    l_U2689 = {26.50834000, -53.45348000, 14.71194000};
    l_U2692 = {-7.49281600, 0.00000400, -14.27298000};
    sub_1191( "AT", "Script hotel_second_floor.sc is starting up...", 0 );
    sub_1240();
    if ((g_U854 == 3) || (g_U854 == 2))
    {
        g_U855 = g_U854;
        l_U326 = 1;
        g_U993 = 1;
    }
    else
    {
        l_U326 = 3;
    }
    while (NOT IS_EXITFLAG_SET())
    {
        if ((g_U855 == 3) || (g_U855 == 2))
        {
            sub_1669();
        }
        sub_4395();
        if (l_U328 == 0)
        {
            sub_12928();
        }
        WAIT( 0 );
    }
    sub_6763();
    sub_68803();
    g_U994 = 1;
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "hotel_second_floor" );
    sub_1191( "AT", "Script hotel_second_floor.sc is terminating...", 0 );
    return;
}

void sub_1191(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_1240()
{
    sub_1191( "AT", "P_SETUP_ASSET_ARRAYS start", 0 );
    l_U2461[0] = 77932492;
    l_U2461[1] = -93977637;
    l_U2461[2] = g_U1443;
    l_U2461[3] = 2019393516;
    l_U2461[4] = -1020027274;
    l_U2461[5] = -1446636735;
    l_U2461[6] = -1024724348;
    l_U2461[7] = -1835643592;
    l_U2461[8] = -495772823;
    l_U2461[9] = 247925151;
    l_U2461[10] = 2108528827;
    l_U2461[11] = -1591126843;
    l_U2461[12] = l_U330;
    l_U2461[13] = -754907209;
    l_U2461[14] = 1426433289;
    l_U2461[15] = -1490597557;
    l_U2461[16] = -1166741530;
    l_U2461[17] = g_U1445;
    l_U2461[18] = g_U1446;
    sub_1191( "AT", "P_SETUP_ASSET_ARRAYS end", 0 );
    return;
}

void sub_1669()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;

    if (l_U209 != l_U207)
    {
        sub_1191( "TEH", "playing music:changed CUR FLAG", 0 );
        sub_1745( l_U207 );
        sub_1745( l_U208 );
        l_U209 = l_U207;
    }
    else if (l_U210 != l_U208)
    {
        sub_1191( "TEH", "playing music:changed NEW FLAG", 0 );
        sub_1745( l_U207 );
        sub_1745( l_U208 );
        l_U210 = l_U208;
    }
    switch (l_U207)
    {
        case 1:
        sub_1191( "TEH", "playing music: MC_STARTUP", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "HOTEL_SONG", "HOTEL_SONG_1", "", 0, -1, -1, -1082130432, 0 );
        l_U220 = 0;
        l_U207 = 4;
        l_U208 = 4;
        break;
        case 2:
        sub_1191( "TEH", "playing music: MC_CHECKPOINT_RESTART_SECOND_FLOOR ", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "HOTEL_SONG", "HOTEL_SONG_1", "", 0, -1, -1, -1082130432, 0 );
        l_U220 = 0;
        l_U207 = 4;
        l_U208 = 4;
        break;
        case 3:
        sub_1191( "TEH", "playing music: MC_CHECKPOINT_RESTART_SECOND_FLOOR_2", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "HOTEL_SONG", "HOTEL_SONG_1_4", "", 0, 0, 6000, -1082130432, 0 );
        l_U220 = 0;
        l_U207 = 13;
        l_U208 = 13;
        break;
        case 4:
        if (l_U208 == 4)
        {
            if (l_U220 == 0)
            {
                AUDIO_MUSIC_PRELOAD_ONESHOT( "HOTEL_ONESHOT_08", 0 );
                if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( 0 ))
                {
                    sub_1191( "TEH", "playing music: Sussesfully preloaded oneshot_08 ", 0 );
                    l_U220 = 1;
                    l_U207 = 5;
                }
            }
        }
        break;
        case 5:
        if (l_U208 == 5)
        {
            if (l_U220 == 1)
            {
                if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( 0 ))
                {
                    sub_1191( "TEH", "playing music: Sussesfully played oneshot_08 ", 0 );
                    AUDIO_MUSIC_PLAY_ONESHOT();
                    sub_1191( "TEH", "playing music: MC_FIGHT_STARTS ", 0 );
                    AUDIO_MUSIC_FORCE_TRACK( "HOTEL_SONG", "HOTEL_SONG_1_2", "", 0, 0, -1, -1082130432, 0 );
                    l_U220 = 0;
                    l_U207 = 6;
                }
            }
        }
        break;
        case 6:
        if ((AUDIO_MUSIC_IS_ONESHOT_PREPARED( 0 )) == 0)
        {
            l_U207 = 7;
            l_U208 = 7;
        }
        break;
        case 7:
        if (l_U208 == 7)
        {
            if (l_U220 == 0)
            {
                AUDIO_MUSIC_PRELOAD_ONESHOT( "HOTEL_ONESHOT_05", 0 );
                if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( 0 ))
                {
                    sub_1191( "TEH", "playing music: Sussesfully preloaded oneshot_5", 0 );
                    l_U220 = 1;
                    l_U207 = 8;
                }
            }
        }
        break;
        case 8:
        if (l_U208 == 8)
        {
            if (l_U220 == 1)
            {
                if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( 0 ))
                {
                    sub_1191( "TEH", "playing music: Sussesfully played oneshot_05", 0 );
                    AUDIO_MUSIC_PLAY_ONESHOT();
                    AUDIO_MUSIC_FORCE_TRACK( "HOTEL_SONG", "HOTEL_SONG_2_4", "", 0, 2000, 0, -1082130432, 0 );
                    l_U220 = 0;
                    l_U207 = 9;
                }
                else
                {
                    sub_1191( "TEH", "playing music: failing to play oneshot_05", 0 );
                }
            }
        }
        break;
        case 9:
        if (l_U208 == 9)
        {
            l_U220 = 0;
            sub_1191( "TEH", "CUE 2.4: playing music: MC_MAX_ON_BALCONY", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "HOTEL_SONG", "HOTEL_SONG_1_4", "", 0, 6000, -1, -1082130432, 0 );
            l_U207 = 10;
            l_U208 = 10;
        }
        break;
        case 10:
        if (l_U208 == 10)
        {
            if (l_U220 == 0)
            {
                AUDIO_MUSIC_PRELOAD_ONESHOT( "HOTEL_ONESHOT_02", 0 );
                if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( "HOTEL_ONESHOT_02" ))
                {
                    sub_1191( "TEH", "playing music: Sussesfully preloaded oneshot_02", 0 );
                    l_U220 = 1;
                    l_U207 = 11;
                }
            }
        }
        break;
        case 11:
        if (l_U208 == 11)
        {
            if (l_U220 == 1)
            {
                if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( "HOTEL_ONESHOT_02" ))
                {
                    sub_1191( "TEH", "Cue 2.5: playing music: Succesfully played oneshot_02", 0 );
                    AUDIO_MUSIC_PLAY_ONESHOT();
                    l_U220 = 0;
                    l_U207 = 12;
                }
            }
        }
        break;
        case 12:
        if ((AUDIO_MUSIC_IS_ONESHOT_PREPARED( 0 )) == 0)
        {
            l_U207 = 13;
            l_U208 = 13;
        }
        break;
        case 13:
        if (l_U208 == 13)
        {
            if (l_U220 == 0)
            {
                AUDIO_MUSIC_PRELOAD_ONESHOT( "HOTEL_ONESHOT_09", 0 );
                if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( 0 ))
                {
                    sub_1191( "TEH", "playing music: Sussesfully preloaded oneshot_9", 0 );
                    l_U220 = 1;
                    l_U207 = 14;
                }
            }
        }
        break;
        case 14:
        if (l_U208 == 14)
        {
            if (l_U220 == 1)
            {
                if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( 0 ))
                {
                    sub_1191( "TEH", "playing music: Sussesfully played oneshot_09", 0 );
                    AUDIO_MUSIC_PLAY_ONESHOT();
                    l_U220 = 0;
                    sub_1191( "TEH", "2.6A - playing music: MC_MAX_IN_PIT", 0 );
                    AUDIO_MUSIC_FORCE_TRACK( "HOTEL_SONG", "HOTEL_SONG_1_4", "", 0, 0, 0, -1082130432, 0 );
                    l_U207 = 15;
                }
            }
        }
        break;
        case 15:
        if ((AUDIO_MUSIC_IS_ONESHOT_PREPARED( 0 )) == 0)
        {
            l_U207 = 16;
            l_U208 = 16;
        }
        break;
        case 16:
        if (l_U208 == 16)
        {
            if (l_U220 == 0)
            {
                AUDIO_MUSIC_PRELOAD_ONESHOT( "HOTEL_ONESHOT_04", 0 );
                if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( 0 ))
                {
                    sub_1191( "TEH", "playing music: Sussesfully preloaded oneshot_4", 0 );
                    l_U220 = 1;
                    l_U207 = 17;
                }
            }
        }
        break;
        case 17:
        if (l_U208 == 17)
        {
            if (l_U220 == 1)
            {
                if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( 0 ))
                {
                    sub_1191( "TEH", "Cue 2.8 playing music: Sussesfully played oneshot_04", 0 );
                    AUDIO_MUSIC_PLAY_ONESHOT();
                    l_U220 = 0;
                    AUDIO_MUSIC_FORCE_TRACK( "HOTEL_SONG", "HOTEL_SONG_3", "", 0, 6000, 6000, -1082130432, 0 );
                    l_U207 = 18;
                }
            }
        }
        break;
    }
    return;
}

void sub_1745(unknown uParam0)
{
    return;
}

void sub_4395()
{
    if ((g_U855 == 3) || (g_U855 == 2))
    {
        switch (l_U328)
        {
            case 0:
            if (IS_PED_DEAD( sub_4485() ))
            {
                l_U328 = 1;
                sub_1191( "AT", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            else if (sub_4624())
            {
                l_U328 = 1;
                sub_1191( "SBA", "RESTARTING CHECKPOINT: eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 1:
            if (sub_5134())
            {
                l_U328 = 2;
            }
            else if ((sub_5174( 0 )) == 1)
            {
                l_U328 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_4485() )))
            {
                l_U328 = 3;
                sub_1191( "AT", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_1191( "AT", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_4485() ))) AND (NOT (IS_PLAYER_DEAD( sub_4507() ))))
            {
                SET_PLAYER_CONTROL( sub_4507(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_4485() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_4485(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            END_CONTEXT( "HOTEL_SECOND_FLOOR_BALCONY" );
            sub_6763();
            l_U328 = 4;
            sub_1191( "AT", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_1191( "AT", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            if (g_U855 == 2)
            {
                sub_8245( ref l_U254, sub_4485() );
            }
            else if (g_U855 == 3)
            {
                sub_8245( ref l_U290, sub_4485() );
            }
            l_U328 = 5;
            sub_1191( "AT", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_1191( "AT", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            if (g_U855 == 2)
            {
                l_U207 = 2;
            }
            else
            {
                l_U207 = 3;
            }
            l_U326 = 3;
            l_U328 = 0;
            sub_1191( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_4485()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_4507() );
    }
    return 0;
}

void sub_4507()
{
    return GET_PLAYER_ID();
}

int sub_4624()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_4485() )))
        {
            SET_PED_FORCED_TO_WALK( sub_4485(), 0 );
            SET_PLAYER_FORCED_AIM( sub_4507(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_4507(), 1 );
            if ((IS_PED_VISIBLE( sub_4485() )) == 0)
            {
                SET_PED_VISIBLE( sub_4485(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_5134()
{
    return g_U648;
}

int sub_5174(int iParam0)
{
    iParam0 = 1;
    switch (l_U243)
    {
        case 0:
        if (NOT (sub_5235( ref l_U245 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_4485() )))
            {
                l_U244 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_5345( ref l_U245, l_U244, 1, 1 );
            sub_5481( ref l_U245 );
        }
        if (sub_5601( ref l_U245 ))
        {
            sub_1191( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_4485() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_4507() )))
            {
                SET_PLAYER_CONTROL( sub_4507(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U243 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U243 = 2;
            }
            else
            {
                l_U243 = 3;
            }
        }
        break;
        case 2:
        sub_1191( "NS", "Player will QUIT", 0 );
        sub_6088();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_1191( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_6088();
        return 1;
        break;
    }
    return 0;
}

int sub_5235(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_5345(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_5481(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_5601(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_6088()
{
    sub_1191( "NS", "P_PostFailRetryCleanup", 0 );
    sub_6138( ref l_U245 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_4507() )))
    {
        SET_PLAYER_CONTROL( sub_4507(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U242 = 0;
    l_U242 = l_U242;
    l_U243 = 0;
    return;
}

void sub_6138(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_6763()
{
    sub_1191( "MW", "P_CLEANUP_ALL start", 0 );
    sub_6811( l_U1426 );
    sub_6811( l_U1434 );
    sub_6811( l_U1447 );
    sub_6811( l_U1448 );
    sub_6811( l_U1449 );
    sub_6811( l_U1450 );
    sub_6811( l_U1451 );
    sub_6811( l_U1452 );
    sub_6811( l_U1453 );
    sub_6936( l_U1433 );
    sub_6936( l_U384 );
    sub_6811( l_U336 );
    sub_7003( ref l_U337 );
    sub_6811( g_U2092 );
    sub_6811( l_U331 );
    ENABLE_WALLA_ZONE( "S_HOTEL_WZ_2ND_FLOOR_1ST_ROOM", 0 );
    ENABLE_WALLA_ZONE( "S_HOTEL_WZ_2ND_FLOOR_2ND_ROOM", 0 );
    ENABLE_WALLA_ZONE( "S_HOTEL_WZ_2ND_FLOOR_PIT", 0 );
    ISEQ_UNREGISTER_ENTITY( 1082349389, "cp1" );
    ISEQ_UNREGISTER_ENTITY( 1082349389, "cp2" );
    sub_7237( 1082349389, 0 );
    ISEQ_UNREGISTER_ENTITY( 161673566, "MAX_PRESSING_BUTTON" );
    sub_7237( 161673566, 0 );
    ISEQ_UNREGISTER_ENTITY( 793883882, "runner" );
    sub_7237( 793883882, 0 );
    ISEQ_UNREGISTER_ENTITY( 262571667, "max" );
    sub_7237( 262571667, 0 );
    sub_7546( ref l_U1392 );
    sub_7546( ref l_U1548 );
    sub_7546( ref l_U1618 );
    sub_7546( ref l_U1663 );
    sub_7546( ref l_U1706 );
    sub_7580( l_U1722 );
    sub_7580( l_U1736 );
    sub_7546( ref l_U1799 );
    sub_7546( ref l_U1884 );
    sub_7546( ref l_U1910 );
    sub_7546( ref l_U1954 );
    sub_7765();
    sub_6811( l_U372 );
    sub_6811( l_U376 );
    sub_6811( l_U377 );
    sub_6811( l_U378 );
    sub_7910( ref l_U379 );
    sub_6936( g_U740._fU0 );
    sub_6936( g_U794._fU0 );
    sub_7995( ref l_U2481 );
    CLEAR_AREA_OF_OBJECTS( 28.00000000, -32.35000000, 13.05000000, 10 );
    sub_1191( "MW", "P_CLEANUP_ALL end", 0 );
    return;
}

void sub_6811(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_6936(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_7003(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_6811( (uParam0^)[I] );
    }
    return;
}

void sub_7237(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_7546(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_7580( (uParam0^)[I] );
    }
    return;
}

void sub_7580(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_7765()
{
    unknown uVar2;

    sub_1191( "BSW", "CLEAR_FORCED_COLLISION_LOAD_FOR_HOTEL", 0 );
    uVar2 = GET_INTERIOR_AT_COORDS( g_U1020[g_U854] );
    CLEAR_INTERIOR_COLLISION_REQUIRED( uVar2 );
    return;
}

void sub_7910(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_6936( (uParam0^)[I] );
    }
    return;
}

void sub_7995(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        STOP_IMAGEFX( (uParam0^)[I]._fU0, 0 );
    }
    return;
}

void sub_8245(unknown uParam0, unknown uParam1)
{
    sub_8259( uParam0, uParam1 );
    sub_12293( uParam0 );
    return;
}

void sub_8259(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_1191( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_8443( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_9520( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_9812( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_10172( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_9812( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_10172( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_9812( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_10172( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_10457( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_10172( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_10457( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_10172( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_10950( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_11111( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_4485(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_1191( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_8443(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_8475( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_8475(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_9520(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_9812(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_10128( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_10128(unknown uParam0)
{
    return;
}

void sub_10172(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_10457(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_10128( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_10950(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_11111(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_8475( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_11183( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_11183(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_12293(int iParam0)
{
    unknown uVar3;

    sub_1191( "BSW", "RESTORE_WATERBOTTLE_STATE start", 0 );
    uVar3 = sub_12349();
    if (GET_DOES_WEAPON_EXIST( uVar3 ))
    {
        SET_SUPPRESSOR_DAMAGE_LEVEL( uVar3, iParam0->_fU48 );
    }
    return;
}

void sub_12349()
{
    boolean bVar2;
    unknown Result;

    sub_1191( "BSW", "DOES_PLAYER_HAVE_WATERBOTTLE start", 0 );
    bVar2 = false;
    if (sub_12411())
    {
        Result = GET_WEAPON_FROM_SLOT( sub_4485(), 0 );
        if (GET_DOES_WEAPON_EXIST( Result ))
        {
            if ((GET_WEAPON_TYPE( Result )) == 811797242)
            {
                bVar2 = true;
            }
        }
        if (NOT bVar2)
        {
            Result = GET_WEAPON_FROM_SLOT( sub_4485(), 1 );
            if (GET_DOES_WEAPON_EXIST( Result ))
            {
                if ((GET_WEAPON_TYPE( Result )) == 811797242)
                {
                    bVar2 = true;
                }
            }
        }
    }
    if (bVar2)
    {
        return Result;
        break;
    }
    return nil;
}

int sub_12411()
{
    if (sub_12426( sub_4485() ))
    {
        return 1;
    }
    return 0;
}

int sub_12426(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (DOES_PED_EXIST( uParam0 )))
    {
        return 1;
    }
    return 0;
}

void sub_12928()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;

    iVar2 = l_U326;
    sub_12945();
    switch (l_U326)
    {
        case 0: break;
        case 1:
        sub_1191( "AT", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        if ((NOT (sub_13438( ref l_U290 ))) AND (NOT (sub_13438( ref l_U254 ))))
        {
            uVar7 = sub_13645( sub_4485(), 811797242, 50, 0, 0 );
            SET_PAYNEKILLER_AMT( 3 );
        }
        l_U326 = 2;
        sub_1191( "AT", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        break;
        case 2:
        if (NOT (IS_PED_DEAD( sub_4485() )))
        {
            if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_4485(), 0, 0 ) ))
            {
                l_U326 = 3;
                sub_1191( "AT", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
            }
        }
        break;
        case 3:
        sub_1191( "AT", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
        sub_14102();
        sub_14493();
        sub_19397();
        sub_20185();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U326 = 4;
        sub_1191( "AT", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 4:
        sub_1191( "AT", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        l_U326 = 5;
        sub_1191( "AT", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 5:
        sub_1191( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        sub_20581();
        l_U326 = 6;
        break;
        case 6:
        if (g_U993)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (g_U855 <= 2)
                {
                    g_U855 = 2;
                    l_U326 = 7;
                }
                else if (g_U855 == 3)
                {
                    if (NOT l_U290._fU0)
                    {
                        sub_21881( ref l_U290, g_U855, sub_4485(), g_U1020[g_U855], g_U1123[g_U855], g_U1158[g_U855], g_U1193[g_U855], 0 );
                    }
                    sub_25619();
                    sub_31625( l_U1722 );
                    sub_31726( ref l_U1799 );
                    DO_SCREEN_FADE_IN( 250 );
                    SET_PLAYER_CONTROL( sub_4507(), 1, 0 );
                    l_U326 = 12;
                }
                sub_31816( g_U855 );
            }
            else
            {
                sub_1191( "BSW", "waiting for stream requests...", 0 );
            }
        }
        break;
        case 7:
        if (sub_32169())
        {
            sub_33374();
            sub_33506();
            sub_34327();
            sub_34832();
            sub_35074();
            l_U326 = 8;
            sub_1191( "AT", "eCheckpointState = CP_HANDLE_SECOND_FLOOR_GAMEPLAY", 0 );
        }
        break;
        case 8:
        sub_35743();
        sub_42478( ref l_U2481 );
        sub_43221();
        if (NOT l_U1557)
        {
            if (((IS_PED_DEAD( l_U1392[1] )) || (IS_PED_DEAD( l_U1392[0] ))) || (sub_35803( l_U470 )))
            {
                sub_43440();
                ENABLE_WALLA_ZONE( "S_HOTEL_WZ_2ND_FLOOR_1ST_ROOM", 1 );
                l_U1557 = 1;
            }
        }
        if ((NOT l_U1558) AND (l_U1557))
        {
            sub_43686();
        }
        sub_43881();
        if (sub_12960( ref l_U554, 0 ))
        {
            l_U208 = 8;
            sub_45605();
            sub_45835();
            sub_25619();
        }
        if (sub_45439( ref l_U638, l_U1618[3], 0 ))
        {
            if (sub_12426( l_U1618[3] ))
            {
                sub_30435( ref l_U1618[3], sub_4485() );
                SET_PED_COMBAT_ATTRIBUTES( l_U1618[3], 8192, 1 );
            }
        }
        if (sub_12960( ref l_U701, 0 ))
        {
            sub_30047( ref l_U1618[1], 0 );
            sub_30047( ref l_U1618[2], 0 );
            if (sub_12426( l_U1618[1] ))
            {
                SET_PED_FLAG_FIRE_UNTIL_EMPTY_IN_COVER( l_U1618[1], 0 );
            }
            if (sub_12426( l_U1618[2] ))
            {
                SET_PED_FLAG_FIRE_UNTIL_EMPTY_IN_COVER( l_U1618[2], 0 );
            }
        }
        if (l_U1678)
        {
            sub_46434();
        }
        if (sub_12960( ref l_U617, 0 ))
        {
            sub_1191( "SBA", "Balcony: eCheckpointState = CP_HANDLE_MID_04_BLENDOUT", 0 );
            l_U208 = 9;
            if (sub_12426( l_U1618[1] ))
            {
                SET_PED_FLAG_FIRE_UNTIL_EMPTY_IN_COVER( l_U1618[1], 0 );
            }
            if (sub_12426( l_U1618[2] ))
            {
                SET_PED_FLAG_FIRE_UNTIL_EMPTY_IN_COVER( l_U1618[2], 0 );
            }
            sub_47156();
            sub_44265( ref l_U1408, 10 );
            START_CONTEXT( "HOTEL_SECOND_FLOOR_BALCONY" );
            if ((SCRIPT_VAR_EXISTS( "SP_SV_OFF_BALCONY" )) == 0)
            {
                SCRIPT_VAR_ADD_INT( "SP_SV_OFF_BALCONY" );
            }
            sub_47520();
            l_U326 = 9;
        }
        else if (sub_12960( ref l_U680, 0 ))
        {
            sub_1191( "SBA", "Window: eCheckpointState = CP_HANDLE_MID_04_BLENDOUT", 0 );
            l_U208 = 9;
            sub_47520();
            l_U326 = 9;
        }
        sub_47921();
        break;
        case 9:
        sub_43221();
        if (SCRIPT_VAR_EXISTS( "SP_SV_OFF_BALCONY" ))
        {
            if (sub_48294( ref l_U933, 0 ))
            {
                SCRIPT_VAR_SET_INT( "SP_SV_OFF_BALCONY", 0 );
            }
            else
            {
                SCRIPT_VAR_SET_INT( "SP_SV_OFF_BALCONY", 1 );
            }
        }
        sub_47921();
        sub_1191( "SBA", "eCheckpointState = CP_SECOND_FLOOR_GAMEPLAY_PART2", 0 );
        l_U326 = 10;
        break;
        case 10:
        sub_43221();
        sub_48603();
        if (SCRIPT_VAR_EXISTS( "SP_SV_OFF_BALCONY" ))
        {
            if (sub_48294( ref l_U933, 0 ))
            {
                SCRIPT_VAR_SET_INT( "SP_SV_OFF_BALCONY", 0 );
            }
            else
            {
                SCRIPT_VAR_SET_INT( "SP_SV_OFF_BALCONY", 1 );
            }
        }
        sub_47921();
        if (sub_5601( ref l_U1408 ))
        {
            sub_49171();
            sub_30047( ref l_U1618[1], 0 );
            sub_30047( ref l_U1618[2], 0 );
        }
        if (sub_45439( ref l_U890[1], l_U1706[0], 0 ))
        {
            sub_30435( ref l_U1706[0], sub_4485() );
        }
        if (NOT l_U1752)
        {
            sub_1191( "BSW", "Spawning next wave of propane room ", 0 );
            l_U1752 = 1;
            sub_49505();
        }
        if (sub_12960( ref l_U659, 0 ))
        {
            sub_30047( ref l_U1706[1], 0 );
        }
        if (sub_12960( ref l_U722, 0 ))
        {
            sub_1191( "SBA", "Player is in tbPropaneRoomBackdoor", 0 );
            sub_30047( ref l_U1736, 0 );
            sub_49893( l_U1736, 1 );
        }
        if (l_U2348 == 0)
        {
            sub_50020( ref l_U2088, 1 );
            sub_31625( l_U1722 );
            sub_31726( ref l_U1799 );
            SET_OBJECT_VISIBLE( l_U2087, 1 );
            l_U326 = 11;
        }
        break;
        case 11:
        if (sub_50774( ref l_U2088 ))
        {
            l_U2075 = 0;
        }
        if (sub_52552())
        {
            sub_1191( "SBA", "P_HANDLE_PHOTOCOPY_POI: POI has been used", 0 );
            l_U326 = 12;
        }
        break;
        case 12:
        sub_53868();
        if (sub_12960( ref l_U743, 0 ))
        {
            sub_1191( "BSW", "Player is in activate hall trigger", 0 );
            l_U208 = 11;
            g_U855 = 3;
            sub_54728();
            ENABLE_WALLA_ZONE( "S_HOTEL_WZ_2ND_FLOOR_PIT", 1 );
            sub_28212( ref g_U1533, 1 );
            sub_7765();
            if (NOT l_U290._fU0)
            {
                sub_21881( ref l_U290, g_U855, sub_4485(), g_U1020[g_U855], g_U1123[g_U855], g_U1158[g_U855], g_U1193[g_U855], 0 );
            }
        }
        if ((sub_12426( l_U1799[1] )) AND (NOT l_U1751))
        {
            if (NOT (IS_PED_DEAD( l_U1722 )))
            {
                uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U1722 )};
                if (uVar4._fU4 < 3.30000000)
                {
                    sub_1191( "SBA", "Hall cover guy not in perma-hide via charger position", 0 );
                    sub_30157( ref l_U1799[1], 0 );
                    sub_41850( ref l_U1799[1] );
                    SET_PED_FORCE_START_FIRING_FROM_COVER( l_U1799[1] );
                    sub_30871( ref l_U1799[1], 2 );
                    l_U1751 = 1;
                }
            }
            else
            {
                sub_1191( "SBA", "Hall cover guy not in perma-hide via charger not existing", 0 );
                sub_30157( ref l_U1799[1], 0 );
                sub_41850( ref l_U1799[1] );
                SET_PED_FORCE_START_FIRING_FROM_COVER( l_U1799[1] );
                sub_30871( ref l_U1799[1], 2 );
                l_U1751 = 1;
            }
        }
        if (NOT l_U1809)
        {
            if ((sub_35803( l_U764 )) || ((sub_56930( sub_4485(), l_U1799[1], 0 )) < 7.00000000))
            {
                sub_57092( l_U1799[1] );
                l_U1809 = 1;
            }
        }
        if ((sub_12960( ref l_U533, 0 )) || (sub_12960( ref l_U512, 0 )))
        {
            sub_57198();
            sub_57092( l_U1799[0] );
            sub_49893( l_U1884[0], 1 );
            sub_49893( l_U1884[1], 1 );
            sub_57620( ref l_U1884[2], sub_4485(), 22.44000000, 27.01000000, 13.05000000, 0, -1, 0 );
            sub_57782( l_U1884[1] );
        }
        sub_58037();
        if (NOT l_U1913)
        {
            if (sub_61082())
            {
                sub_61287();
                sub_57782( l_U1954[1] );
                l_U1913 = 1;
            }
        }
        if (NOT l_U1755)
        {
            if (sub_61979())
            {
                sub_1191( "SBA", "FinalCp aware of Max", 0 );
                sub_34720( ref l_U1954, 0 );
                sub_62483( ref l_U1954, 0 );
                sub_30837( ref l_U1954, 1 );
                sub_21587( "LEVEL_S_HOTEL_CP_11", 0, 1 );
                l_U1755 = 1;
            }
        }
        sub_62586();
        sub_63077();
        l_U2350 = ((sub_46461( ref l_U1799 )) + (sub_46461( ref l_U1884 ))) + (sub_46461( ref l_U1910 ));
        if (sub_12426( l_U1722 ))
        {
            l_U2350++;
        }
        sub_64439();
        if (NOT l_U1756)
        {
            if (sub_64911())
            {
                l_U1756 = 1;
            }
        }
        else if ((l_U2350 + (sub_46461( ref l_U1954 ))) > 1)
        {
            sub_65156();
            l_U1756 = 0;
        }
        if (l_U2350 == 0)
        {
            if (NOT l_U2351)
            {
                sub_65447( ref l_U379, ref l_U381 );
                sub_57486( ref l_U2230, 1 );
                sub_57486( ref l_U2353, 1 );
                l_U2351 = 1;
            }
            sub_65656();
        }
        else if (l_U2351)
        {
            sub_57486( ref l_U2230, 0 );
            sub_57486( ref l_U2353, 0 );
            l_U2351 = 0;
        }
        sub_66139();
        sub_67311();
        if (sub_12960( ref l_U407, 0 ))
        {
            sub_65954( "SHOT_MXGUPST", ref l_U2627 );
        }
        if ((NOT l_U383) AND (l_U2350 == 0))
        {
            if (sub_68358( "SHOT_MXFNDPLS", ref l_U379, ref l_U381 ))
            {
                sub_1191( "SBA", "Playing Pill monologue for puiKillHousePainkillers", "..." );
                l_U383 = 1;
            }
        }
        if (sub_12960( ref l_U386, 0 ))
        {
            sub_1191( "SBA", "eCheckpointState = CP_FINISHED", 0 );
            l_U326 = 13;
        }
        break;
        case 13:
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U326 = 0;
        sub_1191( "AT", "eCheckpointState = CP_IDLE", 0 );
        break;
    }
    if (l_U326 != iVar2)
    {
        l_U327 = 1;
    }
    else
    {
        l_U327 = 0;
    }
    return;
}

void sub_12945()
{
    if (sub_12960( ref l_U1074, 0 ))
    {
        sub_1191( "SBA", "P_KILL_2ND_FLOOR_JUMPER: Player deserves to die", 0 );
        sub_13173( sub_4485() );
    }
    return;
}

void sub_12960(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_13002( sub_4485(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

int sub_13002(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_13173(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

int sub_13438(unknown uParam0)
{
    sub_1191( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_8259( uParam0, sub_4485() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_13645(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    unknown Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                sub_13793( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

void sub_13793(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    return;
}

void sub_14102()
{
    sub_1191( "MW", "P_INITIALIZE_SCRIPT_DATA start", 0 );
    l_U327 = 1;
    l_U329 = 0;
    l_U1676 = nil;
    l_U383 = 0;
    l_U1402 = 0;
    l_U1403 = 0;
    l_U1404 = 0;
    l_U1405 = 0;
    l_U1406 = 0;
    l_U1401 = 0;
    l_U1557 = 0;
    l_U1558 = 0;
    l_U1678 = 0;
    l_U1749 = 0;
    l_U1753 = 0;
    l_U1751 = 0;
    l_U1810 = 0;
    l_U1811 = 0;
    l_U1809 = 0;
    l_U1754 = 0;
    l_U1755 = 0;
    l_U1756 = 0;
    l_U361 = 0;
    l_U362 = 0;
    l_U385 = 0;
    sub_5345( ref l_U1974, 5000, 1, 0 );
    l_U1812 = 0;
    l_U1813 = 0;
    l_U2075 = -1;
    l_U1407 = 0;
    l_U1758 = 0;
    l_U1814 = 0;
    l_U2229 = -1;
    l_U2352 = -1;
    l_U1912 = 0;
    l_U1913 = 0;
    l_U2349 = 0;
    l_U2351 = 0;
    l_U1750 = 0;
    l_U1752 = 0;
    l_U1757 = 0;
    sub_5345( ref l_U1983, 2500, 1, 0 );
    sub_6138( ref l_U1667 );
    sub_6138( ref l_U1992 );
    sub_1191( "MW", "P_INITIALIZE_SCRIPT_DATA end", 0 );
    return;
}

void sub_14493()
{
    sub_1191( "MW", "P_SET_STATIC_DATA start", 0 );
    sub_14577( ref l_U1365[0], 26.50500000, -31.67300000, 13.05000000, 270, -523735065, 7, 3, 2, 0, 0 );
    sub_14577( ref l_U1365[1], 27.97500000, -34.60300000, 13.05000000, 0, -242176005, 7, 3, 2, 0, 0 );
    sub_14577( ref l_U1521[0], 8.33724200, -25.63288000, 13.05318000, 65391, 490025363, 7, 3, 2, 0, 0 );
    sub_14577( ref l_U1521[1], 6.49147900, -24.86220000, 13.05320000, 65391, 1489542899, 7, 3, 2, 0, 0 );
    sub_14577( ref l_U1565[0], -3.38000000, -25.75300000, 13.05300000, 25.00000000, -1187100427, 7, 3, 2, 0, 0 );
    sub_14577( ref l_U1565[1], -6.32251300, -14.89139000, 13.05282000, 195.41470000, -1802412046, 7, 3, 2, 0, 0 );
    sub_14577( ref l_U1565[2], -9.43910800, -15.34675000, 13.05321000, 183.61840000, 313487121, 7, 3, 2, 0, 0 );
    sub_14577( ref l_U1565[3], -6.18533200, -10.82857000, 13.05291000, 194.36090000, -1530551287, 7, 3, 2, 0, 0 );
    sub_14577( ref l_U1623[0], 1.29850200, -12.01896000, 13.05324000, 100, -1187100427, 7, 3, 2, 0, 0 );
    sub_14577( ref l_U1623[1], 0.58636200, -10.39034000, 13.05324000, 100, 1721298275, 7, 3, 2, 0, 0 );
    sub_14577( ref l_U1623[2], 1.32415900, -9.04047900, 13.05319000, 100, -1169779618, 7, 3, 2, 0, 0 );
    sub_14577( ref l_U1679[0], -11.55000000, -12.00000000, 13.05000000, 140, 2038879665, 7, 3, 2, 0, 0 );
    sub_14577( ref l_U1679[1], -8.87000000, -8.02000000, 13.05339000, 76.87011000, -1603690895, 7, 3, 2, 0, 0 );
    sub_14577( ref l_U1709, 9.37066700, 5.37844500, 13.05275000, 100, 313487121, 7, 3, 2, 0, 0 );
    sub_14577( ref l_U1723, -0.95388900, -4.34067300, 13.05311000, 161.74390000, -1530551287, 7, 3, 2, 0, 0 );
    sub_14577( ref l_U1759[0], 7.98581100, 17.63562000, 13.05290000, 246.11570000, -498975161, 7, 3, 2, 0, 0 );
    sub_14577( ref l_U1759[1], 8.88167900, 4.88503700, 13.05283000, 182.30000000, -1210733481, 7, 3, 2, 0, 0 );
    sub_14577( ref l_U1759[2], 5.62800000, 23.25500000, 13.05325000, 177.33000000, 1448620200, 7, 3, 2, 0, 0 );
    sub_14577( ref l_U1818[0], 17.92547000, 32.11897000, 13.03117000, 160.79700000, -242176005, 7, 3, 2, 0, 0 );
    sub_14577( ref l_U1818[1], 22.61434000, 30.89112000, 13.05298000, 139.14560000, -523735065, 7, 3, 2, 0, 0 );
    sub_14577( ref l_U1818[2], 26.17000000, 28.36000000, 13.05000000, 132.30000000, -1210733481, 7, 3, 2, 0, 0 );
    sub_14577( ref l_U1818[3], 11.73955000, 36.97932000, 13.13924000, 199.21090000, 2038879665, 7, 3, 2, 0, 0 );
    sub_14577( ref l_U1818[4], 20.84699000, 34.80526000, 13.13090000, 236.11700000, -1603690895, 7, 3, 2, 0, 0 );
    sub_14577( ref l_U1896[0], 17.17204000, 37.48426000, 13.05415000, 125, 1721298275, 7, 3, 2, 0, 0 );
    sub_14577( ref l_U1914[0], 20.77000000, 41.20000000, 13.05428000, 160.57270000, -1169779618, 7, 3, 2, 0, 0 );
    sub_14577( ref l_U1914[1], 21.67000000, 40.10000000, 13.05439000, 131.45590000, -943945545, 7, 3, 2, 0, 0 );
    sub_14577( ref l_U1914[2], 22.26000000, 38.81000000, 13.05417000, 123.26240000, 1489542899, 7, 3, 2, 0, 0 );
    sub_15848( ref l_U386, "TRIGGER_2F_TO_3F", 20.57000000, 39.39000000, 17.42000000, 4.29000000, 8.53000000, 6.74000000, 0.00000000, 0.00000000, 30.87000000, 1 );
    sub_15848( ref l_U407, "TRIGGER_2F_TO_3F_MONO", 30.30421000, 50.41512000, 14.53531000, 5.00000000, 5.00000000, 7.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15848( ref l_U428, "TRIGGER_START_VIG01", 23.42000000, -40.81000000, 13.00000000, 5.00000000, 5.00000000, 3.02000000, 0.00000000, 0.00000000, -32.70000000, 1 );
    sub_15848( ref l_U449, "TRIGGER_SPOTTED_VIG01", 25.12000000, -35.78000000, 13.00000000, 8.00000000, 7.00000000, 3.02000000, 0.00000000, 0.00000000, -32.62000000, 1 );
    sub_15848( ref l_U470, "TRIG_CREATE_VIG02_RUNNER", 23.03000000, -28.26000000, 13.00000000, 3.92000000, 6.28000000, 2.50000000, 0.00000000, 0.00000000, -41.61000000, 1 );
    sub_15848( ref l_U491, "TRIGGER_VIG02", 8.87000000, -29.63000000, 13.10000000, 6.00000000, 8.15000000, 3.02000000, 0.00000000, 0.00000000, -147.76000000, 1 );
    sub_15848( ref l_U554, "TRIGGER_PROPANE_GUYS_AWARE", -0.49000000, -28.35000000, 13.10000000, 4.00000000, 5.50000000, 3.00000000, 0.00000000, 0.00000000, -144.06000000, 1 );
    sub_15848( ref l_U575, "TRIGGER_BALCONY_ADVANCE", -14.54400000, -12.69400000, 13.10000000, 3.86000000, 3.50000000, 3.02000000, 0.00000000, 0.00000000, 12.21000000, 1 );
    sub_15848( ref l_U596, "TRIG_CLEAN_RUNNER", -13.47000000, -17.76000000, 13.10000000, 3.86000000, 3.00000000, 3.02000000, 0.00000000, 0.00000000, 13.42000000, 1 );
    sub_15848( ref l_U890[0], "TRIGGER_SNIPER_DANGER0", -11.00000000, -25.04000000, 12.95000000, 4.56000000, 10.70000000, 3.95000000, 0.00000000, 0.00000000, 24.95000000, 1 );
    sub_15848( ref l_U890[1], "TRIGGER_SNIPER_DANGER1", -14.78000000, -13.78000000, 12.95000000, 4.56000000, 14.34000000, 3.95000000, 0.00000000, 0.00000000, 12.85000000, 1 );
    sub_16750( ref l_U933, ref l_U890 );
    sub_15848( ref l_U617, "TRIGGER_MID04", -10.78000000, -23.29000000, 13.10000000, 6.06000000, 2.27000000, 3.02000000, 0.00000000, 0.00000000, -67.39000000, 1 );
    sub_15848( ref l_U638, "TRIG_PRE_BALCONY", -8.26000000, -22.30000000, 13.10000000, 6.06000000, 2.27000000, 3.02000000, 0.00000000, 0.00000000, -67.39000000, 1 );
    sub_15848( ref l_U743, "TRIGGER_ACTIVATE_HALLROOM", -0.16037400, 0.50000000, 13.06540000, 12.00000000, 6.00000000, 3.02000000, 0.00000000, 0.00000000, 6.85000000, 1 );
    sub_15848( ref l_U701, "TRIG_FREE_PROPANE_COVER", -7.46000000, -17.07000000, 13.00000000, 5.50000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 20.00000000, 1 );
    sub_15848( ref l_U659, "TRIG_PROPANE_ROOM", -7.57000000, -9.71000000, 12.96000000, 10.50000000, 9.00000000, 2.50000000, 0.00000000, 0.00000000, 11.40000000, 1 );
    sub_15848( ref l_U722, "TRIG_PROPANE_ROOM_BACKDOOR", -1.83000000, -7.62000000, 10.08000000, 3.00000000, 6.00000000, 6.00000000, 0.00000000, 0.00000000, -15.00000000, 1 );
    sub_15848( ref l_U1137[0], "TRIGGER_TURRET_DANGERZONE00", 0.03000000, 6.36000000, 12.92000000, 4.35000000, 12.00000000, 3.09000000, 0.00000000, 0.00000000, -9.01000000, 1 );
    sub_15848( ref l_U1137[1], "TRIGGER_TURRET_DANGERZONE01", 3.06000000, 17.13000000, 12.92000000, 4.35000000, 12.55000000, 3.07000000, 0.00000000, 0.00000000, -22.30000000, 1 );
    sub_15848( ref l_U1137[2], "TRIGGER_TURRET_DANGERZONE02", -1.55000000, -1.20000000, 12.92000000, 4.85000000, 6.63000000, 3.09000000, 0.00000000, 0.00000000, -11.22000000, 1 );
    sub_15848( ref l_U1137[3], "TRIGGER_TURRET_DANGERZONE03", -0.57000000, -5.10000000, 12.92000000, 2.09000000, 3.00000000, 3.09000000, 0.00000000, 0.00000000, -7.58001000, 1 );
    sub_16750( ref l_U1222, ref l_U1137 );
    sub_15848( ref l_U680, "TRIG_THRU_PROPANE_WINDOW", -8.16000000, -15.40000000, 12.90000000, 6.40000000, 3.16000000, 3.00000000, 0.00000000, 0.00000000, 19.62000000, 1 );
    sub_15848( ref l_U764, "TRIG_HALFWAY_LIFT_ROOM", -1.36000000, 0.53000000, 12.92000000, 15.61000000, 3.00000000, 2.50000000, 0.00000000, 0.00000000, 32.52000000, 1 );
    sub_15848( ref l_U512, "TRIGGER_HALLROOM_ENGAGE", 4.53000000, 5.80000000, 13.10000000, 3.58000000, 5.00000000, 3.00000000, 0.00000000, 0.00000000, -8.07001000, 1 );
    sub_15848( ref l_U533, "TRIGGER_HALLROOM_ENGAGE2", 7.59000000, 17.71000000, 13.10000000, 3.58000000, 3.00000000, 3.02000000, 0.00000000, 0.00000000, 67.00000000, 1 );
    sub_15848( ref l_U785, "TRIGGER_IN_PIT", 14.33000000, 19.97000000, 10.43000000, 4.50000000, 6.50000000, 6.00000000, 0.00000000, 0.00000000, 63.52000000, 1 );
    sub_15848( ref l_U806, "TRIGGER_BEFORE_OUT_OF_PIT", 16.47000000, 33.19000000, 12.97000000, 4.00000000, 3.00000000, 3.07000000, 0.00000000, 0.00000000, 46.35000000, 1 );
    sub_15848( ref l_U827, "TRIG_CREATE_AFTER_PIT", 23.83000000, 31.85000000, 12.50000000, 9.57000000, 5.20000000, 2.50000000, 0.00000000, 0.00000000, -44.29000000, 1 );
    sub_15848( ref l_U848, "TRIGGER_OUT_OF_PIT", 13.80000000, 34.71000000, 12.97000000, 4.35000000, 5.40000000, 3.07000000, 0.00000000, 0.00000000, 46.35000000, 1 );
    sub_15848( ref l_U869, "TRIG_HALL_EXPLOSION_THROW_MAX", 20.62000000, 39.54000000, 12.90000000, 4.38000000, 14.57000000, 3.00000000, 0.00000000, 0.00000000, -54.78000000, 1 );
    sub_15848( ref l_U1074, "TRIG_2ND_BALCONY_DEATH_BOX", -14.63000000, -18.25000000, 7.00000000, 19.72000000, 34.12000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15848( ref l_U1095, "tbImageFX_STAIRS01", 28.27930000, 54.14800000, 15.23000000, 4.00000000, 4.00000000, 4.00000000, 0.00000000, 0.00000000, 30.87000000, 1 );
    sub_15848( ref l_U1116, "tbImageFX_STAIRS02", 28.01570000, 45.12000000, 17.31590000, 4.00000000, 4.00000000, 4.00000000, 0.00000000, 0.00000000, 30.87000000, 1 );
    sub_18925( ref l_U1363, "TETHER_PROPANE_ROOM", -8.02000000, -11.37000000, 12.96000000, 9.24000000, 11.20000000, 2.50000000, 0.00000000, 0.00000000, 11.86000000, 1 );
    sub_18925( ref l_U1364, "TETH_PROPANE_BALCONY", -14.38000000, -11.22000000, 12.96000000, 4.50000000, 8.00000000, 3.00000000, 0.00000000, 0.00000000, 12.75000000, 1 );
    sub_18925( ref l_U1815, "TETH_BEFORE_PIT", 12.71000000, 16.38000000, 12.90000000, 7.00000000, 3.84000000, 2.50000000, 0.00000000, 0.00000000, -26.34000000, 1 );
    sub_18925( ref l_U1816, "TETH_UPPER_PIT1", 23.51000000, 31.17000000, 11.40000000, 12.00000000, 8.00000000, 4.50000000, 0.00000000, 0.00000000, -59.80000000, 1 );
    sub_18925( ref l_U1817, "TETH_UPPER_PIT2", 15.78000000, 34.53000000, 11.40000000, 12.00000000, 8.00000000, 4.50000000, 0.00000000, 0.00000000, -11.04000000, 1 );
    sub_18925( ref l_U1964, "TETH_FINAL_WAVE", 23.91000000, 41.67000000, 12.90000000, 8.25000000, 4.25000000, 3.00000000, 0.00000000, 0.00000000, 32.87000000, 1 );
    sub_1191( "MW", "P_SET_STATIC_DATA end", 0 );
    return;
}

void sub_14577(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_15848(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_16750(int iParam0, unknown uParam1)
{
    int iVar4;
    int I;

    iVar4 = (uParam1^);
    if (iVar4 > 6)
    {
        sub_1191( "[SA]", "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
        SCRIPT_ASSERT( "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
    }
    for ( I = 0; I < iVar4; I++ )
    {
        iParam0->_fU0[I] = {(uParam1^)[I]};
    }
    iParam0->_fU508 = iVar4;
    iParam0->_fU548 = 0;
    iParam0->_fU552 = 0;
    iParam0->_fU556 = 0;
    iParam0->_fU560 = 0;
    return;
}

void sub_18925(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_19397()
{
    sub_1191( "CO", "P_CREATE_S_HOT_GG_LA_01", 0 );
    sub_19508( ref g_U740, g_U848, -185254380, 1993031030, 20.26000000, -35.21000000, 13.10000000, 1.50000000, 0.00000000, -10.00000000, "Room_F2_01" );
    sub_19637( ref g_U740 );
    return;
}

void sub_19508(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_1191( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_19637(int iParam0)
{
    sub_1191( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_19698( iParam0->_fU12 )) == 1)
        {
            sub_1191( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_1191( "CO", "has never been collected.", 0 );
        }
        if ((sub_19698( iParam0->_fU12 )) == 0)
        {
            sub_6936( iParam0->_fU0 );
            iParam0->_fU0 = sub_19933( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_1191( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_1191( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_19698(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_19933(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_20185()
{
    sub_1191( "CO", "P_CREATE_S_HOT_GG_G3_01", 0 );
    sub_19508( ref g_U794, g_U851, -1174808979, -272870987, 1.64000000, 15.97000000, 13.09000000, 1.50000000, 0.00000000, 20.00000000, "Room_F2_Hall" );
    sub_19637( ref g_U794 );
    return;
}

void sub_20581()
{
    int I;

    sub_1191( "MW", "P_LOAD_SECOND_FLOOR_ASSETS start", 0 );
    sub_20669( "S_HOTEL_GENERATOR_EXPLOSION", 0, 1 );
    for ( I = 0; I < l_U2461; I++ )
    {
        sub_20770( l_U2461[I], 1 );
    }
    if (g_U855 <= 2)
    {
        sub_20964( 262571667, 1 );
        sub_20964( 161673566, 1 );
    }
    sub_20770( g_U848, 1 );
    sub_20770( g_U851, 1 );
    sub_21192();
    sub_21344( "SHOTAUD" );
    sub_21496( "SCRIPT_MISSION\S_HOTEL_SECURITY_GATE", 1 );
    sub_21587( "LEVEL_S_HOTEL_CP_11", 0, 0 );
    sub_21587( "EXPL_CAM", 0, 0 );
    sub_1191( "MW", "P_LOAD_SECOND_FLOOR_ASSETS end", 0 );
    return;
}

void sub_20669(unknown uParam0, unknown uParam1, int iParam2)
{
    if (iParam2 == 0)
    {
        REQUEST_SCRIPT_STREAM( uParam0, uParam1 );
    }
    else
    {
        while ((LOAD_SCRIPT_STREAM( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_20770(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_10128( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_20964(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_21192()
{
    sub_21208( 811797242, 1 );
    sub_21208( -110877124, 1 );
    sub_21208( -612753081, 1 );
    sub_21208( -1013714740, 1 );
    sub_21208( 514118749, 1 );
    sub_21208( -1659006841, 1 );
    return;
}

void sub_21208(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_21344(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_21364();
    return;
}

void sub_21364()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_21496(unknown uParam0, int iParam1)
{
    LOAD_SCRIPT_AUDIO_BANK( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_21587(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_21881(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_21893( uParam0 );
    sub_22010( uParam0, uParam1, uParam2, uParam3, uParam6, uParam7, uParam8, uParam9 );
    return;
}

void sub_21893(int iParam0)
{
    unknown uVar3;

    sub_1191( "BSW", "SAVE_WATERBOTTLE_STATE start", 0 );
    uVar3 = sub_12349();
    if (GET_DOES_WEAPON_EXIST( uVar3 ))
    {
        iParam0->_fU48 = GET_SUPPRESSOR_DAMAGE_LEVEL( uVar3 );
    }
    return;
}

void sub_22010(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_1191( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_1191( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_11111( iParam1 );
        sub_22269( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_22720( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_22720( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_22952( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_22720( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_22952( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_22952( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_22720( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_22952( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_22952( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_22952( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_22720( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_22952( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_22952( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_22952( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_22952( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_24510( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_1191( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_22269(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_8475( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_1191( "TEH", "Ending context", 0 );
        sub_1191( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_22720(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_22952(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_24510(int iParam0)
{
    sub_10128( "CHECKPOINT DATA" );
    sub_24549( iParam0->_fU4 );
    sub_24572( iParam0->_fU16 );
    sub_24572( iParam0->_fU20 );
    sub_24572( iParam0->_fU24 );
    sub_1745( iParam0->_fU28 );
    sub_1745( iParam0->_fU56 );
    sub_1745( iParam0->_fU60 );
    sub_1745( iParam0->_fU64 );
    sub_1745( iParam0->_fU68 );
    sub_1745( iParam0->_fU72 );
    sub_1745( iParam0->_fU76 );
    sub_1745( iParam0->_fU80 );
    sub_1745( iParam0->_fU84 );
    sub_1745( iParam0->_fU88 );
    sub_1745( iParam0->_fU92 );
    sub_24572( iParam0->_fU32 );
    sub_1745( iParam0->_fU36 );
    sub_1745( iParam0->_fU40 );
    sub_1745( iParam0->_fU44 );
    sub_24572( iParam0->_fU136 );
    sub_24807( iParam0->_fU140 );
    sub_1745( iParam0->_fU52 );
    sub_10128( "---nRightHolsterAttachmentEnabled: " );
    sub_1745( iParam0->_fU96 );
    sub_10128( "---nRightHolsterAttachmentToggled: " );
    sub_1745( iParam0->_fU100 );
    sub_10128( "---nLeftHolsterAttachmentEnabled: " );
    sub_1745( iParam0->_fU104 );
    sub_10128( "---nLeftHolsterAttachmentToggled: " );
    sub_1745( iParam0->_fU108 );
    sub_10128( "---nRifleHolsterAttachmentEnabled: " );
    sub_1745( iParam0->_fU112 );
    sub_10128( "---nRifleHolsterAttachmentToggled: " );
    sub_1745( iParam0->_fU116 );
    sub_10128( "---nRightHandAttachmentEnabled: " );
    sub_1745( iParam0->_fU120 );
    sub_10128( "---nRightHandAttachmentToggled: " );
    sub_1745( iParam0->_fU124 );
    sub_10128( "---nLeftHandAttachmentEnabled: " );
    sub_1745( iParam0->_fU128 );
    sub_10128( "---nLeftHandAttachmentToggled: " );
    sub_1745( iParam0->_fU132 );
    sub_1745( l_U1 );
    sub_1745( 144 );
    return;
}

void sub_24549(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_24572(unknown uParam0)
{
    return;
}

void sub_24807(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_25619()
{
    sub_1191( "SBA", "P_SETUP_SECOND_FLOOR_2_GAMEPLAY", "***" );
    sub_25680();
    sub_25901();
    sub_26401();
    sub_28348();
    sub_31293();
    return;
}

void sub_25680()
{
    int I;

    sub_1191( "SBA", "P_CREATE_2ND_FLOOR_PLACEMENTS start", 0 );
    l_U379[0] = sub_19933( -4072149, 2.64000000, 29.78000000, 13.84000000, 0.05000000, 0.05000000, 0.10000000, 0, 0, 0, 1119092736 );
    for ( I = 0; I <= (l_U379 - 1); I++ )
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U379[I], ref g_U1306 );
    }
    sub_1191( "SBA", "P_CREATE_2ND_FLOOR_PLACEMENTS end", 0 );
    return;
}

void sub_25901()
{
    sub_1191( "SBA", "P_CREATE_HALL_EXPLOSION_PROPS", "***" );
    sub_25990( ref l_U336, -93977637, 27.00000000, 43.60000000, 14.20000000, ref g_U1306, 1, 0 );
    sub_26019( ref g_U2092, 247925151, l_U355, l_U358, ref g_U1306, 1, 1 );
    return;
}

void sub_25990(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    sub_26019( uParam0, uParam1, uParam2, g_U657, uParam5, uParam6, uParam7 );
    return;
}

void sub_26019(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    sub_26045( uParam0, uParam1, uParam2, uParam5, uParam9, uParam10 );
    if (DOES_OBJECT_EXIST( (uParam0^) ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( (uParam0^), uParam8 );
    }
    return;
}

void sub_26045(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_6811( (uParam0^) );
    (uParam0^) = sub_26076( uParam1, uParam2, uParam5, 0, uParam9, 0 );
    FREEZE_OBJECT_POSITION( (uParam0^), uParam8 );
    return;
}

void sub_26076(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_20770( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_26401()
{
    sub_6811( l_U2086 );
    sub_6811( l_U2087 );
    l_U2086 = sub_26451( g_U1445, l_U2076, l_U2079, 0, 1, 0 );
    l_U2087 = sub_26451( g_U1446, l_U2076, l_U2079, 0, 1, 0 );
    if ((DOES_OBJECT_EXIST( l_U2086 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U2086, ref g_U1306 );
        FREEZE_OBJECT_POSITION( l_U2086, 1 );
        sub_26781( ref l_U2088, 1, l_U2076, l_U2086, 1, 0, 1.50000000, 3.00000000, 0, 0 );
        sub_27787( ref l_U2088, 30, "POI_OPENGATE" );
    }
    if ((DOES_OBJECT_EXIST( l_U2087 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U2087, ref g_U1306 );
        FREEZE_OBJECT_POSITION( l_U2087, 1 );
        SET_OBJECT_VISIBLE( l_U2087, 0 );
    }
    sub_28009( ref g_U1533, 1 );
    sub_28212( ref g_U1533, 1 );
    return;
}

void sub_26451(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_20770( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_26781(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;

    sub_26796( iParam0, uParam10 );
    if ((DOES_OBJECT_EXIST( uParam5 )) == 1)
    {
        uVar14 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( uParam5 )};
        iParam0->_fU4 = uParam1;
        iParam0->_fU308 = uParam7;
        if (iParam0->_fU308 == 0)
        {
            iParam0->_fU100 = {uVar14};
            iParam0->_fU200 = {uVar14};
        }
        iParam0->_fU112 = uParam8;
        iParam0->_fU212 = uParam9;
        iParam0->_fU300 = uParam6;
        iParam0->_fU312 = uParam5;
        iParam0->_fU320 = uParam11;
        iParam0->_fU20 = {uParam2};
        sub_27235( iParam0 );
    }
    else
    {
        SCRIPT_ASSERT( "[SP]### WARNING!!! (P_CreateObjectPOIStruct): Object doesn't exist! ###", 0 );
    }
    return;
}

void sub_26796(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_27235(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_27314( iParam0 );
    return;
}

void sub_27314(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_27373( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_27373( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_27373( iParam0, 1 );
            }
            else
            {
                sub_27373( iParam0, 0 );
            };;;
        }
        else
        {
            sub_27373( iParam0, 0 );
        }
    }
    else
    {
        sub_27373( iParam0, 0 );
    }
    return;
}

void sub_27373(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_27787(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_27818( iParam0 );
    return;
}

void sub_27818(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_28009(int iParam0, int iParam1)
{
    if ((sub_28021( iParam0 )) == 0)
    {
        sub_28087( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

int sub_28021(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_28087(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_28212(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_28021( iParam0 )) == 0)
    {
        sub_28087( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

void sub_28348()
{
    int I;
    unknown uVar3;

    sub_1191( "SBA", "P_CREATE_HALL", "***" );
    sub_28401( ref l_U1803, 1.00000000, 0 );
    for ( I = 0; I <= 2; I++ )
    {
        sub_28628( ref l_U1759[I], ref l_U1799[I], -110877124, "AIT_NORMAL", 0, 25000, 2, 0, 25000 );
        sub_29535( l_U1799[I], ref l_U1803 );
        if (sub_12426( l_U1799[I] ))
        {
            SET_PED_COMBAT_ATTRIBUTES( l_U1799[I], 8192, 0 );
            if (I == 0)
            {
                sub_29858( ref l_U1799[I], g_U1338 );
                REMOVE_ALL_PED_WEAPONS( l_U1799[I] );
                sub_10457( l_U1799[I], 514118749, 25000, 0, 0 );
            }
            else if (I == 1)
            {
                sub_29858( ref l_U1799[I], g_U1338 );
                REMOVE_ALL_PED_WEAPONS( l_U1799[I] );
                uVar3 = sub_10457( l_U1799[I], -1013714740, 25000, 0, 0 );
                ENABLE_WEAPON_ATTACHMENT( uVar3, 14, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar3, 14, 1 );
                sub_30047( ref l_U1799[I], 1 );
                TASK_COMBAT_MOVE_TO_COVER( l_U1799[I], "second_floor_simple", "2ndCorner106", sub_4485() );
                sub_30157( ref l_U1799[I], 1 );
            }
            else
            {
                sub_29858( ref l_U1799[I], g_U1306 );
                sub_30240( ref l_U1799[I], 1 );
                SET_PED_COMBAT_ATTRIBUTES( l_U1799[I], 1, 0 );
                SET_PED_NO_RAGDOLL_TO_BULLET_UNLESS_DEAD( l_U1799[I], 1 );
            }
        }
    }
    if (DOES_GROUP_EXIST( l_U1803._fU0 ))
    {
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U1803._fU0, 0 );
    }
    sub_30367( ref l_U1799 );
    sub_30517( ref l_U1799 );
    sub_30671( ref l_U1799[0], 3 );
    sub_30671( ref l_U1799[1], 3 );
    sub_30738( ref l_U1799, "Hall" );
    sub_30837( ref l_U1799, 0 );
    sub_30943( l_U1799[2], 10, -1 );
    uVar3 = GET_WEAPON_FROM_HAND( l_U1799[1], 0, 0 );
    if (GET_DOES_WEAPON_EXIST( uVar3 ))
    {
        SET_WEAPON_LIGHT_DATA_BY_NAME( GET_WEAPON_FROM_HAND( l_U1799[1], 0, 0 ), "Flashlight_Hotel" );
    }
    else
    {
        sub_1191( "SBA", "ERROR: Can't set light data for piHallCP[1]", 0 );
    }
    sub_31138( ref l_U1799 );
    return;
}

void sub_28401(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_28628(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, int iParam7, unknown uParam8)
{
    unknown uVar11;

    sub_7580( (uParam1^) );
    (uParam1^) = sub_28648( uParam0 );
    if (sub_12426( (uParam1^) ))
    {
        uVar11 = sub_10457( (uParam1^), uParam2, uParam5, 0, 1 );
        if (iParam7 != 0)
        {
            sub_9812( (uParam1^), iParam7, 0, uParam8, 0 );
        }
        SET_PED_AI_TEMPLATE( (uParam1^), uParam3 );
        SET_PED_ALERTNESS( (uParam1^), uParam6 );
        switch (uParam4)
        {
            case 0: break;
            case 1:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 13, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 13, 1 );
            break;
            case 2:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 14, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 14, 1 );
            break;
            case 3:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 12, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 12, 1 );
            break;
        }
    }
    return;
}

void sub_28648(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_20770( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_29127( iParam0->_fU40 );
    sub_29207( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_29127(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_29207(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_29535(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_10128( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_28401( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_28401( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_29858(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    if (sub_12426( (uParam0^) ))
    {
        SET_ROOM_FOR_PED_BY_NAME( (uParam0^), ref uParam1 );
    }
    return;
}

void sub_30047(unknown uParam0, unknown uParam1)
{
    if (sub_12426( (uParam0^) ))
    {
        SET_PED_FLAG_LOCK_TO_COVER( (uParam0^), uParam1 );
    }
    return;
}

void sub_30157(unknown uParam0, unknown uParam1)
{
    if (sub_12426( (uParam0^) ))
    {
        sub_24807( uParam1 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( (uParam0^), uParam1 );
    }
    return;
}

void sub_30240(unknown uParam0, unknown uParam1)
{
    if (sub_12426( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), uParam1 );
    }
    return;
}

void sub_30367(unknown uParam0)
{
    sub_30384( uParam0, sub_4485() );
    return;
}

void sub_30384(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (sub_12426( (uParam0^)[I] ))
        {
            sub_30435( ref (uParam0^)[I], uParam1 );
        }
    }
    return;
}

void sub_30435(unknown uParam0, unknown uParam1)
{
    if ((sub_12426( uParam1 )) AND (sub_12426( (uParam0^) )))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_30517(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_30549( ref (uParam0^)[I] );
    }
    return;
}

void sub_30549(unknown uParam0)
{
    if ((sub_12411()) AND (sub_12426( (uParam0^) )))
    {
        sub_30585( uParam0, sub_4485() );
    }
    return;
}

void sub_30585(unknown uParam0, unknown uParam1)
{
    if ((sub_12426( uParam1 )) AND (sub_12426( (uParam0^) )))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_30671(unknown uParam0, unknown uParam1)
{
    if (sub_12426( (uParam0^) ))
    {
        SET_PED_ALERTNESS( (uParam0^), uParam1 );
    }
    return;
}

void sub_30738(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_30837(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_30871( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_30871(unknown uParam0, unknown uParam1)
{
    if (sub_12426( (uParam0^) ))
    {
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam1 );
    }
    return;
}

void sub_30943(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_SET_ACTION_INTENTION( uParam0, uParam1, uParam2, g_U657 );
    }
    return;
}

void sub_31138(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_31169( (uParam0^)[I] );
    }
    return;
}

void sub_31169(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_31293()
{
    sub_1191( "BSW", "P_CREATE_PIT_CHARGER", "***" );
    sub_28401( ref l_U1737, 1.00000000, 0 );
    sub_28628( ref l_U1709, ref l_U1722, -1013714740, "AIT_NORMAL", 0, 25000, 2, 0, 25000 );
    sub_29535( l_U1722, ref l_U1737 );
    sub_9812( l_U1722, -612753081, 1, 25000, 0 );
    sub_29858( ref l_U1722, g_U1338 );
    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1722, 1 );
    sub_31466( ref l_U1722, 1 );
    SET_PED_COMBAT_ATTRIBUTES( l_U1722, 8192, 0 );
    if (DOES_GROUP_EXIST( l_U1737._fU0 ))
    {
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U1737._fU0, 0 );
    }
    SET_PED_NAME_DEBUG( l_U1722, "PitCheckpointCharger" );
    sub_31169( l_U1722 );
    return;
}

void sub_31466(unknown uParam0, unknown uParam1)
{
    if (sub_12426( (uParam0^) ))
    {
        SET_BLOCKING_OF_PED_TARGETTING( (uParam0^), uParam1 );
    }
    return;
}

void sub_31625(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_31726(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_31625( (uParam0^)[I] );
    }
    return;
}

void sub_31816(unknown uParam0)
{
    int iVar3;
    string sVar4;

    switch (uParam0)
    {
        case 20:
        case 0:
        iVar3 = 20;
        sVar4 = "SUNNY";
        break;
        case 1:
        iVar3 = 12;
        sVar4 = "SUNNY";
        break;
        case 2:
        case 3:
        case 4:
        iVar3 = 9;
        sVar4 = "SUNNY";
        break;
        case 5:
        iVar3 = 12;
        sVar4 = "SUNNY";
        break;
        case 6:
        case 7:
        case 8:
        case 9:
        iVar3 = 9;
        sVar4 = "SUNNY_WINDY";
        break;
        case 10:
        iVar3 = 12;
        sVar4 = "SUNNY_WINDY";
        break;
        default:
        iVar3 = 12;
        sVar4 = "SUNNY";
        break;
    }
    SET_TIME_OF_DAY( iVar3, 0 );
    FREEZE_TIME_OF_DAY( iVar3, 0 );
    SET_WEATHER_TYPE_NOW_PERSIST( sVar4 );
    SET_WEATHER_TRANSITION_IMMEDIATE( 1 );
    return;
}

void sub_32169()
{
    int Result;

    Result = 0;
    switch (l_U329)
    {
        case 0:
        sub_1191( "bsw", "HANDLE_MID_03_BLENDOUT - BLENDOUT_START", 0 );
        if ((ISEQ_QUERY_STATE( 262571667, 3 )) == 0)
        {
            sub_1191( "bsw", "starting HANDLE_MID_05B_BLENDOUT WITHOUT the cutscene", 0 );
            sub_20964( 262571667, 1 );
            sub_32393( sub_4485(), g_U1020[2], g_U1123[2] );
            ISEQ_REGISTER_ENTITY( 262571667, "max", sub_4485(), 0 );
            ISEQ_START( 262571667 );
            sub_32491( 1, 0, 0, 1 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_HOTEL_CP_02", "B_OUT_MID_03_HOTEL_FWD_CAM", 1, 26.81000000, -53.22000000, 14.70000000, 0.00000000, 0, 0 );
        }
        if (NOT l_U254._fU0)
        {
            sub_21881( ref l_U254, g_U855, sub_4485(), g_U1020[g_U855], g_U1123[g_U855], g_U1158[g_U855], g_U1193[g_U855], 0 );
        }
        sub_5345( ref l_U2637, l_U2655, 1, 0 );
        sub_5481( ref l_U2637 );
        sub_5345( ref l_U2646, l_U2656, 1, 0 );
        sub_5481( ref l_U2646 );
        DO_SCREEN_FADE_IN( 0 );
        l_U329 = 1;
        break;
        case 1:
        l_U329 = 2;
        break;
        case 2:
        if (sub_5601( ref l_U2646 ))
        {
            sub_1191( "bsw", "simulating player gait", 0 );
            SIMULATE_PLAYER_INPUT_GAIT( sub_4507(), 2, l_U2657, 0 );
            PLAY_SOUND_FROM_COORD( -1, "CHAINLINK_LARGE_DOOR_CLOSE", l_U332 );
        }
        if (sub_5601( ref l_U2637 ))
        {
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1158[2], 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1193[2], 1065353216, 0 );
            CAMERA_FREEZE_FRAME( 1, 1000, 0, 0 );
            CAMERA_ANIMATED_STOP( 0, 0 );
            Result = 1;
            sub_33090( 1, 1 );
        }
        break;
    }
    return Result;
}

void sub_32393(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_32491(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_4485() )))
        {
            SET_PLAYER_CONTROL( sub_4507(), 0, uParam2 );
            SET_PED_DUCKING( sub_4485(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_4485() );
            }
            SET_PED_INVINCIBLE( sub_4485(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_33090(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_4485() )))
    {
        SET_PLAYER_CONTROL( sub_4507(), 1, 0 );
        SET_PED_INVINCIBLE( sub_4485(), 0 );
        if (bParam0)
        {
            sub_33171();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_33171()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_4485() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_4485(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_4485(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_4485(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_4485(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_33374()
{
    sub_1191( "SBA", "P_SETUP_ELEVATOR_DOOR", "***" );
    sub_6811( l_U331 );
    l_U331 = sub_26451( -1591126843, l_U332, 0, 0, -30.00000000, 0, 0, 0 );
    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U331, ref g_U1298 );
    FREEZE_OBJECT_POSITION( l_U331, 1 );
    return;
}

void sub_33506()
{
    int I;

    sub_1191( "SBA", "P_CREATE_VIG01", "***" );
    sub_20964( 1082349389, 1 );
    for ( I = 0; I <= 1; I++ )
    {
        if (I == 0)
        {
            sub_28628( ref l_U1365[I], ref l_U1392[I], -612753081, "AIT_NORMAL", 0, 25000, 2, 0, 25000 );
            REMOVE_ALL_PED_WEAPONS( l_U1392[I] );
            sub_9812( l_U1392[I], -612753081, 1, 25000, 1 );
            SET_PED_SEEING_RANGE( l_U1392[I], 7.00000000, 75 );
        }
        else
        {
            sub_28628( ref l_U1365[I], ref l_U1392[I], -612753081, "AIT_NORMAL", 0, 25000, 2, 0, 25000 );
            REMOVE_ALL_PED_WEAPONS( l_U1392[I] );
            sub_9812( l_U1392[I], -612753081, 1, 25000, 1 );
            if (sub_12411())
            {
                SET_PED_PRIMARY_LOOKAT( l_U1392[I], sub_4485() );
            }
        }
        sub_29858( ref l_U1392[I], g_U1322 );
        sub_30671( ref l_U1392[I], 0 );
        SET_PED_HEARING_RANGE( l_U1392[I], 6.00000000 );
        TASK_STAND_STILL( l_U1392[I], -1 );
        SET_PED_FLAG_BLOCK_GORE_REACTION( l_U1392[I], 1 );
    }
    sub_30738( ref l_U1392, "VIG_01-" );
    l_U1426 = sub_26451( -754907209, l_U1427, l_U1430, 0, 0, 0 );
    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1426, ref g_U1322 );
    l_U1433 = sub_19933( 1676080365, l_U1435, l_U1438, 0, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1433, ref g_U1322 );
    sub_34035();
    l_U1451 = sub_26451( -1490597557, l_U1454, l_U1457, 0, 0, 0 );
    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1451, ref g_U1322 );
    l_U1452 = sub_26451( 1426433289, l_U1460, l_U1463, 0, 0, 0 );
    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1452, ref g_U1322 );
    l_U1453 = sub_26451( -1166741530, l_U1466, l_U1469, 0, 0, 0 );
    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1453, ref g_U1322 );
    return;
}

void sub_34035()
{
    unknown uVar2;

    sub_1191( "SBA", "P_CREATE_GRENADE_LAUNCHER_PICKUP", 0 );
    sub_6936( l_U384 );
    l_U384 = sub_19933( -64228399, 26.98000000, -37.14000000, 14.12200000, -0.77000000, 0.00000000, 0.00000000, 0, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U384, ref g_U1322 );
    return;
}

void sub_34327()
{
    int I;
    unknown uVar3;

    sub_1191( "SBA", "P_CREATE_PROPANE_ROOM_PEDS", "***" );
    sub_28401( ref l_U1737, 1.00000000, 0 );
    for ( I = 0; I <= 3; I++ )
    {
        sub_28628( ref l_U1565[I], ref l_U1618[I], -1013714740, "AIT_NORMAL", 0, 25000, 3, -612753081, 25000 );
        sub_29535( l_U1618[I], ref l_U1737 );
        sub_29858( ref l_U1618[I], g_U1330 );
    }
    for ( I = 1; I <= 2; I++ )
    {
        uVar3 = GET_WEAPON_FROM_HAND( l_U1618[I], 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            ENABLE_WEAPON_ATTACHMENT( uVar3, 14, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar3, 14, 1 );
            SET_WEAPON_LIGHT_DATA_BY_NAME( GET_WEAPON_FROM_HAND( l_U1618[I], 0, 0 ), "Flashlight_Hotel" );
        }
        else
        {
            sub_1191( "SBA", "ERROR: Can't set light data for:", 0 );
            sub_1745( I );
        }
    }
    sub_30738( ref l_U1618, "PropaneRoom" );
    sub_34720( ref l_U1618, 1 );
    sub_31138( ref l_U1618 );
    if (NOT (IS_PED_DEAD( l_U1618[0] )))
    {
        SET_PED_AS_ONE_SHOT_KILL( l_U1618[0], 1 );
    }
    return;
}

void sub_34720(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_30240( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_34832()
{
    sub_25990( ref l_U372, g_U1443, l_U373, ref g_U1330, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U372 ))
    {
        SET_OBJECT_HEADING( l_U372, -45.00000000 );
        SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( l_U372, 1 );
        CAMERA_CAN_TARGET_OBJECT( 1, l_U372 );
    }
    sub_25990( ref l_U376, 2019393516, -4.96300000, -6.59900000, 13.15300000, ref g_U1330, 1, 0 );
    SET_OBJECT_INVINCIBLE( l_U376, 1 );
    sub_25990( ref l_U377, -1446636735, 23.02300000, 43.20200000, 15.43900000, ref g_U1330, 1, 0 );
    SET_OBJECT_INVINCIBLE( l_U377, 1 );
    sub_25990( ref l_U378, -1835643592, -6, -8, 13, ref g_U1330, 1, 0 );
    SET_OBJECT_INVINCIBLE( l_U378, 1 );
    return;
}

void sub_35074()
{
    sub_1191( "CCB", "P_INITIALIZE_IMAGEFX_MID_CP_02", 0 );
    sub_35133( ref l_U2481 );
    l_U2481[0]._fU4 = "DOUBLE_TINT_BLUE_FLASH";
    l_U2481[0]._fU12 = 0;
    l_U2481[0]._fU8 = 4;
    l_U2481[0]._fU32 = 0;
    l_U2481[1]._fU4 = "FLASH_WHITE";
    l_U2481[1]._fU12 = 600;
    l_U2481[1]._fU20 = 1;
    l_U2481[1]._fU8 = 4;
    l_U2481[1]._fU32 = 0;
    l_U2481[2]._fU4 = "TRIPLE_IMAGE_BLUR_DOWN_2";
    l_U2481[2]._fU8 = 4;
    l_U2481[2]._fU32 = 0;
    l_U2481[3]._fU4 = "DOUBLE_TINT_BLUE_FLASH_LONG";
    l_U2481[3]._fU12 = 750;
    l_U2481[3]._fU16 = 1050;
    l_U2481[3]._fU24 = 1;
    l_U2481[3]._fU8 = 4;
    l_U2481[3]._fU32 = 0;
    l_U2481[4]._fU4 = "BLUR_ZOOM_LIGHT_FAST";
    l_U2481[4]._fU12 = 1900;
    l_U2481[4]._fU8 = 4;
    l_U2481[4]._fU32 = 0;
    l_U204 = 0;
    return;
}

void sub_35133(unknown uParam0)
{
    int I;

    sub_1191( "CO", "P_INIT_IMAGEFX", 0 );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU4 = "";
        (uParam0^)[I]._fU12 = 0;
        (uParam0^)[I]._fU16 = 0;
        (uParam0^)[I]._fU20 = 0;
        (uParam0^)[I]._fU24 = 0;
        (uParam0^)[I]._fU28 = 0;
        (uParam0^)[I]._fU32 = 1;
    }
    return;
}

void sub_35743()
{
    unknown uVar2;
    unknown uVar3;

    switch (l_U1407)
    {
        case 0:
        if (sub_35803( l_U428 ))
        {
            sub_35843( ref l_U1392 );
            sub_35924( ref l_U1392, 1 );
            ISEQ_REGISTER_ENTITY( 1082349389, "cp1", l_U1392[0], 0 );
            ISEQ_REGISTER_ENTITY( 1082349389, "cp2", l_U1392[1], 0 );
            sub_32393( l_U1392[0], l_U1365[0]._fU0, l_U1365[0]._fU12 );
            sub_32393( l_U1392[1], l_U1365[1]._fU0, l_U1365[1]._fU12 );
            SET_PED_PROP_INDEX( l_U1392[0], 13, 0, 0, 255 );
            SET_PED_PROP_INDEX( l_U1392[1], 13, 1, 0, 255 );
            ISEQ_START( 1082349389 );
            sub_36181( 0 );
            sub_37628();
            sub_1191( "SBA", "P_HANDLE_VIG01 - Setup done: Going to State eHIS_PLAYING", 0 );
            l_U1407 = 2;
        }
        break;
        case 2:
        if (sub_12426( l_U1392[0] ))
        {
            if (sub_38131( l_U1392[0], 47, 1 ))
            {
                l_U1449 = sub_26451( 1426433289, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_PROP_POSITION( l_U1392[0], 13 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PEP_PROP_ROTATION( l_U1392[0], 13 ), 0, 0, 0 );
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1449, ref g_U1322 );
                CLEAR_PED_PROP( l_U1392[0], 13 );
                l_U1447 = l_U1449;
                sub_5345( ref l_U1472, l_U1490, 1, 0 );
                sub_5481( ref l_U1472 );
            }
            if (sub_38131( l_U1392[0], 48, 3 ))
            {
                sub_6811( l_U1451 );
                SET_PED_PROP_INDEX( l_U1392[0], 13, 1, 0, 255 );
            }
            if (sub_38131( l_U1392[0], 48, 1 ))
            {
                l_U1451 = sub_26451( -1490597557, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_PROP_POSITION( l_U1392[0], 13 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PEP_PROP_ROTATION( l_U1392[0], 13 ), 0, 0, 0 );
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1451, ref g_U1322 );
                CLEAR_PED_PROP( l_U1392[0], 13 );
                l_U1447 = l_U1451;
                sub_5345( ref l_U1472, l_U1490, 1, 0 );
                sub_5481( ref l_U1472 );
            }
            if (sub_38131( l_U1392[0], 49, 3 ))
            {
                sub_6811( l_U1452 );
                SET_PED_PROP_INDEX( l_U1392[0], 13, 0, 0, 255 );
            }
            if (sub_38131( l_U1392[0], 49, 1 ))
            {
                l_U1452 = sub_26451( 1426433289, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_PROP_POSITION( l_U1392[0], 13 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PEP_PROP_ROTATION( l_U1392[0], 13 ), 0, 0, 0 );
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1452, ref g_U1322 );
                CLEAR_PED_PROP( l_U1392[0], 13 );
                l_U1447 = l_U1452;
                sub_5345( ref l_U1472, l_U1490, 1, 0 );
                sub_5481( ref l_U1472 );
            }
            if (sub_38131( l_U1392[0], 50, 3 ))
            {
                sub_6811( l_U1453 );
                SET_PED_PROP_INDEX( l_U1392[0], 13, 2, 0, 255 );
            }
            if (sub_38131( l_U1392[0], 50, 1 ))
            {
                CLEAR_PED_PROP( l_U1392[0], 13 );
                SET_PED_PROP_INDEX( l_U1392[0], 12, 2, 0, 255 );
            }
            if (sub_38131( l_U1392[0], 51, 1 ))
            {
                l_U1453 = sub_26451( -1166741530, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_PROP_POSITION( l_U1392[0], 12 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PEP_PROP_ROTATION( l_U1392[0], 12 ), 0, 0, 0 );
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1453, ref g_U1322 );
                CLEAR_PED_PROP( l_U1392[0], 12 );
                l_U1447 = l_U1453;
                sub_5345( ref l_U1472, l_U1490, 1, 0 );
                sub_5481( ref l_U1472 );
            }
            if (sub_38131( l_U1392[0], 58, 3 ))
            {
                sub_39057( l_U1392[0], 0, 1 );
            }
        }
        if (sub_12426( l_U1392[1] ))
        {
            if (sub_38131( l_U1392[1], 47, 1 ))
            {
                l_U1450 = sub_26451( -1490597557, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_PROP_POSITION( l_U1392[1], 13 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PEP_PROP_ROTATION( l_U1392[1], 13 ), 0, 0, 0 );
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1450, ref g_U1322 );
                CLEAR_PED_PROP( l_U1392[1], 13 );
                l_U1448 = l_U1450;
                sub_5345( ref l_U1481, l_U1490, 1, 0 );
                sub_5481( ref l_U1481 );
            }
            if (sub_38131( l_U1392[1], 57, 3 ))
            {
                l_U1434 = sub_26451( 547887525, l_U1435, l_U1438, 0, 0, 0 );
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1434, ref g_U1322 );
                ATTACH_OBJECT_TO_PED( l_U1434, l_U1392[1], 25310, l_U1441, l_U1444, 0 );
                sub_6936( l_U1433 );
            }
            if (sub_38131( l_U1392[1], 58, 3 ))
            {
                sub_6811( l_U1434 );
                uVar2 = sub_10457( l_U1392[1], -1013714740, 25000, 0, 0 );
                ENABLE_WEAPON_ATTACHMENT( uVar2, 14, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar2, 14, 1 );
                l_U1406 = 1;
            }
        }
        if (sub_5601( ref l_U1472 ))
        {
            sub_1191( "SBA", "tmrCP1ShortDelay is DONE", "***" );
            sub_39681( ref l_U1447 );
        }
        if (sub_5601( ref l_U1481 ))
        {
            sub_1191( "SBA", "tmrCP2ShortDelay is DONE", "***" );
            sub_39681( ref l_U1448 );
        }
        if (sub_12960( ref l_U449, 0 ))
        {
            if (sub_12426( l_U1392[1] ))
            {
                sub_1191( "SBA", "F_SHOULD_VIG01_ENEMY_SPOT_MAX: reset the rifle enemy's sense ranges", 0 );
                SET_PED_SEEING_RANGE( l_U1392[1], 60.00000000, 75 );
                SET_PED_HEARING_RANGE( l_U1392[1], 60.00000000 );
            }
        }
        if (NOT l_U1402)
        {
            if (sub_40052( l_U1392[0] ))
            {
                sub_1191( "SBA", "P_HANDLE_VIG01: CP[0] aware of player, drawing weapon", 0 );
                sub_40477( l_U1392[0] );
                if (sub_12426( l_U1392[0] ))
                {
                    SELECT_WEAPON_TO_HAND( l_U1392[0], GET_WEAPON_FROM_HOLSTER( l_U1392[0], 1 ), 0, 0 );
                }
                if ((sub_40785( l_U1491 )) AND (NOT l_U1403))
                {
                    sub_1191( "SBA", "P_HANDLE_VIG01(CP0): Killing speech", "***" );
                    sub_41007( ref l_U1491, 0 );
                    sub_36181( 1 );
                }
                l_U1402 = 1;
            }
            else if (IS_PED_DEAD( l_U1392[0] ))
            {
                sub_1191( "SBA", "P_HANDLE_VIG01: CP[0] is dead, setting 'aware'", 0 );
                l_U1402 = 1;
            }
        }
        if (NOT l_U1403)
        {
            if (sub_40052( l_U1392[1] ))
            {
                sub_1191( "SBA", "P_HANDLE_VIG01: CP[1] aware of player, drawing weapon", 0 );
                sub_40477( l_U1392[1] );
                if ((sub_12426( l_U1392[1] )) AND (NOT l_U1406))
                {
                    if (NOT (DOES_PLACEMENT_EXIST( l_U1433 )))
                    {
                        sub_10457( l_U1392[1], -1013714740, 25000, 0, 0 );
                        sub_6811( l_U1434 );
                    }
                    else
                    {
                        SELECT_WEAPON_TO_HAND( l_U1392[1], GET_WEAPON_FROM_HOLSTER( l_U1392[1], 1 ), 0, 0 );
                    }
                }
                if ((sub_40785( l_U1491 )) AND (NOT l_U1402))
                {
                    sub_1191( "SBA", "P_HANDLE_VIG01(CP1): Killing speech", "***" );
                    sub_41007( ref l_U1491, 0 );
                    sub_36181( 1 );
                }
                if (sub_12426( l_U1392[0] ))
                {
                    SET_PED_SEEING_RANGE( l_U1392[0], 60.00000000, 75 );
                    SET_PED_HEARING_RANGE( l_U1392[0], 60.00000000 );
                }
                l_U1403 = 1;
            }
            else if (IS_PED_DEAD( l_U1392[1] ))
            {
                sub_1191( "SBA", "P_HANDLE_VIG01: CP[1] is dead, setting 'aware'", 0 );
                l_U1403 = 1;
                if (sub_12426( l_U1392[0] ))
                {
                    SET_PED_SEEING_RANGE( l_U1392[0], 60.00000000, 75 );
                    SET_PED_HEARING_RANGE( l_U1392[0], 60.00000000 );
                }
            }
        }
        if ((NOT l_U1404) AND (l_U1402))
        {
            if (sub_12426( l_U1392[0] ))
            {
                if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( l_U1392[0], 0, 0 ) ))
                {
                    sub_13793( "piVIG01_CP[0] has his weapon " );
                    sub_41850( ref l_U1392[1] );
                    SET_PED_AS_ONE_SHOT_KILL( l_U1392[0], 0 );
                    l_U1404 = 1;
                }
            }
            else
            {
                sub_41850( ref l_U1392[1] );
                sub_13793( "piVIG01_CP[0] is dead " );
                l_U1404 = 1;
            }
        }
        if ((NOT l_U1405) AND (l_U1403))
        {
            if (sub_12426( l_U1392[1] ))
            {
                uVar3 = GET_WEAPON_FROM_HAND( l_U1392[1], 0, 0 );
                if (GET_DOES_WEAPON_EXIST( uVar3 ))
                {
                    sub_13793( "piVIG01_CP[1] has his weapon " );
                    sub_41850( ref l_U1392[0] );
                    SET_PED_AS_ONE_SHOT_KILL( l_U1392[1], 0 );
                    l_U1405 = 1;
                }
            }
            else
            {
                sub_41850( ref l_U1392[0] );
                sub_13793( "piVIG01_CP[1] is dead " );
                l_U1405 = 1;
            }
        }
        if ((l_U1405) AND ((l_U1404) AND ((l_U1403) AND (l_U1402))))
        {
            if (sub_12426( l_U1392[0] ))
            {
                SET_PED_SEEING_RANGE( l_U1392[0], 60.00000000, 75 );
                SET_PED_HEARING_RANGE( l_U1392[0], 60.00000000 );
            }
            if (sub_12426( l_U1392[1] ))
            {
                SET_PED_SEEING_RANGE( l_U1392[1], 60.00000000, 75 );
                SET_PED_HEARING_RANGE( l_U1392[1], 60.00000000 );
            }
            l_U208 = 5;
            sub_1191( "SBA", "P_HANDLE_VIG01: both peds armed and aware of player - going to eHIS_FINISHED", 0 );
            l_U1407 = 5;
        }
        break;
        case 5:
        SET_PED_FLAG_BLOCK_GORE_REACTION( l_U1392[0], 0 );
        SET_PED_FLAG_BLOCK_GORE_REACTION( l_U1392[1], 0 );
        break;
        case -1: break;
    }
    return;
}

void sub_35803(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_13002( sub_4485(), uParam0 );
}

void sub_35843(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (sub_12426( (uParam0^)[I] ))
        {
            CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^)[I] );
        }
    }
    return;
}

void sub_35924(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (sub_12426( (uParam0^)[I] ))
        {
            SET_PED_AS_ONE_SHOT_KILL( (uParam0^)[I], uParam1 );
        }
    }
    return;
}

void sub_36181(boolean bParam0)
{
    sub_1191( "SBA", "P_DIAL_HOTEL_VIG01", 0 );
    if ((NOT (IS_PED_DEAD( l_U1392[1] ))) AND (NOT (IS_PED_DEAD( l_U1392[0] ))))
    {
        if (NOT bParam0)
        {
            sub_36274( ref l_U1491 );
            sub_36369( 1, l_U1392[1], "M12_CP_01_Avg", ref l_U1491, 2, 0 );
            sub_36369( 2, l_U1392[0], "M12_CP_02_MUS", ref l_U1491, 2, 0 );
            sub_36623( "SHOT_VIG01E", ref l_U1491, 7, 1 );
        }
        else
        {
            sub_36274( ref l_U1501 );
            sub_36369( 1, l_U1392[1], "M12_CP_01_Avg", ref l_U1501, 2, 0 );
            sub_36369( 2, l_U1392[0], "M12_CP_02_MUS", ref l_U1501, 2, 0 );
            sub_37511( "SHOT_VIG01E", 11, 1, ref l_U1501, 7, 1 );
        }
    }
    return;
}

void sub_36274(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_36369(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_36623(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_36647( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_36647(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_36702( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_36702(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_36737( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_37231( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_36737(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_37231(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_37511(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    return sub_37539( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3, uParam4, uParam5 );
}

void sub_37539(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    char[16] cVar9;
    char[12] cVar13;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;

    StrCopy( ref cVar9, uParam1, 16 );
    array(ref cVar13, 2);
    StrCopy( ref cVar13[0], uParam0, 16 );
    StrCopy( ref cVar13[1], "END", 16 );
    return sub_36702( ref cVar13, uParam4, uParam5, 0, 1, uParam3, uParam2, ref cVar9, uParam6 );
}

void sub_37628()
{
    int I;
    unknown uVar3;

    sub_1191( "SBA", "P_CREATE_POST_VIG01_ENEMIES", "***" );
    sub_28401( ref l_U1551, 1.00000000, 0 );
    for ( I = 0; I <= (l_U1548 - 1); I++ )
    {
        sub_28628( ref l_U1521[I], ref l_U1548[I], -1013714740, "AIT_NORMAL", 2, 25000, 2, 0, 25000 );
        sub_29535( l_U1548[I], ref l_U1551 );
        sub_29858( ref l_U1548[I], g_U1306 );
    }
    for ( I = 0; I <= (l_U1548 - 1); I++ )
    {
        uVar3 = GET_WEAPON_FROM_HAND( l_U1548[I], 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_LIGHT_DATA_BY_NAME( GET_WEAPON_FROM_HAND( l_U1548[I], 0, 0 ), "Flashlight_Hotel" );
        }
        else
        {
            sub_1191( "SBA", "ERROR: Can't set light data for:", 0 );
            sub_1745( I );
        }
    }
    sub_30738( ref l_U1548, "POST_VIG01" );
    sub_31138( ref l_U1548 );
    return;
}

int sub_38131(unknown uParam0, unknown uParam1, int iParam2)
{
    if (sub_12426( uParam0 ))
    {
        if ((PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 )) == iParam2)
        {
            PED_FINISH_ACTION_INTENTION( uParam0, uParam1 );
            sub_1191( "SBA", "F_IS_ACTION_INTENTION_STATUS_REACHED: Returning TRUE", "***" );
            return 1;
        }
    }
    return 0;
}

void sub_39057(unknown uParam0, unknown uParam1, unknown uParam2)
{
    sub_1191( "SBA", "P_SET_HAND_WEAPON_VISIBILITY", 0 );
    sub_24807( uParam2 );
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        if ((GET_WEAPON_FROM_HAND( uParam0, uParam1, 0 )) != 0)
        {
            SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HAND( uParam0, uParam1, 0 ), uParam2 );
        }
        else
        {
            sub_1191( "SBA", "P_SET_HAND_WEAPON_VISIBILITY: no weapon in specified hand!", "***" );
        }
    }
    return;
}

void sub_39681(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( (uParam0^) ))
    {
        sub_1191( "SBA", "P_SET_DROPPED_OBJECT_DYNAMIC: Object exists - setting object dynamic", 0 );
        SET_OBJECT_DYNAMIC( (uParam0^), 1 );
    }
    return;
}

int sub_40052(unknown uParam0)
{
    int iVar3;

    if (sub_40069( uParam0, sub_4485() ))
    {
        sub_1191( "SBA", "F_SHOULD_VIG01_ENEMY_SPOT_MAX: PED_AWARE_OF_PED returning TRUE", 0 );
        return 1;
    }
    if ((sub_12411()) AND (sub_12426( uParam0 )))
    {
        if (HAS_BULLET_IMPACTED_IN_AREA( 28.47000000, -31.47000000, 14.00000000, 4.75000000, ref iVar3 ))
        {
            if (iVar3 == sub_4485())
            {
                sub_1191( "SBA", "F_SHOULD_VIG01_ENEMY_SPOT_MAX: Bullet Impact!", 0 );
                return 1;
            }
        }
    }
    return 0;
}

int sub_40069(unknown uParam0, unknown uParam1)
{
    if (GET_PED_AWARENESS_STATE( uParam0, uParam1, 1 ))
    {
        return 1;
    }
    if (GET_PED_AWARENESS_STATE( uParam0, uParam1, 2 ))
    {
        return 1;
    }
    if (GET_PED_AWARENESS_STATE( uParam0, uParam1, 4 ))
    {
        return 1;
    }
    if (GET_PED_AWARENESS_STATE( uParam0, uParam1, 8 ))
    {
        return 1;
    }
    return 0;
}

void sub_40477(unknown uParam0)
{
    sub_1191( "SBA", "P_DROP_ALL_PED_PROPS", "***" );
    if (sub_12426( uParam0 ))
    {
        if ((GET_PED_PROP_INDEX( uParam0, 13 )) >= 0)
        {
            sub_1191( "SBA", "P_DROP_ALL_PED_PROPS: Dropping RIGHT prop", "***" );
            KNOCK_OFF_PROP_AT_ANCHOR_POINT( uParam0, 13 );
        }
        if ((GET_PED_PROP_INDEX( uParam0, 12 )) >= 0)
        {
            sub_1191( "SBA", "P_DROP_ALL_PED_PROPS: Dropping LEFT prop", "***" );
            KNOCK_OFF_PROP_AT_ANCHOR_POINT( uParam0, 12 );
        }
    }
    return;
}

int sub_40785(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_40798( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

boolean sub_40798(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_41007(int iParam0, unknown uParam1)
{
    if (NOT (sub_40798( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

void sub_41850(unknown uParam0)
{
    if ((sub_12411()) AND (sub_12426( (uParam0^) )))
    {
        sub_30435( uParam0, sub_4485() );
    }
    return;
}

void sub_42478(unknown uParam0)
{
    int I;
    int J;

    switch (l_U204)
    {
        case 0:
        sub_1191( "CO", "P_HANDLE_IMAGEFX", 0 );
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (uParam0^)[I]._fU32)
            {
                sub_5345( ref (uParam0^)[I]._fU36, (uParam0^)[I]._fU12, 1, 0 );
                sub_5481( ref (uParam0^)[I]._fU36 );
                if ((uParam0^)[I]._fU20 > 0)
                {
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        l_U204 = 1;
        break;
        case 1:
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (sub_5601( ref (uParam0^)[I]._fU36 ))
            {
                (uParam0^)[I]._fU0 = PLAY_IMAGEFX( (uParam0^)[I]._fU4, (uParam0^)[I]._fU8, (uParam0^)[I]._fU28 );
                if ((uParam0^)[I]._fU16 > 0)
                {
                    sub_5345( ref (uParam0^)[I]._fU72, (uParam0^)[I]._fU16, 1, 0 );
                    sub_5481( ref (uParam0^)[I]._fU72 );
                }
                if ((uParam0^)[I]._fU20 > 0)
                {
                    for ( J = I + 1; J <= (I + (uParam0^)[I]._fU20); J++ )
                    {
                        (uParam0^)[J]._fU0 = PLAY_IMAGEFX( (uParam0^)[J]._fU4, (uParam0^)[J]._fU8, (uParam0^)[I]._fU28 );
                        if ((uParam0^)[J]._fU16 > 0)
                        {
                            sub_5345( ref (uParam0^)[J]._fU72, (uParam0^)[J]._fU16, 1, 0 );
                            sub_5481( ref (uParam0^)[J]._fU72 );
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
            if (sub_5601( ref (uParam0^)[I]._fU72 ))
            {
                STOP_IMAGEFX( (uParam0^)[I]._fU0, (uParam0^)[I]._fU24 );
                (uParam0^)[I]._fU32 = 1;
                if ((uParam0^)[I]._fU20 > 0)
                {
                    if ((uParam0^)[I]._fU20 == 1)
                    {
                        STOP_IMAGEFX( (uParam0^)[I + 1]._fU0, (uParam0^)[I + 1]._fU24 );
                        (uParam0^)[I + 1]._fU32 = 1;
                    }
                    else
                    {
                        for ( J = I + 1; J <= (uParam0^)[I]._fU20; J++ )
                        {
                            STOP_IMAGEFX( (uParam0^)[J]._fU0, (uParam0^)[J]._fU24 );
                            (uParam0^)[J]._fU32 = 1;
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        break;
    }
    return;
}

void sub_43221()
{
    if ((NOT l_U385) AND (sub_12411()))
    {
        if (HAS_PLACEMENT_BEEN_COLLECTED( l_U384 ))
        {
            sub_1191( "SBA", "P_SET_LAUNCHER_AMMO: setting ammo", 0 );
            SET_PED_AMMO( sub_4485(), -1659006841, 0 );
            REMOVE_PED_AMMO( sub_4485(), -1889644301 );
            SET_AMMO_IN_CLIP( sub_4485(), -1659006841, 4 );
            l_U385 = 1;
        }
    }
    return;
}

void sub_43440()
{
    sub_1191( "SBA", "P_ACTIVATE_POST_VIG01_ENEMIES", 0 );
    sub_31726( ref l_U1548 );
    sub_43527( l_U1548[0], l_U1559, 3, 6, -1082130432, 3 );
    sub_43527( l_U1548[1], l_U1562, 3, 6, -1082130432, 3 );
    return;
}

void sub_43527(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    if (sub_12426( uParam0 ))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
        TASK_ATTACK_MOVE( uParam0, uParam1, uParam4, uParam5, uParam6, uParam7 );
    }
    return;
}

void sub_43686()
{
    if (sub_12426( l_U1548[0] ))
    {
        if ((NOT (IS_PED_IN_COMBAT( l_U1548[0] ))) AND (IS_PED_AT_COORD( l_U1548[0], l_U1559, 2.00000000, 2.00000000, 2.00000000, 0, 1 )))
        {
            sub_1191( "SBA", "P_FOLLOW_UP_POST_VIG01_ENEMIES", 0 );
            sub_43527( l_U1548[0], 27.79243000, -47.30229000, 13.05316000, 2, 30, -1, 2 );
            sub_41850( ref l_U1548[0] );
            l_U1558 = 1;
        }
    }
    return;
}

void sub_43881()
{
    switch (l_U1758)
    {
        case 0:
        if (sub_12960( ref l_U470, 0 ))
        {
            sub_43958( ref l_U1618[0], 1 );
            sub_31625( l_U1618[0] );
            sub_20964( 793883882, 1 );
        }
        if (ISEQ_QUERY_STATE( 793883882, 2 ))
        {
            sub_43958( ref l_U1618[0], 0 );
            ISEQ_REGISTER_ENTITY( 793883882, "runner", l_U1618[0], 0 );
            ISEQ_START( 793883882 );
            sub_1191( "SBA", "UPDATE_HOTEL_VIG02 - Setup done: Going to State eHIS_WAITING_TO_PLAY", 0 );
            l_U1758 = 1;
        }
        break;
        case 1:
        if (sub_12426( l_U1618[0] ))
        {
            if ((IS_PED_IN_CROSSHAIR_CYLINDER( l_U1618[0], 1.00000000, 25, 1, -1082130432 )) || (sub_12960( ref l_U491, 0 )))
            {
                sub_44265( ref l_U1965, 800 );
                sub_1191( "SBA", "UPDATE_HOTEL_VIG02 - activating propane room guys", 0 );
                sub_31726( ref l_U1618 );
                sub_44423( l_U1618[1], "GenCover", "796176DD_8A0204A_Popover1", 0, 1 );
                sub_44423( l_U1618[2], "GenCover", "796176DD_7E260FD4_Corner1", 0, 1 );
                sub_44423( l_U1618[3], "GenCover", "796176DD_D59669_Popover1", 0, 0 );
                sub_1191( "SBA", "UPDATE_HOTEL_VIG02 - Setup done: Going to State eHIS_PLAYING", 0 );
                l_U1758 = 2;
            }
        }
        else
        {
            sub_44265( ref l_U1965, 800 );
            sub_1191( "SBA", "UPDATE_HOTEL_VIG02 - activating propane room guys", 0 );
            sub_31726( ref l_U1618 );
            sub_44423( l_U1618[1], "GenCover", "796176DD_8A0204A_Popover1", 0, 1 );
            sub_44423( l_U1618[2], "GenCover", "796176DD_7E260FD4_Corner1", 0, 1 );
            sub_44423( l_U1618[3], "GenCover", "796176DD_D59669_Popover1", 0, 0 );
            sub_1191( "SBA", "UPDATE_HOTEL_VIG02 - Runner Dead: Going to State eHIS_PLAYING", 0 );
            l_U1758 = 2;
        }
        break;
        case 2:
        if (sub_5601( ref l_U1965 ))
        {
            sub_44265( ref l_U1965, 2000 );
            sub_45037();
            if (sub_12426( l_U1618[0] ))
            {
                sub_1191( "SBA", "UPDATE_HOTEL_VIG02 - Runner should be RUNNING", 0 );
                PED_SET_ACTION_INTENTION( l_U1618[0], 47, 1000, 0, 0, 0 );
            }
            sub_1191( "SBA", "UPDATE_HOTEL_VIG02 - Setup done: Going to State eHIS_FINISHED", 0 );
            l_U1758 = 5;
        }
        break;
        case 5:
        if (sub_5601( ref l_U1965 ))
        {
            ENABLE_WALLA_ZONE( "S_HOTEL_WZ_2ND_FLOOR_2ND_ROOM", 1 );
        }
        if (sub_45439( ref l_U596, l_U1618[0], 0 ))
        {
            if (NOT (IS_PED_DEAD( l_U1618[0] )))
            {
                sub_7580( l_U1618[0] );
            }
        }
        break;
    }
    return;
}

void sub_43958(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        FREEZE_PED_POSITION( (uParam0^), uParam1 );
    }
    return;
}

void sub_44265(unknown uParam0, unknown uParam1)
{
    sub_5345( uParam0, uParam1, 1, 0 );
    sub_5481( uParam0 );
    return;
}

void sub_44423(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (sub_12426( uParam0 ))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
        sub_30047( ref uParam0, uParam4 );
        TASK_COMBAT_SNAP_TO_COVER( uParam0, uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_45037()
{
    sub_1191( "SBA", "P_DIAL_HOTEL_VIG02", 0 );
    if (NOT (IS_PED_DEAD( l_U1618[0] )))
    {
        sub_36274( ref l_U1511 );
        sub_36369( 1, l_U1618[0], "M12_CP_03_Avg", ref l_U1511, 2, 0 );
        sub_36623( "SHOT_VIG01D", ref l_U1511, 7, 1 );
    }
    return;
}

void sub_45439(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 = sub_13002( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

void sub_45605()
{
    int I;

    sub_1191( "SBA", "P_CREATE_PROPANE_REPLACEMENTS", "***" );
    for ( I = 0; I <= 2; I++ )
    {
        sub_28628( ref l_U1623[I], ref l_U1663[I], -1013714740, "AIT_NORMAL", 0, 25000, 3, -612753081, 25000 );
        sub_29535( l_U1663[I], ref l_U1737 );
        sub_29858( ref l_U1663[I], g_U1306 );
    }
    sub_30738( ref l_U1663, "PropaneReplacement" );
    sub_31138( ref l_U1663 );
    l_U1677 = 6;
    l_U1678 = 1;
    return;
}

void sub_45835()
{
    int I;

    sub_1191( "SBA", "P_ActivatePropaneRoomPreMID04", "***" );
    for ( I = 1; I <= 3; I++ )
    {
        sub_30240( ref l_U1618[I], 0 );
    }
    sub_45944( ref l_U1618[1], l_U1363, 1 );
    sub_45944( ref l_U1618[2], l_U1363, 1 );
    sub_43527( l_U1618[3], 0.60527700, -28.15804000, 13.12049000, 3, 1101004800, -1082130432, 3 );
    if (sub_12426( l_U1618[3] ))
    {
        SET_PED_COMBAT_ATTRIBUTES( l_U1618[3], 1, 0 );
    }
    if (sub_12426( l_U1618[1] ))
    {
        SET_PED_FLAG_FIRE_UNTIL_EMPTY_IN_COVER( l_U1618[1], 1 );
    }
    if (sub_12426( l_U1618[2] ))
    {
        SET_PED_FLAG_FIRE_UNTIL_EMPTY_IN_COVER( l_U1618[2], 1 );
    }
    return;
}

void sub_45944(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (sub_12426( (uParam0^) ))
    {
        RESET_PED_TETHERING( (uParam0^) );
        sub_45983( ref uParam1, (uParam0^), uParam2 );
    }
    return;
}

void sub_45983(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_46434()
{
    int iVar2;

    if (NOT l_U1667._fU20)
    {
        iVar2 = (sub_46461( ref l_U1618 )) + (sub_46461( ref l_U1663 ));
        if ((iVar2 < l_U1677) AND (iVar2 >= 3))
        {
            l_U1677 = iVar2;
            sub_1191( "SBA", "P_HANDLE_PROPANE_REPLACEMENTS: An enemy is dead, iPrevCountPropaneRoomGuys set to:", 0 );
            sub_1745( l_U1677 );
            l_U1676 = l_U1663[l_U1677 - 3];
            sub_44265( ref l_U1667, GET_RANDOM_INT_IN_RANGE( 500, 2000 ) );
        }
    }
    if (sub_5601( ref l_U1667 ))
    {
        if (l_U1676 == nil)
        {
            SCRIPT_ASSERT( "P_HANDLE_PROPANE_REPLACEMENTS: piPedToActivate = NULL", 0 );
        }
        else
        {
            sub_1191( "SBA", "P_HANDLE_PROPANE_REPLACEMENTS: Activating replacement", "***" );
            sub_31625( l_U1676 );
            sub_32393( l_U1676, -2.31535800, -8.66752700, 13.05386000, 100 );
            sub_29858( ref l_U1676, g_U1330 );
            sub_43527( l_U1676, -11.54000000, -21.52200000, 13.05000000, 3, 1101004800, -1082130432, 3 );
        }
    }
    return;
}

void sub_46461(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_47156()
{
    int I;

    sub_1191( "BSW", "P_CREATE_BALCONY_ATTACKERS", "***" );
    sub_28401( ref l_U1743, 1.00000000, 0 );
    for ( I = 0; I <= 1; I++ )
    {
        sub_28628( ref l_U1679[I], ref l_U1706[I], -1013714740, "AIT_NORMAL", 0, 25000, 3, 0, 25000 );
        sub_29535( l_U1706[I], ref l_U1743 );
        sub_29858( ref l_U1706[I], g_U1330 );
        sub_9812( l_U1706[I], -612753081, 1, 25000, 0 );
        SET_PED_COMBAT_ATTRIBUTES( l_U1706[I], 16, 0 );
    }
    sub_30738( ref l_U1706, "BalconyAttacker" );
    return;
}

void sub_47520()
{
    int I;

    for ( I = 0; I <= 2; I++ )
    {
        if (sub_12426( l_U1663[I] ))
        {
            if (IS_PED_PROCESSING_FROZEN( l_U1663[I] ))
            {
                sub_1191( "SBA", "P_BREAK_UP_REPLACEMENT_PARTY: cleaning replacement:", 0 );
                sub_1745( I );
                sub_7580( l_U1663[I] );
            }
            else if (sub_13002( l_U1663[I], l_U659 ))
            {
                sub_1191( "SBA", "P_BREAK_UP_REPLACEMENT_PARTY: tethering replacement!", 0 );
                sub_1745( I );
                sub_45983( ref l_U1363, l_U1663[I], 1 );
            }
        }
    }
    return;
}

void sub_47921()
{
    int I;

    if (DOES_OBJECT_EXIST( l_U372 ))
    {
        if (IS_EXPLOSION_IN_SPHERE( -1, l_U373, 4.00000000 ))
        {
            PLAY_SCRIPT_STREAM_FROM_COORD( l_U373, 0 );
            sub_6811( l_U372 );
            START_PARTICLE_FX_NON_LOOPED_AT_COORD( "HO_RF_GenExplo_S", l_U373, 0, 0, 0, 1065353216 );
            for ( I = 0; I <= 3; I++ )
            {
                if (sub_13002( l_U1618[I], l_U659 ))
                {
                    sub_13173( l_U1618[I] );
                }
            }
            sub_25990( ref l_U377, -1024724348, 23.02300000, 43.20200000, 15.43900000, ref g_U1330, 1, 1 );
            SET_OBJECT_INVINCIBLE( l_U377, 1 );
            sub_25990( ref l_U376, -1020027274, -4.96300000, -6.59900000, 13.15300000, ref g_U1330, 1, 1 );
            SET_OBJECT_INVINCIBLE( l_U376, 1 );
            sub_25990( ref l_U378, -495772823, -6, -8, 13, ref g_U1330, 1, 1 );
            SET_OBJECT_INVINCIBLE( l_U378, 1 );
        }
    }
    return;
}

void sub_48294(int iParam0, unknown uParam1)
{
    int Result;
    int I;
    int J;

    Result = 0;
    if (NOT (IS_PED_DEAD( sub_4485() )))
    {
        for ( I = 0; I < iParam0->_fU508; I++ )
        {
            if (sub_35803( iParam0->_fU0[I] ))
            {
                Result = 1;
            }
        }
    }
    if ((uParam1) AND (Result))
    {
        for ( J = 0; J < iParam0->_fU508; J++ )
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( ref iParam0->_fU0[J]._fU0, 0 );
        }
    }
    iParam0->_fU548 = 1;
    return Result;
}

int sub_48603()
{
    l_U2348 = ((((sub_46461( ref l_U1392 )) + (sub_46461( ref l_U1548 ))) + (sub_46461( ref l_U1618 ))) + (sub_46461( ref l_U1706 ))) + (sub_46461( ref l_U1663 ));
    if (sub_12426( l_U1736 ))
    {
        l_U2348++;
    }
    if ((l_U1752) AND ((NOT l_U2349) AND (l_U2348 == 1)))
    {
        sub_1191( "SBA", "P_ASSIGN_SECOND_FLOOR_FIRST_HALF_BULLET_CAM: Assigning bullet cam", 0 );
        if (NOT (IS_PED_DEAD( l_U1736 )))
        {
            if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( l_U1736 )))
            {
                SET_PED_CAN_TRIGGER_BULLET_CAM( l_U1736, 1 );
            }
        }
        else
        {
            sub_48857( ref l_U1392 );
            sub_48857( ref l_U1548 );
            sub_48857( ref l_U1618 );
            sub_48857( ref l_U1706 );
            sub_48857( ref l_U1663 );
        }
        l_U2349 = 1;
        return 1;
    }
    return 0;
}

void sub_48857(unknown uParam0)
{
    int I;

    if ((sub_46461( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_49171()
{
    sub_1191( "SBA", "P_TASK_BALCONY_ATTACKERS", "***" );
    sub_43527( l_U1706[0], -14.35000000, -15.40000000, 13.05000000, 2.00000000, 1101004800, -1082130432, 3 );
    if (sub_12426( l_U1706[1] ))
    {
        TASK_COMBAT_SNAP_TO_COVER( l_U1706[1], "GenCover", "796176DD_255A5F72_Popover1", 0 );
        SET_PED_FLAG_LOCK_TO_COVER( l_U1706[1], 1 );
    }
    return;
}

void sub_49505()
{
    sub_1191( "SBA", "P_CREATE_AND_TASK_PROPANE_ROOM_BACKDOOR_GUARD", "***" );
    sub_28628( ref l_U1723, ref l_U1736, -1013714740, "AIT_NORMAL", 0, 25000, 2, 0, 25000 );
    sub_29858( ref l_U1736, g_U1306 );
    if (sub_12426( l_U1736 ))
    {
        sub_9812( l_U1736, -612753081, 1, 25000, 0 );
        SET_PED_NAME_DEBUG( l_U1736, "backdoorguard" );
        TASK_COMBAT_SNAP_TO_COVER( l_U1736, "GenCover", "796176DD_E6565CF4_Corner1", 0 );
        SET_PED_FLAG_LOCK_TO_COVER( l_U1736, 1 );
        SET_PED_OBLIVIOUS_TO_DANGER( l_U1736, 1 );
    }
    return;
}

void sub_49893(unknown uParam0, boolean bParam1)
{
    if ((NOT (IS_PED_RAGDOLL( uParam0, 0 ))) AND ((NOT (IS_PED_INJURED( uParam0 ))) AND ((sub_12411()) AND (sub_12426( uParam0 )))))
    {
        if (bParam1)
        {
            CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
        }
        CLEAR_LOCKED_TARGET( uParam0 );
        sub_41850( ref uParam0 );
        sub_30549( ref uParam0 );
        TASK_COMBAT_PED( uParam0, sub_4485() );
    }
    return;
}

void sub_50020(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_27373( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_27373( iParam0, 0 );
        sub_50091( iParam0, 0 );
        if ((IS_PED_DEAD( sub_4485() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_4485() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_4485(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_50091(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_50242( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_50242(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_50303( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_50303( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_50303(int iParam0)
{
    if (((IS_PED_DEAD( sub_4485() )) == 0) AND ((IS_PLAYER_DEAD( sub_4507() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_4485() )) == 1) || (((IS_PED_GETTING_UP( sub_4485() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_4485() )) == 1) || (((IS_PED_IN_COVER( sub_4485() )) == 1) || (((IS_PED_DUCKING( sub_4485() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_4485() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

int sub_50774(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_4485() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_4485() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_13002( sub_4485(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_13002( sub_4485(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_50242( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_50303( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_51656() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_50020( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_27373( iParam0, 0 );
                            sub_50091( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_27373( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_4485() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_4485(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_27373( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_50091( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_4485() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_4485(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_4485() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_4485(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_4485() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_4485(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_27373( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_50091( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_4485() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_4485() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_4485() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_4485(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_50091( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

int sub_51656()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

void sub_52552()
{
    int Result;

    switch (l_U2075)
    {
        case 0:
        sub_32491( 1, 0, 0, 1 );
        sub_52630( ref l_U2174, l_U2205, l_U2208, 45, 3000 );
        sub_52841( ref l_U2174 );
        CLEAR_PED_TASKS_IMMEDIATELY( sub_4485() );
        RESET_PLAYER_INPUT_GAIT( 0 );
        sub_32393( sub_4485(), l_U2082, l_U2085 );
        ISEQ_REGISTER_ENTITY( 161673566, "MAX_PRESSING_BUTTON", sub_4485(), 0 );
        ISEQ_START( 161673566 );
        sub_5345( ref l_U2220, 1000, 1, 0 );
        sub_5481( ref l_U2220 );
        sub_5345( ref l_U2211, 1250, 1, 0 );
        sub_5481( ref l_U2211 );
        l_U2075 = 2;
        break;
        case 2:
        if (sub_5601( ref l_U2220 ))
        {
            if (DOES_OBJECT_EXIST( l_U2086 ))
            {
                PLAY_SOUND_FROM_OBJECT( -1, "S_HOTEL_SECURITY_GATE_BUTTON", l_U2086 );
            }
            PLAY_SOUND_FROM_OBJECT( -1, "S_HOTEL_SECURITY_GATE_BUZZER", DOOR_FIND_CLOSEST( g_U1533._fU0, g_U1533._fU4 ) );
        }
        if (sub_5601( ref l_U2211 ))
        {
            sub_53236( ref g_U1533, 0, 85 );
            sub_28212( ref g_U1533, 0 );
            sub_53351( ref g_U1533, 1, 0, 0.10000000 );
        }
        if (sub_53502( ref l_U2174, 1 ))
        {
            sub_53657( 750, 1, 0, 78.18056000, -6.06562900, 0 );
            sub_33090( 1, 1 );
            l_U2075 = 4;
        }
        break;
        case 4:
        l_U2075 = 5;
        Result = 1;
        break;
    }
    return Result;
}

void sub_52630(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_5345( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U724, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_52841(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_5481( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

void sub_53236(int iParam0, float fParam1, float fParam2)
{
    if ((sub_28021( iParam0 )) == 0)
    {
        sub_28087( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        ;
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

void sub_53351(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_28021( iParam0 )) == 0)
    {
        sub_28087( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

int sub_53502(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || (sub_5601( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || (sub_5601( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_53657(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

void sub_53868()
{
    if (l_U1814 != 3)
    {
        if (IS_PED_DEAD( l_U1799[2] ))
        {
            sub_1191( "SBA", "Both Shooters are dead: eBarricadeState going to eBS_OutOfPit", 0 );
            l_U1814 = 3;
        }
    }
    switch (l_U1814)
    {
        case 0:
        if ((sub_12960( ref l_U1137[1], 0 )) || (sub_12960( ref l_U1137[0], 0 )))
        {
            sub_54076( ref l_U1799[2], 10 );
            sub_30671( ref l_U1799[2], 3 );
            sub_1191( "SBA", "eBarricadeState going to eBSTurretsNotFiring", 0 );
            l_U1814 = 1;
        }
        break;
        case 1:
        if (sub_48294( ref l_U1222, 0 ))
        {
            sub_54076( ref l_U1799[2], 10 );
            sub_54245( ref l_U1799[2], sub_4485() );
            sub_54317( l_U1799[2], 0, 1, 0, 0, 750 );
            sub_1191( "SBA", "eBarricadeState going to eBSTurretsAreFiring", 0 );
            l_U1814 = 2;
        }
        break;
        case 2:
        if (NOT (sub_48294( ref l_U1222, 0 )))
        {
            if (sub_12426( l_U1799[2] ))
            {
                CLEAR_PED_TASKS_IMMEDIATELY( l_U1799[2] );
            }
            sub_30943( l_U1799[2], 10, -1 );
            sub_1191( "SBA", "eBarricadeState going to eBSTurretsNotFiring", 0 );
            l_U1814 = 1;
        }
        break;
        case 3: break;
    }
    return;
}

void sub_54076(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

void sub_54245(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_54317(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    if ((sub_12411()) AND (sub_12426( uParam0 )))
    {
        OPEN_SEQUENCE_TASK( ref uVar8 );
        TASK_PAUSE( 0, uParam5 );
        TASK_SHOOT_AT_PED( 0, sub_4485(), -1, uParam1, uParam2, uParam4, uParam3 );
        CLOSE_SEQUENCE_TASK( uVar8 );
        CLEAR_PED_TASKS( uParam0 );
        TASK_PERFORM_SEQUENCE( uParam0, uVar8 );
        CLEAR_SEQUENCE_TASK( uVar8 );
    }
    return;
}

void sub_54728()
{
    sub_54738();
    sub_54954();
    sub_56330();
    return;
}

void sub_54738()
{
    sub_1191( "SBA", "P_ACTIVATE_HALL_ENEMIES", "***" );
    sub_54844( l_U1799[0], "GenCover", "796176DD_8BDEAB45_Corner2", sub_4485(), 1 );
    sub_41850( ref l_U1799[1] );
    SET_PED_FORCE_START_FIRING_FROM_COVER( l_U1799[1] );
    sub_30871( ref l_U1799[1], 2 );
    return;
}

void sub_54844(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (sub_12426( uParam0 ))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
        sub_30047( ref uParam0, uParam4 );
        TASK_COMBAT_MOVE_TO_COVER( uParam0, uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_54954()
{
    sub_1191( "SBA", "P_CREATE_PIT_DUDES", "***" );
    sub_55053( ref l_U1818, ref l_U1884, ref l_U1890, -1013714740, 1.00000000, "AIT_NORMAL", 0, 0, 25000, 3, 0, 25000, "Pit" );
    sub_29858( ref l_U1884[0], g_U1338 );
    sub_29858( ref l_U1884[1], g_U1338 );
    sub_29858( ref l_U1884[2], g_U1338 );
    sub_29858( ref l_U1884[3], g_U1306 );
    sub_29858( ref l_U1884[4], g_U1338 );
    sub_30837( ref l_U1884, 0 );
    if (sub_12426( l_U1884[1] ))
    {
        SET_PED_CAN_AVOID_DEATH_ZONES( l_U1884[1], 0 );
        SET_PED_COMBAT_ATTRIBUTES( l_U1884[1], 1, 0 );
    }
    if (sub_12426( l_U1884[2] ))
    {
        SET_PED_CAN_AVOID_DEATH_ZONES( l_U1884[2], 0 );
        REMOVE_ALL_PED_WEAPONS( l_U1884[2] );
        sub_10457( l_U1884[2], -110877124, 25000, 0, 0 );
        sub_30240( ref l_U1884[2], 1 );
    }
    if (sub_12426( l_U1884[3] ))
    {
        SET_PED_CAN_AVOID_DEATH_ZONES( l_U1884[3], 0 );
    }
    if (sub_12426( l_U1884[4] ))
    {
        SET_PED_CAN_AVOID_DEATH_ZONES( l_U1884[4], 0 );
    }
    sub_31169( l_U1884[3] );
    sub_31169( l_U1884[4] );
    return;
}

void sub_55053(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5, boolean bParam6, unknown uParam7, unknown uParam8, unknown uParam9, int iParam10, unknown uParam11, unknown uParam12)
{
    int I;
    unknown uVar16;

    if ((uParam0^) != (uParam1^))
    {
        SCRIPT_ASSERT( "PED_ARRAY_INITIALIZE - Array sizes don't match!!", 0 );
        return;
    }
    sub_28401( uParam2, uParam4, 0 );
    if (IS_STRING_NULL( uParam12 ))
    {
        uParam12 = l_U89;
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_7580( (uParam1^)[I] );
        (uParam1^)[I] = sub_28648( ref (uParam0^)[I] );
        if (sub_12426( (uParam1^)[I] ))
        {
            SET_PED_AI_TEMPLATE( (uParam1^)[I], uParam5 );
            SET_PED_ALERTNESS( (uParam1^)[I], uParam9 );
            SET_PED_ALLOWED_TO_SURRENDER( (uParam1^)[I], 0 );
            sub_29535( (uParam1^)[I], uParam2 );
            if (iParam3 != -1569615261)
            {
                uVar16 = sub_10457( (uParam1^)[I], iParam3, uParam8, 0, 0 );
            }
            if (iParam10 != 0)
            {
                sub_9812( (uParam1^)[I], iParam10, 0, uParam11, 0 );
            }
            if (bParam6)
            {
                sub_55390( (uParam1^)[I], iParam3 );
            }
            switch (uParam7)
            {
                case 0: break;
                case 1:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 13, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 13, 1 );
                break;
                case 2:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 14, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 14, 1 );
                break;
                case 3:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 12, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 12, 1 );
                break;
            }
        }
    }
    sub_30738( uParam1, uParam12 );
    return;
}

void sub_55390(unknown uParam0, unknown uParam1)
{
    switch (uParam1)
    {
        case -1569615261:
        case 406496141:
        case -862236369:
        case 456708483:
        case -1464892298:
        case 68019059:
        case -612753081:
        case -820634585:
        SET_PED_COMBAT_RANGE_MAX( uParam0, 10.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case 434544317:
        case 1845102363:
        case -168327769:
        case -184942895:
        case 514118749:
        case 1964270085:
        case -691403429:
        case 1478009203:
        case -1404433099:
        case 1194438308:
        SET_PED_COMBAT_RANGE( uParam0, 1 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 20.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case -1013714740:
        case -1074756423:
        case 1308526797:
        case 840671040:
        case 57534114:
        case 724901397:
        case 1992962408:
        SET_PED_COMBAT_RANGE( uParam0, 2 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 30.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case 1224272620:
        case 10648147:
        case 377623895:
        case 319712764:
        case -110877124:
        case -1659006841:
        SET_PED_COMBAT_RANGE( uParam0, 3 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 50.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 5.00000000 );
        break;
    }
    return;
}

void sub_56330()
{
    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1722, 0 );
    sub_31466( ref l_U1722, 0 );
    REGISTER_TARGET( l_U1722, sub_4485() );
    sub_43527( l_U1722, 1.67015500, 1.17795100, 13.06559000, 2.00000000, 1101004800, -1082130432, 3 );
    return;
}

void sub_56930(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    }
    if (bParam2)
    {
        return VDIST( uVar5, uVar8 );
        break;
    }
    return VDIST( uVar5._fU0, uVar5._fU4, 0, uVar8._fU0, uVar8._fU4, 0 );
}

void sub_57092(unknown uParam0)
{
    sub_1191( "SBA", "P_FREE_HALL_COVER_GUYS", "***" );
    sub_30047( ref uParam0, 0 );
    sub_30871( ref uParam0, 2 );
    return;
}

void sub_57198()
{
    sub_1191( "SBA", "P_CREATE_PLANNING_BOARD_POI", 0 );
    sub_57285( ref l_U2353, 1, l_U2439, l_U2439, l_U2439, 1.50000000, 3.00000000, 1, 0 );
    sub_27787( ref l_U2353, 30, "POI_HOT_PLANBRD" );
    sub_57422( ref l_U2353, 1 );
    sub_57454( ref l_U2353, 0 );
    sub_57486( ref l_U2353, 0 );
    return;
}

void sub_57285(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
    sub_26796( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
    sub_27235( iParam0 );
    return;
}

void sub_57422(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

void sub_57454(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

void sub_57486(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
    sub_50242( iParam0 );
    return;
}

void sub_57620(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    unknown uVar10;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        CLEAR_PED_TASKS( (uParam0^) );
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam5 );
        if (NOT (IS_PED_DEAD( uParam1 )))
        {
            OPEN_SEQUENCE_TASK( ref uVar10 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uParam2, 3, uParam6, 1048576000, 0, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, uParam7 );
            TASK_COMBAT_PED( 0, uParam1 );
            CLOSE_SEQUENCE_TASK( uVar10 );
            TASK_PERFORM_SEQUENCE( (uParam0^), uVar10 );
            CLEAR_SEQUENCE_TASK( uVar10 );
        }
    }
    return;
}

void sub_57782(unknown uParam0)
{
    unknown uVar3;

    sub_1191( "SBA", "P_TURN_ON_FLASHLIGHT", 0 );
    if (sub_12426( uParam0 ))
    {
        uVar3 = GET_WEAPON_FROM_HAND( uParam0, 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            sub_1191( "SBA", "P_TURN_ON_FLASHLIGHT: turning on", 0 );
            ENABLE_WEAPON_ATTACHMENT( uVar3, 14, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar3, 14, 1 );
            SET_WEAPON_LIGHT_DATA_BY_NAME( uVar3, "Flashlight_Hotel" );
        }
        else
        {
            sub_1191( "SBA", "P_TURN_ON_FLASHLIGHT - ERROR: bad weapon index", 0 );
        }
    }
    return;
}

void sub_58037()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    vector vVar5;
    vector vVar8;

    vVar5 = {14.43400000, 33.62600000, 13.05300000};
    vVar8 = {19.98446000, 30.49428000, 12.05285000};
    if (sub_12960( ref l_U785, 0 ))
    {
        sub_1191( "SBA", "P_HANDLE_PIT_LOGIC: Max is in tbInPit", "***" );
        l_U208 = 14;
        sub_58171( ref l_U1816, ref l_U1884, 1 );
        sub_58171( ref l_U1817, ref l_U1884, 1 );
        sub_58171( ref l_U1816, ref l_U1799, 1 );
        sub_58171( ref l_U1817, ref l_U1799, 1 );
        sub_58300( l_U1799[0] );
        sub_58300( l_U1799[1] );
        sub_45983( ref l_U1815, l_U1799[0], 1 );
        sub_45983( ref l_U1815, l_U1799[1], 1 );
        RESET_PED_TETHERING( l_U1722 );
        sub_45983( ref l_U1815, l_U1722, 1 );
        sub_30871( ref l_U1884[0], 2 );
        sub_30871( ref l_U1884[1], 2 );
        sub_30871( ref l_U1884[2], 2 );
        END_CONTEXT( "HOTEL_SECOND_FLOOR_BALCONY" );
        sub_58506();
        l_U1814 = 3;
        sub_58665();
        if (NOT (IS_PED_DEAD( l_U1799[2] )))
        {
            sub_1191( "SBA", "P_HANDLE_PIT_LOGIC: piPitCP[3] survived - sending him in", "***" );
            sub_7580( l_U1884[3] );
            sub_32393( l_U1799[2], vVar5, l_U1818[3]._fU12 );
            sub_29858( ref l_U1799[2], g_U1306 );
            sub_59081( l_U1799[2] );
            sub_59312( ref l_U1799[2], vVar8, 0 );
        }
        else if (IS_PED_DEAD( l_U1884[0] ))
        {
            sub_1191( "SBA", "P_HANDLE_PIT_LOGIC: Replacing LEFT with piPitCP[3]", "***" );
            sub_31625( l_U1884[3] );
            sub_32393( l_U1884[3], vVar5, l_U1818[3]._fU12 );
            sub_29858( ref l_U1884[3], g_U1306 );
            sub_59312( ref l_U1884[3], vVar8, 0 );
            sub_30871( ref l_U1884[3], 2 );
        }
        else
        {
            sub_1191( "SBA", "P_HANDLE_PIT_LOGIC: No replacement - cleaning piPitCP[3]", "***" );
            sub_7580( l_U1884[3] );
        }
    }
    if (NOT l_U1754)
    {
        if ((sub_12411()) AND (l_U785._fU64))
        {
            uVar2 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_4485() )};
            if (uVar2._fU8 < 11.00000000)
            {
                sub_1191( "SBA", "P_HANDLE_PIT_LOGIC: Tranquility base here - the Max has landed", "***" );
                l_U1754 = 1;
                if (NOT (IS_PED_DEAD( l_U1884[1] )))
                {
                    sub_59915( ref l_U1884[1], 2.00000000, 5.00000000 );
                }
                if (NOT (IS_PED_DEAD( l_U1884[2] )))
                {
                    sub_59915( ref l_U1884[2], 2.00000000, 5.00000000 );
                }
                sub_60033();
                if (IS_PED_DEAD( l_U1884[2] ))
                {
                    sub_1191( "SBA", "P_HANDLE_PIT_LOGIC: Replacing RIGHT with piPitCP[4]", "***" );
                    sub_31625( l_U1884[4] );
                    if (sub_12426( l_U1884[4] ))
                    {
                        sub_59915( ref l_U1884[4], 2.00000000, 5.00000000 );
                    }
                    sub_59312( ref l_U1884[4], 22.67000000, 27.54000000, 13.05000000, 0 );
                    sub_30871( ref l_U1884[4], 2 );
                    return;
                }
                if (IS_PED_DEAD( l_U1884[1] ))
                {
                    sub_1191( "SBA", "P_HANDLE_PIT_LOGIC: Replacing CENTER with piPitCP[4]", "***" );
                    sub_31625( l_U1884[4] );
                    if (sub_12426( l_U1884[4] ))
                    {
                        sub_59915( ref l_U1884[4], 2.00000000, 5.00000000 );
                    }
                    sub_59312( ref l_U1884[4], l_U1818[1]._fU0, 0 );
                    sub_30871( ref l_U1884[4], 2 );
                }
                else
                {
                    sub_1191( "SBA", "P_HANDLE_PIT_LOGIC: No replacement - cleaning piPitCP[4]", "***" );
                    sub_7580( l_U1884[4] );
                }
                sub_57782( l_U1954[1] );
            }
        }
    }
    return;
}

void sub_58171(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam1^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam1^)[I] )))
        {
            sub_45983( uParam0, (uParam1^)[I], uParam2 );
        }
    }
    return;
}

void sub_58300(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        RESET_PED_TETHERING( uParam0 );
    }
    return;
}

void sub_58506()
{
    sub_1191( "SBA", "P_CREATE_PHOTOCOPY_POI", 0 );
    sub_57285( ref l_U2230, 1, l_U2316, l_U2316, l_U2316, 1.50000000, 3.00000000, 1, 0 );
    sub_27787( ref l_U2230, 30, "POI_HOT_PHOTCPY" );
    sub_57422( ref l_U2230, 1 );
    sub_57454( ref l_U2230, 0 );
    sub_57486( ref l_U2230, 0 );
    return;
}

void sub_58665()
{
    int I;

    sub_1191( "SBA", "P_CREATE_HALL_EXPLOSION_TANKS", "***" );
    l_U342[0] = {25.78700000, 43.44900000, 13.07000000};
    l_U342[1] = {26.71700000, 42.67200000, 14.02000000};
    l_U342[2] = {26.45000000, 41.95500000, 13.19000000};
    l_U342[3] = {26.55900000, 42.42500000, 13.19000000};
    for ( I = 0; I <= 3; I++ )
    {
        sub_25990( ref l_U337[I], g_U1443, l_U342[I], ref g_U1306, 1, 0 );
        CAMERA_CAN_TARGET_OBJECT( 1, l_U337[I] );
        SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( l_U337[I], 1 );
    }
    return;
}

void sub_59081(unknown uParam0)
{
    sub_1191( "SBA", "P_BARRICADE_GUY_IS_FREE", 0 );
    sub_54076( ref uParam0, 10 );
    sub_30671( ref uParam0, 3 );
    sub_43958( ref uParam0, 0 );
    sub_30240( ref uParam0, 0 );
    sub_59163( ref uParam0, sub_4485() );
    sub_30871( ref uParam0, 2 );
    if (sub_12426( uParam0 ))
    {
        SET_PED_SUFFERS_CRITICAL_HITS( uParam0, 1 );
        SET_PED_COMBAT_ATTRIBUTES( uParam0, 1, 1 );
        SET_PED_NO_RAGDOLL_TO_BULLET_UNLESS_DEAD( uParam0, 0 );
    }
    return;
}

void sub_59163(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( (uParam0^) ))) AND (NOT (IS_PED_DEAD( uParam1 ))))
    {
        CLEAR_LOCKED_TARGET( (uParam0^) );
        REGISTER_TARGET( (uParam0^), uParam1 );
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_59312(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    unknown uVar7;

    if ((NOT (IS_PED_DEAD( sub_4485() ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar7 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uParam1, 3, 20000, 1048576000, 0, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, uParam4 );
        TASK_COMBAT_PED( 0, sub_4485() );
        CLOSE_SEQUENCE_TASK( uVar7 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar7 );
        CLEAR_SEQUENCE_TASK( uVar7 );
    }
    return;
}

void sub_59915(unknown uParam0, float fParam1, float fParam2)
{
    if (sub_12426( (uParam0^) ))
    {
        if (fParam1 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam1 );
        }
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam2 );
        }
    }
    return;
}

void sub_60033()
{
    int I;
    unknown uVar3;

    sub_1191( "SBA", "P_CREATE_FINAL_GROUP", "***" );
    sub_55053( ref l_U1914, ref l_U1954, ref l_U1958, -1013714740, 1.00000000, "AIT_NORMAL", 0, 0, 25000, 2, 0, 25000, 0 );
    sub_60144( ref l_U1954, g_U1306 );
    sub_34720( ref l_U1954, 1 );
    for ( I = 0; I <= 2; I++ )
    {
        if (sub_12426( l_U1954[I] ))
        {
            SET_BLOCKING_OF_PED_TARGETTING( l_U1954[I], 1 );
            SET_PED_OBLIVIOUS_TO_DANGER( l_U1954[I], 1 );
        }
    }
    sub_30837( ref l_U1954, 0 );
    sub_60327( ref l_U1954, 3 );
    sub_58171( ref l_U1964, ref l_U1954, 1 );
    sub_30738( ref l_U1954, "Final" );
    uVar3 = GET_WEAPON_FROM_HAND( l_U1954[1], 0, 0 );
    if (GET_DOES_WEAPON_EXIST( uVar3 ))
    {
        ENABLE_WEAPON_ATTACHMENT( uVar3, 14, 1 );
        TOGGLE_WEAPON_ATTACHMENT( uVar3, 14, 1 );
        SET_WEAPON_LIGHT_DATA_BY_NAME( GET_WEAPON_FROM_HAND( l_U1954[1], 0, 0 ), "Flashlight_Hotel" );
    }
    else
    {
        sub_1191( "SBA", "ERROR: Can't set light data for piFinalCP[1]", 0 );
    }
    return;
}

void sub_60144(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (sub_12426( (uParam0^)[I] ))
        {
            sub_29858( ref (uParam0^)[I], uParam1 );
        }
    }
    return;
}

void sub_60327(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_30671( ref (uParam0^)[I], uParam1 );
    }
    return;
}

int sub_61082()
{
    if (NOT l_U1912)
    {
        if (sub_35803( l_U827 ))
        {
            if ((NOT (IS_PED_DEAD( l_U1799[2] ))) || ((sub_46461( ref l_U1884 )) > 0))
            {
                return 0;
            }
            else
            {
                l_U1912 = 1;
            }
        }
    }
    else if (NOT (sub_35803( l_U827 )))
    {
        sub_1191( "SBA", "F_OKAY_TO_DEPLOY_AFTER_PIT_GUYS: Max left back room --> TRUE", "***" );
        return 1;
    }
    return 0;
}

void sub_61287()
{
    int I;
    unknown uVar3;

    sub_1191( "SBA", "P_CREATE_AFTER_PIT_GUYS", "***" );
    for ( I = 0; I <= 0; I++ )
    {
        sub_28628( ref l_U1896[I], ref l_U1910[I], -1013714740, "AIT_NORMAL", 0, 25000, 2, 0, 25000 );
        if (I == 1)
        {
            sub_29858( ref l_U1910[I], g_U1338 );
            SET_PED_PATH_CAN_USE_CLIMBOVERS( l_U1910[I], 0 );
            sub_45983( ref l_U1815, l_U1910[I], 1 );
            sub_61488( ref l_U1910[I], 11.27118000, 16.92023000, 13.05289000, 2 );
        }
        else
        {
            sub_29858( ref l_U1910[I], g_U1306 );
            sub_59915( ref l_U1910[I], 2.00000000, 5.00000000 );
            REMOVE_ALL_PED_WEAPONS( l_U1910[I] );
            sub_10457( l_U1910[I], 514118749, 25000, 0, 0 );
            sub_45983( ref l_U1817, l_U1910[I], 1 );
            sub_45983( ref l_U1816, l_U1910[I], 1 );
            OPEN_SEQUENCE_TASK( ref uVar3 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            if (NOT (IS_PED_DEAD( sub_4485() )))
            {
                TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, 17.37431000, 31.99277000, 13.03490000, sub_4485(), 1, 4, 1101004800, -1082130432, 3 );
            }
            CLOSE_SEQUENCE_TASK( uVar3 );
            CLEAR_PED_TASKS( l_U1910[I] );
            TASK_PERFORM_SEQUENCE( l_U1910[I], uVar3 );
            CLEAR_SEQUENCE_TASK( uVar3 );
        }
    }
    sub_30738( ref l_U1910, "AfterPit" );
    return;
}

void sub_61488(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    unknown uVar7;

    if (sub_12426( (uParam0^) ))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        CLEAR_LOCKED_TARGET( (uParam0^) );
        sub_41850( uParam0 );
        sub_30549( uParam0 );
        OPEN_SEQUENCE_TASK( ref uVar7 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uParam1, uParam4, 20000, 1048576000, 0, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        if (sub_12411())
        {
            TASK_COMBAT_PED( 0, sub_4485() );
        }
        CLOSE_SEQUENCE_TASK( uVar7 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar7 );
        CLEAR_SEQUENCE_TASK( uVar7 );
    }
    return;
}

int sub_61979()
{
    int I;
    unknown uVar3;

    uVar3 = sub_4485();
    if (sub_35803( l_U848 ))
    {
        sub_1191( "SBA", "F_HAS_FINAL_CP_NOTICED_MAX: PLAYER OUT OF PIT", 0 );
        return 1;
    }
    if (sub_35803( l_U806 ))
    {
        if (GET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1954[2] ))
        {
            sub_1191( "SBA", "F_HAS_FINAL_CP_NOTICED_MAX: removing event blocking", 0 );
            sub_34720( ref l_U1954, 0 );
        }
        for ( I = 0; I <= 2; I++ )
        {
            if (sub_12426( l_U1954[I] ))
            {
                if (GET_PED_AWARENESS_STATE( l_U1954[I], sub_4485(), 8 ))
                {
                    sub_1191( "SBA", "F_HAS_FINAL_CP_NOTICED_MAX: PLAYER shot at FinalCP", 0 );
                    return 1;
                }
            }
        }
        if (HAS_BULLET_IMPACTED_IN_AREA( 24.42000000, 41.86000000, 13.07000000, 5.40000000, ref uVar3 ))
        {
            sub_1191( "SBA", "F_HAS_FINAL_CP_NOTICED_MAX: Bullet impact", 0 );
            return 1;
        }
    }
    return 0;
}

void sub_62483(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_31466( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_62586()
{
    if (((PED_GET_ACTION_INTENTION_STATUS( sub_4485(), 4 )) == 1) || (((PED_GET_ACTION_INTENTION_STATUS( sub_4485(), 5 )) == 1) || ((PED_GET_ACTION_INTENTION_STATUS( sub_4485(), 3 )) == 1)))
    {
        sub_1191( "GA", "Forcing the player to prone.", 0 );
        TASK_SHOOTDODGE( sub_4485(), 1, 0, 0 );
        PED_FINISH_ACTION_INTENTION( sub_4485(), 3 );
        PED_FINISH_ACTION_INTENTION( sub_4485(), 5 );
        PED_FINISH_ACTION_INTENTION( sub_4485(), 4 );
        SET_CAMERA_OVERRIDE( "", "", 0, 1, 1 );
    }
    if (sub_5601( ref l_U1983 ))
    {
        if (((PED_GET_ACTION_INTENTION_STATUS( sub_4485(), 4 )) != 3) AND (((PED_GET_ACTION_INTENTION_STATUS( sub_4485(), 5 )) != 3) AND ((PED_GET_ACTION_INTENTION_STATUS( sub_4485(), 3 )) != 3)))
        {
            sub_1191( "GA", "Reaction didn't start, cancelling action intention.", 0 );
            PED_FINISH_ACTION_INTENTION( sub_4485(), 3 );
            PED_FINISH_ACTION_INTENTION( sub_4485(), 5 );
            PED_FINISH_ACTION_INTENTION( sub_4485(), 4 );
        }
        else
        {
            sub_1191( "GA", "Overriding camera to HOTEL_STUMBLE_CAMERA", 0 );
            SET_CAMERA_OVERRIDE( "HOTEL_STUMBLE_CAMERA", "HOTEL_STUMBLE_CAMERA", 0, 1, 1 );
        }
    }
    if (sub_5601( ref l_U363 ))
    {
        DEACTIVATE_BULLET_TIME( 1, 0 );
    }
    return;
}

void sub_63077()
{
    float fVar2;

    if (DOES_OBJECT_EXIST( l_U337[2] ))
    {
        if (IS_EXPLOSION_IN_SPHERE( -1, 25.20621000, 42.40577000, 13.25363000, 4.00000000 ))
        {
            sub_1191( "SBA", "P_HANDLE_HALLWAY_PROPANE_TANKS: Explosion detected!", 0 );
            l_U208 = 17;
            sub_63212();
            sub_63239();
            ADD_EXPLOSION( 24.20621000, 42.40577000, 13.05363000, 0, 1.00000000, 1, 0, 1065353216 );
            if (sub_35803( l_U869 ))
            {
                if (NOT (IS_PED_USING_MP3_COVER_TASK( sub_4485() )))
                {
                    fVar2 = GET_PED_HEADING( sub_4485() );
                    sub_1191( "SBA", "P_HANDLE_HALLWAY_PROPANE_TANKS: Max's heading:", 0 );
                    sub_24572( fVar2 );
                    if ((fVar2 < 200.00000000) AND (fVar2 > 60.00000000))
                    {
                        sub_63768( 1 );
                    }
                    else if ((fVar2 < 360.00000000) AND (fVar2 > 260.00000000))
                    {
                        sub_63768( 0 );
                    }
                    else
                    {
                        sub_1191( "SBA", "P_HANDLE_HALLWAY_PROPANE_TANKS: Max stumbles!", 0 );
                        TASK_SET_ACTION_INTENTION( sub_4485(), 3, -1, 1000 );
                        l_U362 = 1;
                    }
                    if (NOT l_U362)
                    {
                        sub_1191( "SBA", "P_HANDLE_HALLWAY_PROPANE_TANKS: Bullet Time Starts", 0 );
                        sub_44265( ref l_U363, 700 );
                        DEACTIVATE_BULLET_TIME( 1, 0 );
                        ACTIVATE_BULLET_TIME( 0, 1065353216, 1 );
                    }
                }
                sub_64309( "SMALL_EXPLOSION_SHAKE", 0.50000000 );
                SET_PAD_SHAKE( 0, 600, 64 );
            }
        }
    }
    return;
}

void sub_63212()
{
    sub_7003( ref l_U337 );
    return;
}

void sub_63239()
{
    int I;

    sub_1191( "SBA", "P_PLAY_HALLWAY_EXPLOSION", "***" );
    sub_6811( g_U2092 );
    sub_26019( ref g_U2092, 2108528827, l_U355, l_U358, ref g_U1306, 1, 1 );
    sub_6811( l_U336 );
    sub_25990( ref l_U336, 77932492, 27.00000000, 43.60000000, 14.20000000, ref g_U1314, 1, 0 );
    sub_63427( l_U336, "P_HO_EXPDOR_AN_H", "ho_doorexplode", 0.60000000, 0 );
    for ( I = 0; I <= 2; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U1954[I] )))
        {
            SET_ARCADEMODE_EVENT( 2, l_U1954[I] );
        }
        sub_13173( l_U1954[I] );
    }
    return;
}

void sub_63427(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        PLAY_OBJECT_ANIM( uParam0, uParam1, uParam2, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( uParam0, uParam1, uParam2, uParam4 );
        SET_OBJECT_ANIM_SPEED( uParam0, uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_63768(boolean bParam0)
{
    sub_1191( "GA", "P_ROOF_KNOCK_PLAYER_ON_ASS start", 0 );
    if (NOT (IS_PED_DEAD( sub_4485() )))
    {
        if (bParam0)
        {
            sub_1191( "GA", "P_ROOF_KNOCK_PLAYER_ON_ASS: Forward", 0 );
            TASK_SET_ACTION_INTENTION( sub_4485(), 4, -1, 1000 );
        }
        else
        {
            sub_1191( "GA", "P_ROOF_KNOCK_PLAYER_ON_ASS: Backward", 0 );
            TASK_SET_ACTION_INTENTION( sub_4485(), 5, -1, 1000 );
        }
        sub_5481( ref l_U1983 );
    }
    sub_1191( "GA", "P_ROOF_KNOCK_PLAYER_ON_ASS end", 0 );
    return;
}

void sub_64309(unknown uParam0, unknown uParam1)
{
    SHAKE_CAM( GET_RENDERING_CAM(), uParam0, uParam1 );
    SHAKE_GAMEPLAY_CAM( uParam0, uParam1 );
    return;
}

void sub_64439()
{
    if (sub_45439( ref l_U1095, sub_4485(), 0 ))
    {
        sub_1191( "CO", "P_HANDLE_STAIR_IMAGEFX_01", 0 );
        PLAY_IMAGEFX( "DOUBLE_MOVE_FLASH_HARD", 4, 0 );
        PLAY_IMAGEFX( "DOUBLE_TINT_BLUE_FLASH", 4, 0 );
        sub_64578();
    }
    if (sub_45439( ref l_U1116, sub_4485(), 0 ))
    {
        sub_1191( "CO", "P_HANDLE_STAIR_IMAGEFX_02", 0 );
        PLAY_IMAGEFX( "FLICKER_VIBRATE_INTERLACE_M", 4, 0 );
    }
    return;
}

void sub_64578()
{
    sub_1191( "SBA", "P_KILL_ALL_2ND_FLOOR_PEDS", 0 );
    sub_7546( ref l_U1392 );
    sub_7546( ref l_U1548 );
    sub_7546( ref l_U1618 );
    sub_7546( ref l_U1663 );
    sub_7546( ref l_U1706 );
    sub_7580( l_U1722 );
    sub_7580( l_U1736 );
    sub_64697( ref l_U1799 );
    sub_64697( ref l_U1884 );
    sub_64697( ref l_U1910 );
    sub_64697( ref l_U1954 );
    l_U1913 = 1;
    return;
}

void sub_64697(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_13173( (uParam0^)[I] );
    }
    return;
}

int sub_64911()
{
    if ((l_U2350 + (sub_46461( ref l_U1954 ))) == 1)
    {
        if (NOT (IS_PED_DEAD( l_U1722 )))
        {
            if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( l_U1722 )))
            {
                SET_PED_CAN_TRIGGER_BULLET_CAM( l_U1722, 1 );
            }
        }
        sub_1191( "SBA", "P_ASSIGN_SECOND_FLOOR_PIT_BULLET_CAM: Assigning bullet cam", 0 );
        sub_48857( ref l_U1799 );
        sub_48857( ref l_U1884 );
        sub_48857( ref l_U1954 );
        sub_48857( ref l_U1910 );
        return 1;
    }
    return 0;
}

void sub_65156()
{
    sub_65170( ref l_U1799 );
    sub_65170( ref l_U1884 );
    sub_65170( ref l_U1954 );
    sub_65170( ref l_U1910 );
    if (NOT (IS_PED_DEAD( l_U1722 )))
    {
        if (GET_PED_CAN_TRIGGER_BULLET_CAM( l_U1722 ))
        {
            SET_PED_CAN_TRIGGER_BULLET_CAM( l_U1722, 0 );
        }
    }
    return;
}

void sub_65170(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            if (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] ))
            {
                sub_1191( "SBA", "P_RESET_BULLET_CAM: Un-assigning bullet cam", 0 );
                SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 0 );
            }
        }
    }
    return;
}

void sub_65447(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (DOES_PLACEMENT_EXIST( (uParam0^)[I] ))
        {
            sub_1191( "RJM", "DO_ANY_PAINKILLERS_STILL_EXIST - Found a pill in there, we can still play some V.O.", 0 );
            (uParam1^)[I] = 1;
        }
        else
        {
            (uParam1^)[I] = 0;
        }
    }
    return;
}

void sub_65656()
{
    if (DOES_OBJECT_EXIST( l_U337[2] ))
    {
        if (NOT (sub_5235( ref l_U1992 )))
        {
            if ((l_U2350 + (sub_46461( ref l_U1954 ))) == 0)
            {
                sub_1191( "SBA", "Starting Timer: tmrExplosionHint", 0 );
                sub_44265( ref l_U1992, 15000 );
            }
        }
        else if (NOT sub_65787())
        {
            if ((sub_35803( l_U869 )) || (sub_35803( l_U848 )))
            {
                if (sub_5601( ref l_U1992 ))
                {
                    sub_1191( "SBA", "Playing Explosion Hint VO", 0 );
                    sub_65954( "SHOT_STFKNTA", ref l_U2617 );
                }
            }
        }
    }
    return;
}

void sub_65787()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

void sub_65954(unknown uParam0, unknown uParam1)
{
    sub_1191( "SBA", "P_SPEECH_PLAY_MAX_MONOLOGUE", "***" );
    if (sub_12411())
    {
        sub_36274( uParam1 );
        sub_36369( 0, sub_4485(), "MAX", uParam1, 2, 0 );
        sub_36369( 1, sub_4485(), "MAX", uParam1, 2, 0 );
        sub_36623( uParam0, uParam1, 8, 1 );
    }
    return;
}

void sub_66139()
{
    if (sub_50774( ref l_U2230 ))
    {
        l_U2229 = 0;
    }
    if (sub_66169())
    {
        sub_50020( ref l_U2230, 1 );
        sub_1191( "SBA", "P_HANDLE_PHOTOCOPY_POI: POI has been used", 0 );
    }
    if (sub_67064( ref l_U2230 ))
    {
        sub_65954( "EXPLORE_ITEM", ref l_U2338 );
    }
    return;
}

void sub_66169()
{
    int Result;

    Result = 0;
    switch (l_U2229)
    {
        case 0:
        sub_1191( "SBA", "HANDLE_PHOTOCOPY_POI_CAM: ePhotocopy = ASS_SETUP", 0 );
        sub_32491( 1, 0, 0, 1 );
        l_U2229 = 3;
        break;
        case 3:
        sub_1191( "SBA", "HANDLE_PHOTOCOPY_POI_CAM: ePhotocopy = ASS_WAITING_TO_PLAY", 0 );
        CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAM_GND_15_F_CAM", 1, 25.67000000, 31.09000000, 13.54000000, 65466, 0, 0 );
        if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "shot_IDCard" )))
        {
            sub_66474( 0 );
            sub_65954( "SHOT_MXPSSDC", ref l_U2328 );
            FOUND_EXPLORATION_ITEM( "shot_IDCard" );
        }
        else
        {
            sub_5345( ref l_U2319, 4000, 1, 0 );
            sub_5481( ref l_U2319 );
        }
        if (sub_12411())
        {
            SET_PED_VISIBLE( sub_4485(), 0 );
            SET_PED_DEFAULT_AIM_AHEAD( sub_4485() );
        }
        l_U2229 = 4;
        break;
        case 4:
        if (((NOT (sub_40785( l_U2328 ))) AND (NOT l_U2319._fU20)) || (sub_5601( ref l_U2319 )))
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
            if (NOT (IS_PED_DEAD( sub_4485() )))
            {
                SET_PED_VISIBLE( sub_4485(), 1 );
            }
            sub_1191( "SBA", "HANDLE_PHOTOCOPY_POI_CAM: Cam cut done, going to ePhotocopy = ASS_FINISHED", 0 );
            l_U2229 = 5;
        }
        break;
        case 5:
        sub_33090( 1, 1 );
        if (sub_12411())
        {
            CLEAR_PED_DEFAULT_AIM( sub_4485() );
        }
        Result = 1;
        sub_1191( "SBA", "HANDLE_PHOTOCOPY_POI_CAM: going to ePhotocopy = ASS_INACTIVE", 0 );
        l_U2229 = -1;
        break;
    }
    return Result;
}

void sub_66474(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

int sub_67064(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND ((sub_67076( iParam0 )) == 0)))
    {
        if ((sub_51656() == 1) AND (((IS_PED_RELOADING( sub_4485() )) == 0) AND (((IS_PED_GETTING_UP( sub_4485() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP( sub_4485() )) == 0) AND (((IS_PED_IN_COVER( sub_4485() )) == 0) AND (((IS_PED_DUCKING( sub_4485() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_67076(int iParam0)
{
    return iParam0->_fU56;
}

void sub_67311()
{
    if (sub_50774( ref l_U2353 ))
    {
        l_U2352 = 0;
    }
    if (sub_67341())
    {
        sub_50020( ref l_U2353, 1 );
        sub_1191( "SBA", "P_HANDLE_PLANNING_BOARD_POI: POI has been used", 0 );
    }
    if (sub_67064( ref l_U2353 ))
    {
        sub_65954( "EXPLORE_ITEM", ref l_U2338 );
    }
    return;
}

void sub_67341()
{
    int Result;

    Result = 0;
    switch (l_U2352)
    {
        case 0:
        sub_1191( "SBA", "HANDLE_PLANNING_BOARD_POI_CAM: ePlanningBoard = ASS_SETUP", 0 );
        sub_32491( 1, 0, 0, 1 );
        l_U2352 = 3;
        break;
        case 3:
        sub_1191( "SBA", "HANDLE_PLANNING_BOARD_POI_CAM: ePlanningBoard = ASS_WAITING_TO_PLAY", 0 );
        CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAMPANWAL_25_LF", 1, 24.37000000, 30.46000000, 14.98000000, 65436, 0, 0 );
        if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "shot_Photos" )))
        {
            sub_66474( 0 );
            sub_65954( "SHOT_MXFTSDS", ref l_U2451 );
            FOUND_EXPLORATION_ITEM( "shot_Photos" );
            sub_5345( ref l_U2442, 5000, 1, 0 );
            sub_5481( ref l_U2442 );
        }
        else
        {
            sub_5345( ref l_U2442, 4000, 1, 0 );
            sub_5481( ref l_U2442 );
        }
        if (sub_12411())
        {
            SET_PED_VISIBLE( sub_4485(), 0 );
            CLEAR_PED_TASKS_IMMEDIATELY( sub_4485() );
            RESET_PLAYER_INPUT_GAIT( 0 );
            sub_32393( sub_4485(), 25.39800000, 29.82815000, 13.05279000, 236.00000000 );
        }
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0, 1065353216, 0 );
        l_U2352 = 4;
        break;
        case 4:
        if (sub_5601( ref l_U2442 ))
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
            if (NOT (IS_PED_DEAD( sub_4485() )))
            {
                SET_PED_VISIBLE( sub_4485(), 1 );
            }
            sub_1191( "SBA", "HANDLE_PLANNING_BOARD_POI_CAM: Cam cut done, going to ePlanningBoard = ASS_FINISHED", 0 );
            l_U2352 = 5;
        }
        break;
        case 5:
        sub_33090( 1, 1 );
        Result = 1;
        sub_1191( "SBA", "HANDLE_PLANNING_BOARD_POI_CAM: going to ePlanningBoard = ASS_INACTIVE", 0 );
        l_U2352 = -1;
        break;
    }
    return Result;
}

int sub_68358(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    if ((IS_PLAYER_DEAD( sub_4507() )) == 0)
    {
        if (sub_65787() == 0)
        {
            for ( I = 0; I <= ((uParam1^) - 1); I++ )
            {
                if ((uParam2^)[I])
                {
                    if ((HAS_PLACEMENT_BEEN_COLLECTED( (uParam1^)[I] )) || (NOT (DOES_PLACEMENT_EXIST( (uParam1^)[I] ))))
                    {
                        (uParam2^)[I] = 0;
                        if (TIME_SINCE_LAST_MONOLOGUE() > 5000)
                        {
                            sub_36274( ref l_U194 );
                            sub_65954( uParam0, ref l_U194 );
                            return 1;
                        }
                    }
                }
            }
        }
    }
    return 0;
}

void sub_68803()
{
    int I;

    sub_1191( "MW", "P_UNLOAD_ASSETS start", 0 );
    STOP_SCRIPT_STREAM( 0 );
    for ( I = 0; I < l_U2461; I++ )
    {
        sub_68881( l_U2461[I] );
    }
    sub_69050( "LEVEL_S_HOTEL_CP_11" );
    sub_69050( "EXPL_CAM" );
    sub_69099( 811797242 );
    sub_69099( -110877124 );
    sub_69099( -1659006841 );
    RELEASE_NAMED_SCRIPT_AUDIO_BANK( "SCRIPT_MISSION\S_HOTEL_SECURITY_GATE" );
    sub_1191( "MW", "P_UNLOAD_ASSETS end", 0 );
    return;
}

void sub_68881(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_10128( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_69050(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

void sub_69099(unknown uParam0)
{
    SET_WEAPON_AS_NO_LONGER_NEEDED( uParam0 );
    return;
}


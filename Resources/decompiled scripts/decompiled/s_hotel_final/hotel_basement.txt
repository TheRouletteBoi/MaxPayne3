void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = -1;
    l_U40 = {64536, 64536, 64536};
    l_U44 = 0;
    l_U45 = 0;
    l_U46 = 1500;
    l_U102 = "PED_DEF";
    l_U144 = 1.00000000;
    l_U156 = 0;
    l_U197 = 0;
    l_U218 = 0;
    l_U220 = 1;
    l_U221 = 0;
    l_U222 = 1;
    l_U223 = 0;
    l_U234 = {323.62230000, 363.08290000, -3.68839000};
    l_U237 = {8.19900400, 54.96789000, -0.01439600};
    l_U240 = {308.92420000, 391.37540000, -0.25633100};
    l_U243 = {66.99126000, 30.54711000, -0.27319800};
    l_U246 = 1;
    l_U265 = "12_01_HOTEL_concat";
    l_U297 = 0;
    l_U298 = 0;
    l_U299 = 1;
    l_U348 = "MID_02_HOTEL_concat";
    l_U349 = 1;
    l_U398 = "MID_03_HOTEL_concat";
    l_U399 = 0;
    l_U436 = 0;
    l_U438 = 0;
    l_U439 = 0;
    l_U440 = 0;
    l_U700 = {4.75000000, -3.68800000, -3.89800000};
    l_U703 = {0, 0, 90};
    l_U706 = {6.08800000, -3.40000000, -3.90500000};
    l_U709 = {0, 0, 107};
    l_U798 = {6.42000000, -3.81000000, -2.99000000};
    l_U801 = -1;
    l_U821 = -1;
    l_U908 = {-13.21000000, -1.08000000, -3.48000000};
    l_U937 = {4.52000000, -9.40000000, -2.73000000};
    l_U940 = {-60.40000000, -29.60000000, -35.00000000};
    l_U943 = {3.99000000, -9.25000000, -2.87000000};
    l_U946 = {1.00000000, 3.90000000, 170.00000000};
    l_U949 = {4.02000000, -9.25000000, -2.75000000};
    l_U952 = {2.70000000, 6.60000000, 184.00000000};
    l_U955 = {4.28000000, -7.80000000, -3.06000000};
    l_U958 = {0.92900000, 65446, 77.50000000};
    l_U962 = {4.05000000, -3.98000000, -3.65000000};
    l_U965 = {0.00000000, -0.75000000, 0.00000000};
    l_U975 = 762297658;
    l_U982 = 0;
    l_U983 = 4000;
    l_U984 = 5000;
    l_U1067 = 0;
    l_U1086 = 1750;
    l_U1087 = 750;
    l_U1088 = (l_U1086 - l_U1087) + 500;
    sub_1025( "AT", "Script s_hotel_basement.sc is starting up...", 0 );
    g_U855 = g_U854;
    sub_1084();
    l_U436 = 1;
    while (NOT IS_EXITFLAG_SET())
    {
        sub_1264();
        sub_1888();
        if (l_U440 == 0)
        {
            sub_9836();
        }
        sub_43274();
        WAIT( 0 );
    }
    sub_4231();
    sub_44192();
    SET_CAM_VIEW_MODE( 1 );
    l_U441 = GET_WEAPON_FROM_HAND( sub_1970(), 0, 0 );
    if (GET_DOES_WEAPON_EXIST( l_U441 ))
    {
        sub_1025( "SBA", "Resetting SET_MAX_SUPPRESSOR_DAMAGE_LEVEL", "***" );
        SET_MAX_SUPPRESSOR_DAMAGE_LEVEL( l_U441, 4 );
    }
    else
    {
        sub_1025( "SBA", "Could not get Player weapon to reset SET_MAX_SUPPRESSOR_DAMAGE_LEVEL", "!!!" );
    }
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "hotel_basement" );
    sub_1025( "AT", "Script hotel_basement.sc is terminating...", 0 );
    return;
}

void sub_1025(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_1084()
{
    sub_1025( "AT", "P_SETUP_ASSET_ARRAYS start", 0 );
    l_U976[0] = -1288233836;
    l_U976[1] = 1318344610;
    l_U976[2] = 2033385375;
    l_U976[3] = -1408208001;
    l_U976[4] = 1398263303;
    sub_1025( "AT", "P_SETUP_ASSET_ARRAYS end", 0 );
    return;
}

void sub_1264()
{
    if (l_U222 != l_U220)
    {
        sub_1025( "TEH", "playing music:changed CUR FLAG", 0 );
        sub_1340( l_U220 );
        sub_1340( l_U221 );
        l_U222 = l_U220;
    }
    else if (l_U223 != l_U221)
    {
        sub_1025( "TEH", "playing music:changed NEW FLAG", 0 );
        sub_1340( l_U220 );
        sub_1340( l_U221 );
        l_U223 = l_U221;
    }
    switch (l_U220)
    {
        case 1:
        sub_1025( "TEH", "playing music: Suspended ", 0 );
        AUDIO_MUSIC_SUSPEND( 500 );
        l_U233 = 0;
        l_U220 = 3;
        break;
        case 2:
        sub_1025( "TEH", "playing music: Hoboken Bar Restart checkpoint ", 0 );
        AUDIO_MUSIC_SUSPEND( 500 );
        l_U233 = 0;
        l_U220 = 3;
        break;
        case 3:
        if (l_U221 == 3)
        {
            sub_1025( "TEH", "CUE 1.2 playing music: MC_GAMEPLAY_STARTS ", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "HOTEL_SONG", "HOTEL_SONG_1", "", 0, 5000, 0, -1082130432, 0 );
            l_U233 = 0;
            l_U220 = 4;
        }
        break;
        case 4:
        if (l_U221 == 4)
        {
            sub_1025( "TEH", "playing music: MC_ENTER_ELEVATOR ", 0 );
            l_U220 = 5;
        }
        break;
    }
    return;
}

void sub_1340(unknown uParam0)
{
    return;
}

void sub_1888()
{
    if (g_U855 == 1)
    {
        switch (l_U440)
        {
            case 0:
            if (IS_PED_DEAD( sub_1970() ))
            {
                l_U440 = 1;
                sub_1025( "AT", "PLAYER DIED: eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            else if (sub_2122())
            {
                l_U440 = 1;
                sub_1025( "SBA", "RESTARTING CHECKPOINT: eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 1:
            if (sub_2632())
            {
                l_U440 = 2;
            }
            else if ((sub_2672( 0 )) == 1)
            {
                l_U440 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_1970() )))
            {
                l_U440 = 3;
                sub_1025( "AT", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_1025( "AT", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_1970() ))) AND (NOT (IS_PLAYER_DEAD( sub_1992() ))))
            {
                SET_PLAYER_CONTROL( sub_1992(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_1970() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_1970(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            l_U220 = 2;
            sub_4231();
            l_U440 = 4;
            sub_1025( "AT", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_1025( "AT", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_5226( ref l_U400, sub_1970() );
            l_U440 = 5;
            sub_1025( "AT", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_1025( "AT", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U436 = 3;
            l_U440 = 0;
            sub_1025( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_1970()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_1992() );
    }
    return 0;
}

void sub_1992()
{
    return GET_PLAYER_ID();
}

int sub_2122()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_1970() )))
        {
            SET_PED_FORCED_TO_WALK( sub_1970(), 0 );
            SET_PLAYER_FORCED_AIM( sub_1992(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1992(), 1 );
            if ((IS_PED_VISIBLE( sub_1970() )) == 0)
            {
                SET_PED_VISIBLE( sub_1970(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_2632()
{
    return g_U648;
}

int sub_2672(int iParam0)
{
    iParam0 = 1;
    switch (l_U45)
    {
        case 0:
        if (NOT (sub_2733( ref l_U47 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1970() )))
            {
                l_U46 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_2843( ref l_U47, l_U46, 1, 1 );
            sub_2979( ref l_U47 );
        }
        if (sub_3099( ref l_U47 ))
        {
            sub_1025( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1970() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_1992() )))
            {
                SET_PLAYER_CONTROL( sub_1992(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U45 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U45 = 2;
            }
            else
            {
                l_U45 = 3;
            }
        }
        break;
        case 2:
        sub_1025( "NS", "Player will QUIT", 0 );
        sub_3586();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_1025( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_3586();
        return 1;
        break;
    }
    return 0;
}

int sub_2733(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_2843(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_2979(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_3099(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_3586()
{
    sub_1025( "NS", "P_PostFailRetryCleanup", 0 );
    sub_3636( ref l_U47 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_1992() )))
    {
        SET_PLAYER_CONTROL( sub_1992(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U44 = 0;
    l_U44 = l_U44;
    l_U45 = 0;
    return;
}

void sub_3636(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_4231()
{
    sub_1025( "MW", "P_CLEANUP_BASEMENT start", 0 );
    ISEQ_UNREGISTER_ENTITY( 710130669, "cp1" );
    ISEQ_UNREGISTER_ENTITY( 710130669, "cp2" );
    sub_4321( 710130669, 0 );
    sub_4525( l_U973 );
    sub_4525( l_U972 );
    sub_4525( l_U974 );
    sub_4525( g_U1787 );
    sub_4525( g_U1788 );
    sub_4525( l_U930 );
    sub_4525( l_U931 );
    sub_4525( l_U932 );
    sub_4525( l_U933 );
    sub_4649( ref l_U469 );
    sub_4780( ref l_U968 );
    sub_4813( l_U961 );
    sub_4890( l_U348 );
    sub_4890( l_U398 );
    sub_5008( ref l_U985 );
    sub_1025( "MW", "P_CLEANUP_BASEMENT end", 0 );
    return;
}

void sub_4321(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_4525(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_4649(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_4683( (uParam0^)[I] );
    }
    return;
}

void sub_4683(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_4780(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_4813( (uParam0^)[I] );
    }
    return;
}

void sub_4813(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_4890(unknown uParam0)
{
    if ((CUTSCENE_NAMED_IS_LOADING( uParam0 )) || (CUTSCENE_IS_LOADED( uParam0 )))
    {
        sub_1025( "SBA", "Clearing cutscene:", 0 );
        sub_4959( uParam0 );
        CLEAR_NAMED_CUTSCENE( uParam0 );
    }
    return;
}

void sub_4959(unknown uParam0)
{
    return;
}

void sub_5008(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        STOP_IMAGEFX( (uParam0^)[I]._fU0, 0 );
    }
    return;
}

void sub_5226(unknown uParam0, unknown uParam1)
{
    sub_5240( uParam0, uParam1 );
    sub_9261( uParam0 );
    return;
}

void sub_5240(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_1025( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_5424( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_6501( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_6793( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_7140( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_6793( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_7140( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_6793( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_7140( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_7425( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_7140( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_7425( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_7140( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_7918( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_8079( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_1970(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_1025( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_5424(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_5456( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_5456(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_6501(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_6793(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_4959( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_7140(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_7425(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_4959( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_7918(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_8079(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_5456( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_8151( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_8151(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_9261(int iParam0)
{
    unknown uVar3;

    sub_1025( "BSW", "RESTORE_WATERBOTTLE_STATE start", 0 );
    uVar3 = sub_9317();
    if (GET_DOES_WEAPON_EXIST( uVar3 ))
    {
        SET_SUPPRESSOR_DAMAGE_LEVEL( uVar3, iParam0->_fU48 );
    }
    return;
}

void sub_9317()
{
    boolean bVar2;
    unknown Result;

    sub_1025( "BSW", "DOES_PLAYER_HAVE_WATERBOTTLE start", 0 );
    bVar2 = false;
    if (sub_9379())
    {
        Result = GET_WEAPON_FROM_SLOT( sub_1970(), 0 );
        if (GET_DOES_WEAPON_EXIST( Result ))
        {
            if ((GET_WEAPON_TYPE( Result )) == 811797242)
            {
                bVar2 = true;
            }
        }
        if (NOT bVar2)
        {
            Result = GET_WEAPON_FROM_SLOT( sub_1970(), 1 );
            if (GET_DOES_WEAPON_EXIST( Result ))
            {
                if ((GET_WEAPON_TYPE( Result )) == 811797242)
                {
                    bVar2 = true;
                }
            }
        }
    }
    if (bVar2)
    {
        return Result;
        break;
    }
    return nil;
}

int sub_9379()
{
    if (sub_9394( sub_1970() ))
    {
        return 1;
    }
    return 0;
}

int sub_9394(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (DOES_PED_EXIST( uParam0 )))
    {
        return 1;
    }
    return 0;
}

void sub_9836()
{
    int iVar2;
    unknown uVar3;

    iVar2 = l_U436;
    switch (l_U436)
    {
        case 0: break;
        case 1:
        sub_1025( "AT", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        sub_10049();
        if (NOT (sub_11137( ref l_U400 )))
        {
            sub_1025( "SBA", "Giving Player weapon", "***" );
            l_U441 = sub_7425( sub_1970(), 811797242, 20, 0, 0 );
            sub_11387( ref l_U441, 8, 1 );
            SET_MAX_SUPPRESSOR_DAMAGE_LEVEL( l_U441, 3 );
            SET_PAYNEKILLER_AMT( 2 );
        }
        l_U220 = 1;
        l_U436 = 2;
        sub_1025( "AT", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        break;
        case 2:
        if (NOT (IS_PED_DEAD( sub_1970() )))
        {
            if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_1970(), 0, 0 ) ))
            {
                l_U436 = 3;
                sub_1025( "AT", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
            }
        }
        break;
        case 3:
        sub_1025( "AT", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
        sub_11767();
        sub_11949();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U436 = 4;
        sub_1025( "AT", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 4:
        sub_1025( "AT", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        l_U436 = 5;
        sub_1025( "AT", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 5:
        sub_1025( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        sub_14789();
        l_U436 = 6;
        break;
        case 6:
        if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
        {
            if (g_U855 == 0)
            {
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                DO_SCREEN_FADE_IN( 0 );
                sub_1025( "SP", "MOVIE IS NOW SKIPPABLE", 0 );
                sub_1025( "AT", "eCheckpointState = CP_HANDLE_12_01", 0 );
                sub_15181();
                l_U436 = 7;
            }
            else
            {
                sub_1025( "AT", "eCheckpointState = CP_BASEMENT_MID_01_BLENDOUT", 0 );
                l_U436 = 8;
            }
        }
        break;
        case 7:
        if (sub_15401( 1, g_U1020[1], 0, 0, 0 ))
        {
            sub_23747();
            l_U436 = 8;
        }
        break;
        case 8:
        if (sub_23747())
        {
            sub_10240( l_U975, 0 );
            sub_10846( l_U348, 0 );
            l_U221 = 3;
            sub_28347();
            sub_28895( ref l_U545, 2500 );
            sub_28939( ref l_U968, ref l_U970 );
            l_U436 = 9;
        }
        break;
        case 9:
        if (sub_3099( ref l_U545 ))
        {
            sub_29165( "SHOT_MWTHBS", ref l_U472 );
        }
        if (sub_30283( l_U482, l_U503, 0 ))
        {
            sub_30653();
            sub_31126( ref l_U469 );
            l_U436 = 10;
        }
        break;
        case 10:
        if (sub_31291( 1, ref l_U469, 0, 0 ))
        {
            SET_PED_FORCED_TO_WALK( sub_1970(), 0 );
            sub_33387();
            sub_34083();
            sub_34243();
            l_U436 = 11;
        }
        break;
        case 11:
        if (sub_33387())
        {
            sub_10520( 262571667, 0 );
            sub_10846( l_U398, 0 );
            sub_1025( "SBA", "Open exit doors, start timer.", "***" );
            sub_34460( ref g_U1498, 1, 1, 0.40000000 );
            sub_34460( ref g_U1505, 0, 1, 0.50000000 );
            sub_2843( ref l_U681, 7500, 1, 0 );
            sub_2979( ref l_U681 );
            sub_4649( ref l_U469 );
            sub_14013( ref l_U712, 1 );
            sub_14013( ref l_U822, 1 );
            uVar3 = DOOR_FIND_CLOSEST( g_U1498._fU0, g_U1498._fU4 );
            if (DOES_OBJECT_EXIST( uVar3 ))
            {
                sub_1025( "SBA", "Making left door bulletproof", "***" );
                DOOR_SET_IS_AFFECTED_BY_BULLETS( uVar3, 0 );
            }
            uVar3 = DOOR_FIND_CLOSEST( g_U1505._fU0, g_U1505._fU4 );
            if (DOES_OBJECT_EXIST( uVar3 ))
            {
                sub_1025( "SBA", "Making right door bulletproof", "***" );
                DOOR_SET_IS_AFFECTED_BY_BULLETS( uVar3, 0 );
            }
            l_U436 = 12;
        }
        break;
        case 12:
        if (sub_3099( ref l_U681 ))
        {
            sub_1025( "SBA", "Closing exit doors from TIMER.", "***" );
            sub_35020( ref g_U1498, 0 );
            sub_35020( ref g_U1505, 0 );
        }
        if (NOT l_U681._fU16)
        {
            if (sub_35173( ref l_U660, 0 ))
            {
                sub_1025( "SBA", "Closing exit doors from TRIGGER.", "***" );
                sub_35020( ref g_U1498, 0 );
                sub_35020( ref g_U1505, 0 );
                sub_3636( ref l_U681 );
            }
        }
        if (NOT l_U1067)
        {
            if (sub_35390( "SHOT_MXFNDPLS", ref l_U968, ref l_U970 ))
            {
                sub_1025( "SBA", "Playing Pill monologue for puiKillHousePainkillers", "..." );
                l_U1067 = 1;
            }
        }
        sub_35829();
        sub_38732();
        if (NOT (IS_PED_DEAD( sub_1970() )))
        {
            if (l_U659)
            {
                if (NOT (sub_30306( l_U554 )))
                {
                    sub_1025( "GA", "Player moved away from forced to walk close to MID_03 elevator door trigger.", 0 );
                    SET_PED_FORCED_TO_WALK( sub_1970(), 0 );
                    l_U659 = 0;
                }
            }
            else if (sub_30306( l_U554 ))
            {
                sub_1025( "GA", "Player forced to walk close to MID_03 elevator door trigger.", 0 );
                SET_PED_FORCED_TO_WALK( sub_1970(), 1 );
                l_U659 = 1;
            }
        }
        if (sub_35173( ref l_U524, 0 ))
        {
            if (NOT (sub_39870( ref g_U1498 )))
            {
                sub_1025( "SBA", "Locking left door for MID03.", 0 );
                sub_39985( ref g_U1498, 1 );
            }
            g_U992 = 1;
            l_U436 = 13;
        }
        break;
        case 13:
        if (sub_40133( 1, 0, 0 ))
        {
            SET_PED_FORCED_TO_WALK( sub_1970(), 0 );
            g_U993 = 1;
            l_U436 = 14;
        }
        break;
        case 14:
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U436 = 0;
        sub_1025( "AT", "eCheckpointState = CP_IDLE", 0 );
        break;
    }
    sub_41747();
    if (l_U436 != iVar2)
    {
        l_U437 = 1;
    }
    else
    {
        l_U437 = 0;
    }
    return;
}

void sub_10049()
{
    int I;

    sub_1025( "MW", "P_LOAD_ASSETS start", 0 );
    sub_10102( "SHOTAUD" );
    for ( I = 0; I < l_U976; I++ )
    {
        sub_10240( l_U976[I], 1 );
    }
    sub_10416();
    sub_10520( 1009803174, 1 );
    sub_10728( "EXPL_CAM", 0, 1 );
    sub_10728( "LEVEL_S_HOTEL_CP_01", 0, 1 );
    if (g_U855 == 0)
    {
        sub_10846( l_U265, 1 );
    }
    sub_1025( "MW", "P_LOAD_ASSETS end", 0 );
    return;
}

void sub_10102(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_10122();
    return;
}

void sub_10122()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_10240(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_4959( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_10416()
{
    sub_10432( 811797242, 1 );
    sub_10432( -1013714740, 1 );
    return;
}

void sub_10432(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_10520(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_10728(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_10846(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

int sub_11137(unknown uParam0)
{
    sub_1025( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_5240( uParam0, sub_1970() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_11387(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (GET_DOES_WEAPON_EXIST( (uParam0^) ))
    {
        if (bParam2)
        {
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
        else
        {
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
    }
    return;
}

void sub_11767()
{
    sub_1025( "MW", "P_INITIALIZE_SCRIPT_DATA start", 0 );
    l_U438 = 0;
    l_U439 = 0;
    l_U437 = 1;
    l_U935 = 0;
    l_U936 = 0;
    l_U801 = -1;
    l_U821 = -1;
    l_U659 = 0;
    l_U1067 = 0;
    g_U1789 = 0;
    sub_11881();
    sub_1025( "MW", "P_INITIALIZE_SCRIPT_DATA end", 0 );
    return;
}

void sub_11881()
{
    return;
}

void sub_11949()
{
    sub_1025( "MW", "P_SET_STATIC_DATA start", 0 );
    sub_12021( ref l_U442[0], g_U1228, 0, -242176005, 7, 3, 2, 0, 0 );
    sub_12021( ref l_U442[1], g_U1232, 0, -523735065, 7, 3, 2, 0, 0 );
    sub_12230( ref l_U482, "TRIGGER_WALK_MID02", 11.21000000, 6.82000000, -4.26000000, 3.70000000, 4.10000000, 3.49000000, 0.00000000, 0.00000000, 33.02000000, 1 );
    sub_12230( ref l_U503, "TRIGGER_MID02", 13.22000000, 3.72000000, -4.26000000, 3.70000000, 4.10000000, 3.49000000, 0.00000000, 0.00000000, 33.02000000, 1 );
    sub_12230( ref l_U660, "TRIG_CLOSE_EXIT_DOORS", -2.66000000, 0.82000000, -4.26000000, 3.02000000, 2.53000000, 3.50000000, 0.00000000, 0.00000000, 34.39000000, 1 );
    sub_12230( ref l_U524, "TRIGGER_MID03", -9.95000000, 11.61000000, -4.26000000, 2.96000000, 4.10000000, 3.49000000, 0.00000000, 0.00000000, 33.02000000, 1 );
    sub_12230( ref l_U554, "TRIGGER_MID03_WALK", -8.78000000, 10.99000000, -4.26000000, 6.00000000, 6.00000000, 3.49000000, 0.00000000, 0.00000000, 33.02000000, 1 );
    sub_12230( ref l_U575, "tbImageFX_CP01", 16.08000000, 36.56000000, -4.84795000, 6.00000000, 6.00000000, 6.00000000, 0.00000000, 0.00000000, 33.02000000, 1 );
    sub_12230( ref l_U596, "tbImageFX_CP02", 4.27200000, 27.87190000, -4.84795000, 6.00000000, 6.00000000, 6.00000000, 0.00000000, 0.00000000, 33.02000000, 1 );
    sub_12230( ref l_U617, "tbImageFX_CP03", 9.16928000, 18.29560000, -4.84795000, 15.00000000, 6.00000000, 6.00000000, 0.00000000, 0.00000000, 33.02000000, 1 );
    sub_12230( ref l_U638, "tbImageFX_CP04", 10.74570000, 5.42301000, -4.84795000, 6.00000000, 6.00000000, 6.00000000, 0.00000000, 0.00000000, 33.02000000, 1 );
    sub_12942( ref l_U712, 1, l_U798, l_U798, l_U798, 1.50000000, 3.00000000, 1, 0 );
    sub_13788( ref l_U712, 30, "POI_GURNEY" );
    sub_13949( ref l_U712, 1 );
    sub_13981( ref l_U712, 0 );
    sub_14013( ref l_U712, 0 );
    sub_12942( ref l_U822, 1, l_U908, l_U908, l_U908, 1.50000000, 3.00000000, 1, 0 );
    sub_13788( ref l_U822, 30, "POI_HOT_CRATE" );
    sub_13949( ref l_U822, 1 );
    sub_13981( ref l_U822, 0 );
    sub_14013( ref l_U822, 0 );
    sub_1025( "MW", "P_SET_STATIC_DATA end", 0 );
    return;
}

void sub_12021(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_12230(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_12942(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
    sub_12957( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
    sub_13325( iParam0 );
    return;
}

void sub_12957(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_13325(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_13404( iParam0 );
    return;
}

void sub_13404(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_13463( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_13463( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_13463( iParam0, 1 );
            }
            else
            {
                sub_13463( iParam0, 0 );
            };;;
        }
        else
        {
            sub_13463( iParam0, 0 );
        }
    }
    else
    {
        sub_13463( iParam0, 0 );
    }
    return;
}

void sub_13463(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_13788(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_13819( iParam0 );
    return;
}

void sub_13819(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_13949(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

void sub_13981(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

void sub_14013(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
    sub_14055( iParam0 );
    return;
}

void sub_14055(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_14116( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_14116( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_14116(int iParam0)
{
    if (((IS_PED_DEAD( sub_1970() )) == 0) AND ((IS_PLAYER_DEAD( sub_1992() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_1970() )) == 1) || (((IS_PED_GETTING_UP( sub_1970() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_1970() )) == 1) || (((IS_PED_IN_COVER( sub_1970() )) == 1) || (((IS_PED_DUCKING( sub_1970() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_1970() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_14789()
{
    sub_1025( "MW", "P_CREATE_PLACEMENTS start", 0 );
    sub_4780( ref l_U968 );
    l_U968[0] = sub_14884( -4072149, -10.10000000, -0.89000000, -2.56000000, g_U657, 0, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U968[0], ref g_U1282 );
    sub_1025( "MW", "P_CREATE_PLACEMENTS end", 0 );
    return;
}

void sub_14884(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_15181()
{
    sub_1025( "RJM", "BLOCKLOAD_HOTEL_CUT_12_01_ASSETS", "***" );
    sub_10240( 1912342970, 1 );
    sub_10240( 1979959192, 1 );
    sub_10240( -1425703854, 1 );
    sub_10240( -764000169, 1 );
    sub_10240( -1522400210, 1 );
    return;
}

void sub_15401(boolean bParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4, unknown uParam5, unknown uParam6)
{
    int Result;
    int iVar10;
    string sVar11;
    unknown uVar12;

    Result = 0;
    if (IS_STRING_NULL( uParam5 ))
    {
        uParam5 = l_U265;
    }
    switch (l_U246)
    {
        case 1:
        sub_1025( "RJM", "PLAY_HOTEL_CUT_12_01 start", "*****" );
        sub_15548( 1, 0, 0, 1 );
        if (NOT bParam0)
        {
            sub_15181();
            if ((uParam1._fU8 != 0.00000000) AND ((uParam1._fU4 != 0.00000000) AND (uParam1._fU0 != 0.00000000)))
            {
                sub_15771( sub_1970(), uParam1, -90.00000000 );
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
                sub_1025( "BSW", "teleporting Max to: ", 0 );
                sub_15884( uParam1 );
            }
            FREEZE_PED_POSITION( sub_1970(), 1 );
            LOAD_SCENE( uParam1 );
            WAIT( 1 );
            while (GET_NUMBER_OF_STREAMING_REQUESTS() > 0)
            {
                sub_1025( "BSW", "PLAY_HOTEL_CUT_12_01 waiting for streaming", 0 );
                WAIT( 0 );
            }
            WAIT( 2000 );
        }
        else
        {
            sub_10520( 1009803174, 1 );
            CUTSCENE_REGISTER_ISEQ( 1009803174 );
        }
        if (bParam0)
        {
            sub_16064( uParam6 );
        }
        else if (sub_16377( uParam1, l_U234, 1 ))
        {
            iVar10 = 20;
            sVar11 = "SUNNY";
        }
        else if (sub_16377( uParam1, l_U240, 1 ))
        {
            iVar10 = 20;
            sVar11 = "CLOUDY";
        }
        else
        {
            iVar10 = 20;
            sVar11 = "EXTRASUNNY";
        }
        SET_TIME_OF_DAY( iVar10, 0 );
        FREEZE_TIME_OF_DAY( iVar10, 0 );
        SET_WEATHER_TYPE_NOW_PERSIST( sVar11 );
        SET_WEATHER_TRANSITION_IMMEDIATE( 1 );;
        sub_10846( uParam5, 1 );
        l_U297 = 0;
        if (ARE_STRINGS_EQUAL( uParam5, l_U265 ))
        {
            sub_1025( "BSW", "PLAY_HOTEL_CUT_12_01 get ready to twiddle the weather!", 0 );
            l_U298 = 1;
        }
        else
        {
            l_U298 = 0;
        }
        sub_16673();
        sub_19029( ref l_U266 );
        CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
        CUTSCENE_ENABLE_SKIP( 0 );
        l_U246 = 2;
        break;
        case 2:
        if ((NOT CUTSCENE_IS_WAITING_FOR_MOVIE()) || (NOT IS_TRANSITION_MOVIE_PLAYING()))
        {
            if (bParam4)
            {
                START_CUTSCENE_CAPTURE( uParam5 );
            }
            START_SEAMLESS_CUTSCENE();
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
            l_U246 = 3;
        }
        break;
        case 3:
        l_U246 = 4;
        break;
        case 4:
        if (l_U298)
        {
            if ((GET_CUTSCENE_TIME_MS() > 100149) AND (l_U297 == 0))
            {
                SET_WEATHER_TYPE_NOW_PERSIST( "CLOUDY" );
                SET_WEATHER_TRANSITION_IMMEDIATE( 1 );
                sub_1025( "BSW", "PLAY_HOTEL_CUT_12_01 twiddle 1, cloudy", 0 );
                l_U297++;
            }
            else if ((GET_CUTSCENE_TIME_MS() > 125437) AND (l_U297 == 1))
            {
                SET_WEATHER_TYPE_NOW_PERSIST( "EXTRASUNNY" );
                SET_WEATHER_TRANSITION_IMMEDIATE( 1 );
                sub_1025( "BSW", "PLAY_HOTEL_CUT_12_01 twiddle 2, EXTRASUNNY", 0 );
                l_U297++;
            }
        }
        if (GET_CUTSCENE_TIME_MS() > 174099)
        {
            CUTSCENE_ENABLE_SKIP( 1 );
        }
        if (NOT l_U296)
        {
            if (GET_CUTSCENE_TIME_MS() > 135641)
            {
                sub_1025( "MF", "Starting Music Cue 1.2", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "HOTEL_SONG", "HOTEL_SONG_1", "", 0, 8000, 0, -1082130432, 0 );
                l_U296 = 1;
            }
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            sub_22432( l_U247, 1 );
            sub_20370( l_U247, 1 );
            sub_20474( sub_1970(), 1 );
            l_U246 = 5;
            break;
        }
        return 0;
        case 5:
        if (bParam4)
        {
            STOP_CUTSCENE_CAPTURE();
        }
        sub_4649( ref l_U266 );
        sub_22670( l_U282 );
        sub_22670( l_U283 );
        sub_22738( ref l_U288 );
        sub_22738( ref l_U284 );
        sub_22738( ref l_U292 );
        sub_22814();
        if (IS_SCREEN_FADED_OUT())
        {
            sub_1025( "BSW", "cutscene skipped, force some loading", 0 );
            sub_15771( sub_1970(), g_U1020[1], g_U1123[1] );
            FREEZE_PED_POSITION( sub_1970(), 1 );
            uVar12 = GET_INTERIOR_AT_COORDS( g_U1020[1] );
            SET_INTERIOR_ACTIVE( uVar12, 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( uVar12, GET_HASH_KEY( ref g_U1258 ) );
            WAIT( 1 );
            while (GET_NUMBER_OF_STREAMING_REQUESTS() > 0)
            {
                sub_1025( "BSW", "WAITING FOR STREAMING 1", 0 );
                WAIT( 0 );
            }
            FREEZE_PED_POSITION( sub_1970(), 0 );
        }
        Result = 1;
        sub_23309( 1, 1 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_HOTEL_CP_01", "B_OUT_MID_01_HOTEL_FWD_CAM", 1, 17.76000000, 45.46000000, -1.87000000, 0.00000000, 0, 0 );
        SET_ALL_VEHICLES_HIGH_LOD( 0 );
        l_U246 = 0;
        sub_1025( "RJM", "PLAY_HOTEL_CUT_12_01 end", "*****" );
        break;
        case 0:
        l_U246 = 1;
        break;
    }
    return Result;
}

void sub_15548(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_1970() )))
        {
            SET_PLAYER_CONTROL( sub_1992(), 0, uParam2 );
            SET_PED_DUCKING( sub_1970(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_1970() );
            }
            SET_PED_INVINCIBLE( sub_1970(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_15771(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_15884(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_16064(unknown uParam0)
{
    int iVar3;
    string sVar4;

    switch (uParam0)
    {
        case 20:
        case 0:
        iVar3 = 20;
        sVar4 = "SUNNY";
        break;
        case 1:
        iVar3 = 12;
        sVar4 = "SUNNY";
        break;
        case 2:
        case 3:
        case 4:
        iVar3 = 9;
        sVar4 = "SUNNY";
        break;
        case 5:
        iVar3 = 12;
        sVar4 = "SUNNY";
        break;
        case 6:
        case 7:
        case 8:
        case 9:
        iVar3 = 9;
        sVar4 = "SUNNY_WINDY";
        break;
        case 10:
        iVar3 = 12;
        sVar4 = "SUNNY_WINDY";
        break;
        default:
        iVar3 = 12;
        sVar4 = "SUNNY";
        break;
    }
    SET_TIME_OF_DAY( iVar3, 0 );
    FREEZE_TIME_OF_DAY( iVar3, 0 );
    SET_WEATHER_TYPE_NOW_PERSIST( sVar4 );
    SET_WEATHER_TRANSITION_IMMEDIATE( 1 );
    return;
}

int sub_16377(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    if ((GET_DISTANCE_BETWEEN_COORDS( uParam0, uParam3, uParam6 )) == 0)
    {
        return 1;
        break;
    }
    return 0;
}

void sub_16673()
{
    int I;

    sub_12021( ref l_U268[0], 0, 0, 0, 0, -1694940103, 26, 6, 0, 0, 0 );
    for ( I = 0; I <= (l_U266 - 1); I++ )
    {
        l_U266[I] = sub_16739( ref l_U268[I] );
    }
    l_U282 = sub_17439( 1979959192, 318.86200000, 363.61200000, -3.33285000, 360.00000000, 1, 0, 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U282 )))
    {
        SET_VEHICLE_ON_GROUND_PROPERLY( l_U282 );
        SET_VEHICLE_PROOFS( l_U282, 1, 1, 1, 1, 1 );
        SET_VEHICLE_CAN_BE_DAMAGED( l_U282, 0 );
        SET_VEHICLE_LIGHTS( l_U282, 1 );
        SET_VEHICLE_COLOUR_COMBINATION( l_U282, 0 );
        SET_VEHICLE_EXTRA( l_U282, 0, 1 );
        SET_VEHICLE_EXTRA( l_U282, 1, 1 );
        SET_VEHICLE_EXTRA( l_U282, 2, 1 );
        SET_VEHICLE_EXTRA( l_U282, 3, 1 );
        SET_VEHICLE_EXTRA( l_U282, 4, 1 );
        SET_VEHICLE_EXTRA( l_U282, 5, 1 );
        SET_VEHICLE_EXTRA( l_U282, 6, 1 );
        SET_VEHICLE_EXTRA( l_U282, 7, 1 );
        SET_VEHICLE_EXTRA( l_U282, 8, 1 );
    }
    l_U283 = sub_17439( 1979959192, 0, 0, 0, 360.00000000, 1, 0, 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U283 )))
    {
        SET_VEHICLE_PROOFS( l_U283, 1, 1, 1, 1, 1 );
        SET_VEHICLE_CAN_BE_DAMAGED( l_U283, 0 );
        SET_VEHICLE_LIGHTS( l_U283, 1 );
        SET_VEHICLE_COLOUR_COMBINATION( l_U283, 1 );
        SET_VEHICLE_EXTRA( l_U283, 0, 1 );
        SET_VEHICLE_EXTRA( l_U283, 1, 1 );
        SET_VEHICLE_EXTRA( l_U283, 2, 1 );
        SET_VEHICLE_EXTRA( l_U283, 3, 1 );
        SET_VEHICLE_EXTRA( l_U283, 4, 1 );
        SET_VEHICLE_EXTRA( l_U283, 5, 1 );
        SET_VEHICLE_EXTRA( l_U283, 6, 1 );
        SET_VEHICLE_EXTRA( l_U283, 7, 1 );
        SET_VEHICLE_EXTRA( l_U283, 8, 1 );
    }
    for ( I = 0; I <= (l_U284 - 1); I++ )
    {
        l_U284[I] = sub_17439( -1522400210, 0, 0, 0, 360.00000000, 1, 0, 0 );
        if (NOT (IS_VEHICLE_DEAD( l_U284[I] )))
        {
            SET_VEHICLE_PROOFS( l_U284[I], 1, 1, 1, 1, 1 );
            SET_VEHICLE_CAN_BE_DAMAGED( l_U284[I], 0 );
            SET_VEHICLE_COLOUR_COMBINATION( l_U284[I], I );
            SET_VEHICLE_EXTRA( l_U284[I], 0, 1 );
            SET_VEHICLE_EXTRA( l_U284[I], 1, 1 );
            SET_VEHICLE_EXTRA( l_U284[I], 2, 1 );
            SET_VEHICLE_EXTRA( l_U284[I], 3, 1 );
            SET_VEHICLE_EXTRA( l_U284[I], 4, 1 );
            SET_VEHICLE_EXTRA( l_U284[I], 5, 1 );
            SET_VEHICLE_EXTRA( l_U284[I], 6, 1 );
            SET_VEHICLE_EXTRA( l_U284[I], 7, 1 );
            SET_VEHICLE_EXTRA( l_U284[I], 8, 1 );
        }
    }
    for ( I = 0; I <= (l_U288 - 1); I++ )
    {
        l_U288[I] = sub_17439( -764000169, 0, 0, 0, 360.00000000, 1, 0, 0 );
        if (NOT (IS_VEHICLE_DEAD( l_U288[I] )))
        {
            SET_VEHICLE_PROOFS( l_U288[I], 1, 1, 1, 1, 1 );
            SET_VEHICLE_CAN_BE_DAMAGED( l_U288[I], 0 );
            SET_VEHICLE_COLOUR_COMBINATION( l_U288[I], I );
            SET_VEHICLE_EXTRA( l_U288[I], 0, 1 );
            SET_VEHICLE_EXTRA( l_U288[I], 1, 1 );
            SET_VEHICLE_EXTRA( l_U288[I], 2, 1 );
            SET_VEHICLE_EXTRA( l_U288[I], 3, 1 );
            SET_VEHICLE_EXTRA( l_U288[I], 4, 1 );
            SET_VEHICLE_EXTRA( l_U288[I], 5, 1 );
            SET_VEHICLE_EXTRA( l_U288[I], 6, 1 );
            SET_VEHICLE_EXTRA( l_U288[I], 7, 1 );
            SET_VEHICLE_EXTRA( l_U288[I], 8, 1 );
        }
    }
    for ( I = 0; I <= (l_U292 - 1); I++ )
    {
        l_U292[I] = sub_17439( -1425703854, 0, 0, 0, 360.00000000, 1, 0, 0 );
        if (NOT (IS_VEHICLE_DEAD( l_U292[I] )))
        {
            SET_VEHICLE_PROOFS( l_U292[I], 1, 1, 1, 1, 1 );
            SET_VEHICLE_CAN_BE_DAMAGED( l_U292[I], 0 );
            SET_VEHICLE_COLOUR_COMBINATION( l_U292[I], I );
            SET_VEHICLE_EXTRA( l_U292[I], 0, 1 );
            SET_VEHICLE_EXTRA( l_U292[I], 1, 1 );
            SET_VEHICLE_EXTRA( l_U292[I], 2, 1 );
            SET_VEHICLE_EXTRA( l_U292[I], 3, 1 );
            SET_VEHICLE_EXTRA( l_U292[I], 4, 1 );
            SET_VEHICLE_EXTRA( l_U292[I], 5, 1 );
            SET_VEHICLE_EXTRA( l_U292[I], 6, 1 );
            SET_VEHICLE_EXTRA( l_U292[I], 7, 1 );
            SET_VEHICLE_EXTRA( l_U292[I], 8, 1 );
        }
    }
    SET_ALL_VEHICLES_HIGH_LOD( 1 );
    return;
}

void sub_16739(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_10240( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_17218( iParam0->_fU40 );
    sub_17298( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_17218(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_17298(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_17439(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
        sub_10240( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

void sub_19029(unknown uParam0)
{
    sub_1025( "RJM", "REGISTER_PEDS_HOTEL_CUT_12_01", "***" );
    if (sub_9379())
    {
        sub_19104( ref l_U247, 1, 1 );
        sub_20370( l_U247, 0 );
        sub_20474( sub_1970(), 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_1970(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        CUTSCENE_REGISTER_PED_TELEPORT( sub_1970(), g_U1020[1], g_U1123[1] );
        ISEQ_REGISTER_ENTITY( 1009803174, "max", sub_1970(), 0 );
    }
    sub_21324( ref (uParam0^)[0], "Wlsn_Undr_1a" );
    if (sub_21385( l_U282 ))
    {
        sub_1025( "RJM", "REGISTER_VEHICLE_WITH_12_01", "***" );
        CUTSCENE_REGISTER_VEHICLE_COPY( l_U282, "car_detective" );
        SET_VEHICLE_NAME_DEBUG( l_U282, "car_detective" );
    }
    sub_21563( ref l_U283, "car_detective^1" );
    sub_21563( ref l_U288[0], "car_brzhatch" );
    sub_21563( ref l_U288[1], "car_brzhatch^1" );
    sub_21563( ref l_U288[2], "car_brzhatch^2" );
    sub_21563( ref l_U284[0], "car_brzsedan" );
    sub_21563( ref l_U284[1], "car_brzsedan^1" );
    sub_21563( ref l_U284[2], "car_brzsedan^2" );
    sub_21563( ref l_U292[0], "felino" );
    sub_21563( ref l_U292[1], "felino^1" );
    sub_21563( ref l_U292[2], "felino^2" );
    return;
}

void sub_19104(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

    sub_19116( iParam0 );
    if ((IS_PED_DEAD( sub_1970() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND( sub_1970(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if ((sub_19295( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if ((sub_19523( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND( sub_1970(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER( sub_1970(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER( sub_1970(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER( sub_1970(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD( sub_1970() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND( sub_1970(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_1970(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND( sub_1970(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_1970(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD( sub_1970() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND( sub_1970(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if ((sub_19523( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND( sub_1970(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND( sub_1970(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_1970(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

void sub_19116(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

int sub_19295(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_19523(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_20370(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;

    uVar21 = uParam0._fU24._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar21, uParam18 );
    }
    uVar22 = uParam0._fU60._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar22, uParam18 );
    }
    return;
}

void sub_20474(unknown uParam0, unknown uParam1)
{
    sub_1025( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY", 0 );
    sub_20532( uParam1 );
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        sub_1025( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY: WEAPONHAND_LEFT", 0 );
        sub_1340( GET_WEAPON_FROM_HAND( uParam0, 1, 0 ) );
        if ((GET_WEAPON_FROM_HAND( uParam0, 1, 0 )) != 0)
        {
            SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HAND( uParam0, 1, 0 ), uParam1 );
        }
        sub_1025( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY: WEAPONHAND_RIGHT", 0 );
        sub_1340( GET_WEAPON_FROM_HAND( uParam0, 0, 0 ) );
        if ((GET_WEAPON_FROM_HAND( uParam0, 0, 0 )) != 0)
        {
            SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HAND( uParam0, 0, 0 ), uParam1 );
        }
        sub_1025( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY: WEAPONHOLSTER_PISTOL_LEFT", 0 );
        sub_1340( GET_WEAPON_FROM_HOLSTER( uParam0, 1 ) );
        if ((GET_WEAPON_FROM_HOLSTER( uParam0, 1 )) != 0)
        {
            SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HOLSTER( uParam0, 1 ), uParam1 );
        }
        sub_1025( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY: WEAPONHOLSTER_PISTOL_RIGHT", 0 );
        sub_1340( GET_WEAPON_FROM_HOLSTER( uParam0, 0 ) );
        if ((GET_WEAPON_FROM_HOLSTER( uParam0, 0 )) != 0)
        {
            SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HOLSTER( uParam0, 0 ), uParam1 );
        }
        sub_1025( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY: WEAPONHOLSTER_RIFLE", 0 );
        sub_1340( GET_WEAPON_FROM_HOLSTER( uParam0, 2 ) );
        if ((GET_WEAPON_FROM_HOLSTER( uParam0, 2 )) != 0)
        {
            SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HOLSTER( uParam0, 2 ), uParam1 );
        }
    }
    return;
}

void sub_20532(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_21324(unknown uParam0, unknown uParam1)
{
    if (sub_9394( (uParam0^) ))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( (uParam0^), uParam1, 1 );
        SET_PED_NAME_DEBUG( (uParam0^), uParam1 );
    }
    return;
}

int sub_21385(unknown uParam0)
{
    if ((NOT (IS_VEHICLE_DEAD( uParam0 ))) AND (DOES_VEHICLE_EXIST( uParam0 )))
    {
        return 1;
    }
    return 0;
}

void sub_21563(unknown uParam0, unknown uParam1)
{
    if (sub_21385( (uParam0^) ))
    {
        sub_1025( "RJM", "REGISTER_VEHICLE_WITH_12_01", "***" );
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( (uParam0^), uParam1, 0 );
        SET_VEHICLE_NAME_DEBUG( (uParam0^), uParam1 );
    }
    return;
}

void sub_22432(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;

    if ((IS_PED_DEAD( sub_1970() )) == 0)
    {
        uVar21 = uParam0._fU0._fU0;
        if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
        {
            SELECT_WEAPON_TO_HAND( sub_1970(), uVar21, 0, uParam18 );
        }
        uVar22 = uParam0._fU12._fU0;
        if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
        {
            SELECT_WEAPON_TO_HAND( sub_1970(), uVar22, 1, uParam18 );
        }
        uVar23 = uParam0._fU24._fU0;
        if ((GET_DOES_WEAPON_EXIST( uVar23 )) == 1)
        {
            SELECT_WEAPON_TO_HAND( sub_1970(), uVar23, 0, uParam18 );
        }
    }
    return;
}

void sub_22670(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

void sub_22738(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_22670( (uParam0^)[I] );
    }
    return;
}

void sub_22814()
{
    sub_1025( "RJM", "UNLOAD_HOTEL_CUT_12_01_ASSETS", "***" );
    sub_22878( 1912342970 );
    sub_22878( 1979959192 );
    sub_22878( -1425703854 );
    sub_22878( -764000169 );
    sub_22878( -1522400210 );
    return;
}

void sub_22878(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_4959( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_23309(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_1970() )))
    {
        SET_PLAYER_CONTROL( sub_1992(), 1, 0 );
        SET_PED_INVINCIBLE( sub_1970(), 0 );
        if (bParam0)
        {
            sub_23390();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_23390()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1970() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_1970(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_1970(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1970(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1970(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_23747()
{
    int Result;

    Result = 0;
    switch (l_U438)
    {
        case 0:
        sub_1025( "bsw", "HANDLE_MID_01_BLENDOUT  start", 0 );
        g_U855 = 1;
        if (NOT l_U400._fU0)
        {
            sub_23907( ref l_U400, g_U855, sub_1970(), g_U1020[1], g_U1123[1], g_U1158[1], g_U1193[1], 0 );
        }
        START_CONTEXT( "HOTEL_TO_END" );
        sub_15548( 1, 0, 0, 1 );
        sub_1025( "bsw", "HANDLE_MID_01_BLENDOUT - BLENDOUT_START", 0 );
        if ((ISEQ_QUERY_STATE( 1009803174, 3 )) == 0)
        {
            sub_1025( "bsw", "starting HANDLE_MID_01_BLENDOUT WITHOUT the cutscene", 0 );
            sub_10520( 1009803174, 1 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_HOTEL_CP_01", "B_OUT_MID_01_HOTEL_FWD_CAM", 1, 17.76000000, 45.46000000, -1.87000000, 0.00000000, 0, 0 );
            sub_15771( sub_1970(), g_U1020[1], g_U1123[1] );
            ISEQ_REGISTER_ENTITY( 1009803174, "max", sub_1970(), 0 );
            ISEQ_START( 1009803174 );
        }
        sub_2843( ref l_U1077, l_U1086, 1, 0 );
        sub_2979( ref l_U1077 );
        sub_2843( ref l_U1068, l_U1087, 1, 0 );
        sub_2979( ref l_U1068 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1158[1], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1193[1], 1065353216, 0 );
        DO_SCREEN_FADE_IN( 0 );
        l_U438 = 2;
        break;
        case 2:
        if (sub_3099( ref l_U1068 ))
        {
            sub_1025( "bsw", "HANDLE_MID_01_BLENDOUT simulating player input", 0 );
            SIMULATE_PLAYER_INPUT_GAIT( sub_1992(), 2, l_U1088, 0 );
        }
        if (sub_3099( ref l_U1077 ))
        {
            sub_1025( "bsw", "HANDLE_MID_01_BLENDOUT stopping camera", 0 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1158[1], 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1193[1], 1065353216, 0 );
            CAMERA_ANIMATED_STOP( 1250, 1 );
            l_U438 = 3;
        }
        break;
        case 3:
        Result = 1;
        sub_23309( 1, 1 );
        break;
    }
    return Result;
}

void sub_23907(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_23919( uParam0 );
    sub_24036( uParam0, uParam1, uParam2, uParam3, uParam6, uParam7, uParam8, uParam9 );
    return;
}

void sub_23919(int iParam0)
{
    unknown uVar3;

    sub_1025( "BSW", "SAVE_WATERBOTTLE_STATE start", 0 );
    uVar3 = sub_9317();
    if (GET_DOES_WEAPON_EXIST( uVar3 ))
    {
        iParam0->_fU48 = GET_SUPPRESSOR_DAMAGE_LEVEL( uVar3 );
    }
    return;
}

void sub_24036(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_1025( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_1025( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_8079( iParam1 );
        sub_24295( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_24746( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_24746( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_24978( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_24746( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_24978( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_24978( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_24746( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_24978( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_24978( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_24978( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_24746( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_24978( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_24978( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_24978( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_24978( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_26536( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_1025( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_24295(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_5456( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_1025( "TEH", "Ending context", 0 );
        sub_1025( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_24746(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_24978(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_26536(int iParam0)
{
    sub_4959( "CHECKPOINT DATA" );
    sub_15884( iParam0->_fU4 );
    sub_26585( iParam0->_fU16 );
    sub_26585( iParam0->_fU20 );
    sub_26585( iParam0->_fU24 );
    sub_1340( iParam0->_fU28 );
    sub_1340( iParam0->_fU56 );
    sub_1340( iParam0->_fU60 );
    sub_1340( iParam0->_fU64 );
    sub_1340( iParam0->_fU68 );
    sub_1340( iParam0->_fU72 );
    sub_1340( iParam0->_fU76 );
    sub_1340( iParam0->_fU80 );
    sub_1340( iParam0->_fU84 );
    sub_1340( iParam0->_fU88 );
    sub_1340( iParam0->_fU92 );
    sub_26585( iParam0->_fU32 );
    sub_1340( iParam0->_fU36 );
    sub_1340( iParam0->_fU40 );
    sub_1340( iParam0->_fU44 );
    sub_26585( iParam0->_fU136 );
    sub_20532( iParam0->_fU140 );
    sub_1340( iParam0->_fU52 );
    sub_4959( "---nRightHolsterAttachmentEnabled: " );
    sub_1340( iParam0->_fU96 );
    sub_4959( "---nRightHolsterAttachmentToggled: " );
    sub_1340( iParam0->_fU100 );
    sub_4959( "---nLeftHolsterAttachmentEnabled: " );
    sub_1340( iParam0->_fU104 );
    sub_4959( "---nLeftHolsterAttachmentToggled: " );
    sub_1340( iParam0->_fU108 );
    sub_4959( "---nRifleHolsterAttachmentEnabled: " );
    sub_1340( iParam0->_fU112 );
    sub_4959( "---nRifleHolsterAttachmentToggled: " );
    sub_1340( iParam0->_fU116 );
    sub_4959( "---nRightHandAttachmentEnabled: " );
    sub_1340( iParam0->_fU120 );
    sub_4959( "---nRightHandAttachmentToggled: " );
    sub_1340( iParam0->_fU124 );
    sub_4959( "---nLeftHandAttachmentEnabled: " );
    sub_1340( iParam0->_fU128 );
    sub_4959( "---nLeftHandAttachmentToggled: " );
    sub_1340( iParam0->_fU132 );
    sub_1340( l_U1 );
    sub_1340( 144 );
    return;
}

void sub_26585(unknown uParam0)
{
    return;
}

void sub_28347()
{
    sub_1025( "SBA", "P_CREATE_GURNEYS", "***" );
    sub_28414( ref g_U1787, -1408208001, l_U700, l_U703 );
    sub_28744( g_U1787, 0 );
    sub_28414( ref g_U1788, -1408208001, l_U706, l_U709 );
    sub_28744( g_U1788, 0 );
    return;
}

void sub_28414(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    sub_1025( "SBA", "P_SETUP_FURNACE_OBJECT", "***" );
    sub_4525( (uParam0^) );
    (uParam0^) = sub_28485( uParam1, uParam2, uParam5, 0, 0, 0 );
    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( (uParam0^), ref g_U1274 );
    FREEZE_OBJECT_POSITION( (uParam0^), 1 );
    return;
}

void sub_28485(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_10240( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_28744(unknown uParam0, unknown uParam1)
{
    sub_1025( "SBA", "P_SET_HOTEL_OBJECT_VISIBILITY", "***" );
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        sub_20532( uParam1 );
        SET_OBJECT_VISIBLE( uParam0, uParam1 );
    }
    return;
}

void sub_28895(unknown uParam0, unknown uParam1)
{
    sub_2843( uParam0, uParam1, 1, 0 );
    sub_2979( uParam0 );
    return;
}

void sub_28939(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (DOES_PLACEMENT_EXIST( (uParam0^)[I] ))
        {
            sub_1025( "RJM", "DO_ANY_PAINKILLERS_STILL_EXIST - Found a pill in there, we can still play some V.O.", 0 );
            (uParam1^)[I] = 1;
        }
        else
        {
            (uParam1^)[I] = 0;
        }
    }
    return;
}

void sub_29165(unknown uParam0, unknown uParam1)
{
    sub_29177( uParam1 );
    sub_29257( 0, sub_1970(), "MAX", uParam1, 2, 0 );
    sub_29257( 1, sub_1970(), "MAX", uParam1, 2, 0 );
    sub_29482( uParam0, uParam1, 8, 1 );
    return;
}

void sub_29177(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_29257(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_29482(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_29506( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_29506(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_29561( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_29561(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_29596( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_30090( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_29596(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_30090(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

int sub_30283(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, boolean bParam42)
{
    if (sub_9379())
    {
        if ((NOT (GET_IS_PED_FORCED_TO_WALK( sub_1970() ))) AND (sub_30306( uParam0 )))
        {
            sub_1025( "RJM", "UPDATE_FORCEWALK_AND_TRIGGER_PAIR - Force walk enabled", 0 );
            SET_PED_FORCED_TO_WALK( sub_1970(), 1 );
        }
        else if ((GET_IS_PED_FORCED_TO_WALK( sub_1970() )) AND (NOT (sub_30306( uParam0 ))))
        {
            sub_1025( "RJM", "UPDATE_FORCEWALK_AND_TRIGGER_PAIR - Force walk disabled", 0 );
            SET_PED_FORCED_TO_WALK( sub_1970(), 0 );
        }
    }
    if (sub_30306( uParam21 ))
    {
        if (bParam42)
        {
            SET_PED_FORCED_TO_WALK( sub_1970(), 0 );
        }
        return 1;
    }
    return 0;
}

void sub_30306(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_30324( sub_1970(), uParam0 );
}

int sub_30324(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_30653()
{
    sub_1025( "BSW", "creating furnace guys", 0 );
    sub_10240( l_U975, 1 );
    l_U469[0] = sub_16739( ref l_U442[0] );
    l_U469[1] = sub_16739( ref l_U442[1] );
    sub_30768( ref l_U469, "furnaceGuys" );
    sub_30867( ref l_U469, 1 );
    sub_30967( ref l_U469 );
    return;
}

void sub_30768(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_30867(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_30901( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_30901(unknown uParam0, unknown uParam1)
{
    if (sub_9394( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), uParam1 );
    }
    return;
}

void sub_30967(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_30998( (uParam0^)[I] );
    }
    return;
}

void sub_30998(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_31126(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_31157( (uParam0^)[I] );
    }
    return;
}

void sub_31157(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_31291(boolean bParam0, unknown uParam1, boolean bParam2, unknown uParam3)
{
    int Result;
    int iVar7;

    Result = 0;
    if (IS_STRING_NULL( uParam3 ))
    {
        uParam3 = l_U348;
    }
    switch (l_U299)
    {
        case 1:
        sub_1025( "SBA", "PLAY_HOTEL_MID_02 start", "*****" );
        sub_10846( uParam3, 1 );
        if (NOT bParam0)
        {
            sub_31446();
        }
        else
        {
            sub_10520( 710130669, 1 );
        }
        if (bParam0)
        {
            sub_1025( "BSW", "registering S_HOTEL_BLENDOUT_MID_02 with the cutscene", "*****" );
            sub_31792( uParam1 );
            CUTSCENE_REGISTER_ISEQ( 710130669 );
        }
        else
        {
            sub_32668();
            sub_31792( ref l_U345 );
        }
        sub_15548( 1, 0, 0, 0 );
        l_U299 = 2;
        break;
        case 2:
        if (bParam2)
        {
            START_CUTSCENE_CAPTURE( uParam3 );
        }
        START_SEAMLESS_CUTSCENE();
        l_U299 = 3;
        break;
        case 3:
        l_U299 = 4;
        break;
        case 4:
        if (HAS_CUTSCENE_FINISHED())
        {
            sub_22432( l_U300, 1 );
            sub_20370( l_U300, 1 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_HOTEL_CP_01", "B_OUT_MID_02_HOTEL_CAM", 1, 15.31680000, 0.19296800, -2.64646400, 0, 0, 0 );
            l_U299 = 5;
        }
        else
        {
            iVar7 = GET_CUTSCENE_TIME_MS();
            if ((iVar7 > 18000) AND (NOT g_U1789))
            {
                sub_28744( g_U1787, 1 );
                sub_28744( g_U1788, 1 );
                g_U1789 = 1;
            }
        }
        break;
        case 5:
        if (bParam2)
        {
            STOP_CUTSCENE_CAPTURE();
        }
        if (NOT g_U1789)
        {
            sub_28744( g_U1787, 1 );
            sub_28744( g_U1788, 1 );
        }
        sub_15771( sub_1970(), 13.97343000, 2.02557100, -3.90012500, 192.00000000 );
        SET_ROOM_FOR_PED_BY_NAME( sub_1970(), "room_rubble" );
        if (l_U220 != 4)
        {
            l_U220 = 4;
        }
        if (NOT bParam0)
        {
            sub_33190();
            sub_33256();
        }
        Result = 1;
        sub_23309( 1, 1 );
        l_U299 = 0;
        sub_1025( "SBA", "PLAY_HOTEL_MID_02 end", "*****" );
        break;
        case 0:
        l_U299 = 1;
        break;
    }
    return Result;
}

void sub_31446()
{
    sub_1025( "SBA", "P_SETUP_HOTEL_MID_02", "***" );
    sub_31501( 762297658 );
    return;
}

void sub_31501(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_4959( "[SP]### ERROR! (BlockLoadModel) Trying to block load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    LOAD_ALL_OBJECTS_NOW();
    while ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        LOAD_ALL_OBJECTS_NOW();
        WAIT( 0 );
    }
    return;
}

void sub_31792(unknown uParam0)
{
    sub_1025( "SBA", "REGISTER_PEDS_HOTEL_MID_02", "***" );
    if (sub_9379())
    {
        sub_19104( ref l_U300, 1, 1 );
        sub_20370( l_U300, 0 );
        sub_31882( 1 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_1970(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( sub_1970(), 0, 0 ), "W_PI_Clt1911_Aa_H", 0 );
    }
    if (sub_9394( (uParam0^)[0] ))
    {
        sub_1025( "BSW", "REGISTER_PEDS_HOTEL_MID_02 registering ped0", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( (uParam0^)[0], "H_Crac_Sold_A^1", 0 );
        ISEQ_REGISTER_ENTITY( 710130669, "cp1", (uParam0^)[0], 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( (uParam0^)[0], g_U1228, g_U1231 );
    }
    if (sub_9394( (uParam0^)[1] ))
    {
        sub_1025( "BSW", "REGISTER_PEDS_HOTEL_MID_02 registering ped1", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( (uParam0^)[1], "H_Crac_Sold_A", 0 );
        ISEQ_REGISTER_ENTITY( 710130669, "cp2", (uParam0^)[1], 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( (uParam0^)[1], g_U1232, g_U1235 );
    }
    return;
}

void sub_31882(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1970() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND( sub_1970(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if (((sub_19295( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 = sub_31987();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_1970(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

int sub_31987()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1970() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_1970(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_19295( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_1970(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_1970(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_1970(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

void sub_32668()
{
    sub_12021( ref l_U318[0], 0.00000000, 0.00000000, 0.00000000, 0, -242176005, 7, 3, 2, 0, 0 );
    sub_12021( ref l_U318[1], 0.00000000, 0.00000000, 0.00000000, 0, -523735065, 7, 3, 2, 0, 0 );
    l_U345[0] = sub_16739( ref l_U318[0] );
    l_U345[1] = sub_16739( ref l_U318[1] );
    return;
}

void sub_33190()
{
    sub_1025( "SBA", "CLEANUP_MID_02_PEDS", "***" );
    sub_4649( ref l_U345 );
    return;
}

void sub_33256()
{
    sub_22878( 762297658 );
    return;
}

void sub_33387()
{
    int Result;

    Result = 0;
    switch (l_U439)
    {
        case 0:
        sub_15548( 1, 0, 0, 1 );
        sub_1025( "bsw", "HANDLE_MID_02_BLENDOUT - BLENDOUT_START", 0 );
        if (sub_9379())
        {
            CLEAR_PED_TASKS( sub_1970() );
            sub_15771( sub_1970(), 14.36410000, 1.10358600, -3.90012500, 213.79100000 );
            SNAP_PLAYER_TO_COVERPOINT( sub_1992(), "GenCover", "E42C85C2_D680D911_Corner1", 1 );
        }
        DO_SCREEN_FADE_IN( 0 );
        l_U439 = 1;
        break;
        case 1:
        if (sub_33636( l_U469[1], 47, 3 ))
        {
            sub_1025( "SBA", "HANDLE_MID_02_BLENDOUT: Pick Up Rifle", 0 );
            sub_4813( l_U961 );
            sub_7425( l_U469[1], -1013714740, 25000, 0, 0 );
        }
        if ((CAMERA_ANIMATED_CURRENT_TIME() + 1) >= (CAMERA_ANIMATED_LENGTH( "LEVEL_S_HOTEL_CP_01", "B_OUT_MID_02_HOTEL_CAM" )))
        {
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1248, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1249, 1065353216, 0 );
            CAMERA_FREEZE_FRAME( 1, 400, 0, 0 );
            sub_1025( "SBA", "HANDLE_MID_02_BLENDOUT: going to BLENDOUT_PLAYING", 0 );
            l_U439 = 3;
        }
        break;
        case 3:
        Result = 1;
        sub_23309( 1, 1 );
        break;
    }
    return Result;
}

int sub_33636(unknown uParam0, unknown uParam1, int iParam2)
{
    if (sub_9394( uParam0 ))
    {
        if ((PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 )) == iParam2)
        {
            PED_FINISH_ACTION_INTENTION( uParam0, uParam1 );
            sub_1025( "SBA", "F_IS_ACTION_INTENTION_STATUS_REACHED: Returning TRUE", "***" );
            return 1;
        }
    }
    return 0;
}

void sub_34083()
{
    sub_1025( "SBA", "P_CREATE_BODY_BAGS", "***" );
    sub_28414( ref l_U930, 1318344610, l_U937, l_U940 );
    sub_28414( ref l_U931, 2033385375, l_U943, l_U946 );
    sub_28414( ref l_U932, 2033385375, l_U949, l_U952 );
    sub_28414( ref l_U933, 1398263303, l_U955, l_U958 );
    return;
}

void sub_34243()
{
    sub_1025( "SBA", "P_CREATE_ENEMY_RIFLE", 0 );
    sub_4813( l_U961 );
    l_U961 = sub_14884( 1676080365, l_U962, l_U965, 0, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U961, ref g_U1274 );
    return;
}

void sub_34460(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_34472( iParam0 )) == 0)
    {
        sub_34538( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

int sub_34472(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_34538(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_35020(int iParam0, int iParam1)
{
    if ((sub_34472( iParam0 )) == 0)
    {
        sub_34538( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

void sub_35173(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_30324( sub_1970(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

int sub_35390(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    if ((IS_PLAYER_DEAD( sub_1992() )) == 0)
    {
        if (sub_35419() == 0)
        {
            for ( I = 0; I <= ((uParam1^) - 1); I++ )
            {
                if ((uParam2^)[I])
                {
                    if ((HAS_PLACEMENT_BEEN_COLLECTED( (uParam1^)[I] )) || (NOT (DOES_PLACEMENT_EXIST( (uParam1^)[I] ))))
                    {
                        (uParam2^)[I] = 0;
                        if (TIME_SINCE_LAST_MONOLOGUE() > 5000)
                        {
                            sub_29177( ref l_U207 );
                            sub_35588( uParam0, ref l_U207 );
                            return 1;
                        }
                    }
                }
            }
        }
    }
    return 0;
}

void sub_35419()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

void sub_35588(unknown uParam0, unknown uParam1)
{
    sub_1025( "SBA", "P_SPEECH_PLAY_MAX_MONOLOGUE", "***" );
    if (sub_9379())
    {
        sub_29177( uParam1 );
        sub_29257( 0, sub_1970(), "MAX", uParam1, 2, 0 );
        sub_29257( 1, sub_1970(), "MAX", uParam1, 2, 0 );
        sub_29482( uParam0, uParam1, 8, 1 );
    }
    return;
}

void sub_35829()
{
    if (sub_35843( ref l_U712 ))
    {
        l_U801 = 0;
    }
    if (sub_38004())
    {
        sub_36802( ref l_U712, 1 );
        sub_1025( "SBA", "P_HANDLE_GURNEY_POI: POI has been used", 0 );
    }
    return;
}

int sub_35843(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_1970() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1970() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_30324( sub_1970(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_30324( sub_1970(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_14055( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_14116( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_36725() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_36802( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_13463( iParam0, 0 );
                            sub_36873( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_13463( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_1970() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_1970(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_13463( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_36873( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_1970() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_1970(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_1970() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_1970(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_1970() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_1970(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_13463( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_36873( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_1970() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_1970() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_1970() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_1970(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_36873( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

int sub_36725()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

void sub_36802(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_13463( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_13463( iParam0, 0 );
        sub_36873( iParam0, 0 );
        if ((IS_PED_DEAD( sub_1970() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_1970() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_1970(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_36873(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_14055( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_38004()
{
    int Result;

    Result = 0;
    switch (l_U801)
    {
        case 0:
        sub_15548( 1, 0, 0, 1 );
        l_U801 = 3;
        break;
        case 3:
        CAMERA_PLAY_ANIMATED( "LEVEL_S_HOTEL_CP_01", "GURNEY_EXPLORATION_ITEM_CAM", 0, 0, 0, 0, 0.00000000, 0, 0 );
        if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "shot_BloodRags" )))
        {
            sub_38185( 0 );
            sub_35588( "SHOT_MNSPGN", ref l_U802 );
            FOUND_EXPLORATION_ITEM( "shot_BloodRags" );
        }
        else
        {
            sub_28895( ref l_U812, 3200 );
        }
        if (sub_9379())
        {
            CLEAR_PED_TASKS_IMMEDIATELY( sub_1970() );
            RESET_PLAYER_INPUT_GAIT( 0 );
            SET_PED_VISIBLE( sub_1970(), 0 );
        }
        l_U801 = 4;
        break;
        case 4:
        if (((NOT (sub_38418( l_U802 ))) AND (NOT l_U812._fU20)) || (sub_3099( ref l_U812 )))
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
            if (sub_9379())
            {
                SET_PED_VISIBLE( sub_1970(), 1 );
            }
            l_U801 = 5;
        }
        break;
        case 5:
        sub_23309( 1, 1 );
        Result = 1;
        l_U801 = -1;
        break;
    }
    return Result;
}

void sub_38185(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

int sub_38418(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_38431( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

boolean sub_38431(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_38732()
{
    if (sub_35843( ref l_U822 ))
    {
        l_U821 = 0;
    }
    if (sub_38762())
    {
        sub_36802( ref l_U822, 1 );
        sub_1025( "SBA", "P_HANDLE_BECKER_CRATE_POI: POI has been used", 0 );
    }
    return;
}

void sub_38762()
{
    int Result;

    Result = 0;
    switch (l_U821)
    {
        case 0:
        sub_1025( "SBA", "HANDLE_BECKER_CRATE_CAM: eBeckerCrate = ASS_SETUP", 0 );
        sub_15548( 1, 0, 0, 1 );
        l_U821 = 3;
        break;
        case 3:
        sub_1025( "SBA", "HANDLE_BECKER_CRATE_CAM: eBeckerCrate = ASS_WAITING_TO_PLAY", 0 );
        CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAM_GND_15_F_CAM", 1, -11.90000000, -0.36000000, -1.97000000, 114.25000000, 0, 0 );
        if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "shot_AmmoCrate" )))
        {
            sub_38185( 0 );
            sub_35588( "SHOT_MXNSAM", ref l_U911 );
            FOUND_EXPLORATION_ITEM( "shot_AmmoCrate" );
        }
        else
        {
            sub_28895( ref l_U921, 4000 );
        }
        if (sub_9379())
        {
            CLEAR_PED_TASKS_IMMEDIATELY( sub_1970() );
            SET_PED_VISIBLE( sub_1970(), 0 );
            SET_PED_DEFAULT_AIM_AHEAD( sub_1970() );
        }
        l_U821 = 4;
        break;
        case 4:
        if (((NOT (sub_38418( l_U911 ))) AND (NOT l_U921._fU20)) || (sub_3099( ref l_U921 )))
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
            if (sub_9379())
            {
                SET_PED_VISIBLE( sub_1970(), 1 );
            }
            sub_1025( "SBA", "HANDLE_BECKER_CRATE_CAM: Cam cut done, going to eBeckerCrate = ASS_FINISHED", 0 );
            l_U821 = 5;
        }
        break;
        case 5:
        sub_23309( 1, 1 );
        if (sub_9379())
        {
            CLEAR_PED_DEFAULT_AIM( sub_1970() );
        }
        Result = 1;
        sub_1025( "SBA", "HANDLE_BECKER_CRATE_CAM: going to eBeckerCrate = ASS_INACTIVE", 0 );
        l_U821 = -1;
        break;
    }
    return Result;
}

void sub_39870(int iParam0)
{
    unknown Result;
    unknown uVar4;

    if ((sub_34472( iParam0 )) == 0)
    {
        sub_34538( iParam0 );
    }
    GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref Result, ref uVar4 );
    return Result;
}

void sub_39985(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_34472( iParam0 )) == 0)
    {
        sub_34538( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

void sub_40133(boolean bParam0, boolean bParam1, unknown uParam2)
{
    int Result;

    Result = 0;
    if (IS_STRING_NULL( uParam2 ))
    {
        uParam2 = l_U398;
    }
    switch (l_U349)
    {
        case 1:
        sub_1025( "SBA", "PLAY_HOTEL_MID_03 start", "*****" );
        sub_10520( 262571667, 1 );
        sub_10846( uParam2, 1 );
        sub_15548( 1, 0, 0, 1 );
        if (NOT bParam0)
        {
            sub_40308();
        }
        else
        {
            CUTSCENE_REGISTER_ISEQ( 262571667 );
        }
        sub_40393();
        l_U399 = 0;
        l_U349 = 2;
        break;
        case 2:
        sub_40546();
        if (bParam1)
        {
            START_CUTSCENE_CAPTURE( uParam2 );
        }
        START_SEAMLESS_CUTSCENE();
        CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        CUTSCENE_ENABLE_SKIP( 0 );
        l_U349 = 3;
        break;
        case 3:
        l_U349 = 4;
        break;
        case 4:
        if (HAS_CUTSCENE_FINISHED())
        {
            sub_22432( l_U350, 1 );
            sub_20370( l_U350, 1 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_HOTEL_CP_02", "B_OUT_MID_03_HOTEL_FWD_CAM", 1, 26.81000000, -53.22000000, 14.70000000, 0.00000000, 0, 0 );
            l_U349 = 5;
        }
        else if (l_U220 == 4)
        {
            if (GET_CUTSCENE_TIME_MS() > 20530)
            {
                l_U221 = 4;
            }
        }
        if ((NOT l_U399) AND (GET_CUTSCENE_TIME_MS() > 27850))
        {
            sub_1025( "BSW", "we're now in the 2nd floor", 0 );
            CUTSCENE_ENABLE_SKIP( 1 );
            l_U399 = 1;
        }
        break;
        case 5:
        if (bParam1)
        {
            STOP_CUTSCENE_CAPTURE();
        }
        if (l_U220 == 4)
        {
            l_U221 = 4;
        }
        sub_41422();
        sub_41449();
        if (IS_SCREEN_FADED_OUT())
        {
            if (NOT l_U399)
            {
                sub_1025( "bsw", "forcing load scene after mid_03", "*****" );
                LOAD_SCENE( g_U1020[2] );
            }
        }
        Result = 1;
        l_U349 = 0;
        sub_1025( "SBA", "PLAY_HOTEL_MID_03 end", "*****" );
        break;
        case 0:
        l_U349 = 1;
        break;
    }
    return Result;
}

void sub_40308()
{
    sub_1025( "SBA", "P_SETUP_HOTEL_MID_03", "***" );
    sub_31501( 762297658 );
    return;
}

void sub_40393()
{
    sub_12021( ref l_U368[0], 0.00000000, 0.00000000, 0.00000000, 0, -242176005, 7, 3, 2, 0, 0 );
    sub_12021( ref l_U368[1], 0.00000000, 0.00000000, 0.00000000, 0, -523735065, 7, 3, 2, 0, 0 );
    l_U395[0] = sub_16739( ref l_U368[0] );
    l_U395[1] = sub_16739( ref l_U368[1] );
    return;
}

void sub_40546()
{
    sub_1025( "SBA", "REGISTER_PEDS_HOTEL_MID_03", "***" );
    if (sub_9379())
    {
        sub_19104( ref l_U350, 1, 1 );
        sub_20370( l_U350, 0 );
        sub_31882( 1 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_1970(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( sub_1970(), 0, 0 ), "W_PI_Clt1911_Aa_H", 0 );
        ISEQ_REGISTER_ENTITY( 262571667, "max", sub_1970(), 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( sub_1970(), g_U1020[2], g_U1123[2] );
    }
    if (sub_9394( l_U395[0] ))
    {
        sub_1025( "BSW", "REGISTER_PEDS_HOTEL_MID_03 registering ped0", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U395[0], "H_Crac_Sold_A^1", 1 );
    }
    if (sub_9394( l_U395[1] ))
    {
        sub_1025( "BSW", "REGISTER_PEDS_HOTEL_MID_03 registering ped1", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U395[1], "H_Crac_Sold_A", 1 );
    }
    REGISTER_HIDE_ENTITY_AT_POSITION( -1736621803, 26.41600000, -52.99701000, 12.95312000 );
    REGISTER_HIDE_ENTITY_AT_POSITION( 2070099020, -8.25424000, 11.30124000, -2.60249000 );
    return;
}

void sub_41422()
{
    sub_4649( ref l_U395 );
    return;
}

void sub_41449()
{
    sub_22878( 762297658 );
    return;
}

void sub_41747()
{
    if (sub_35173( ref l_U575, 0 ))
    {
        sub_41772();
    }
    if (sub_35173( ref l_U596, 0 ))
    {
        sub_42136();
    }
    if (sub_35173( ref l_U617, 0 ))
    {
        sub_42245();
    }
    if (sub_35173( ref l_U638, 0 ))
    {
        sub_42394();
    }
    sub_42485( ref l_U985 );
    return;
}

void sub_41772()
{
    int I;

    sub_1025( "CCB", "P_INITIALIZE_IMAGEFX_MID_CP_01", 0 );
    for ( I = 0; I <= 2; I++ )
    {
        l_U985[I]._fU12 = 0;
        l_U985[I]._fU16 = 0;
        l_U985[I]._fU20 = 0;
        l_U985[I]._fU24 = 0;
        l_U985[I]._fU32 = 1;
    }
    l_U985[0]._fU4 = "DOUBLE_TINT_BLUE_FLASH";
    l_U985[0]._fU20 = 2;
    l_U985[0]._fU8 = 4;
    l_U985[0]._fU32 = 0;
    l_U985[1]._fU4 = "DISTORT_INTERLACE_RIGHT";
    l_U985[1]._fU8 = 4;
    l_U985[1]._fU32 = 0;
    l_U985[2]._fU4 = "TRIPLE_IMAGE_BLUR_DOWN_L_DOF";
    l_U985[2]._fU8 = 4;
    l_U985[2]._fU32 = 0;
    l_U217 = 0;
    return;
}

void sub_42136()
{
    sub_1025( "CCB", "P_INITIALIZE_IMAGEFX_MID_CP_01", 0 );
    PLAY_IMAGEFX( "FLASH_YELLOW_RIGHT", 4, 1 );
    return;
}

void sub_42245()
{
    sub_1025( "CCB", "P_INITIALIZE_IMAGEFX_MID_CP_03", 0 );
    PLAY_IMAGEFX( "DOUBLE_TINT_BLUE_FLASH", 4, 1 );
    PLAY_IMAGEFX( "FLICKER_VIBRATE_LIGHTEN", 4, 1 );
    return;
}

void sub_42394()
{
    sub_1025( "CCB", "P_INITIALIZE_IMAGEFX_MID_CP_04", 0 );
    PLAY_IMAGEFX( "FLASH_WHITE", 4, 1 );
    return;
}

void sub_42485(unknown uParam0)
{
    int I;
    int J;

    switch (l_U217)
    {
        case 0:
        sub_1025( "CO", "P_HANDLE_IMAGEFX", 0 );
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (uParam0^)[I]._fU32)
            {
                sub_2843( ref (uParam0^)[I]._fU36, (uParam0^)[I]._fU12, 1, 0 );
                sub_2979( ref (uParam0^)[I]._fU36 );
                if ((uParam0^)[I]._fU20 > 0)
                {
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        l_U217 = 1;
        break;
        case 1:
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (sub_3099( ref (uParam0^)[I]._fU36 ))
            {
                (uParam0^)[I]._fU0 = PLAY_IMAGEFX( (uParam0^)[I]._fU4, (uParam0^)[I]._fU8, (uParam0^)[I]._fU28 );
                if ((uParam0^)[I]._fU16 > 0)
                {
                    sub_2843( ref (uParam0^)[I]._fU72, (uParam0^)[I]._fU16, 1, 0 );
                    sub_2979( ref (uParam0^)[I]._fU72 );
                }
                if ((uParam0^)[I]._fU20 > 0)
                {
                    for ( J = I + 1; J <= (I + (uParam0^)[I]._fU20); J++ )
                    {
                        (uParam0^)[J]._fU0 = PLAY_IMAGEFX( (uParam0^)[J]._fU4, (uParam0^)[J]._fU8, (uParam0^)[I]._fU28 );
                        if ((uParam0^)[J]._fU16 > 0)
                        {
                            sub_2843( ref (uParam0^)[J]._fU72, (uParam0^)[J]._fU16, 1, 0 );
                            sub_2979( ref (uParam0^)[J]._fU72 );
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
            if (sub_3099( ref (uParam0^)[I]._fU72 ))
            {
                STOP_IMAGEFX( (uParam0^)[I]._fU0, (uParam0^)[I]._fU24 );
                (uParam0^)[I]._fU32 = 1;
                if ((uParam0^)[I]._fU20 > 0)
                {
                    if ((uParam0^)[I]._fU20 == 1)
                    {
                        STOP_IMAGEFX( (uParam0^)[I + 1]._fU0, (uParam0^)[I + 1]._fU24 );
                        (uParam0^)[I + 1]._fU32 = 1;
                    }
                    else
                    {
                        for ( J = I + 1; J <= (uParam0^)[I]._fU20; J++ )
                        {
                            STOP_IMAGEFX( (uParam0^)[J]._fU0, (uParam0^)[J]._fU24 );
                            (uParam0^)[J]._fU32 = 1;
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        break;
    }
    return;
}

void sub_43274()
{
    if (NOT l_U934)
    {
        sub_43295();
        l_U934 = 1;
    }
    if (l_U935)
    {
        sub_1025( "SBA", "Creating objects...", "***" );
        sub_34083();
        sub_28347();
        l_U935 = 0;
    }
    if (l_U936)
    {
        sub_1025( "SBA", "Destroying objects...", "***" );
        sub_4525( l_U930 );
        sub_4525( l_U931 );
        sub_4525( l_U932 );
        sub_4525( g_U1787 );
        sub_4525( g_U1788 );
        sub_4525( l_U933 );
        l_U936 = 0;
    }
    return;
}

void sub_43295()
{
    sub_1025( "SBA", "DEBUG_OBJECT_SETUP_WIDGETS", "***" );
    START_WIDGET_GROUP( "Object Positions" );
    ADD_WIDGET_BOOL( "Create Objects", ref l_U935 );
    ADD_WIDGET_BOOL( "Destroy Objects", ref l_U936 );
    sub_43469( ref l_U937, "Garbage Bag Position", 1036831949 );
    sub_43469( ref l_U940, "Garbage Bag Rotation", 1036831949 );
    sub_43469( ref l_U943, "Bodybag1 Position", 1036831949 );
    sub_43469( ref l_U946, "Bodybag1 Rotation", 1036831949 );
    sub_43469( ref l_U949, "Bodybag2 Position", 1036831949 );
    sub_43469( ref l_U952, "Bodybag2 Rotation", 1036831949 );
    sub_43469( ref l_U700, "Gurney1 Position", 1036831949 );
    sub_43469( ref l_U703, "Gurney1 Rotation", 1036831949 );
    sub_43469( ref l_U706, "Gurney2 Position", 1036831949 );
    sub_43469( ref l_U709, "Gurney2 Rotation", 1036831949 );
    sub_43469( ref l_U955, "Furnace Door Position", 1036831949 );
    sub_43469( ref l_U958, "Furnace Door Rotation", 1036831949 );
    STOP_WIDGET_GROUP();
    return;
}

void sub_43469(int iParam0, unknown uParam1, unknown uParam2)
{
    START_WIDGET_GROUP( uParam1 );
    ADD_WIDGET_FLOAT_SLIDER( "x", iParam0 + 0, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "y", iParam0 + 4, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "z", iParam0 + 8, 60536, 5000, uParam2 );
    STOP_WIDGET_GROUP();
    return;
}

void sub_44192()
{
    int I;

    sub_1025( "MW", "P_UNLOAD_ASSETS start", 0 );
    for ( I = 0; I < l_U976; I++ )
    {
        sub_22878( l_U976[I] );
    }
    sub_22878( l_U975 );
    sub_44299( "EXPL_CAM" );
    sub_44299( "LEVEL_S_HOTEL_CP_01" );
    sub_1025( "MW", "P_UNLOAD_ASSETS end", 0 );
    return;
}

void sub_44299(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}


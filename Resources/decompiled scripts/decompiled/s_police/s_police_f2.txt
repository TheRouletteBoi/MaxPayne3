void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    StrCopy( ref l_U39, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U47, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U73 = {0, 0, 0};
    StrCopy( ref l_U76, "DUMMY", 32 );
    l_U84 = 1;
    l_U89 = 0;
    l_U90 = 0;
    l_U91 = 0;
    l_U94 = 0;
    l_U139 = -1;
    l_U140 = {64536, 64536, 64536};
    l_U144 = 0;
    l_U145 = 0;
    l_U146 = 1500;
    l_U165 = 12;
    l_U229 = 0;
    l_U231 = 1;
    l_U232 = 0;
    l_U261 = 1300;
    l_U262 = 1100;
    l_U264 = 23000;
    l_U266 = 850;
    l_U268 = 1300;
    l_U423 = 700;
    l_U477 = 5.00000000;
    l_U478 = 600;
    l_U479 = 0.70000000;
    l_U502 = 319712764;
    l_U682 = 0;
    l_U885 = {506.41280000, -20.61876000, 4.22977400};
    l_U888 = 124.06000000;
    l_U920 = {506.38100000, -20.16735000, 6.13011200};
    l_U923 = {-8.35061100, -0.00000000, 115.67720000};
    l_U957 = {508.29570000, -18.90960000, 6.47015700};
    l_U960 = {-12.19841000, -0.00000100, 132.19790000};
    l_U1050 = 2000;
    l_U1051 = 2000;
    l_U1052 = 7.20008500;
    l_U1053 = -12.23728000;
    l_U1257 = {529.73000000, -17.77000000, 3.91000000};
    l_U1365 = {510.86000000, -2.79000000, 5.00000000};
    l_U1378 = {509.66900000, -3.27200000, 6.40000000};
    l_U1381 = -65.00000000;
    l_U1414 = 0;
    l_U1546 = 0;
    l_U1547 = 0;
     /* WRITESCRIPTLOG */ sub_793( "SP", "Script s_police_f2.sc is starting up...", 0 );
     /* P_F2_POPULATE_SCRIPT_ARRAYS */ sub_911();
    l_U229 = 1;
    while (NOT IS_EXITFLAG_SET())
    {
         /* P_HANDLE_FAILURE */ sub_1555();
        if (l_U232 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_15542();
        }
         /* P_HANDLE_ANIMATED_CAMERA_DEBUG_WIDGET */ sub_73888();
         /* P_HANDLE_SLIDE_SEQUENCE */ sub_74105();
        WAIT( 0 );
    }
     /* P_CLEANUP_F2 */ sub_6872();
     /* P_RELEASE_F2_ASSETS */ sub_74848();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_police_f2" );
     /* WRITESCRIPTLOG */ sub_793( "SP", "Script s_police_f2.sc is terminating...", 0 );
    return;
}

/* WRITESCRIPTLOG */ void sub_793(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_F2_POPULATE_SCRIPT_ARRAYS */ void sub_911()
{
     /* WRITESCRIPTLOG */ sub_793( "GA", "P_F2_POPULATE_SCRIPT_ARRAYS start", 0 );
    l_U212[0] = -430710686;
    l_U212[1] = 981909320;
    l_U212[2] = 1334981523;
    l_U212[3] = 611999076;
    l_U212[4] = -439542268;
    l_U218[0] = -433660968;
    l_U218[1] = -672579747;
    l_U218[2] = 779840636;
    l_U218[3] = 1018300649;
    l_U218[4] = -598520241;
    l_U218[5] = 1405499153;
    l_U225[0] = -862236369;
    l_U225[1] = 434544317;
    l_U225[2] = 1964270085;
    l_U870[0] = -598520241;
    l_U870[1] = -433660968;
    l_U870[2] = -672579747;
    l_U870[3] = 779840636;
    l_U870[4] = 1018300649;
    l_U870[5] = 1405499153;
    l_U1024[0] = "";
    l_U1024[1] = "SPOL_MID10A";
    l_U1024[2] = "SPOL_MID10B";
    l_U1024[3] = "SPOL_MID10C";
    l_U1024[4] = "SPOL_MID10D";
    l_U1024[5] = "SPOL_MID10E";
    l_U405[0] = 434544317;
    l_U405[1] = 1964270085;
    l_U405[2] = 1964270085;
    l_U405[3] = 1964270085;
    l_U405[4] = 1964270085;
    l_U405[5] = 1964270085;
    l_U405[6] = 1964270085;
    l_U405[7] = 1964270085;
     /* WRITESCRIPTLOG */ sub_793( "GA", "P_F2_POPULATE_SCRIPT_ARRAYS end", 0 );
    return;
}

/* P_HANDLE_FAILURE */ void sub_1555()
{
    if (g_U821 == 8)
    {
        switch (l_U232)
        {
            case 0:
            if (( /* RESTARTING_CHECKPOINT */ sub_1757()) || (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
            {
                l_U232 = 1;
                 /* WRITESCRIPTLOG */ sub_793( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
             /* P_HANDLE_PAINKILLER_PICKUP_DIALOGUE */ sub_2276( 1 );
            if ( /* IS_RESTART_ACTIVE */ sub_5367())
            {
                l_U232 = 3;
            }
            else if (( /* F_CHECK_QUIT_RETRY */ sub_5427( 0 )) == 1)
            {
                l_U232 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
            {
                l_U232 = 3;
                 /* WRITESCRIPTLOG */ sub_793( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
             /* WRITESCRIPTLOG */ sub_793( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() ))) AND (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1694() ))))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1694(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1656() ))
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1656(), 0 );
                }
            }
            if ((g_U862[9]._fU40 != 4) AND (g_U862[9]._fU40 != 0))
            {
                 /* WRITESCRIPTLOG */ sub_793( "CR", "Shutting down script for MCE_EVIDENCE_ROOM.", 0 );
                 /* P_RESET_CHECKPOINT_THREAD */ sub_6739( ref g_U862[9] );
                SET_EXITFLAG_FOR_SCRIPT( g_U862[9]._fU32 );
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            AUDIO_MUSIC_STOP_ONESHOT();
            RESET_FORCED_AIM_INTENTION_DIRECTION();
             /* P_CLEANUP_F2 */ sub_6872();
             /* P_FORCE_SCENE_TO_LOAD */ sub_10383( 8 );
            l_U682 = 1;
            l_U232 = 4;
             /* WRITESCRIPTLOG */ sub_793( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
             /* WRITESCRIPTLOG */ sub_793( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_10823( ref l_U176,  /* PLAYER_PED_ID */ sub_1656() );
            CAMERA_CLEAR_POINT_AT_TARGET();
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
            {
                CLEAR_PED_DEFAULT_AIM(  /* PLAYER_PED_ID */ sub_1656() );
            }
            l_U232 = 5;
             /* WRITESCRIPTLOG */ sub_793( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
             /* WRITESCRIPTLOG */ sub_793( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U229 = 1;
            l_U231 = 0;
            l_U232 = 0;
             /* WRITESCRIPTLOG */ sub_793( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

/* PLAYER_PED_ID */ int sub_1656()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_1694() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_1694()
{
    return GET_PLAYER_ID();
}

/* RESTARTING_CHECKPOINT */ int sub_1757()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1656(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1694(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1694(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1656() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1656(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* P_HANDLE_PAINKILLER_PICKUP_DIALOGUE */ void sub_2276(boolean bParam0)
{
    int iVar3;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
    {
        if (NOT (IS_PED_IN_COMBAT(  /* PLAYER_PED_ID */ sub_1656() )))
        {
            if ((NOT l_U156._fU16) AND (NOT l_U156._fU20))
            {
                 /* WRITESCRIPTLOG */ sub_793( "AT", "Starting painkiller dialogue timer.", 0 );
                 /* CREATETIMER */ sub_2440( ref l_U156, 3500, 1, 0 );
                 /* STARTTIMER */ sub_2590( ref l_U156 );
            }
            if ((l_U156._fU16) AND ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_2719()))
            {
                 /* WRITESCRIPTLOG */ sub_793( "AT", "Dialogue detected. Restarting painkiller dialogue timer.", 0 );
                 /* CREATETIMER */ sub_2440( ref l_U156, 3500, 1, 0 );
                 /* STARTTIMER */ sub_2590( ref l_U156 );
            }
            iVar3 = GET_PAYNEKILLER_AMT();
            if (iVar3 > l_U165)
            {
                if (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_2719()))
                {
                    if ((l_U156._fU16) || ( /* ISTIMERDONE */ sub_2956( ref l_U156 )))
                    {
                        if (g_U4303 < 6)
                        {
                            if ((GET_RANDOM_INT_IN_RANGE( 0, 500 )) < 300)
                            {
                                 /* WRITESCRIPTLOG */ sub_793( "GA", "Playing painkiller monologue.", 0 );
                                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_3223( ref l_U166 );
                                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_3334( 0,  /* PLAYER_PED_ID */ sub_1656(), "MAX", ref l_U166, 2, 0 );
                                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_3334( 1,  /* PLAYER_PED_ID */ sub_1656(), "MAX", ref l_U166, 2, 0 );
                                 /* PLAY_SINGLE_SPEECH */ sub_3604( "SPOL_PLFNDPL", ref l_U166, 8, 1 );
                                g_U4303++;
                            }
                            else
                            {
                                 /* WRITESCRIPTLOG */ sub_793( "GA", "Not playing painkiller speech, failed random chance test.", 0 );
                            }
                        }
                        else
                        {
                             /* WRITESCRIPTLOG */ sub_793( "GA", "Not Playing painkiller speech, already played all 6 lines.", 0 );
                        }
                    }
                    else
                    {
                         /* WRITESCRIPTLOG */ sub_793( "GA", "Not playing painkiller speech, not long enough since last dialogue.", 0 );
                    }
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_793( "GA", "Not playing painkiller speech, another speech is currently playing.", 0 );
                }
            }
            l_U165 = iVar3;
        }
        if ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_4852( l_U166 ))
        {
            if (NOT HAS_CUTSCENE_FINISHED())
            {
                 /* WRITESCRIPTLOG */ sub_793( "GA", "Killing painkiller speech for cutscene playing.", 0 );
                 /* KILL_SPEECH */ sub_5154( ref l_U166, 0 );
            }
        }
    }
    if (bParam0)
    {
         /* CREATETIMER */ sub_2440( ref l_U156, 20000, 1, 0 );
         /* STARTTIMER */ sub_2590( ref l_U156 );
    }
    return;
}

/* CREATETIMER */ void sub_2440(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_2590(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* IS_ANY_SPEECH_CURRENTLY_PLAYING */ void sub_2719()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

/* ISTIMERDONE */ int sub_2956(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_3223(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_3334(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_3604(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_3649( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_3649(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_3736( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_3736(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_3788( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_4306( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_3788(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_4306(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* IS_SPEECH_CURRENTLY_PLAYING */ int sub_4852(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_4895( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

/* IS_SCRIPT_SPEECH_STRUCT_VALID */ boolean sub_4895(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

/* KILL_SPEECH */ void sub_5154(int iParam0, unknown uParam1)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_4895( (iParam0^) )))
    {
        ;
    }
    else
    {
        PRINTSTRING( "\n KILL SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
        {
            if (iParam0->_fU8 == g_U6[iParam0->_fU4])
            {
                STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
            }
        }
    }
    return;
}

/* IS_RESTART_ACTIVE */ void sub_5367()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_5427(int iParam0)
{
    iParam0 = 1;
    switch (l_U145)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_5509( ref l_U147 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
            {
                l_U146 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_2440( ref l_U147, l_U146, 1, 1 );
             /* STARTTIMER */ sub_2590( ref l_U147 );
        }
        if ( /* ISTIMERDONE */ sub_2956( ref l_U147 ))
        {
             /* WRITESCRIPTLOG */ sub_793( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1694() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1694(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U145 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U145 = 2;
            }
            else
            {
                l_U145 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_793( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_5992();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_793( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_5992();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_5509(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_5992()
{
     /* WRITESCRIPTLOG */ sub_793( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_6067( ref l_U147 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1694() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1694(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U144 = 0;
    l_U144 = l_U144;
    l_U145 = 0;
    return;
}

/* RESETTIMER */ void sub_6067(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_RESET_CHECKPOINT_THREAD */ void sub_6739(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

/* P_CLEANUP_F2 */ void sub_6872()
{
     /* WRITESCRIPTLOG */ sub_793( "GA", "P_CLEANUP_F2 start", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
    {
        if (NOT (IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1656() )))
        {
            SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1656(), 1 );
        }
    }
    if ((CUTSCENE_NAMED_IS_LOADING( "MID_08_PP_CONCAT" )) || (CUTSCENE_IS_LOADED( "MID_08_PP_CONCAT" )))
    {
         /* WRITESCRIPTLOG */ sub_793( "AT", "Purging MID_08_PP_CONCAT.", 0 );
        CLEAR_NAMED_CUTSCENE( "MID_08_PP_CONCAT" );
    }
    if ((CUTSCENE_NAMED_IS_LOADING( "MID_09_PP_concat" )) || (CUTSCENE_IS_LOADED( "MID_09_PP_concat" )))
    {
         /* WRITESCRIPTLOG */ sub_793( "AT", "Purging MID_09_PP_concat.", 0 );
        CLEAR_NAMED_CUTSCENE( "MID_09_PP_concat" );
    }
    ISEQ_TERMINATE( -104509267 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7245( -104509267, ref g_U2662 );
    ISEQ_TERMINATE( -1064833119 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7245( -1064833119, ref g_U2662 );
    ISEQ_TERMINATE( 1590344366 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7245( 1590344366, ref g_U2662 );
    ISEQ_TERMINATE( 97374916 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7245( 97374916, ref g_U2662 );
    ISEQ_TERMINATE( -1747827025 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7245( -1747827025, ref g_U2662 );
     /* P_ENABLE_POI */ sub_8417( ref l_U783, 0 );
     /* P_ENABLE_POI */ sub_8417( ref l_U1171, 0 );
     /* P_ENABLE_POI */ sub_8417( ref l_U1279, 0 );
     /* CLEANPEDARRAY */ sub_9444( ref l_U390 );
     /* CLEANPED */ sub_9494( l_U437 );
     /* CLEANOBJECT */ sub_9613( l_U269 );
     /* CLEANOBJECT */ sub_9613( l_U270 );
     /* CLEANOBJECT */ sub_9613( l_U271 );
     /* CLEANOBJECT */ sub_9613( l_U869 );
     /* CLEANOBJECT */ sub_9613( l_U1064 );
     /* CLEANPLACEMENTARRAY */ sub_9711( ref l_U272 );
     /* CLEANPLACEMENTARRAY */ sub_9711( ref l_U275 );
     /* CLEANPLACEMENTARRAY */ sub_9711( ref l_U277 );
     /* CLEANPLACEMENTARRAY */ sub_9711( ref l_U280 );
     /* CLEANPLACEMENT */ sub_9766( l_U282 );
     /* P_STOP_SP_CHALLENGES */ sub_9882();
    UI_SET( 0, 2, 1537, "wrldPrecinct", 257, 0 );
    UI_SET( 0, 2, 1537, "PPPrompts", 257, 0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U504._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U1393._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U1425._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U1465._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U1515._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U1065._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U1086._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U525._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U567._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U546._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U741._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U720._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U651._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U588._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U609._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U630._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U480._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U762._fU0 );
     /* WRITESCRIPTLOG */ sub_793( "GA", "P_CLEANUP_F2 end", 0 );
    return;
}

/* P_STREAMREQ_ISEQ_REMOVE */ void sub_7245(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_7383( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a ISEQ asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ int sub_7383(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if ((uParam1^)[I] == iParam0)
            {
                DISPLAYF( "[CCB] ### The THREADID index matches the asset requested for removal: {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
            else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID index is in use and is active: {} ###", 1, 513, (uParam1^)[I] );
                Result = I;
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is in use, but is no longer active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

/* P_ENABLE_POI */ void sub_8417(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
             /* P_ENABLEPOIGLINT */ sub_8476( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_8476( iParam0, 0 );
         /* P_ENABLEPOIINTERACTIONTEXT */ sub_8695( iParam0, 0 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )) == 0)
        {
            TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_1656() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1656(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

/* P_ENABLEPOIGLINT */ void sub_8476(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

/* P_ENABLEPOIINTERACTIONTEXT */ void sub_8695(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_8875( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

/* P_UPDATEINTERACTIONTEXTAVAILABLE */ void sub_8875(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if (( /* F_ISACTIONINGAVAILABLE */ sub_8971( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if (( /* F_ISACTIONINGAVAILABLE */ sub_8971( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

/* F_ISACTIONINGAVAILABLE */ int sub_8971(int iParam0)
{
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1694() )) == 0))
    {
        if (((IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_1656() )) == 1) || (((IS_PED_GETTING_UP(  /* PLAYER_PED_ID */ sub_1656() )) == 1) || (((IS_PED_PICKING_UP_PICKUP(  /* PLAYER_PED_ID */ sub_1656() )) == 1) || (((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_1656() )) == 1) || (((IS_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1656() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1656() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

/* CLEANPEDARRAY */ void sub_9444(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_9494( (uParam0^)[I] );
    }
    return;
}

/* CLEANPED */ void sub_9494(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CLEANOBJECT */ void sub_9613(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* CLEANPLACEMENTARRAY */ void sub_9711(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* CLEANPLACEMENT */ sub_9766( (uParam0^)[I] );
    }
    return;
}

/* CLEANPLACEMENT */ void sub_9766(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

/* P_STOP_SP_CHALLENGES */ void sub_9882()
{
     /* WRITESCRIPTLOG */ sub_793( "CCB", "P_STOP_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_793( "CCB", "Stopping the Precinct_Second_Floor context...", 0 );
    END_CONTEXT( "Precinct_Second_Floor" );
    return;
}

/* P_FORCE_SCENE_TO_LOAD */ void sub_10383(unknown uParam0)
{
    char[64] cVar3;
    unknown uVar19;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
    {
         /* TELEPORTPED */ sub_10459(  /* PLAYER_PED_ID */ sub_1656(), g_U2953[uParam0], g_U3083[uParam0] );
        FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_1656(), 1 );
        if (NOT (IS_STRING_NULL( ref g_U1091[uParam0]._fU0 )))
        {
            StrCopy( ref cVar3, "Loading room: ", 64 );
            ConcatString(ref cVar3, ref g_U1091[uParam0]._fU0, 64);
            PRINTSTRING( ref cVar3 );
            PRINTNL();
            uVar19 = GET_INTERIOR_FROM_NAME( ref g_U1091[uParam0]._fU64, 0 );
            SET_INTERIOR_ACTIVE( uVar19, 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( uVar19, GET_HASH_KEY( ref g_U1091[uParam0]._fU0 ) );
        }
        FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_1656(), 0 );
    }
    return;
}

/* TELEPORTPED */ void sub_10459(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_10823(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_793( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_11042( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_12206( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_12520( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_12999( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_12520( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_12999( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_12520( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_12999( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_13315( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_12999( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_13315( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_12999( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_13887( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_14089( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1656(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_793( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_11042(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_11104( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_11104(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_12206(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_12520(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_12924( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* WRITE_STRING */ void sub_12924(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_12999(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_13315(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_12924( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_13887(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_14089(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_11104( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_14187( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_14187(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_HANDLE_EVENTS */ void sub_15542()
{
    int iVar2;
    int I;

    iVar2 = l_U229;
     /* P_HANDLE_SP_CHALLENGES */ sub_15577();
    switch (l_U229)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_793( "SP", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
         /* P_INITIALIZE_SCRIPT_DATA */ sub_16536();
         /* P_SET_STATIC_DATA */ sub_16938();
         /* P_INITIALIZE_SP_CHALLENGES */ sub_20330();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U229 = 2;
         /* WRITESCRIPTLOG */ sub_793( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_793( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        g_U822[8] = 0;
        if (g_U820 == 8)
        {
             /* WRITESCRIPTLOG */ sub_793( "RJM", "We're starting from the debug menu checkpoint, we want to load the audio bank", 0 );
            l_U682 = 1;
        }
         /* P_REQUEST_F2_PERSISTENT_ASSETS */ sub_21176();
         /* P_REQUEST_F2_NONPERSISTENT_ASSETS */ sub_30224();
        l_U229 = 3;
         /* WRITESCRIPTLOG */ sub_793( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if (( /* F_STREAMREQ_AUDIO_BANK_IS_LOADED */ sub_35327( ref g_U2889 )) AND (( /* F_STREAMREQ_ANIM_DICT_IS_LOADED */ sub_34936( ref g_U2741 )) AND (( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_34522( ref g_U2662 )) AND (( /* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ sub_34120( ref g_U2613 )) AND ( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_33723( ref g_U2468 ))))))
        {
            if ((NOT l_U176._fU0) AND (g_U820 == 8))
            {
                l_U229 = 4;
                 /* WRITESCRIPTLOG */ sub_793( "SP", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
            }
            else
            {
                l_U229 = 6;
                 /* WRITESCRIPTLOG */ sub_793( "SP", "eCheckpointState = CP_PRE_CREATE_F2_PEDS", 0 );
            }
        }
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_793( "GA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        g_U842[8] = 1;
        l_U231 = 0;
        if (NOT ( /* HAS_SAVEFILE_LOADED */ sub_35936( ref l_U176 )))
        {
             /* F_GIVEPEDWEAPON */ sub_13315(  /* PLAYER_PED_ID */ sub_1656(), 1964270085, 200, 0, 0 );
             /* F_GIVEPEDWEAPONTOHOLSTER */ sub_12520(  /* PLAYER_PED_ID */ sub_1656(), -862236369, 0, 200, 0 );
             /* F_GIVEPEDWEAPONTOHOLSTER */ sub_12520(  /* PLAYER_PED_ID */ sub_1656(), -862236369, 1, 200, 0 );
            l_U229 = 5;
             /* WRITESCRIPTLOG */ sub_793( "GA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U229 = 6;
             /* WRITESCRIPTLOG */ sub_793( "GA", "eCheckpointState = CP_PRE_CREATE_F2_PEDS", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1656(), 1 ) )) AND ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1656(), 0 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1656(), 0, 0 ) ))))
            {
                g_U821 = 8;
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_36488( ref l_U176, g_U821,  /* PLAYER_PED_ID */ sub_1656(), g_U2953[8], g_U3083[8], g_U3127[8], g_U3171[8], 1 );
                l_U229 = 6;
                 /* WRITESCRIPTLOG */ sub_793( "GA", "eCheckpointState = CP_PRE_CREATE_F2_PEDS", 0 );
            }
        }
        break;
        case 6:
         /* P_PED_ARRAY_Z_SAFETY_CHECK */ sub_41162( ref l_U390, 2.00000000, 0, 1 );
        if (l_U230)
        {
            l_U283 = 1;
        }
        if ((l_U283 != 4) AND (l_U283 != 0))
        {
             /* P_F2_CREATE_OFFICE_ENEMIES */ sub_41397();
        }
        if (l_U283 == 4)
        {
            l_U229 = 7;
             /* WRITESCRIPTLOG */ sub_793( "GA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 7:
         /* P_PED_ARRAY_Z_SAFETY_CHECK */ sub_41162( ref l_U390, 2.00000000, 0, 1 );
        if (l_U230)
        {
            g_U822[8] = 1;
        }
        if (g_U842[8] == 1)
        {
            if (l_U231)
            {
                if (CUTSCENE_IS_LOADED( "MID_08_PP_CONCAT" ))
                {
                     /* P_F2_CREATE_PLACEMENTS */ sub_45152();
                     /* P_F2_RESET_DOORS */ sub_45662();
                     /* P_F2_CREATE_LAPTOP_DISPLAY */ sub_46217();
                     /* CREATE_DA_SILVA_POI */ sub_46779();
                    l_U229 = 8;
                     /* WRITESCRIPTLOG */ sub_793( "GA", "eCheckpointState = CP_HANDLE_MID_08_PP", 0 );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_793( "GA", "Waiting for midscene MID_08_PP_CONCAT to load.", 0 );
                }
            }
            else
            {
                 /* P_F2_CREATE_PLACEMENTS */ sub_45152();
                 /* P_F2_RESET_DOORS */ sub_45662();
                 /* P_F2_CREATE_LAPTOP_DISPLAY */ sub_46217();
                 /* CREATE_DA_SILVA_POI */ sub_46779();
                l_U229 = 8;
                 /* WRITESCRIPTLOG */ sub_793( "GA", "eCheckpointState = CP_HANDLE_MID_08_PP", 0 );
            }
        }
        break;
        case 8:
         /* P_PED_ARRAY_Z_SAFETY_CHECK */ sub_41162( ref l_U390, 2.00000000, 0, 1 );
        if (l_U230)
        {
             /* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ sub_51078( ref l_U233, "MID_08_PP_CONCAT", 47219, 47272, 48091, 48750, 49038, 50367, 250, 0 );
             /* CUTSYS_SETCUTSCENELOADINTERIORONSKIP */ sub_51628( ref l_U233, ref g_U1091[8]._fU64, ref g_U1091[8]._fU0 );
            if (l_U231)
            {
                l_U233._fU4 = 2;
            }
            else
            {
                l_U233._fU4 = 7;
            }
        }
        if ( /* CUTSYS_HANDLECUTSCENE */ sub_51760( ref l_U233 ))
        {
             /* STARTTIMER */ sub_2590( ref l_U414 );
            l_U682 = 1;
             /* P_STREAMREQ_AUDIO_BANK_INSERT */ sub_28274( "SCRIPT_MISSION\S_POLICE_CUBICLES", ref g_U2889 );
            RESET_FORCED_AIM_INTENTION_DIRECTION();
            RESET_FORCED_FORWARD_DIRECTION();
            AUD_SET_IS_POWER_ON( 0 );
            if (g_U821 != 8)
            {
                g_U821 = 8;
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_36488( ref l_U176, g_U821,  /* PLAYER_PED_ID */ sub_1656(), g_U2953[8], g_U3083[8], g_U3127[8], g_U3171[8], 1 );
            }
             /* P_START_SP_CHALLENGES */ sub_54115();
             /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_24273( l_U502, ref g_U2613 );
            l_U229 = 9;
             /* WRITESCRIPTLOG */ sub_793( "GA", "eCheckpointState = CP_GAMEPLAY_F2_OFFICE_COMBAT", 0 );
        }
        break;
        case 9:
         /* HANDLE_DA_SILVA_POI */ sub_54370();
         /* F_HANDLE_POI */ sub_54406( ref l_U1279 );
        if (( /* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ sub_56228( ref l_U1279 )) == 1)
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_3223( ref l_U1536 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_3334( 0,  /* PLAYER_PED_ID */ sub_1656(), "MAX", ref l_U1536, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_3334( 1,  /* PLAYER_PED_ID */ sub_1656(), "MAX", ref l_U1536, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_3604( "EXPLORE_ITEM", ref l_U1536, 8, 1 );
        }
         /* P_HANDLE_OFFICE_DOORS */ sub_57940();
        if (l_U230)
        {
            for ( I = 1; I <= 7; I++ )
            {
                 /* P_DEACTIVATEPED */ sub_44756( l_U390[I] );
            }
        }
        if (NOT l_U719)
        {
            if (NOT HAS_CUTSCENE_LOADED())
            {
                 /* WRITESCRIPTLOG */ sub_793( "GA", "Requesting MID_09_PP midscene", 0 );
                 /* LOADSEAMLESSCUTSCENE */ sub_33221( "MID_09_PP_concat", 0 );
                l_U719 = 1;
            }
        }
        if ( /* ISTIMERDONE */ sub_2956( ref l_U414 ))
        {
             /* P_F2_FRONT_DESK_ENEMY_MOVE */ sub_58337();
        }
        if (IS_PED_DEAD( l_U390[0] ))
        {
            if ((IS_SPHERE_VISIBLE( 526.51000000, 9.00000000, 4.98000000, 0.25000000, 1 )) AND ((NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_2719())) AND (( /* F_ISPLAYERINTRIGGERBOX */ sub_58826( l_U1515 )) AND (NOT l_U1414))))
            {
                l_U1414 = 1;
                 /* WRITESCRIPTLOG */ sub_793( "RJM", "Looking at door, play V.O.", 0 );
                 /* P_SPEECH_PLAY_MONOLOGUE */ sub_58989( "SPOL_DWDL2N", ref l_U1383 );
            }
        }
         /* P_PED_ARRAY_Z_SAFETY_CHECK */ sub_41162( ref l_U390, 2.00000000, 0, 1 );
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_59115( ref l_U504, 0 ))
        {
             /* P_F2_SETUP_OFFICE_ENEMIES */ sub_59250();
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_59115( ref l_U525, 0 ))
        {
             /* P_F2_START_OFFICE_VIGS */ sub_59873();
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_59115( ref l_U567, 0 ))
        {
             /* STARTTIMER */ sub_2590( ref l_U683 );
             /* WRITESCRIPTLOG */ sub_793( "GA", "Forcing Music PRECINCT_FINAL mood PRECINCT_01_1_2_4", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_1_2_4", "", 0, 1000, -1, -1082130432, 0 );
            AUDIO_MUSIC_SET_MOOD( "PRECINCT_01_1_2_4_6", "PRECINCT_01_1_2_4_6", 0, 8000, -1 );
             /* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ sub_21277( ref l_U870, ref g_U2468 );
        }
        if (NOT l_U1129)
        {
            if ( /* SHOULD_OFFICE_COMBAT_START */ sub_60674())
            {
                 /* P_F2_START_OFFICE_COMBAT */ sub_62111();
                l_U1129 = 1;
            }
        }
        else if ((NOT l_U677) || ((NOT l_U676) || (NOT l_U675)))
        {
             /* UPDATE_REINFORCEMENTS_TASKING */ sub_62398();
        }
        if ( /* ISTIMERDONE */ sub_2956( ref l_U683 ))
        {
             /* WRITESCRIPTLOG */ sub_793( "GA", "Playing music one shot PRECINCT_ONESHOT_3", 0 );
            AUDIO_MUSIC_PLAY_ONESHOT();
        }
        if (NOT l_U674)
        {
            if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_62551( ref l_U390 )) <= 4)
            {
                 /* WRITESCRIPTLOG */ sub_793( "GA", "Forcing Music PRECINCT_FINAL mood PRECINCT_01_2_3_4", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_2_3_4", "", 0, 4000, -1, -1082130432, 0 );
                l_U674 = 1;
            }
        }
        if ((( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_62551( ref l_U390 )) <= 4) AND (NOT l_U678))
        {
             /* WRITESCRIPTLOG */ sub_793( "RJM", "Increasing the firing token", 0 );
             /* P_SETUP_AI_GROUP */ sub_41537( ref l_U399, 1.00000000, 0 );
            l_U678 = 1;
        }
        if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_62551( ref l_U390 )) == 0)
        {
             /* CREATE_BIGASS */ sub_63419();
             /* P_CREATE_AND_START_TIMER */ sub_57368( ref l_U439, 1000 );
             /* WRITESCRIPTLOG */ sub_793( "AT", "eCheckpointState = CP_WAIT_TO_START_BIGASS", 0 );
            l_U229 = 10;
        }
        break;
        case 10:
         /* HANDLE_DA_SILVA_POI */ sub_54370();
         /* F_HANDLE_POI */ sub_54406( ref l_U1279 );
        if (( /* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ sub_56228( ref l_U1279 )) == 1)
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_3223( ref l_U1536 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_3334( 0,  /* PLAYER_PED_ID */ sub_1656(), "MAX", ref l_U1536, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_3334( 1,  /* PLAYER_PED_ID */ sub_1656(), "MAX", ref l_U1536, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_3604( "EXPLORE_ITEM", ref l_U1536, 8, 1 );
        }
        if ( /* ISTIMERDONE */ sub_2956( ref l_U439 ))
        {
             /* WRITESCRIPTLOG */ sub_793( "AT", "eCheckpointState = CP_BIGASS_INTRO", 0 );
            l_U229 = 11;
        }
        break;
        case 11:
        if ( /* F_IS_BIGASS_INTRO_COMPLETED */ sub_64605())
        {
             /* WRITESCRIPTLOG */ sub_793( "AT", "eCheckpointState = CP_KILL_BIGASS", 0 );
            l_U229 = 12;
        }
        break;
        case 12:
         /* HANDLE_DA_SILVA_POI */ sub_54370();
         /* F_HANDLE_POI */ sub_54406( ref l_U1279 );
        if (( /* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ sub_56228( ref l_U1279 )) == 1)
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_3223( ref l_U1536 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_3334( 0,  /* PLAYER_PED_ID */ sub_1656(), "MAX", ref l_U1536, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_3334( 1,  /* PLAYER_PED_ID */ sub_1656(), "MAX", ref l_U1536, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_3604( "EXPLORE_ITEM", ref l_U1536, 8, 1 );
        }
        if ( /* ISTIMERDONE */ sub_2956( ref l_U448 ))
        {
            SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U437, 0, 0 ), 0 );
        }
        if (NOT (IS_PED_DEAD( l_U437 )))
        {
            if ((( /* GET_DISTANCE_BETWEEN_PEDS */ sub_67288( l_U437,  /* PLAYER_PED_ID */ sub_1656(), 0 )) > l_U477) AND (l_U476))
            {
                OVERRIDE_PED_FIRING_PATTERN_CUSTOM( l_U437, 0 );
                SET_PED_CUSTOM_FIRING_PATTERN_TIME_BETWEEN_BURSTS( l_U437, 0.75000000, 1.25000000 );
                SET_PED_CUSTOM_FIRING_PATTERN_SHOTS_PER_BURST( l_U437, 9, 12 );
                OVERRIDE_PED_FIRING_PATTERN_CUSTOM( l_U437, 1 );
                l_U476 = 0;
            }
            else if ((( /* GET_DISTANCE_BETWEEN_PEDS */ sub_67288( l_U437,  /* PLAYER_PED_ID */ sub_1656(), 0 )) <= l_U477) AND (NOT l_U476))
            {
                OVERRIDE_PED_FIRING_PATTERN_CUSTOM( l_U437, 0 );
                SET_PED_CUSTOM_FIRING_PATTERN_TIME_BETWEEN_BURSTS( l_U437, 0.00000000, 0.00000000 );
                SET_PED_CUSTOM_FIRING_PATTERN_SHOTS_PER_BURST( l_U437, -1, -1 );
                OVERRIDE_PED_FIRING_PATTERN_CUSTOM( l_U437, 1 );
                l_U476 = 1;
            }
        }
        if (IS_PED_DEAD( l_U437 ))
        {
            if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (NOT (IS_BULLET_CAMERA_RUNNING( 0 ))))
            {
                if (NOT l_U673)
                {
                     /* WRITESCRIPTLOG */ sub_793( "GA", "Forcing Music PRECINCT_FINAL mood PRECINCT_01_1 fade in 8 seconds", 0 );
                    AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_2", "", 0, 8000, -1, -1082130432, 0 );
                    l_U673 = 1;
                }
                 /* P_SETDOORLOCKED */ sub_45999( ref g_U3918, 1 );
                 /* P_SETDOORLOCKED */ sub_45999( ref g_U3925, 1 );
                 /* P_SET_POI_AVAILABLE */ sub_20157( ref l_U1171, 1 );
                 /* P_SET_POI_AVAILABLE */ sub_20157( ref l_U1279, 1 );
                 /* STARTTIMER */ sub_2590( ref l_U1505 );
                l_U229 = 13;
                 /* WRITESCRIPTLOG */ sub_793( "AT", "eCheckpointState = CP_POST_OFFICE_COMBAT", 0 );
            }
        }
        break;
        case 13:
         /* HANDLE_DA_SILVA_POI */ sub_54370();
         /* P_HANDLE_PAINKILLER_PICKUP_DIALOGUE */ sub_2276( 0 );
        if (l_U230)
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        }
        if (( /* F_CAN_AMBIENT_SPEECH_PLAY */ sub_67975()) AND (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_2719())))
        {
            if ( /* ISTIMERDONE */ sub_2956( ref l_U1505 ))
            {
                 /* P_SPEECH_PLAY_MONOLOGUE */ sub_58989( "SPOL_MXALDED", ref l_U1495 );
                 /* STARTTIMER */ sub_2590( ref l_U1446 );
            }
            if ( /* F_ISPLAYERINTRIGGERBOX */ sub_58826( l_U1425 ))
            {
                if ( /* ISTIMERDONE */ sub_2956( ref l_U1446 ))
                {
                     /* P_SPEECH_PLAY_MONOLOGUE */ sub_58989( "SPOL_DWDL3N", ref l_U1415 );
                }
            }
        }
        if ( /* F_HANDLE_POI */ sub_54406( ref l_U1279 ))
        {
             /* WRITESCRIPTLOG */ sub_793( "AT", "eCheckpointState = CP_AUP_EXPLORATION_ITEM", 0 );
            l_U229 = 17;
            l_U1382 = 13;
            break;
        }
        if (NOT g_U862[9]._fU36)
        {
            g_U862[9]._fU36 = 1;
        }
        if ( /* CUTSYS_HANDLETRIGGERTYPEDOOR_NOHOLSTERING */ sub_68282( ref l_U720, ref l_U741, 0, 0 ))
        {
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
            {
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1656(), 0 );
                SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1694(), 1 );
            }
             /* KILL_SPEECH */ sub_5154( ref l_U1495, 0 );
             /* KILL_SPEECH */ sub_5154( ref l_U1415, 0 );
             /* KILL_SPEECH */ sub_5154( ref l_U1260, 0 );
             /* P_SETDOORLOCKED */ sub_45999( ref g_U3918, 0 );
             /* P_SETDOORLOCKED */ sub_45999( ref g_U3925, 0 );
             /* P_SETDOORLATCH */ sub_68596( ref g_U3918, 1 );
             /* P_SETDOORLATCH */ sub_68596( ref g_U3925, 1 );
            l_U229 = 14;
             /* WRITESCRIPTLOG */ sub_793( "AT", "eCheckpointState = CP_HANDLE_MID_09_PP", 0 );
        }
        break;
        case 14:
        if (l_U230)
        {
             /* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ sub_51078( ref l_U692, "MID_09_PP_concat", 47219, 68783, 69140, 69515, 69564, 69658, 250, 0 );
             /* CUTSYS_SETCUTSCENELOADINTERIORONSKIP */ sub_51628( ref l_U692, ref g_U1091[9]._fU64, "f3_prsntatn" );
             /* P_F2_CREATE_PROJECTOR_SLIDE */ sub_69810( l_U870[l_U884] );
            l_U692._fU4 = 2;
        }
        if ( /* CUTSYS_HANDLECUTSCENE */ sub_51760( ref l_U692 ))
        {
            RESET_FORCED_AIM_INTENTION_DIRECTION();
            RESET_FORCED_FORWARD_DIRECTION();
            l_U229 = 15;
             /* WRITESCRIPTLOG */ sub_793( "GA", "eCheckpointState = CP_GAMEPLAY_F2_PRESENTATION_ROOM", 0 );
        }
        break;
        case 15:
        if (l_U230)
        {
             /* P_ENABLE_POI */ sub_8417( ref l_U783, 1 );
            if (NOT l_U1514)
            {
                 /* CREATETIMER */ sub_2440( ref l_U1486, 8000, 1, 0 );
                 /* STARTTIMER */ sub_2590( ref l_U1486 );
            }
        }
         /* P_HANDLE_PAINKILLER_PICKUP_DIALOGUE */ sub_2276( 0 );
        if (( /* F_CAN_AMBIENT_SPEECH_PLAY */ sub_67975()) AND ((NOT l_U1514) AND (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_2719()))))
        {
            if ( /* ISTIMERDONE */ sub_2956( ref l_U1486 ))
            {
                 /* P_SPEECH_PLAY_MONOLOGUE */ sub_58989( "SPOL_DWDL4N", ref l_U1455 );
                l_U1514 = 1;
            }
        }
         /* HANDLE_DA_SILVA_POI */ sub_54370();
        if ( /* F_HANDLE_POI */ sub_54406( ref l_U1279 ))
        {
             /* WRITESCRIPTLOG */ sub_793( "AT", "eCheckpointState = CP_AUP_EXPLORATION_ITEM", 0 );
            l_U229 = 17;
            l_U1382 = 15;
            break;
        }
        if (NOT ( /* F_IS_PROJECTOR_DAMAGED */ sub_70370()))
        {
            if ( /* F_HANDLE_POI */ sub_54406( ref l_U783 ))
            {
                l_U229 = 16;
                 /* WRITESCRIPTLOG */ sub_793( "GA", "eCheckpointState = CP_HANDLE_MID_10_PP", 0 );
            }
        }
        if ( /* F_ISPLAYERINTRIGGERBOX */ sub_58826( l_U1065 ))
        {
             /* P_CLOSEDOOR */ sub_45732( ref g_U3939, 0 );
             /* P_CLOSEDOOR */ sub_45732( ref g_U3932, 0 );
             /* CLEANPEDARRAY */ sub_9444( ref l_U390 );
             /* CLEANPED */ sub_9494( l_U437 );
             /* P_SETDOORLOCKED */ sub_45999( ref g_U3918, 1 );
             /* P_SETDOORLOCKED */ sub_45999( ref g_U3925, 1 );
            g_U842[9] = 1;
            l_U229 = 18;
             /* WRITESCRIPTLOG */ sub_793( "GA", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 16:
        if (l_U230)
        {
            l_U1063 = 1;
        }
         /* P_HANDLE_MID_10_PP */ sub_70742();
        break;
        case 17:
        if (l_U230)
        {
             /* NIS_PRE_SETUP */ sub_52651( 1, 0, 0, 1 );
            CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAM_GND_15_F_CAM", 1, l_U1378, l_U1381, 0, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( 7.08559000, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( -7.46497800, 1065353216, 0 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1656() );
                RESET_PLAYER_INPUT_GAIT( 0 );
                 /* P_RESET_MAX_ACTION_TREE */ sub_72509();
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1656(), 0 );
            }
             /* TELEPORTPED */ sub_10459(  /* PLAYER_PED_ID */ sub_1656(), 510.36270000, -2.80281500, 3.90035300, 275.77190000 );
            if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "spol_Folder" )))
            {
                 /* KILL_ANY_MISSION_SPEECH */ sub_56938( 0 );
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_3223( ref l_U1368 );
                 /* P_SPEECH_PLAY_MONOLOGUE */ sub_58989( "SPOL_PLAUPN", ref l_U1368 );
                FOUND_EXPLORATION_ITEM( "spol_Folder" );
            }
        }
        if ((NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_4852( l_U1368 ))) AND ((NOT IS_ANIMATED_CAMERA_PLAYING()) || (CAMERA_ANIMATED_CURRENT_TIME() > 3000)))
        {
             /* WRITESCRIPTLOG */ sub_793( "AT", "AUP exploration item sequence complete!", 0 );
            CAMERA_ANIMATED_STOP( 0, 0 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1656(), 1 );
            }
             /* NIS_POST_SETUP */ sub_53575( 1, 1 );
             /* P_ENABLE_POI */ sub_8417( ref l_U1279, 1 );
            l_U229 = l_U1382;
        }
        break;
        case 18:
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U229 = 0;
         /* WRITESCRIPTLOG */ sub_793( "SP", "eCheckpointState = CP_IDLE", 0 );
        break;
    }
    if (l_U229 != iVar2)
    {
        l_U230 = 1;
    }
    else
    {
        l_U230 = 0;
    }
    return;
}

/* P_HANDLE_SP_CHALLENGES */ void sub_15577()
{
    switch (l_U1107)
    {
        case 0:
         /* P_CREATETRIGGERBOX */ sub_15723( ref l_U1108, "TRIGGER_TRACK_STOPPING", 531.05000000, 6.69000000, 3.90000000, 5.33000000, 3.98000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
         /* WRITESCRIPTLOG */ sub_793( "CCB", "eTrackStopping - STATE_CHALLENGE_IDLE", 0 );
        l_U1107 = 1;
        break;
        case 1:
        if (l_U229 >= 9)
        {
            if ( /* F_ISPEDINTRIGGERBOX */ sub_15914( l_U390[0], l_U1108 ))
            {
                 /* WRITESCRIPTLOG */ sub_793( "CCB", "The pi_F2_OfficeEnemy_0 ped made it past the copy machine...", 0 );
                 /* WRITESCRIPTLOG */ sub_793( "CCB", "eTrackStopping - STATE_CHALLENGE_COMPLETE", 0 );
                l_U1107 = 2;
            }
            else if (IS_PED_DEAD( l_U390[0] ))
            {
                 /* WRITESCRIPTLOG */ sub_793( "CCB", "The player killed the pi_F2_OfficeEnemy_0 ped...", 0 );
                SCRIPT_VAR_HASH_SET_INT( -694125524, 1 );
                 /* WRITESCRIPTLOG */ sub_793( "CCB", "eTrackStopping - STATE_CHALLENGE_COMPLETE", 0 );
                l_U1107 = 2;
            }
        }
        break;
        case 2: break;
    }
    return;
}

/* P_CREATETRIGGERBOX */ void sub_15723(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* F_ISPEDINTRIGGERBOX */ int sub_15914(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_16536()
{
    int I;

     /* WRITESCRIPTLOG */ sub_793( "GA", "P_INITIALIZE_SCRIPT_DATA start", 0 );
    l_U230 = 1;
    l_U263 = 0;
    l_U265 = 0;
    l_U267 = 0;
    l_U260 = 0;
    l_U283 = 0;
    l_U284 = 0;
     /* CREATETIMER */ sub_2440( ref l_U414, l_U423, 1, 0 );
     /* CREATETIMER */ sub_2440( ref l_U683, 4000, 1, 0 );
    l_U673 = 0;
    l_U672 = 0;
    l_U719 = 0;
    l_U884 = 0;
    l_U1031 = 0;
    l_U1063 = 0;
    for ( I = 0; I < l_U877; I++ )
    {
        l_U877[I] = 0;
    }
    l_U1129 = 0;
    l_U674 = 0;
    l_U675 = 0;
    l_U676 = 0;
    l_U677 = 0;
    l_U678 = 0;
    l_U501 = 0;
    l_U679 = 0;
    l_U680 = 0;
    l_U681 = 0;
    l_U475 = 0;
    l_U1139 = -1;
    l_U438 = 0;
     /* CREATETIMER */ sub_2440( ref l_U1505, 2000, 1, 0 );
     /* CREATETIMER */ sub_2440( ref l_U1446, 30000, 1, 0 );
     /* CREATETIMER */ sub_2440( ref l_U1486, 8000, 1, 0 );
    l_U1514 = 0;
     /* WRITESCRIPTLOG */ sub_793( "GA", "P_INITIALIZE_SCRIPT_DATA end", 0 );
    return;
}

/* P_SET_STATIC_DATA */ void sub_16938()
{
     /* WRITESCRIPTLOG */ sub_793( "GA", "P_SET_STATIC_DATA start", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_17043( ref l_U285[0], 533.56000000, 17.97800000, 3.90035000, -180.00000000, -1518349142, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_17043( ref l_U285[1], 526.77490000, -9.70229500, 3.90035300, 135.00000000, -219476404, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_17043( ref l_U285[2], 532.36000000, -9.58000000, 3.90000000, -178.45000000, 1002182957, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_17043( ref l_U285[4], 517.38940000, -7.29102800, 3.90035400, 0.00000000, -1207144016, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_17043( ref l_U285[5], 522.93000000, -4.88000000, 3.90000000, -179.30000000, -1443842287, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_17043( ref l_U285[3], 506.72000000, -12.11000000, 3.91000000, -90.53000000, -2053255244, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_17043( ref l_U285[6], 510.21090000, -2.41358500, 3.90035300, 0.00000000, 1906119767, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_17043( ref l_U285[7], 536.90000000, -13.10000000, 3.91000000, 90.79000000, -637259526, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_17043( ref l_U424, 517.52000000, -18.25000000, 3.90000000, 0, 1887089642, 7, 3, 2, 0, 0 );
     /* P_CREATETRIGGERBOX */ sub_15723( ref l_U504, "tb_F2_SetupCombat", 529.52000000, 8.99000000, 3.90000000, 8.91000000, 3.45000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15723( ref l_U1393, "tb_F2_PlayerInReception", 526.56000000, 16.34000000, 3.90000000, 27.93000000, 14.48000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15723( ref l_U1425, "tb_F2_PlayerInOffices", 527.71000000, -4.14000000, 3.90000000, 26.00000000, 24.30000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15723( ref l_U1465, "tb_F2_PlayerInBriefingRoom", 511.57000000, -21.55000000, 3.90000000, 15.26000000, 8.82000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15723( ref l_U1515, "tb_F2_SpeakWaitInReception", 526.45000000, 10.72000000, 3.90000000, 3.00000000, 3.45000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15723( ref l_U1065, "tb_F2_LeftBriefingRoom", 504.34000000, -30.46000000, 3.90000000, 5.00000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15723( ref l_U1086, "tb_F2_WentBackInBriefingRoom", 505.56000000, -24.52000000, 3.90000000, 3.00000000, 2.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15723( ref l_U525, "tb_F2_StartVigs", 526.46000000, 7.33000000, 3.90000000, 3.00000000, 3.90000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15723( ref l_U567, "tb_F2_StartCue6_4B", 526.46000000, 6.60000000, 3.90000000, 3.00000000, 3.90000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15723( ref l_U546, "tb_F2_StartCombat", 528.02000000, 4.50000000, 3.90000000, 12.00000000, 3.90000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15723( ref l_U741, "tb_F2_TriggerMid09_Inner", 517.51000000, -16.21000000, 3.91000000, 2.47000000, 1.75000000, 3.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15723( ref l_U720, "tb_F2_TriggerMid09_Outer", 517.53000000, -15.91000000, 3.91000000, 2.92000000, 2.16000000, 3.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15723( ref l_U651, "tb_F2_BriefingRoomCloseCheck", 518.12000000, -14.48000000, 3.91000000, 4.00000000, 3.00000000, 3.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15723( ref l_U588, "tb_F2_TaskReinforcement1", 513.95000000, -4.64000000, 3.90000000, 6.00000000, 8.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15723( ref l_U609, "tb_F2_TaskReinforcement2", 537.07000000, -8.12000000, 3.90000000, 6.00000000, 15.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15723( ref l_U630, "tb_F2_TaskReinforcement3", 512.66000000, -9.28000000, 3.90000000, 6.00000000, 8.00000000, 3.00000000, 0.00000000, 0.00000000, -90.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15723( ref l_U480, "tb_F2_MaxTooCloseToBigass", 519.73000000, -14.16000000, 3.91000000, 8.00000000, 6.00000000, 3.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15723( ref l_U762, "tb_F2_Mid09_CleanDeadBodies", 517.78000000, -15.54000000, 3.90000000, 3.32000000, 5.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATEPOISTRUCTCOORD */ sub_19054( ref l_U783, 2, 506.45000000, -19.45000000, 5.75000000, 506.45000000, -19.45000000, 5.45000000, 506.45000000, -19.45000000, 5.45000000, 1.50000000, 3.00000000, 0, 0 );
     /* P_SET_INTERACTIVE_TEXT */ sub_19815( ref l_U783, 30, "POI_POL_PROJ" );
     /* P_SET_POI_FORCE_WALK */ sub_20025( ref l_U783, 0 );
     /* P_CREATEPOISTRUCTCOORD */ sub_19054( ref l_U1279, 2, l_U1365, l_U1365, l_U1365, 1.50000000, 3.00000000, 1, 0 );
     /* P_SET_INTERACTIVE_TEXT */ sub_19815( ref l_U1279, 30, "POI_POL_FOLDER" );
     /* P_SET_POI_FORCE_WALK */ sub_20025( ref l_U1279, 0 );
     /* P_SET_POI_AVAILABLE */ sub_20157( ref l_U1279, 0 );
     /* P_SET_POI_REUSABLE */ sub_20239( ref l_U1279, 1 );
     /* WRITESCRIPTLOG */ sub_793( "GA", "P_SET_STATIC_DATA end", 0 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_17043(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATEPOISTRUCTCOORD */ void sub_19054(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
     /* P_CREATEBLANKPOISTRUCT */ sub_19094( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
     /* P_CREATEPOIGLINT */ sub_19487( iParam0 );
    return;
}

/* P_CREATEBLANKPOISTRUCT */ void sub_19094(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

/* P_CREATEPOIGLINT */ void sub_19487(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
     /* P_INITPOIGLINT */ sub_19585( iParam0 );
    return;
}

/* P_INITPOIGLINT */ void sub_19585(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                 /* P_ENABLEPOIGLINT */ sub_8476( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                 /* P_ENABLEPOIGLINT */ sub_8476( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                 /* P_ENABLEPOIGLINT */ sub_8476( iParam0, 1 );
            }
            else
            {
                 /* P_ENABLEPOIGLINT */ sub_8476( iParam0, 0 );
            };;;
        }
        else
        {
             /* P_ENABLEPOIGLINT */ sub_8476( iParam0, 0 );
        }
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_8476( iParam0, 0 );
    }
    return;
}

/* P_SET_INTERACTIVE_TEXT */ void sub_19815(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
     /* P_INITINTERACTIVETEXT */ sub_19871( iParam0 );
    return;
}

/* P_INITINTERACTIVETEXT */ void sub_19871(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

/* P_SET_POI_FORCE_WALK */ void sub_20025(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

/* P_SET_POI_AVAILABLE */ void sub_20157(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
     /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_8875( iParam0 );
    return;
}

/* P_SET_POI_REUSABLE */ void sub_20239(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

/* P_INITIALIZE_SP_CHALLENGES */ void sub_20330()
{
     /* WRITESCRIPTLOG */ sub_793( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U1107 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( -694125524 )))
    {
         /* WRITESCRIPTLOG */ sub_793( "CCB", "Creating the TrackStopping script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( -694125524 );
        DISPLAYF( "[CCB] ### The current TrackStopping value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( -694125524 ) );
        if (SCRIPT_VAR_HASH_EXISTS( -694125524 ))
        {
             /* WRITESCRIPTLOG */ sub_793( "CCB", "The TrackStopping script variable was successfully created...", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_793( "CCB", "The TrackStopping script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_793( "CCB", "The TrackStopping script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( -694125524, 0 );
        DISPLAYF( "[CCB] ### The current TrackStopping value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( -694125524 ) );
    }
    return;
}

/* P_REQUEST_F2_PERSISTENT_ASSETS */ void sub_21176()
{
     /* WRITESCRIPTLOG */ sub_793( "GA", "P_REQUEST_F2_PERSISTENT_ASSETS start", 0 );
     /* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ sub_21277( ref l_U212, ref g_U2468 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT_ARRAY */ sub_24199( ref l_U225, ref g_U2613 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_26237( "EXPL_CAM", ref g_U2741 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_26237( "LEVEL_S_POLICE_CP_08", ref g_U2741 );
    if (l_U682)
    {
         /* WRITESCRIPTLOG */ sub_793( "RJM", "P_REQUEST_F2_PERSISTENT_ASSETS - We should load the audio bank now", 0 );
         /* P_STREAMREQ_AUDIO_BANK_INSERT */ sub_28274( "SCRIPT_MISSION\S_POLICE_CUBICLES", ref g_U2889 );
    }
     /* WRITESCRIPTLOG */ sub_793( "GA", "P_REQUEST_F2_PERSISTENT_ASSETS end", 0 );
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ void sub_21277(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_21350( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT */ void sub_21350(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 =  /* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ sub_21417( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar4 );
            PRINTNL();
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_21675( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Inserting MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ int sub_21417(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_21675( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is loading: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_21675( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                     /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_21675( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_23206( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being removed: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_21675( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_21675( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ void sub_21675(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_21736( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ int sub_21736(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID is active: {} ###", 1, 513, (uParam1^)[I] );
                if ((uParam1^)[I] == iParam0)
                {
                    DISPLAYF( "The THREADID was already requested by this thread!!!", 0 );
                    DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                    (uParam1^)[I] = nil;
                    Result = I;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The THREADID index was requested by another thread!!! {} ###", 1, 513, I );
                }
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is NOT active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

/* P_STREAMREQ_THREADID_RESET */ void sub_23206(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT_ARRAY */ void sub_24199(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_24273( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT */ void sub_24273(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ sub_24327( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_24588( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ int sub_24327(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_24588( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is loading: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_24588( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The WEAPON_TYPE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_24588( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_23206( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being removed: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_24588( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            DISPLAYF( "The WEAPON_TYPE asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_24588( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ void sub_24588(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_21736( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_INSERT */ void sub_26237(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ sub_26289( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ANIM_DICT asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_26541( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ int sub_26289(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_26541( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_26541( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ANIM_DICT asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_26541( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_23206( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_26541( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ANIM_DICT asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ANIM_DICT: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
             /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_26541( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ void sub_26541(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_21736( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_AUDIO_BANK_INSERT */ void sub_28274(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_AUDIO_BANK_IS_INDEX_AVAILABLE */ sub_28327( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing AUDIO_BANK asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
         /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_28582( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_AUDIO_BANK_IS_INDEX_AVAILABLE */ int sub_28327(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_28582( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_28582( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    DISPLAYF( "[CCB] ### The AUDIO_BANK is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The AUDIO_BANK asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_28582( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The AUDIO_BANK is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_23206( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_28582( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            DISPLAYF( "[CCB] ### The AUDIO_BANK is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The AUDIO_BANK is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing AUDIO_BANK: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
             /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_28582( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ void sub_28582(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_21736( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_REQUEST_F2_NONPERSISTENT_ASSETS */ void sub_30224()
{
     /* WRITESCRIPTLOG */ sub_793( "GA", "P_REQUEST_F2_NONPERSISTENT_ASSETS start", 0 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_30332( -104509267, ref g_U2662 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_30332( -1064833119, ref g_U2662 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_30332( 1590344366, ref g_U2662 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_30332( 97374916, ref g_U2662 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_30332( -1747827025, ref g_U2662 );
    if ((l_U231) AND (g_U820 != 8))
    {
         /* LOADSEAMLESSCUTSCENE */ sub_33221( "MID_08_PP_CONCAT", 0 );
        AUDIO_MUSIC_REQUEST_ONESHOT( "PRECINCT_ONESHOT_4", 0 );
    }
     /* WRITESCRIPTLOG */ sub_793( "GA", "P_REQUEST_F2_NONPERSISTENT_ASSETS end", 0 );
    return;
}

/* P_STREAMREQ_ISEQ_INSERT */ void sub_30332(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 =  /* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ sub_30393( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar12 );
            PRINTNL();
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar4 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
             /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_30643( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

/* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ int sub_30393(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_30643( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is loading: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_30643( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                        DISPLAYF( "The ISEQ asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_30643( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loading: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_30643( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### Re-requesting ISEQ: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_23206( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_23206( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being removed: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_30643( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar5 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_30643( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ISEQ_THREADID_SET_ID */ void sub_30643(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_21736( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* LOADSEAMLESSCUTSCENE */ void sub_33221(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_LOADED */ int sub_33723(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be requested: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to load: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be removed: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ int sub_34120(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be requested: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to load: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be removed: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ISEQ_IS_LOADED */ int sub_34522(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be requested: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to load: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be removed: {} ###", 1, 1281, ref uVar3 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ANIM_DICT_IS_LOADED */ int sub_34936(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be requested: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to load: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be removed: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_AUDIO_BANK_IS_LOADED */ int sub_35327(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* HAS_SAVEFILE_LOADED */ int sub_35936(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_793( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_10823( uParam0,  /* PLAYER_PED_ID */ sub_1656() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_36488(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_793( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_793( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_14089( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_36779( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_37256( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_37256( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_37516( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_37256( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_37516( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_37516( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_37256( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_37516( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_37516( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_37516( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_37256( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_37516( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_37516( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_37516( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_37516( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_39096( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_793( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_36779(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_11104( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_793( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_793( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_37256(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_37516(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_39096(int iParam0)
{
     /* WRITE_STRING */ sub_12924( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_39184( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_39261( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_39261( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_39261( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_39430( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_39430( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_39430( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_39430( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_39430( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_39430( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_39430( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_39430( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_39430( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_39430( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_39430( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_39261( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_39430( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_39430( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_39430( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_39261( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_40131( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_39430( iParam0->_fU52 );
     /* WRITE_STRING */ sub_12924( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_39430( iParam0->_fU96 );
     /* WRITE_STRING */ sub_12924( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_39430( iParam0->_fU100 );
     /* WRITE_STRING */ sub_12924( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_39430( iParam0->_fU104 );
     /* WRITE_STRING */ sub_12924( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_39430( iParam0->_fU108 );
     /* WRITE_STRING */ sub_12924( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_39430( iParam0->_fU112 );
     /* WRITE_STRING */ sub_12924( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_39430( iParam0->_fU116 );
     /* WRITE_STRING */ sub_12924( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_39430( iParam0->_fU120 );
     /* WRITE_STRING */ sub_12924( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_39430( iParam0->_fU124 );
     /* WRITE_STRING */ sub_12924( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_39430( iParam0->_fU128 );
     /* WRITE_STRING */ sub_12924( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_39430( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_39430( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_39430( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_39184(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_39261(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_39430(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_40131(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* P_PED_ARRAY_Z_SAFETY_CHECK */ void sub_41162(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_PED_Z_SAFETY_CHECK */ sub_41228( (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

/* P_PED_Z_SAFETY_CHECK */ void sub_41228(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                 /* CLEANPED */ sub_9494( uParam0 );
            }
        }
    }
    return;
}

/* P_F2_CREATE_OFFICE_ENEMIES */ void sub_41397()
{
    unknown uVar2;

    switch (l_U283)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_793( "GA", "e_F2_OfficeEnemySpawn = ENTITY_STATE_INIT", 0 );
         /* P_SETUP_AI_GROUP */ sub_41537( ref l_U399, 0.50000000, 0 );
        l_U284 = 0;
        l_U283 = 2;
         /* WRITESCRIPTLOG */ sub_793( "GA", "e_F2_OfficeEnemySpawn = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U390[l_U284] =  /* CREATEPED */ sub_42009( ref l_U285[l_U284] );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_42985( l_U390[l_U284], ref l_U399 );
        if (NOT (IS_PED_DEAD( l_U390[l_U284] )))
        {
            SET_PED_COMBAT_RANGE_MAX( l_U390[l_U284], 11.00000000 );
            SET_PED_PANIC_RANGE_OVERRIDE( l_U390[l_U284], 3.00000000 );
            SET_PED_FLAG_AGGRESSIVE_CHARGER( l_U390[l_U284], 1 );
            uVar2 =  /* F_GIVEPEDWEAPON */ sub_13315( l_U390[l_U284], l_U405[l_U284], 25000, 0, 0 );
            if (l_U284 == 0)
            {
                SET_ROOM_FOR_PED_BY_NAME( l_U390[l_U284], ref g_U3373 );
                SET_PED_ALERTNESS( l_U390[l_U284], 2 );
                SET_PED_AI_TEMPLATE( l_U390[l_U284], "AIT_UFE_AVERAGE" );
                SET_PED_MAX_HEALTH( l_U390[l_U284], 160 );
                SET_PED_HEALTH( l_U390[l_U284], 160, 0 );
            }
            else if (l_U284 == 1)
            {
                SET_ROOM_FOR_PED_BY_NAME( l_U390[l_U284], ref g_U3381 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U390[l_U284], 1 );
                SET_PED_ALERTNESS( l_U390[l_U284], 2 );
                SET_PED_AI_TEMPLATE( l_U390[l_U284], "AIT_UFE_HEAVY" );
            }
            else if (l_U284 == 2)
            {
                SET_ROOM_FOR_PED_BY_NAME( l_U390[l_U284], ref g_U3381 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U390[l_U284], 1 );
                SET_PED_ALERTNESS( l_U390[l_U284], 1 );
                SET_PED_AI_TEMPLATE( l_U390[l_U284], "AIT_UFE_AVERAGE" );
            }
            else if (l_U284 == 3)
            {
                SET_ROOM_FOR_PED_BY_NAME( l_U390[l_U284], ref g_U3381 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U390[l_U284], 1 );
                SET_PED_ALERTNESS( l_U390[l_U284], 1 );
                SET_PED_AI_TEMPLATE( l_U390[l_U284], "AIT_UFE_AVERAGE" );
            }
            else if (l_U284 == 4)
            {
                SET_ROOM_FOR_PED_BY_NAME( l_U390[l_U284], ref g_U3381 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U390[l_U284], 1 );
                SET_PED_ALERTNESS( l_U390[l_U284], 1 );
                SET_PED_AI_TEMPLATE( l_U390[l_U284], "AIT_UFE_TOUGH" );
            }
            else if (l_U284 == 5)
            {
                SET_ROOM_FOR_PED_BY_NAME( l_U390[l_U284], ref g_U3381 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U390[l_U284], 1 );
                SET_PED_ALERTNESS( l_U390[l_U284], 1 );
                SET_PED_AI_TEMPLATE( l_U390[l_U284], "AIT_UFE_TOUGH" );
            }
            else if (l_U284 == 6)
            {
                SET_ROOM_FOR_PED_BY_NAME( l_U390[l_U284], ref g_U3381 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U390[l_U284], 1 );
                SET_PED_ALERTNESS( l_U390[l_U284], 1 );
                SET_PED_AI_TEMPLATE( l_U390[l_U284], "AIT_UFE_TOUGH" );
            }
            else if (l_U284 == 7)
            {
                SET_ROOM_FOR_PED_BY_NAME( l_U390[l_U284], ref g_U3381 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U390[l_U284], 1 );
                SET_PED_ALERTNESS( l_U390[l_U284], 1 );
                SET_PED_AI_TEMPLATE( l_U390[l_U284], "AIT_UFE_TOUGH" );
            };;;;;;;;
        }
        l_U284++;
        if (l_U284 >= 8)
        {
            l_U283 = 3;
             /* WRITESCRIPTLOG */ sub_793( "GA", "e_F2_OfficeEnemySpawn = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_44568( ref l_U390, "pi_F2_OfficeEnemy" );
         /* P_DEACTIVATEPEDARRAY */ sub_44702( ref l_U390 );
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U399._fU0, 1 );
        l_U283 = 4;
         /* WRITESCRIPTLOG */ sub_793( "GA", "e_F2_OfficeEnemySpawn = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    return;
}

/* P_SETUP_AI_GROUP */ void sub_41537(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* CREATEPED */ void sub_42009(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_42191( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_42740( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_42841( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* LOADMODEL */ void sub_42191(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_12924( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* SETPEDDEFAULTSTATS */ void sub_42740(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_42841(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_42985(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_12924( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_41537( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_41537( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ void sub_44568(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

/* P_DEACTIVATEPEDARRAY */ void sub_44702(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_DEACTIVATEPED */ sub_44756( (uParam0^)[I] );
    }
    return;
}

/* P_DEACTIVATEPED */ void sub_44756(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

/* P_F2_CREATE_PLACEMENTS */ void sub_45152()
{
     /* WRITESCRIPTLOG */ sub_793( "GA", "P_F2_CREATE_PLACEMENTS start", 0 );
    l_U272[0] =  /* CREATEPLACEMENT */ sub_45272( -4072149, 534.98000000, 18.62000000, 4.80000000, 0.00000000, 0.00000000, 0.00000000, 1, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U272[0], ref g_U3373 );
    l_U275[0] =  /* CREATEPLACEMENT */ sub_45272( -4072149, 530.10000000, -17.32000000, 4.81000000, 0.00000000, 0.00000000, 0.00000000, 1, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U275[0], ref g_U3381 );
    l_U282 =  /* CREATEPLACEMENT */ sub_45272( -343443786, 536.27000000, 18.14000000, 4.80500000, 20.48000000, 0.00000000, 0.00000000, 1, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U282, ref g_U3373 );
     /* WRITESCRIPTLOG */ sub_793( "GA", "P_F2_CREATE_PLACEMENTS end", 0 );
    return;
}

/* CREATEPLACEMENT */ void sub_45272(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a placement to exist: {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return Result;
}

/* P_F2_RESET_DOORS */ void sub_45662()
{
     /* WRITESCRIPTLOG */ sub_793( "GA", "P_F2_RESET_DOORS start", 0 );
     /* P_CLOSEDOOR */ sub_45732( ref g_U3918, 1 );
     /* P_CLOSEDOOR */ sub_45732( ref g_U3925, 1 );
     /* P_SETDOORLOCKED */ sub_45999( ref g_U3918, 1 );
     /* P_SETDOORLOCKED */ sub_45999( ref g_U3925, 1 );
     /* P_CLOSEDOOR */ sub_45732( ref g_U3932, 1 );
     /* P_CLOSEDOOR */ sub_45732( ref g_U3939, 1 );
     /* WRITESCRIPTLOG */ sub_793( "GA", "P_F2_RESET_DOORS end", 0 );
    return;
}

/* P_CLOSEDOOR */ void sub_45732(int iParam0, int iParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_45758( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_45842( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_45758(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_45842(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_SETDOORLOCKED */ void sub_45999(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if (( /* F_DOESDOOREXIST */ sub_45758( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_45842( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

/* P_F2_CREATE_LAPTOP_DISPLAY */ void sub_46217()
{
     /* WRITESCRIPTLOG */ sub_793( "GA", "P_F2_CREATE_LAPTOP_DISPLAY start", 0 );
     /* CLEANOBJECT */ sub_9613( l_U1064 );
    l_U1064 =  /* CREATEOBJECTNOOFFSET */ sub_46352( -439542268, 530.19560000, -17.77776000, 4.80258000, 0.00000000, 0.00000000, -105.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U1064 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1064, ref g_U3381 );
        FREEZE_OBJECT_POSITION( l_U1064, 1 );
        SET_OBJECT_INVINCIBLE( l_U1064, 1 );
    }
     /* WRITESCRIPTLOG */ sub_793( "GA", "P_F2_CREATE_LAPTOP_DISPLAY end", 0 );
    return;
}

/* CREATEOBJECTNOOFFSET */ void sub_46352(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_42191( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* CREATE_DA_SILVA_POI */ void sub_46779()
{
     /* WRITESCRIPTLOG */ sub_793( "RJM", "CREATE_DA_SILVA_POI", 0 );
     /* P_CREATEPOISTRUCTCOORD */ sub_19054( ref l_U1171, 2, l_U1257, l_U1257, l_U1257, 1.50000000, 3.00000000, 1, 0 );
     /* P_SET_INTERACTIVE_TEXT */ sub_19815( ref l_U1171, 30, "POI_POL_DASLV" );
     /* P_SET_POI_FORCE_WALK */ sub_20025( ref l_U1171, 0 );
     /* P_ENABLE_POI */ sub_8417( ref l_U1171, 1 );
     /* P_SET_POI_REUSABLE */ sub_20239( ref l_U1171, 1 );
     /* P_SET_POI_AVAILABLE */ sub_20157( ref l_U1171, 0 );
    return;
}

/* CUTSYS_DEFAULT_PRECUTSCENESETUP */ int sub_47219()
{
    return 1;
}

/* P_F2_MID_08_CUTSCENEREGISTRATION */ void sub_47272()
{
    unknown uVar2;
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_793( "GA", "P_F2_MID_08_CutsceneRegistration start", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1656(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            if ( /* IS_WEAPON_SINGLE_HANDED */ sub_47419( uVar2 ))
            {
                REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_PI_Clt1911_Aa_H", 0 );
            }
            else
            {
                uVar3 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_47674();
                if (GET_DOES_WEAPON_EXIST( uVar3 ))
                {
                    REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar3, "W_PI_Clt1911_Aa_H", 0 );
                }
            }
        }
        CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_1656(), g_U2953[8], g_U3083[8] );
        CUTSCENE_REGISTER_ISEQ( -104509267 );
        ISEQ_REGISTER_ENTITY( -104509267, "Max",  /* PLAYER_PED_ID */ sub_1656(), 0 );
    }
    CUTSCENE_ENABLE_SKIP( 0 );
     /* WRITESCRIPTLOG */ sub_793( "GA", "P_F2_MID_08_CutsceneRegistration end", 0 );
    return;
}

/* IS_WEAPON_SINGLE_HANDED */ int sub_47419(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ int sub_47674()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1656(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_47419( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1656(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1656(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1656(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

/* P_F2_MID_08_PP_HANDLECUTSCENE */ void sub_48091()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;

    if (l_U233._fU52)
    {
        if (IS_SCREEN_FADED_OUT())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        if ((NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1694() ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() ))))
        {
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1694(), 1 );
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1656(), 0 );
        }
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
        {
            uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1656(), 0, 0 );
            if (GET_DOES_WEAPON_EXIST( uVar2 ))
            {
                if ( /* IS_WEAPON_SINGLE_HANDED */ sub_47419( uVar2 ))
                {
                    uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1656(), 1, 0 );
                    if (GET_DOES_WEAPON_EXIST( uVar3 ))
                    {
                        SET_WEAPON_VISIBLE( uVar3, 0 );
                    }
                    uVar4 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1656(), 2 );
                    if (GET_DOES_WEAPON_EXIST( uVar4 ))
                    {
                        SET_WEAPON_VISIBLE( uVar4, 0 );
                    }
                }
                else
                {
                    SET_WEAPON_VISIBLE( uVar2, 0 );
                }
            }
        }
    }
    if (NOT l_U263)
    {
        if (GET_CUTSCENE_TIME_MS() >= l_U264)
        {
            SET_WEATHER_TYPE_NOW_PERSIST( "RAIN" );
            l_U263 = 1;
        }
    }
    if (NOT l_U265)
    {
        if (GET_CUTSCENE_TIME_MS() >= l_U266)
        {
             /* WRITESCRIPTLOG */ sub_793( "GA", "Forcing Music PRECINCT_FINAL mood PRECINCT_01_1_2 fade in 15 seconds", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_1_2", "", 0, 5000, 6000, -1082130432, 0 );
            l_U265 = 1;
        }
    }
    if (NOT l_U267)
    {
        if (GET_CUTSCENE_TIME_MS() >= l_U268)
        {
             /* WRITESCRIPTLOG */ sub_793( "GA", "Playing music one shot PRECINCT_ONESHOT_4", 0 );
            AUDIO_MUSIC_PLAY_ONESHOT();
            l_U267 = 1;
        }
    }
    if (NOT l_U503)
    {
        if (GET_CUTSCENE_TIME_MS() >= 9000)
        {
            CUTSCENE_ENABLE_SKIP( 1 );
            l_U503 = 1;
        }
    }
    return;
}

/* F_F2_MID_08_PP_POSTCUTSCENE */ int sub_48750()
{
     /* WRITESCRIPTLOG */ sub_793( "GA", "F_F2_MID_08_PP_PostCutscene start", 0 );
     /* WRITESCRIPTLOG */ sub_793( "GA", "Forcing Music PRECINCT_FINAL mood PRECINCT_01_1_2", 0 );
    AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_1_2", "", 0, -1, -1, -1082130432, 0 );
    AUDIO_MUSIC_REQUEST_ONESHOT( "PRECINCT_ONESHOT_3", 0 );
     /* WRITESCRIPTLOG */ sub_793( "GA", "F_F2_MID_08_PP_PostCutscene end", 0 );
    return 1;
}

/* P_F2_MID_08_PREPAREBLENDOUT */ void sub_49038()
{
    unknown uVar2;
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_793( "AT", "P_F2_MID_08_PrepareBlendout", 0 );
     /* P_CREATE_ELEVATOR */ sub_49119();
     /* P_HOLSTERALLPLAYERWEAPONS */ sub_49426( ref uVar2, ref uVar3, 1, 0 );
    uVar2 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1656(), 1 );
    if (GET_DOES_WEAPON_EXIST( uVar2 ))
    {
        SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1656(), uVar2, 0, 1 );
    }
    else
    {
         /* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ sub_49897( 1 );
    }
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
    {
        if (NOT (ISEQ_QUERY_STATE( -104509267, 3 )))
        {
             /* TELEPORTPED */ sub_10459(  /* PLAYER_PED_ID */ sub_1656(), g_U2953[8], g_U3083[8] );
            ISEQ_REGISTER_ENTITY( -104509267, "Max",  /* PLAYER_PED_ID */ sub_1656(), 0 );
            ISEQ_START( -104509267 );
        }
    }
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U3127[8], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U3171[8], 1065353216, 0 );
    CAMERA_PLAY_ANIMATED( "LEVEL_S_POLICE_CP_08", "B_OUT_MID_08_PP_CAM", 0, 0, 0, 0, 0.00000000, 0, 0 );
    SET_FORCED_AIM_INTENTION_DIRECTION( 0.99933900, -0.03617200, -0.00349800 );
    SET_FORCED_FORWARD_DIRECTION( 0.99897800, -0.04518900, 0.00000000 );
    SET_FREEZE_HEADING_BLEND( 5000 );
    return;
}

/* P_CREATE_ELEVATOR */ void sub_49119()
{
     /* WRITESCRIPTLOG */ sub_793( "AT", "P_CREATE_ELEVATOR", 0 );
    l_U269 =  /* CREATEOBJECTNOOFFSET */ sub_46352( 981909320, 517.41000000, 8.78300000, 3.04100000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U269 ))
    {
        FREEZE_OBJECT_POSITION( l_U269, 1 );
    }
    l_U270 =  /* CREATEOBJECTNOOFFSET */ sub_46352( 1334981523, 517.00600000, 11.37800000, 4.05000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U270 ))
    {
        FREEZE_OBJECT_POSITION( l_U270, 1 );
    }
    l_U271 =  /* CREATEOBJECTNOOFFSET */ sub_46352( 611999076, 518.69000000, 11.37900000, 4.05000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U271 ))
    {
        FREEZE_OBJECT_POSITION( l_U271, 1 );
    }
    return;
}

/* P_HOLSTERALLPLAYERWEAPONS */ void sub_49426(unknown uParam0, unknown uParam1, unknown uParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
    {
        (uParam0^) = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1656(), 0, 0 );
        (uParam1^) = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1656(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( (uParam0^) ))
        {
            SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1656(), 0, 0, uParam2 );
        }
        if (GET_DOES_WEAPON_EXIST( (uParam1^) ))
        {
            SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1656(), 0, 1, uParam2 );
        }
        if (bParam3)
        {
            uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1656(), 0, 0 );
            uVar7 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1656(), 1, 0 );
            while (GET_DOES_WEAPON_EXIST( uVar6 ))
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )) == 0)
                {
                    uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1656(), 0, 0 );
                     /* WRITE_STRING */ sub_12924( "Waiting for right weapon to be holstered." );
                }
                WAIT( 0 );
            }
            while (GET_DOES_WEAPON_EXIST( uVar7 ))
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )) == 0)
                {
                    uVar7 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1656(), 1, 0 );
                     /* WRITE_STRING */ sub_12924( "Waiting for left weapon to be holstered." );
                }
                WAIT( 0 );
            }
        }
    }
    return;
}

/* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ void sub_49897(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1656(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if ((( /* IS_WEAPON_SINGLE_HANDED */ sub_47419( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_47674();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1656(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

/* F_F2_MID_08_HANDLEBLENDOUT */ int sub_50367()
{
    if (l_U233._fU52)
    {
        if (IS_SCREEN_FADED_OUT())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        if (IS_DEATH_PANEL_WIPE_ALLOWED())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
    }
    if (CAMERA_ANIMATED_CURRENT_TIME() > ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_POLICE_CP_08", "B_OUT_MID_08_PP_CAM" )) - 1))
    {
        if (NOT l_U260)
        {
             /* WRITESCRIPTLOG */ sub_793( "AT", "Stopping animated blendout camera.", 0 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U3127[8], 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U3171[8], 1065353216, 0 );
            CAMERA_FREEZE_FRAME( 1, 1000, 0, 0 );
            l_U260 = 1;
        }
    }
    if ((l_U260) AND ((ISEQ_QUERY_ENTITY_STATE( -104509267, "Max", 6 )) || (ISEQ_QUERY_ENTITY_STATE( -104509267, "Max", 5 ))))
    {
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_50724( "LEVEL_S_POLICE_CP_08", ref g_U2741 );
        return 1;
    }
    return 0;
}

/* P_STREAMREQ_ANIM_DICT_REMOVE */ void sub_50724(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_7383( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ANIM_DICT asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ void sub_51078(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
     /* WRITESCRIPTLOG */ sub_793( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return  /* CUTSYS_PRIVATE_CREATECUTSCENE */ sub_51302( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 51199, 51249, uParam8 );
}

/* CUTSYS_DEFAULT_PREPAREBLENDIN */ void sub_51199()
{
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDIN */ int sub_51249()
{
    return 1;
}

/* CUTSYS_PRIVATE_CREATECUTSCENE */ void sub_51302(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

/* CUTSYS_SETCUTSCENELOADINTERIORONSKIP */ void sub_51628(int iParam0, unknown uParam1, unknown uParam2)
{
    iParam0->_fU68 = 1;
    iParam0->_fU72 = 1;
    iParam0->_fU76 = uParam1;
    iParam0->_fU80 = uParam2;
    iParam0->_fU24 = 1;
    return;
}

/* CUTSYS_HANDLECUTSCENE */ void sub_51760(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
             /* WRITESCRIPTLOG */ sub_793( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
             /* WRITESCRIPTLOG */ sub_793( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                 /* WRITESCRIPTLOG */ sub_793( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
             /* WRITESCRIPTLOG */ sub_793( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
             /* WRITESCRIPTLOG */ sub_793( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
             /* WRITESCRIPTLOG */ sub_793( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
             /* LOADSEAMLESSCUTSCENE */ sub_33221( iParam0->_fU0, 0 );
             /* WRITESCRIPTLOG */ sub_793( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
             /* NIS_PRE_SETUP */ sub_52651( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
         /* NIS_PRE_SETUP */ sub_52651( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
         /* WRITESCRIPTLOG */ sub_793( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                 /* P_SET_PLAYER_WEAPONS_VISIBLE */ sub_53195( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
         /* NIS_PRE_SETUP */ sub_52651( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
             /* NIS_POST_SETUP */ sub_53575( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
         /* NIS_POST_SETUP */ sub_53575( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

/* NIS_PRE_SETUP */ void sub_52651(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1694(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1656(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1656() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1656(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* P_SET_PLAYER_WEAPONS_VISIBLE */ void sub_53195(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1656(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1656(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1656(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1656(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1656(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

/* NIS_POST_SETUP */ void sub_53575(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1694(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1656(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_53673();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_53673()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1656(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1656(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1656(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1656(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* P_START_SP_CHALLENGES */ void sub_54115()
{
     /* WRITESCRIPTLOG */ sub_793( "CCB", "P_START_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_793( "CCB", "Starting the Precinct_Second_Floor context...", 0 );
    START_CONTEXT( "Precinct_Second_Floor" );
    return;
}

/* HANDLE_DA_SILVA_POI */ void sub_54370()
{
    if ( /* F_HANDLE_POI */ sub_54406( ref l_U1171 ))
    {
        l_U1139 = 0;
    }
    if (( /* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ sub_56228( ref l_U1171 )) == 1)
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_3223( ref l_U1536 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_3334( 0,  /* PLAYER_PED_ID */ sub_1656(), "MAX", ref l_U1536, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_3334( 1,  /* PLAYER_PED_ID */ sub_1656(), "MAX", ref l_U1536, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_3604( "EXPLORE_ITEM", ref l_U1536, 8, 1 );
    }
    if ( /* HANDLE_DA_SILVA_CAM */ sub_56582())
    {
         /* P_ENABLE_POI */ sub_8417( ref l_U1171, 1 );
         /* WRITESCRIPTLOG */ sub_793( "RJM", "HANDLE_DA_SILVA_POI: POI has been used, disabling", 0 );
    }
    return;
}

/* F_HANDLE_POI */ int sub_54406(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1656() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_15914(  /* PLAYER_PED_ID */ sub_1656(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_15914(  /* PLAYER_PED_ID */ sub_1656(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_8875( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND (( /* F_ISACTIONINGAVAILABLE */ sub_8971( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (( /* F_HASACTIONBEENPRESSED */ sub_55303()) == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                             /* P_ENABLE_POI */ sub_8417( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                             /* P_ENABLEPOIGLINT */ sub_8476( iParam0, 0 );
                             /* P_ENABLEPOIINTERACTIONTEXT */ sub_8695( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                             /* P_ENABLEPOIGLINT */ sub_8476( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1656(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                         /* P_ENABLEPOIGLINT */ sub_8476( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_ENABLEPOIINTERACTIONTEXT */ sub_8695( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED(  /* PLAYER_PED_ID */ sub_1656(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )) == 0)
                    {
                        TASK_LOOK_AT_COORD(  /* PLAYER_PED_ID */ sub_1656(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1656(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                     /* P_ENABLEPOIGLINT */ sub_8476( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                     /* P_ENABLEPOIINTERACTIONTEXT */ sub_8695( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_1656() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1656(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                 /* P_ENABLEPOIINTERACTIONTEXT */ sub_8695( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

/* F_HASACTIONBEENPRESSED */ int sub_55303()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

/* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ int sub_56228(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND (( /* F_IS_POI_AVAILABLE */ sub_56274( iParam0 )) == 0)))
    {
        if ((( /* F_HASACTIONBEENPRESSED */ sub_55303()) == 1) AND (((IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_1656() )) == 0) AND (((IS_PED_GETTING_UP(  /* PLAYER_PED_ID */ sub_1656() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP(  /* PLAYER_PED_ID */ sub_1656() )) == 0) AND (((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_1656() )) == 0) AND (((IS_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1656() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

/* F_IS_POI_AVAILABLE */ void sub_56274(int iParam0)
{
    return iParam0->_fU56;
}

/* HANDLE_DA_SILVA_CAM */ int sub_56582()
{
    switch (l_U1139)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_793( "RJM", "HANDLE_DA_SILVA_CAM: assDaSilva = ASS_SETUP", 0 );
         /* NIS_PRE_SETUP */ sub_52651( 1, 0, 0, 1 );
        l_U1139 = 3;
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_793( "RJM", "HANDLE_NEWS_CLIPPINGS_CAM: eNewsClippings = ASS_WAITING_TO_PLAY", 0 );
        CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAM_GND_45_F_CAM", 1, 529.42000000, -17.71000000, 5.86000000, 270, 0, 0 );
        if ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1694() )) == 0)
        {
            SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1656(), 0 );
        }
        if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "spol_EFile" )))
        {
             /* KILL_ANY_MISSION_SPEECH */ sub_56938( 0 );
             /* P_DIAL_MONOLOGUE */ sub_57157( "SPOL_PLINSPCT", ref l_U1260 );
            FOUND_EXPLORATION_ITEM( "spol_EFile" );
        }
        else
        {
             /* P_CREATE_AND_START_TIMER */ sub_57368( ref l_U1270, 4000 );
        }
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
        {
            CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1656() );
        }
        l_U1139 = 4;
        break;
        case 4:
        if (((NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_4852( l_U1260 ))) AND (NOT l_U1270._fU20)) || ( /* ISTIMERDONE */ sub_2956( ref l_U1270 )))
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
            if ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1694() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1656(), 1 );
            }
             /* WRITESCRIPTLOG */ sub_793( "TEH", "HANDLE_DA_SILVA_CAM: Cam cut done, going to assDaSilva = ASS_FINISHED", 0 );
            l_U1139 = 5;
        }
        break;
        case 5:
         /* NIS_POST_SETUP */ sub_53575( 1, 1 );
         /* WRITESCRIPTLOG */ sub_793( "RJM", "HANDLE_DA_SILVA_CAM: going to assDaSilva = ASS_INACTIVE", 0 );
        l_U1139 = -1;
        return 1;
        break;
    }
    return 0;
}

/* KILL_ANY_MISSION_SPEECH */ void sub_56938(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        PRINTSTRING( "\n KILL_ANY_MISSION_SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

/* P_DIAL_MONOLOGUE */ void sub_57157(unknown uParam0, unknown uParam1)
{
     /* P_DIAL_STANDARD_CONVO */ sub_57202( uParam0, uParam1,  /* PLAYER_PED_ID */ sub_1656(), "MAX", 1 );
    return;
}

/* P_DIAL_STANDARD_CONVO */ void sub_57202(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if ((NOT (IS_PED_DEAD( uParam2 ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() ))))
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_3223( uParam1 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_3334( 0,  /* PLAYER_PED_ID */ sub_1656(), "MAX", uParam1, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_3334( uParam4, uParam2, uParam3, uParam1, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_3604( uParam0, uParam1, 8, 1 );
    }
    return;
}

/* P_CREATE_AND_START_TIMER */ void sub_57368(unknown uParam0, unknown uParam1)
{
     /* CREATETIMER */ sub_2440( uParam0, uParam1, 1, 0 );
     /* STARTTIMER */ sub_2590( uParam0 );
    return;
}

/* P_HANDLE_OFFICE_DOORS */ void sub_57940()
{
    if (DOES_OBJECT_EXIST( DOOR_FIND_CLOSEST( g_U4205._fU0, g_U4205._fU4 ) ))
    {
        if (DOOR_GET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U4205._fU0, g_U4205._fU4 ) ))
        {
            DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U4205._fU0, g_U4205._fU4 ), 0 );
        }
    }
    if (DOES_OBJECT_EXIST( DOOR_FIND_CLOSEST( g_U4198._fU0, g_U4198._fU4 ) ))
    {
        if (DOOR_GET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U4198._fU0, g_U4198._fU4 ) ))
        {
            DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U4198._fU0, g_U4198._fU4 ), 0 );
        }
    }
    return;
}

/* P_F2_FRONT_DESK_ENEMY_MOVE */ void sub_58337()
{
     /* WRITESCRIPTLOG */ sub_793( "GA", "P_F2_FRONT_DESK_ENEMY_MOVE start", 0 );
     /* P_ACTIVATEPED */ sub_58430( l_U390[0] );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() ))) AND (NOT (IS_PED_DEAD( l_U390[0] ))))
    {
        ISEQ_REGISTER_ENTITY( -1064833119, "VIG_07A_PP_GMED", l_U390[0], 0 );
        REGISTER_TARGET( l_U390[0],  /* PLAYER_PED_ID */ sub_1656() );
        SET_LOCKED_TARGET( l_U390[0],  /* PLAYER_PED_ID */ sub_1656() );
        SET_PED_ALERTNESS( l_U390[0], 3 );
        TASK_ATTACK_MOVE( l_U390[0], 531.17000000, 10.96000000, 3.95000000, 0.50000000, 1101004800, -1082130432, 3 );
        SET_PED_PRIMARY_LOOKAT( l_U390[0],  /* PLAYER_PED_ID */ sub_1656() );
         /* TELEPORTPED */ sub_10459( l_U390[0], l_U285[0]._fU0, l_U285[0]._fU12 );
        ISEQ_START( -1064833119 );
    }
    return;
}

/* P_ACTIVATEPED */ void sub_58430(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_58826(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_15914(  /* PLAYER_PED_ID */ sub_1656(), uParam0 );
}

/* P_SPEECH_PLAY_MONOLOGUE */ void sub_58989(unknown uParam0, unknown uParam1)
{
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_3223( uParam1 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_3334( 0,  /* PLAYER_PED_ID */ sub_1656(), "MAX", uParam1, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_3334( 1,  /* PLAYER_PED_ID */ sub_1656(), "MAX", uParam1, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_3604( uParam0, uParam1, 8, 1 );
    return;
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_59115(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_15914(  /* PLAYER_PED_ID */ sub_1656(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* P_F2_SETUP_OFFICE_ENEMIES */ void sub_59250()
{
    float fVar2;

     /* WRITESCRIPTLOG */ sub_793( "RJM", "P_F2_SETUP_OFFICE_ENEMIES", 0 );
     /* P_ACTIVATEPEDARRAY */ sub_59332( ref l_U390 );
    fVar2 = 19.00000000;
    if (NOT (IS_PED_DEAD( l_U390[1] )))
    {
        SET_PED_COMBAT_MOVEMENT( l_U390[1], 0 );
    }
    if (NOT (IS_PED_DEAD( l_U390[4] )))
    {
        SET_PED_SEEING_RANGE( l_U390[4], fVar2, 75 );
    }
    if (NOT (IS_PED_DEAD( l_U390[5] )))
    {
        SET_PED_SEEING_RANGE( l_U390[5], fVar2, 75 );
    }
    if (NOT (IS_PED_DEAD( l_U390[2] )))
    {
        SET_PED_SEEING_RANGE( l_U390[2], fVar2, 75 );
    }
    if (NOT (IS_PED_DEAD( l_U390[6] )))
    {
        TASK_COMBAT_SNAP_TO_COVER( l_U390[6], "GenCover", "89A279AF_2B8CFD22_Corner2", 0 );
        SET_PED_FLAG_LOCK_TO_COVER( l_U390[6], 1 );
    }
    if (NOT (IS_PED_DEAD( l_U390[7] )))
    {
        TASK_COMBAT_SNAP_TO_COVER( l_U390[7], "GenCover", "89A279AF_342842D3_Corner2", 0 );
        SET_PED_FLAG_LOCK_TO_COVER( l_U390[7], 1 );
    }
    if (NOT (IS_PED_DEAD( l_U390[3] )))
    {
        TASK_COMBAT_SNAP_TO_COVER( l_U390[3], "GenCover", "89A279AF_A34A1FB_Corner1", 0 );
        SET_PED_FLAG_LOCK_TO_COVER( l_U390[3], 1 );
    }
    return;
}

/* P_ACTIVATEPEDARRAY */ void sub_59332(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_ACTIVATEPED */ sub_58430( (uParam0^)[I] );
    }
    return;
}

/* P_F2_START_OFFICE_VIGS */ void sub_59873()
{
     /* WRITESCRIPTLOG */ sub_793( "RJM", "P_F2_START_OFFICE_VIGS", 0 );
    if (NOT (IS_PED_DEAD( l_U390[1] )))
    {
        if (NOT (ISEQ_QUERY_STATE( 1590344366, 3 )))
        {
             /* WRITESCRIPTLOG */ sub_793( "RJM", "P_F2_START_OFFICE_VIGS - Starting the Heavy's vignette", 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U390[1], 0 );
            ISEQ_REGISTER_ENTITY( 1590344366, "heavy", l_U390[1], 0 );
            ISEQ_START( 1590344366 );
        }
    }
    if (NOT (ISEQ_QUERY_STATE( 97374916, 3 )))
    {
        if (NOT (IS_PED_DEAD( l_U390[2] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U390[2], 0 );
            ISEQ_REGISTER_ENTITY( 97374916, "patrol_left", l_U390[2], 0 );
        }
        if (NOT (IS_PED_DEAD( l_U390[5] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U390[5], 0 );
            ISEQ_REGISTER_ENTITY( 97374916, "patrol_middle", l_U390[5], 0 );
        }
        if (NOT (IS_PED_DEAD( l_U390[4] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U390[4], 0 );
            ISEQ_REGISTER_ENTITY( 97374916, "patrol_right", l_U390[4], 0 );
        }
         /* WRITESCRIPTLOG */ sub_793( "RJM", "P_F2_START_OFFICE_VIGS - Starting the Patrollers vignette", 0 );
        ISEQ_START( 97374916 );
    }
    return;
}

/* SHOULD_OFFICE_COMBAT_START */ int sub_60674()
{
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
    {
        if ( /* F_ISPLAYERINTRIGGERBOX */ sub_58826( l_U546 ))
        {
             /* WRITESCRIPTLOG */ sub_793( "RJM", "SHOULD_OFFICE_COMBAT_START - Player has tripped the triggerbox", 0 );
            return 1;
        }
        if (NOT (IS_PED_DEAD( l_U390[1] )))
        {
            if ( /* F_IS_PED_AWARE_OF_PED */ sub_60866( ref l_U390[1],  /* PLAYER_PED_ID */ sub_1656(), 1, 1, 1, 1, 1 ))
            {
                 /* WRITESCRIPTLOG */ sub_793( "RJM", "SHOULD_OFFICE_COMBAT_START - CENTER_AREA_HEAVY recognized the player", 0 );
                return 1;
            }
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_793( "RJM", "SHOULD_OFFICE_COMBAT_START - CENTER_AREA_HEAVY died", 0 );
            return 1;
        }
        if (NOT (IS_PED_DEAD( l_U390[2] )))
        {
            if ( /* F_IS_PED_AWARE_OF_PED */ sub_60866( ref l_U390[2],  /* PLAYER_PED_ID */ sub_1656(), 1, 1, 1, 1, 1 ))
            {
                 /* WRITESCRIPTLOG */ sub_793( "RJM", "SHOULD_OFFICE_COMBAT_START - CENTER_AREA_PATROL_LEFT recognized the player", 0 );
                return 1;
            }
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_793( "RJM", "SHOULD_OFFICE_COMBAT_START - CENTER_AREA_PATROL_LEFT died", 0 );
            return 1;
        }
        if (NOT (IS_PED_DEAD( l_U390[5] )))
        {
            if ( /* F_IS_PED_AWARE_OF_PED */ sub_60866( ref l_U390[5],  /* PLAYER_PED_ID */ sub_1656(), 1, 1, 1, 1, 1 ))
            {
                 /* WRITESCRIPTLOG */ sub_793( "RJM", "SHOULD_OFFICE_COMBAT_START - CENTER_AREA_PATROL_MIDDLE recognized the player", 0 );
                return 1;
            }
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_793( "RJM", "SHOULD_OFFICE_COMBAT_START - CENTER_AREA_PATROL_MIDDLE died", 0 );
            return 1;
        }
        if (NOT (IS_PED_DEAD( l_U390[4] )))
        {
            if ( /* F_IS_PED_AWARE_OF_PED */ sub_60866( ref l_U390[4],  /* PLAYER_PED_ID */ sub_1656(), 1, 1, 1, 1, 1 ))
            {
                 /* WRITESCRIPTLOG */ sub_793( "RJM", "SHOULD_OFFICE_COMBAT_START - CENTER_AREA_PATROL_RIGHT recognized the player", 0 );
                return 1;
            }
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_793( "RJM", "SHOULD_OFFICE_COMBAT_START - CENTER_AREA_PATROL_RIGHT died", 0 );
            return 1;
        }
    }
    return 0;
}

/* F_IS_PED_AWARE_OF_PED */ int sub_60866(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, int iParam6)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        if ((uParam3) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 1 )))
        {
            if (iParam6 == 1)
            {
                 /* WRITESCRIPTLOG */ sub_793( "MF", "ped has SEEN target ped", 0 );
            }
            return 1;
        }
        else if ((uParam4) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 8 )))
        {
            if (iParam6 == 1)
            {
                 /* WRITESCRIPTLOG */ sub_793( "MF", "ped has BEEN SHOT AT by target ped", 0 );
            }
            return 1;
        }
        else if ((uParam2) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 2 )))
        {
            if (iParam6 == 1)
            {
                 /* WRITESCRIPTLOG */ sub_793( "MF", "ped has HEARD target ped", 0 );
            }
            return 1;
        }
        else if ((uParam5) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 4 )))
        {
            if (iParam6 == 1)
            {
                 /* WRITESCRIPTLOG */ sub_793( "MF", "ped has BEEN TOLD ABOUT target ped", 0 );
            }
            return 1;
        };;;;
    }
    return 0;
}

/* P_F2_START_OFFICE_COMBAT */ void sub_62111()
{
    int I;

     /* WRITESCRIPTLOG */ sub_793( "RJM", "P_F2_START_OFFICE_COMBAT", 0 );
    for ( I = 0; I < l_U390; I++ )
    {
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() ))) AND (NOT (IS_PED_DEAD( l_U390[I] ))))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U390[I], 0 );
            SET_PED_SEEING_RANGE( l_U390[I], 60.00000000, 75 );
            REGISTER_TARGET( l_U390[I],  /* PLAYER_PED_ID */ sub_1656() );
            SET_LOCKED_TARGET( l_U390[I],  /* PLAYER_PED_ID */ sub_1656() );
            TASK_COMBAT_PED( l_U390[I],  /* PLAYER_PED_ID */ sub_1656() );
        }
    }
    return;
}

/* UPDATE_REINFORCEMENTS_TASKING */ void sub_62398()
{
    if (IS_PED_DEAD( l_U390[6] ))
    {
        l_U675 = 1;
    }
    if (IS_PED_DEAD( l_U390[7] ))
    {
        l_U676 = 1;
    }
    if (IS_PED_DEAD( l_U390[3] ))
    {
        l_U677 = 1;
    }
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
    {
        if (NOT l_U675)
        {
            if ((HAS_PED_BEEN_DAMAGED_BY_PED( l_U390[6],  /* PLAYER_PED_ID */ sub_1656(), 0 )) || (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_59115( ref l_U588, 0 )) || (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_62551( ref l_U390 )) == 4)))
            {
                 /* TASK_REINFORCEMENTS1 */ sub_62704();
            }
        }
        if (NOT l_U676)
        {
            if ((HAS_PED_BEEN_DAMAGED_BY_PED( l_U390[7],  /* PLAYER_PED_ID */ sub_1656(), 0 )) || (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_59115( ref l_U609, 0 )) || (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_62551( ref l_U390 )) == 3)))
            {
                 /* TASK_REINFORCEMENTS2 */ sub_62848();
            }
        }
        if (NOT l_U677)
        {
            if ((HAS_PED_BEEN_DAMAGED_BY_PED( l_U390[3],  /* PLAYER_PED_ID */ sub_1656(), 0 )) || (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_59115( ref l_U630, 0 )) || (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_62551( ref l_U390 )) == 2)))
            {
                 /* TASK_REINFORCEMENTS3 */ sub_62992();
            }
        }
    }
    return;
}

/* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ void sub_62551(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

/* TASK_REINFORCEMENTS1 */ void sub_62704()
{
    if (NOT (IS_PED_DEAD( l_U390[6] )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( l_U390[6], 0 );
        l_U675 = 1;
    }
    return;
}

/* TASK_REINFORCEMENTS2 */ void sub_62848()
{
    if (NOT (IS_PED_DEAD( l_U390[7] )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( l_U390[7], 0 );
        l_U676 = 1;
    }
    return;
}

/* TASK_REINFORCEMENTS3 */ void sub_62992()
{
    if (NOT (IS_PED_DEAD( l_U390[3] )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( l_U390[3], 0 );
        l_U677 = 1;
    }
    return;
}

/* CREATE_BIGASS */ void sub_63419()
{
    l_U437 =  /* CREATEPED */ sub_42009( ref l_U424 );
    if ((NOT (IS_PED_DEAD( l_U437 ))) AND (DOES_PED_EXIST( l_U437 )))
    {
        SET_PED_NAME_DEBUG( l_U437, "F2_Bigass" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U437, 1 );
         /* F_GIVEPEDWEAPON */ sub_13315( l_U437, l_U502, 25000, 0, 0 );
         /* P_DEACTIVATEPED */ sub_44756( l_U437 );
        SET_PED_FLAG_AGGRESSIVE_CHARGER( l_U437, 1 );
        SET_PED_COMBAT_ATTRIBUTES( l_U437, 1, 0 );
        SET_PED_COMBAT_ATTRIBUTES( l_U437, 8192, 1 );
        SET_PED_COMBAT_ATTRIBUTES( l_U437, 16, 0 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U437, 1 );
        SET_BULLET_CAM_PREF( l_U437, "ALL_LMS_16", "ALL_02_MED_FAILSAFE", "ALL_01_FAR_FAILSAFE", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        SET_PED_AI_TEMPLATE( l_U437, "AIT_CP_HEAVY_GNR" );
        SET_PED_HEALTH( l_U437, l_U478, 1 );
        SET_PED_CAN_BE_MELEED( l_U437, 0 );
        SET_PED_NO_RAGDOLL_TO_BULLET_UNLESS_DEAD( l_U437, 1 );
        SET_PED_REDUCED_DAMAGE_IK( l_U437, 1 );
        SET_HELMET_KNOCK_OFF_HEALTH( l_U437, 0 );
        SET_PED_BOSS_PECENT_DAMAGED( l_U437, 1 );
        SET_BOSS_PECENT_DAMAGE( l_U479 );
        ISEQ_REGISTER_ENTITY( -1747827025, "bigass", l_U437, 0 );
        ISEQ_START( -1747827025 );
         /* MAL_SETPEDALERTNESS */ sub_63878( ref l_U437, 3 );
         /* MAL_SETLOCKEDANDREGISTEREDONPLAYER */ sub_63950( ref l_U437 );
        SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U437, 0, 0 ), 100 );
        SET_PED_CUSTOM_FIRING_PATTERN_TIME_BETWEEN_BURSTS( l_U437, 0.75000000, 1.25000000 );
        SET_PED_CUSTOM_FIRING_PATTERN_SHOTS_PER_BURST( l_U437, 9, 12 );
        OVERRIDE_PED_FIRING_PATTERN_CUSTOM( l_U437, 1 );
        SET_PED_GIVE_POST_LMS_BREAK( l_U437, 1 );
        SET_PED_MELEE_TRIGGER_DIST_OVERRIDE( l_U437, 1.85000000 );
    }
    return;
}

/* MAL_SETPEDALERTNESS */ void sub_63878(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_ALERTNESS( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETLOCKEDANDREGISTEREDONPLAYER */ void sub_63950(unknown uParam0)
{
     /* MAL_SETLOCKEDANDREGISTEREDONPED */ sub_64004( uParam0,  /* PLAYER_PED_ID */ sub_1656() );
    return;
}

/* MAL_SETLOCKEDANDREGISTEREDONPED */ void sub_64004(unknown uParam0, unknown uParam1)
{
     /* MAL_REGISTERTARGET */ sub_64052( uParam0, uParam1 );
     /* MAL_SETLOCKEDTARGET */ sub_64134( uParam0, uParam1 );
    return;
}

/* MAL_REGISTERTARGET */ void sub_64052(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETLOCKEDTARGET */ void sub_64134(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* F_IS_BIGASS_INTRO_COMPLETED */ int sub_64605()
{
    int I;

    switch (l_U438)
    {
        case 0:
         /* NIS_PRE_SETUP */ sub_52651( 1, 0, 0, 1 );
         /* P_SETDOORLOCKED */ sub_45999( ref g_U3918, 0 );
         /* P_SETDOORLOCKED */ sub_45999( ref g_U3925, 0 );
         /* WRITESCRIPTLOG */ sub_793( "RJM", "F_IS_BIGASS_INTRO_COMPLETED - Going to ASS_START_ANIMS", 0 );
        l_U438 = 2;
        break;
        case 2:
        for ( I = 0; I <= (l_U390 - 1); I++ )
        {
            if ((NOT (IS_PED_DEAD( l_U390[I] ))) || (IS_PED_DEAD( l_U390[I] )))
            {
                if (IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U390[I], "tb_F2_MaxTooCloseToBigass" ))
                {
                    DISPLAYF( "pi_F2_OfficeEnemy[{}] is in the helper box near Bigass, hiding", 1, 513, I );
                    SET_PED_FREEZE_PROCESSING( l_U390[I], 1 );
                    SET_PED_VISIBLE( l_U390[I], 0 );
                    SET_PED_VISIBLE_DURING_SEQUENCE( l_U390[I], 0 );
                    FREEZE_PED_POSITION( l_U390[I], 1 );
                    SET_PED_COLLISION( l_U390[I], 0 );
                    SET_PED_PROOFS( l_U390[I], 1, 1, 1, 1, 1 );
                }
            }
        }
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
        {
            if ( /* F_ISPLAYERINTRIGGERBOX */ sub_58826( l_U480 ))
            {
                if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1694() )))
                {
                    l_U475 = 1;
                     /* TELEPORTPED */ sub_10459(  /* PLAYER_PED_ID */ sub_1656(), 519.85590000, -5.77865000, 3.90035300, 0 );
                    SNAP_PLAYER_TO_COVERPOINT(  /* PLAYER_ID */ sub_1694(), "GenCover", "89A279AF_7B7B000F_Corner2", 0 );
                }
            }
            else
            {
                SET_FORCED_AIM_INTENTION_DIRECTION(  /* FNORMALIZEVECTOR */ sub_65271( (vector( 517.40000000, -17.09000000, 5.65000000)) - (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1656() ))) ) );
                CAMERA_SNAP_POINT_AT_COORD( 517.40000000, -17.09000000, 5.65000000 );
            }
        }
         /* P_CREATE_AND_START_TIMER */ sub_57368( ref l_U466, 600 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_POLICE_CP_08", "VIG_04B_PP_CAM", 0, 0, 0, 0, 0.00000000, 0, 0 );
         /* WRITESCRIPTLOG */ sub_793( "RJM", "F_IS_BIGASS_INTRO_COMPLETED - Going to ASS_PLAYING", 0 );
        l_U438 = 4;
        case 4:
        if (NOT IS_ANIMATED_CAMERA_PLAYING())
        {
            if (l_U475)
            {
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( 60.48900000, 1065353216, 0 );
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( -7.21938800, 1065353216, 0 );
            }
            CAMERA_ANIMATED_STOP( 0, 1 );
             /* WRITESCRIPTLOG */ sub_793( "RJM", "F_IS_BIGASS_INTRO_COMPLETED - Going to ASS_FINISHED", 0 );
            l_U438 = 5;
        }
        if ( /* ISTIMERDONE */ sub_2956( ref l_U466 ))
        {
            if (NOT (IS_PED_DEAD( l_U437 )))
            {
                 /* P_ACTIVATEPED */ sub_58430( l_U437 );
                PLAY_SOUND_FROM_COORD( -1, "S_POLICE_DOOR_KICK", 517.50000000, -17.09000000, 4.96000000 );
                PED_SET_ACTION_INTENTION( l_U437, 47, 1000, 0, 0, 0 );
                TASK_FOLLOW_NAV_MESH_TO_COORD( l_U437, 517.63000000, -7.93000000, 3.90000000, 4, 20000, 1048576000, 0, 0 );
            }
        }
        if (NOT l_U501)
        {
            if (NOT (IS_PED_DEAD( l_U437 )))
            {
                if ((PED_GET_ACTION_INTENTION_STATUS( l_U437, 48 )) == 3)
                {
                     /* P_OPENDOOR */ sub_65909( ref g_U3918, 0, 0, 1065353216 );
                     /* P_OPENDOOR */ sub_65909( ref g_U3925, 1, 0, 1065353216 );
                     /* P_CREATE_AND_START_TIMER */ sub_57368( ref l_U457, 1000 );
                    l_U501 = 1;
                }
            }
        }
        if ( /* HASTIMERBEENACTIVATED */ sub_5509( ref l_U457 ))
        {
            if ( /* ISTIMERDONE */ sub_2956( ref l_U457 ))
            {
                 /* P_CLOSEDOOR */ sub_45732( ref g_U3918, 0 );
                 /* P_CLOSEDOOR */ sub_45732( ref g_U3925, 0 );
                 /* DISABLETIMER */ sub_66154( ref l_U457 );
            }
        }
        break;
        case 5:
        for ( I = 0; I <= (l_U390 - 1); I++ )
        {
            if ((NOT (IS_PED_DEAD( l_U390[I] ))) || (IS_PED_DEAD( l_U390[I] )))
            {
                if (IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U390[I], "tb_F2_MaxTooCloseToBigass" ))
                {
                    SET_PED_FREEZE_PROCESSING( l_U390[I], 0 );
                    SET_PED_VISIBLE( l_U390[I], 1 );
                    SET_PED_VISIBLE_DURING_SEQUENCE( l_U390[I], 1 );
                    FREEZE_PED_POSITION( l_U390[I], 0 );
                    SET_PED_COLLISION( l_U390[I], 1 );
                    SET_PED_PROOFS( l_U390[I], 0, 0, 0, 0, 0 );
                }
            }
        }
         /* P_CLOSEDOOR */ sub_45732( ref g_U3918, 1 );
         /* P_CLOSEDOOR */ sub_45732( ref g_U3925, 1 );
         /* P_SETDOORLOCKED */ sub_45999( ref g_U3918, 1 );
         /* P_SETDOORLOCKED */ sub_45999( ref g_U3925, 1 );
        CAMERA_CLEAR_POINT_AT_TARGET();
        RESET_FORCED_AIM_INTENTION_DIRECTION();
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
        {
            CLEAR_PED_DEFAULT_AIM(  /* PLAYER_PED_ID */ sub_1656() );
        }
         /* P_CREATE_AND_START_TIMER */ sub_57368( ref l_U448, 500 );
         /* NIS_POST_SETUP */ sub_53575( 1, 1 );
         /* MAL_SETLOCKEDANDREGISTEREDONPLAYER */ sub_63950( ref l_U437 );
         /* MAL_UNBLOCKANDCOMBATPLAYER */ sub_66545( ref l_U437, 2, 0 );
        return 1;
        break;
    }
    return 0;
}

/* FNORMALIZEVECTOR */ void sub_65271(unknown uParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown Result;
    unknown uVar7;
    unknown uVar8;

    uVar5 = SQRT( ((uParam0._fU0 * uParam0._fU0) + (uParam0._fU4 * uParam0._fU4)) + (uParam0._fU8 * uParam0._fU8) );
    Result._fU0 = uParam0._fU0 / uVar5;
    Result._fU4 = uParam0._fU4 / uVar5;
    Result._fU8 = uParam0._fU8 / uVar5;
    return Result;
}

/* P_OPENDOOR */ void sub_65909(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if (( /* F_DOESDOOREXIST */ sub_45758( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_45842( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

/* DISABLETIMER */ void sub_66154(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

/* MAL_UNBLOCKANDCOMBATPLAYER */ void sub_66545(unknown uParam0, unknown uParam1, unknown uParam2)
{
     /* MAL_UNBLOCKANDCOMBATPED */ sub_66595( uParam0,  /* PLAYER_PED_ID */ sub_1656(), uParam1, uParam2 );
    return;
}

/* MAL_UNBLOCKANDCOMBATPED */ void sub_66595(unknown uParam0, unknown uParam1, unknown uParam2, boolean bParam3)
{
    unknown uVar6;

     /* MAL_WRITESCRIPTLOG */ sub_66657( "MAL_UnblockAndCombatPed" );
    OPEN_SEQUENCE_TASK( ref uVar6 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
         /* MAL_WRITESCRIPTLOG */ sub_66657( "MAL_UnblockAndCombatPed: Victim is not dead" );
        TASK_COMBAT_PED( 0, uParam1 );
    }
    CLOSE_SEQUENCE_TASK( uVar6 );
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
         /* MAL_WRITESCRIPTLOG */ sub_66657( "MAL_UnblockAndCombatPed: Ped is not dead" );
        if (bParam3)
        {
            CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        }
        else
        {
            CLEAR_PED_TASKS( (uParam0^) );
        }
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam2 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar6 );
    }
    CLEAR_SEQUENCE_TASK( uVar6 );
    return;
}

/* MAL_WRITESCRIPTLOG */ void sub_66657(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar3, 1537, "MSWW", 1537, uParam0, 1537, "###" );
    return;
}

/* GET_DISTANCE_BETWEEN_PEDS */ void sub_67288(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    }
    if (bParam2)
    {
        return VDIST( uVar5, uVar8 );
        break;
    }
    return VDIST( uVar5._fU0, uVar5._fU4, 0, uVar8._fU0, uVar8._fU4, 0 );
}

/* F_CAN_AMBIENT_SPEECH_PLAY */ int sub_67975()
{
    if ((l_U156._fU16) || ( /* ISTIMERDONE */ sub_2956( ref l_U156 )))
    {
        return 1;
    }
    return 0;
}

/* CUTSYS_HANDLETRIGGERTYPEDOOR_NOHOLSTERING */ int sub_68282(int iParam0, unknown uParam1, boolean bParam2, boolean bParam3)
{
    if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_59115( iParam0, 0 )) == 1)
    {
        if (NOT bParam3)
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1656(), 1 );
        }
        if (NOT bParam2)
        {
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1694(), 0 );
        }
    }
    if ((NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_58826( (iParam0^) ))) AND (iParam0->_fU64))
    {
        iParam0->_fU64 = 0;
        if (NOT bParam3)
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1656(), 0 );
        }
        if (NOT bParam2)
        {
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1694(), 1 );
        }
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_59115( uParam1, 0 ))
    {
        return 1;
    }
    return 0;
}

/* P_SETDOORLATCH */ void sub_68596(int iParam0, unknown uParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_45758( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_45842( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_LATCH( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

/* P_F2_MID_09_CUTSCENEREGISTRATION */ void sub_68783()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_793( "GA", "P_F2_MID_09_CutsceneRegistration start", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
    {
        uVar2 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_47674();
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_PI_Clt1911_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_1656(), 517.58000000, -20.61000000, 3.90035000, 153.85000000 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_1656(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        CUTSCENE_FORCE_GAMEPLAY_HEADING_PITCH_UPDATE();
    }
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U3925._fU0, g_U3925._fU4 );
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U3918._fU0, g_U3918._fU4 );
     /* WRITESCRIPTLOG */ sub_793( "GA", "P_F2_MID_09_CutsceneRegistration end", 0 );
    return;
}

/* P_F2_MID_09_PP_HANDLECUTSCENE */ void sub_69140()
{
    int iVar2;
    int I;

    if (l_U692._fU52)
    {
        if (IS_SCREEN_FADED_OUT())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
         /* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ sub_49897( 1 );
        iVar2 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_47674();
        if ((GET_DOES_WEAPON_EXIST( iVar2 )) == 1)
        {
            if (iVar2 == (GET_WEAPON_FROM_SLOT(  /* PLAYER_PED_ID */ sub_1656(), 0 )))
            {
                SET_WEAPON_SLOT(  /* PLAYER_PED_ID */ sub_1656(), iVar2, 1 );
            }
        }
        SET_FORCED_AIM_INTENTION_DIRECTION( -0.98213400, -0.18725700, -0.01863200 );
        SET_FORCED_FORWARD_DIRECTION( -0.44072200, -0.89764300, 0.00000000 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( -53.06000000, 0, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( -3.96700000, 0, 0 );
        for ( I = 0; I <= 7; I++ )
        {
            if (IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U390[I], "tb_F2_Mid09_CleanDeadBodies" ))
            {
                 /* CLEANPED */ sub_9494( l_U390[I] );
            }
        }
        if (IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U437, "tb_F2_Mid09_CleanDeadBodies" ))
        {
             /* CLEANPED */ sub_9494( l_U437 );
        }
    }
    return;
}

/* F_F2_MID_09_PP_POSTCUTSCENE */ int sub_69515()
{
    return 1;
}

/* P_F2_MID_09_PREPAREBLENDOUT */ void sub_69564()
{
     /* P_SET_PLAYER_WEAPONS_VISIBLE */ sub_53195( 1 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( -53.06000000, 0, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( -3.96700000, 0, 0 );
    AUD_SET_IS_POWER_ON( 1 );
    return;
}

/* F_F2_MID_09_HANDLEBLENDOUT */ int sub_69658()
{
    if (IS_SCREEN_FADED_OUT())
    {
        DO_SCREEN_FADE_IN( 0 );
    }
    return 1;
}

/* P_F2_CREATE_PROJECTOR_SLIDE */ void sub_69810(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_793( "GA", "P_F2_CREATE_PROJECTOR_SLIDE start", 0 );
     /* CLEANOBJECT */ sub_9613( l_U869 );
    l_U869 =  /* CREATEOBJECTNOOFFSET */ sub_46352( uParam0, 509.95200000, -21.51700000, 6.02300000, 0.00000000, 0.00000000, 90.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U869 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U869, ref g_U3397 );
    }
     /* WRITESCRIPTLOG */ sub_793( "GA", "P_F2_CREATE_PROJECTOR_SLIDE end", 0 );
    return;
}

/* F_IS_PROJECTOR_DAMAGED */ int sub_70370()
{
    if (HAS_OBJECT_BEEN_DAMAGED( l_U869 ))
    {
        if (l_U783._fU0)
        {
             /* WRITESCRIPTLOG */ sub_793( "AT", "Projector is damaged! Turning off POI!", 0 );
             /* P_ENABLE_POI */ sub_8417( ref l_U783, 0 );
        }
        return 1;
    }
    return 0;
}

/* P_HANDLE_MID_10_PP */ void sub_70742()
{
    switch (l_U1063)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_793( "AT", "Setting up NIS.", 0 );
         /* NIS_PRE_SETUP */ sub_52651( 1, 0, 0, 1 );
         /* TELEPORTPED */ sub_10459(  /* PLAYER_PED_ID */ sub_1656(), l_U885, l_U888 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
        {
            SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1656(), 0 );
        }
         /* NIS_CREATE_STATIC_CAM */ sub_70944( ref l_U889, l_U920, l_U923, 1110704128, 1000 );
         /* NIS_PLAY_STATIC_CAMERA */ sub_71179( ref l_U889 );
         /* CREATETIMER */ sub_2440( ref l_U1041, 1, 1, 0 );
         /* STARTTIMER */ sub_2590( ref l_U1041 );
         /* CREATETIMER */ sub_2440( ref l_U1032, l_U1051, 1, 0 );
         /* STARTTIMER */ sub_2590( ref l_U1032 );
         /* WRITESCRIPTLOG */ sub_793( "AT", "currentMID10State = MID_10_WAIT_FOR_BUTTON", 0 );
        l_U1063 = 2;
        break;
        case 3:
         /* P_HANDLE_ON_SCREEN_PROMPT_VISIBLILTY */ sub_71401();
        if (NOT IS_PAUSE_MENU_ACTIVE())
        {
            if (IS_CONTROL_JUST_PRESSED( 2, 83 ))
            {
                 /* WRITESCRIPTLOG */ sub_793( "AT", "Player chose to exit. Returning to gameplay.", 0 );
                UI_SET( 0, 2, 1537, "wrldPrecinct", 257, 0 );
                UI_SET( 0, 2, 1537, "PPPrompts", 257, 0 );
                 /* WRITESCRIPTLOG */ sub_793( "AT", "currentMID10State = MID_10_EXIT", 0 );
                l_U1063 = 5;
                break;
            }
            if (IS_CONTROL_JUST_PRESSED( 2, 85 ))
            {
                 /* WRITESCRIPTLOG */ sub_793( "AT", "Player chose to advance slide.", 0 );
                UI_SET( 0, 2, 1537, "wrldPrecinct", 257, 0 );
                UI_SET( 0, 2, 1537, "PPPrompts", 257, 0 );
                 /* CREATETIMER */ sub_2440( ref l_U1041, 1, 1, 0 );
                 /* STARTTIMER */ sub_2590( ref l_U1041 );
                 /* CREATETIMER */ sub_2440( ref l_U1032, l_U1051, 1, 0 );
                 /* STARTTIMER */ sub_2590( ref l_U1032 );
                 /* WRITESCRIPTLOG */ sub_793( "AT", "currentMID10State = MID_10_WAIT_FOR_BUTTON", 0 );
                l_U1063 = 2;
                break;
            }
        }
        break;
        case 2:
        if ( /* ISTIMERDONE */ sub_2956( ref l_U1041 ))
        {
            l_U884++;
            if (l_U884 >= 6)
            {
                l_U884 = 1;
            }
            if ((NOT (ARE_STRINGS_EQUAL( l_U1024[l_U884], "" ))) AND (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "spol_SlideShow" ))))
            {
                 /* KILL_ANY_MISSION_SPEECH */ sub_56938( 0 );
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_3223( ref l_U963[l_U884] );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_3334( 0,  /* PLAYER_PED_ID */ sub_1656(), "MAX", ref l_U963[l_U884], 2, 0 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_3334( 1,  /* PLAYER_PED_ID */ sub_1656(), "MAX", ref l_U963[l_U884], 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_3604( l_U1024[l_U884], ref l_U963[l_U884], 8, 1 );
                if (l_U884 == 5)
                {
                    FOUND_EXPLORATION_ITEM( "spol_SlideShow" );
                }
            }
             /* P_F2_CREATE_PROJECTOR_SLIDE */ sub_69810( l_U870[l_U884] );
            PLAY_SOUND_FRONTEND( -1, "S_POLICE_PROJECTOR_CLICK" );
        }
        if ((l_U1041._fU16) AND (((l_U1032._fU16) || ( /* ISTIMERDONE */ sub_2956( ref l_U1032 ))) AND (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_4852( l_U963[l_U884] )))))
        {
            UI_SET( 0, 2, 1537, "wrldPrecinct", 257, 1 );
            UI_SET( 0, 2, 1537, "PPPrompts", 257, 1 );
             /* TELEPORTPED */ sub_10459(  /* PLAYER_PED_ID */ sub_1656(), l_U885, l_U888 );
             /* P_RESET_MAX_ACTION_TREE */ sub_72509();
            RESET_PLAYER_INPUT_GAIT( 0 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U1052, 0, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U1053, 0, 0 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
            {
                TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_1656() );
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1656() );
            }
             /* WRITESCRIPTLOG */ sub_793( "AT", "currentMID10State = MID_10_LISTEN_FOR_BUTTON", 0 );
            l_U1063 = 3;
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
        {
            SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1656(), 1 );
            CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1656() );
            TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_1656() );
        }
         /* NIS_RETURN_TO_GAMEPLAY_CAM */ sub_73064( 0, 0, 0, -859915232, -859915232, 0 );
         /* NIS_POST_SETUP */ sub_53575( 0, 1 );
         /* WRITESCRIPTLOG */ sub_793( "AT", "currentMID10State = MID_10_IDLE", 0 );
        l_U1063 = 0;
         /* WRITESCRIPTLOG */ sub_793( "AT", "eCheckpointState = CP_GAMEPLAY_F2_PRESENTATION_ROOM", 0 );
        l_U229 = 15;
        break;
    }
    return;
}

/* NIS_CREATE_STATIC_CAM */ void sub_70944(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_2440( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref l_U39, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* NIS_PLAY_STATIC_CAMERA */ void sub_71179(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_2590( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

/* P_HANDLE_ON_SCREEN_PROMPT_VISIBLILTY */ void sub_71401()
{
    if ((NOT l_U1031) AND (IS_PAUSE_MENU_ACTIVE()))
    {
        UI_SET( 0, 2, 1537, "wrldPrecinct", 257, 0 );
        UI_SET( 0, 2, 1537, "PPPrompts", 257, 0 );
        l_U1031 = 1;
    }
    else if ((l_U1031) AND (NOT IS_PAUSE_MENU_ACTIVE()))
    {
        UI_SET( 0, 2, 1537, "wrldPrecinct", 257, 1 );
        UI_SET( 0, 2, 1537, "PPPrompts", 257, 1 );
        l_U1031 = 0;
    }
    return;
}

/* P_RESET_MAX_ACTION_TREE */ void sub_72509()
{
     /* WRITESCRIPTLOG */ sub_793( "GA", "P_RESET_MAX_ACTION_TREE start", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1656() )))
    {
        if (IS_PLAYER_SHOOTDODGING())
        {
            SCRIPT_ASSERT( "Do not try to reset Max's action tree when he is shoot dodging.", 0 );
             /* WRITESCRIPTLOG */ sub_793( "GA", "You cannot reset Max's action tree during a shoot dodge.", 0 );
        }
        else
        {
            PED_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_1656(), "/Global/Player" );
        }
    }
     /* WRITESCRIPTLOG */ sub_793( "GA", "P_RESET_MAX_ACTION_TREE end", 0 );
    return;
}

/* NIS_RETURN_TO_GAMEPLAY_CAM */ void sub_73064(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

/* P_HANDLE_ANIMATED_CAMERA_DEBUG_WIDGET */ void sub_73888()
{
    if (NOT l_U1546)
    {
        START_WIDGET_GROUP( "Camera" );
        ADD_WIDGET_INT_SLIDER( "Animated Cam Start Interp", ref l_U261, 0, 10000, 1 );
        ADD_WIDGET_INT_SLIDER( "Animated Cam Interp", ref l_U262, 0, 10000, 1 );
        ADD_WIDGET_INT_SLIDER( "Trigger snitch", ref l_U423, 0, 10000, 1 );
        STOP_WIDGET_GROUP();
        l_U1546 = 1;
    }
    return;
}

/* P_HANDLE_SLIDE_SEQUENCE */ void sub_74105()
{
    if (NOT l_U1547)
    {
        START_WIDGET_GROUP( "Slide Sequence" );
        ADD_WIDGET_INT_SLIDER( "Slide to show", ref l_U884, 0, 4, 1 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_74235( ref l_U885, "Player Position", 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Player heading", ref l_U888, -360.00000000, 360.00000000, 0.01000000 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_74235( ref l_U920, "NIS Position 1", 0.01000000 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_74235( ref l_U923, "NIS Rotation 1", 0.01000000 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_74235( ref l_U957, "NIS Position 2", 0.01000000 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_74235( ref l_U960, "NIS Rotation 2", 0.01000000 );
        ADD_WIDGET_INT_SLIDER( "Slide Advance time", ref l_U1050, 0, 5000, 1 );
        ADD_WIDGET_INT_SLIDER( "Button fudge time", ref l_U1051, 0, 5000, 1 );
        ADD_WIDGET_FLOAT_SLIDER( "Gameplay heading", ref l_U1052, -360.00000000, 360.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Gameplay pitch", ref l_U1053, -360.00000000, 360.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "POI Camera" );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_74235( ref l_U1378, "Camera Pos", 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Camera Rot", ref l_U1381, -360.00000000, 360.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        l_U1547 = 1;
    }
    return;
}

/* P_ADD_WIDGET_VECTOR_SLIDER */ void sub_74235(int iParam0, unknown uParam1, unknown uParam2)
{
    START_WIDGET_GROUP( uParam1 );
    ADD_WIDGET_FLOAT_SLIDER( "x", iParam0 + 0, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "y", iParam0 + 4, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "z", iParam0 + 8, 60536, 5000, uParam2 );
    STOP_WIDGET_GROUP();
    return;
}

/* P_RELEASE_F2_ASSETS */ void sub_74848()
{
     /* WRITESCRIPTLOG */ sub_793( "GA", "P_RELEASE_F2_ASSETS start", 0 );
     /* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ sub_74927( ref l_U212, ref g_U2468 );
     /* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ sub_74927( ref l_U218, ref g_U2468 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE_ARRAY */ sub_75488( ref l_U225, ref g_U2613 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_75562( l_U502, ref g_U2613 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_50724( "EXPL_CAM", ref g_U2741 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_50724( "LEVEL_S_POLICE_CP_08", ref g_U2741 );
     /* P_STREAMREQ_AUDIO_BANK_REMOVE */ sub_76012( "SCRIPT_MISSION\S_POLICE_CUBICLES", ref g_U2889 );
     /* WRITESCRIPTLOG */ sub_793( "GA", "P_RELEASE_F2_ASSETS end", 0 );
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ void sub_74927(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_75000( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE */ void sub_75000(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_7383( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a MODEL_NAME asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Removing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE_ARRAY */ void sub_75488(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_75562( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE */ void sub_75562(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_7383( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a WEAPON_TYPE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_AUDIO_BANK_REMOVE */ void sub_76012(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_7383( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a AUDIO_BANK asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}


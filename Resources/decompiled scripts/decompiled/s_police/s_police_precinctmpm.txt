void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    StrCopy( ref l_U39, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U47, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U55 = {0, 0, 0};
    StrCopy( ref l_U58, "DUMMY", 32 );
    l_U66 = 1;
    l_U71 = 0;
    l_U72 = 0;
    l_U73 = 0;
    l_U76 = 0;
    l_U140 = 0;
    l_U141 = 0;
    l_U142 = 1500;
    l_U153 = 0;
    l_U155 = -1;
    l_U156 = {64536, 64536, 64536};
    l_U237 = "PED_DEF";
    l_U279 = 1.00000000;
    l_U291 = 0;
    l_U332 = 0;
    l_U361 = 12;
    l_U454 = 0;
    l_U455 = 1;
    l_U456 = 1;
    l_U457 = 0;
    l_U458 = 0;
    l_U459 = "13_04_PP_concat";
    l_U546 = {1008.66000000, -1.73000000, 8.30000000};
    l_U549 = 0.27000000;
    l_U551 = {1006.45800000, 7.37060000, 7.41400000};
    l_U554 = {1006.45800000, -13.10000000, 7.41400000};
    l_U557 = {0.00000000, 0.00000000, 90.00000000};
    l_U560 = {1008.27600000, -13.34948000, 8.68201200};
    l_U563 = {2.00873900, -0.00000000, 68.03176000};
    l_U725 = -1;
    l_U983 = {1004.93200000, -28.10000000, 9.00000000};
    l_U1124 = {1005.86500000, -22.22600000, 8.72000000};
    l_U1191 = 0;
    l_U1192 = 0;
    l_U1287 = 0;
    l_U1487 = 0;
    l_U1488 = 0;
    l_U1489 = 0;
     /* WRITESCRIPTLOG */ sub_760( "AT", "Script s_police_precinctMPM.sc is starting up...", 0 );
     /* P_SETUP_ASSET_ARRAYS */ sub_878();
    l_U454 = 1;
    while (NOT IS_EXITFLAG_SET())
    {
         /* P_HANDLE_FAILURE */ sub_1050();
        if (l_U457 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_15938();
        }
        WAIT( 0 );
    }
     /* P_CLEANUP_PRECINCTMPM */ sub_6973();
     /* P_RELEASE_PRECINCTMPM_ASSETS */ sub_69723();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_police_precinctMPM" );
     /* WRITESCRIPTLOG */ sub_760( "AT", "Script s_police_precinctMPM.sc is terminating...", 0 );
    return;
}

/* WRITESCRIPTLOG */ void sub_760(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_SETUP_ASSET_ARRAYS */ void sub_878()
{
     /* WRITESCRIPTLOG */ sub_760( "AT", "P_SETUP_ASSET_ARRAYS", 0 );
    l_U1491[0] = g_U3228;
    l_U1491[1] = -1124233802;
    l_U1491[2] = -422856175;
    l_U1491[3] = -760991695;
    l_U1491[4] = -1409914275;
    l_U1491[5] = -1589640354;
    return;
}

/* P_HANDLE_FAILURE */ void sub_1050()
{
    if ((g_U821 == 14) || (g_U821 == 13))
    {
        switch (l_U457)
        {
            case 0:
            if (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() ))
            {
                l_U457 = 1;
                 /* WRITESCRIPTLOG */ sub_760( "AT", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            if ( /* RESTARTING_CHECKPOINT */ sub_1321())
            {
                 /* P_CLEANUP_PRECINCT_MPM */ sub_1777();
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1159() );
                 /* P_RESET_PED_ACTION_TREE */ sub_2171(  /* PLAYER_PED_ID */ sub_1159() );
                l_U457 = 1;
                 /* WRITESCRIPTLOG */ sub_760( "AT", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
             /* P_HANDLE_PAINKILLER_PICKUP_DIALOGUE */ sub_2389( 1 );
            if ( /* IS_RESTART_ACTIVE */ sub_5480())
            {
                l_U457 = 3;
            }
            else if (( /* F_CHECK_QUIT_RETRY */ sub_5540( 0 )) == 1)
            {
                l_U457 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )))
            {
                l_U457 = 3;
                 /* WRITESCRIPTLOG */ sub_760( "AT", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
             /* WRITESCRIPTLOG */ sub_760( "AT", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() ))) AND (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1197() ))))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1197(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1159() ))
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1159(), 0 );
                }
            }
            if ((g_U862[15]._fU40 != 4) AND (g_U862[15]._fU40 != 0))
            {
                 /* WRITESCRIPTLOG */ sub_760( "CR", "Shutting down script for MCE_KILLROOM.", 0 );
                 /* P_RESET_CHECKPOINT_THREAD */ sub_6847( ref g_U862[15] );
                SET_EXITFLAG_FOR_SCRIPT( g_U862[15]._fU32 );
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            AUDIO_MUSIC_STOP_ONESHOT();
             /* P_CLEANUP_PRECINCTMPM */ sub_6973();
             /* P_FORCE_SCENE_TO_LOAD */ sub_10389( 14 );
            l_U457 = 4;
             /* WRITESCRIPTLOG */ sub_760( "AT", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
             /* WRITESCRIPTLOG */ sub_760( "AT", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            if (g_U821 == 13)
            {
                 /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_10835( ref l_U372,  /* PLAYER_PED_ID */ sub_1159() );
            }
            else
            {
                 /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_10835( ref l_U408,  /* PLAYER_PED_ID */ sub_1159() );
            }
            if (IS_CUSTOM_PLAYER_VARIATION() == 0)
            {
                 /* P_MAKEPOLICEPRECINCTV2MAX */ sub_15365(  /* PLAYER_PED_ID */ sub_1159() );
                PRELOAD_PLAYER_VARIATION(  /* PLAYER_PED_ID */ sub_1159(), 2, 20, 0, 0 );
                PRELOAD_PLAYER_VARIATION(  /* PLAYER_PED_ID */ sub_1159(), 0, 0, 11, 0 );
                PRELOAD_PLAYER_VARIATION(  /* PLAYER_PED_ID */ sub_1159(), 3, 3, 2, 0 );
                PRELOAD_PLAYER_VARIATION(  /* PLAYER_PED_ID */ sub_1159(), 4, 0, 0, 0 );
                PRELOAD_PLAYER_VARIATION(  /* PLAYER_PED_ID */ sub_1159(), 12, 0, 1, 0 );
                PRELOAD_PLAYER_VARIATION(  /* PLAYER_PED_ID */ sub_1159(), 2, 20, 0, 0 );
                PRELOAD_PLAYER_VARIATION(  /* PLAYER_PED_ID */ sub_1159(), 2, 11, 0, 3 );
            }
            l_U456 = 0;
            l_U457 = 5;
             /* WRITESCRIPTLOG */ sub_760( "AT", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
             /* WRITESCRIPTLOG */ sub_760( "AT", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U454 = 1;
            l_U457 = 0;
             /* WRITESCRIPTLOG */ sub_760( "AT", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

/* PLAYER_PED_ID */ int sub_1159()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_1197() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_1197()
{
    return GET_PLAYER_ID();
}

/* RESTARTING_CHECKPOINT */ int sub_1321()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1159(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1197(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1197(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1159() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1159(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* P_CLEANUP_PRECINCT_MPM */ void sub_1777()
{
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ISEQ_UNREGISTER_ENTITY( 870768972, "police_mpm_player" );
    ENABLE_MPM( 0 );
    ENABLE_ALL_ADRENALINE( 1 );
    DISPLAY_HUD( 1 );
    SET_CAM_VIEW_MODE( 2 );
    SET_SILHOUETTE_ACTIVE( 1 );
    SET_CAMERA_OVERRIDE( "", "", 0, 1, 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )))
    {
        SET_PED_PROOFS(  /* PLAYER_PED_ID */ sub_1159(), 0, 0, 0, 0, 0 );
        SET_PED_CONSUMING_AMMO(  /* PLAYER_PED_ID */ sub_1159(), 1 );
        SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1197(), 1 );
        SET_PED_CAN_SWITCH_WEAPON(  /* PLAYER_PED_ID */ sub_1159(), 1 );
    }
    l_U1489 = 1;
     /* P_STOP_SP_CHALLENGES_MPM */ sub_1989();
    return;
}

/* P_STOP_SP_CHALLENGES_MPM */ void sub_1989()
{
     /* WRITESCRIPTLOG */ sub_760( "CCB", "P_STOP_SP_CHALLENGES_MPM", 0 );
     /* WRITESCRIPTLOG */ sub_760( "CCB", "Stopping the Precinct_MPM context...", 0 );
    END_CONTEXT( "Precinct_MPM" );
    return;
}

/* P_RESET_PED_ACTION_TREE */ void sub_2171(int iParam0)
{
    if (NOT (IS_PED_DEAD( iParam0 )))
    {
        CLEAR_PED_TASKS( iParam0 );
        if (iParam0 == ( /* PLAYER_PED_ID */ sub_1159()))
        {
            PED_ACTION_TREE_PLAY_NODE( iParam0, "/Global/Player/PlayerLoco" );
        }
        else
        {
            PED_ACTION_TREE_PLAY_NODE( iParam0, "/Global/NPC/NpcLoco" );
        }
    }
    return;
}

/* P_HANDLE_PAINKILLER_PICKUP_DIALOGUE */ void sub_2389(boolean bParam0)
{
    int iVar3;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )))
    {
        if (NOT (IS_PED_IN_COMBAT(  /* PLAYER_PED_ID */ sub_1159() )))
        {
            if ((NOT l_U352._fU16) AND (NOT l_U352._fU20))
            {
                 /* WRITESCRIPTLOG */ sub_760( "AT", "Starting painkiller dialogue timer.", 0 );
                 /* CREATETIMER */ sub_2553( ref l_U352, 3500, 1, 0 );
                 /* STARTTIMER */ sub_2703( ref l_U352 );
            }
            if ((l_U352._fU16) AND ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_2832()))
            {
                 /* WRITESCRIPTLOG */ sub_760( "AT", "Dialogue detected. Restarting painkiller dialogue timer.", 0 );
                 /* CREATETIMER */ sub_2553( ref l_U352, 3500, 1, 0 );
                 /* STARTTIMER */ sub_2703( ref l_U352 );
            }
            iVar3 = GET_PAYNEKILLER_AMT();
            if (iVar3 > l_U361)
            {
                if (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_2832()))
                {
                    if ((l_U352._fU16) || ( /* ISTIMERDONE */ sub_3069( ref l_U352 )))
                    {
                        if (g_U4303 < 6)
                        {
                            if ((GET_RANDOM_INT_IN_RANGE( 0, 500 )) < 300)
                            {
                                 /* WRITESCRIPTLOG */ sub_760( "GA", "Playing painkiller monologue.", 0 );
                                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_3336( ref l_U362 );
                                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_3447( 0,  /* PLAYER_PED_ID */ sub_1159(), "MAX", ref l_U362, 2, 0 );
                                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_3447( 1,  /* PLAYER_PED_ID */ sub_1159(), "MAX", ref l_U362, 2, 0 );
                                 /* PLAY_SINGLE_SPEECH */ sub_3717( "SPOL_PLFNDPL", ref l_U362, 8, 1 );
                                g_U4303++;
                            }
                            else
                            {
                                 /* WRITESCRIPTLOG */ sub_760( "GA", "Not playing painkiller speech, failed random chance test.", 0 );
                            }
                        }
                        else
                        {
                             /* WRITESCRIPTLOG */ sub_760( "GA", "Not Playing painkiller speech, already played all 6 lines.", 0 );
                        }
                    }
                    else
                    {
                         /* WRITESCRIPTLOG */ sub_760( "GA", "Not playing painkiller speech, not long enough since last dialogue.", 0 );
                    }
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_760( "GA", "Not playing painkiller speech, another speech is currently playing.", 0 );
                }
            }
            l_U361 = iVar3;
        }
        if ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_4965( l_U362 ))
        {
            if (NOT HAS_CUTSCENE_FINISHED())
            {
                 /* WRITESCRIPTLOG */ sub_760( "GA", "Killing painkiller speech for cutscene playing.", 0 );
                 /* KILL_SPEECH */ sub_5267( ref l_U362, 0 );
            }
        }
    }
    if (bParam0)
    {
         /* CREATETIMER */ sub_2553( ref l_U352, 20000, 1, 0 );
         /* STARTTIMER */ sub_2703( ref l_U352 );
    }
    return;
}

/* CREATETIMER */ void sub_2553(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_2703(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* IS_ANY_SPEECH_CURRENTLY_PLAYING */ void sub_2832()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

/* ISTIMERDONE */ int sub_3069(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_3336(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_3447(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_3717(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_3762( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_3762(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_3849( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_3849(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_3901( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_4419( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_3901(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_4419(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* IS_SPEECH_CURRENTLY_PLAYING */ int sub_4965(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_5008( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

/* IS_SCRIPT_SPEECH_STRUCT_VALID */ boolean sub_5008(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

/* KILL_SPEECH */ void sub_5267(int iParam0, unknown uParam1)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_5008( (iParam0^) )))
    {
        ;
    }
    else
    {
        PRINTSTRING( "\n KILL SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
        {
            if (iParam0->_fU8 == g_U6[iParam0->_fU4])
            {
                STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
            }
        }
    }
    return;
}

/* IS_RESTART_ACTIVE */ void sub_5480()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_5540(int iParam0)
{
    iParam0 = 1;
    switch (l_U141)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_5622( ref l_U143 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )))
            {
                l_U142 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_2553( ref l_U143, l_U142, 1, 1 );
             /* STARTTIMER */ sub_2703( ref l_U143 );
        }
        if ( /* ISTIMERDONE */ sub_3069( ref l_U143 ))
        {
             /* WRITESCRIPTLOG */ sub_760( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1197() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1197(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U141 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U141 = 2;
            }
            else
            {
                l_U141 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_760( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_6105();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_760( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_6105();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_5622(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_6105()
{
     /* WRITESCRIPTLOG */ sub_760( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_6180( ref l_U143 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1197() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1197(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U140 = 0;
    l_U140 = l_U140;
    l_U141 = 0;
    return;
}

/* RESETTIMER */ void sub_6180(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_RESET_CHECKPOINT_THREAD */ void sub_6847(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

/* P_CLEANUP_PRECINCTMPM */ void sub_6973()
{
     /* WRITESCRIPTLOG */ sub_760( "AT", "P_CLEANUP_PRECINCTMPM", 0 );
    if ((CUTSCENE_NAMED_IS_LOADING( l_U459 )) || (CUTSCENE_IS_LOADED( l_U459 )))
    {
         /* WRITESCRIPTLOG */ sub_760( "AT", "Purging loaded cutscene txt_CS_13_04", 0 );
        CLEAR_NAMED_CUTSCENE( l_U459 );
    }
    if ((CUTSCENE_NAMED_IS_LOADING( ref g_U3485 )) || (CUTSCENE_IS_LOADED( ref g_U3485 )))
    {
         /* WRITESCRIPTLOG */ sub_760( "AT", "Purging loaded cutscene txt_MID_13_PP", 0 );
        CLEAR_NAMED_CUTSCENE( ref g_U3485 );
    }
    ISEQ_TERMINATE( 870768972 );
    ISEQ_TERMINATE( 1680861244 );
    ISEQ_TERMINATE( 1479944738 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7269( 1479944738, ref g_U2662 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7269( 870768972, ref g_U2662 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7269( 1680861244, ref g_U2662 );
     /* P_RELEASE_DOOR_BUZZER_SFX */ sub_8360();
     /* CLEANPEDARRAY */ sub_8518( ref l_U1248 );
     /* CLEANPEDARRAY */ sub_8518( ref l_U1274 );
     /* CLEANPEDARRAY */ sub_8518( ref l_U1369 );
     /* CLEANPEDARRAY */ sub_8518( ref l_U1437 );
     /* CLEANPED */ sub_8568( l_U500 );
     /* CLEANOBJECT */ sub_8714( l_U550 );
     /* CLEANPLACEMENTARRAY */ sub_8772( ref l_U536 );
     /* CLEANPLACEMENT */ sub_8827( l_U535 );
     /* CLEANPLACEMENTARRAY */ sub_8772( ref l_U541 );
     /* CLEANOBJECT */ sub_8714( l_U1169 );
     /* P_ENABLE_POI */ sub_8940( ref l_U1038, 0 );
     /* P_SET_POI_AVAILABLE */ sub_9948( ref l_U897, 0 );
     /* NIS_CREATE_STATIC_CAM */ sub_10068( ref l_U661, 1007.22600000, -14.02474000, 8.75711000, 2.32509000, -0.00000000, 58.61480000, 45, 3500 );
     /* P_STOP_SP_CHALLENGES_MPM */ sub_1989();
     /* P_STOP_SP_CHALLENGES */ sub_10304();
    return;
}

/* P_STREAMREQ_ISEQ_REMOVE */ void sub_7269(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_7407( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a ISEQ asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ int sub_7407(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if ((uParam1^)[I] == iParam0)
            {
                DISPLAYF( "[CCB] ### The THREADID index matches the asset requested for removal: {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
            else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID index is in use and is active: {} ###", 1, 513, (uParam1^)[I] );
                Result = I;
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is in use, but is no longer active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

/* P_RELEASE_DOOR_BUZZER_SFX */ void sub_8360()
{
    if (l_U725 != -1)
    {
        STOP_SOUND( l_U725, 0 );
        RELEASE_SOUND_ID( l_U725 );
        l_U725 = -1;
         /* WRITESCRIPTLOG */ sub_760( "AT", "Stopping and releasing PRISONER_EXCHANGE_DOOR_OPEN!", 0 );
    }
    return;
}

/* CLEANPEDARRAY */ void sub_8518(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_8568( (uParam0^)[I] );
    }
    return;
}

/* CLEANPED */ void sub_8568(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CLEANOBJECT */ void sub_8714(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* CLEANPLACEMENTARRAY */ void sub_8772(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* CLEANPLACEMENT */ sub_8827( (uParam0^)[I] );
    }
    return;
}

/* CLEANPLACEMENT */ void sub_8827(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

/* P_ENABLE_POI */ void sub_8940(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
             /* P_ENABLEPOIGLINT */ sub_8999( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_8999( iParam0, 0 );
         /* P_ENABLEPOIINTERACTIONTEXT */ sub_9218( iParam0, 0 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )) == 0)
        {
            TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_1159() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1159(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

/* P_ENABLEPOIGLINT */ void sub_8999(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

/* P_ENABLEPOIINTERACTIONTEXT */ void sub_9218(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_9398( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

/* P_UPDATEINTERACTIONTEXTAVAILABLE */ void sub_9398(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if (( /* F_ISACTIONINGAVAILABLE */ sub_9494( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if (( /* F_ISACTIONINGAVAILABLE */ sub_9494( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

/* F_ISACTIONINGAVAILABLE */ int sub_9494(int iParam0)
{
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1197() )) == 0))
    {
        if (((IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_1159() )) == 1) || (((IS_PED_GETTING_UP(  /* PLAYER_PED_ID */ sub_1159() )) == 1) || (((IS_PED_PICKING_UP_PICKUP(  /* PLAYER_PED_ID */ sub_1159() )) == 1) || (((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_1159() )) == 1) || (((IS_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1159() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1159() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

/* P_SET_POI_AVAILABLE */ void sub_9948(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
     /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_9398( iParam0 );
    return;
}

/* NIS_CREATE_STATIC_CAM */ void sub_10068(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_2553( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref l_U39, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* P_STOP_SP_CHALLENGES */ void sub_10304()
{
     /* WRITESCRIPTLOG */ sub_760( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    return;
}

/* P_FORCE_SCENE_TO_LOAD */ void sub_10389(unknown uParam0)
{
    char[64] cVar3;
    unknown uVar19;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )))
    {
         /* TELEPORTPED */ sub_10465(  /* PLAYER_PED_ID */ sub_1159(), g_U2953[uParam0], g_U3083[uParam0] );
        FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_1159(), 1 );
        if (NOT (IS_STRING_NULL( ref g_U1091[uParam0]._fU0 )))
        {
            StrCopy( ref cVar3, "Loading room: ", 64 );
            ConcatString(ref cVar3, ref g_U1091[uParam0]._fU0, 64);
            PRINTSTRING( ref cVar3 );
            PRINTNL();
            uVar19 = GET_INTERIOR_FROM_NAME( ref g_U1091[uParam0]._fU64, 0 );
            SET_INTERIOR_ACTIVE( uVar19, 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( uVar19, GET_HASH_KEY( ref g_U1091[uParam0]._fU0 ) );
        }
        FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_1159(), 0 );
    }
    return;
}

/* TELEPORTPED */ void sub_10465(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_10835(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_760( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_11054( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_12218( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_12532( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_13011( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_12532( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_13011( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_12532( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_13011( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_13327( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_13011( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_13327( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_13011( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_13899( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_14101( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1159(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_760( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_11054(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_11116( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_11116(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_12218(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_12532(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_12936( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* WRITE_STRING */ void sub_12936(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_13011(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_13327(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_12936( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_13899(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_14101(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_11116( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_14199( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_14199(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_MAKEPOLICEPRECINCTV2MAX */ void sub_15365(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakePolicePrecinctV2Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 10, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 21, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 0, 0, 0 );
    }
    return;
}

/* P_HANDLE_EVENTS */ void sub_15938()
{
    int iVar2;
    int iVar3;
    int iVar4;

    iVar2 = l_U454;
    switch (l_U454)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_760( "AT", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
         /* P_SET_STATIC_DATA */ sub_16176();
         /* P_INITIALIZE_SCRIPT_DATA */ sub_18895();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U458 = 0;
        if (l_U408._fU0)
        {
            l_U458 = 4;
             /* WRITESCRIPTLOG */ sub_760( "teh", "eStartState = START_ARMORY_RELOAD", 0 );
        }
        else if (l_U372._fU0)
        {
            l_U458 = 2;
             /* WRITESCRIPTLOG */ sub_760( "teh", "eStartState = START_MPM_RELOAD", 0 );
        }
        else if (g_U820 == 13)
        {
            l_U458 = 1;
             /* WRITESCRIPTLOG */ sub_760( "teh", "eStartState = START_MPM_START", 0 );
        }
        else if (g_U820 == 14)
        {
            l_U458 = 3;
             /* WRITESCRIPTLOG */ sub_760( "teh", "eStartState = START_ARMORY_START", 0 );
        }
        else
        {
            l_U458 = 0;
             /* WRITESCRIPTLOG */ sub_760( "teh", "eStartState = START_INFLOW", 0 );
        };;;;
        l_U454 = 2;
         /* WRITESCRIPTLOG */ sub_760( "AT", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_760( "AT", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
         /* P_REQUEST_PRECINCTMPM_PERSISTENT_ASSETS */ sub_21246();
         /* P_REQUEST_PRECINCTMPM_NONPERSISTENT_ASSETS */ sub_28241();
        l_U454 = 3;
         /* WRITESCRIPTLOG */ sub_760( "AT", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if (( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_32696( ref g_U2662 )) AND (( /* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ sub_32294( ref g_U2613 )) AND ( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_31897( ref g_U2468 ))))
        {
            if (l_U458 == 3)
            {
                g_U842[14] = 1;
                l_U454 = 4;
            }
            else if (l_U458 == 1)
            {
                g_U842[13] = 1;
                l_U454 = 4;
            }
            else if (l_U458 == 2)
            {
                 /* WRITESCRIPTLOG */ sub_760( "AT", "eCheckpointState = CP_PRESPAWN_ENEMIES", 0 );
                g_U842[13] = 1;
                l_U454 = 6;
            }
            else if (l_U458 == 4)
            {
                g_U842[14] = 1;
                 /* WRITESCRIPTLOG */ sub_760( "AT", "eCheckpointState = CP_PRESPAWN_ENEMIES", 0 );
                l_U454 = 6;
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_760( "AT", "eCheckpointState = CP_PRESPAWN_ENEMIES in flow", 0 );
                l_U454 = 6;
            };;;;
        }
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_760( "AT", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        l_U456 = 0;
        if ((NOT ( /* HAS_SAVEFILE_LOADED */ sub_33483( ref l_U408 ))) AND (NOT ( /* HAS_SAVEFILE_LOADED */ sub_33483( ref l_U372 ))))
        {
             /* F_GIVEPEDWEAPON */ sub_13327(  /* PLAYER_PED_ID */ sub_1159(), 1194438308, 100, 0, 0 );
             /* F_GIVEPEDWEAPONTOHOLSTER */ sub_12532(  /* PLAYER_PED_ID */ sub_1159(), -862236369, 0, 200, 0 );
            SET_PAYNEKILLER_AMT( 7 );
            l_U454 = 5;
             /* WRITESCRIPTLOG */ sub_760( "AT", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U454 = 6;
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1159(), 0 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1159(), 0, 0 ) )))
            {
                l_U454 = 6;
                 /* WRITESCRIPTLOG */ sub_760( "AT", "eCheckpointState = CP_PRESPAWN_ENEMIES", 0 );
            }
        }
        break;
        case 6:
        if (l_U455)
        {
            if ((l_U458 == 0) || ((l_U458 == 1) || (l_U458 == 2)))
            {
                l_U1288 = 1;
                l_U1382 = 1;
                l_U1193 = 1;
                l_U1258 = 1;
            }
            else
            {
                l_U1193 = 1;
                l_U1258 = 1;
            }
        }
        if ((l_U458 == 0) || ((l_U458 == 1) || (l_U458 == 2)))
        {
            if ( /* F_SETUP_SNIPERS */ sub_34074())
            {
                if ( /* F_SETUP_INNER_ARMORY_ENEMIES */ sub_36976())
                {
                    if ( /* F_SETUP_INNER_REINFORCEMENTS */ sub_37651())
                    {
                        g_U822[13] = 1;
                        l_U454 = 8;
                         /* WRITESCRIPTLOG */ sub_760( "AT", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
                    }
                }
            }
        }
        else if ( /* F_SETUP_INNER_ARMORY_ENEMIES */ sub_36976())
        {
            if ( /* F_SETUP_INNER_REINFORCEMENTS */ sub_37651())
            {
                g_U822[14] = 1;
                l_U454 = 8;
                 /* WRITESCRIPTLOG */ sub_760( "AT", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
            }
        }
        break;
        case 8:
        if (g_U842[14])
        {
             /* STARTTIMER */ sub_2703( ref l_U753 );
             /* P_ACTIVATE_ARMORY_INNER_ENEMIES */ sub_38541();
             /* P_ACTIVATE_ARMORY_REINFORCEMENTS */ sub_39235();
             /* P_SETUP_MPM_CART */ sub_39521( 0 );
             /* P_CREATE_ARMORY_PLACEMENTS */ sub_40026();
            l_U1287 = 1;
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1197() )))
            {
                if (NOT (IS_PLAYER_CONTROL_ON(  /* PLAYER_ID */ sub_1197() )))
                {
                    SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1197(), 1, 0 );
                }
            }
            if (IS_DEATH_PANEL_WIPE_ALLOWED())
            {
                DO_SCREEN_FADE_IN( 500 );
            }
             /* WRITESCRIPTLOG */ sub_760( "AT", "eCheckpointState = CP_WAIT_TO_TRIGGER_INNER_FIGHT", 0 );
            l_U454 = 11;
        }
        else if (g_U842[13])
        {
            if (ISEQ_QUERY_STATE( 870768972, 2 ))
            {
                if (l_U456)
                {
                    if (CUTSCENE_IS_LOADED( l_U459 ))
                    {
                         /* WRITESCRIPTLOG */ sub_760( "AT", "eCheckpointState = CP_CS_13_04_PRECINCT", 0 );
                        l_U454 = 9;
                    }
                    else
                    {
                         /* WRITESCRIPTLOG */ sub_760( "AT", "Waiting for 13_04_PP to load ...", 0 );
                    }
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_760( "AT", "eCheckpointState = CP_CS_13_04_PRECINCT", 0 );
                    l_U454 = 9;
                }
            }
        }
        break;
        case 9:
        if (l_U455)
        {
             /* P_SETUP_MPM_CART */ sub_39521( 1 );
             /* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ sub_45981( ref l_U460, l_U459, 41613, 41754, 43029, 43700, 43749, 45841, 250, 0 );
             /* CUTSYS_SETCUTSCENELOADINTERIORONSKIP */ sub_46531( ref l_U460, ref g_U1091[14]._fU64, ref g_U1091[14]._fU0 );
            if (l_U456)
            {
                l_U460._fU4 = 2;
            }
            else
            {
                l_U460._fU4 = 7;
            }
        }
        if ( /* CUTSYS_HANDLECUTSCENE */ sub_46663( ref l_U460 ))
        {
             /* NIS_PRE_SETUP */ sub_47554( 1, 0, 0, 1 );
             /* P_CREATE_ARMORY_PLACEMENTS */ sub_40026();
            SET_CAMERA_OVERRIDE( "BULLETTIME_AIM_CAMERA", "PRECINCT_MPM_AIM_CAMERA", 0, 1, 1 );
             /* P_START_SP_CHALLENGES */ sub_48769();
             /* LOADSEAMLESSCUTSCENE */ sub_31292( ref g_U3485, 0 );
            l_U454 = 10;
             /* WRITESCRIPTLOG */ sub_760( "AT", "eCheckpointState = CP_HANDLE_MPM", 0 );
        }
        break;
        case 10:
        if (DOES_OBJECT_EXIST( l_U550 ))
        {
            FORCE_REMOVE_AND_ADD_OBJECT( l_U550 );
        }
        if (l_U455)
        {
            l_U566 = 0;
            l_U567 = 0;
             /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_26190( -2075384407, ref g_U2613 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )))
            {
                PED_FINISH_ACTION_INTENTION(  /* PLAYER_PED_ID */ sub_1159(), 55 );
                PED_FINISH_ACTION_INTENTION(  /* PLAYER_PED_ID */ sub_1159(), 56 );
            }
            if (l_U372._fU0 == 0)
            {
                g_U821 = 13;
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_49111( ref l_U372, g_U821,  /* PLAYER_PED_ID */ sub_1159(), g_U2953[g_U821], g_U3083[g_U821], g_U3127[g_U821], g_U3171[g_U821], 1 );
            }
        }
        if ((( /* MAL_GETACTINTSTATUS */ sub_53723(  /* PLAYER_PED_ID */ sub_1159(), 55 )) == 3) AND (NOT l_U566))
        {
             /* WRITESCRIPTLOG */ sub_760( "SA", "Starting bullet time.", 0 );
            l_U566 = 1;
            DISPLAY_HUD( 0 );
            ENABLE_CROSSHAIR( 1 );
            ACTIVATE_BULLET_TIME( 0, 0.50000000, 1 );
            ENABLE_MPM( 1 );
            ENABLE_ALL_ADRENALINE( 0 );
            SET_CROSSHAIR_PULSE();
             /* P_HACK_DISABLE_PLAYER_AIM */ sub_53895();
             /* P_START_SP_CHALLENGES_MPM */ sub_54003();
             /* P_START_MPM_SNIPER_STRAFE */ sub_54186( l_U1369[2], 989.20940000, -4.56851100, 8.83059100 );
             /* STARTTIMER */ sub_2703( ref l_U652 );
        }
        if ( /* ISTIMERDONE */ sub_3069( ref l_U652 ))
        {
             /* P_START_MPM_SNIPER_STRAFE */ sub_54186( l_U1369[3], 989.28000000, -11.86000000, 8.83000000 );
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_54468( ref l_U631, 0 ))
        {
             /* WRITESCRIPTLOG */ sub_760( "AT", "Player in trigger box, finishing MPM gameplay portion", 0 );
            l_U1488 = 1;
            ENABLE_CROSSHAIR( 0 );
            DISPLAY_HUD( 0 );
            if ((NOT IS_BULLET_CAMERA_ACTIVE()) AND (NOT (IS_BULLET_CAMERA_RUNNING( 0 ))))
            {
                 /* NIS_CREATE_GAMEPLAY_CAM_COPY */ sub_54789( ref l_U692, 8000 );
                 /* NIS_CREATE_STATIC_CAM */ sub_10068( ref l_U661, l_U560, l_U563, 45, 2000 );
                 /* NIS_PLAY_INTERP_WITH_STATIC_CAMS */ sub_55063( ref l_U692, ref l_U661, 2000, 1, 1 );
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1197(), 0, 0 );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_760( "AT", "Bulletcam is running. Skipping interpolation.", 0 );
                 /* NIS_CREATE_STATIC_CAM */ sub_10068( ref l_U661, l_U560, l_U563, 45, 2000 );
                 /* NIS_PLAY_STATIC_CAMERA */ sub_55302( ref l_U661 );
                DEACTIVATE_BULLET_TIME( 0, 0 );
            }
        }
        if ((l_U1488) AND (NOT l_U1487))
        {
            if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_55441( ref l_U1369 )) < 3)
            {
                if ( /* F_SETUP_MPM_REINFORCEMENTS */ sub_55561())
                {
                     /* P_ACTIVATE_MPM_REINFORCEMENTS */ sub_56441();
                }
            }
        }
        if ((( /* MAL_GETACTINTSTATUS */ sub_53723(  /* PLAYER_PED_ID */ sub_1159(), 56 )) == 3) AND (NOT l_U567))
        {
            l_U567 = 1;
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )))
            {
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U563._fU8, 1065353216, 0 );
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U563._fU0, 1065353216, 0 );
            }
            DEACTIVATE_BULLET_TIME( 1, 0 );
             /* P_ADJUST_PLAYER_STATS_POST_MPM */ sub_57450();
             /* WRITESCRIPTLOG */ sub_760( "GA", "Playing audio music one shot PRECINCT_ONESHOT_6", 0 );
            AUDIO_MUSIC_PLAY_ONESHOT();
             /* WRITESCRIPTLOG */ sub_760( "GA", "Forcing music PRECINCT_FINAL mood PRECINCT_01_1_3_6, fade in over 3 seconds", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_1_3_6", "PRECINCT_01_1_3_6", 0, 4000, 6000, -1082130432, 0 );
             /* WRITESCRIPTLOG */ sub_760( "AT", "MPM is over!", 0 );
        }
        if ( /* NIS_IS_SHOT_FINISHED */ sub_57930( ref l_U661, 1 ))
        {
            if (NOT (IS_PLAYER_CONTROL_ON(  /* PLAYER_ID */ sub_1197() )))
            {
                SNAP_PLAYER_TO_COVERPOINT(  /* PLAYER_ID */ sub_1197(), "GenCover", "5FBC25E3_4E0D60FD_Popover1", 0 );
            }
             /* WRITESCRIPTLOG */ sub_760( "AT", "NIS cam is done. Interpolating back to gameplay cam.", 0 );
             /* NIS_RETURN_TO_GAMEPLAY_CAM */ sub_58249( 1000, 1, 1, l_U563._fU8, l_U563._fU0, 0 );
             /* P_MPM_UNHOLSTER_LEFT_HAND_WEAPON */ sub_58375();
             /* P_CLEANUP_PRECINCT_MPM */ sub_1777();
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1197(), 1, 0 );
            if (DOES_OBJECT_EXIST( l_U550 ))
            {
                SET_OBJECT_COLLISION( l_U550, 1 );
            }
        }
         /* P_PED_ARRAY_Z_SAFETY_CHECK */ sub_58697( ref l_U1369, 6.00000000, 0, 1 );
         /* P_PED_ARRAY_Z_SAFETY_CHECK */ sub_58697( ref l_U1437, 6.00000000, 0, 1 );
        if ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND ((l_U661._fU36) AND ((( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_55441( ref l_U1437 )) == 0) AND (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_55441( ref l_U1369 )) == 0))))
        {
            l_U454 = 11;
             /* WRITESCRIPTLOG */ sub_760( "AT", "eCheckpointState = CP_WAIT_TO_TRIGGER_INNER_FIGHT", 0 );
        }
        else
        {
             /* P_ASSIGN_BULLET_CAM_TO_LAST_MPM_ENEMY */ sub_59034();
        }
        break;
        case 11:
        if (l_U455)
        {
            if (NOT AUDIO_IS_MUSIC_PLAYING())
            {
                 /* WRITESCRIPTLOG */ sub_760( "GA", "Forcing music PRECINCT_FINAL mood PRECINCT_01_3_6", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_3_6", "PRECINCT_01_3_6", 0, -1, -1, -1082130432, 0 );
            }
        }
        if ((NOT l_U1287) AND ( /* F_IS_ARMORY_GATE_VISIBLE */ sub_59576()))
        {
             /* WRITESCRIPTLOG */ sub_760( "AT", "Activating Inner Armory guys.", 0 );
             /* STARTTIMER */ sub_2703( ref l_U753 );
             /* P_ACTIVATE_ARMORY_INNER_ENEMIES */ sub_38541();
             /* P_ACTIVATE_ARMORY_REINFORCEMENTS */ sub_39235();
            l_U1287 = 1;
        }
        if ( /* ISTIMERDONE */ sub_3069( ref l_U753 ))
        {
             /* WRITESCRIPTLOG */ sub_760( "AT", "Unlocking gate.", 0 );
             /* P_SETDOORLOCKED */ sub_19089( ref g_U4065, 0 );
             /* P_OPENDOOR */ sub_59810( ref g_U4065, 0, 0, 1065353216 );
             /* P_SETDOORLATCH */ sub_59974( ref g_U4065, 1 );
             /* P_PLAY_DOOR_BUZZER_SFX */ sub_60058( g_U4065._fU4 );
            g_U821 = 14;
            if (NOT l_U408._fU0)
            {
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_49111( ref l_U408, g_U821,  /* PLAYER_PED_ID */ sub_1159(), g_U2953[14], g_U3083[14], g_U3127[14], g_U3171[14], 1 );
            }
             /* P_CREATE_BUTTON_OVERLAY */ sub_60303();
            l_U454 = 12;
             /* WRITESCRIPTLOG */ sub_760( "AT", "eCheckpointState = CP_HANDLE_INNER_ARMORY", 0 );
        }
        break;
        case 12:
        if ( /* ISTIMERDONE */ sub_3069( ref l_U726 ))
        {
             /* P_RELEASE_DOOR_BUZZER_SFX */ sub_8360();
        }
         /* F_HANDLE_POI */ sub_60898( ref l_U897 );
        if ( /* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ sub_62710( ref l_U897 ))
        {
             /* P_SPEECH_PLAY_MAX_MONOLOGUE */ sub_62999( "EXPLORE_ITEM", ref l_U1028 );
        }
         /* P_PED_ARRAY_Z_SAFETY_CHECK */ sub_58697( ref l_U1248, 6.00000000, 0, 1 );
         /* P_PED_ARRAY_Z_SAFETY_CHECK */ sub_58697( ref l_U1274, 6.00000000, 0, 1 );
        iVar3 =  /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_55441( ref l_U1248 );
        iVar4 =  /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_55441( ref l_U1274 );
        if ((NOT l_U1280) AND (iVar3 < 3))
        {
             /* WRITESCRIPTLOG */ sub_760( "AT", "Removing piArmoryReinforcements tethers.", 0 );
             /* P_REMOVE_TETHERS_FROM_PED_ARRAY */ sub_63399( ref l_U1274 );
            l_U1280 = 1;
        }
        if ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND ((iVar4 == 0) AND (iVar3 == 0)))
        {
             /* P_SET_POI_AVAILABLE */ sub_9948( ref l_U897, 1 );
             /* P_ENABLE_POI */ sub_8940( ref l_U1038, 1 );
             /* P_DIAL_MONOLOGUE */ sub_63557( "SPOL_ARMYDED", ref l_U444 );
            g_U862[15]._fU36 = 1;
             /* TAKE_PAINKILLER_ARRAY_SNAPSHOT */ sub_63757( ref l_U536, ref l_U538 );
             /* P_TURN_ON_BUTTON_OVERLAY */ sub_63973();
            l_U454 = 13;
             /* WRITESCRIPTLOG */ sub_760( "AT", "eCheckpointState = CP_HANDLE_INNER_ARMORY_POST_FIGHT", 0 );
        }
        else if ((iVar3 + iVar4) == 1)
        {
             /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_59120( ref l_U1274 );
             /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_59120( ref l_U1248 );
        }
        break;
        case 13:
        if ( /* F_HANDLE_POI */ sub_60898( ref l_U897 ))
        {
            l_U454 = 14;
             /* WRITESCRIPTLOG */ sub_760( "AT", "eCheckpointState = CP_MID_13_PP", 0 );
            break;
        }
         /* P_HANDLE_PAINKILLER_PICKUP_DIALOGUE */ sub_2389( 0 );
        if ( /* F_HANDLE_POI */ sub_60898( ref l_U1038 ))
        {
            if (NOT l_U1192)
            {
                l_U1192 = 1;
            }
             /* P_TURN_OFF_BUTTON_OVERLAY */ sub_64308();
            l_U454 = 15;
             /* WRITESCRIPTLOG */ sub_760( "AT", "eCheckpointState = CP_MID_14_PP", 0 );
            break;
        }
        if (( /* F_CAN_AMBIENT_SPEECH_PLAY */ sub_64486()) AND (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_2832())))
        {
            if ((NOT l_U1192) AND (NOT l_U735._fU20))
            {
                if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_54468( ref l_U762, 0 ))
                {
                     /* P_SPEECH_PLAY_MONOLOGUE */ sub_64619( "SPOL_SECDRSP", ref l_U1519 );
                    l_U1192 = 1;
                }
            }
            if ((NOT l_U1539) AND (l_U1038._fU64))
            {
                 /* P_SPEECH_PLAY_MONOLOGUE */ sub_64619( "SPOL_RKCRLR", ref l_U1529 );
                 /* CREATETIMER */ sub_2553( ref l_U1510, 18000, 1, 0 );
                 /* STARTTIMER */ sub_2703( ref l_U1510 );
                l_U1539 = 1;
            }
            if ( /* ISTIMERDONE */ sub_3069( ref l_U1510 ))
            {
                 /* P_SPEECH_PLAY_MONOLOGUE */ sub_64619( "SPOL_DWDITR2", ref l_U1500 );
            }
        }
        if (NOT l_U540)
        {
            if ( /* UPDATE_PILL_VO */ sub_64875( "SPOL_PLFNDPL", ref l_U536, ref l_U538 ))
            {
                 /* WRITESCRIPTLOG */ sub_760( "SBA", "Playing Pill monologue for puiArmoryHealthPickup", "..." );
                l_U540 = 1;
            }
        }
        if ( /* ISTIMERDONE */ sub_3069( ref l_U726 ))
        {
             /* P_RELEASE_DOOR_BUZZER_SFX */ sub_8360();
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_54468( ref l_U1170, 0 ))
        {
            if ((CUTSCENE_NAMED_IS_LOADING( ref g_U3485 )) || (CUTSCENE_IS_LOADED( ref g_U3485 )))
            {
                 /* WRITESCRIPTLOG */ sub_760( "AT", "Purging loaded cutscene txt_MID_13_PP via flow", 0 );
                CLEAR_NAMED_CUTSCENE( ref g_U3485 );
            }
            g_U842[15] = 1;
            l_U454 = 16;
             /* WRITESCRIPTLOG */ sub_760( "AT", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 14:
        if (l_U455)
        {
             /* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ sub_45981( ref l_U508, ref g_U3485, 65358, 65411, 65848, 43700, 65924, 66681, 250, 0 );
             /* P_SET_PLAYER_WEAPONS_VISIBLE */ sub_48098( 0 );
            RESET_PED_GORE(  /* PLAYER_PED_ID */ sub_1159() );
            FOUND_EXPLORATION_ITEM( "spol_FlakVest" );
            l_U508._fU4 = 2;
        }
        if ( /* CUTSYS_HANDLECUTSCENE */ sub_46663( ref l_U508 ))
        {
             /* P_SET_PLAYER_WEAPONS_VISIBLE */ sub_48098( 1 );
             /* NIS_POST_SETUP */ sub_48478( 1, 1 );
            l_U454 = 13;
             /* WRITESCRIPTLOG */ sub_760( "AT", "eCheckpointState = CP_HANDLE_INNER_ARMORY_POST_FIGHT", 0 );
        }
        break;
        case 15:
         /* P_HANDLE_IMAGEFX */ sub_67040( ref l_U1540 );
        if (l_U455)
        {
             /* NIS_CREATE_STATIC_CAM */ sub_10068( ref l_U804, 1005.48300000, -18.77273000, 9.31616300, 0.67927200, -0.00001000, 162.75610000, 45, 3500 );
             /* NIS_CREATE_STATIC_CAM */ sub_10068( ref l_U835, 1003.79600000, -18.59205000, 9.31616300, -2.78377700, -0.00000700, -176.38270000, 45, 3500 );
             /* NIS_CREATE_STATIC_CAM */ sub_10068( ref l_U866, 1007.38100000, -21.19325000, 9.59600000, -2.99999200, -0.00000000, 144.00010000, 1110704128, 1000 );
            if (NOT (ISEQ_IS_LOADED( 1680861244 )))
            {
                SCRIPT_ASSERT( "S_POLICE_MID14_BUTTON interactive sequence not loaded.", 0 );
                 /* P_STREAMREQ_ISEQ_INSERT */ sub_28367( 1680861244, ref g_U2662 );
                while (NOT ( /* F_STREAMREQ_ISEQ_IS_ASSET_LOADED */ sub_68138( 1680861244, ref g_U2662 )))
                {
                     /* WRITE_STRING */ sub_12936( "Waiting for Interactive Sequence S_POLICE_MID14_BUTTON to load." );
                    WAIT( 0 );
                }
            }
            ISEQ_REGISTER_ENTITY( 1680861244, "max_mid14_button",  /* PLAYER_PED_ID */ sub_1159(), 0 );
            ISEQ_START( 1680861244 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )))
            {
                SET_PED_DEFAULT_AIM_AHEAD(  /* PLAYER_PED_ID */ sub_1159() );
            }
             /* CREATETIMER */ sub_2553( ref l_U744, 750, 1, 0 );
             /* STARTTIMER */ sub_2703( ref l_U744 );
        }
        else if (NOT l_U835._fU32)
        {
             /* WRITESCRIPTLOG */ sub_760( "GA", "Starting scripted camera for MID_14_PP", 0 );
             /* NIS_PRE_SETUP */ sub_47554( 1, 0, 0, 1 );
             /* TELEPORTPED */ sub_10465(  /* PLAYER_PED_ID */ sub_1159(), 1006.48200000, -23.07400000, 7.80000000, 40.00000000 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( 104.00000000, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( -3.00000000, 1065353216, 0 );
             /* NIS_PLAY_INTERP_WITH_STATIC_CAMS */ sub_55063( ref l_U804, ref l_U835, 3500, 1, 1 );
        }
        if ( /* ISTIMERDONE */ sub_3069( ref l_U744 ))
        {
             /* WRITESCRIPTLOG */ sub_760( "AT", "Opening doors to Kill House.", 0 );
             /* P_PLAY_DOOR_BUZZER_SFX */ sub_60058( g_U4121._fU4 );
            PLAY_SOUND_FROM_COORD( -1, "PRISONER_EXCHANGE_DOOR_BUTTON", l_U1038._fU200 );
             /* P_SETDOORLOCKED */ sub_19089( ref g_U4121, 0 );
             /* P_OPENDOOR */ sub_59810( ref g_U4121, 0, 0, -1.00000000 );
             /* P_SETDOORLOCKED */ sub_19089( ref g_U4128, 0 );
             /* P_OPENDOOR */ sub_59810( ref g_U4128, 1, 0, -1.00000000 );
             /* P_INITIALIZE_IMAGEFX_ARMSGENTER */ sub_68935();
        }
        if ( /* ISTIMERDONE */ sub_3069( ref l_U726 ))
        {
             /* P_RELEASE_DOOR_BUZZER_SFX */ sub_8360();
        }
        if ( /* NIS_IS_SHOT_FINISHED */ sub_57930( ref l_U835, 1 ))
        {
             /* NIS_PLAY_STATIC_CAMERA */ sub_55302( ref l_U866 );
            WAIT( 0 );
             /* NIS_RETURN_TO_GAMEPLAY_CAM */ sub_58249( 1000, 1, 1, -859915232, -859915232, 0 );
             /* NIS_POST_SETUP */ sub_48478( 1, 1 );
             /* STARTTIMER */ sub_2703( ref l_U735 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )))
            {
                CLEAR_PED_DEFAULT_AIM(  /* PLAYER_PED_ID */ sub_1159() );
            }
            l_U454 = 13;
             /* WRITESCRIPTLOG */ sub_760( "AT", "eCheckpointState = CP_HANDLE_INNER_ARMORY_POST_FIGHT", 0 );
        }
        break;
        case 16:
        if (g_U821 == 15)
        {
             /* WRITESCRIPTLOG */ sub_760( "AT", "eCheckpointState = CP_FINISHED", 0 );
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U454 = 0;
             /* WRITESCRIPTLOG */ sub_760( "AT", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
    }
    if (l_U454 != iVar2)
    {
        l_U455 = 1;
    }
    else
    {
        l_U455 = 0;
    }
    return;
}

/* P_SET_STATIC_DATA */ void sub_16176()
{
     /* WRITESCRIPTLOG */ sub_760( "AT", "P_SET_STATIC_DATA", 0 );
    l_U1442[0] = {985.64950000, -12.98402000, 8.83054500};
    l_U1442[1] = {984.64950000, -12.98402000, 8.83054500};
    l_U1442[2] = {983.64950000, 2.46178100, 8.83054500};
    l_U1442[3] = {985.64950000, 2.46178100, 8.83054500};
    l_U1468[0] = {989.42000000, -7.50000000, 8.83000000};
    l_U1468[1] = {989.42000000, -6.50000000, 8.83000000};
    l_U1468[2] = {989.42000000, -5.50000000, 8.83000000};
    l_U1468[3] = {989.42000000, -3.00000000, 8.83000000};
    l_U1455[0] = {989.29710000, -13.72831000, 8.83060900};
    l_U1455[1] = {989.29710000, -13.72831000, 8.83060900};
    l_U1455[2] = {989.24190000, 1.96785900, 8.83060600};
    l_U1455[3] = {989.24190000, 1.96785900, 8.83060600};
     /* P_CREATEPEDSTRUCT */ sub_16567( ref l_U487, 1010.92700000, 9.57787400, 7.80004100, 271.55650000, -760991695, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16719( ref l_U1290[0], 989.67000000, -12.33000000, 8.83000000, -88.44000000, 248934683, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16719( ref l_U1290[1], 989.48000000, -6.15000000, 8.83000000, -106.31000000, 311955291, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16719( ref l_U1290[2], 989.42000000, -1.84000000, 8.83000000, -77.92000000, 1462347560, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16719( ref l_U1290[3], 989.28000000, -6.86000000, 8.83000000, -65.39000000, -1054986473, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16719( ref l_U1290[4], 989.33000000, -1.17000000, 8.83000000, -97.02000000, -1987274287, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16719( ref l_U1290[5], 989.49000000, 1.43000000, 8.83000000, -102.54000000, -1955035373, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16719( ref l_U1384[0], l_U1442[0], 270.00000000, -1450048658, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16719( ref l_U1384[1], l_U1442[1], 270.00000000, -2133379445, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16719( ref l_U1384[2], l_U1442[2], 270.00000000, -1955035373, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16719( ref l_U1384[3], l_U1442[3], 270.00000000, -1054986473, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16719( ref l_U1260[0], 1012.45800000, -29.51204000, 7.80005200, 116.00000000, 1699236346, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16719( ref l_U1195[0], 1008.13200000, -19.12598000, 7.80018500, 313.39950000, -288060415, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16719( ref l_U1195[1], 1012.02300000, -26.45234000, 7.80018500, 335.27040000, -1570990750, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16719( ref l_U1195[2], 1014.31200000, -29.40664000, 7.80018500, 279.37280000, 1429943810, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16719( ref l_U1195[3], 1016.52900000, -28.20374000, 7.80018500, 356.50680000, -389159267, 7, 3, 2, 0, 0 );
     /* P_CREATETRIGGERBOX */ sub_17505( ref l_U568, "TB_START_BULLET_TIME", 1004.93000000, 4.58000000, 7.33000000, 7.15000000, 2.96000000, 4.65000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_17505( ref l_U589, "TB_MPM_ROOM_FIRST_THIRD", 1004.93000000, 0.00000000, 7.80019800, 7.15000000, 12.00000000, 4.65000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_17505( ref l_U610, "TB_MPM_ROOM_SECOND_THIRD", 1004.93000000, -10.50000000, 7.80019800, 7.15000000, 8.00000000, 4.65000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_17505( ref l_U631, "TB_ARM_END_SNIPERS", 1004.93000000, -13.10000000, 7.33000000, 7.15000000, 2.96000000, 4.65000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_17505( ref l_U762, "TB_DOOR_LOCKED", 1002.49000000, -31.12000000, 7.33000000, 3.00000000, 2.00000000, 4.65000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_17505( ref l_U783, "TB_PLAYER_BLOCK_DOOR", 1002.49000000, -31.86000000, 7.33000000, 3.00000000, 0.50000000, 4.65000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_17505( ref l_U1170, "TB_EndArmory", 1003.29000000, -42.70000000, 7.80000000, 5.36000000, 15.03000000, 4.20000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_17505( ref l_U986, "TRIGGER_VEST_INNER", 1005.14000000, -27.35000000, 7.33000000, 1.47000000, 3.00000000, 4.65000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_17505( ref l_U1007, "TRIGGER_VEST_OUTER", 1005.98000000, -27.35000000, 7.33000000, 3.64000000, 5.00000000, 4.65000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_17505( ref l_U1127, "TRIGGER_BUTTON_INNER", 1006.34000000, -22.68000000, 7.33000000, 1.47000000, 2.00000000, 4.65000000, 0.00000000, 0.00000000, -41.79000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_17505( ref l_U1148, "TRIGGER_BUTTON_OUTER", 1006.63000000, -22.66000000, 7.33000000, 2.84000000, 4.78000000, 4.65000000, 0.00000000, 0.00000000, -41.79000000, 1 );
     /* P_CREATETETHERBOX */ sub_18452( ref l_U723, "TETH_ARMORY_1", 1011.39000000, -17.38000000, 6.56000000, 8.84000000, 6.00000000, 6.58000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_18452( ref l_U724, "TETH_ARMORY_2", 1014.43000000, -24.49000000, 6.56000000, 8.84000000, 15.00000000, 6.58000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_18452( ref l_U1278, "TETH_SECURITY_1", 1007.75000000, -21.70000000, 7.80000000, 3.10000000, 4.04000000, 3.01000000, 0.00000000, 0.00000000, 90.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_18452( ref l_U1279, "TETH_SECURITY_2", 1006.99000000, -27.47000000, 7.80000000, 8.60000000, 5.61000000, 3.01000000, 0.00000000, 0.00000000, 90.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_18452( ref l_U1490, "TETH_SNIPER_LEDGE", 989.24000000, -5.55000000, 8.00000000, 18.47000000, 2.99000000, 5.89000000, 0.00000000, 0.00000000, 90.00000000, 1 );
    l_U1253[0] = 434544317;
    l_U1253[1] = -862236369;
    l_U1253[2] = 1964270085;
    l_U1253[3] = 1964270085;
    l_U1276[0] = 434544317;
    return;
}

/* P_CREATEPEDSTRUCT */ void sub_16567(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_16719(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATETRIGGERBOX */ void sub_17505(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATETETHERBOX */ void sub_18452(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_18895()
{
     /* WRITESCRIPTLOG */ sub_760( "AT", "P_INITIALIZE_SCRIPT_DATA", 0 );
    l_U455 = 1;
    l_U725 = -1;
    l_U1191 = 0;
    l_U1192 = 0;
    l_U1287 = 0;
    l_U1498 = 0;
    l_U1280 = 0;
    l_U1487 = 0;
    l_U1488 = 0;
    l_U1489 = 0;
    l_U540 = 0;
    l_U1193 = 0;
    l_U1194 = 0;
    l_U1258 = 0;
    l_U1259 = 0;
    l_U1288 = 0;
    l_U1289 = 0;
    l_U1382 = 0;
    l_U1383 = 0;
     /* P_SETDOORLOCKED */ sub_19089( ref g_U4107, 1 );
     /* P_SETDOORLOCKED */ sub_19089( ref g_U4114, 1 );
     /* P_SETDOORLOCKED */ sub_19089( ref g_U4065, 1 );
     /* P_CLOSEDOOR */ sub_19373( ref g_U4121, 1 );
     /* P_CLOSEDOOR */ sub_19373( ref g_U4128, 1 );
     /* P_SETDOORLOCKED */ sub_19089( ref g_U4121, 1 );
     /* P_SETDOORLOCKED */ sub_19089( ref g_U4128, 1 );
     /* CREATETIMER */ sub_2553( ref l_U652, 250, 1, 0 );
     /* CREATETIMER */ sub_2553( ref l_U753, 1000, 1, 0 );
     /* CREATETIMER */ sub_2553( ref l_U726, 2200, 1, 0 );
     /* CREATETIMER */ sub_2553( ref l_U735, 15000, 1, 0 );
    l_U1539 = 0;
     /* P_CREATEPOISTRUCTTRIGGER */ sub_19629( ref l_U1038, 1, l_U1124, l_U1127, l_U1148, 0, 0 );
     /* P_SET_INTERACTIVE_TEXT */ sub_20395( ref l_U1038, 30, "POI_POLSECURITY" );
     /* P_CREATEPOISTRUCTTRIGGER */ sub_19629( ref l_U897, 2, l_U983, l_U986, l_U1007, 1, 0 );
     /* P_SET_INTERACTIVE_TEXT */ sub_20395( ref l_U897, 30, "POI_POL_FLAK" );
     /* P_SET_POI_FORCE_WALK */ sub_20660( ref l_U897, 0 );
     /* P_SET_POI_AVAILABLE */ sub_9948( ref l_U897, 0 );
     /* P_SET_POI_REUSABLE */ sub_20725( ref l_U897, 1 );
    return;
}

/* P_SETDOORLOCKED */ void sub_19089(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if (( /* F_DOESDOOREXIST */ sub_19119( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_19203( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_19119(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_19203(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_CLOSEDOOR */ void sub_19373(int iParam0, int iParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_19119( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_19203( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

/* P_CREATEPOISTRUCTTRIGGER */ void sub_19629(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47, unknown uParam48)
{
     /* P_CREATEBLANKPOISTRUCT */ sub_19673( iParam0, uParam47 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU80 = 1;
    iParam0->_fU116 = {uParam5};
    iParam0->_fU88 = 1;
    iParam0->_fU216 = {uParam26};
    iParam0->_fU320 = uParam48;
    iParam0->_fU20 = {uParam2};
     /* P_CREATEPOIGLINT */ sub_20064( iParam0 );
    return;
}

/* P_CREATEBLANKPOISTRUCT */ void sub_19673(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

/* P_CREATEPOIGLINT */ void sub_20064(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
     /* P_INITPOIGLINT */ sub_20162( iParam0 );
    return;
}

/* P_INITPOIGLINT */ void sub_20162(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                 /* P_ENABLEPOIGLINT */ sub_8999( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                 /* P_ENABLEPOIGLINT */ sub_8999( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                 /* P_ENABLEPOIGLINT */ sub_8999( iParam0, 1 );
            }
            else
            {
                 /* P_ENABLEPOIGLINT */ sub_8999( iParam0, 0 );
            };;;
        }
        else
        {
             /* P_ENABLEPOIGLINT */ sub_8999( iParam0, 0 );
        }
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_8999( iParam0, 0 );
    }
    return;
}

/* P_SET_INTERACTIVE_TEXT */ void sub_20395(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
     /* P_INITINTERACTIVETEXT */ sub_20451( iParam0 );
    return;
}

/* P_INITINTERACTIVETEXT */ void sub_20451(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

/* P_SET_POI_FORCE_WALK */ void sub_20660(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

/* P_SET_POI_REUSABLE */ void sub_20725(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

/* P_REQUEST_PRECINCTMPM_PERSISTENT_ASSETS */ void sub_21246()
{
     /* WRITESCRIPTLOG */ sub_760( "AT", "P_REQUEST_PRECINCTMPM_PERSISTENT_ASSETS start", 0 );
     /* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ sub_21365( ref l_U1491, ref g_U2468 );
     /* P_STREAMREQ_AUDIO_BANK_INSERT */ sub_24287( ref g_U3489, ref g_U2889 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_26190( 434544317, ref g_U2613 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_26190( 1194438308, ref g_U2613 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_26190( -862236369, ref g_U2613 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_26190( 1964270085, ref g_U2613 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_26190( 57534114, ref g_U2613 );
     /* WRITESCRIPTLOG */ sub_760( "AT", "P_REQUEST_PRECINCTMPM_PERSISTENT_ASSETS end", 0 );
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ void sub_21365(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_21438( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT */ void sub_21438(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 =  /* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ sub_21505( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar4 );
            PRINTNL();
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_21763( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Inserting MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ int sub_21505(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_21763( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is loading: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_21763( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                     /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_21763( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_23294( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being removed: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_21763( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_21763( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ void sub_21763(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_21824( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ int sub_21824(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID is active: {} ###", 1, 513, (uParam1^)[I] );
                if ((uParam1^)[I] == iParam0)
                {
                    DISPLAYF( "The THREADID was already requested by this thread!!!", 0 );
                    DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                    (uParam1^)[I] = nil;
                    Result = I;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The THREADID index was requested by another thread!!! {} ###", 1, 513, I );
                }
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is NOT active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

/* P_STREAMREQ_THREADID_RESET */ void sub_23294(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

/* P_STREAMREQ_AUDIO_BANK_INSERT */ void sub_24287(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_AUDIO_BANK_IS_INDEX_AVAILABLE */ sub_24340( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing AUDIO_BANK asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
         /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_24595( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_AUDIO_BANK_IS_INDEX_AVAILABLE */ int sub_24340(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_24595( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_24595( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    DISPLAYF( "[CCB] ### The AUDIO_BANK is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The AUDIO_BANK asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_24595( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The AUDIO_BANK is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_23294( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_24595( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            DISPLAYF( "[CCB] ### The AUDIO_BANK is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The AUDIO_BANK is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing AUDIO_BANK: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
             /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_24595( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ void sub_24595(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_21824( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT */ void sub_26190(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ sub_26244( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_26505( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ int sub_26244(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_26505( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is loading: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_26505( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The WEAPON_TYPE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_26505( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_23294( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being removed: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_26505( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            DISPLAYF( "The WEAPON_TYPE asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_26505( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ void sub_26505(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_21824( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_REQUEST_PRECINCTMPM_NONPERSISTENT_ASSETS */ void sub_28241()
{
     /* WRITESCRIPTLOG */ sub_760( "AT", "P_REQUEST_PRECINCTMPM_NONPERSISTENT_ASSETS start", 0 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_28367( 870768972, ref g_U2662 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_28367( 1479944738, ref g_U2662 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_28367( 1680861244, ref g_U2662 );
    if ((l_U456) AND (g_U820 < 13))
    {
         /* WRITESCRIPTLOG */ sub_760( "BSW", "P_REQUEST_PRECINCTMPM_NONPERSISTENT_ASSETS loading txt_CS_13_04", 0 );
         /* LOADSEAMLESSCUTSCENE */ sub_31292( l_U459, 0 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_760( "BSW", "P_REQUEST_PRECINCTMPM_NONPERSISTENT_ASSETS loading txt_MID_13_PP", 0 );
         /* LOADSEAMLESSCUTSCENE */ sub_31292( ref g_U3485, 0 );
    }
    AUDIO_MUSIC_REQUEST_ONESHOT( "PRECINCT_ONESHOT_6", 0 );
     /* WRITESCRIPTLOG */ sub_760( "AT", "P_REQUEST_PRECINCTMPM_NONPERSISTENT_ASSETS end", 0 );
    return;
}

/* P_STREAMREQ_ISEQ_INSERT */ void sub_28367(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 =  /* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ sub_28428( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar12 );
            PRINTNL();
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar4 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
             /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_28678( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

/* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ int sub_28428(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_28678( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is loading: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_28678( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                        DISPLAYF( "The ISEQ asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_28678( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loading: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_28678( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### Re-requesting ISEQ: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_23294( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_23294( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being removed: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_28678( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar5 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_28678( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ISEQ_THREADID_SET_ID */ void sub_28678(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_21824( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* LOADSEAMLESSCUTSCENE */ void sub_31292(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_LOADED */ int sub_31897(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be requested: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to load: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be removed: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ int sub_32294(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be requested: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to load: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be removed: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ISEQ_IS_LOADED */ int sub_32696(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be requested: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to load: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be removed: {} ###", 1, 1281, ref uVar3 );
            return 0;
        };;;
    }
    return 1;
}

/* HAS_SAVEFILE_LOADED */ int sub_33483(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_760( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_10835( uParam0,  /* PLAYER_PED_ID */ sub_1159() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* F_SETUP_SNIPERS */ int sub_34074()
{
    char[64] cVar2;
    unknown uVar18;

    switch (l_U1288)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_760( "AT", "eSpawnSnipers = ENTITY_STATE_INIT", 0 );
         /* P_SETUP_AI_GROUP */ sub_34203( ref l_U1376, 1056964608, 0 );
        l_U1289 = 0;
        l_U1288 = 2;
         /* WRITESCRIPTLOG */ sub_760( "AT", "eSpawnSnipers = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        StrCopy( ref cVar2, "Creating piArmorySniper[", 64 );
        ConcatString(ref cVar2, l_U1289, 64);
        ConcatString(ref cVar2, "]", 64);
        PRINTSTRING( ref cVar2 );
        l_U1369[l_U1289] =  /* CREATEPED */ sub_34720( ref l_U1290[l_U1289] );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_35696( l_U1369[l_U1289], ref l_U1376 );
        SET_PED_AI_TEMPLATE( l_U1369[l_U1289], "AIT_EXPERT" );
        uVar18 =  /* F_GIVEPEDWEAPON */ sub_13327( l_U1369[l_U1289], 57534114, 25000, 0, 0 );
        if (((l_U1289 == 5) || ((l_U1289 == 4) || (l_U1289 == 1))) == 0)
        {
            ENABLE_WEAPON_ATTACHMENT( uVar18, 13, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar18, 13, 1 );
            SET_LASER_SIGHT_ATTACHMENT( uVar18, -938171172 );
        }
        SET_PED_AS_ONE_SHOT_KILL( l_U1369[l_U1289], 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1369[l_U1289], 1 );
        SET_PED_SEEING_RANGE( l_U1369[l_U1289], 200.00000000, 75 );
        SET_PED_COMBAT_RANGE_MAX( l_U1369[l_U1289], 200.00000000 );
        SET_PED_COMBAT_ATTRIBUTES( l_U1369[l_U1289], 16, 0 );
        SET_PED_ALERTNESS( l_U1369[l_U1289], 3 );
         /* P_TETHERPED */ sub_36357( ref l_U1490, l_U1369[l_U1289], 1 );
        l_U1289++;
        if (l_U1289 >= l_U1369)
        {
            l_U1288 = 3;
             /* WRITESCRIPTLOG */ sub_760( "AT", "eSpawnSnipers = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U1376._fU0, 0 );
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_36569( ref l_U1369, "Sniper" );
         /* P_DEACTIVATEPEDARRAY */ sub_36703( ref l_U1369 );
        l_U1288 = 4;
         /* WRITESCRIPTLOG */ sub_760( "AT", "eSpawnSnipers = ENTITY_STATE_COMPLETE", 0 );
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

/* P_SETUP_AI_GROUP */ void sub_34203(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* CREATEPED */ void sub_34720(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_34902( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_35451( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_35552( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* LOADMODEL */ void sub_34902(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_12936( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* SETPEDDEFAULTSTATS */ void sub_35451(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_35552(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_35696(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_12936( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_34203( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_34203( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* P_TETHERPED */ void sub_36357(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

/* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ void sub_36569(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

/* P_DEACTIVATEPEDARRAY */ void sub_36703(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_DEACTIVATEPED */ sub_36757( (uParam0^)[I] );
    }
    return;
}

/* P_DEACTIVATEPED */ void sub_36757(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

/* F_SETUP_INNER_ARMORY_ENEMIES */ int sub_36976()
{
    switch (l_U1193)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_760( "AT", "eSpawnInnerOpps = ENTITY_STATE_INIT", 0 );
         /* P_SETUP_AI_GROUP */ sub_34203( ref l_U1281, 1056964608, 0 );
        l_U1194 = 0;
        l_U1193 = 2;
         /* WRITESCRIPTLOG */ sub_760( "AT", "eSpawnInnerOpps = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U1248[l_U1194] =  /* CREATEPED */ sub_34720( ref l_U1195[l_U1194] );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_35696( l_U1248[l_U1194], ref l_U1281 );
        SET_PED_AI_TEMPLATE( l_U1248[l_U1194], "AIT_EXPERT" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1248[l_U1194], 1 );
        SET_PED_ALERTNESS( l_U1248[l_U1194], 3 );
         /* F_GIVEPEDWEAPON */ sub_13327( l_U1248[l_U1194], l_U1253[l_U1194], 25000, 0, 0 );
         /* F_GIVEPEDWEAPONTOHOLSTER */ sub_12532( l_U1248[l_U1194], -862236369, 0, 25000, 0 );
        SET_ROOM_FOR_PED_BY_NAME( l_U1248[l_U1194], "MloRoom_armoury" );
        l_U1194++;
        if (l_U1194 >= l_U1248)
        {
            l_U1193 = 3;
             /* WRITESCRIPTLOG */ sub_760( "AT", "eSpawnInnerOpps = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U1281._fU0, 1 );
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_36569( ref l_U1248, "ArmoryInner" );
         /* P_DEACTIVATEPEDARRAY */ sub_36703( ref l_U1248 );
        l_U1193 = 4;
         /* WRITESCRIPTLOG */ sub_760( "AT", "eSpawnInnerOpps = ENTITY_STATE_COMPLETE", 0 );
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

/* F_SETUP_INNER_REINFORCEMENTS */ int sub_37651()
{
    switch (l_U1258)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_760( "AT", "eSpawnReinforcements = ENTITY_STATE_INIT", 0 );
        l_U1259 = 0;
        l_U1258 = 2;
         /* WRITESCRIPTLOG */ sub_760( "AT", "eSpawnReinforcements = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U1274[l_U1259] =  /* CREATEPED */ sub_34720( ref l_U1260[l_U1259] );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_35696( l_U1274[l_U1259], ref l_U1281 );
        SET_PED_AI_TEMPLATE( l_U1274[l_U1259], "AIT_EXPERT" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1274[l_U1259], 1 );
         /* F_GIVEPEDWEAPON */ sub_13327( l_U1274[l_U1259], l_U1276[l_U1259], 25000, 0, 0 );
         /* F_GIVEPEDWEAPONTOHOLSTER */ sub_12532( l_U1274[l_U1259], -862236369, 0, 25000, 0 );
        SET_ROOM_FOR_PED_BY_NAME( l_U1274[l_U1259], "MloRoom_armoury" );
         /* P_TETHERPED */ sub_36357( ref l_U1278, l_U1274[l_U1259], 1 );
         /* P_TETHERPED */ sub_36357( ref l_U1279, l_U1274[l_U1259], 1 );
        l_U1259++;
        if (l_U1259 >= l_U1274)
        {
            l_U1258 = 3;
             /* WRITESCRIPTLOG */ sub_760( "AT", "eSpawnReinforcements = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
         /* P_DEACTIVATEPEDARRAY */ sub_36703( ref l_U1274 );
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_36569( ref l_U1274, "ArmoryReinforcements" );
        l_U1258 = 4;
         /* WRITESCRIPTLOG */ sub_760( "AT", "eSpawnReinforcements = ENTITY_STATE_COMPLETE", 0 );
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

/* P_ACTIVATE_ARMORY_INNER_ENEMIES */ void sub_38541()
{
    int I;
    vector[1] vVar3;
    unknown uVar5;
    unknown uVar6;
    string[3] sVar7;
    unknown uVar11;

    array(ref vVar3, 1);
    vVar3[0] = {1009.97400000, -8.72274700, 7.80005200};
    array(ref sVar7, 3);
    sVar7[0] = "Corner_Position92";
    sVar7[1] = "Corner_Position103";
    sVar7[2] = "Corner_Position90";
     /* P_ACTIVATEPEDARRAY */ sub_38695( ref l_U1248 );
    for ( I = 0; I < l_U1248; I++ )
    {
        REGISTER_TARGET( l_U1248[I],  /* PLAYER_PED_ID */ sub_1159() );
        if (I == 0)
        {
             /* P_REMOVEALLTETHERSFROMPED */ sub_38934( l_U1248[I] );
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() ))) AND (NOT (IS_PED_DEAD( l_U1248[I] ))))
            {
                OPEN_SEQUENCE_TASK( ref uVar11 );
                TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, vVar3[I],  /* PLAYER_PED_ID */ sub_1159(), 1, 5, 8, -1082130432, 3 );
                TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
                CLOSE_SEQUENCE_TASK( uVar11 );
                TASK_PERFORM_SEQUENCE( l_U1248[I], uVar11 );
                CLEAR_SEQUENCE_TASK( uVar11 );
            }
        }
        else if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() ))) AND (NOT (IS_PED_DEAD( l_U1248[I] ))))
        {
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1248[I], 0 );
            SET_PED_FLAG_AGGRESSIVE_CHARGER( l_U1248[I], 1 );
        }
    }
    return;
}

/* P_ACTIVATEPEDARRAY */ void sub_38695(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_ACTIVATEPED */ sub_38747( (uParam0^)[I] );
    }
    return;
}

/* P_ACTIVATEPED */ void sub_38747(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

/* P_REMOVEALLTETHERSFROMPED */ void sub_38934(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        RESET_PED_TETHERING( uParam0 );
    }
    return;
}

/* P_ACTIVATE_ARMORY_REINFORCEMENTS */ void sub_39235()
{
    vector[1] vVar2;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    int I;

     /* P_ACTIVATEPEDARRAY */ sub_38695( ref l_U1274 );
    array(ref vVar2, 1);
    vVar2[0] = {1006.42900000, -25.05595000, 7.80005200};
    for ( I = 0; I < l_U1274; I++ )
    {
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() ))) AND (NOT (IS_PED_DEAD( l_U1274[I] ))))
        {
            OPEN_SEQUENCE_TASK( ref uVar6 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, vVar2[I], 3, 20000, 1048576000, 0, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1159() );
            CLOSE_SEQUENCE_TASK( uVar6 );
            REGISTER_TARGET( l_U1274[I],  /* PLAYER_PED_ID */ sub_1159() );
            SET_LOCKED_TARGET( l_U1274[I],  /* PLAYER_PED_ID */ sub_1159() );
            TASK_PERFORM_SEQUENCE( l_U1274[I], uVar6 );
            CLEAR_SEQUENCE_TASK( uVar6 );
        }
    }
    return;
}

/* P_SETUP_MPM_CART */ void sub_39521(boolean bParam0)
{
     /* WRITESCRIPTLOG */ sub_760( "AT", "P_SETUP_MPM_CART", 0 );
    if (bParam0)
    {
        l_U550 =  /* CREATEOBJECT */ sub_39607( g_U3228, l_U551, l_U557, 0, 0, 0 );
    }
    else
    {
        l_U550 =  /* CREATEOBJECT */ sub_39607( g_U3228, l_U554, l_U557, 0, 0, 0 );
    }
    if ((DOES_OBJECT_EXIST( l_U550 )) == 1)
    {
        FREEZE_OBJECT_POSITION( l_U550, 1 );
        if (bParam0)
        {
            SET_OBJECT_COLLISION( l_U550, 0 );
        }
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U550, ref g_U3445 );
    }
    return;
}

/* CREATEOBJECT */ void sub_39607(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_34902( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* P_CREATE_ARMORY_PLACEMENTS */ void sub_40026()
{
     /* WRITESCRIPTLOG */ sub_760( "AT", "P_CREATE_ARMORY_PLACEMENTS", 0 );
    l_U536[0] =  /* CREATEPLACEMENT */ sub_40149( -4072149, 1015.85000000, -12.50000000, 8.88400000, 0.00000000, 0.00000000, 45.00000000, 1, 0, 0, 1119092736 );
    if (DOES_PLACEMENT_EXIST( l_U536[0] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U536[0], "MloRoom_armEnt" );
    }
    l_U541[0] =  /* CREATEPLACEMENT */ sub_40149( 1676080365, 1018.66000000, -24.84000000, 9.86000000, 0.00000000, 0.00000000, 1.54000000, 1, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U541[0], "MloRoom_armoury" );
    l_U541[1] =  /* CREATEPLACEMENT */ sub_40149( -1138829373, 1018.81000000, -24.64000000, 8.93000000, 0.00000000, -1.64000000, 0.00000000, 1, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U541[1], "MloRoom_armoury" );
    l_U541[2] =  /* CREATEPLACEMENT */ sub_40149( -343443786, 1018.81000000, -25.31000000, 9.59000000, 0.00000000, 0.00000000, 0.00000000, 1, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U541[2], "MloRoom_armoury" );
    l_U541[3] =  /* CREATEPLACEMENT */ sub_40149( -343443786, 1018.81000000, -25.31000000, 9.33000000, 0.00000000, 0.00000000, 0.00000000, 1, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U541[3], "MloRoom_armoury" );
    l_U535 = CREATE_AMMOBAG_PLACEMENT_ROTATE( l_U546, 0.00000000, 0.00000000, l_U549, 10.00000000, 3.00000000, 0, 1119092736 );
    if (DOES_PLACEMENT_EXIST( l_U535 ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U535, "MloRoom_armEnt" );
         /* P_SETUP_AMMO_BAG_DEFAULTS */ sub_40840( l_U535 );
    }
    return;
}

/* CREATEPLACEMENT */ void sub_40149(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a placement to exist: {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return Result;
}

/* P_SETUP_AMMO_BAG_DEFAULTS */ void sub_40840(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        SET_AMMOBAG_REGEN_TIME( uParam0, 10.00000000 );
        SET_AMMOBAG_REGEN_RANGE( uParam0, 3.00000000 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1088031219, 45 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 954369040, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1138793073, 95 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1087746638, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1295933220, 30 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1383321053, 85 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1481241171, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1889644301, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -790090695, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1742569970, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1575030772, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1622373246, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 558118158, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1701914198, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1126469201, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 936600426, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 205668857, 0 );
    }
    return;
}

/* F_13_04_PP_PRECUTSCENESETUP */ int sub_41613()
{
    l_U500 =  /* CREATEPED */ sub_34720( ref l_U487 );
    if (NOT (IS_PED_DEAD( l_U500 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U500, 1 );
        SET_ROOM_FOR_PED_BY_NAME( l_U500, ref g_U3437 );
    }
     /* F_GIVEPEDWEAPON */ sub_13327( l_U500, -862236369, 25000, 0, 0 );
     /* P_DEACTIVATEPED */ sub_36757( l_U500 );
    return 1;
}

/* P_13_04_PP_CUTSCENEREGISTRATION */ void sub_41754()
{
    unknown uVar2;
    unknown uVar3;

     /* P_ACTIVATEPED */ sub_38747( l_U500 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )))
    {
        uVar2 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_41826();
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )))
        {
            REMOVE_WEAPON_FROM_PED(  /* PLAYER_PED_ID */ sub_1159(), -1659006841 );
            REMOVE_WEAPON_FROM_PED(  /* PLAYER_PED_ID */ sub_1159(), 377623895 );
        }
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            TOGGLE_WEAPON_ATTACHMENT( uVar2, 13, 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_PI_Clt1911_Aa_H", 0 );
        }
        CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_1159(), g_U2953[13], g_U3083[13] );
        CUTSCENE_SET_COVER_CAMERA_DIRECTION( g_U3127[13], g_U3171[13] );
    }
    if (NOT (IS_PED_DEAD( l_U500 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U500, "Bach_Unif", 1 );
        uVar2 = GET_WEAPON_FROM_HAND( l_U500, 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_PI_Clt1911_Aa_H^1", 0 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U1369[0] )))
    {
        uVar2 = GET_WEAPON_FROM_HAND( l_U1369[0], 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_AR_G36K_Aa_H", 0 );
             /* WRITESCRIPTLOG */ sub_760( "BSW", "registering sniper1's laser gun", 0 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U1369[2] )))
    {
        uVar2 = GET_WEAPON_FROM_HAND( l_U1369[2], 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_AR_G36K_Aa_H^1", 0 );
             /* WRITESCRIPTLOG */ sub_760( "BSW", "registering sniper4's laser gun", 0 );
        }
    }
    uVar3 = DOOR_FIND_CLOSEST( l_U501._fU0, l_U501._fU4 );
    if (DOES_OBJECT_EXIST( uVar3 ))
    {
        REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( uVar3, "csPof6_Office_DoorR", 0 );
    }
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U4093._fU0, g_U4093._fU4 );
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U4100._fU0, g_U4100._fU4 );
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U4058._fU0, g_U4058._fU4 );
    ISEQ_REGISTER_ENTITY( 870768972, "police_mpm_player",  /* PLAYER_PED_ID */ sub_1159(), 0 );
    ISEQ_REGISTER_ENTITY( 870768972, "police_mpm_cart", l_U550, 1 );
    CUTSCENE_REGISTER_ISEQ( 870768972 );
    return;
}

/* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ int sub_41826()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1159(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_41930( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1159(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1159(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1159(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

/* IS_WEAPON_SINGLE_HANDED */ int sub_41930(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* P_13_04_PP_HANDLECUTSCENE */ void sub_43029()
{
    unknown uVar2;

    if (l_U460._fU52)
    {
        if (IS_SCREEN_FADED_OUT())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1159(), 0 );
        }
        if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1197() )))
        {
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1197(), 1 );
        }
         /* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ sub_43164( 1 );
         /* P_MAX_RELOAD_WEAPONS */ sub_43360();
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1159(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            SET_WEAPON_VISIBLE( uVar2, 0 );
        }
         /* WRITESCRIPTLOG */ sub_760( "AT", "AUDIO TRACK: PRECINCT_FINAL/MOOD: PRECINCT_01_1", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_1", "", 0, -1, 7000, -1082130432, 0 );
    }
    return;
}

/* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ void sub_43164(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1159(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if ((( /* IS_WEAPON_SINGLE_HANDED */ sub_41930( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_41826();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1159(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_43360()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1159(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1159(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1159(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1159(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* CUTSYS_DEFAULT_POSTCUTSCENE */ int sub_43700()
{
    return 1;
}

/* P_13_04_PP_STARTBLENDOUT */ void sub_43749()
{
     /* WRITESCRIPTLOG */ sub_760( "AT", "P_13_04_PP_StartBlendout start", 0 );
     /* P_MPM_HOLSTER_LEFT_HAND_WEAPON_OR_RIFLE */ sub_43830();
     /* P_SETUP_PRECINCT_MPM */ sub_44542();
     /* P_ACTIVATE_SNIPERS */ sub_44762();
    if ((NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1197() ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() ))))
    {
        if (NOT (ISEQ_QUERY_STATE( 870768972, 3 )))
        {
             /* WRITESCRIPTLOG */ sub_760( "AT", "Starting S_POLICE_MPM from blendout.", 0 );
             /* TELEPORTPED */ sub_10465(  /* PLAYER_PED_ID */ sub_1159(), g_U2953[13], g_U3083[13] );
            ISEQ_REGISTER_ENTITY( 870768972, "police_mpm_player",  /* PLAYER_PED_ID */ sub_1159(), 0 );
            ISEQ_REGISTER_ENTITY( 870768972, "police_mpm_cart", l_U550, 1 );
            ISEQ_START( 870768972 );
        }
    }
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_45178( -760991695, ref g_U2468 );
     /* WRITESCRIPTLOG */ sub_760( "GA", "Forcing music PRECINCT_FINAL mood PRECINCT_01_1_4_6, fade in over 3 seconds", 0 );
    AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_1_4_6", "PRECINCT_01_1_4_6", 0, 6000, -1, -1082130432, 0 );
     /* WRITESCRIPTLOG */ sub_760( "AT", "P_13_04_PP_StartBlendout end", 0 );
    return;
}

/* P_MPM_HOLSTER_LEFT_HAND_WEAPON_OR_RIFLE */ void sub_43830()
{
    unknown uVar2;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )))
    {
        l_U1499 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1159(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( l_U1499 ))
        {
             /* WRITESCRIPTLOG */ sub_760( "AT", "Player is dual wielding. Holstering left weapon.", 0 );
            l_U1498 = 1;
            SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1159(), 0, 1, 1 );
        }
        if ( /* F_ISPLAYERHOLDINGRIFLE */ sub_44019())
        {
             /* WRITESCRIPTLOG */ sub_760( "AT", "Player is holding a rifle. Holstering rifle and drawing one-handed weapon.", 0 );
            SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1159(), 0, 0, 1 );
            uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1159(), 0, 0 );
            if (NOT (GET_DOES_WEAPON_EXIST( uVar2 )))
            {
                uVar2 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1159(), 0 );
                if (NOT (GET_DOES_WEAPON_EXIST( uVar2 )))
                {
                    uVar2 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1159(), 1 );
                }
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1159(), uVar2, 0, 1 );
            }
        }
    }
    return;
}

/* F_ISPLAYERHOLDINGRIFLE */ int sub_44019()
{
    int[18] iVar2;
    unknown uVar21;
    int I;

    array(ref iVar2, 18);
    iVar2[0] = -1013714740;
    iVar2[1] = -1074756423;
    iVar2[2] = 1308526797;
    iVar2[3] = 840671040;
    iVar2[4] = 57534114;
    iVar2[5] = 724901397;
    iVar2[6] = 1992962408;
    iVar2[7] = 319712764;
    iVar2[8] = 427207702;
    iVar2[9] = -110877124;
    iVar2[10] = 1224272620;
    iVar2[11] = 10648147;
    iVar2[12] = -2075384407;
    iVar2[13] = 1478009203;
    iVar2[14] = 434544317;
    iVar2[15] = -168327769;
    iVar2[16] = -184942895;
    iVar2[17] = 514118749;
    uVar21 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1159(), 0, 0 );
    if (GET_DOES_WEAPON_EXIST( uVar21 ))
    {
        for ( I = 0; I < iVar2; I++ )
        {
            if ((GET_WEAPON_TYPE( uVar21 )) == iVar2[I])
            {
                return 1;
            }
        }
    }
    return 0;
}

/* P_SETUP_PRECINCT_MPM */ void sub_44542()
{
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )))
    {
        SET_PED_PROOFS(  /* PLAYER_PED_ID */ sub_1159(), 1, 1, 1, 1, 1 );
        SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1197(), 0 );
        SET_PED_CONSUMING_AMMO(  /* PLAYER_PED_ID */ sub_1159(), 0 );
        SET_PED_CAN_SWITCH_WEAPON(  /* PLAYER_PED_ID */ sub_1159(), 0 );
    }
    if (GET_ADRENALINE_AMT() < 0.10000000)
    {
        SET_ADRENALINE_AMT( 0.10000000 );
    }
    DEACTIVATE_BULLET_TIME( 1, 1 );
    DISPLAY_HUD( 0 );
    SET_SILHOUETTE_ACTIVE( 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U3171[13], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U3127[13], 1065353216, 0 );
    SET_CAM_VIEW_MODE( 1 );
    return;
}

/* P_ACTIVATE_SNIPERS */ void sub_44762()
{
    int I;

     /* P_ACTIVATEPEDARRAY */ sub_38695( ref l_U1369 );
    for ( I = 0; I < l_U1369; I++ )
    {
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() ))) AND (NOT (IS_PED_DEAD( l_U1369[I] ))))
        {
            REGISTER_TARGET( l_U1369[I],  /* PLAYER_PED_ID */ sub_1159() );
            SET_LOCKED_TARGET( l_U1369[I],  /* PLAYER_PED_ID */ sub_1159() );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1369[I], 0 );
            TASK_COMBAT_PED( l_U1369[I],  /* PLAYER_PED_ID */ sub_1159() );
        }
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE */ void sub_45178(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_7407( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a MODEL_NAME asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Removing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_13_04_PP_HANDLEBLENDOUT */ int sub_45841()
{
    if (ISEQ_QUERY_STATE( 870768972, 3 ))
    {
         /* WRITESCRIPTLOG */ sub_760( "AT", "S_POLICE_MPM blendout is playing!", 0 );
        if (IS_DEATH_PANEL_WIPE_ALLOWED())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        return 1;
    }
    return 0;
}

/* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ void sub_45981(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
     /* WRITESCRIPTLOG */ sub_760( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return  /* CUTSYS_PRIVATE_CREATECUTSCENE */ sub_46205( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 46102, 46152, uParam8 );
}

/* CUTSYS_DEFAULT_PREPAREBLENDIN */ void sub_46102()
{
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDIN */ int sub_46152()
{
    return 1;
}

/* CUTSYS_PRIVATE_CREATECUTSCENE */ void sub_46205(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

/* CUTSYS_SETCUTSCENELOADINTERIORONSKIP */ void sub_46531(int iParam0, unknown uParam1, unknown uParam2)
{
    iParam0->_fU68 = 1;
    iParam0->_fU72 = 1;
    iParam0->_fU76 = uParam1;
    iParam0->_fU80 = uParam2;
    iParam0->_fU24 = 1;
    return;
}

/* CUTSYS_HANDLECUTSCENE */ void sub_46663(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
             /* WRITESCRIPTLOG */ sub_760( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
             /* WRITESCRIPTLOG */ sub_760( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                 /* WRITESCRIPTLOG */ sub_760( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
             /* WRITESCRIPTLOG */ sub_760( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
             /* WRITESCRIPTLOG */ sub_760( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
             /* WRITESCRIPTLOG */ sub_760( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
             /* LOADSEAMLESSCUTSCENE */ sub_31292( iParam0->_fU0, 0 );
             /* WRITESCRIPTLOG */ sub_760( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
             /* NIS_PRE_SETUP */ sub_47554( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
         /* NIS_PRE_SETUP */ sub_47554( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
         /* WRITESCRIPTLOG */ sub_760( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                 /* P_SET_PLAYER_WEAPONS_VISIBLE */ sub_48098( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
         /* NIS_PRE_SETUP */ sub_47554( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
             /* NIS_POST_SETUP */ sub_48478( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
         /* NIS_POST_SETUP */ sub_48478( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

/* NIS_PRE_SETUP */ void sub_47554(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1197(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1159(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1159() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1159(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* P_SET_PLAYER_WEAPONS_VISIBLE */ void sub_48098(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1159(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1159(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1159(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1159(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1159(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

/* NIS_POST_SETUP */ void sub_48478(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1197(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1159(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_43360();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_START_SP_CHALLENGES */ void sub_48769()
{
     /* WRITESCRIPTLOG */ sub_760( "CCB", "P_START_SP_CHALLENGES", 0 );
    return;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_49111(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_760( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_760( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_14101( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_49402( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_49879( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_49879( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_50139( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_49879( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_50139( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_50139( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_49879( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_50139( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_50139( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_50139( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_49879( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_50139( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_50139( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_50139( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_50139( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_51719( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_760( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_49402(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_11116( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_760( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_760( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_49879(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_50139(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_51719(int iParam0)
{
     /* WRITE_STRING */ sub_12936( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_51807( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_51884( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_51884( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_51884( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_52053( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_52053( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_52053( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_52053( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_52053( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_52053( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_52053( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_52053( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_52053( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_52053( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_52053( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_51884( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_52053( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_52053( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_52053( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_51884( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_52754( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_52053( iParam0->_fU52 );
     /* WRITE_STRING */ sub_12936( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_52053( iParam0->_fU96 );
     /* WRITE_STRING */ sub_12936( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_52053( iParam0->_fU100 );
     /* WRITE_STRING */ sub_12936( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_52053( iParam0->_fU104 );
     /* WRITE_STRING */ sub_12936( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_52053( iParam0->_fU108 );
     /* WRITE_STRING */ sub_12936( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_52053( iParam0->_fU112 );
     /* WRITE_STRING */ sub_12936( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_52053( iParam0->_fU116 );
     /* WRITE_STRING */ sub_12936( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_52053( iParam0->_fU120 );
     /* WRITE_STRING */ sub_12936( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_52053( iParam0->_fU124 );
     /* WRITE_STRING */ sub_12936( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_52053( iParam0->_fU128 );
     /* WRITE_STRING */ sub_12936( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_52053( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_52053( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_52053( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_51807(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_51884(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_52053(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_52754(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* MAL_GETACTINTSTATUS */ int sub_53723(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 );
    }
    return 0;
}

/* P_HACK_DISABLE_PLAYER_AIM */ void sub_53895()
{
    SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1197(), 0, 0 );
    REENABLE_PLAYER_INPUT( 14 );
    REENABLE_PLAYER_INPUT( 15 );
    REENABLE_PLAYER_INPUT( 16 );
    REENABLE_PLAYER_INPUT( 17 );
    REENABLE_PLAYER_INPUT( 4 );
    REENABLE_PLAYER_INPUT( 6 );
    return;
}

/* P_START_SP_CHALLENGES_MPM */ void sub_54003()
{
     /* WRITESCRIPTLOG */ sub_760( "CCB", "P_START_SP_CHALLENGES_MPM", 0 );
     /* WRITESCRIPTLOG */ sub_760( "CCB", "Starting the Precinct_MPM context...", 0 );
    START_CONTEXT( "Precinct_MPM" );
    return;
}

/* P_START_MPM_SNIPER_STRAFE */ void sub_54186(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;

     /* WRITESCRIPTLOG */ sub_760( "BSW", "P_START_MPM_SNIPER_STRAFE start", 0 );
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (DOES_PED_EXIST( uParam0 )))
    {
        if (DOES_PED_EXIST(  /* PLAYER_PED_ID */ sub_1159() ))
        {
            CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
            OPEN_SEQUENCE_TASK( ref uVar6 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, uParam1,  /* PLAYER_PED_ID */ sub_1159(), 3, 1, 0.10000000, 0, 1, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            CLOSE_SEQUENCE_TASK( uVar6 );
            TASK_PERFORM_SEQUENCE( uParam0, uVar6 );
        }
        SET_PED_PATH_CAN_AVOID_LINE_OF_FIRE( uParam0, 0 );
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_54468(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_54544(  /* PLAYER_PED_ID */ sub_1159(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* F_ISPEDINTRIGGERBOX */ int sub_54544(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* NIS_CREATE_GAMEPLAY_CAM_COPY */ void sub_54789(int iParam0, unknown uParam1)
{
    iParam0->_fU4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_ROT()};
    iParam0->_fU16 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_COORD()};
    iParam0->_fU28 = GET_GAMEPLAY_CAM_FOV();
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam1;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_2553( iParam0 + 48, uParam1, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref l_U39, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* NIS_PLAY_INTERP_WITH_STATIC_CAMS */ void sub_55063(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE_WITH_INTERP( iParam1->_fU0, iParam0->_fU0, uParam2, uParam3, uParam4 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_2703( iParam1 + 48 );
    iParam1->_fU32 = 1;
    iParam1->_fU40 = 1;
    return;
}

/* NIS_PLAY_STATIC_CAMERA */ void sub_55302(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_2703( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

/* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ void sub_55441(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

/* F_SETUP_MPM_REINFORCEMENTS */ int sub_55561()
{
    char[64] cVar2;
    unknown uVar18;

    switch (l_U1382)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_760( "AT", "eSpawnMPMReinforcements = ENTITY_STATE_INIT", 0 );
         /* P_SETUP_AI_GROUP */ sub_34203( ref l_U1481, 1056964608, 0 );
        l_U1383 = 0;
        l_U1382 = 2;
         /* WRITESCRIPTLOG */ sub_760( "AT", "eSpawnMPMReinforcements = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        StrCopy( ref cVar2, "Creating piMPMReinforcements[", 64 );
        ConcatString(ref cVar2, l_U1383, 64);
        ConcatString(ref cVar2, "]", 64);
        PRINTSTRING( ref cVar2 );
        l_U1437[l_U1383] =  /* CREATEPED */ sub_34720( ref l_U1384[l_U1383] );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_35696( l_U1437[l_U1383], ref l_U1481 );
        SET_PED_AI_TEMPLATE( l_U1437[l_U1383], "AIT_EXPERT" );
        if (l_U1383 == 0)
        {
            uVar18 =  /* F_GIVEPEDWEAPON */ sub_13327( l_U1437[l_U1383], -2075384407, 25000, 0, 0 );
            SET_PED_CAN_PUT_PLAYER_INTO_LMS( l_U1437[l_U1383], 0 );
        }
        else
        {
            uVar18 =  /* F_GIVEPEDWEAPON */ sub_13327( l_U1437[l_U1383], 57534114, 25000, 0, 0 );
            SET_PED_AS_ONE_SHOT_KILL( l_U1437[l_U1383], 1 );
        }
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1437[l_U1383], 1 );
        SET_PED_SEEING_RANGE( l_U1437[l_U1383], 200.00000000, 75 );
        SET_PED_COMBAT_RANGE_MAX( l_U1437[l_U1383], 200.00000000 );
        SET_PED_COMBAT_ATTRIBUTES( l_U1437[l_U1383], 16, 0 );
        SET_PED_ALERTNESS( l_U1437[l_U1383], 3 );
         /* P_TETHERPED */ sub_36357( ref l_U1490, l_U1437[l_U1383], 1 );
        l_U1383++;
        if (l_U1383 >= l_U1437)
        {
            l_U1382 = 3;
             /* WRITESCRIPTLOG */ sub_760( "AT", "eSpawnMPMReinforcements = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U1481._fU0, 0 );
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_36569( ref l_U1437, "MPM Reinforcement" );
         /* P_DEACTIVATEPEDARRAY */ sub_36703( ref l_U1437 );
        l_U1382 = 4;
         /* WRITESCRIPTLOG */ sub_760( "AT", "eSpawnMPMReinforcements = ENTITY_STATE_COMPLETE", 0 );
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

/* P_ACTIVATE_MPM_REINFORCEMENTS */ void sub_56441()
{
    unknown uVar2;
    int I;
    unknown uVar4;

     /* WRITESCRIPTLOG */ sub_760( "BSW", "P_ACTIVATE_MPM_REINFORCEMENTS start", 0 );
    l_U1487 = 1;
    if (l_U1489)
    {
        if ( /* F_ISPLAYERINTRIGGERBOX */ sub_56555( l_U589 ))
        {
             /* WRITESCRIPTLOG */ sub_760( "BSW", "P_ACTIVATE_MPM_REINFORCEMENTS player is still in first third, move everybody over to the left", 0 );
             /* TELEPORTPED */ sub_10465( l_U1437[2], l_U1442[0], 270.00000000 );
             /* TELEPORTPED */ sub_10465( l_U1437[3], l_U1442[1], 270.00000000 );
            l_U1455[2] = {l_U1455[0]};
            l_U1455[3] = {l_U1455[1]};
        }
        else if ( /* F_ISPLAYERINTRIGGERBOX */ sub_56555( l_U610 ))
        {
             /* WRITESCRIPTLOG */ sub_760( "BSW", "P_ACTIVATE_MPM_REINFORCEMENTS player is in last third, move everybody over to the right", 0 );
             /* TELEPORTPED */ sub_10465( l_U1437[0], l_U1442[2], 270.00000000 );
             /* TELEPORTPED */ sub_10465( l_U1437[1], l_U1442[3], 270.00000000 );
            l_U1455[0] = {l_U1455[2]};
            l_U1455[1] = {l_U1455[3]};
        }
    }
     /* P_ACTIVATEPEDARRAY */ sub_38695( ref l_U1437 );
    for ( I = 0; I < l_U1437; I++ )
    {
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() ))) AND (NOT (IS_PED_DEAD( l_U1437[I] ))))
        {
            if (I == 0)
            {
                uVar4 = GET_WEAPON_FROM_HAND( l_U1437[I], 0, 0 );
                if (GET_DOES_WEAPON_EXIST( uVar4 ))
                {
                    ENABLE_WEAPON_ATTACHMENT( uVar4, 13, 1 );
                    TOGGLE_WEAPON_ATTACHMENT( uVar4, 13, 1 );
                    SET_LASER_SIGHT_ATTACHMENT( uVar4, 124577409 );
                }
            }
            DISPLAYF( "Ped go to target: {}", 1, 1027, l_U1468[I] );
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U1455[I], 2, -2, 0.25000000, 256, 0 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U1468[I], 2, -2, 0.25000000, 256, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            CLOSE_SEQUENCE_TASK( uVar2 );
            TASK_PERFORM_SEQUENCE( l_U1437[I], uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
        }
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_56555(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_54544(  /* PLAYER_PED_ID */ sub_1159(), uParam0 );
}

/* P_ADJUST_PLAYER_STATS_POST_MPM */ void sub_57450()
{
    unknown uVar2;
    int iVar3;
    float fVar4;

    uVar2 =  /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_55441( ref l_U1369 );
    iVar3 = l_U1369;
    fVar4 = 1.00000000 - ((TO_FLOAT( uVar2 )) / (TO_FLOAT( iVar3 + 1 )));
     /* P_SET_PLAYER_HEALTH_PERCENT */ sub_57542( fVar4 );
    return;
}

/* P_SET_PLAYER_HEALTH_PERCENT */ void sub_57542(unknown uParam0)
{
    int iVar3;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )))
    {
        iVar3 = (ROUND( ((GET_PED_MAX_HEALTH(  /* PLAYER_PED_ID */ sub_1159() )) - 100) * uParam0 )) + 100;
        SET_PED_HEALTH(  /* PLAYER_PED_ID */ sub_1159(), iVar3, 0 );
    }
    return;
}

/* NIS_IS_SHOT_FINISHED */ int sub_57930(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || ( /* ISTIMERDONE */ sub_3069( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || ( /* ISTIMERDONE */ sub_3069( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

/* NIS_RETURN_TO_GAMEPLAY_CAM */ void sub_58249(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

/* P_MPM_UNHOLSTER_LEFT_HAND_WEAPON */ void sub_58375()
{
     /* WRITESCRIPTLOG */ sub_760( "SA", "P_MPM_POST_WEAPON_SETUP - START", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )))
    {
        if (l_U1498)
        {
            if (GET_DOES_WEAPON_EXIST( l_U1499 ))
            {
                 /* WRITESCRIPTLOG */ sub_760( "SA", "Unholstering the player's left-hand weapon.", 0 );
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1159(), l_U1499, 1, 1 );
            }
        }
    }
     /* WRITESCRIPTLOG */ sub_760( "SA", "P_MPM_POST_WEAPON_SETUP - END", 0 );
    return;
}

/* P_PED_ARRAY_Z_SAFETY_CHECK */ void sub_58697(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_PED_Z_SAFETY_CHECK */ sub_58763( (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

/* P_PED_Z_SAFETY_CHECK */ void sub_58763(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                 /* CLEANPED */ sub_8568( uParam0 );
            }
        }
    }
    return;
}

/* P_ASSIGN_BULLET_CAM_TO_LAST_MPM_ENEMY */ void sub_59034()
{
    unknown uVar2;

    if ((l_U1487) AND ((( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_55441( ref l_U1437 )) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_55441( ref l_U1369 ))) == 1))
    {
        uVar2 =  /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_59120( ref l_U1369 );
        if (NOT (DOES_PED_EXIST( uVar2 )))
        {
            uVar2 =  /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_59120( ref l_U1437 );
        }
        if (DOES_PED_EXIST( uVar2 ))
        {
            SET_BULLET_CAM_PREF( uVar2, "ALL_LMS_01", "ALL_02_NEAR_FAILSAFE", "ALL_02_NEAR_FAILSAFE", "", 0, 0, 0, 0, 0, 0, 0, 0 );
        }
    }
    return;
}

/* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ void sub_59120(unknown uParam0)
{
    int I;

    if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_55441( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

/* F_IS_ARMORY_GATE_VISIBLE */ int sub_59576()
{
    vector vVar2;

    vVar2 = {1010.77900000, -12.68199000, 9.80018500};
    if (IS_SPHERE_VISIBLE( vVar2, 0.50000000, 0 ))
    {
        return 1;
    }
    return 0;
}

/* P_OPENDOOR */ void sub_59810(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if (( /* F_DOESDOOREXIST */ sub_19119( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_19203( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

/* P_SETDOORLATCH */ void sub_59974(int iParam0, unknown uParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_19119( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_19203( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_LATCH( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

/* P_PLAY_DOOR_BUZZER_SFX */ void sub_60058(unknown uParam0, unknown uParam1, unknown uParam2)
{
    l_U725 = GET_SOUND_ID();
    PLAY_SOUND_FROM_COORD( l_U725, "PRISONER_EXCHANGE_DOOR_OPEN", uParam0 );
     /* WRITESCRIPTLOG */ sub_760( "AT", "Playing PRISONER_EXCHANGE_DOOR_OPEN!", 0 );
     /* CREATETIMER */ sub_2553( ref l_U726, 2200, 1, 0 );
     /* STARTTIMER */ sub_2703( ref l_U726 );
    return;
}

/* P_CREATE_BUTTON_OVERLAY */ void sub_60303()
{
     /* WRITESCRIPTLOG */ sub_760( "SBA", "P_CREATE_BUTTON_OVERLAY", 0 );
     /* CLEANOBJECT */ sub_8714( l_U1169 );
    l_U1169 =  /* CREATEOBJECTNOOFFSET */ sub_60426( -422856175, 1005.86500000, -22.22600000, 8.65800000, 90.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U1169 ))
    {
        FREEZE_OBJECT_POSITION( l_U1169, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1169, ref g_U3453 );
        SET_OBJECT_VISIBLE( l_U1169, 0 );
    }
    return;
}

/* CREATEOBJECTNOOFFSET */ void sub_60426(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_34902( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* F_HANDLE_POI */ int sub_60898(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1159() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_54544(  /* PLAYER_PED_ID */ sub_1159(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_54544(  /* PLAYER_PED_ID */ sub_1159(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_9398( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND (( /* F_ISACTIONINGAVAILABLE */ sub_9494( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (( /* F_HASACTIONBEENPRESSED */ sub_61795()) == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                             /* P_ENABLE_POI */ sub_8940( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                             /* P_ENABLEPOIGLINT */ sub_8999( iParam0, 0 );
                             /* P_ENABLEPOIINTERACTIONTEXT */ sub_9218( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                             /* P_ENABLEPOIGLINT */ sub_8999( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1159(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                         /* P_ENABLEPOIGLINT */ sub_8999( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_ENABLEPOIINTERACTIONTEXT */ sub_9218( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED(  /* PLAYER_PED_ID */ sub_1159(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )) == 0)
                    {
                        TASK_LOOK_AT_COORD(  /* PLAYER_PED_ID */ sub_1159(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1159(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                     /* P_ENABLEPOIGLINT */ sub_8999( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                     /* P_ENABLEPOIINTERACTIONTEXT */ sub_9218( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_1159() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1159(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                 /* P_ENABLEPOIINTERACTIONTEXT */ sub_9218( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

/* F_HASACTIONBEENPRESSED */ int sub_61795()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

/* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ int sub_62710(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND (( /* F_IS_POI_AVAILABLE */ sub_62756( iParam0 )) == 0)))
    {
        if ((( /* F_HASACTIONBEENPRESSED */ sub_61795()) == 1) AND (((IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_1159() )) == 0) AND (((IS_PED_GETTING_UP(  /* PLAYER_PED_ID */ sub_1159() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP(  /* PLAYER_PED_ID */ sub_1159() )) == 0) AND (((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_1159() )) == 0) AND (((IS_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1159() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

/* F_IS_POI_AVAILABLE */ void sub_62756(int iParam0)
{
    return iParam0->_fU56;
}

/* P_SPEECH_PLAY_MAX_MONOLOGUE */ void sub_62999(unknown uParam0, unknown uParam1)
{
     /* WRITESCRIPTLOG */ sub_760( "SBA", "P_SPEECH_PLAY_MAX_MONOLOGUE", "***" );
    if ( /* IS_MAX_VALID */ sub_63086())
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_3336( uParam1 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_3447( 0,  /* PLAYER_PED_ID */ sub_1159(), "MAX", uParam1, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_3447( 1,  /* PLAYER_PED_ID */ sub_1159(), "MAX", uParam1, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_3717( uParam0, uParam1, 8, 1 );
    }
    return;
}

/* IS_MAX_VALID */ int sub_63086()
{
    if ( /* IS_PED_VALID */ sub_63116(  /* PLAYER_PED_ID */ sub_1159() ))
    {
        return 1;
    }
    return 0;
}

/* IS_PED_VALID */ int sub_63116(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (DOES_PED_EXIST( uParam0 )))
    {
        return 1;
    }
    return 0;
}

/* P_REMOVE_TETHERS_FROM_PED_ARRAY */ void sub_63399(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_REMOVEALLTETHERSFROMPED */ sub_38934( (uParam0^)[I] );
    }
    return;
}

/* P_DIAL_MONOLOGUE */ void sub_63557(unknown uParam0, unknown uParam1)
{
     /* P_DIAL_STANDARD_CONVO */ sub_63602( uParam0, uParam1,  /* PLAYER_PED_ID */ sub_1159(), "MAX", 1 );
    return;
}

/* P_DIAL_STANDARD_CONVO */ void sub_63602(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if ((NOT (IS_PED_DEAD( uParam2 ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() ))))
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_3336( uParam1 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_3447( 0,  /* PLAYER_PED_ID */ sub_1159(), "MAX", uParam1, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_3447( uParam4, uParam2, uParam3, uParam1, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_3717( uParam0, uParam1, 8, 1 );
    }
    return;
}

/* TAKE_PAINKILLER_ARRAY_SNAPSHOT */ void sub_63757(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (DOES_PLACEMENT_EXIST( (uParam0^)[I] ))
        {
             /* WRITESCRIPTLOG */ sub_760( "RJM", "DO_ANY_PAINKILLERS_STILL_EXIST - Found a pill in there, we can still play some V.O.", 0 );
            (uParam1^)[I] = 1;
        }
        else
        {
            (uParam1^)[I] = 0;
        }
    }
    return;
}

/* P_TURN_ON_BUTTON_OVERLAY */ void sub_63973()
{
    if (DOES_OBJECT_EXIST( l_U1169 ))
    {
         /* WRITESCRIPTLOG */ sub_760( "SBA", "P_TURN_ON_BUTTON_OVERLAY", 0 );
        SET_OBJECT_VISIBLE( l_U1169, 1 );
    }
    return;
}

/* P_TURN_OFF_BUTTON_OVERLAY */ void sub_64308()
{
    if (DOES_OBJECT_EXIST( l_U1169 ))
    {
         /* WRITESCRIPTLOG */ sub_760( "SBA", "P_TURN_OFF_BUTTON_OVERLAY", 0 );
        SET_OBJECT_VISIBLE( l_U1169, 0 );
    }
    return;
}

/* F_CAN_AMBIENT_SPEECH_PLAY */ int sub_64486()
{
    if ((l_U352._fU16) || ( /* ISTIMERDONE */ sub_3069( ref l_U352 )))
    {
        return 1;
    }
    return 0;
}

/* P_SPEECH_PLAY_MONOLOGUE */ void sub_64619(unknown uParam0, unknown uParam1)
{
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_3336( uParam1 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_3447( 0,  /* PLAYER_PED_ID */ sub_1159(), "MAX", uParam1, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_3447( 1,  /* PLAYER_PED_ID */ sub_1159(), "MAX", uParam1, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_3717( uParam0, uParam1, 8, 1 );
    return;
}

/* UPDATE_PILL_VO */ int sub_64875(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    if ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1197() )) == 0)
    {
        if (( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_2832()) == 0)
        {
            for ( I = 0; I <= ((uParam1^) - 1); I++ )
            {
                if ((uParam2^)[I])
                {
                    if ((HAS_PLACEMENT_BEEN_COLLECTED( (uParam1^)[I] )) || (NOT (DOES_PLACEMENT_EXIST( (uParam1^)[I] ))))
                    {
                        (uParam2^)[I] = 0;
                        if (TIME_SINCE_LAST_MONOLOGUE() > 5000)
                        {
                             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_3336( ref l_U342 );
                             /* P_SPEECH_PLAY_MAX_MONOLOGUE */ sub_62999( uParam0, ref l_U342 );
                            return 1;
                        }
                    }
                }
            }
        }
    }
    return 0;
}

/* CUTSYS_DEFAULT_PRECUTSCENESETUP */ int sub_65358()
{
    return 1;
}

/* P_MID_13_PP_CUTSCENEREGISTRATION */ void sub_65411()
{
    unknown uVar2;

     /* KILL_ANY_MISSION_SPEECH */ sub_65457( 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )))
    {
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE(  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_41826(), "W_PI_Clt1911_Aa_H", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_1159(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_1159(), 1006.14500000, -27.52148000, 7.80007400, 90.00000000 );
        CUTSCENE_REGISTER_ISEQ( 1479944738 );
        ISEQ_REGISTER_ENTITY( 1479944738, "Max",  /* PLAYER_PED_ID */ sub_1159(), 0 );
    }
    return;
}

/* KILL_ANY_MISSION_SPEECH */ void sub_65457(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        PRINTSTRING( "\n KILL_ANY_MISSION_SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

/* P_MID_13_HANDLECUTSCENE */ void sub_65848()
{
    if (l_U508._fU52)
    {
        APPLY_PLAYER_PRELOAD_VARIATION(  /* PLAYER_PED_ID */ sub_1159(), 3 );
    }
    return;
}

/* P_MID_13_PREPAREBLENDOUT */ void sub_65924()
{
    unknown uVar2;
    unknown uVar3;

    if ((DOES_PED_EXIST(  /* PLAYER_PED_ID */ sub_1159() )) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() ))))
    {
        APPLY_PLAYER_PRELOAD_VARIATION(  /* PLAYER_PED_ID */ sub_1159(), 0 );
    }
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( 0, 1065353216, 0 );
     /* P_HOLSTERALLPLAYERWEAPONS */ sub_66037( ref uVar2, ref uVar3, 1, 0 );
    uVar2 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1159(), 1 );
    if (GET_DOES_WEAPON_EXIST( uVar2 ))
    {
        SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1159(), uVar2, 0, 1 );
    }
    else
    {
         /* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ sub_43164( 1 );
    }
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )))
    {
        if (NOT (ISEQ_QUERY_STATE( 1479944738, 3 )))
        {
            ISEQ_REGISTER_ENTITY( 1479944738, "Max",  /* PLAYER_PED_ID */ sub_1159(), 0 );
            ISEQ_START( 1479944738 );
        }
    }
    CAMERA_PLAY_ANIMATED( "LEVEL_S_POLICE_CP_13", "B_OUT_MID_13_PP_CAM", 0, 0, 0, 0, 0.00000000, 0, 0 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        DO_SCREEN_FADE_IN( 0 );
    }
    return;
}

/* P_HOLSTERALLPLAYERWEAPONS */ void sub_66037(unknown uParam0, unknown uParam1, unknown uParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )))
    {
        (uParam0^) = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1159(), 0, 0 );
        (uParam1^) = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1159(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( (uParam0^) ))
        {
            SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1159(), 0, 0, uParam2 );
        }
        if (GET_DOES_WEAPON_EXIST( (uParam1^) ))
        {
            SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1159(), 0, 1, uParam2 );
        }
        if (bParam3)
        {
            uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1159(), 0, 0 );
            uVar7 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1159(), 1, 0 );
            while (GET_DOES_WEAPON_EXIST( uVar6 ))
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )) == 0)
                {
                    uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1159(), 0, 0 );
                     /* WRITE_STRING */ sub_12936( "Waiting for right weapon to be holstered." );
                }
                WAIT( 0 );
            }
            while (GET_DOES_WEAPON_EXIST( uVar7 ))
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1159() )) == 0)
                {
                    uVar7 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1159(), 1, 0 );
                     /* WRITE_STRING */ sub_12936( "Waiting for left weapon to be holstered." );
                }
                WAIT( 0 );
            }
        }
    }
    return;
}

/* F_MID_13_HANDLEBLENDOUT */ int sub_66681()
{
    if ((CAMERA_ANIMATED_CURRENT_TIME() + 1) >= (CAMERA_ANIMATED_LENGTH( "LEVEL_S_POLICE_CP_13", "B_OUT_MID_13_PP_CAM" )))
    {
        CAMERA_ANIMATED_STOP( 1000, 1 );
         /* WRITESCRIPTLOG */ sub_760( "BSW", "CAMERA SHOULD BE FROZEN!", 0 );
        return 1;
    }
    return 0;
}

/* P_HANDLE_IMAGEFX */ void sub_67040(unknown uParam0)
{
    int I;
    int J;

    switch (l_U152)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_760( "CO", "P_HANDLE_IMAGEFX", 0 );
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (uParam0^)[I]._fU32)
            {
                 /* CREATETIMER */ sub_2553( ref (uParam0^)[I]._fU36, (uParam0^)[I]._fU12, 1, 0 );
                 /* STARTTIMER */ sub_2703( ref (uParam0^)[I]._fU36 );
                if ((uParam0^)[I]._fU20 > 0)
                {
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        l_U152 = 1;
        break;
        case 1:
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if ( /* ISTIMERDONE */ sub_3069( ref (uParam0^)[I]._fU36 ))
            {
                (uParam0^)[I]._fU0 = PLAY_IMAGEFX( (uParam0^)[I]._fU4, (uParam0^)[I]._fU8, (uParam0^)[I]._fU28 );
                if ((uParam0^)[I]._fU16 > 0)
                {
                     /* CREATETIMER */ sub_2553( ref (uParam0^)[I]._fU72, (uParam0^)[I]._fU16, 1, 0 );
                     /* STARTTIMER */ sub_2703( ref (uParam0^)[I]._fU72 );
                }
                if ((uParam0^)[I]._fU20 > 0)
                {
                    for ( J = I + 1; J <= (I + (uParam0^)[I]._fU20); J++ )
                    {
                        PRINTSTRING( "******* [CO] ***** STARTING CHILD FOR index : " );
                        PRINTINT( J );
                        PRINTNL();
                        (uParam0^)[J]._fU0 = PLAY_IMAGEFX( (uParam0^)[J]._fU4, (uParam0^)[J]._fU8, (uParam0^)[I]._fU28 );
                        if ((uParam0^)[J]._fU16 > 0)
                        {
                             /* CREATETIMER */ sub_2553( ref (uParam0^)[J]._fU72, (uParam0^)[J]._fU16, 1, 0 );
                             /* STARTTIMER */ sub_2703( ref (uParam0^)[J]._fU72 );
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
            if ( /* ISTIMERDONE */ sub_3069( ref (uParam0^)[I]._fU72 ))
            {
                STOP_IMAGEFX( (uParam0^)[I]._fU0, (uParam0^)[I]._fU24 );
                (uParam0^)[I]._fU32 = 1;
                if ((uParam0^)[I]._fU20 > 0)
                {
                    if ((uParam0^)[I]._fU20 == 1)
                    {
                        STOP_IMAGEFX( (uParam0^)[I + 1]._fU0, (uParam0^)[I + 1]._fU24 );
                        (uParam0^)[I + 1]._fU32 = 1;
                    }
                    else
                    {
                        for ( J = I + 1; J <= (uParam0^)[I]._fU20; J++ )
                        {
                            STOP_IMAGEFX( (uParam0^)[J]._fU0, (uParam0^)[J]._fU24 );
                            (uParam0^)[J]._fU32 = 1;
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        break;
    }
    return;
}

/* F_STREAMREQ_ISEQ_IS_ASSET_LOADED */ int sub_68138(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int I;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if ((uParam1^)[I]._fU4 == 3)
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    ISEQ_GET_NAME( 32, ref uVar4, (uParam1^)[I]._fU0 );
                    DISPLAYF( "[CCB]### The ISEQ is loaded: {} ###", 1, 1281, ref uVar4 );
                    return 1;
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return 0;
}

/* P_INITIALIZE_IMAGEFX_ARMSGENTER */ void sub_68935()
{
     /* P_INIT_IMAGEFX */ sub_68983( ref l_U1540 );
    l_U1540[0]._fU4 = "DOUBLE_TINT_BLUE_FLASH";
    l_U1540[0]._fU16 = 900;
    l_U1540[0]._fU24 = 1;
    l_U1540[0]._fU20 = 1;
    l_U1540[0]._fU12 = 0;
    l_U1540[0]._fU8 = 4;
    l_U1540[0]._fU32 = 0;
    l_U1540[1]._fU4 = "TRIPLE_IMAGE_MASK_L_FAST";
    l_U1540[1]._fU8 = 4;
    l_U1540[1]._fU16 = 900;
    l_U1540[1]._fU24 = 1;
    l_U1540[1]._fU32 = 0;
    l_U152 = 0;
    return;
}

/* P_INIT_IMAGEFX */ void sub_68983(unknown uParam0)
{
    int I;

     /* WRITESCRIPTLOG */ sub_760( "CO", "P_INIT_IMAGEFX", 0 );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU4 = "";
        (uParam0^)[I]._fU12 = 0;
        (uParam0^)[I]._fU16 = 0;
        (uParam0^)[I]._fU20 = 0;
        (uParam0^)[I]._fU24 = 0;
        (uParam0^)[I]._fU28 = 0;
        (uParam0^)[I]._fU32 = 1;
    }
    return;
}

/* P_RELEASE_PRECINCTMPM_ASSETS */ void sub_69723()
{
     /* WRITESCRIPTLOG */ sub_760( "AT", "P_RELEASE_PRECINCTMPM_ASSETS", 0 );
     /* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ sub_69814( ref l_U1491, ref g_U2468 );
     /* P_STREAMREQ_AUDIO_BANK_REMOVE */ sub_69919( ref g_U3489, ref g_U2889 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_70267( 434544317, ref g_U2613 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_70267( 1194438308, ref g_U2613 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_70267( -862236369, ref g_U2613 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_70267( 1964270085, ref g_U2613 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_70267( 57534114, ref g_U2613 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_70267( -2075384407, ref g_U2613 );
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ void sub_69814(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_45178( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_AUDIO_BANK_REMOVE */ void sub_69919(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_7407( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a AUDIO_BANK asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE */ void sub_70267(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_7407( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a WEAPON_TYPE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}


void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    StrCopy( ref l_U39, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U47, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U55 = {0, 0, 0};
    StrCopy( ref l_U58, "DUMMY", 32 );
    l_U66 = 1;
    l_U71 = 0;
    l_U72 = 0;
    l_U73 = 0;
    l_U76 = 0;
    l_U140 = 0;
    l_U141 = 0;
    l_U142 = 1500;
    l_U218 = 0;
    l_U219 = 0;
    l_U221 = 1;
    l_U222 = 0;
    l_U223 = 0;
    l_U224 = 0;
    l_U225 = 0;
    l_U226 = 0;
    l_U227 = "po_animboss";
    l_U228 = "p_an_lgtcag_aa_h";
    l_U229 = "P_AN_WIRJMB_AA_H";
    l_U230 = "p_as_jblwir_aa_h";
    l_U231 = "p_as_jblwir_ab_h";
    l_U232 = "p_as_jblwir_ab_h";
    l_U233 = "p_as_pipsid_aa_h";
    l_U234 = "p_as_piptop_aa_h";
    l_U249 = "LEVEL_S_POLICE_CP_18";
    l_U250 = "B_OUT_MID_17_PP_CAM";
    l_U251 = "VIG_09_PP_BACH_CAM";
    l_U279 = 250;
    l_U329 = 0.10000000;
    l_U330 = 0.24000000;
    l_U331 = 0.64000000;
    l_U332 = 0.68000000;
    l_U338 = 0.10000000;
    l_U339 = 0.56700000;
    l_U340 = 0.73300000;
    l_U341 = 0.86700000;
    l_U732 = 0.08300000;
    l_U733 = 0.10000000;
    l_U734 = 0.26700000;
    l_U735 = 0.28300000;
    l_U736 = 0.41670000;
    l_U737 = 0.43300000;
    l_U738 = 0.87500000;
    l_U739 = 0.88300000;
    l_U740 = {1518.95000000, -32.81260000, 21.59290000};
    l_U743 = {1518.95000000, -32.81260000, 22.27000000};
    l_U746 = {1520.10000000, -33.02690000, 22.27000000};
    l_U749 = {1519.70000000, -33.01130000, 22.14280000};
    l_U752 = {1519.19000000, -34.01080000, 22.43300000};
    l_U755 = {1518.95000000, -32.81260000, 21.59290000};
    l_U758 = {1518.95000000, -32.81260000, 22.27000000};
    l_U761 = {1520.10000000, -33.02690000, 22.27000000};
    l_U764 = {1519.70000000, -33.01130000, 22.14280000};
    l_U767 = {1519.19000000, -34.01080000, 22.43300000};
    l_U770 = {1519.88000000, -33.55000000, 24.65000000};
    l_U773 = {1520.09000000, -33.19000000, 24.52000000};
    l_U776 = {1519.59000000, -33.09000000, 24.52000000};
    l_U779 = {1520.29000000, -33.37000000, 24.28000000};
    l_U782 = {1518.90000000, -34.05000000, 24.28000000};
    l_U791 = 0.05560000;
    l_U792 = 0.06700000;
    l_U793 = 0.18000000;
    l_U794 = 0.18700000;
    l_U795 = 0.27800000;
    l_U796 = 0.28900000;
    l_U797 = 0.58300000;
    l_U798 = 0.58900000;
    l_U818 = {1517.10000000, -32.50000000, 18.55000000};
    l_U821 = {1519.87000000, -33.00000000, 18.50000000};
    l_U901 = 7000;
    l_U902 = 13000;
    l_U912 = 500;
    l_U913 = 1000;
    l_U947 = 0;
    l_U948 = 0;
    l_U1046 = 400;
    l_U1047 = 250;
    l_U1048 = 500;
    l_U1049 = -1;
    l_U1050 = 2000;
    l_U1051 = 1000;
    l_U1082 = {1514.85900000, -32.06100000, 21.10000000};
    l_U1085 = {1513.40000000, -32.06800000, 21.10000000};
    l_U1120 = -1;
    l_U1212 = 0;
    l_U1222 = 0;
    l_U1223 = 0;
     /* WRITESCRIPTLOG */ sub_1502( "AT", "Script s_police_bossFight.sc is starting up...", 0 );
     /* P_SETUP_FINAL_FLOOR_ENEMY_DATA */ sub_1620();
     /* P_SETUP_ASSET_ARRAYS */ sub_1944();
    l_U219 = 1;
    while (NOT IS_EXITFLAG_SET())
    {
         /* P_HANDLE_FAILURE */ sub_3607();
        if (l_U222 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_13914();
        }
         /* P_BF_DEBUG_TUNING_WIDGET */ sub_78948();
        WAIT( 0 );
    }
     /* P_CLEANUP_BOSSFIGHT */ sub_6082( 0 );
     /* P_RELEASE_BOSSFIGHT_ASSETS */ sub_80144();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_police_bossFight" );
    if ((g_U862[17]._fU40 == 4) || (g_U862[17]._fU40 == 0))
    {
        if (IS_ARCADE_MODE_ACTIVE() == 0)
        {
            SWITCH_TO_LEVEL_NAME( "s_air" );
        }
    }
     /* WRITESCRIPTLOG */ sub_1502( "AT", "Script s_police_bossFight.sc is terminating...", 0 );
    return;
}

/* WRITESCRIPTLOG */ void sub_1502(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_SETUP_FINAL_FLOOR_ENEMY_DATA */ void sub_1620()
{
    g_U4587[0] = 396010604;
    g_U4587[1] = 1139881660;
    g_U4550[0] = -1952390290;
    g_U4524[0] = 1326067522;
    g_U4524[1] = -2023785959;
    g_U4524[2] = -411727246;
    g_U4524[3] = 575998594;
    g_U4524[4] = -1326155815;
    g_U4441[0] = 1492281543;
    g_U4441[1] = 396010604;
    g_U4404[0] = 1492281543;
    g_U4582[0] = 57534114;
    g_U4582[1] = 57534114;
    g_U4546[0] = 57534114;
    g_U4516[0] = 57534114;
    g_U4516[1] = 57534114;
    g_U4516[2] = 434544317;
    g_U4516[3] = 1964270085;
    g_U4516[4] = 434544317;
    g_U4436[0] = 1964270085;
    g_U4436[1] = 1194438308;
    return;
}

/* P_SETUP_ASSET_ARRAYS */ void sub_1944()
{
     /* WRITESCRIPTLOG */ sub_1502( "AT", "P_SETUP_ASSET_ARRAYS", 0 );
    l_U321[0] = -1442601226;
    l_U321[1] = 1456083707;
    l_U321[2] = -1288534103;
    l_U188[0] = -760991695;
    l_U188[1] = -1879263567;
    l_U188[2] = -90352427;
    l_U188[3] = 582189509;
    l_U188[4] = 1379253272;
    l_U188[5] = 548924158;
    l_U188[6] = 1788710176;
    l_U188[7] = 799724527;
    l_U188[8] = -1839008664;
    l_U188[9] = -1695083505;
    l_U188[10] = -590074526;
    l_U188[11] = 557354147;
    l_U188[12] = -903897506;
    l_U188[13] = l_U321[0];
    l_U188[14] = l_U321[1];
    l_U188[15] = l_U321[2];
    l_U188[16] = 2146529263;
    l_U188[17] = -28100799;
    l_U188[18] = -905596499;
    l_U188[19] = -893441735;
    l_U188[20] = -850557270;
    l_U188[21] = 116496940;
    l_U211[0] = 57534114;
    l_U211[1] = -862236369;
    l_U211[2] = 434544317;
    l_U211[3] = 1964270085;
    l_U211[4] = 1194438308;
    l_U211[5] = 319712764;
    l_U311[0] = {1514, 65503, 22};
    l_U311[1] = {1513, 65503, 22};
    l_U311[2] = {1512, 65503, 22};
    l_U235[0] = "MED_DEAD_POSE_BACK_01";
    l_U235[1] = "MED_DEAD_POSE_BACK_02";
    l_U238[0] = "MED_DEAD_POSE_BACK_03";
    l_U240[0] = "MED_DEAD_POSE_RIGHT_01";
    l_U240[1] = "MED_DEAD_POSE_RIGHT_02";
    l_U240[2] = "MED_DEAD_POSE_RIGHT_03";
    l_U240[3] = "MED_DEAD_POSE_RIGHT_04";
    l_U240[4] = "MED_DEAD_POSE_LEFT_01";
    l_U246[0] = "MED_DEAD_POSE_LEFT_03";
    l_U246[1] = "MED_DEAD_POSE_LEFT_04";
    l_U854[0] = 57534114;
    l_U854[1] = 434544317;
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2871( ref g_U4552[0], 1508.33800000, -11.42041000, 17.91546000, 284.13670000, g_U4587[0], 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2871( ref g_U4552[1], 1506.79100000, -8.77518300, 17.13145000, 97.56122000, g_U4587[1], 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2871( ref g_U4530[0], 1525.17900000, -17.15956000, 15.32535000, 237.17090000, g_U4550[0], 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2871( ref g_U4444[0], 1524.03000000, -28.35000000, 15.10000000, 137.61490000, g_U4524[0], 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2871( ref g_U4444[1], 1521.65500000, -25.42917000, 15.32315000, 184.83550000, g_U4524[1], 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2871( ref g_U4444[2], 1519.53300000, -28.77633000, 15.57354000, 224.12370000, g_U4524[2], 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2871( ref g_U4444[3], 1518.01000000, -23.64000000, 14.70000000, 114.79980000, g_U4524[3], 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2871( ref g_U4444[4], 1510.73100000, -29.26728000, 15.30522000, 3.35747500, g_U4524[4], 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2871( ref g_U4406[0], 1517.95000000, -41.45240000, 15.32571000, 300.58440000, g_U4441[0], 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2871( ref g_U4406[1], 1511.29300000, -34.84465000, 15.27990000, 45.62710000, g_U4441[1], 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2871( ref l_U824[0], 1520.04000000, -38.63000000, 18.50000000, 0, 202977358, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2871( ref l_U824[1], 1520.04000000, -38.63000000, 18.50000000, 0, 1036961553, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2871( ref l_U859[0], 1520.04000000, -38.63000000, 18.50000000, 0, 1326067522, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2871( ref l_U859[1], 1520.04000000, -38.63000000, 18.50000000, 0, 575998594, 7, 3, 2, 0, 0 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_2871(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_HANDLE_FAILURE */ void sub_3607()
{
    if (g_U821 == 18)
    {
        switch (l_U222)
        {
            case 0:
            if (( /* RESTARTING_CHECKPOINT */ sub_3809()) || (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() )))
            {
                l_U222 = 1;
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if ( /* IS_RESTART_ACTIVE */ sub_4327())
            {
                l_U222 = 3;
            }
            else if (( /* F_CHECK_QUIT_RETRY */ sub_4387( 0 )) == 1)
            {
                l_U222 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() )))
            {
                l_U222 = 3;
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
             /* WRITESCRIPTLOG */ sub_1502( "AT", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() ))) AND (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_3746() ))))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_3746(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_3708() ))
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_3708(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            AUDIO_MUSIC_STOP_ONESHOT();
             /* P_CLEANUP_BOSSFIGHT */ sub_6082( 1 );
             /* P_FORCE_SCENE_TO_LOAD */ sub_9707( 18 );
            l_U222 = 4;
             /* WRITESCRIPTLOG */ sub_1502( "AT", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
             /* WRITESCRIPTLOG */ sub_1502( "AT", "eFailState = FAIL_RESTORE_PLAYER", 0 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_10141( ref l_U152,  /* PLAYER_PED_ID */ sub_3708() );
            l_U221 = 0;
            l_U222 = 5;
             /* WRITESCRIPTLOG */ sub_1502( "AT", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
             /* WRITESCRIPTLOG */ sub_1502( "AT", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U219 = 1;
            l_U222 = 0;
             /* WRITESCRIPTLOG */ sub_1502( "AT", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

/* PLAYER_PED_ID */ int sub_3708()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_3746() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_3746()
{
    return GET_PLAYER_ID();
}

/* RESTARTING_CHECKPOINT */ int sub_3809()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_3708(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_3746(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_3746(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_3708() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_3708(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* IS_RESTART_ACTIVE */ void sub_4327()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_4387(int iParam0)
{
    iParam0 = 1;
    switch (l_U141)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_4469( ref l_U143 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() )))
            {
                l_U142 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_4603( ref l_U143, l_U142, 1, 1 );
             /* STARTTIMER */ sub_4753( ref l_U143 );
        }
        if ( /* ISTIMERDONE */ sub_4886( ref l_U143 ))
        {
             /* WRITESCRIPTLOG */ sub_1502( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_3746() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_3746(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U141 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U141 = 2;
            }
            else
            {
                l_U141 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_1502( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_5387();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_1502( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_5387();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_4469(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* CREATETIMER */ void sub_4603(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_4753(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* ISTIMERDONE */ int sub_4886(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_5387()
{
     /* WRITESCRIPTLOG */ sub_1502( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_5462( ref l_U143 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_3746() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_3746(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U140 = 0;
    l_U140 = l_U140;
    l_U141 = 0;
    return;
}

/* RESETTIMER */ void sub_5462(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_CLEANUP_BOSSFIGHT */ void sub_6082(unknown uParam0)
{
    int I;

     /* WRITESCRIPTLOG */ sub_1502( "AT", "P_CLEANUP_BOSSFIGHT", 0 );
    if ((CUTSCENE_NAMED_IS_LOADING( "MID_17_PP_concat" )) || (CUTSCENE_IS_LOADED( "MID_17_PP_concat" )))
    {
         /* WRITESCRIPTLOG */ sub_1502( "AT", "Purging loaded cutscene.", 0 );
        CLEAR_NAMED_CUTSCENE( "MID_17_PP_concat" );
    }
    ISEQ_TERMINATE( -2134927178 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_6290( -2134927178, ref g_U2662 );
     /* CLEANPED */ sub_7358( l_U817 );
     /* CLEANPEDARRAY */ sub_7447( ref l_U1195 );
     /* CLEANOBJECTARRAY */ sub_7525( ref l_U307 );
     /* CLEANOBJECTARRAY */ sub_7525( ref l_U785 );
     /* CLEANOBJECT */ sub_7577( l_U337 );
     /* CLEANOBJECT */ sub_7577( l_U799 );
     /* CLEANOBJECT */ sub_7577( l_U731 );
     /* CLEANOBJECT */ sub_7577( l_U333 );
     /* CLEANOBJECT */ sub_7577( l_U800 );
     /* CLEANOBJECT */ sub_7577( l_U801 );
     /* CLEANOBJECT */ sub_7577( l_U789 );
     /* CLEANOBJECT */ sub_7577( l_U790 );
     /* CLEANOBJECT */ sub_7577( l_U802 );
     /* CLEANOBJECT */ sub_7577( l_U803 );
     /* CLEANOBJECT */ sub_7577( l_U1079 );
     /* CLEANOBJECT */ sub_7577( l_U1080 );
     /* CLEANOBJECT */ sub_7577( l_U1081 );
     /* CLEANPEDARRAY */ sub_7447( ref g_U4433 );
     /* CLEANPEDARRAY */ sub_7447( ref g_U4510 );
     /* CLEANPEDARRAY */ sub_7447( ref g_U4544 );
     /* CLEANPEDARRAY */ sub_7447( ref g_U4579 );
     /* CLEANPEDARRAY */ sub_7447( ref l_U851 );
     /* CLEANPEDARRAY */ sub_7447( ref l_U886 );
     /* RESETTIMER */ sub_5462( ref l_U261 );
     /* RESETTIMER */ sub_5462( ref l_U270 );
    for ( I = 0; I < 24; I++ )
    {
         /* CLEANOBJECT */ sub_7577( l_U346[I]._fU4 );
         /* CLEANOBJECT */ sub_7577( l_U346[I]._fU8 );
    }
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_7925( 1528633706, ref g_U2468 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_7925( 1383512316, ref g_U2468 );
     /* CLEANPLACEMENTARRAY */ sub_8391( ref g_U4378 );
     /* CLEANPLACEMENT */ sub_8446( g_U4385 );
     /* P_KILL_SOUND_ID */ sub_8539( ref l_U1120 );
    SET_INSTANT_FIRE_FORCED( 0 );
     /* P_STOP_SP_CHALLENGES */ sub_8622( uParam0 );
    return;
}

/* P_STREAMREQ_ISEQ_REMOVE */ void sub_6290(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_6428( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a ISEQ asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ int sub_6428(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if ((uParam1^)[I] == iParam0)
            {
                DISPLAYF( "[CCB] ### The THREADID index matches the asset requested for removal: {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
            else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID index is in use and is active: {} ###", 1, 513, (uParam1^)[I] );
                Result = I;
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is in use, but is no longer active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

/* CLEANPED */ void sub_7358(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CLEANPEDARRAY */ void sub_7447(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_7358( (uParam0^)[I] );
    }
    return;
}

/* CLEANOBJECTARRAY */ void sub_7525(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* CLEANOBJECT */ sub_7577( (uParam0^)[I] );
    }
    return;
}

/* CLEANOBJECT */ void sub_7577(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE */ void sub_7925(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_6428( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a MODEL_NAME asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Removing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* CLEANPLACEMENTARRAY */ void sub_8391(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* CLEANPLACEMENT */ sub_8446( (uParam0^)[I] );
    }
    return;
}

/* CLEANPLACEMENT */ void sub_8446(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

/* P_KILL_SOUND_ID */ void sub_8539(unknown uParam0)
{
    if (l_U1120 != -1)
    {
        STOP_SOUND( (uParam0^), 0 );
        RELEASE_SOUND_ID( (uParam0^) );
        (uParam0^) = -1;
    }
    return;
}

/* P_STOP_SP_CHALLENGES */ void sub_8622(boolean bParam0)
{
     /* WRITESCRIPTLOG */ sub_1502( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    if (bParam0)
    {
        ;
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_1502( "CCB", "Stopping the Precinct context...", 0 );
        END_CONTEXT( "Precinct" );
         /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_8776( l_U152._fU52 );
    }
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_8776(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_8838( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_8838(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* P_FORCE_SCENE_TO_LOAD */ void sub_9707(unknown uParam0)
{
    char[64] cVar3;
    unknown uVar19;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() )))
    {
         /* TELEPORTPED */ sub_9783(  /* PLAYER_PED_ID */ sub_3708(), g_U2953[uParam0], g_U3083[uParam0] );
        FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_3708(), 1 );
        if (NOT (IS_STRING_NULL( ref g_U1091[uParam0]._fU0 )))
        {
            StrCopy( ref cVar3, "Loading room: ", 64 );
            ConcatString(ref cVar3, ref g_U1091[uParam0]._fU0, 64);
            PRINTSTRING( ref cVar3 );
            PRINTNL();
            uVar19 = GET_INTERIOR_FROM_NAME( ref g_U1091[uParam0]._fU64, 0 );
            SET_INTERIOR_ACTIVE( uVar19, 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( uVar19, GET_HASH_KEY( ref g_U1091[uParam0]._fU0 ) );
        }
        FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_3708(), 0 );
    }
    return;
}

/* TELEPORTPED */ void sub_9783(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_10141(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_1502( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_8776( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_10615( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10929( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11408( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10929( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11408( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10929( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11408( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_11724( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11408( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_11724( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11408( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_12296( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_12498( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_3708(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_1502( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* LOADCOLLISIONFORPED */ void sub_10615(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_10929(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_11333( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* WRITE_STRING */ void sub_11333(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_11408(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_11724(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_11333( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_12296(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_12498(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_8838( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_12596( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_12596(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_HANDLE_EVENTS */ void sub_13914()
{
    int iVar2;
    int I;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;

    iVar2 = l_U219;
     /* P_HANDLE_SP_CHALLENGES */ sub_13949();
    switch (l_U219)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_1502( "AT", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
         /* P_INITIALIZE_SCRIPT_DATA */ sub_14861();
         /* P_SET_STATIC_DATA */ sub_15313();
         /* P_INITIALIZE_SP_CHALLENGES */ sub_16039();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U219 = 2;
         /* WRITESCRIPTLOG */ sub_1502( "AT", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_1502( "AT", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
         /* P_REQUEST_BOSSFIGHT_PERSISTENT_ASSETS */ sub_17275();
         /* P_REQUEST_BOSSFIGHT_NONPERSISTENT_ASSETS */ sub_26305();
        l_U219 = 3;
         /* WRITESCRIPTLOG */ sub_1502( "AT", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if (( /* F_STREAMREQ_AUDIO_BANK_IS_LOADED */ sub_31373( ref g_U2889 )) AND (( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_30959( ref g_U2662 )) AND (( /* F_STREAMREQ_ANIM_DICT_IS_LOADED */ sub_30568( ref g_U2741 )) AND (( /* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ sub_30166( ref g_U2613 )) AND ( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_29769( ref g_U2468 ))))))
        {
            g_U822[18] = 1;
            if ((NOT l_U152._fU0) AND (g_U820 == 18))
            {
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
                l_U219 = 4;
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "eCheckpointState = CP_PRESPAWN_ENEMIES", 0 );
                l_U219 = 6;
            }
        }
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_1502( "AT", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        g_U842[18] = 1;
        l_U221 = 0;
        for ( I = 0; I < l_U1121; I++ )
        {
            l_U1121[I] = 1;
        }
        if (NOT ( /* HAS_SAVEFILE_LOADED */ sub_32026( ref l_U152 )))
        {
             /* F_GIVEPEDWEAPON */ sub_11724(  /* PLAYER_PED_ID */ sub_3708(), -862236369, 200, 0, 0 );
             /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10929(  /* PLAYER_PED_ID */ sub_3708(), 57534114, 2, 200, 0 );
             /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10929(  /* PLAYER_PED_ID */ sub_3708(), -862236369, 1, 200, 0 );
            SET_PAYNEKILLER_AMT( 7 );
            l_U219 = 5;
             /* WRITESCRIPTLOG */ sub_1502( "AT", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U219 = 6;
             /* WRITESCRIPTLOG */ sub_1502( "AT", "eCheckpointState = CP_PRESPAWN_ENEMIES", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_3708(), 1 ) )) AND ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_3708(), 2 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3708(), 0, 0 ) ))))
            {
                g_U821 = 18;
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_32584( ref l_U152, g_U821,  /* PLAYER_PED_ID */ sub_3708(), g_U2953[18], g_U3083[18], g_U3127[18], g_U3171[18], 1 );
                l_U219 = 6;
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "eCheckpointState = CP_PRESPAWN_ENEMIES", 0 );
            }
        }
        break;
        case 6:
        if (NOT l_U221)
        {
            if (l_U220)
            {
                g_U4585 = 1;
                g_U4522 = 1;
                g_U4548 = 1;
                g_U4439 = 1;
                l_U857 = 1;
                l_U898 = 1;
            }
            if ( /* F_SETUP_FINAL_FLOOR_DEAD_REINFORCEMENT */ sub_37302())
            {
                if ( /* F_SETUP_BOSS_FIGHT_WAVE1 */ sub_39108())
                {
                    if ( /* F_SETUP_BOSS_FIGHT_WAVE2 */ sub_39788())
                    {
                        l_U219 = 7;
                         /* WRITESCRIPTLOG */ sub_1502( "AT", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
                    }
                }
            }
        }
        else if (l_U220)
        {
            l_U857 = 1;
            l_U898 = 1;
        }
        if ( /* F_SETUP_BOSS_FIGHT_WAVE1 */ sub_39108())
        {
            if ( /* F_SETUP_BOSS_FIGHT_WAVE2 */ sub_39788())
            {
                l_U219 = 7;
                 /* P_CLEAR_COVERPOINTS */ sub_40927();
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
            }
        }
        break;
        case 7:
        if (g_U842[18])
        {
            if (l_U221)
            {
                if (CUTSCENE_IS_LOADED( "MID_17_PP_concat" ))
                {
                     /* P_INITIALIZE_CEILING_TILES */ sub_41437();
                     /* P_GET_EXISTING_FINALFLOOR_PLACEMENTS */ sub_42678( ref l_U1121 );
                     /* CLEANPLACEMENTARRAY */ sub_8391( ref g_U4378 );
                     /* CLEANPLACEMENT */ sub_8446( g_U4385 );
                    l_U219 = 8;
                     /* WRITESCRIPTLOG */ sub_1502( "AT", "eCheckpointState = CP_MID_17_PP", 0 );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_1502( "GA", "Waiting for MID_17_PP_concat to load.", 0 );
                }
            }
            else
            {
                 /* P_INITIALIZE_CEILING_TILES */ sub_41437();
                 /* P_GET_EXISTING_FINALFLOOR_PLACEMENTS */ sub_42678( ref l_U1121 );
                 /* CLEANPLACEMENTARRAY */ sub_8391( ref g_U4378 );
                 /* CLEANPLACEMENT */ sub_8446( g_U4385 );
                l_U219 = 8;
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "eCheckpointState = CP_MID_17_PP", 0 );
            }
        }
        break;
        case 8:
        if (l_U220)
        {
             /* P_BF_CREATE_GAMEPLAY_OBJECTS */ sub_43138();
             /* P_BF_START_BACHMEYER */ sub_45775();
             /* P_CREATE_FINALFLOOR_PLACEMENTS */ sub_46255( ref l_U1121 );
             /* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ sub_51125( ref l_U280, "MID_17_PP_concat", 47643, 47696, 48922, 49238, 49287, 50643, 250, 0 );
             /* CUTSYS_SETCUTSCENELOADINTERIORONSKIP */ sub_51675( ref l_U280, ref g_U1091[18]._fU64, ref g_U1091[18]._fU0 );
            if (l_U221)
            {
                l_U280._fU4 = 2;
            }
            else
            {
                l_U280._fU4 = 7;
            }
        }
        if ( /* CUTSYS_HANDLECUTSCENE */ sub_51807( ref l_U280 ))
        {
            if (g_U821 != 18)
            {
                g_U821 = 18;
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_32584( ref l_U152, g_U821,  /* PLAYER_PED_ID */ sub_3708(), g_U2953[18], g_U3083[18], g_U3127[18], g_U3171[18], 1 );
            }
            DO_SCREEN_FADE_IN( 0 );
             /* P_START_SP_CHALLENGES */ sub_54089();
             /* P_STREAMREQ_MODELNAMES_INSERT */ sub_17463( 1528633706, ref g_U2468 );
             /* P_STREAMREQ_MODELNAMES_INSERT */ sub_17463( 1383512316, ref g_U2468 );
             /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_54215( "MPED_RPG_CORE", ref g_U2741 );
            l_U219 = 9;
             /* WRITESCRIPTLOG */ sub_1502( "GA", "eCheckpointState = CP_BF_COMBAT_POS_B", 0 );
        }
        break;
        case 9:
        l_U219 = 10;
        break;
        case 10:
        if (l_U220)
        {
             /* P_DEACTIVATEPEDARRAY */ sub_54639( ref l_U886 );
             /* P_BF_START_GAMEPLAY_POS_B */ sub_54717();
            l_U225 = 1;
        }
        if (HAS_CUTSCENE_UNLOADED())
        {
             /* P_DEACTIVATEPEDARRAY */ sub_54639( ref l_U886 );
        }
         /* P_BF_HANDLE_BACHMEYER_SHOOTING */ sub_55127();
         /* P_HANDLE_LIGHTSTATE */ sub_58850();
         /* P_HANDLE_GRILLESTATE */ sub_61746();
         /* P_HANDLE_CEILING_TILES_BREAKING */ sub_62618();
         /* P_HANDLE_HACK_TILE_TARGETTING */ sub_63020();
         /* P_HANDLE_SWITCHING_MUSIC_CUE */ sub_63710();
        if (l_U225 == 4)
        {
            l_U219 = 11;
             /* WRITESCRIPTLOG */ sub_1502( "AT", "eCheckpointState = CP_BF_MOVE_B_TO_PRONE", 0 );
        }
        else
        {
             /* P_HANDLE_LIGHT_SUPPORT_DESTRUCTION */ sub_64020();
        }
        break;
        case 11:
        if (l_U220)
        {
             /* P_BF_MOVE_BACHMEYER_B_TO_PRONE */ sub_65324();
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() ))) AND (NOT (IS_PED_DEAD( l_U851[0] ))))
            {
                SET_PED_COMBAT_ATTRIBUTES( l_U851[0], 1, 0 );
                SET_PED_COMBAT_ATTRIBUTES( l_U851[0], 8192, 1 );
                CLEAR_PED_TASKS_IMMEDIATELY( l_U851[0] );
                TASK_COMBAT_PED( l_U851[0],  /* PLAYER_PED_ID */ sub_3708() );
            }
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() ))) AND (NOT (IS_PED_DEAD( l_U851[1] ))))
            {
                SET_PED_COMBAT_ATTRIBUTES( l_U851[1], 1, 0 );
                SET_PED_COMBAT_ATTRIBUTES( l_U851[1], 8192, 1 );
                CLEAR_PED_TASKS_IMMEDIATELY( l_U851[1] );
                TASK_COMBAT_PED( l_U851[1],  /* PLAYER_PED_ID */ sub_3708() );
            }
        }
        if (NOT (IS_PED_DEAD( l_U817 )))
        {
            if (((PED_GET_ACTION_INTENTION_STATUS( l_U817, 50 )) == 1) AND (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_65895( ref l_U851 )) == 0))
            {
                 /* CREATETIMER */ sub_4603( ref l_U252, 1000, 1, 0 );
                 /* STARTTIMER */ sub_4753( ref l_U252 );
                l_U219 = 12;
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "eCheckpointState = CP_BF_WAIT_TO_START_PRONE_TO_C", 0 );
            }
        }
         /* P_HANDLE_SWITCHING_MUSIC_CUE */ sub_63710();
        break;
        case 12:
        if ( /* ISTIMERDONE */ sub_4886( ref l_U252 ))
        {
            l_U219 = 13;
             /* WRITESCRIPTLOG */ sub_1502( "AT", "eCheckpointState = CP_BF_MOVE_PRONE_TO_C", 0 );
        }
         /* P_HANDLE_SWITCHING_MUSIC_CUE */ sub_63710();
        break;
        case 13:
        if (l_U220)
        {
             /* P_BF_MOVE_BACHMEYER_PRONE_TO_C */ sub_66229();
            CAMERA_PLAY_ANIMATED( l_U249, l_U251, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
            CAMERA_POINT_AT_COORD( 1513.40700000, -35.67614000, 19.70716000, 500 );
            if ( /* F_ISPLAYERINTRIGGERBOX */ sub_57236( l_U1025 ))
            {
                if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_3746() )))
                {
                    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 95.81223000, 1065353216, 0 );
                    SET_GAMEPLAY_CAM_RELATIVE_PITCH( -4.40428400, 1065353216, 0 );
                    SNAP_PLAYER_TO_COVERPOINT(  /* PLAYER_ID */ sub_3746(), "floor6", "Corner_Position55", 0 );
                }
            }
            else
            {
                uVar4 = {( /* MAL_GETPEDCOORDS */ sub_66649(  /* PLAYER_PED_ID */ sub_3708() )) - (vector( 0, 0, 1))};
                 /* MAL_TELEPORTPLAYER */ sub_66986( uVar4,  /* MAL_GETDESIREDHEADINGTOFACEPOINT */ sub_66748( 1513.40700000, -35.67614000, 19.70716000 ), 0, 0 );
            }
             /* NIS_PRE_SETUP */ sub_52698( 1, 0, 0, 1 );
             /* LOADSEAMLESSCUTSCENE */ sub_29260( "13_05_PP_concat", 0 );
        }
         /* P_HANDLE_WIRESTATE */ sub_67179();
         /* P_HANDLE_PIPESTATE */ sub_71945();
         /* P_HANDLE_LIGHTSTATE */ sub_58850();
         /* P_HANDLE_GRILLESTATE */ sub_61746();
         /* P_HANDLE_CEILING_TILES_BREAKING */ sub_62618();
         /* P_HANDLE_SWITCHING_MUSIC_CUE */ sub_63710();
        if (NOT (IS_PED_DEAD( l_U817 )))
        {
            if ((NOT IS_ANIMATED_CAMERA_PLAYING()) || (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( l_U249, l_U251 )) - l_U279)))
            {
                PED_SET_ACTION_INTENTION( l_U817, 58, 1000, 0, 0, 0 );
                 /* WRITESCRIPTLOG */ sub_1502( "GA", "Playing audio music one shot PRECINCT_ONESHOT_5", 0 );
                AUDIO_MUSIC_PLAY_ONESHOT();
                 /* WRITESCRIPTLOG */ sub_1502( "GA", "Forcing music PRECINCT_FINAL mood PRECINCT_01_1_3_4_6 fade in over 5 seconds", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_1_3_4_6", "PRECINCT_01_1_3_4_6", 0, 5000, 5000, -1082130432, 0 );
                CAMERA_ANIMATED_STOP( 0, 0 );
                 /* TELEPORTPED */ sub_9783( l_U817, l_U821, l_U804._fU12 );
                 /* NIS_POST_SETUP */ sub_53622( 1, 1 );
                CAMERA_CLEAR_POINT_AT_TARGET();
                l_U223 = 1;
                l_U219 = 14;
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "eCheckpointState = CP_BF_COMBAT_POS_C", 0 );
            }
        }
        break;
        case 14:
        if (l_U220)
        {
             /* P_TASK_WAVE2 */ sub_74137();
             /* P_BF_START_GAMEPLAY_POS_C */ sub_74689();
        }
        if ( /* ISTIMERDONE */ sub_4886( ref l_U889 ))
        {
             /* WRITESCRIPTLOG */ sub_1502( "RJM", "Unblocking Wave 2", 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U886[0], 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U886[1], 0 );
        }
         /* P_BF_HANDLE_BACHMEYER_SHOOTING */ sub_55127();
         /* P_HANDLE_WIRESTATE */ sub_67179();
         /* P_HANDLE_PIPESTATE */ sub_71945();
         /* P_HANDLE_LIGHTSTATE */ sub_58850();
         /* P_HANDLE_GRILLESTATE */ sub_61746();
         /* P_HANDLE_CEILING_TILES_BREAKING */ sub_62618();
         /* P_HANDLE_SWITCHING_MUSIC_CUE */ sub_63710();
        if (l_U223 == 8)
        {
            l_U219 = 15;
             /* WRITESCRIPTLOG */ sub_1502( "AT", "eCheckpointState = CP_BF_MOVE_C_TO_PRONE", 0 );
        }
        break;
        case 15:
        if (l_U220)
        {
             /* P_BF_MOVE_BACHMEYER_C_TO_PRONE */ sub_75114();
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() ))) AND (NOT (IS_PED_DEAD( l_U886[0] ))))
            {
                SET_PED_COMBAT_ATTRIBUTES( l_U886[0], 8192, 1 );
                CLEAR_PED_TASKS_IMMEDIATELY( l_U886[0] );
                TASK_COMBAT_PED( l_U886[0],  /* PLAYER_PED_ID */ sub_3708() );
            }
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() ))) AND (NOT (IS_PED_DEAD( l_U886[1] ))))
            {
                SET_PED_COMBAT_ATTRIBUTES( l_U886[1], 8192, 1 );
                CLEAR_PED_TASKS_IMMEDIATELY( l_U886[1] );
                TASK_COMBAT_PED( l_U886[1],  /* PLAYER_PED_ID */ sub_3708() );
            }
        }
        if (NOT (IS_PED_DEAD( l_U817 )))
        {
            if (((PED_GET_ACTION_INTENTION_STATUS( l_U817, 51 )) == 1) AND (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_65895( ref l_U886 )) == 0))
            {
                 /* CREATETIMER */ sub_4603( ref l_U1061, 1000, 1, 0 );
                 /* STARTTIMER */ sub_4753( ref l_U1061 );
                l_U219 = 16;
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "eCheckpointState = CP_BF_WAIT_TO_START_PRONE_TO_D", 0 );
            }
        }
         /* P_HANDLE_SWITCHING_MUSIC_CUE */ sub_63710();
        break;
        case 16:
        if ( /* ISTIMERDONE */ sub_4886( ref l_U1061 ))
        {
            l_U219 = 17;
             /* WRITESCRIPTLOG */ sub_1502( "AT", "eCheckpointState = CP_BF_MOVE_PRONE_TO_D", 0 );
        }
         /* P_HANDLE_SWITCHING_MUSIC_CUE */ sub_63710();
        break;
        case 17:
        if (l_U220)
        {
             /* P_BF_MOVE_BACHMEYER_PRONE_TO_D */ sub_75816();
        }
        if (NOT (IS_PED_DEAD( l_U817 )))
        {
            if ((PED_GET_ACTION_INTENTION_STATUS( l_U817, 56 )) == 3)
            {
                 /* P_BF_REMOVE_TARGET_GAMEPLAY_OBJECTS */ sub_76056();
                SET_PED_CAN_BE_TARGETTED( l_U817, 1 );
                PED_FINISH_ACTION_INTENTION( l_U817, 56 );
                l_U219 = 18;
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "eCheckpointState = CP_BF_COMBAT_POS_D", 0 );
            }
        }
         /* P_HANDLE_SWITCHING_MUSIC_CUE */ sub_63710();
        break;
        case 18:
        if (l_U220)
        {
             /* P_BF_START_GAMEPLAY_POS_D */ sub_76421();
        }
         /* P_BF_HANDLE_BACHMEYER_SHOOTING */ sub_55127();
        if (DOES_PED_EXIST( l_U817 ))
        {
            if (IS_PED_DEAD( l_U817 ))
            {
                 /* WRITESCRIPTLOG */ sub_1502( "GA", "Suspending music over 7 seconds.", 0 );
                AUDIO_MUSIC_SUSPEND( 7000 );
                l_U219 = 19;
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "eCheckpointState = CP_13_05_PRECINCT", 0 );
            }
        }
        break;
        case 19:
        SET_HIGHEST_ARCADE_LEVEL_UNLOCKED( 16 );
        if (IS_ARCADE_MODE_ACTIVE() == 1)
        {
            DISPLAY_ARCADE_MODE_LEVEL_END( "s_air" );
            DO_SCREEN_FADE_IN( 0 );
            l_U219 = 20;
        }
        else if (l_U220)
        {
             /* CUTSYS_CREATESTANDALONECUTSCENE */ sub_78325( ref l_U1128, "13_05_PP_concat", 76886, 77308, 77945, 49238, 250, 0 );
             /* CLEANPEDARRAY */ sub_7447( ref l_U886 );
            l_U1128._fU4 = 2;
            l_U1199 = 1;
            if (NOT (HAS_MODEL_LOADED( 1383512316 )))
            {
                 /* WRITESCRIPTLOG */ sub_1502( "BSW", "OMG HAX vict_police still isnt loaded, dump SOLD_F", 0 );
                 /* CLEANPEDARRAY */ sub_7447( ref g_U4433 );
                 /* CLEANPEDARRAY */ sub_7447( ref g_U4510 );
                 /* CLEANPEDARRAY */ sub_7447( ref g_U4544 );
                 /* CLEANPEDARRAY */ sub_7447( ref g_U4579 );
                 /* CLEANPEDARRAY */ sub_7447( ref l_U851 );
                 /* CLEANPEDARRAY */ sub_7447( ref l_U886 );
                 /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_7925( -893441735, ref g_U2468 );
            }
        }
        if ( /* CUTSYS_HANDLECUTSCENE */ sub_51807( ref l_U1128 ))
        {
            l_U219 = 20;
             /* WRITESCRIPTLOG */ sub_1502( "AT", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 20:
        if (NOT l_U218)
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U219 = 0;
             /* WRITESCRIPTLOG */ sub_1502( "AT", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
    }
    if (l_U219 != iVar2)
    {
        l_U220 = 1;
    }
    else
    {
        l_U220 = 0;
    }
    return;
}

/* P_HANDLE_SP_CHALLENGES */ void sub_13949()
{
    switch (l_U1201)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_1502( "CCB", "eBulletWhisperer - STATE_CHALLENGE_IDLE", 0 );
        l_U1201 = 1;
        break;
        case 1:
        if (l_U219 >= 10)
        {
            if (IS_PED_DEAD( l_U817 ))
            {
                 /* WRITESCRIPTLOG */ sub_1502( "CCB", "The player completed the Precinct level...", 0 );
                SCRIPT_VAR_HASH_SET_INT( -1529067244, 1 );
                 /* WRITESCRIPTLOG */ sub_1502( "CCB", "eBulletWhisperer - STATE_CHALLENGE_COMPLETE", 0 );
                l_U1201 = 2;
            }
        }
        break;
        case 2: break;
    }
    switch (l_U1202)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_1502( "CCB", "eOldPainless - STATE_CHALLENGE_IDLE", 0 );
        l_U1202 = 1;
        break;
        case 1:
        if (l_U219 >= 19)
        {
            if (SCRIPT_VAR_HASH_EXISTS( 1701971384 ))
            {
                SCRIPT_VAR_HASH_SET_INT( 1701971384, 1 );
                DISPLAYF( "[CCB] ### The current OldPainless value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( 1701971384 ) );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_1502( "CCB", "The OldPainless script variable is NOT valid!!!", 0 );
            }
             /* WRITESCRIPTLOG */ sub_1502( "CCB", "eOldPainless - STATE_CHALLENGE_COMPLETE", 0 );
            l_U1202 = 2;
        }
        break;
        case 2: break;
    }
    return;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_14861()
{
    int I;

     /* WRITESCRIPTLOG */ sub_1502( "AT", "P_INITIALIZE_SCRIPT_DATA", 0 );
    l_U220 = 1;
    l_U223 = 0;
    l_U224 = 0;
    l_U225 = 0;
    l_U226 = 0;
    for ( I = 0; I < 3; I++ )
    {
        l_U325[I] = 0;
    }
    for ( I = 0; I < 24; I++ )
    {
         /* CREATETIMER */ sub_4603( ref l_U346[I]._fU28, l_U346[I]._fU24, 1, 0 );
    }
    l_U342 = 0;
    l_U343 = 0;
    l_U344 = 0;
    l_U345 = 0;
    l_U1088 = 0;
    l_U1089 = 0;
    l_U900 = 0;
     /* RESETTIMER */ sub_5462( ref l_U903 );
     /* RESETTIMER */ sub_5462( ref l_U914 );
    l_U923 = 0;
    l_U924 = 0;
    l_U925 = 0;
    l_U926 = 0;
    l_U949 = 0;
    l_U950 = 0;
     /* CREATETIMER */ sub_4603( ref l_U252, 3000, 1, 0 );
     /* CREATETIMER */ sub_4603( ref l_U1203, 10000, 1, 0 );
     /* CREATETIMER */ sub_4603( ref l_U889, 1500, 1, 0 );
     /* RESETTIMER */ sub_5462( ref l_U1052 );
    l_U1199 = 0;
    l_U1200 = 0;
    g_U4585 = 0;
    g_U4586 = 0;
    g_U4548 = 0;
    g_U4549 = 0;
    g_U4522 = 0;
    g_U4523 = 0;
    g_U4439 = 0;
    g_U4440 = 0;
    l_U857 = 0;
    l_U858 = 0;
    l_U898 = 0;
    l_U899 = 0;
    l_U1212 = 0;
    l_U960 = 0;
    l_U961 = 0;
    l_U1049 = -1;
    return;
}

/* P_SET_STATIC_DATA */ void sub_15313()
{
     /* WRITESCRIPTLOG */ sub_1502( "AT", "P_SET_STATIC_DATA", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2871( ref l_U804, l_U818, 0.00000000, 916587311, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2871( ref l_U1155[0], 1522.62000000, -43.63000000, 19.01000000, 90.00000000, 916587311, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2871( ref l_U1155[1], 1522.62000000, -42.95000000, 19.01000000, 90.00000000, -861625555, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2871( ref l_U1155[2], 1522.62000000, -42.26000000, 19.01000000, 90.00000000, 3968639, 7, 3, 2, 0, 0 );
     /* P_CREATETRIGGERBOX */ sub_15610( ref l_U1090, "VISIBILITY_CHECK_HELPER", 1513.27000000, -20.11000000, 14.64000000, 24.13000000, 8.48000000, 3.00000000, 0.00000000, 0.00000000, 90.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15610( ref l_U962, "TRIG_BF_BACH_DONT_SHOOT", 1517.46000000, -38.96000000, 14.64000000, 19.00000000, 17.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15610( ref l_U983, "TRIG_CLEAR_DEAD_GUYS_3", 1520.84500000, -21.14416000, 14.69989000, 2.00000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15610( ref l_U1004, "TRIG_UNTETHER_WAVE1", 1510.17000000, -9.69000000, 14.82000000, 4.00000000, 8.00000000, 6.00000000, 0.00000000, 0.00000000, 90.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15610( ref l_U1025, "TRIG_WARP_MAX_WAVE2", 1523.82000000, -29.45000000, 14.70000000, 6.00000000, 5.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    return;
}

/* P_CREATETRIGGERBOX */ void sub_15610(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_INITIALIZE_SP_CHALLENGES */ void sub_16039()
{
     /* WRITESCRIPTLOG */ sub_1502( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U1201 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( -1529067244 )))
    {
         /* WRITESCRIPTLOG */ sub_1502( "CCB", "Creating the PrecinctComplete script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( -1529067244 );
        DISPLAYF( "[CCB] ### The current PrecinctComplete value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( -1529067244 ) );
        if (SCRIPT_VAR_HASH_EXISTS( -1529067244 ))
        {
             /* WRITESCRIPTLOG */ sub_1502( "CCB", "The PrecinctComplete script variable was successfully created...", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_1502( "CCB", "The PrecinctComplete script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_1502( "CCB", "The PrecinctComplete script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( -1529067244, 0 );
        DISPLAYF( "[CCB] ### The current PrecinctComplete value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( -1529067244 ) );
    }
    l_U1202 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( 1701971384 )))
    {
         /* WRITESCRIPTLOG */ sub_1502( "CCB", "Creating the OldPainless script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( 1701971384 );
        DISPLAYF( "[CCB] ### The current OldPainless value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( 1701971384 ) );
        if (SCRIPT_VAR_HASH_EXISTS( 1701971384 ))
        {
             /* WRITESCRIPTLOG */ sub_1502( "CCB", "The OldPainless script variable was successfully created...", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_1502( "CCB", "The OldPainless script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_1502( "CCB", "The OldPainless script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( 1701971384, 0 );
        DISPLAYF( "[CCB] ### The current OldPainless value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( 1701971384 ) );
    }
    return;
}

/* P_REQUEST_BOSSFIGHT_PERSISTENT_ASSETS */ void sub_17275()
{
     /* WRITESCRIPTLOG */ sub_1502( "AT", "P_REQUEST_BOSSFIGHT_PERSISTENT_ASSETS start", 0 );
     /* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ sub_17390( ref l_U188, ref g_U2468 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT_ARRAY */ sub_20312( ref l_U211, ref g_U2613 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22362( "LEVEL_S_POLICE_CP_15", ref g_U2741 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22362( "DAM_DEAD", ref g_U2741 );
     /* P_STREAMREQ_AUDIO_BANK_INSERT */ sub_24300( "SCRIPT_MISSION\S_POLICE_BOSS_FIGHT_1", ref g_U2889 );
     /* P_STREAMREQ_AUDIO_BANK_INSERT */ sub_24300( "SCRIPT_MISSION\S_POLICE_BOSS_FIGHT_2", ref g_U2889 );
     /* WRITESCRIPTLOG */ sub_1502( "AT", "P_REQUEST_BOSSFIGHT_PERSISTENT_ASSETS end", 0 );
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ void sub_17390(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_17463( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT */ void sub_17463(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 =  /* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ sub_17530( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar4 );
            PRINTNL();
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_17788( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Inserting MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ int sub_17530(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_17788( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is loading: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_17788( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                     /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_17788( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_19319( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being removed: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_17788( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_17788( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ void sub_17788(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_17849( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ int sub_17849(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID is active: {} ###", 1, 513, (uParam1^)[I] );
                if ((uParam1^)[I] == iParam0)
                {
                    DISPLAYF( "The THREADID was already requested by this thread!!!", 0 );
                    DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                    (uParam1^)[I] = nil;
                    Result = I;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The THREADID index was requested by another thread!!! {} ###", 1, 513, I );
                }
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is NOT active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

/* P_STREAMREQ_THREADID_RESET */ void sub_19319(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT_ARRAY */ void sub_20312(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_20386( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT */ void sub_20386(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ sub_20440( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_20701( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ int sub_20440(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_20701( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is loading: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_20701( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The WEAPON_TYPE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_20701( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_19319( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being removed: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_20701( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            DISPLAYF( "The WEAPON_TYPE asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_20701( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ void sub_20701(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_17849( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_INSERT */ void sub_22362(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ sub_22414( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ANIM_DICT asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22666( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ int sub_22414(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22666( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22666( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ANIM_DICT asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22666( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_19319( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22666( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ANIM_DICT asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ANIM_DICT: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
             /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22666( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ void sub_22666(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_17849( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_AUDIO_BANK_INSERT */ void sub_24300(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_AUDIO_BANK_IS_INDEX_AVAILABLE */ sub_24353( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing AUDIO_BANK asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
         /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_24608( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_AUDIO_BANK_IS_INDEX_AVAILABLE */ int sub_24353(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_24608( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_24608( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    DISPLAYF( "[CCB] ### The AUDIO_BANK is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The AUDIO_BANK asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_24608( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The AUDIO_BANK is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_19319( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_24608( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            DISPLAYF( "[CCB] ### The AUDIO_BANK is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The AUDIO_BANK is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing AUDIO_BANK: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
             /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_24608( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ void sub_24608(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_17849( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_REQUEST_BOSSFIGHT_NONPERSISTENT_ASSETS */ void sub_26305()
{
     /* WRITESCRIPTLOG */ sub_1502( "AT", "P_REQUEST_BOSSFIGHT_NONPERSISTENT_ASSETS start", 0 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_26427( -2134927178, ref g_U2662 );
    if ((l_U221) AND (g_U820 != 18))
    {
         /* LOADSEAMLESSCUTSCENE */ sub_29260( "MID_17_PP_concat", 0 );
    }
    AUDIO_MUSIC_REQUEST_ONESHOT( "PRECINCT_ONESHOT_5", 0 );
     /* WRITESCRIPTLOG */ sub_1502( "AT", "P_REQUEST_BOSSFIGHT_NONPERSISTENT_ASSETS end", 0 );
    return;
}

/* P_STREAMREQ_ISEQ_INSERT */ void sub_26427(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 =  /* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ sub_26488( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar12 );
            PRINTNL();
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar4 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
             /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_26738( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

/* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ int sub_26488(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_26738( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is loading: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_26738( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                        DISPLAYF( "The ISEQ asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_26738( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loading: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_26738( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### Re-requesting ISEQ: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_19319( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_19319( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being removed: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_26738( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar5 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_26738( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ISEQ_THREADID_SET_ID */ void sub_26738(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_17849( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* LOADSEAMLESSCUTSCENE */ void sub_29260(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_LOADED */ int sub_29769(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be requested: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to load: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be removed: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ int sub_30166(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be requested: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to load: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be removed: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ANIM_DICT_IS_LOADED */ int sub_30568(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be requested: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to load: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be removed: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ISEQ_IS_LOADED */ int sub_30959(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be requested: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to load: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be removed: {} ###", 1, 1281, ref uVar3 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_AUDIO_BANK_IS_LOADED */ int sub_31373(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* HAS_SAVEFILE_LOADED */ int sub_32026(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_1502( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_10141( uParam0,  /* PLAYER_PED_ID */ sub_3708() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_32584(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_1502( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_1502( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_12498( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_32875( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_33352( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_33352( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_33612( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_33352( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_33612( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_33612( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_33352( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_33612( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_33612( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_33612( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_33352( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_33612( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_33612( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_33612( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_33612( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_35192( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_1502( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_32875(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_8838( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_1502( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_1502( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_33352(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_33612(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_35192(int iParam0)
{
     /* WRITE_STRING */ sub_11333( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_35280( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_35357( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_35357( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_35357( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_35526( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_35526( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_35526( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_35526( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_35526( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_35526( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_35526( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_35526( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_35526( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_35526( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_35526( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_35357( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_35526( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_35526( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_35526( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_35357( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_36227( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_35526( iParam0->_fU52 );
     /* WRITE_STRING */ sub_11333( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_35526( iParam0->_fU96 );
     /* WRITE_STRING */ sub_11333( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_35526( iParam0->_fU100 );
     /* WRITE_STRING */ sub_11333( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_35526( iParam0->_fU104 );
     /* WRITE_STRING */ sub_11333( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_35526( iParam0->_fU108 );
     /* WRITE_STRING */ sub_11333( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_35526( iParam0->_fU112 );
     /* WRITE_STRING */ sub_11333( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_35526( iParam0->_fU116 );
     /* WRITE_STRING */ sub_11333( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_35526( iParam0->_fU120 );
     /* WRITE_STRING */ sub_11333( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_35526( iParam0->_fU124 );
     /* WRITE_STRING */ sub_11333( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_35526( iParam0->_fU128 );
     /* WRITE_STRING */ sub_11333( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_35526( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_35526( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_35526( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_35280(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_35357(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_35526(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_36227(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* F_SETUP_FINAL_FLOOR_DEAD_REINFORCEMENT */ int sub_37302()
{
    int I;

    switch (g_U4522)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_1502( "AT", "eSpawnFinalFloorReinforcement1 = ENTITY_STATE_INIT", 0 );
        g_U4523 = 0;
        g_U4522 = 2;
         /* WRITESCRIPTLOG */ sub_1502( "AT", "eSpawnFinalFloorReinforcement1 = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        g_U4510[g_U4523] =  /* CREATEPED */ sub_37557( ref g_U4444[g_U4523] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U4510[g_U4523], 1 );
         /* F_GIVEPEDWEAPON */ sub_11724( g_U4510[g_U4523], g_U4516[g_U4523], 25000, 0, 0 );
         /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10929( g_U4510[g_U4523], -862236369, 0, 25000, 0 );
        SET_ROOM_FOR_PED_BY_NAME( g_U4510[g_U4523], ref g_U3477 );
        g_U4523++;
        if (g_U4523 >= 4)
        {
            g_U4522 = 3;
             /* WRITESCRIPTLOG */ sub_1502( "AT", "eSpawnFinalFloorReinforcement1 = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_38755( ref g_U4510, "Reinforcement" );
        for ( I = 0; I < 4; I++ )
        {
            if (NOT (IS_PED_DEAD( g_U4510[I] )))
            {
                ENABLE_PED_PAIN( g_U4510[I], 0 );
                OVERRIDE_MOVER_PHYSICS_ON_RAGDOLL_SLEEP( g_U4510[I], 1 );
                SET_PED_CORPSE_FROM_ANIM( g_U4510[I], "DAM_DEAD", l_U240[I], 1.00000000, 1 );
            }
        }
        g_U4522 = 4;
         /* WRITESCRIPTLOG */ sub_1502( "AT", "eSpawnFinalFloorReinforcement1 = ENTITY_STATE_COMPLETE", 0 );
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

/* CREATEPED */ void sub_37557(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_37739( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_38288( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_38389( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* LOADMODEL */ void sub_37739(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_11333( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* SETPEDDEFAULTSTATS */ void sub_38288(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_38389(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ void sub_38755(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

/* F_SETUP_BOSS_FIGHT_WAVE1 */ int sub_39108()
{
    switch (l_U857)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_1502( "RJM", "F_SETUP_BOSS_FIGHT_WAVE1 = ENTITY_STATE_INIT", 0 );
        l_U858 = 0;
        l_U857 = 2;
         /* WRITESCRIPTLOG */ sub_1502( "RJM", "F_SETUP_BOSS_FIGHT_WAVE1 = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U851[l_U858] =  /* CREATEPED */ sub_37557( ref l_U824[l_U858] );
        if (NOT (IS_PED_DEAD( l_U851[l_U858] )))
        {
             /* F_GIVEPEDWEAPON */ sub_11724( l_U851[l_U858], l_U854[l_U858], 25000, 0, 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U851[l_U858], 1 );
             /* P_DEACTIVATEPED */ sub_39448( l_U851[l_U858] );
        }
        l_U858++;
        if (l_U858 >= l_U851)
        {
            l_U857 = 3;
             /* WRITESCRIPTLOG */ sub_1502( "RJM", "F_SETUP_BOSS_FIGHT_WAVE1 = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_38755( ref l_U851, "Wave1" );
        l_U857 = 4;
         /* WRITESCRIPTLOG */ sub_1502( "RJM", "F_SETUP_BOSS_FIGHT_WAVE1 = ENTITY_STATE_COMPLETE", 0 );
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

/* P_DEACTIVATEPED */ void sub_39448(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

/* F_SETUP_BOSS_FIGHT_WAVE2 */ int sub_39788()
{
    switch (l_U898)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_1502( "RJM", "F_SETUP_BOSS_FIGHT_WAVE2 = ENTITY_STATE_INIT", 0 );
        l_U899 = 0;
        l_U898 = 2;
         /* WRITESCRIPTLOG */ sub_1502( "RJM", "F_SETUP_BOSS_FIGHT_WAVE2 = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U886[l_U899] =  /* CREATEPED */ sub_37557( ref l_U859[l_U899] );
         /* SETUP_WAVE2_PED */ sub_40047( ref l_U886[l_U899] );
        l_U899++;
        if (l_U899 >= l_U886)
        {
            l_U898 = 3;
             /* WRITESCRIPTLOG */ sub_1502( "RJM", "F_SETUP_BOSS_FIGHT_WAVE2 = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_38755( ref l_U886, "Wave2" );
        l_U898 = 4;
         /* WRITESCRIPTLOG */ sub_1502( "RJM", "F_SETUP_BOSS_FIGHT_WAVE2 = ENTITY_STATE_COMPLETE", 0 );
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

/* SETUP_WAVE2_PED */ void sub_40047(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( (uParam0^) ))) AND (DOES_PED_EXIST( (uParam0^) )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
         /* F_GIVEPEDWEAPON */ sub_11724( (uParam0^), 319712764, 25000, 0, 0 );
        SET_PED_COMBAT_ATTRIBUTES( (uParam0^), 1, 0 );
        SET_PED_AI_TEMPLATE( (uParam0^), "AIT_CP_HEAVY_GNR" );
        SET_PED_HEALTH( (uParam0^), 1000, 1 );
        SET_PED_CAN_BE_MELEED( (uParam0^), 0 );
        SET_PED_NO_RAGDOLL_TO_BULLET_UNLESS_DEAD( (uParam0^), 1 );
        SET_PED_REDUCED_DAMAGE_IK( (uParam0^), 1 );
         /* MAL_SETPEDALERTNESS */ sub_40223( uParam0, 3 );
         /* MAL_SETLOCKEDANDREGISTEREDONPLAYER */ sub_40293( uParam0 );
         /* P_DEACTIVATEPED */ sub_39448( (uParam0^) );
    }
    return;
}

/* MAL_SETPEDALERTNESS */ void sub_40223(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_ALERTNESS( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETLOCKEDANDREGISTEREDONPLAYER */ void sub_40293(unknown uParam0)
{
     /* MAL_SETLOCKEDANDREGISTEREDONPED */ sub_40347( uParam0,  /* PLAYER_PED_ID */ sub_3708() );
    return;
}

/* MAL_SETLOCKEDANDREGISTEREDONPED */ void sub_40347(unknown uParam0, unknown uParam1)
{
     /* MAL_REGISTERTARGET */ sub_40395( uParam0, uParam1 );
     /* MAL_SETLOCKEDTARGET */ sub_40477( uParam0, uParam1 );
    return;
}

/* MAL_REGISTERTARGET */ void sub_40395(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETLOCKEDTARGET */ void sub_40477(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* P_CLEAR_COVERPOINTS */ void sub_40927()
{
    int I;

    for ( I = 0; I < g_U4433; I++ )
    {
        if (IS_PED_DEAD( g_U4433[I] ))
        {
            if (IS_PED_IN_GAMEPLAY_HELPER_BOX( g_U4433[I], ref l_U983._fU0 ))
            {
                 /* CLEANPED */ sub_7358( g_U4433[I] );
            }
        }
    }
    for ( I = 0; I < g_U4510; I++ )
    {
        if (IS_PED_DEAD( g_U4510[I] ))
        {
            if (IS_PED_IN_GAMEPLAY_HELPER_BOX( g_U4510[I], ref l_U983._fU0 ))
            {
                 /* CLEANPED */ sub_7358( g_U4510[I] );
            }
        }
    }
    for ( I = 0; I < g_U4579; I++ )
    {
        if (IS_PED_DEAD( g_U4579[I] ))
        {
            if (IS_PED_IN_GAMEPLAY_HELPER_BOX( g_U4579[I], ref l_U983._fU0 ))
            {
                 /* CLEANPED */ sub_7358( g_U4579[I] );
            }
        }
    }
    for ( I = 0; I < g_U4544; I++ )
    {
        if (IS_PED_DEAD( g_U4544[I] ))
        {
            if (IS_PED_IN_GAMEPLAY_HELPER_BOX( g_U4544[I], ref l_U983._fU0 ))
            {
                 /* CLEANPED */ sub_7358( g_U4544[I] );
            }
        }
    }
    return;
}

/* P_INITIALIZE_CEILING_TILES */ void sub_41437()
{
    l_U346[0]._fU12 = {1511, 65503, 23};
    l_U346[0]._fU0 = 582189509;
    l_U346[0]._fU24 = 0;
    l_U346[1]._fU12 = {1512.63000000, 65503, 23};
    l_U346[1]._fU0 = 582189509;
    l_U346[1]._fU24 = 0;
    l_U346[2]._fU12 = {1514.26000000, 65503, 23};
    l_U346[2]._fU0 = 582189509;
    l_U346[2]._fU24 = 0;
    l_U346[3]._fU12 = {1515.88000000, 65503, 23};
    l_U346[3]._fU0 = 582189509;
    l_U346[3]._fU24 = 0;
    l_U346[4]._fU12 = {1517.51000000, 65503, 23};
    l_U346[4]._fU0 = 582189509;
    l_U346[4]._fU24 = 220;
    l_U346[5]._fU12 = {1519.14000000, 65503, 23};
    l_U346[5]._fU0 = 582189509;
    l_U346[5]._fU24 = 0;
    l_U346[6]._fU12 = {1520.77000000, 65503, 23};
    l_U346[6]._fU0 = 582189509;
    l_U346[6]._fU24 = 210;
    l_U346[7]._fU12 = {1511, -34.49580000, 23};
    l_U346[7]._fU0 = 582189509;
    l_U346[7]._fU24 = 0;
    l_U346[8]._fU12 = {1515.88000000, -34.49580000, 23};
    l_U346[8]._fU0 = 582189509;
    l_U346[8]._fU24 = 0;
    l_U346[9]._fU12 = {1517.51000000, -34.49580000, 23};
    l_U346[9]._fU0 = 582189509;
    l_U346[9]._fU24 = 180;
    l_U346[10]._fU12 = {1519.14000000, -34.49580000, 23};
    l_U346[10]._fU0 = 582189509;
    l_U346[10]._fU24 = 0;
    l_U346[11]._fU12 = {1520.77000000, -34.49580000, 23};
    l_U346[11]._fU0 = 582189509;
    l_U346[11]._fU24 = 220;
    l_U346[12]._fU12 = {1511, -35.99160000, 23};
    l_U346[12]._fU0 = 582189509;
    l_U346[12]._fU24 = 0;
    l_U346[13]._fU12 = {1512.63000000, -35.99160000, 23};
    l_U346[13]._fU0 = 582189509;
    l_U346[13]._fU24 = 0;
    l_U346[14]._fU12 = {1514.26000000, -35.99160000, 23};
    l_U346[14]._fU0 = 582189509;
    l_U346[14]._fU24 = 0;
    l_U346[15]._fU12 = {1515.88000000, -35.99160000, 23};
    l_U346[15]._fU0 = 582189509;
    l_U346[15]._fU24 = 0;
    l_U346[16]._fU12 = {1520.77000000, -35.99160000, 23};
    l_U346[16]._fU0 = 582189509;
    l_U346[16]._fU24 = 0;
    l_U346[17]._fU12 = {1511, -37.48740000, 23};
    l_U346[17]._fU0 = 582189509;
    l_U346[17]._fU24 = 0;
    l_U346[18]._fU12 = {1512.63000000, -37.48740000, 23};
    l_U346[18]._fU0 = 582189509;
    l_U346[18]._fU24 = 0;
    l_U346[19]._fU12 = {1514.26000000, -37.48740000, 23};
    l_U346[19]._fU0 = 582189509;
    l_U346[19]._fU24 = 0;
    l_U346[20]._fU12 = {1515.88000000, -37.48740000, 23};
    l_U346[20]._fU0 = 582189509;
    l_U346[20]._fU24 = 0;
    l_U346[21]._fU12 = {1517.51000000, -37.48740000, 23};
    l_U346[21]._fU0 = 582189509;
    l_U346[21]._fU24 = 0;
    l_U346[22]._fU12 = {1519.14000000, -37.48740000, 23};
    l_U346[22]._fU0 = 582189509;
    l_U346[22]._fU24 = 0;
    l_U346[23]._fU12 = {1520.77000000, -37.48740000, 23};
    l_U346[23]._fU0 = 582189509;
    l_U346[23]._fU24 = 0;
    return;
}

/* P_GET_EXISTING_FINALFLOOR_PLACEMENTS */ void sub_42678(unknown uParam0)
{
    int I;

    if (NOT ((uParam0^) == 6))
    {
        SCRIPT_ASSERT( "Array passed into P_GET_EXISTING_FINALFLOOR_PLACEMENTS is {0} long when it should be {1}!", 2, 513, (uParam0^), 513, 6 );
    }
    for ( I = 0; I < 6; I++ )
    {
        if (DOES_PLACEMENT_EXIST( g_U4378[I] ))
        {
            (uParam0^)[I] = 1;
        }
    }
    return;
}

/* P_BF_CREATE_GAMEPLAY_OBJECTS */ void sub_43138()
{
    int I;

     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_CREATE_GAMEPLAY_TARGETS start", 0 );
    for ( I = 0; I < 3; I++ )
    {
        l_U307[I] =  /* CREATEOBJECTNOOFFSET */ sub_43276( l_U321[I], l_U311[I], 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U307[I] ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U307[I], ref g_U3477 );
            SET_OBJECT_HEALTH( l_U307[I], 60.00000000 );
            FREEZE_OBJECT_POSITION( l_U307[I], 1 );
            CAMERA_CAN_TARGET_OBJECT( 1, l_U307[I] );
        }
    }
    for ( I = 0; I < 24; I++ )
    {
        l_U346[I]._fU4 =  /* CREATEOBJECTNOOFFSET */ sub_43276( l_U346[I]._fU0, l_U346[I]._fU12, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U346[I]._fU4 ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U346[I]._fU4, ref g_U3477 );
            CAMERA_CAN_TARGET_OBJECT( 1, l_U346[I]._fU4 );
        }
        if ((I <= 6) || (I >= 0))
        {
            l_U346[I]._fU8 =  /* CREATEOBJECTNOOFFSET */ sub_43276( -850557270, l_U346[I]._fU12, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        }
        else
        {
            l_U346[I]._fU8 =  /* CREATEOBJECTNOOFFSET */ sub_43276( -905596499, l_U346[I]._fU12, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        }
        if (DOES_OBJECT_EXIST( l_U346[I]._fU8 ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U346[I]._fU8, ref g_U3477 );
            SET_OBJECT_VISIBLE( l_U346[I]._fU8, 0 );
            SET_OBJECT_PROOFS( l_U346[I]._fU8, 1, 1, 1, 1, 1 );
            FREEZE_OBJECT_POSITION( l_U346[I]._fU8, 1 );
            SET_OBJECT_COLLISION( l_U346[I]._fU8, 0 );
        }
    }
    l_U333 =  /* CREATEOBJECTNOOFFSET */ sub_43276( 548924158, 1513.50000000, -33.00000000, 22.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U333 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U333, ref g_U3477 );
        CAMERA_CAN_TARGET_OBJECT( 1, l_U333 );
    }
    l_U731 =  /* CREATEOBJECTNOOFFSET */ sub_43276( 1379253272, 1520, 65503, 25, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U731 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U731, ref g_U3477 );
        CAMERA_CAN_TARGET_OBJECT( 0, l_U731 );
        FREEZE_OBJECT_POSITION( l_U731, 1 );
    }
    l_U785[0] =  /* CREATEOBJECTNOOFFSET */ sub_43276( -1839008664, 1520, 65502, 23, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U785[0] ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U785[0], ref g_U3477 );
        FREEZE_OBJECT_POSITION( l_U785[0], 1 );
    }
    l_U785[1] =  /* CREATEOBJECTNOOFFSET */ sub_43276( -1695083505, 1519, 65502, 23, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U785[1] ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U785[1], ref g_U3477 );
        FREEZE_OBJECT_POSITION( l_U785[1], 1 );
    }
    l_U785[2] =  /* CREATEOBJECTNOOFFSET */ sub_43276( -590074526, 1520, 65503, 23, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U785[2] ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U785[2], ref g_U3477 );
        FREEZE_OBJECT_POSITION( l_U785[2], 1 );
    }
    l_U789 =  /* CREATEOBJECTNOOFFSET */ sub_43276( 557354147, 1518.09000000, -33.73820000, 22.09910000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U789 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U789, ref g_U3477 );
        FREEZE_OBJECT_POSITION( l_U789, 1 );
    }
    l_U790 =  /* CREATEOBJECTNOOFFSET */ sub_43276( -903897506, 1519.74000000, -33.52220000, 24.04210000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U790 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U790, ref g_U3477 );
        FREEZE_OBJECT_POSITION( l_U790, 1 );
    }
    l_U337 =  /* CREATEOBJECTNOOFFSET */ sub_43276( -1879263567, 1516, 65501, 23, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U337 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U337, ref g_U3477 );
        FREEZE_OBJECT_POSITION( l_U337, 1 );
    }
    l_U799 =  /* CREATEOBJECTNOOFFSET */ sub_43276( -90352427, 1516, 65504, 22, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U799 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U799, ref g_U3477 );
        FREEZE_OBJECT_POSITION( l_U799, 1 );
    }
    l_U800 =  /* CREATEOBJECTNOOFFSET */ sub_43276( 1788710176, 1516, 65500, 22, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U800 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U800, ref g_U3477 );
        FREEZE_OBJECT_POSITION( l_U800, 1 );
    }
    l_U801 =  /* CREATEOBJECTNOOFFSET */ sub_43276( 799724527, 1515, 65500, 22, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U801 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U801, ref g_U3477 );
        FREEZE_OBJECT_POSITION( l_U801, 1 );
    }
    l_U802 =  /* CREATEOBJECTNOOFFSET */ sub_43276( 548924158, 1518.39000000, -34.49580000, 22, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U802 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U802, ref g_U3477 );
    }
    l_U803 =  /* CREATEOBJECTNOOFFSET */ sub_43276( 116496940, 1518.01800000, -31.37300000, 18.38200000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U803 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U803, ref g_U3477 );
        FREEZE_OBJECT_POSITION( l_U803, 1 );
    }
    l_U1079 =  /* CREATEOBJECTNOOFFSET */ sub_43276( -28100799, 1519.58500000, -32.66267000, 20.73682000, 90.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U1079 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1079, ref g_U3477 );
        FREEZE_OBJECT_POSITION( l_U1079, 1 );
        SET_OBJECT_VISIBLE( l_U1079, 0 );
        SET_OBJECT_COLLISION( l_U1079, 0 );
        SET_OBJECT_TARGETTABLE( l_U1079, 0 );
        SET_OBJECT_INVINCIBLE( l_U1079, 1 );
        CAMERA_CAN_TARGET_OBJECT( 1, l_U1079 );
    }
    l_U1080 =  /* CREATEOBJECTNOOFFSET */ sub_43276( 2146529263, l_U1082, 90.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U1080 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1080, ref g_U3477 );
        FREEZE_OBJECT_POSITION( l_U1080, 1 );
        SET_OBJECT_VISIBLE( l_U1080, 0 );
        SET_OBJECT_TARGETTABLE( l_U1080, 0 );
        CAMERA_CAN_TARGET_OBJECT( 1, l_U1080 );
    }
    l_U1081 =  /* CREATEOBJECTNOOFFSET */ sub_43276( 2146529263, l_U1085, 90.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U1081 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1081, ref g_U3477 );
        FREEZE_OBJECT_POSITION( l_U1081, 1 );
        SET_OBJECT_VISIBLE( l_U1081, 0 );
        SET_OBJECT_TARGETTABLE( l_U1081, 0 );
        CAMERA_CAN_TARGET_OBJECT( 1, l_U1081 );
    }
     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_CREATE_GAMEPLAY_TARGETS end", 0 );
    return;
}

/* CREATEOBJECTNOOFFSET */ void sub_43276(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_37739( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* P_BF_START_BACHMEYER */ void sub_45775()
{
     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_START_BACHMEYER start", 0 );
    l_U817 =  /* CREATEPED */ sub_37557( ref l_U804 );
     /* F_GIVEPEDWEAPON */ sub_11724( l_U817, 57534114, 25000, 0, 0 );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() ))) AND (NOT (IS_PED_DEAD( l_U817 ))))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U817, ref g_U3477 );
        SET_BULLET_CAM_PREF( l_U817, "PIST_CUSTOM_NO_VIC_POLICE_01", "PIST_CUSTOM_NO_VIC_POLICE_02", "PIST_CUSTOM_NO_VIC_POLICE_03", "", 0, 0, 0, 0, 0, 0, 0, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U817, 1 );
        SET_PED_AI_TEMPLATE( l_U817, "AIT_EXPERT" );
        REGISTER_TARGET( l_U817,  /* PLAYER_PED_ID */ sub_3708() );
        SET_LOCKED_TARGET( l_U817,  /* PLAYER_PED_ID */ sub_3708() );
        SET_PED_PRIMARY_LOOKAT( l_U817,  /* PLAYER_PED_ID */ sub_3708() );
        SET_PED_CONSUMING_AMMO( l_U817, 0 );
        SET_PED_PROOFS( l_U817, 1, 1, 1, 1, 1 );
        SET_PED_INVINCIBLE( l_U817, 1 );
        SET_PED_CAN_BE_TARGETTED( l_U817, 0 );
        SET_PED_GORE( l_U817, 0 );
    }
     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_START_BACHMEYER end", 0 );
    return;
}

/* P_CREATE_FINALFLOOR_PLACEMENTS */ void sub_46255(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_1502( "SWN", "P_CREATE_FinalFloor_PLACEMENTS", "###" );
    if (NOT ((uParam0^) == 6))
    {
        SCRIPT_ASSERT( "Array passed into P_CREATE_FINALFLOOR_PLACEMENTS is {0} long when it should be {1}!", 2, 513, (uParam0^), 513, 6 );
    }
    if ((uParam0^)[0])
    {
        g_U4378[0] =  /* CREATEPLACEMENT */ sub_46519( 809028259, 1521.74300000, -37.41500000, 16.27500000, 0.00000000, -1.20000000, 0.00000000, 1, 0, 0, 1119092736 );
        if (DOES_PLACEMENT_EXIST( g_U4378[0] ))
        {
            ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U4378[0], ref g_U3477 );
        }
    }
    if ((uParam0^)[1])
    {
        g_U4378[1] =  /* CREATEPLACEMENT */ sub_46519( -4072149, 1507.60000000, -33.14000000, 16.46000000, 0.00000000, 0.00000000, 0.00000000, 1, 0, 0, 1119092736 );
        if (DOES_PLACEMENT_EXIST( g_U4378[1] ))
        {
            ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U4378[1], ref g_U3477 );
        }
    }
    if ((uParam0^)[2])
    {
        g_U4378[2] =  /* CREATEPLACEMENT */ sub_46519( -4072149, 1502.46000000, -15.03900000, 19.45000000, 0.00000000, 0.00000000, 30.00000000, 1, 0, 0, 1119092736 );
        if (DOES_PLACEMENT_EXIST( g_U4378[2] ))
        {
            ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U4378[2], ref g_U3477 );
        }
    }
    if ((uParam0^)[3])
    {
        g_U4378[3] =  /* CREATEPLACEMENT */ sub_46519( -4072149, 1526.06000000, -15.24000000, 16.01000000, 0.00000000, 0.00000000, 0.00000000, 1, 0, 0, 1119092736 );
        if (DOES_PLACEMENT_EXIST( g_U4378[3] ))
        {
            ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U4378[3], ref g_U3477 );
        }
    }
    if ((uParam0^)[5])
    {
        g_U4378[5] =  /* CREATEPLACEMENT */ sub_46519( -4072149, 1514.28700000, -22.23200000, 15.73700000, 0.00000000, 0.00000000, 0.00000000, 1, 0, 0, 1119092736 );
        if (DOES_PLACEMENT_EXIST( g_U4378[5] ))
        {
            ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U4378[5], ref g_U3477 );
        }
    }
    g_U4385 = CREATE_AMMOBAG_PLACEMENT_ROTATE( 1524.50000000, -18.29600000, 16.00520000, 0.00000000, 0.00000000, 2.80000000, 10.00000000, 3.00000000, 0, 1119092736 );
    if (DOES_PLACEMENT_EXIST( g_U4385 ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U4385, ref g_U3477 );
         /* P_SETUP_AMMO_BAG_DEFAULTS */ sub_47261( g_U4385 );
    }
    return;
}

/* CREATEPLACEMENT */ void sub_46519(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a placement to exist: {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return Result;
}

/* P_SETUP_AMMO_BAG_DEFAULTS */ void sub_47261(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        SET_AMMOBAG_REGEN_TIME( uParam0, 10.00000000 );
        SET_AMMOBAG_REGEN_RANGE( uParam0, 3.00000000 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1088031219, 45 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 954369040, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1138793073, 95 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1087746638, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1295933220, 30 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1383321053, 85 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1481241171, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1889644301, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -790090695, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1742569970, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1575030772, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1622373246, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 558118158, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1701914198, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1126469201, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 936600426, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 205668857, 0 );
    }
    return;
}

/* CUTSYS_DEFAULT_PRECUTSCENESETUP */ int sub_47643()
{
    return 1;
}

/* P_BF_MID_17_PP_CUTSCENEREGISTRATION */ void sub_47696()
{
    unknown uVar2;
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_MID_17_CutsceneRegistration start", 0 );
     /* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ sub_47797( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() )))
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3708(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            if ( /* IS_WEAPON_SINGLE_HANDED */ sub_47920( uVar2 ))
            {
                REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_PI_Clt1911_Aa_H", 0 );
            }
            else
            {
                uVar3 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_48155();
                if (GET_DOES_WEAPON_EXIST( uVar3 ))
                {
                    REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar3, "W_PI_Clt1911_Aa_H", 0 );
                }
            }
        }
        CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_3708(), g_U2953[18], g_U3083[18] );
        CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "floor6", "GrabSpline199", 0, 0 );
        CUTSCENE_SET_COVER_CAMERA_DIRECTION( g_U3127[18], g_U3171[18] );
        CUTSCENE_REGISTER_ISEQ( -2134927178 );
        ISEQ_REGISTER_ENTITY( -2134927178, "Max",  /* PLAYER_PED_ID */ sub_3708(), 0 );
    }
    if (NOT (IS_PED_DEAD( l_U817 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U817, "Bach_Unif", 0 );
        uVar2 = GET_WEAPON_FROM_HAND( l_U817, 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_AR_G36K_Aa_H", 0 );
        }
        CUTSCENE_REGISTER_PED_TELEPORT( l_U817, l_U804._fU0, l_U804._fU12 );
        ISEQ_REGISTER_ENTITY( -2134927178, "bachmeyer", l_U817, 0 );
    }
     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_MID_17_CutsceneRegistration end", 0 );
    return;
}

/* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ void sub_47797(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3708(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if ((( /* IS_WEAPON_SINGLE_HANDED */ sub_47920( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_48155();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_3708(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

/* IS_WEAPON_SINGLE_HANDED */ int sub_47920(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ int sub_48155()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3708(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_47920( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3708(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_3708(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_3708(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

/* P_BF_MID_17_PP_HANDLECUTSCENE */ void sub_48922()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;

    if (l_U280._fU52)
    {
        if (IS_SCREEN_FADED_OUT())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        if (NOT IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED())
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        }
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() )))
        {
            uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3708(), 0, 0 );
            if (GET_DOES_WEAPON_EXIST( uVar2 ))
            {
                if ( /* IS_WEAPON_SINGLE_HANDED */ sub_47920( uVar2 ))
                {
                    uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3708(), 1, 0 );
                    if (GET_DOES_WEAPON_EXIST( uVar3 ))
                    {
                        SET_WEAPON_VISIBLE( uVar3, 0 );
                    }
                    uVar4 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_3708(), 2 );
                    if (GET_DOES_WEAPON_EXIST( uVar4 ))
                    {
                        SET_WEAPON_VISIBLE( uVar4, 0 );
                    }
                }
                else
                {
                    SET_WEAPON_VISIBLE( uVar2, 0 );
                }
            }
        }
         /* WRITESCRIPTLOG */ sub_1502( "AT", "Suspending audio over 9 seconds.", 0 );
        AUDIO_MUSIC_SUSPEND( 9000 );
    }
    return;
}

/* CUTSYS_DEFAULT_POSTCUTSCENE */ int sub_49238()
{
    return 1;
}

/* P_BF_MID_17_PP_PREPAREBLENDOUT */ void sub_49287()
{
     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_MID_17_PP_PrepareBlendout start", 0 );
    CAMERA_PLAY_ANIMATED( l_U249, l_U250, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
    if (NOT (ISEQ_QUERY_STATE( -2134927178, 3 )))
    {
        if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_3746() )))
        {
             /* TELEPORTPED */ sub_9783(  /* PLAYER_PED_ID */ sub_3708(), g_U2953[18], g_U3083[18] );
            ISEQ_REGISTER_ENTITY( -2134927178, "Max",  /* PLAYER_PED_ID */ sub_3708(), 0 );
            SNAP_PLAYER_TO_COVERLINE(  /* PLAYER_ID */ sub_3746(), "floor6", "GrabSpline199", 0, g_U2953[18] );
        }
        if (NOT (IS_PED_DEAD( l_U817 )))
        {
            ISEQ_REGISTER_ENTITY( -2134927178, "bachmeyer", l_U817, 0 );
             /* TELEPORTPED */ sub_9783( l_U817, l_U804._fU0, l_U804._fU12 );
            ISEQ_START( -2134927178 );
        }
        if (IS_DEATH_PANEL_WIPE_ALLOWED())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
    }
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U3127[18], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U3171[18], 1065353216, 0 );
     /* WRITESCRIPTLOG */ sub_1502( "GA", "Forcing music PRECINCT_FINAL mood PRECINCT_01_3_5", 0 );
    AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_3_5", "PRECINCT_01_3_5", 0, 2000, -1, -1082130432, 0 );
     /* STARTTIMER */ sub_4753( ref l_U1203 );
     /* CREATETIMER */ sub_4603( ref l_U270, 500, 1, 0 );
     /* STARTTIMER */ sub_4753( ref l_U270 );
     /* P_TASK_WAVE1 */ sub_49872();
     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_MID_17_PP_PrepareBlendout end", 0 );
    return;
}

/* P_TASK_WAVE1 */ void sub_49872()
{
     /* P_ACTIVATEPEDARRAY */ sub_49901( ref l_U851 );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() ))) AND (NOT (IS_PED_DEAD( l_U851[0] ))))
    {
         /* TELEPORTPED */ sub_9783( l_U851[0], 1523.53000000, -30.91000000, 15.10000000, 0 );
        CLEAR_PED_TASKS_IMMEDIATELY( l_U851[0] );
        PED_ACTION_TREE_PLAY_NODE( l_U851[0], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U851[0], 0 );
        REGISTER_TARGET( l_U851[0],  /* PLAYER_PED_ID */ sub_3708() );
        SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U851[0], 0, 0 ), 100 );
        TASK_ATTACK_MOVE( l_U851[0], 1516.11000000, -29.62000000, 15.10000000, 0.50000000, 20, -1, 4 );
    }
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() ))) AND (NOT (IS_PED_DEAD( l_U851[1] ))))
    {
         /* TELEPORTPED */ sub_9783( l_U851[1], 1518.76000000, -38.89000000, 15.10000000, 0 );
        CLEAR_PED_TASKS_IMMEDIATELY( l_U851[1] );
        PED_ACTION_TREE_PLAY_NODE( l_U851[1], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U851[1], 0 );
        REGISTER_TARGET( l_U851[1],  /* PLAYER_PED_ID */ sub_3708() );
        SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U851[1], 0, 0 ), 100 );
        TASK_ATTACK_MOVE( l_U851[1], 1517.98000000, -27.69000000, 15.10000000, 0.50000000, 20, -1, 4 );
    }
    return;
}

/* P_ACTIVATEPEDARRAY */ void sub_49901(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_ACTIVATEPED */ sub_49953( (uParam0^)[I] );
    }
    return;
}

/* P_ACTIVATEPED */ void sub_49953(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

/* F_MID17PP_HANDLEBLENDOUT */ int sub_50643()
{
    int iVar2;

    if ((ISEQ_QUERY_STATE( -2134927178, 3 )) AND (IS_SCREEN_FADED_OUT()))
    {
         /* WRITESCRIPTLOG */ sub_1502( "GA", "S_POLICE_VIG09 is playing, fading in screen.", 0 );
        DO_SCREEN_FADE_IN( 0 );
    }
    if ( /* ISTIMERDONE */ sub_4886( ref l_U270 ))
    {
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() ))) AND (NOT (IS_PED_DEAD( l_U817 ))))
        {
             /* WRITESCRIPTLOG */ sub_1502( "SBA", "Bachmeyer shooting in blendout", 0 );
            SET_PED_FORCE_FIRE( l_U817 );
            TASK_SHOOT_AT_PED( l_U817,  /* PLAYER_PED_ID */ sub_3708(), 2800, -256437761, 0, 1, 0 );
        }
    }
    if ((NOT ( /* HASTIMERBEENACTIVATED */ sub_4469( ref l_U261 ))) AND ((CAMERA_ANIMATED_LENGTH( l_U249, l_U250 )) <= (CAMERA_ANIMATED_CURRENT_TIME() + 1000)))
    {
         /* WRITESCRIPTLOG */ sub_1502( "BSW", "F_MID17PP_HandleBlendout blending back to gameplay", 0 );
        iVar2 = 750;
        CAMERA_ANIMATED_STOP( iVar2, 1 );
         /* CREATETIMER */ sub_4603( ref l_U261, iVar2, 1, 0 );
         /* STARTTIMER */ sub_4753( ref l_U261 );
    }
    if ((ISEQ_QUERY_ENTITY_STATE( -2134927178, "Max", 6 )) || (ISEQ_QUERY_ENTITY_STATE( -2134927178, "Max", 5 )))
    {
        if ( /* ISTIMERDONE */ sub_4886( ref l_U261 ))
        {
            return 1;
        }
    }
    return 0;
}

/* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ void sub_51125(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
     /* WRITESCRIPTLOG */ sub_1502( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return  /* CUTSYS_PRIVATE_CREATECUTSCENE */ sub_51349( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 51246, 51296, uParam8 );
}

/* CUTSYS_DEFAULT_PREPAREBLENDIN */ void sub_51246()
{
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDIN */ int sub_51296()
{
    return 1;
}

/* CUTSYS_PRIVATE_CREATECUTSCENE */ void sub_51349(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

/* CUTSYS_SETCUTSCENELOADINTERIORONSKIP */ void sub_51675(int iParam0, unknown uParam1, unknown uParam2)
{
    iParam0->_fU68 = 1;
    iParam0->_fU72 = 1;
    iParam0->_fU76 = uParam1;
    iParam0->_fU80 = uParam2;
    iParam0->_fU24 = 1;
    return;
}

/* CUTSYS_HANDLECUTSCENE */ void sub_51807(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
             /* WRITESCRIPTLOG */ sub_1502( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
             /* WRITESCRIPTLOG */ sub_1502( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
             /* WRITESCRIPTLOG */ sub_1502( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
             /* WRITESCRIPTLOG */ sub_1502( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
             /* WRITESCRIPTLOG */ sub_1502( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
             /* LOADSEAMLESSCUTSCENE */ sub_29260( iParam0->_fU0, 0 );
             /* WRITESCRIPTLOG */ sub_1502( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
             /* NIS_PRE_SETUP */ sub_52698( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
         /* NIS_PRE_SETUP */ sub_52698( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
         /* WRITESCRIPTLOG */ sub_1502( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                 /* P_SET_PLAYER_WEAPONS_VISIBLE */ sub_53242( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
         /* NIS_PRE_SETUP */ sub_52698( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
             /* NIS_POST_SETUP */ sub_53622( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
         /* NIS_POST_SETUP */ sub_53622( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

/* NIS_PRE_SETUP */ void sub_52698(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_3746(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_3708(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_3708() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_3708(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* P_SET_PLAYER_WEAPONS_VISIBLE */ void sub_53242(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3708(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3708(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_3708(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_3708(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_3708(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

/* NIS_POST_SETUP */ void sub_53622(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_3746(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_3708(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_53720();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_53720()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3708(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3708(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_3708(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_3708(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* P_START_SP_CHALLENGES */ void sub_54089()
{
     /* WRITESCRIPTLOG */ sub_1502( "CCB", "P_START_SP_CHALLENGES", 0 );
    return;
}

/* P_STREAMREQ_ANIM_DICT_REMOVE */ void sub_54215(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_6428( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ANIM_DICT asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_DEACTIVATEPEDARRAY */ void sub_54639(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_DEACTIVATEPED */ sub_39448( (uParam0^)[I] );
    }
    return;
}

/* P_BF_START_GAMEPLAY_POS_B */ void sub_54717()
{
    int I;

     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_START_GAMEPLAY_POS_B start", 0 );
    for ( I = 0; I < 3; I++ )
    {
        if (DOES_OBJECT_EXIST( l_U307[I] ))
        {
            CAMERA_CAN_TARGET_OBJECT( 1, l_U307[I] );
        }
    }
    for ( I = 0; I <= (l_U851 - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( l_U851[I] )))
        {
             /* WRITESCRIPTLOG */ sub_1502( "RJM", "P_BF_START_GAMEPLAY_POS_B - Setting blank firing for Wave1 guy...", 0 );
            SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U851[I], 0, 0 ), 0 );
        }
    }
     /* CREATETIMER */ sub_4603( ref l_U914, l_U1050, 1, 0 );
     /* STARTTIMER */ sub_4753( ref l_U914 );
    l_U949 = 1;
     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_START_GAMEPLAY_POS_B end", 0 );
    return;
}

/* P_BF_HANDLE_BACHMEYER_SHOOTING */ void sub_55127()
{
    switch (l_U949)
    {
        case 0: break;
        case 1:
        if ( /* ISTIMERDONE */ sub_4886( ref l_U914 ))
        {
             /* P_BF_BACHMEYER_START_SHOOTING */ sub_55225();
             /* CREATETIMER */ sub_4603( ref l_U903, GET_RANDOM_INT_IN_RANGE( l_U901, l_U902 ), 1, 0 );
             /* STARTTIMER */ sub_4753( ref l_U903 );
            l_U949 = 2;
        }
        else if (NOT l_U914._fU20)
        {
            if (NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_57236( l_U962 )))
            {
                 /* WRITESCRIPTLOG */ sub_1502( "SBA", "Max is NOT in rooms under Bachmeyer.", 0 );
                 /* P_BF_BACHMEYER_START_SHOOTING */ sub_55225();
                 /* CREATETIMER */ sub_4603( ref l_U903, GET_RANDOM_INT_IN_RANGE( l_U901, l_U902 ), 1, 0 );
                 /* STARTTIMER */ sub_4753( ref l_U903 );
                l_U949 = 2;
            }
        }
        break;
        case 2:
        if ( /* ISTIMERDONE */ sub_4886( ref l_U903 ))
        {
             /* WRITESCRIPTLOG */ sub_1502( "GA", "Bacymeyer realoading.", 0 );
             /* P_BF_BACHMEYER_STOP_SHOOTING */ sub_57518();
             /* CREATETIMER */ sub_4603( ref l_U914, GET_RANDOM_INT_IN_RANGE( l_U912, l_U913 ), 1, 0 );
             /* STARTTIMER */ sub_4753( ref l_U914 );
            l_U949 = 1;
        }
        if ( /* F_BF_HAS_PLAYER_PINNED_DOWN_BACHMEYER */ sub_57773())
        {
             /* WRITESCRIPTLOG */ sub_1502( "GA", "Player has Bachmeyer pinned.", 0 );
             /* P_BF_BACHMEYER_STOP_SHOOTING */ sub_57518();
             /* CREATETIMER */ sub_4603( ref l_U914, 3000, 1, 0 );
             /* STARTTIMER */ sub_4753( ref l_U914 );
            l_U949 = 1;
        }
        if (l_U926)
        {
             /* WRITESCRIPTLOG */ sub_1502( "GA", "Debris dropped on Bachmeyer, ducking back into cover.", 0 );
             /* P_BF_BACHMEYER_STOP_SHOOTING */ sub_57518();
             /* CREATETIMER */ sub_4603( ref l_U914, 2000, 1, 0 );
             /* STARTTIMER */ sub_4753( ref l_U914 );
            l_U926 = 0;
            l_U949 = 1;
        }
        if ( /* F_ISPLAYERINTRIGGERBOX */ sub_57236( l_U962 ))
        {
             /* WRITESCRIPTLOG */ sub_1502( "SBA", "Max is in rooms under Bachmeyer.", 0 );
             /* P_BF_BACHMEYER_STOP_SHOOTING */ sub_57518();
             /* RESETTIMER */ sub_5462( ref l_U914 );
            l_U949 = 1;
        }
        break;
    }
    if (l_U900)
    {
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() ))) AND (NOT (IS_PED_DEAD( l_U817 ))))
        {
            REGISTER_TARGET( l_U817,  /* PLAYER_PED_ID */ sub_3708() );
        }
    }
    return;
}

/* P_BF_BACHMEYER_START_SHOOTING */ void sub_55225()
{
     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_BACHMEYER_START_SHOOTING start", 0 );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() ))) AND (NOT (IS_PED_DEAD( l_U817 ))))
    {
        PED_SET_ACTION_INTENTION( l_U817, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
        TASK_SHOOT_AT_PED( l_U817,  /* PLAYER_PED_ID */ sub_3708(), -1, -256437761, 0, 0, 0 );
    }
     /* P_BF_DIALOGUE_BACHMEYER_TAUNT */ sub_55407();
    l_U900 = 1;
     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_BACHMEYER_START_SHOOTING end", 0 );
    return;
}

/* P_BF_DIALOGUE_BACHMEYER_TAUNT */ void sub_55407()
{
     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_DIALOGUE_BACHMEYER_TAUNT start", 0 );
     /* KILL_SPEECH */ sub_55503( ref l_U927, 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_55770( ref l_U927 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_55887( 1, l_U817, "BACHMEYER", ref l_U927, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_55887( 0,  /* PLAYER_PED_ID */ sub_3708(), "MAX", ref l_U927, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_56155( "SPOL_VIG09", ref l_U927, 8, 1 );
     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_DIALOGUE_BACHMEYER_TAUNT end", 0 );
    return;
}

/* KILL_SPEECH */ void sub_55503(int iParam0, unknown uParam1)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_55531( (iParam0^) )))
    {
        ;
    }
    else
    {
        PRINTSTRING( "\n KILL SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
        {
            if (iParam0->_fU8 == g_U6[iParam0->_fU4])
            {
                STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
            }
        }
    }
    return;
}

/* IS_SCRIPT_SPEECH_STRUCT_VALID */ boolean sub_55531(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_55770(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_55887(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_56155(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_56200( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_56200(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_56287( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_56287(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_56339( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_56857( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_56339(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_56857(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_57236(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_57279(  /* PLAYER_PED_ID */ sub_3708(), uParam0 );
}

/* F_ISPEDINTRIGGERBOX */ int sub_57279(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* P_BF_BACHMEYER_STOP_SHOOTING */ void sub_57518()
{
     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_BACHMEYER_STOP_SHOOTING start", 0 );
    if (NOT (IS_PED_DEAD( l_U817 )))
    {
        PED_SET_ACTION_INTENTION( l_U817, 48, 1000, 0.00000000, 0.00000000, 0.00000000 );
        CLEAR_PED_TASKS( l_U817 );
    }
    l_U900 = 0;
     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_BACHMEYER_STOP_SHOOTING end", 0 );
    return;
}

/* F_BF_HAS_PLAYER_PINNED_DOWN_BACHMEYER */ int sub_57773()
{
    unknown uVar2;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() )))
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3708(), 0, 0 );
    }
    if (GET_DOES_WEAPON_EXIST( uVar2 ))
    {
        if ((l_U1049 != l_U1048) AND ((GET_WEAPONTYPE_AMMO( GET_WEAPON_TYPE( uVar2 ) )) == -1295933220))
        {
             /* WRITESCRIPTLOG */ sub_1502( "AT", "Player is holding a shotgun. Adjusting interval test.", 0 );
            l_U1049 = l_U1048;
        }
        if ((l_U1049 != l_U1047) AND (((GET_WEAPONTYPE_AMMO( GET_WEAPON_TYPE( uVar2 ) )) == -1383321053) || ((GET_WEAPONTYPE_AMMO( GET_WEAPON_TYPE( uVar2 ) )) == 1138793073)))
        {
             /* WRITESCRIPTLOG */ sub_1502( "AT", "Player is holding a rifle. Adjusting interval test.", 0 );
            l_U1049 = l_U1047;
        }
        if ((l_U1049 != l_U1046) AND ((GET_WEAPONTYPE_AMMO( GET_WEAPON_TYPE( uVar2 ) )) == -1088031219))
        {
             /* WRITESCRIPTLOG */ sub_1502( "AT", "Player is holding a pistol. Adjusting interval test.", 0 );
            l_U1049 = l_U1046;
        }
    }
    if (TIMERA() > (l_U924 + l_U1049))
    {
        if (l_U925)
        {
            l_U923++;
        }
        else
        {
            l_U923 = 0;
        }
        l_U925 = 0;
        l_U924 = TIMERA();
    }
    else if ( /* F_BF_IS_PLAYER_SHOOTING_BACHMEYER */ sub_58319())
    {
        l_U925 = 1;
    }
    if (l_U923 >= 2)
    {
        return 1;
        break;
    }
    return 0;
}

/* F_BF_IS_PLAYER_SHOOTING_BACHMEYER */ int sub_58319()
{
    if ((NOT (IS_PED_DEAD( l_U817 ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() ))))
    {
        if ((IS_PED_IN_CROSSHAIR_CYLINDER( l_U817, 1.00000000, 100.00000000, 0, -1082130432 )) AND (IS_PED_SHOOTING(  /* PLAYER_PED_ID */ sub_3708() )))
        {
            return 1;
        }
    }
    return 0;
}

/* P_HANDLE_LIGHTSTATE */ void sub_58850()
{
    switch (l_U225)
    {
        case 0: break;
        case 1:
         /* UPDATE_HINT_VO */ sub_58939();
        if (( /* F_GET_NUM_LIGHT_SUPPORTS_REMAINING */ sub_60265()) <= 2)
        {
            if (DOES_OBJECT_EXIST( l_U333 ))
            {
                if (NOT (IS_OBJECT_PLAYING_ANIM( l_U333, l_U228, l_U227 )))
                {
                     /* WRITESCRIPTLOG */ sub_1502( "AT", "First light support dead!", 0 );
                     /* WRITESCRIPTLOG */ sub_1502( "AT", "Starting p_an_lgtcag_aa_h ...", 0 );
                     /* MAL_PLAYOBJECTANIM */ sub_60536( l_U333, l_U228, l_U227, 1065353216, 0 );
                    l_U343 = 1;
                     /* P_SET_LIGHT_SUPPORTS_INVINCIBLE */ sub_60647( 1 );
                     /* P_TRIGGER_BREAK_CEILING_TILE */ sub_60766( 8 );
                     /* P_PLAY_SOUND */ sub_60892( ref l_U1120, "SPOL_Light_Rig_A", 1513.80900000, -33.55785000, 20.70689000 );
                    START_PARTICLE_FX_NON_LOOPED_AT_COORD( "PO_Boss_sparks_S", l_U334, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
                }
            }
            if ((GET_OBJECT_ANIM_CURRENT_TIME( l_U333, l_U228, l_U227 )) >= l_U329)
            {
                SET_OBJECT_ANIM_SPEED( l_U333, l_U228, l_U227, 0.00000000 );
                l_U343 = 0;
                SET_OBJECT_ANIM_CURRENT_TIME( l_U333, l_U228, l_U227, l_U330 );
                 /* P_SET_LIGHT_SUPPORTS_INVINCIBLE */ sub_60647( 0 );
                l_U225 = 2;
            }
        }
        break;
        case 2:
        if (((GET_OBJECT_ANIM_CURRENT_TIME( l_U333, l_U228, l_U227 )) <= l_U330) AND (DOES_OBJECT_EXIST( l_U333 )))
        {
             /* UPDATE_HINT_VO */ sub_58939();
        }
        if (( /* F_GET_NUM_LIGHT_SUPPORTS_REMAINING */ sub_60265()) <= 1)
        {
            if ((NOT l_U343) AND (DOES_OBJECT_EXIST( l_U333 )))
            {
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "Second light support dead!", 0 );
                SET_OBJECT_ANIM_SPEED( l_U333, l_U228, l_U227, 1.00000000 );
                l_U343 = 1;
                 /* P_SET_LIGHT_SUPPORTS_INVINCIBLE */ sub_60647( 1 );
                 /* P_TRIGGER_BREAK_CEILING_TILE */ sub_60766( 2 );
                 /* P_TRIGGER_BREAK_CEILING_TILE */ sub_60766( 14 );
                 /* P_PLAY_SOUND */ sub_60892( ref l_U1120, "SPOL_Light_Rig_B", 1513.80900000, -33.55785000, 20.70689000 );
                START_PARTICLE_FX_NON_LOOPED_AT_COORD( "PO_Boss_sparks_S", l_U334, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
            }
            if ((GET_OBJECT_ANIM_CURRENT_TIME( l_U333, l_U228, l_U227 )) >= 0.35000000)
            {
                 /* P_SET_LIGHT_SUPPORTS_INVINCIBLE */ sub_60647( 0 );
                l_U225 = 3;
            }
        }
        break;
        case 3:
        if (DOES_OBJECT_EXIST( l_U333 ))
        {
             /* WRITESCRIPTLOG */ sub_1502( "AT", "Third light support dead!", 0 );
            SET_OBJECT_ANIM_CURRENT_TIME( l_U333, l_U228, l_U227, l_U332 );
            SET_OBJECT_ANIM_SPEED( l_U333, l_U228, l_U227, 1.00000000 );
            l_U343 = 1;
            SET_OBJECT_COLLISION( l_U333, 0 );
            FREEZE_OBJECT_POSITION( l_U333, 1 );
            DESTROY_FRAGMENT_OBJECT( l_U333 );
             /* P_TRIGGER_BREAK_CEILING_TILE */ sub_60766( 0 );
             /* P_TRIGGER_BREAK_CEILING_TILE */ sub_60766( 7 );
             /* P_TRIGGER_BREAK_CEILING_TILE */ sub_60766( 2 );
             /* P_TRIGGER_BREAK_CEILING_TILE */ sub_60766( 13 );
             /* P_PLAY_SOUND */ sub_60892( ref l_U1120, "SPOL_Light_Rig_C", 1513.80900000, -33.55785000, 20.70689000 );
            START_PARTICLE_FX_NON_LOOPED_AT_COORD( "PO_Boss_sparks_S", l_U334, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
            l_U225 = 4;
        }
        break;
        case 4: break;
    }
    return;
}

/* UPDATE_HINT_VO */ void sub_58939()
{
    switch (l_U950)
    {
        case 0:
        if (l_U947)
        {
             /* WRITESCRIPTLOG */ sub_1502( "RJM", "UPDATE_HINT_VO - We already played line 1, skip ahead to the second line", 0 );
             /* CREATETIMER */ sub_4603( ref l_U951, 30000, 1, 0 );
             /* STARTTIMER */ sub_4753( ref l_U951 );
            l_U950 = 3;
        }
        if (l_U948)
        {
             /* WRITESCRIPTLOG */ sub_1502( "RJM", "UPDATE_HINT_VO - FUCK THAT!  We played Line 2, we done!", 0 );
            l_U950 = 4;
        }
        if ((NOT l_U948) AND (NOT l_U947))
        {
             /* CREATETIMER */ sub_4603( ref l_U951, 25000, 1, 0 );
             /* STARTTIMER */ sub_4753( ref l_U951 );
             /* WRITESCRIPTLOG */ sub_1502( "RJM", "UPDATE_HINT_VO - going to HINT_PLAY_LINE1", 0 );
            l_U950 = 1;
        }
        break;
        case 1:
        if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND ((NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_59367())) AND (IS_SPHERE_VISIBLE( 1513.88000000, -34.72000000, 20.58000000, 1.00000000, 1 ))))
        {
            if ( /* ISTIMERDONE */ sub_4886( ref l_U951 ))
            {
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_55770( ref l_U937 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_55887( 0,  /* PLAYER_PED_ID */ sub_3708(), "MAX", ref l_U937, 2, 0 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_55887( 1,  /* PLAYER_PED_ID */ sub_3708(), "MAX", ref l_U937, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_56155( "SPOL_BCHNTS", ref l_U937, 8, 1 );
                 /* WRITESCRIPTLOG */ sub_1502( "RJM", "UPDATE_HINT_VO - going to HINT_WAIT_FOR_LINE1_DONE", 0 );
                l_U947 = 1;
                l_U950 = 2;
            }
            else if (NOT l_U960)
            {
                if ((IS_PED_DEAD( l_U851[1] )) AND (IS_PED_DEAD( l_U851[0] )))
                {
                     /* WRITESCRIPTLOG */ sub_1502( "SBA", "UPDATE_HINT_VO - First wave dead, reset for a short timer", 0 );
                     /* CREATETIMER */ sub_4603( ref l_U951, 5000, 1, 0 );
                     /* STARTTIMER */ sub_4753( ref l_U951 );
                    l_U960 = 1;
                }
            }
        }
        break;
        case 2:
        if (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_59813( l_U937 )))
        {
             /* WRITESCRIPTLOG */ sub_1502( "RJM", "UPDATE_HINT_VO - going to HINT_PLAY_LINE2", 0 );
             /* CREATETIMER */ sub_4603( ref l_U951, 20000, 1, 0 );
             /* STARTTIMER */ sub_4753( ref l_U951 );
            l_U950 = 3;
        }
        break;
        case 3:
        if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND ((NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_59367())) AND (IS_SPHERE_VISIBLE( 1513.88000000, -34.72000000, 20.58000000, 1.00000000, 1 ))))
        {
            if ( /* ISTIMERDONE */ sub_4886( ref l_U951 ))
            {
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_55770( ref l_U937 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_55887( 0,  /* PLAYER_PED_ID */ sub_3708(), "MAX", ref l_U937, 2, 0 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_55887( 1,  /* PLAYER_PED_ID */ sub_3708(), "MAX", ref l_U937, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_56155( "SPOL_STLNFGR", ref l_U937, 8, 1 );
                l_U948 = 1;
                 /* WRITESCRIPTLOG */ sub_1502( "RJM", "UPDATE_HINT_VO - going to HINT_DONE", 0 );
                l_U950 = 4;
            }
        }
        break;
        case 4: break;
    }
    return;
}

/* IS_ANY_SPEECH_CURRENTLY_PLAYING */ void sub_59367()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

/* IS_SPEECH_CURRENTLY_PLAYING */ int sub_59813(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_55531( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

/* F_GET_NUM_LIGHT_SUPPORTS_REMAINING */ void sub_60265()
{
    int Result;
    int I;

    Result = 0;
    if (l_U225 > 0)
    {
        for ( I = 0; I < 3; I++ )
        {
            if (NOT l_U325[I])
            {
                Result++;
            }
        }
    }
    return Result;
}

/* MAL_PLAYOBJECTANIM */ void sub_60536(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        PLAY_OBJECT_ANIM( uParam0, uParam1, uParam2, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( uParam0, uParam1, uParam2, uParam4 );
        SET_OBJECT_ANIM_SPEED( uParam0, uParam1, uParam2, uParam3 );
    }
    return;
}

/* P_SET_LIGHT_SUPPORTS_INVINCIBLE */ void sub_60647(unknown uParam0)
{
    int I;

    for ( I = 0; I < l_U307; I++ )
    {
        if (DOES_OBJECT_EXIST( l_U307[I] ))
        {
            SET_OBJECT_INVINCIBLE( l_U307[I], uParam0 );
        }
    }
    return;
}

/* P_TRIGGER_BREAK_CEILING_TILE */ void sub_60766(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( l_U346[uParam0]._fU4 ))
    {
         /* STARTTIMER */ sub_4753( ref l_U346[uParam0]._fU28 );
    }
    return;
}

/* P_PLAY_SOUND */ void sub_60892(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
     /* P_KILL_SOUND_ID */ sub_8539( uParam0 );
    l_U1120 = GET_SOUND_ID();
    PLAY_SOUND_FROM_COORD( (uParam0^), uParam1, uParam2 );
    return;
}

/* P_HANDLE_GRILLESTATE */ void sub_61746()
{
    switch (l_U226)
    {
        case 0: break;
        case 1:
        if (DOES_OBJECT_EXIST( l_U337 ))
        {
            if (NOT (IS_OBJECT_PLAYING_ANIM( l_U337, "p_an_mtlgrl_aa_h", l_U227 )))
            {
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "Metal grille now STAGE1!", 0 );
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "Starting p_an_mtlgrl_aa_h ...", 0 );
                 /* MAL_PLAYOBJECTANIM */ sub_60536( l_U337, "p_an_mtlgrl_aa_h", l_U227, 1065353216, 0 );
            }
            if ((GET_OBJECT_ANIM_CURRENT_TIME( l_U337, "p_an_mtlgrl_aa_h", l_U227 )) >= l_U338)
            {
                SET_OBJECT_ANIM_SPEED( l_U337, "p_an_mtlgrl_aa_h", l_U227, 0.00000000 );
                SET_OBJECT_ANIM_CURRENT_TIME( l_U337, "p_an_mtlgrl_aa_h", l_U227, l_U339 );
                l_U226 = 0;
            }
        }
        break;
        case 2:
        if (DOES_OBJECT_EXIST( l_U337 ))
        {
            if (NOT l_U345)
            {
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "Metal grille is now STAGE2!", 0 );
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "Starting p_an_mtlgrl_aa_h ...", 0 );
                SET_OBJECT_ANIM_SPEED( l_U337, "p_an_mtlgrl_aa_h", l_U227, 1.00000000 );
                l_U345 = 1;
            }
            if ((GET_OBJECT_ANIM_CURRENT_TIME( l_U337, "p_an_mtlgrl_aa_h", l_U227 )) >= l_U340)
            {
                SET_OBJECT_ANIM_SPEED( l_U337, "p_an_mtlgrl_aa_h", l_U227, 0.00000000 );
                SET_OBJECT_ANIM_CURRENT_TIME( l_U337, "p_an_mtlgrl_aa_h", l_U227, l_U341 );
                l_U226 = 0;
            }
        }
        break;
        case 3:
        if (DOES_OBJECT_EXIST( l_U337 ))
        {
             /* WRITESCRIPTLOG */ sub_1502( "AT", "Metal grille now STAGE3!", 0 );
             /* WRITESCRIPTLOG */ sub_1502( "AT", "Starting p_an_mtlgrl_aa_h ...", 0 );
            SET_OBJECT_ANIM_SPEED( l_U337, "p_an_mtlgrl_aa_h", l_U227, 1.00000000 );
            l_U226 = 4;
        }
        break;
        case 4: break;
    }
    return;
}

/* P_HANDLE_CEILING_TILES_BREAKING */ void sub_62618()
{
    int I;
    string sVar3;

    for ( I = 0; I < 24; I++ )
    {
        if (DOES_OBJECT_EXIST( l_U346[I]._fU4 ))
        {
            if (NOT (HAS_FRAGMENT_ROOT_OF_OBJECT_BEEN_DAMAGED( l_U346[I]._fU4 )))
            {
                if ( /* ISTIMERDONE */ sub_4886( ref l_U346[I]._fU28 ))
                {
                     /* CLEANOBJECT */ sub_7577( l_U346[I]._fU4 );
                    if (DOES_OBJECT_EXIST( l_U346[I]._fU8 ))
                    {
                        if ((GET_OBJECT_MODEL( l_U346[I]._fU8 )) == -905596499)
                        {
                            sVar3 = "p_an_roftil_da_h";
                        }
                        else if ((GET_OBJECT_MODEL( l_U346[I]._fU8 )) == -850557270)
                        {
                            sVar3 = "p_an_roftil_db_h";
                        }
                        if (NOT (IS_OBJECT_PLAYING_ANIM( l_U346[I]._fU8, sVar3, "po_animboss" )))
                        {
                            SET_OBJECT_VISIBLE( l_U346[I]._fU8, 1 );
                            SET_OBJECT_COLLISION( l_U346[I]._fU8, 1 );
                             /* MAL_PLAYOBJECTANIM */ sub_60536( l_U346[I]._fU8, sVar3, "po_animboss", 1065353216, 0 );
                        }
                    }
                }
            }
        }
    }
    return;
}

/* P_HANDLE_HACK_TILE_TARGETTING */ void sub_63020()
{
    if (NOT l_U1088)
    {
        if (DOES_OBJECT_EXIST( l_U1081 ))
        {
            if ((GET_OBJECT_HEALTH( l_U1081 )) < 1000.00000000)
            {
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "Disabling targetting hack 1.", 0 );
                 /* CLEANOBJECT */ sub_7577( l_U1081 );
                if (DOES_OBJECT_EXIST( l_U346[1]._fU4 ))
                {
                     /* CLEANOBJECT */ sub_7577( l_U346[1]._fU4 );
                    if (DOES_OBJECT_EXIST( l_U346[1]._fU8 ))
                    {
                        if (NOT (IS_OBJECT_PLAYING_ANIM( l_U346[1]._fU8, "p_an_roftil_db_h", "po_animboss" )))
                        {
                            SET_OBJECT_VISIBLE( l_U346[1]._fU8, 1 );
                            SET_OBJECT_COLLISION( l_U346[1]._fU8, 1 );
                             /* MAL_PLAYOBJECTANIM */ sub_60536( l_U346[1]._fU8, "p_an_roftil_db_h", "po_animboss", 1065353216, 0 );
                        }
                    }
                }
                l_U926 = 1;
                l_U1088 = 1;
            }
        }
    }
    if (NOT l_U1089)
    {
        if (DOES_OBJECT_EXIST( l_U1080 ))
        {
            if ((GET_OBJECT_HEALTH( l_U1080 )) < 1000.00000000)
            {
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "Disabling targetting hack 2.", 0 );
                 /* CLEANOBJECT */ sub_7577( l_U1080 );
                if (DOES_OBJECT_EXIST( l_U346[2]._fU4 ))
                {
                     /* CLEANOBJECT */ sub_7577( l_U346[2]._fU4 );
                    if (DOES_OBJECT_EXIST( l_U346[2]._fU8 ))
                    {
                        if (NOT (IS_OBJECT_PLAYING_ANIM( l_U346[2]._fU8, "p_an_roftil_db_h", "po_animboss" )))
                        {
                            SET_OBJECT_VISIBLE( l_U346[2]._fU8, 1 );
                            SET_OBJECT_COLLISION( l_U346[2]._fU8, 1 );
                             /* MAL_PLAYOBJECTANIM */ sub_60536( l_U346[2]._fU8, "p_an_roftil_db_h", "po_animboss", 1065353216, 0 );
                        }
                    }
                }
                l_U926 = 1;
                l_U1089 = 1;
            }
        }
    }
    return;
}

/* P_HANDLE_SWITCHING_MUSIC_CUE */ void sub_63710()
{
    if ( /* ISTIMERDONE */ sub_4886( ref l_U1203 ))
    {
         /* WRITESCRIPTLOG */ sub_1502( "GA", "Forcing music PRECINCT_FINAL mood PRECINCT_01_1_3_4_5 fade in over 3 seconds", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_1_3_4_5", "PRECINCT_01_1_3_4_5", 0, 3000, -1, -1082130432, 0 );
    }
    return;
}

/* P_HANDLE_LIGHT_SUPPORT_DESTRUCTION */ void sub_64020()
{
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() ))) AND (DOES_OBJECT_EXIST( l_U307[0] )))
    {
        if (HAS_OBJECT_BEEN_DAMAGED_BY_PED( l_U307[0],  /* PLAYER_PED_ID */ sub_3708() ))
        {
            if (NOT l_U325[0])
            {
                l_U334 = {1514.58000000, -34.25680000, 22.07830000};
                 /* MAL_PLAYOBJECTANIM */ sub_60536( l_U307[0], "p_an_lgtfix_aa_h", l_U227, 1065353216, 0 );
                CAMERA_CAN_TARGET_OBJECT( 0, l_U307[0] );
                l_U325[0] = 1;
            }
            if (NOT l_U325[2])
            {
                l_U334 = {1512.93000000, -34.25680000, 22.07830000};
                 /* MAL_PLAYOBJECTANIM */ sub_60536( l_U307[2], "p_an_lgtfix_ac_h", l_U227, 1065353216, 0 );
                CAMERA_CAN_TARGET_OBJECT( 0, l_U307[2] );
                l_U325[2] = 1;
            }
        }
    }
    if (NOT l_U325[1])
    {
        if (DOES_OBJECT_EXIST( l_U307[1] ))
        {
            if ((GET_OBJECT_HEALTH( l_U307[1] )) == 0.00000000)
            {
                l_U334 = {1513.74000000, -34.25680000, 22.07830000};
                 /* MAL_PLAYOBJECTANIM */ sub_60536( l_U307[1], "p_an_lgtfix_ab_h", l_U227, 1065353216, 0 );
                l_U325[1] = 1;
            }
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() )))
            {
                if (DOES_OBJECT_EXIST( l_U333 ))
                {
                    if (HAS_OBJECT_BEEN_DAMAGED_BY_PED( l_U333,  /* PLAYER_PED_ID */ sub_3708() ))
                    {
                         /* CLEANOBJECT */ sub_7577( l_U307[1] );
                        l_U325[1] = 1;
                    }
                }
                if (DOES_OBJECT_EXIST( l_U337 ))
                {
                    if (HAS_OBJECT_BEEN_DAMAGED_BY_PED( l_U337,  /* PLAYER_PED_ID */ sub_3708() ))
                    {
                         /* CLEANOBJECT */ sub_7577( l_U307[1] );
                        l_U325[1] = 1;
                    }
                }
                if (DOES_OBJECT_EXIST( l_U346[1]._fU4 ))
                {
                    if (HAS_OBJECT_BEEN_DAMAGED_BY_PED( l_U346[1]._fU4,  /* PLAYER_PED_ID */ sub_3708() ))
                    {
                         /* CLEANOBJECT */ sub_7577( l_U307[1] );
                        l_U325[1] = 1;
                    }
                }
                if (DOES_OBJECT_EXIST( l_U346[2]._fU4 ))
                {
                    if (HAS_OBJECT_BEEN_DAMAGED_BY_PED( l_U346[2]._fU4,  /* PLAYER_PED_ID */ sub_3708() ))
                    {
                         /* CLEANOBJECT */ sub_7577( l_U307[1] );
                        l_U325[1] = 1;
                    }
                }
                if (DOES_OBJECT_EXIST( l_U346[7]._fU4 ))
                {
                    if (HAS_OBJECT_BEEN_DAMAGED_BY_PED( l_U346[7]._fU4,  /* PLAYER_PED_ID */ sub_3708() ))
                    {
                         /* CLEANOBJECT */ sub_7577( l_U307[1] );
                        l_U325[1] = 1;
                    }
                }
                if (DOES_OBJECT_EXIST( l_U346[8]._fU4 ))
                {
                    if (HAS_OBJECT_BEEN_DAMAGED_BY_PED( l_U346[8]._fU4,  /* PLAYER_PED_ID */ sub_3708() ))
                    {
                         /* CLEANOBJECT */ sub_7577( l_U307[1] );
                        l_U325[1] = 1;
                    }
                }
                if (DOES_OBJECT_EXIST( l_U346[13]._fU4 ))
                {
                    if (HAS_OBJECT_BEEN_DAMAGED_BY_PED( l_U346[13]._fU4,  /* PLAYER_PED_ID */ sub_3708() ))
                    {
                         /* CLEANOBJECT */ sub_7577( l_U307[1] );
                        l_U325[1] = 1;
                    }
                }
                if (DOES_OBJECT_EXIST( l_U346[14]._fU4 ))
                {
                    if (HAS_OBJECT_BEEN_DAMAGED_BY_PED( l_U346[14]._fU4,  /* PLAYER_PED_ID */ sub_3708() ))
                    {
                         /* CLEANOBJECT */ sub_7577( l_U307[1] );
                        l_U325[1] = 1;
                    }
                }
            }
        }
    }
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() ))) AND (DOES_OBJECT_EXIST( l_U307[2] )))
    {
        if (HAS_OBJECT_BEEN_DAMAGED_BY_PED( l_U307[2],  /* PLAYER_PED_ID */ sub_3708() ))
        {
            if (NOT l_U325[2])
            {
                l_U334 = {1512.93000000, -34.25680000, 22.07830000};
                 /* MAL_PLAYOBJECTANIM */ sub_60536( l_U307[2], "p_an_lgtfix_ac_h", l_U227, 1065353216, 0 );
                CAMERA_CAN_TARGET_OBJECT( 0, l_U307[2] );
                l_U325[2] = 1;
            }
            if (NOT l_U325[0])
            {
                l_U334 = {1514.58000000, -34.25680000, 22.07830000};
                 /* MAL_PLAYOBJECTANIM */ sub_60536( l_U307[0], "p_an_lgtfix_aa_h", l_U227, 1065353216, 0 );
                CAMERA_CAN_TARGET_OBJECT( 0, l_U307[0] );
                l_U325[0] = 1;
            }
        }
    }
    return;
}

/* P_BF_MOVE_BACHMEYER_B_TO_PRONE */ void sub_65324()
{
    int I;

     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_MOVE_BACHMEYER_B_TO_PRONE start", 0 );
     /* RESETTIMER */ sub_5462( ref l_U903 );
     /* RESETTIMER */ sub_5462( ref l_U914 );
     /* KILL_SPEECH */ sub_55503( ref l_U927, 0 );
    for ( I = 0; I < 3; I++ )
    {
        if (DOES_OBJECT_EXIST( l_U307[I] ))
        {
            CAMERA_CAN_TARGET_OBJECT( 1, l_U307[I] );
        }
    }
    if ((NOT (IS_PED_DEAD( l_U817 ))) AND (l_U900))
    {
        CLEAR_PED_TASKS( l_U817 );
        l_U900 = 0;
    }
    l_U949 = 0;
    if (NOT (IS_PED_DEAD( l_U817 )))
    {
        PED_SET_ACTION_INTENTION( l_U817, 50, 1000, 0.00000000, 0.00000000, 0.00000000 );
    }
     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_MOVE_BACHMEYER_B_TO_PRONE end", 0 );
    return;
}

/* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ void sub_65895(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

/* P_BF_MOVE_BACHMEYER_PRONE_TO_C */ void sub_66229()
{
     /* WRITESCRIPTLOG */ sub_1502( "RJM", "P_BF_MOVE_BACHMEYER_PRONE_TO_C start", 0 );
     /* RESETTIMER */ sub_5462( ref l_U903 );
     /* RESETTIMER */ sub_5462( ref l_U914 );
     /* KILL_SPEECH */ sub_55503( ref l_U927, 0 );
    if (NOT (IS_PED_DEAD( l_U817 )))
    {
        PED_SET_ACTION_INTENTION( l_U817, 53, 1000, 0.00000000, 0.00000000, 0.00000000 );
    }
     /* WRITESCRIPTLOG */ sub_1502( "RJM", "P_BF_MOVE_BACHMEYER_PRONE_TO_C end", 0 );
    return;
}

/* MAL_GETPEDCOORDS */ vector sub_66649(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return "[dynamic result, ret vals = 3]";
        break;
        GET_PED_COORDS( uParam0 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        break;
    }
    return vector( 0, 0, 0);
}

/* MAL_GETDESIREDHEADINGTOFACEPOINT */ void sub_66748(unknown uParam0, unknown uParam1, unknown uParam2)
{
    vector vVar5;
    vector vVar8;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown Result;

    vVar5 = {uParam0};
    vVar8 = { /* MAL_GETPEDCOORDS */ sub_66649(  /* PLAYER_PED_ID */ sub_3708() )};
    uVar11 = { /* F_GET_VECTOR_NORM */ sub_66821( vVar5 - vVar8 )};
    Result = ACOS( uVar11._fU4 );
    return Result;
}

/* F_GET_VECTOR_NORM */ vector sub_66821(unknown uParam0, unknown uParam1, unknown uParam2)
{
    float fVar5;

    fVar5 = SQRT( ((uParam0._fU0 * uParam0._fU0) + (uParam0._fU4 * uParam0._fU4)) + (uParam0._fU8 * uParam0._fU8) );
    if (fVar5 > 0.00000000)
    {
        return vector( uParam0._fU0 / fVar5, uParam0._fU4 / fVar5, uParam0._fU8 / fVar5);
        break;
    }
    return vector( 0.00000000, 0.00000000, 0.00000000);
}

/* MAL_TELEPORTPLAYER */ void sub_66986(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 =  /* PLAYER_PED_ID */ sub_3708();
     /* MAL_TELEPORTPED */ sub_67033( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

/* MAL_TELEPORTPED */ void sub_67033(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_HANDLE_WIRESTATE */ void sub_67179()
{
    unknown uVar2;
    char[64] cVar3;

    uVar2 = FLOOR( GET_OBJECT_HEALTH( l_U731 ) );
    StrCopy( ref cVar3, "Health: ", 64 );
    ConcatString(ref cVar3, uVar2, 64);
     /* WRITESCRIPTLOG_PERIODIC */ sub_67264( "AT", ref cVar3, ref l_U1070, 3000, 0 );
    switch (l_U223)
    {
        case 0: break;
        case 1:
        if ((DOES_OBJECT_EXIST( l_U1079 )) AND (DOES_OBJECT_EXIST( l_U731 )))
        {
            if (NOT (IS_OBJECT_PLAYING_ANIM( l_U731, l_U229, l_U227 )))
            {
                if ((( /* F_ISPLAYERINTRIGGERBOX */ sub_57236( l_U1090 )) AND (IS_OBJECT_ON_SCREEN( l_U1079 ))) || (IS_OBJECT_IN_CROSSHAIR_CYLINDER( l_U1079, 2.00000000, 5000.00000000, 1 )))
                {
                     /* CREATETIMER */ sub_4603( ref l_U1111, 1000, 1, 0 );
                     /* STARTTIMER */ sub_4753( ref l_U1111 );
                     /* WRITESCRIPTLOG */ sub_1502( "RJM", "P_HANDLE_WIRESTATE - Going to WIRESTATE_WAIT_TO_START", 0 );
                    l_U223 = 2;
                }
            }
        }
        break;
        case 2:
        if ( /* ISTIMERDONE */ sub_4886( ref l_U1111 ))
        {
             /* WRITESCRIPTLOG */ sub_1502( "AT", "Starting P_AN_WIRJMB_AA_H ...", 0 );
             /* MAL_PLAYOBJECTANIM */ sub_60536( l_U731, l_U229, l_U227, 1065353216, 0 );
            l_U342 = 1;
            SET_OBJECT_VISIBLE( l_U346[4]._fU4, 0 );
             /* P_TRIGGER_BREAK_CEILING_TILE */ sub_60766( 5 );
             /* P_TRIGGER_BREAK_CEILING_TILE */ sub_60766( 6 );
             /* P_TRIGGER_BREAK_CEILING_TILE */ sub_60766( 9 );
             /* P_TRIGGER_BREAK_CEILING_TILE */ sub_60766( 10 );
             /* P_TRIGGER_BREAK_CEILING_TILE */ sub_60766( 11 );
             /* P_PLAY_BIT_O_WIRE_ANIM */ sub_67843( ref l_U785[0], l_U230, l_U227, 1, -1082130432 );
             /* P_PLAY_BIT_O_WIRE_ANIM */ sub_67843( ref l_U785[1], l_U231, l_U227, 1, -1082130432 );
             /* P_PLAY_BIT_O_WIRE_ANIM */ sub_67843( ref l_U785[2], l_U232, l_U227, 1, -1082130432 );
            l_U226 = 1;
            l_U224 = 1;
             /* P_PLAY_SOUND */ sub_60892( ref l_U1120, "SPOL_Wire_Jumble_C", 1519.41700000, -32.91525000, 20.75046000 );
            START_PARTICLE_FX_NON_LOOPED_AT_COORD( "PO_Boss_sparks_S", l_U740, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
            START_PARTICLE_FX_NON_LOOPED_AT_COORD( "PO_Boss_Con_Dust_S", l_U755, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
            START_PARTICLE_FX_NON_LOOPED_AT_COORD( "PO_Boss_Con_Debris_S", l_U770, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
            l_U926 = 1;
             /* WRITESCRIPTLOG */ sub_1502( "RJM", "P_HANDLE_WIRESTATE - Going to WIRESTATE_STOP", 0 );
            l_U223 = 3;
        }
        break;
        case 3:
        if (l_U342)
        {
            if ((GET_OBJECT_ANIM_CURRENT_TIME( l_U731, l_U229, l_U227 )) >= l_U732)
            {
                SET_OBJECT_ANIM_SPEED( l_U731, l_U229, l_U227, 0.00000000 );
                 /* P_STOP_BIT_O_WIRE_ANIM */ sub_68470( ref l_U785[0], l_U230, l_U227, l_U733 );
                 /* P_STOP_BIT_O_WIRE_ANIM */ sub_68470( ref l_U785[1], l_U231, l_U227, l_U733 );
                 /* P_STOP_BIT_O_WIRE_ANIM */ sub_68470( ref l_U785[2], l_U232, l_U227, l_U733 );
                l_U342 = 0;
                SET_OBJECT_INVINCIBLE( l_U731, 0 );
                FREEZE_OBJECT_POSITION( l_U731, 0 );
                SET_OBJECT_ANIM_CURRENT_TIME( l_U731, l_U229, l_U227, l_U733 );
                 /* WRITESCRIPTLOG */ sub_1502( "RJM", "P_HANDLE_WIRESTATE - Going to WIRESTATE_HIT_1", 0 );
                l_U223 = 4;
            }
        }
        break;
        case 4:
        if (DOES_OBJECT_EXIST( l_U731 ))
        {
            if ((NOT l_U342) AND ((GET_OBJECT_HEALTH( l_U731 )) <= 950.00000000))
            {
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "Damaged once! Triggering new animation!", 0 );
                SET_OBJECT_ANIM_SPEED( l_U731, l_U229, l_U227, 1.00000000 );
                 /* P_PLAY_BIT_O_WIRE_ANIM */ sub_67843( ref l_U785[0], l_U230, l_U227, 0, -1082130432 );
                 /* P_PLAY_BIT_O_WIRE_ANIM */ sub_67843( ref l_U785[1], l_U231, l_U227, 0, -1082130432 );
                 /* P_PLAY_BIT_O_WIRE_ANIM */ sub_67843( ref l_U785[2], l_U232, l_U227, 0, -1082130432 );
                l_U342 = 1;
                SET_OBJECT_INVINCIBLE( l_U731, 1 );
                l_U224 = 2;
                if ((DOES_OBJECT_EXIST( l_U790 )) AND (DOES_OBJECT_EXIST( l_U789 )))
                {
                    SET_OBJECT_ANIM_SPEED( l_U789, l_U233, l_U227, 0.00000000 );
                    SET_OBJECT_ANIM_CURRENT_TIME( l_U789, l_U233, l_U227, l_U792 );
                    SET_OBJECT_ANIM_SPEED( l_U790, l_U234, l_U227, 0.00000000 );
                    SET_OBJECT_ANIM_CURRENT_TIME( l_U790, l_U234, l_U227, l_U792 );
                    l_U344 = 0;
                }
                SET_OBJECT_HEALTH( l_U731, 950.00000000 );
                 /* P_PLAY_SOUND */ sub_60892( ref l_U1120, "SPOL_Wire_Jumble_A", 1519.41700000, -32.91525000, 20.75046000 );
                START_PARTICLE_FX_NON_LOOPED_AT_COORD( "PO_Boss_sparks_S", l_U743, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
                START_PARTICLE_FX_NON_LOOPED_AT_COORD( "PO_Boss_Con_Dust_S", l_U758, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
                START_PARTICLE_FX_NON_LOOPED_AT_COORD( "PO_Boss_Con_Debris_S", l_U773, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
            }
            if (l_U342)
            {
                if ((GET_OBJECT_ANIM_CURRENT_TIME( l_U731, l_U229, l_U227 )) >= 0.20000000)
                {
                    SET_OBJECT_ANIM_SPEED( l_U731, l_U229, l_U227, 0.00000000 );
                     /* P_STOP_BIT_O_WIRE_ANIM */ sub_68470( ref l_U785[0], l_U230, l_U227, l_U735 );
                     /* P_STOP_BIT_O_WIRE_ANIM */ sub_68470( ref l_U785[1], l_U231, l_U227, l_U735 );
                     /* P_STOP_BIT_O_WIRE_ANIM */ sub_68470( ref l_U785[2], l_U232, l_U227, l_U735 );
                    l_U342 = 0;
                    SET_OBJECT_INVINCIBLE( l_U731, 0 );
                    SET_OBJECT_ANIM_CURRENT_TIME( l_U731, l_U229, l_U227, l_U735 );
                    l_U223 = 5;
                }
            }
        }
        break;
        case 5:
        if (DOES_OBJECT_EXIST( l_U731 ))
        {
            if ((NOT l_U342) AND ((GET_OBJECT_HEALTH( l_U731 )) <= 900.00000000))
            {
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "Damaged damaged twice! Triggering new animation!", 0 );
                SET_OBJECT_ANIM_SPEED( l_U731, l_U229, l_U227, 1.00000000 );
                 /* P_PLAY_BIT_O_WIRE_ANIM */ sub_67843( ref l_U785[0], l_U230, l_U227, 0, -1082130432 );
                 /* P_PLAY_BIT_O_WIRE_ANIM */ sub_67843( ref l_U785[1], l_U231, l_U227, 0, -1082130432 );
                 /* P_PLAY_BIT_O_WIRE_ANIM */ sub_67843( ref l_U785[2], l_U232, l_U227, 0, -1082130432 );
                l_U342 = 1;
                SET_OBJECT_INVINCIBLE( l_U731, 1 );
                l_U226 = 2;
                l_U224 = 3;
                if ((DOES_OBJECT_EXIST( l_U790 )) AND (DOES_OBJECT_EXIST( l_U789 )))
                {
                    SET_OBJECT_ANIM_SPEED( l_U789, l_U233, l_U227, 0.00000000 );
                    SET_OBJECT_ANIM_CURRENT_TIME( l_U789, l_U233, l_U227, l_U794 );
                    SET_OBJECT_ANIM_SPEED( l_U790, l_U234, l_U227, 0.00000000 );
                    SET_OBJECT_ANIM_CURRENT_TIME( l_U790, l_U234, l_U227, l_U794 );
                    l_U344 = 0;
                }
                 /* P_PLAY_SOUND */ sub_60892( ref l_U1120, "SPOL_Wire_Jumble_B", 1519.41700000, -32.91525000, 20.75046000 );
                START_PARTICLE_FX_NON_LOOPED_AT_COORD( "PO_Boss_sparks_S", l_U746, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
                START_PARTICLE_FX_NON_LOOPED_AT_COORD( "PO_Boss_Con_Dust_S", l_U761, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
                START_PARTICLE_FX_NON_LOOPED_AT_COORD( "PO_Boss_Con_Debris_S", l_U776, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
            }
            if (l_U342)
            {
                if ((GET_OBJECT_ANIM_CURRENT_TIME( l_U731, l_U229, l_U227 )) >= 0.33000000)
                {
                    SET_OBJECT_ANIM_SPEED( l_U731, l_U229, l_U227, 0.00000000 );
                     /* P_STOP_BIT_O_WIRE_ANIM */ sub_68470( ref l_U785[0], l_U230, l_U227, l_U737 );
                     /* P_STOP_BIT_O_WIRE_ANIM */ sub_68470( ref l_U785[1], l_U231, l_U227, l_U737 );
                     /* P_STOP_BIT_O_WIRE_ANIM */ sub_68470( ref l_U785[2], l_U232, l_U227, l_U737 );
                    l_U342 = 0;
                    SET_OBJECT_INVINCIBLE( l_U731, 0 );
                    SET_OBJECT_ANIM_CURRENT_TIME( l_U731, l_U229, l_U227, l_U737 );
                    l_U223 = 6;
                }
            }
        }
        break;
        case 6:
        if (DOES_OBJECT_EXIST( l_U731 ))
        {
            if ((NOT l_U342) AND ((GET_OBJECT_HEALTH( l_U731 )) <= 850.00000000))
            {
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "Damaged damaged three times! Triggering new animation!", 0 );
                SET_OBJECT_ANIM_SPEED( l_U731, l_U229, l_U227, 1.00000000 );
                 /* P_PLAY_BIT_O_WIRE_ANIM */ sub_67843( ref l_U785[0], l_U230, l_U227, 0, -1082130432 );
                 /* P_PLAY_BIT_O_WIRE_ANIM */ sub_67843( ref l_U785[1], l_U231, l_U227, 0, -1082130432 );
                 /* P_PLAY_BIT_O_WIRE_ANIM */ sub_67843( ref l_U785[2], l_U232, l_U227, 0, -1082130432 );
                l_U342 = 1;
                SET_OBJECT_INVINCIBLE( l_U731, 1 );
                l_U226 = 3;
                l_U224 = 4;
                if ((DOES_OBJECT_EXIST( l_U790 )) AND (DOES_OBJECT_EXIST( l_U789 )))
                {
                    SET_OBJECT_ANIM_SPEED( l_U789, l_U233, l_U227, 0.00000000 );
                    SET_OBJECT_ANIM_CURRENT_TIME( l_U789, l_U233, l_U227, l_U796 );
                    SET_OBJECT_ANIM_SPEED( l_U790, l_U234, l_U227, 0.00000000 );
                    SET_OBJECT_ANIM_CURRENT_TIME( l_U790, l_U234, l_U227, l_U796 );
                    l_U344 = 0;
                }
                 /* P_PLAY_SOUND */ sub_60892( ref l_U1120, "SPOL_Wire_Jumble_C", 1519.41700000, -32.91525000, 20.75046000 );
                START_PARTICLE_FX_NON_LOOPED_AT_COORD( "PO_Boss_sparks_S", l_U749, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
                START_PARTICLE_FX_NON_LOOPED_AT_COORD( "PO_Boss_Con_Dust_S", l_U764, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
                START_PARTICLE_FX_NON_LOOPED_AT_COORD( "PO_Boss_Con_Debris_S", l_U779, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
            }
            if (l_U342)
            {
                if ((GET_OBJECT_ANIM_CURRENT_TIME( l_U731, l_U229, l_U227 )) >= 0.45000000)
                {
                    SET_OBJECT_INVINCIBLE( l_U731, 0 );
                    l_U223 = 7;
                }
            }
        }
        break;
        case 7:
        if (DOES_OBJECT_EXIST( l_U731 ))
        {
            if ((l_U342) AND ((GET_OBJECT_ANIM_CURRENT_TIME( l_U731, l_U229, l_U227 )) >= 0.65000000))
            {
                SET_OBJECT_ANIM_SPEED( l_U731, l_U229, l_U227, 0.00000000 );
                SET_OBJECT_ANIM_CURRENT_TIME( l_U731, l_U229, l_U227, l_U739 );
                 /* P_STOP_BIT_O_WIRE_ANIM */ sub_68470( ref l_U785[0], l_U230, l_U227, l_U739 );
                 /* P_STOP_BIT_O_WIRE_ANIM */ sub_68470( ref l_U785[1], l_U231, l_U227, l_U739 );
                 /* P_STOP_BIT_O_WIRE_ANIM */ sub_68470( ref l_U785[2], l_U232, l_U227, l_U739 );
                l_U342 = 0;
            }
            if ((GET_OBJECT_HEALTH( l_U731 )) <= 800.00000000)
            {
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "Damaged damaged four times! Triggering new animation!", 0 );
                SET_OBJECT_ANIM_CURRENT_TIME( l_U731, l_U229, l_U227, l_U739 );
                SET_OBJECT_ANIM_SPEED( l_U731, l_U229, l_U227, 1.00000000 );
                 /* P_PLAY_BIT_O_WIRE_ANIM */ sub_67843( ref l_U785[0], l_U230, l_U227, 0, l_U739 );
                 /* P_PLAY_BIT_O_WIRE_ANIM */ sub_67843( ref l_U785[1], l_U231, l_U227, 0, l_U739 );
                 /* P_PLAY_BIT_O_WIRE_ANIM */ sub_67843( ref l_U785[2], l_U232, l_U227, 0, l_U739 );
                l_U224 = 5;
                if ((DOES_OBJECT_EXIST( l_U790 )) AND (DOES_OBJECT_EXIST( l_U789 )))
                {
                    SET_OBJECT_ANIM_SPEED( l_U789, l_U233, l_U227, 0.00000000 );
                    SET_OBJECT_ANIM_CURRENT_TIME( l_U789, l_U233, l_U227, l_U798 );
                    SET_OBJECT_ANIM_SPEED( l_U790, l_U234, l_U227, 0.00000000 );
                    SET_OBJECT_ANIM_CURRENT_TIME( l_U790, l_U234, l_U227, l_U798 );
                    l_U344 = 0;
                }
                 /* P_PLAY_SOUND */ sub_60892( ref l_U1120, "SPOL_Wire_Jumble_D", 1519.41700000, -32.91525000, 20.75046000 );
                START_PARTICLE_FX_NON_LOOPED_AT_COORD( "PO_Boss_sparks_S", l_U752, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
                START_PARTICLE_FX_NON_LOOPED_AT_COORD( "PO_Boss_Con_Dust_S", l_U767, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
                START_PARTICLE_FX_NON_LOOPED_AT_COORD( "PO_Boss_Con_Debris_S", l_U782, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
                l_U342 = 1;
                if (DOES_OBJECT_EXIST( l_U1079 ))
                {
                    CAMERA_CAN_TARGET_OBJECT( 0, l_U1079 );
                }
                l_U223 = 8;
            }
        }
        break;
        case 8: break;
    }
    return;
}

/* WRITESCRIPTLOG_PERIODIC */ void sub_67264(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if ( /* ISTIMERDONE */ sub_4886( uParam2 ))
    {
         /* WRITESCRIPTLOG */ sub_1502( uParam0, uParam1, uParam4 );
         /* RESETTIMER */ sub_5462( uParam2 );
         /* STARTTIMER */ sub_4753( uParam2 );
    }
    else if (NOT ( /* HASTIMERBEENACTIVATED */ sub_4469( uParam2 )))
    {
         /* CREATETIMER */ sub_4603( uParam2, uParam3, 1, 0 );
         /* STARTTIMER */ sub_4753( uParam2 );
    }
    return;
}

/* P_PLAY_BIT_O_WIRE_ANIM */ void sub_67843(unknown uParam0, unknown uParam1, unknown uParam2, boolean bParam3, float fParam4)
{
    if (DOES_OBJECT_EXIST( (uParam0^) ))
    {
         /* WRITESCRIPTLOG */ sub_1502( "AT", "Starting bit of wire anim ...", 0 );
        if (bParam3)
        {
             /* MAL_PLAYOBJECTANIM */ sub_60536( (uParam0^), uParam1, uParam2, 1065353216, 0 );
        }
        else if (fParam4 != -1.00000000)
        {
            SET_OBJECT_ANIM_CURRENT_TIME( (uParam0^), uParam1, uParam2, fParam4 );
        }
        SET_OBJECT_ANIM_SPEED( (uParam0^), uParam1, uParam2, 1.00000000 );;
    }
    return;
}

/* P_STOP_BIT_O_WIRE_ANIM */ void sub_68470(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    if (DOES_OBJECT_EXIST( (uParam0^) ))
    {
         /* WRITESCRIPTLOG */ sub_1502( "AT", "Stopping bit of wire anim ...", 0 );
        SET_OBJECT_ANIM_SPEED( (uParam0^), uParam1, uParam2, 0.00000000 );
        SET_OBJECT_ANIM_CURRENT_TIME( (uParam0^), uParam1, uParam2, uParam3 );
    }
    return;
}

/* P_HANDLE_PIPESTATE */ void sub_71945()
{
    switch (l_U224)
    {
        case 0: break;
        case 1:
        if ((DOES_OBJECT_EXIST( l_U790 )) AND (DOES_OBJECT_EXIST( l_U789 )))
        {
            if (NOT l_U344)
            {
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "Starting Pipe Anims ...", 0 );
                 /* MAL_PLAYOBJECTANIM */ sub_60536( l_U789, l_U233, l_U227, 1065353216, 0 );
                 /* MAL_PLAYOBJECTANIM */ sub_60536( l_U790, l_U234, l_U227, 1065353216, 0 );
                l_U344 = 1;
            }
            else if (((GET_OBJECT_ANIM_CURRENT_TIME( l_U790, l_U234, l_U227 )) >= l_U791) || ((GET_OBJECT_ANIM_CURRENT_TIME( l_U789, l_U233, l_U227 )) >= l_U791))
            {
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "Stopping Pipe Anims ...", 0 );
                SET_OBJECT_ANIM_SPEED( l_U789, l_U233, l_U227, 0.00000000 );
                SET_OBJECT_ANIM_CURRENT_TIME( l_U789, l_U233, l_U227, l_U792 );
                SET_OBJECT_ANIM_SPEED( l_U790, l_U234, l_U227, 0.00000000 );
                SET_OBJECT_ANIM_CURRENT_TIME( l_U790, l_U234, l_U227, l_U792 );
                l_U344 = 0;
                l_U224 = 0;
            }
        }
        break;
        case 2:
        if ((DOES_OBJECT_EXIST( l_U790 )) AND (DOES_OBJECT_EXIST( l_U789 )))
        {
            if (NOT l_U344)
            {
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "Starting Pipe Anims ...", 0 );
                SET_OBJECT_ANIM_SPEED( l_U789, l_U233, l_U227, 1.00000000 );
                SET_OBJECT_ANIM_SPEED( l_U790, l_U234, l_U227, 1.00000000 );
                l_U344 = 1;
            }
            else if (((GET_OBJECT_ANIM_CURRENT_TIME( l_U790, l_U234, l_U227 )) >= l_U793) || ((GET_OBJECT_ANIM_CURRENT_TIME( l_U789, l_U233, l_U227 )) >= l_U793))
            {
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "Stopping Pipe Anims ...", 0 );
                SET_OBJECT_ANIM_SPEED( l_U789, l_U233, l_U227, 0.00000000 );
                SET_OBJECT_ANIM_CURRENT_TIME( l_U789, l_U233, l_U227, l_U794 );
                SET_OBJECT_ANIM_SPEED( l_U790, l_U234, l_U227, 0.00000000 );
                SET_OBJECT_ANIM_CURRENT_TIME( l_U790, l_U234, l_U227, l_U794 );
                l_U344 = 0;
                l_U224 = 0;
            }
        }
        break;
        case 3:
        if ((DOES_OBJECT_EXIST( l_U790 )) AND (DOES_OBJECT_EXIST( l_U789 )))
        {
            if (NOT l_U344)
            {
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "Starting Pipe Anims ...", 0 );
                SET_OBJECT_ANIM_SPEED( l_U789, l_U233, l_U227, 1.00000000 );
                SET_OBJECT_ANIM_SPEED( l_U790, l_U234, l_U227, 1.00000000 );
                l_U344 = 1;
            }
            else if (((GET_OBJECT_ANIM_CURRENT_TIME( l_U790, l_U234, l_U227 )) >= l_U795) || ((GET_OBJECT_ANIM_CURRENT_TIME( l_U789, l_U233, l_U227 )) >= l_U795))
            {
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "Stopping Pipe Anims ...", 0 );
                SET_OBJECT_ANIM_SPEED( l_U789, l_U233, l_U227, 0.00000000 );
                SET_OBJECT_ANIM_CURRENT_TIME( l_U789, l_U233, l_U227, l_U796 );
                SET_OBJECT_ANIM_SPEED( l_U790, l_U234, l_U227, 0.00000000 );
                SET_OBJECT_ANIM_CURRENT_TIME( l_U790, l_U234, l_U227, l_U796 );
                l_U344 = 0;
                l_U224 = 0;
            }
        }
        break;
        case 4:
        if ((DOES_OBJECT_EXIST( l_U790 )) AND (DOES_OBJECT_EXIST( l_U789 )))
        {
            if (NOT l_U344)
            {
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "Starting Pipe Anims ...", 0 );
                SET_OBJECT_ANIM_SPEED( l_U789, l_U233, l_U227, 1.00000000 );
                SET_OBJECT_ANIM_SPEED( l_U790, l_U234, l_U227, 1.00000000 );
                l_U344 = 1;
            }
            else if (((GET_OBJECT_ANIM_CURRENT_TIME( l_U790, l_U234, l_U227 )) >= l_U797) || ((GET_OBJECT_ANIM_CURRENT_TIME( l_U789, l_U233, l_U227 )) >= l_U797))
            {
                 /* WRITESCRIPTLOG */ sub_1502( "AT", "Stopping Pipe Anims ...", 0 );
                SET_OBJECT_ANIM_SPEED( l_U789, l_U233, l_U227, 0.00000000 );
                SET_OBJECT_ANIM_CURRENT_TIME( l_U789, l_U233, l_U227, l_U798 );
                SET_OBJECT_ANIM_SPEED( l_U790, l_U234, l_U227, 0.00000000 );
                SET_OBJECT_ANIM_CURRENT_TIME( l_U790, l_U234, l_U227, l_U798 );
                l_U344 = 0;
                l_U224 = 0;
            }
        }
        break;
        case 5:
        if ((DOES_OBJECT_EXIST( l_U790 )) AND (DOES_OBJECT_EXIST( l_U789 )))
        {
             /* WRITESCRIPTLOG */ sub_1502( "AT", "Starting Pipe Anims ...", 0 );
            SET_OBJECT_ANIM_SPEED( l_U789, l_U233, l_U227, 1.00000000 );
            SET_OBJECT_ANIM_SPEED( l_U790, l_U234, l_U227, 1.00000000 );
            l_U344 = 1;
            l_U224 = 6;
        }
        break;
        case 6: break;
    }
    return;
}

/* P_TASK_WAVE2 */ void sub_74137()
{
    unknown uVar2;

     /* P_ACTIVATEPEDARRAY */ sub_49901( ref l_U886 );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() ))) AND (NOT (IS_PED_DEAD( l_U886[0] ))))
    {
         /* TELEPORTPED */ sub_9783( l_U886[0], 1524.95000000, -31.23000000, 15.10000000, 0 );
        CLEAR_PED_TASKS_IMMEDIATELY( l_U886[0] );
        PED_ACTION_TREE_PLAY_NODE( l_U886[0], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U886[0], 1 );
        REGISTER_TARGET( l_U886[0],  /* PLAYER_PED_ID */ sub_3708() );
        TASK_ATTACK_MOVE( l_U886[0], 1518.94000000, -29.98000000, 15.10000000, 1.00000000, 20, -1, 2 );
    }
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() ))) AND (NOT (IS_PED_DEAD( l_U886[1] ))))
    {
         /* TELEPORTPED */ sub_9783( l_U886[1], 1523.71000000, -31.23000000, 15.10000000, 0 );
        CLEAR_PED_TASKS_IMMEDIATELY( l_U886[1] );
        PED_ACTION_TREE_PLAY_NODE( l_U886[1], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U886[0], 1 );
        REGISTER_TARGET( l_U886[1],  /* PLAYER_PED_ID */ sub_3708() );
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_PAUSE( 0, 250 );
        TASK_ATTACK_MOVE( 0, 1514.21000000, -30.07000000, 15.10000000, 1.00000000, 20, -1, 2 );
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( l_U886[1], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
     /* CREATETIMER */ sub_4603( ref l_U889, 1500, 1, 0 );
     /* STARTTIMER */ sub_4753( ref l_U889 );
    return;
}

/* P_BF_START_GAMEPLAY_POS_C */ void sub_74689()
{
     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_START_GAMEPLAY_POS_C start", 0 );
    if (DOES_OBJECT_EXIST( l_U731 ))
    {
        CAMERA_CAN_TARGET_OBJECT( 1, l_U731 );
    }
    if (DOES_OBJECT_EXIST( l_U1079 ))
    {
        CAMERA_CAN_TARGET_OBJECT( 1, l_U1079 );
    }
     /* CREATETIMER */ sub_4603( ref l_U914, l_U1051, 1, 0 );
     /* STARTTIMER */ sub_4753( ref l_U914 );
    l_U949 = 1;
     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_START_GAMEPLAY_POS_C end", 0 );
    return;
}

/* P_BF_MOVE_BACHMEYER_C_TO_PRONE */ void sub_75114()
{
     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_MOVE_BACHMEYER_C_TO_PRONE start", 0 );
     /* RESETTIMER */ sub_5462( ref l_U903 );
     /* RESETTIMER */ sub_5462( ref l_U914 );
     /* KILL_SPEECH */ sub_55503( ref l_U927, 0 );
    if ((NOT (IS_PED_DEAD( l_U817 ))) AND (l_U900))
    {
        CLEAR_PED_TASKS( l_U817 );
        l_U900 = 0;
    }
    l_U949 = 0;
    if (NOT (IS_PED_DEAD( l_U817 )))
    {
        PED_SET_ACTION_INTENTION( l_U817, 51, 1000, 0.00000000, 0.00000000, 0.00000000 );
    }
     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_MOVE_BACHMEYER_C_TO_PRONE end", 0 );
    return;
}

/* P_BF_MOVE_BACHMEYER_PRONE_TO_D */ void sub_75816()
{
     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_MOVE_BACHMEYER_PRONE_TO_D start", 0 );
    if (NOT (IS_PED_DEAD( l_U817 )))
    {
        PED_SET_ACTION_INTENTION( l_U817, 54, 1000, 0.00000000, 0.00000000, 0.00000000 );
    }
     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_MOVE_BACHMEYER_PRONE_TO_D end", 0 );
    return;
}

/* P_BF_REMOVE_TARGET_GAMEPLAY_OBJECTS */ void sub_76056()
{
    int I;

     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_CREATE_GAMEPLAY_TARGETS start", 0 );
    for ( I = 0; I < 3; I++ )
    {
        if (DOES_OBJECT_EXIST( l_U307[I] ))
        {
            CAMERA_CAN_TARGET_OBJECT( 0, l_U307[I] );
        }
    }
    for ( I = 0; I < 24; I++ )
    {
        if (DOES_OBJECT_EXIST( l_U346[I]._fU4 ))
        {
            CAMERA_CAN_TARGET_OBJECT( 0, l_U346[I]._fU4 );
        }
    }
    if (DOES_OBJECT_EXIST( l_U333 ))
    {
        CAMERA_CAN_TARGET_OBJECT( 0, l_U333 );
    }
    return;
}

/* P_BF_START_GAMEPLAY_POS_D */ void sub_76421()
{
     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_START_GAMEPLAY_POS_D start", 0 );
    if (NOT (IS_PED_DEAD( l_U817 )))
    {
        SET_PED_PROOFS( l_U817, 0, 0, 0, 0, 0 );
        SET_PED_INVINCIBLE( l_U817, 0 );
        SET_PED_AS_ONE_SHOT_KILL( l_U817, 1 );
        SET_PED_GORE( l_U817, 0 );
    }
    SET_INSTANT_FIRE_FORCED( 1 );
     /* P_BF_BACHMEYER_START_SHOOTING */ sub_55225();
     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_START_GAMEPLAY_POS_D end", 0 );
    return;
}

/* F_BF_13_05_PP_PRECUTSCENESETUP */ int sub_76886()
{
    switch (l_U1199)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_1502( "GA", "e_BF_1305_PedSpawn = ENTITY_STATE_INIT", 0 );
        l_U1200 = 0;
        l_U1199 = 2;
         /* WRITESCRIPTLOG */ sub_1502( "GA", "e_BF_1305_PedSpawn = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U1195[l_U1200] =  /* CREATEPED */ sub_37557( ref l_U1155[l_U1200] );
        if (NOT (IS_PED_DEAD( l_U1195[l_U1200] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U1195[l_U1200], ref g_U3477 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1195[l_U1200], 1 );
        }
         /* P_DEACTIVATEPEDARRAY */ sub_54639( ref l_U1195 );
        l_U1200++;
        if (l_U1200 >= 3)
        {
            l_U1199 = 4;
             /* WRITESCRIPTLOG */ sub_1502( "GA", "e_BF_1305_PedSpawn = ENTITY_STATE_COMPLETE", 0 );
        }
        break;
    }
    if (l_U1199 == 4)
    {
        return 1;
        break;
    }
    return 0;
}

/* P_BF_13_05_PP_CUTSCENEREGISTRATION */ void sub_77308()
{
    unknown uVar2;
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_13_05_PP_CutsceneRegistration start", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3708() )))
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3708(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            if ( /* IS_WEAPON_SINGLE_HANDED */ sub_47920( uVar2 ))
            {
                REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_PI_Clt1911_Aa_H", 0 );
            }
            else
            {
                uVar3 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_48155();
                if (GET_DOES_WEAPON_EXIST( uVar3 ))
                {
                    REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar3, "W_PI_Clt1911_Aa_H", 0 );
                }
            }
        }
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_3708(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
    }
     /* P_ACTIVATEPEDARRAY */ sub_49901( ref l_U1195 );
    if (NOT (IS_PED_DEAD( l_U1195[0] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1195[0], "Bach_Unif", 1 );
    }
    if (NOT (IS_PED_DEAD( l_U1195[1] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1195[1], "Armo_Unif", 1 );
    }
    if (NOT (IS_PED_DEAD( l_U1195[2] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1195[2], "VICT_POLICE", 0 );
    }
    if (NOT l_U218)
    {
        SET_HIGHEST_ARCADE_LEVEL_UNLOCKED( 16 );
        CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        CUTSCENE_ENABLE_SKIP( 0 );
        AUD_ENABLE_PRE_BINK_SHUTDOWN( 1 );
        CUTSCENE_REGISTER_SWITCH_TO_LEVEL_NAME( "s_air" );
        DISABLE_FADE_BETWEEN_SP_LEVELS();
    }
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U4289._fU0, g_U4289._fU4 );
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U4177._fU0, g_U4177._fU4 );
     /* WRITESCRIPTLOG */ sub_1502( "GA", "P_BF_13_05_PP_CutsceneRegistration end", 0 );
    return;
}

/* P_BF_13_05_PP_HANDLECUTSCENE */ void sub_77945()
{
    int iVar2;

    if (l_U1128._fU52)
    {
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        FREEZE_TIME_OF_DAY( 6, 0 );
        SET_WEATHER_TYPE_NOW_PERSIST( "CLOUDY" );
        SET_WEATHER_TRANSITION_IMMEDIATE( 1 );
        if (IS_CUSTOM_PLAYER_VARIATION() == 0)
        {
            SET_PED_COMPONENT_VARIATION(  /* PLAYER_PED_ID */ sub_3708(), 2, 21, 0, 0 );
            SET_PED_COMPONENT_VARIATION(  /* PLAYER_PED_ID */ sub_3708(), 3, 3, 2, 0 );
            SET_PED_COMPONENT_VARIATION(  /* PLAYER_PED_ID */ sub_3708(), 4, 8, 0, 0 );
            SET_PED_COMPONENT_VARIATION(  /* PLAYER_PED_ID */ sub_3708(), 12, 0, 0, 0 );
        }
         /* CLEANOBJECT */ sub_7577( l_U803 );
         /* P_SET_PLAYER_WEAPONS_VISIBLE */ sub_53242( 0 );
         /* CLEANPED */ sub_7358( l_U817 );
    }
    iVar2 = GET_CUTSCENE_TIME_MS();
    if (NOT l_U961)
    {
        if ((iVar2 < 87000) AND (iVar2 >= 86415))
        {
            if (NOT (IS_PED_DEAD( l_U1195[2] )))
            {
                 /* WRITESCRIPTLOG */ sub_1502( "SBA", "P_BF_13_05_PP_HandleCutscene:  Switching Victor Model", "*-*" );
                SET_PERSISTENT_PED_VARIATION_ENUM( l_U1195[2], 1035113613 );
                l_U961 = 1;
            }
        }
    }
    return;
}

/* CUTSYS_CREATESTANDALONECUTSCENE */ void sub_78325(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
     /* WRITESCRIPTLOG */ sub_1502( "MSWW", "CutSys_CreateStandaloneCutscene", "###" );
    return  /* CUTSYS_PRIVATE_CREATECUTSCENE */ sub_51349( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam7, 0, 78436, 78487, 0, 51246, 51296, uParam6 );
}

/* CUTSYS_DEFAULT_PREPAREBLENDOUT */ void sub_78436()
{
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDOUT */ int sub_78487()
{
    return 1;
}

/* P_BF_DEBUG_TUNING_WIDGET */ void sub_78948()
{
    if (NOT l_U1222)
    {
        START_WIDGET_GROUP( "Boss Fight Tuning" );
        ADD_WIDGET_BOOL( "Restart Checkpoint", ref l_U1223 );
        ADD_WIDGET_BOOL( "Stop level from ending", ref l_U218 );
        START_WIDGET_GROUP( "Position D Tuning" );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Crouch Shooting Variables" );
        ADD_WIDGET_INT_SLIDER( "Shooting Duration Min", ref l_U901, 0, 100000, 50 );
        ADD_WIDGET_INT_SLIDER( "Shooting Duration Max", ref l_U902, 0, 100000, 50 );
        ADD_WIDGET_INT_SLIDER( "Hiding Duration Min", ref l_U912, 0, 100000, 50 );
        ADD_WIDGET_INT_SLIDER( "Hiding Duration Max", ref l_U913, 0, 100000, 50 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Bachmeyer's starting position" );
        ADD_WIDGET_FLOAT_SLIDER( "X", ref l_U818._fU0, 55536, 10000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Y", ref l_U818._fU4, 55536, 10000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Z", ref l_U818._fU8, 55536, 10000, 0.10000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Bachmeyer's ending position" );
        ADD_WIDGET_FLOAT_SLIDER( "X", ref l_U821._fU0, 55536, 10000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Y", ref l_U821._fU4, 55536, 10000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Z", ref l_U821._fU8, 55536, 10000, 0.10000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Shameless Hack Positioning" );
        START_WIDGET_GROUP( "Hack Targetter 1" );
        ADD_WIDGET_FLOAT_SLIDER( "X", ref l_U1082._fU0, 55536, 10000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Y", ref l_U1082._fU4, 55536, 10000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Z", ref l_U1082._fU8, 55536, 10000, 0.10000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Hack Targetter 1" );
        ADD_WIDGET_FLOAT_SLIDER( "X", ref l_U1085._fU0, 55536, 10000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Y", ref l_U1085._fU4, 55536, 10000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Z", ref l_U1085._fU8, 55536, 10000, 0.10000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Pin Test Tuning" );
        ADD_WIDGET_INT_SLIDER( "Pistol", ref l_U1046, 0, 10000, 1 );
        ADD_WIDGET_INT_SLIDER( "Rifle/SMG", ref l_U1047, 0, 10000, 1 );
        ADD_WIDGET_INT_SLIDER( "Shotgun", ref l_U1048, 0, 10000, 1 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        l_U1222 = 1;
    }
    if (l_U1223)
    {
         /* P_CLEANUP_BOSSFIGHT */ sub_6082( 0 );
        CLEAR_AREA( g_U2953[18], 10000, 1 );
        l_U219 = 1;
        l_U221 = 0;
        WAIT( 1000 );
        l_U1223 = 0;
    }
    return;
}

/* P_RELEASE_BOSSFIGHT_ASSETS */ void sub_80144()
{
     /* WRITESCRIPTLOG */ sub_1502( "AT", "P_RELEASE_BOSSFIGHT_ASSETS", 0 );
     /* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ sub_80231( ref l_U188, ref g_U2468 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE_ARRAY */ sub_80336( ref l_U211, ref g_U2613 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_54215( "LEVEL_S_POLICE_CP_15", ref g_U2741 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_54215( "DAM_DEAD", ref g_U2741 );
     /* P_STREAMREQ_AUDIO_BANK_REMOVE */ sub_80850( "SCRIPT_MISSION\S_POLICE_BOSS_FIGHT_1", ref g_U2889 );
     /* P_STREAMREQ_AUDIO_BANK_REMOVE */ sub_80850( "SCRIPT_MISSION\S_POLICE_BOSS_FIGHT_2", ref g_U2889 );
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ void sub_80231(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_7925( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE_ARRAY */ void sub_80336(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_80410( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE */ void sub_80410(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_6428( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a WEAPON_TYPE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_AUDIO_BANK_REMOVE */ void sub_80850(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_6428( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a AUDIO_BANK asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}


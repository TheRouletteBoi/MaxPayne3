void main()
{
    l_U0 = 1;
    l_U1 = 144;
    StrCopy( ref l_U2, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U10, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U21 = 0;
    l_U22 = 0;
    l_U23 = 1;
    l_U24 = 0;
    l_U25 = 1.00000000;
    l_U26 = -5.00000000;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U33 = 42;
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = 90.00000000;
    l_U40 = {0.00000000, 0.00000000, 0.00000000};
    l_U43 = {0.00000000, 0.00000000, 0.00000000};
    l_U46 = 0;
    l_U47 = 0;
    l_U48 = 0;
    l_U49 = 0;
    l_U50 = 0;
    l_U51 = 0;
    l_U52 = nil;
    l_U53 = {0.00000000, 0.00000000, 0.00000000};
    l_U56 = 0;
    l_U57 = 0;
    l_U58 = 0;
    l_U60 = 0;
    l_U61 = 0;
    l_U62 = 1500;
    l_U72 = {100.33000000, -111.10100000, -5.39500000};
    l_U75 = {99.78500000, -116.78500000, -9.03400000};
    l_U78 = {100.70300000, -112.41100000, -8.61400000};
    l_U92 = 0;
    l_U93 = 0;
    l_U130 = 0;
    l_U632 = 0;
    l_U633 = 1;
    l_U634 = 1;
    l_U635 = 1;
    l_U636 = 0;
    l_U637 = 0;
    l_U638 = 0;
    l_U639 = 0;
    l_U640 = 1;
    l_U641 = 0;
    l_U642 = 0;
    l_U643 = 0;
    l_U644 = 1;
    l_U645 = 1;
    l_U646 = 0;
    l_U647 = 0;
    l_U648 = 0;
    l_U649 = 1;
    l_U650 = 1;
    l_U651 = 0;
    l_U652 = 1;
    l_U653 = 0;
    l_U655 = 0;
    StrCopy( ref l_U693, "room_large", 16 );
    StrCopy( ref l_U697, "room_hall", 16 );
    l_U1045 = {2.70000000, -1.50000000, 0.70000000};
    l_U1055 = GET_GAME_TIMER() + 300;
    l_U1056 = 0;
    l_U1057 = 0;
    l_U1058 = 0.00000000;
    l_U1059 = -90.00000000;
    sub_706( "SP", "Script fav1_warehouseFIGHT.sc is starting...", "###" );
    while (g_U781 == 1)
    {
        sub_767();
        sub_7467();
        sub_41666();
        WAIT( 0 );
    }
    sub_2733();
    sub_40909();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_fav1_warehouseFIGHT" );
    sub_706( "SP", "Script fav1_warehouseFIGHT.sc is terminating...", "###" );
    return;
}

void sub_706(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_767()
{
    if (g_U1049 == 5)
    {
        if (sub_789())
        {
            g_U786 = 1;
        }
        if ((g_U786) || ((IS_PED_DEAD( sub_1061() )) == 1))
        {
            if (g_U786 == 0)
            {
                while ((sub_1326( 0 )) == 0)
                {
                    WAIT( 0 );
                }
                while ((IS_PED_DEAD( sub_1061() )) == 1)
                {
                    WAIT( 0 );
                }
            }
            if ((IS_PLAYER_DEAD( sub_1083() )) == 0)
            {
                SET_PLAYER_CONTROL( sub_1083(), 0, 0 );
            }
            g_U798 = 0;
            sub_2733();
            WAIT( 100 );
            sub_3415( ref l_U94, sub_1061() );
            l_U152 = 0;
            g_U786 = 0;
        }
    }
    return;
}

int sub_789()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_1061() )))
        {
            SET_PED_FORCED_TO_WALK( sub_1061(), 0 );
            SET_PLAYER_FORCED_AIM( sub_1083(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1083(), 1 );
            if ((IS_PED_VISIBLE( sub_1061() )) == 0)
            {
                SET_PED_VISIBLE( sub_1061(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

int sub_1061()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_1083() );
    }
    return 0;
}

void sub_1083()
{
    return GET_PLAYER_ID();
}

int sub_1326(int iParam0)
{
    iParam0 = 1;
    switch (l_U61)
    {
        case 0:
        if (NOT (sub_1387( ref l_U63 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1061() )))
            {
                l_U62 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_1497( ref l_U63, l_U62, 1, 1 );
            sub_1633( ref l_U63 );
        }
        if (sub_1753( ref l_U63 ))
        {
            sub_706( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1061() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_1083() )))
            {
                SET_PLAYER_CONTROL( sub_1083(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U61 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U61 = 2;
            }
            else
            {
                l_U61 = 3;
            }
        }
        break;
        case 2:
        sub_706( "NS", "Player will QUIT", 0 );
        sub_2240();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_706( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_2240();
        return 1;
        break;
    }
    return 0;
}

int sub_1387(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_1497(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_1633(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_1753(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_2240()
{
    sub_706( "NS", "P_PostFailRetryCleanup", 0 );
    sub_2290( ref l_U63 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_1083() )))
    {
        SET_PLAYER_CONTROL( sub_1083(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U60 = 0;
    l_U60 = l_U60;
    l_U61 = 0;
    return;
}

void sub_2290(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_2733()
{
    sub_706( "SP", "P_CLEANUP_ALL", "###" );
    ISEQ_UNREGISTER_ENTITY( 1411761023, "DUDE" );
    ISEQ_UNREGISTER_ENTITY( 1411761023, "DOOR" );
    ISEQ_TERMINATE( 1411761023 );
    sub_2829( ref g_U809 );
    sub_2829( ref l_U707 );
    sub_2829( ref l_U737 );
    sub_2829( ref l_U839 );
    sub_2829( ref l_U984 );
    sub_2997( l_U1000 );
    sub_2829( ref l_U883 );
    sub_2829( ref l_U954 );
    sub_2829( ref l_U1001 );
    sub_2829( ref l_U809 );
    sub_2863( l_U1031 );
    sub_3087( ref g_U793 );
    sub_3120( g_U800 );
    sub_3120( g_U799 );
    sub_2997( g_U790 );
    sub_2997( g_U791 );
    sub_2997( g_U792 );
    sub_3236( ref g_U804 );
    sub_3236( ref g_U853 );
    sub_3120( g_U667._fU0 );
    sub_3120( g_U739._fU0 );
    sub_3087( ref l_U656 );
    sub_3087( ref l_U659 );
    STOP_SCRIPT_STREAM( 0 );
    sub_2290( ref l_U565 );
    sub_2290( ref l_U574 );
    sub_2290( ref l_U583 );
    sub_2290( ref l_U601 );
    return;
}

void sub_2829(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_2863( (uParam0^)[I] );
    }
    return;
}

void sub_2863(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_2997(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_3087(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_3120( (uParam0^)[I] );
    }
    return;
}

void sub_3120(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_3236(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_2997( (uParam0^)[I] );
    }
    return;
}

void sub_3415(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_706( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_3599( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_4676( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_4968( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_5328( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_4968( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_5328( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_4968( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_5328( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_5613( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_5328( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_5613( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_5328( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_6106( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_6267( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_1061(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_706( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_3599(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_3631( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_3631(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_4676(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_4968(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_5284( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_5284(unknown uParam0)
{
    return;
}

void sub_5328(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_5613(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_5284( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_6106(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_6267(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_3631( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_6339( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_6339(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_7467()
{
    switch (l_U152)
    {
        case 0:
        sub_7529();
        sub_8429();
        sub_12070();
        sub_12527();
        SET_WEATHER_TYPE_NOW_PERSIST( "Sunny" );
        FREEZE_TIME_OF_DAY( 12, 0 );
        if (g_U1048 == 5)
        {
            g_U767 = 1;
        }
        l_U152 = 1;
        break;
        case 1:
        if (sub_13036())
        {
            sub_13327();
            l_U152 = 2;
        }
        break;
        case 2:
        if (g_U767)
        {
            l_U152 = 5;
        }
        break;
        case 5:
        sub_14836();
        if (l_U130 == 0)
        {
            if ((sub_23270( ref l_U94 )) == 0)
            {
                if (g_U1048 == 5)
                {
                    sub_5613( sub_1061(), g_U1816, 200, 0, 1 );
                }
            }
            l_U130 = 1;
        }
        if ((l_U94._fU0 == 0) || (g_U1049 < 5))
        {
            g_U1049 = 5;
            sub_23567( ref l_U94, g_U1049, sub_1061(), g_U1050[5], g_U1174[5], g_U1216[5], g_U1258[5], 1 );
        }
        l_U152 = 6;
        break;
        case 6:
        if (l_U652)
        {
            if (sub_27208( l_U427 ))
            {
                if (NOT (IS_PED_DEAD( sub_1061() )))
                {
                    SET_PED_HEALTH( sub_1061(), 0, 0 );
                }
            }
        }
        if (l_U651 == 1)
        {
            sub_27339( l_U406 );
        }
        if (sub_27464( ref l_U322, 0 ))
        {
            l_U647 = 1;
            sub_15393( ref g_U1524, 0 );
        }
        if (sub_27208( l_U511 ))
        {
            l_U652 = 0;
        }
        if (l_U647 == 1)
        {
            if (((sub_27619( ref g_U1524 )) > -0.10000000) AND ((sub_27619( ref g_U1524 )) < 0.10000000))
            {
                sub_706( "NS", " locking cubicle room", 0 );
                sub_14895( ref g_U1524, 1 );
                l_U647 = 0;
            }
        }
        if (sub_27464( ref l_U154, 0 ))
        {
            sub_27784();
            l_U655 = 1;
        }
        if (l_U633 == 1)
        {
            if (NOT l_U648)
            {
                if (((sub_28127( ref l_U737 )) + (sub_28127( ref l_U839 ))) >= 3)
                {
                    sub_28242();
                    l_U648 = 1;
                }
            }
            if ((sub_27464( ref l_U364, 0 )) || ((NOT IS_BULLET_CAMERA_ACTIVE()) AND ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND (IS_SPHERE_VISIBLE( 108.87000000, -110.85000000, -2.34000000, 0.50000000, 0 )))))
            {
                if (l_U648)
                {
                    if (sub_1753( ref l_U583 ))
                    {
                        sub_28496();
                        sub_28822();
                        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
                        sub_30415();
                        sub_30915();
                        sub_31507();
                        sub_32091();
                        sub_32538();
                        l_U633 = 0;
                        l_U636 = 1;
                    }
                    if (NOT (sub_1387( ref l_U583 )))
                    {
                        sub_1633( ref l_U583 );
                    }
                }
            }
            else
            {
                sub_2290( ref l_U583 );
            }
        }
        if (l_U636 == 1)
        {
            if ((PED_GET_ACTION_INTENTION_STATUS( l_U984[0], 47 )) == 1)
            {
                sub_706( "NS", "ISEQ_QUERY_STATE(S_FAV1_VIG_22B, eSNS_PLAYING) = FALSE", 0 );
                sub_706( "SA", "ONESHOT and FAV1_RUN_1_3", 0 );
                AUDIO_MUSIC_PLAY_ONESHOT();
                AUDIO_MUSIC_FORCE_TRACK( "FAVELA_ONE_SONG", "FAV_ONE_5_6", "", 1.00000000, 4000, 0, -1082130432, 0 );
                sub_2997( l_U1000 );
                sub_14895( ref g_U1524, 0 );
                sub_15294( ref g_U1524, -100.00000000, 100.00000000 );
                sub_15117( ref g_U1524, 1, 1, -0.87600000 );
                l_U636 = 0;
            }
        }
        if (sub_27464( ref l_U532, 0 ))
        {
            sub_33219();
        }
        if (l_U637)
        {
            if (sub_33667())
            {
                l_U637 = 0;
            }
        }
        if (l_U640)
        {
            if (sub_34290())
            {
                l_U640 = 0;
            }
        }
        if (l_U635 == 1)
        {
            if (sub_27464( ref l_U196, 0 ))
            {
                sub_34838();
            }
        }
        if (sub_27464( ref l_U343, 0 ))
        {
            sub_35135();
            if (NOT (IS_PED_VISIBLE( l_U839[1] )))
            {
                sub_2863( l_U839[1] );
            }
            if (NOT (IS_PED_VISIBLE( l_U839[2] )))
            {
                sub_2863( l_U839[2] );
            }
        }
        if (sub_27464( ref l_U217, 0 ))
        {
            sub_35296();
            sub_35525();
        }
        if (sub_27464( ref l_U238, 0 ))
        {
            sub_35670();
            sub_35920();
            sub_36478();
            l_U646 = 1;
        }
        if (sub_27464( ref l_U259, 0 ))
        {
            sub_37100();
            sub_37212();
            l_U643 = 0;
        }
        if (sub_27464( ref l_U280, 0 ))
        {
            sub_37307();
        }
        if (l_U646 == 1)
        {
            if (sub_37686() == 1)
            {
                l_U646 = 0;
            }
        }
        if (sub_27464( ref l_U469, 0 ))
        {
            sub_706( "SA", "FAV_ONE_3_5_6", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "FAVELA_ONE_SONG", "FAV_ONE_3_5_6", "", 1.00000000, 3000, 0, -1082130432, 0 );
        }
        if ((l_U655) AND (NOT l_U654))
        {
            if ((sub_37696() == 0) || (sub_27464( ref l_U448, 0 )))
            {
                sub_706( "SA", "FAV_ONE_3_6", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "FAVELA_ONE_SONG", "FAV_ONE_3_6", "", 0.00000000, 0, 12000, -1082130432, 0 );
                sub_2290( ref l_U592 );
                sub_1497( ref l_U592, 12000, 1, 0 );
                sub_1633( ref l_U592 );
                l_U654 = 1;
            }
        }
        if (sub_1753( ref l_U592 ))
        {
            sub_706( "SA", "FAV_ONE_6", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "FAVELA_ONE_SONG", "FAV_ONE_6", "", 0.00000000, 0, 12000, -1082130432, 0 );
        }
        if (sub_27464( ref l_U490, 0 ))
        {
            sub_706( "SA", "AUDIO_MUSIC_SUSPEND", 0 );
            sub_2290( ref l_U592 );
            sub_39721( ref l_U601, 1 );
            sub_39965( ref g_U1545, 1, 1 );
            sub_39965( ref g_U1538, 1, 1 );
            l_U655 = 0;
            AUDIO_MUSIC_SUSPEND( 18000 );
        }
        if ((l_U655) AND (sub_37696() == 0))
        {
            if ((NOT l_U601._fU16) AND (NOT l_U601._fU20))
            {
                sub_706( "SA", "tmrMonoIdle.IsStarted", 0 );
                sub_1633( ref l_U601 );
            }
            if (sub_1753( ref l_U601 ))
            {
                if (NOT (IS_PED_DEAD( sub_1061() )))
                {
                    if (NOT (IS_SCRIPTED_SPEECH_PLAYING( sub_1061() )))
                    {
                        sub_29323( ref l_U622 );
                        sub_40214( 0, sub_1061(), "MAX", ref l_U622, 2, 0 );
                        sub_40214( 1, sub_1061(), "MAX", ref l_U622, 2, 0 );
                        sub_29618( "SFV1_MPDTLA", ref l_U622, 2, 1 );
                    }
                }
            }
        }
        if (NOT (IS_PED_IN_SPHERE_AREA_OF_ANY_ENEMY_PEDS( sub_1061(), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1061() ), 50.00000000, 0 )))
        {
            sub_40498( 1 );
        }
        if (sub_27464( ref l_U301, 0 ))
        {
            sub_2733();
            sub_40909();
        }
        break;
    }
    return;
}

void sub_7529()
{
    sub_706( "SP", "LOAD_ASSETS", "###" );
    sub_7592( "level_s_fav1_cp_05", 0, 1 );
    sub_7669( 898813722, 0 );
    sub_7669( 87421795, 0 );
    sub_7855( "SFV1AUD" );
    sub_7973( 1411761023, 0 );
    sub_8174( g_U1821, 0 );
    sub_7669( -502497534, 0 );
    sub_7669( 1788482433, 0 );
    sub_7669( -248883091, 0 );
    sub_7669( -1363134011, 0 );
    sub_7669( 151831952, 0 );
    sub_7669( g_U758, 0 );
    sub_7669( g_U762, 0 );
    sub_8354( "SCRIPT_MISSION\SFV1_VIG22A_DOOR_KICK", 0 );
    return;
}

void sub_7592(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_7669(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_5284( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_7855(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_7875();
    return;
}

void sub_7875()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_7973(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_8174(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_8354(unknown uParam0, int iParam1)
{
    LOAD_SCRIPT_AUDIO_BANK( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_8429()
{
    sub_706( "SP", "LOAD_ASSETS", "###" );
    sub_8508( ref l_U710[0], 72.09471000, -117.69630000, -2.75373700, 0.37000000, -1156120804, 7, 3, 2, 0, 0 );
    sub_8508( ref l_U710[1], 72.11000000, -111.86000000, -2.75000000, 0.37000000, -2064601069, 7, 3, 2, 0, 0 );
    sub_8508( ref l_U743[0], 85.39000000, -112.21000000, -2.71000000, 2.70000000, 1200287478, 7, 3, 2, 0, 0 );
    sub_8508( ref l_U743[1], 84.53000000, -113.77000000, -2.71000000, 2.70000000, -2035724586, 7, 3, 2, 0, 0 );
    sub_8508( ref l_U743[2], 83.88000000, -112.93000000, -2.71000000, 2.70000000, 1558513962, 7, 3, 2, 0, 0 );
    sub_8508( ref l_U743[3], 83.65000000, -113.77000000, -2.71000000, 2.70000000, -823836058, 7, 3, 2, 0, 0 );
    sub_8508( ref l_U743[4], 82.80000000, -113.77000000, -2.71000000, 2.70000000, -1876893972, 7, 3, 2, 0, 0 );
    sub_8508( ref l_U812[0], 85.43000000, -112.13000000, -2.71000000, 2.70000000, -863244564, 7, 3, 2, 0, 0 );
    sub_8508( ref l_U812[1], 85.41000000, -113.42000000, -2.71000000, 2.70000000, -317515975, 7, 3, 2, 0, 0 );
    sub_8508( ref l_U843[0], 75.62000000, -108.05000000, -2.75000000, 2.70000000, 1030124115, 7, 3, 2, 0, 0 );
    sub_8508( ref l_U843[1], 74.40000000, -110.33000000, -2.10000000, 2.70000000, -896472220, 7, 3, 2, 0, 0 );
    sub_8508( ref l_U843[2], 74.40000000, -111.93000000, -2.10000000, 2.70000000, 1286462810, 7, 3, 2, 0, 0 );
    sub_8508( ref l_U986[0], 108.90000000, -113.00000000, -4.11000000, 0.00000000, -658152364, 7, 3, 2, 0, 0 );
    sub_8508( ref l_U888[0], 104.59000000, -121.88000000, -6.17000000, -85.55000000, 1706888158, 7, 3, 2, 0, 0 );
    sub_8508( ref l_U888[1], 101.69000000, -98.07000000, -8.56000000, -85.55000000, 772530038, 7, 3, 2, 0, 0 );
    sub_8508( ref l_U888[2], 103.13000000, -95.55000000, -8.55000000, -85.55000000, 940605536, 7, 3, 2, 0, 0 );
    sub_8508( ref l_U888[3], 84.01000000, -94.89000000, -2.71000000, -85.55000000, -1101460818, 7, 3, 2, 0, 0 );
    sub_8508( ref l_U957[0], 75.30000000, -106.61000000, -2.75000000, -85.55000000, -1354874904, 7, 3, 2, 0, 0 );
    sub_8508( ref l_U957[1], 73.80000000, -106.01000000, -2.75000000, -85.55000000, 32726291, 7, 3, 2, 0, 0 );
    sub_8508( ref l_U1004[0], 81.68000000, -95.72000000, -2.71000000, -85.55000000, 935158727, 7, 3, 2, 0, 0 );
    sub_8508( ref l_U1004[1], 74.68000000, -103.03000000, -2.12000000, -85.55000000, 56921345, 7, 3, 2, 0, 0 );
    sub_8508( ref l_U1032, 81.29000000, -99.96000000, -2.71000000, -85.55000000, -1255336627, 7, 3, 2, 0, 0 );
    sub_9619( ref l_U131, "FAV1_KILL_WAREHOUSE", 56.48000000, -91.74000000, 0.00000000, 10.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, -78.35000000, 1 );
    sub_9619( ref l_U154, "tbLastHall", 76.41000000, -101.27000000, -3.00000000, 1.00000000, 3.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9619( ref l_U175, "tbCutScene", 111.17000000, -130.65000000, -1.00000000, 6.07000000, 5.01000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9619( ref l_U196, "tbBackupIncover", 87.93000000, -96.02000000, -6.78000000, 10.00000000, 10.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9619( ref l_U217, "tbGroundFloorWave2", 91.38000000, -113.70000000, -9.02000000, 20.00000000, 20.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9619( ref l_U238, "tbleftsidewaiting", 88.98000000, -95.12000000, -4.58000000, 3.00000000, 2.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9619( ref l_U259, "tbDeleteTrappedPeds", 75.12000000, -103.46000000, -3.00000000, 3.00000000, 1.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9619( ref l_U280, "tbWarpInAGroundDude", 74.75000000, -107.31000000, -3.00000000, 3.00000000, 1.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9619( ref l_U301, "tgKILL_WAREHOUSEASSETS", 68.02000000, -114.04000000, 0.67000000, 16.15000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9619( ref l_U322, "tbSDMPM", 96.11000000, -114.35000000, -10.55000000, 15.00000000, 20.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9619( ref l_U343, "tbUpStairsRetreat", 93.83000000, -99.02000000, -9.75000000, 1.80000000, 2.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9619( ref l_U364, "tbForceDoorOpen", 108.65000000, -110.32000000, -3.76000000, 2.00000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9619( ref l_U385, "tbPortable", 106.31000000, -107.93000000, -4.24000000, 6.36000000, 6.83000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9619( ref l_U406, "tbCleanExtraFarSide", 75.35000000, -114.42000000, -3.59000000, 8.07000000, 8.54000000, 3.86000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9619( ref l_U427, "tbKillMaxFromFall", 96.97000000, -108.87000000, -13.44000000, 37.94000000, 30.41000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9619( ref l_U448, "tbMusicSwitchEnd", 74.87000000, -124.08000000, -2.74000000, 2.16000000, 2.03000000, 3.42000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9619( ref l_U469, "tbMusicStart1", 92.58000000, -114.22000000, -10.55000000, 20.00000000, 20.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9619( ref l_U490, "tbMusicSilence", 71.78000000, -117.21000000, 0.70000000, 5.22000000, 1.99000000, 2.93000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9619( ref l_U511, "tbAllowPlayerToJump", 108.65000000, -112.80000000, -3.76000000, 2.00000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9619( ref l_U532, "tbSendMoreFarSide", 104.99000000, -121.92000000, -10.15000000, 20.00000000, 20.00000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11200( ref l_U553, "teLeftTopOpen", 89.78000000, -115.27000000, -3.47000000, 4.39000000, 18.55000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11200( ref l_U554, "teLeftTopInside", 82.81000000, -101.99000000, -3.47000000, 12.00000000, 12.58000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11200( ref l_U555, "teMiniHouse", 108.24000000, -105.49000000, -4.89000000, 10.69000000, 12.14000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11200( ref l_U556, "teGround", 97.85000000, -109.42000000, -9.67000000, 34.01000000, 32.09000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11200( ref l_U557, "teAfterCubicle", 108.90000000, -105.27000000, -5.45000000, 11.97000000, 24.49000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11200( ref l_U558, "teGroundWave2", 87.76000000, -97.31000000, -5.45000000, 2.31000000, 6.74000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11200( ref l_U559, "teUpStairs", 87.76000000, -95.15000000, -5.45000000, 2.00000000, 2.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11200( ref l_U560, "thrbxKeepOffStairs1", 112.96000000, -113.49000000, 0.41000000, 5.00000000, 8.50000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11200( ref l_U561, "thrbxKeepOffStairs2", 108.49000000, -101.61000000, -4.98000000, 11.05000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11200( ref l_U562, "teLastHallSendGround", 75.22000000, -101.73000000, -4.58000000, 3.00000000, 2.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11200( ref l_U564, "teLastHall", 73.23000000, -107.92000000, -3.47000000, 5.88000000, 28.24000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11200( ref l_U563, "teDoorKick", 109.35000000, -122.03000000, -5.45000000, 4.01000000, 15.68000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    return;
}

void sub_8508(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_9619(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_11200(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_12070()
{
    sub_706( "SP", "INITIALIZE_SCRIPT_DATA", "###" );
    l_U152 = 0;
    l_U649 = 1;
    l_U632 = 0;
    l_U633 = 1;
    l_U634 = 1;
    l_U635 = 1;
    l_U636 = 0;
    l_U637 = 0;
    l_U638 = 0;
    l_U639 = 0;
    l_U640 = 1;
    l_U641 = 0;
    l_U642 = 0;
    l_U643 = 0;
    l_U644 = 1;
    l_U645 = 1;
    l_U646 = 0;
    l_U647 = 0;
    l_U648 = 0;
    l_U650 = 1;
    l_U652 = 1;
    l_U651 = 0;
    l_U653 = 0;
    l_U654 = 0;
    l_U655 = 0;
    sub_2290( ref l_U592 );
    sub_12284( ref l_U574 );
    sub_1497( ref l_U583, 10, 1, 0 );
    sub_1497( ref l_U601, 15000, 1, 0 );
    l_U941[0] = {109.49000000, -115.74000000, -4.11000000};
    l_U941[1] = {95.84000000, -117.74000000, -8.60000000};
    l_U941[2] = {104.66000000, -113.51000000, -8.59000000};
    l_U941[3] = {96.58000000, -104.57000000, -8.56000000};
    sub_12444();
    return;
}

void sub_12284(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

void sub_12444()
{
    sub_706( "NS", "P_RESET_MAX_CONTEXTUAL_DIALOGUE", 0 );
    l_U92 = 0;
    l_U93 = 0;
    return;
}

void sub_12527()
{
    sub_706( "NS", "p_Create_Widgets()", 0 );
    START_WIDGET_GROUP( "WareHouse Script Widgets" );
    START_WIDGET_GROUP( " Sniper Placement Rot" );
    ADD_WIDGET_FLOAT_SLIDER( "vSniperRot.x", ref l_U1045._fU0, -360.00000000, 360.00000000, 1.00000000 );
    ADD_WIDGET_FLOAT_SLIDER( "vSniperRot.y", ref l_U1045._fU4, -360.00000000, 360.00000000, 1.00000000 );
    ADD_WIDGET_FLOAT_SLIDER( "vSniperRot.z", ref l_U1045._fU8, -360.00000000, 360.00000000, 1.00000000 );
    ADD_WIDGET_BOOL( "bRotatepliSniper", ref l_U1056 );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( " in cover heading test" );
    ADD_WIDGET_BOOL( "bPlayerHeading", ref l_U1057 );
    ADD_WIDGET_FLOAT_SLIDER( "fPlayerHeading", ref l_U1058, -360.00000000, 360.00000000, 1.00000000 );
    ADD_WIDGET_FLOAT_SLIDER( "fPlayerHeading", ref l_U1059, -360.00000000, 360.00000000, 1.00000000 );
    STOP_WIDGET_GROUP();
    STOP_WIDGET_GROUP();
    return;
}

int sub_13036()
{
    sub_706( "NS", "P_ARE_ASSETS_LOADED()", 0 );
    if (((ISEQ_QUERY_STATE( 1411761023, 2 )) == 1) AND ((HAS_WEAPON_LOADED( g_U1821 )) AND ((HAS_MODEL_LOADED( g_U762 )) AND ((HAS_MODEL_LOADED( g_U758 )) AND ((HAS_MODEL_LOADED( 151831952 )) AND ((HAS_MODEL_LOADED( -1363134011 )) AND ((HAS_MODEL_LOADED( -248883091 )) AND ((HAS_MODEL_LOADED( 1788482433 )) AND ((HAS_MODEL_LOADED( -502497534 )) AND ((HAS_MODEL_LOADED( 87421795 )) AND ((HAS_MODEL_LOADED( 898813722 )) AND ((IS_SCRIPT_AUDIO_BANK_LOADED( "SCRIPT_MISSION\SFV1_VIG22A_DOOR_KICK", 0 )) AND (HAS_ANIM_DICT_LOADED( "level_s_fav1_cp_05", 0 ))))))))))))))
    {
        return 1;
    }
    return 0;
}

void sub_13327()
{
    int I;
    int iVar3;
    vector vVar4;
    vector vVar7;
    unknown uVar10;
    vector vVar11;
    vector vVar14;

    sub_706( "NS", "making Placements", 0 );
    iVar3 = 4;
    for ( I = 0; I < iVar3; I++ )
    {
        if ((NOT (HAS_PLACEMENT_BEEN_COLLECTED( g_U793[I] ))) || (NOT (DOES_PLACEMENT_EXIST( g_U793[I] ))))
        {
            sub_3120( g_U793[I] );
            switch (I)
            {
                case 0:
                g_U793[0] = sub_13524( -4072149, 109.72000000, -108.16000000, -2.45000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0, 1119092736 );
                break;
                case 1:
                g_U793[1] = sub_13524( -4072149, 109.72000000, -108.00000000, -2.45000000, 0.00000000, 0.00000000, 0.40000000, 0, 0, 0, 1119092736 );
                break;
                case 2:
                g_U793[2] = sub_13524( -4072149, 69.58000000, -110.38000000, -2.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0, 1119092736 );
                break;
                case 3:
                g_U793[3] = sub_13524( -4072149, 69.43000000, -110.44000000, -2.00000000, 0.00000000, 0.00000000, 0.80000000, 0, 0, 0, 1119092736 );
                break;
            }
        }
    }
    if (DOES_PLACEMENT_EXIST( g_U793[0] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U793[0], "room_portable" );
    }
    if (DOES_PLACEMENT_EXIST( g_U793[1] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U793[1], "room_portable" );
    }
    if (DOES_PLACEMENT_EXIST( g_U793[2] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U793[2], "room_hall" );
    }
    if (DOES_PLACEMENT_EXIST( g_U793[3] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U793[3], "room_hall" );
    }
    if (g_U798 == 0)
    {
        vVar4 = {103.30000000, -109.30000000, -3.38000000};
        vVar7 = {-1.50000000, 60.90000000, 0.00000000};
        sub_3120( g_U800 );
        g_U800 = sub_13524( 1216559076, vVar4, vVar7, 0, 1, 0, 1119092736 );
        if (DOES_PLACEMENT_EXIST( g_U800 ))
        {
            uVar10 = GET_PICKUP_FROM_PLACEMENT( g_U800 );
            if (DOES_PICKUP_EXIST( uVar10 ))
            {
                ENABLE_PICKUP_ATTACHMENT( uVar10, 12, 1 );
                TOGGLE_PICKUP_ATTACHMENT( uVar10, 12, 1 );
            }
            ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U800, "room_portable" );
        }
    }
    if (NOT (DOES_PLACEMENT_EXIST( g_U799 )))
    {
        vVar11 = {103.52000000, -110.43000000, -3.75000000};
        vVar14 = {0.00000000, 0.00000000, 0.00000000};
        sub_3120( g_U799 );
        g_U799 = CREATE_AMMOBAG_PLACEMENT_ROTATE( vVar11, vVar14, 10.00000000, 3.00000000, 0, 1119092736 );
        sub_14319( g_U799 );
        if (DOES_PLACEMENT_EXIST( g_U799 ))
        {
            ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U799, "room_portable" );
        }
    }
    if (g_U801 == 1)
    {
        sub_3120( g_U803 );
        g_U803 = sub_13524( GET_PICKUP_TYPE_FROM_WEAPON_TYPE( g_U802 ), 98.36000000, -119.66000000, -8.45000000, 1.57000000, 0.00000000, 0.00000000, 0, 0, 0, 1119092736 );
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U803, "room_large" );
    }
    return;
}

void sub_13524(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_14319(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        SET_AMMOBAG_REGEN_TIME( uParam0, 10.00000000 );
        SET_AMMOBAG_REGEN_RANGE( uParam0, 3.00000000 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1088031219, 45 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 954369040, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1138793073, 95 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1087746638, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1295933220, 30 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1383321053, 85 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1481241171, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1889644301, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -790090695, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1742569970, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1575030772, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1622373246, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 558118158, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1701914198, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1126469201, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 936600426, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 205668857, 0 );
    }
    return;
}

void sub_14836()
{
    sub_706( "SP", "P_START_GAMEPLAY", "###" );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    sub_14895( ref g_U1496, 0 );
    sub_14895( ref g_U1503, 0 );
    sub_15117( ref g_U1531, 1, 1, 1065353216 );
    sub_15117( ref g_U1384, 1, 1, 0.50000000 );
    sub_15294( ref g_U1524, -100.00000000, 0.00000000 );
    sub_15393( ref g_U1524, 1 );
    sub_14895( ref g_U1524, 1 );
    sub_15528();
    sub_16233();
    sub_16366();
    sub_16825();
    sub_17159();
    sub_19191();
    sub_20031();
    sub_20803();
    sub_21600();
    sub_22093();
    sub_22453();
    l_U637 = 1;
    l_U651 = 1;
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
    if (NOT (IS_PLAYER_DEAD( sub_1083() )))
    {
        if (g_U1049 == 5)
        {
            SET_PLAYER_CONTROL( sub_1083(), 0, 0 );
            SET_CAN_ROLL_DODGE( sub_1061(), 1 );
            sub_22860( sub_1061(), g_U1050[5], g_U1174[5] );
            SNAP_PLAYER_TO_COVERPOINT( sub_1083(), "GenCover", "E8D2B05C_D680D911_Popover2", 0 );
            if (IS_DEATH_PANEL_WIPE_ALLOWED())
            {
                DO_SCREEN_FADE_IN( 0 );
            }
        }
    }
    if (g_U1049 == 5)
    {
        while (NOT (IS_PED_IN_COVER( sub_1061() )))
        {
            sub_706( "NS", "IS_PED_IN_COVER(PLAYER_PED_ID())", 0 );
            WAIT( 0 );
        }
    }
    if (g_U1049 == 5)
    {
        if (NOT (IS_PED_DEAD( sub_1061() )))
        {
            SET_PED_HEADING( sub_1061(), 0.00000000 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1216[5], 1.00000000, 1 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1258[5], 1.00000000, 1 );
        }
    }
    SET_PLAYER_CONTROL( sub_1083(), 1, 0 );
    AUDIO_MUSIC_FORCE_TRACK( "FAVELA_ONE_SONG", "FAV_ONE_5_6", "", 1.00000000, 0, 0, -1082130432, 0 );
    DO_SCREEN_FADE_IN( 0 );
    return;
}

void sub_14895(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_14907( iParam0 )) == 0)
    {
        sub_14973( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

int sub_14907(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_14973(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_15117(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_14907( iParam0 )) == 0)
    {
        sub_14973( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

void sub_15294(int iParam0, float fParam1, float fParam2)
{
    if ((sub_14907( iParam0 )) == 0)
    {
        sub_14973( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        ;
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

void sub_15393(int iParam0, int iParam1)
{
    if ((sub_14907( iParam0 )) == 0)
    {
        sub_14973( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

void sub_15528()
{
    sub_706( "CO", "P_CREATE_S_FV1_GG_SA_02", 0 );
    sub_15639( ref g_U667, g_U758, -479787481, 1258583230, 113.15000000, -113.31000000, -4.05000000, 0.00000000, 0.00000000, 1.00000000, "room_large" );
    sub_15768( ref g_U667 );
    return;
}

void sub_15639(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_706( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_15768(int iParam0)
{
    sub_706( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_15829( iParam0->_fU12 )) == 1)
        {
            sub_706( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_706( "CO", "has never been collected.", 0 );
        }
        if ((sub_15829( iParam0->_fU12 )) == 0)
        {
            sub_3120( iParam0->_fU0 );
            iParam0->_fU0 = sub_13524( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_706( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_706( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_15829(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_16233()
{
    sub_706( "CO", "P_CREATE_S_FV1_GG_SP_03", 0 );
    sub_15639( ref g_U739, g_U762, -1167740507, 1893120236, 79.06000000, -105.09000000, -2.67000000, 1.50000000, 0.00000000, 1.00000000, "room_large" );
    sub_15768( ref g_U739 );
    return;
}

void sub_16366()
{
    sub_706( "NS", "P_CREATE_WWAREHOUSE_FIGHT_PICKUPS()", 0 );
    l_U656[0] = sub_13524( -1141160886, 71.98000000, -110.07000000, -1.91000000, 0.00000000, 0.15000000, 0.00000000, 0, 1, 0, 90.00000000 );
    if (DOES_PLACEMENT_EXIST( l_U656[0] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U656[0], ref l_U697 );
    }
    l_U656[1] = sub_13524( -1141160886, 71.08000000, -110.07000000, -1.93000000, 0.00000000, 0.20000000, 0.40000000, 0, 1, 0, 90.00000000 );
    if (DOES_PLACEMENT_EXIST( l_U656[1] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U656[1], ref l_U697 );
    }
    l_U659[0] = sub_13524( 584407306, 75.92000000, -127.74000000, -0.61000000, 1.50000000, -1.40000000, 0.00000000, 0, 1, 0, 90.00000000 );
    if (DOES_PLACEMENT_EXIST( l_U659[0] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U659[0], ref l_U697 );
    }
    l_U659[1] = sub_13524( 584407306, 75.40000000, -127.95000000, -0.61000000, -1.66731000, -1.21300000, -1.48650000, 0, 1, 0, 90.00000000 );
    if (DOES_PLACEMENT_EXIST( l_U659[1] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U659[1], ref l_U697 );
    }
    return;
}

void sub_16825()
{
    sub_706( "NS", "P_CREATE_LARGE_PROPANE()", 0 );
    if (NOT (DOES_OBJECT_EXIST( g_U853[0] )))
    {
        g_U853[0] = CREATE_OBJECT( 151831952, 98.62000000, -117.58700000, -8.34500000, 1, 0 );
        if (DOES_OBJECT_EXIST( g_U853[0] ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U853[0], "room_large" );
            SET_OBJECT_ROTATION( g_U853[0], -121.00000000, 90.00000000, 0.00000000 );
        }
    }
    if (NOT (DOES_OBJECT_EXIST( g_U853[1] )))
    {
        g_U853[1] = CREATE_OBJECT( 151831952, 99.10200000, -117.82800000, -8.34500000, 1, 0 );
        if (DOES_OBJECT_EXIST( g_U853[1] ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U853[1], "room_large" );
            SET_OBJECT_ROTATION( g_U853[1], -76.00000000, 90.00000000, 0.00000000 );
        }
    }
    return;
}

void sub_17159()
{
    int I;

    sub_706( "NS", "P_CREATE_FAR_SIDE_RIGHT()", 0 );
    sub_2829( ref l_U839 );
    for ( I = 0; I < 3; I++ )
    {
        l_U839[I] = sub_17237( ref l_U843[I] );
        sub_17910( l_U839[I], ref l_U701 );
        SET_PED_AI_TEMPLATE( l_U839[I], ref g_U1791 );
        SET_PED_ACCURACY( l_U839[I], 31186664 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U839[I], 1 );
        SET_GROUP_RATIO_FIRING_AT_INVISIBLE( l_U701._fU0, 1.00000000 );
        SET_GROUP_RATIO_FIRING_AT_VISIBLE( l_U701._fU0, 1.00000000 );
        OVERRIDE_PED_FIRING_PATTERN( l_U839[I], -256437761 );
        SET_PED_CONSUMING_AMMO( l_U839[I], 0 );
        SET_PED_ALERTNESS( l_U839[I], 4 );
        SET_BULLET_CAM_PREF( l_U839[I], "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", "", 0, 0, 0, 0, 0, 0, 0, 0 );
        if (NOT (IS_PED_DEAD( sub_1061() )))
        {
            REGISTER_TARGET( l_U839[I], sub_1061() );
        }
    }
    sub_18626( ref l_U839, "piFarSideRight" );
    if (NOT (IS_PED_DEAD( l_U839[0] )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U839[0], ref l_U697 );
    }
    sub_18773( ref l_U554, l_U839[0], 1 );
    sub_5613( l_U839[0], g_U1820, 25000, 0, 0 );
    if (NOT (IS_PED_DEAD( l_U839[1] )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U839[1], ref l_U697 );
    }
    sub_18773( ref l_U554, l_U839[1], 1 );
    sub_5613( l_U839[1], g_U1820, 25000, 0, 0 );
    if (NOT (IS_PED_DEAD( l_U839[2] )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U839[2], ref l_U697 );
    }
    sub_18773( ref l_U554, l_U839[2], 1 );
    sub_5613( l_U839[2], g_U1820, 25000, 0, 0 );
    sub_19036( ref l_U839 );
    return;
}

void sub_17237(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_7669( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_17716( iParam0->_fU40 );
    sub_17796( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_17716(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_17796(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_17910(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_5284( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_18053( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_18053( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_18053(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_18626(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_18773(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_19036(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_19067( (uParam0^)[I] );
    }
    return;
}

void sub_19067(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_19191()
{
    int I;

    sub_706( "NS", "P_CREATE_FAR_SIDE_LEFT()", 0 );
    sub_2829( ref l_U737 );
    for ( I = 0; I < 5; I++ )
    {
        l_U737[I] = sub_17237( ref l_U743[I] );
        sub_17910( l_U737[I], ref l_U701 );
        SET_PED_AI_TEMPLATE( l_U737[I], ref g_U1791 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U737[I], 1 );
        SET_PED_ALERTNESS( l_U737[I], 4 );
        SET_BULLET_CAM_PREF( l_U737[I], "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", "", 0, 0, 0, 0, 0, 0, 0, 0 );
        SET_PED_ACCURACY( l_U737[I], 31186664 );
        if (NOT (IS_PED_DEAD( sub_1061() )))
        {
            REGISTER_TARGET( l_U737[I], sub_1061() );
        }
        SET_BULLET_CAM_PREF( l_U737[I], "ALL_LMS_01", "ALL_LMS_01", "ALL_LMS_01", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
    }
    sub_18626( ref l_U737, "piFarSideLeft" );
    if (NOT (IS_PED_DEAD( l_U737[0] )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U737[0], ref l_U693 );
    }
    sub_18773( ref l_U553, l_U737[0], 1 );
    sub_5613( l_U737[0], g_U1820, 25000, 0, 0 );
    if (NOT (IS_PED_DEAD( l_U737[1] )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U737[1], ref l_U693 );
    }
    sub_18773( ref l_U553, l_U737[1], 1 );
    sub_5613( l_U737[1], g_U1819, 25000, 0, 0 );
    sub_4968( l_U737[1], g_U1817, 1, 25000, 0 );
    if (NOT (IS_PED_DEAD( l_U737[2] )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U737[2], ref l_U693 );
    }
    sub_18773( ref l_U553, l_U737[2], 1 );
    sub_5613( l_U737[2], g_U1820, 25000, 0, 0 );
    if (NOT (IS_PED_DEAD( l_U737[3] )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U737[3], ref l_U693 );
    }
    sub_18773( ref l_U553, l_U737[3], 1 );
    sub_5613( l_U737[3], g_U1819, 25000, 0, 0 );
    if (NOT (IS_PED_DEAD( l_U737[4] )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U737[4], ref l_U693 );
    }
    sub_18773( ref l_U553, l_U737[4], 1 );
    sub_5613( l_U737[4], g_U1820, 25000, 0, 0 );
    sub_19036( ref l_U737 );
    return;
}

void sub_20031()
{
    sub_706( "NS", "P_CREATE_WAREHOUSE_PROPANE()", 0 );
    if (NOT (DOES_OBJECT_EXIST( g_U790 )))
    {
        sub_706( "NS", "oiWarehousePropane01", 0 );
        sub_2997( g_U790 );
        g_U790 = sub_20185( -502497534, 91.55000000, -108.78000000, -2.77000000, 0.00000000, 0.00000000, 0.00000000, 1, 0, 0 );
        if (DOES_OBJECT_EXIST( g_U790 ))
        {
            CAMERA_CAN_TARGET_OBJECT( 1, g_U790 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U790, "room_large" );
        }
    }
    if (NOT (DOES_OBJECT_EXIST( g_U791 )))
    {
        sub_706( "NS", "oiWarehousePropane02", 0 );
        sub_2997( g_U791 );
        g_U791 = sub_20185( -502497534, 91.55000000, -117.12000000, -2.77000000, 0.00000000, 0.00000000, 0.00000000, 1, 0, 0 );
        if (DOES_OBJECT_EXIST( g_U791 ))
        {
            CAMERA_CAN_TARGET_OBJECT( 1, g_U791 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U791, "room_large" );
        }
    }
    if (NOT (DOES_OBJECT_EXIST( g_U792 )))
    {
        sub_706( "NS", "oiWarehousePropane03", 0 );
        sub_2997( g_U792 );
        g_U792 = sub_20185( -502497534, 73.22000000, -116.02000000, -2.75000000, 0.00000000, 0.00000000, 0.00000000, 1, 0, 0 );
        if (DOES_OBJECT_EXIST( g_U792 ))
        {
            CAMERA_CAN_TARGET_OBJECT( 1, g_U792 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U792, "room_hall" );
        }
    }
    return;
}

void sub_20185(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_7669( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_20803()
{
    sub_706( "NS", "P_CREATE_MPM_OBJECTS()", 0 );
    if (NOT (DOES_OBJECT_EXIST( g_U804[0] )))
    {
        sub_3236( ref g_U804 );
        g_U804[0] = CREATE_OBJECT_NO_OFFSET( 1788482433, l_U72, 0, 0 );
        g_U804[1] = CREATE_OBJECT_NO_OFFSET( -1363134011, l_U78, 0, 0 );
        g_U804[2] = CREATE_OBJECT_NO_OFFSET( -248883091, l_U75, 0, 0 );
        g_U804[3] = CREATE_OBJECT_NO_OFFSET( 655204164, l_U72 - (vector( 0.45000000, -0.05000000, 16.10000000)), 0, 0 );
        if (DOES_OBJECT_EXIST( g_U804[0] ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U804[0], "room_large" );
            FREEZE_OBJECT_POSITION( g_U804[0], 1 );
            PLAY_OBJECT_ANIM( g_U804[0], "FAV1_MPM_CW_a", "fa_whmpm", 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U804[0], "FAV1_MPM_CW_a", "fa_whmpm", 1.00000000 );
            FORCE_UPDATE_OBJECT_PHYSICAL_STATE( g_U804[0] );
        }
        if (DOES_OBJECT_EXIST( g_U804[1] ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U804[1], "room_large" );
            FREEZE_OBJECT_POSITION( g_U804[1], 1 );
            PLAY_OBJECT_ANIM( g_U804[1], "RF_whomach_C", "fa_whmpm", 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U804[1], "RF_whomach_C", "fa_whmpm", 1.00000000 );
            FORCE_UPDATE_OBJECT_PHYSICAL_STATE( g_U804[1] );
        }
        if (DOES_OBJECT_EXIST( g_U804[2] ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U804[2], "room_large" );
            FREEZE_OBJECT_POSITION( g_U804[2], 1 );
            PLAY_OBJECT_ANIM( g_U804[2], "FA_MPMHOOK", "fa_whmpm", 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U804[2], "FA_MPMHOOK", "fa_whmpm", 1.00000000 );
            FORCE_UPDATE_OBJECT_PHYSICAL_STATE( g_U804[2] );
        }
        if (DOES_OBJECT_EXIST( g_U804[3] ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U804[3], "room_large" );
            FREEZE_OBJECT_POSITION( g_U804[3], 1 );
        }
    }
    return;
}

void sub_21600()
{
    sub_706( "NS", "P_FarSide_extra_Run_AWAY()", 0 );
    if (NOT (IS_PED_DEAD( sub_1061() )))
    {
        OPEN_SEQUENCE_TASK( ref l_U81 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, 74.89000000, -111.60000000, -2.12000000, 3, 20000, 1048576000, 0, 0 );
        CLOSE_SEQUENCE_TASK( l_U81 );
        if (NOT (IS_PED_DEAD( g_U809[0] )))
        {
            sub_21765( g_U809[0] );
            CLEAR_PED_TASKS( g_U809[0] );
            TASK_PERFORM_SEQUENCE( g_U809[0], l_U81 );
        }
        if (NOT (IS_PED_DEAD( g_U809[1] )))
        {
            sub_21765( g_U809[1] );
            CLEAR_PED_TASKS( g_U809[1] );
            TASK_PERFORM_SEQUENCE( g_U809[1], l_U81 );
        }
        CLEAR_SEQUENCE_TASK( l_U81 );
        OPEN_SEQUENCE_TASK( ref l_U81 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, 78.57000000, -117.97000000, -2.76000000, 3, 20000, 1048576000, 0, 0 );
        CLOSE_SEQUENCE_TASK( l_U81 );
        if (NOT (IS_PED_DEAD( g_U809[2] )))
        {
            sub_21765( g_U809[2] );
            CLEAR_PED_TASKS( g_U809[2] );
            TASK_PERFORM_SEQUENCE( g_U809[2], l_U81 );
        }
        CLEAR_SEQUENCE_TASK( l_U81 );
    }
    return;
}

void sub_21765(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        RESET_PED_TETHERING( uParam0 );
    }
    return;
}

void sub_22093()
{
    sub_706( "NS", "P_ACTION_FAR_SIDE_RIGHT()", 0 );
    if (NOT (IS_PED_DEAD( sub_1061() )))
    {
        if (NOT (IS_PED_DEAD( l_U839[0] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U153 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_SNAP_TO_COVER( 0, "GenCover", "E8D2B05C_E6565CF4_Corner2", sub_1061() );
            TASK_COMBAT_PED( 0, sub_1061() );
            CLOSE_SEQUENCE_TASK( l_U153 );
            sub_22286( l_U839[0] );
            TASK_PERFORM_SEQUENCE( l_U839[0], l_U153 );
            CLEAR_SEQUENCE_TASK( l_U153 );
        }
    }
    AUDIO_MUSIC_REQUEST_ONESHOT( "FAVELA_1_ONESHOT_4", 0 );
    return;
}

void sub_22286(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_22453()
{
    sub_706( "NS", "P_ACTION_FAR_SIDE_LEFT()", 0 );
    if (NOT (IS_PED_DEAD( sub_1061() )))
    {
        if (NOT (IS_PED_DEAD( l_U737[0] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U153 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0, sub_1061() );
            CLOSE_SEQUENCE_TASK( l_U153 );
            sub_22286( l_U737[0] );
            TASK_PERFORM_SEQUENCE( l_U737[0], l_U153 );
            CLEAR_SEQUENCE_TASK( l_U153 );
        }
        if (NOT (IS_PED_DEAD( l_U737[2] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U153 );
            TASK_STAND_STILL( 0, 2000 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0, sub_1061() );
            CLOSE_SEQUENCE_TASK( l_U153 );
            sub_22286( l_U737[2] );
            TASK_PERFORM_SEQUENCE( l_U737[2], l_U153 );
            CLEAR_SEQUENCE_TASK( l_U153 );
        }
    }
    return;
}

void sub_22860(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

int sub_23270(unknown uParam0)
{
    sub_706( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_3415( uParam0, sub_1061() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_23567(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_706( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_706( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_6267( iParam1 );
        sub_23826( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_24277( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_24277( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_24509( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_24277( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_24509( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_24509( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_24277( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_24509( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_24509( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_24509( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_24277( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_24509( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_24509( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_24509( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_24509( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_26067( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_706( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_23826(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_3631( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_706( "TEH", "Ending context", 0 );
        sub_706( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_24277(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_24509(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_26067(int iParam0)
{
    sub_5284( "CHECKPOINT DATA" );
    sub_26106( iParam0->_fU4 );
    sub_26129( iParam0->_fU16 );
    sub_26129( iParam0->_fU20 );
    sub_26129( iParam0->_fU24 );
    sub_26172( iParam0->_fU28 );
    sub_26172( iParam0->_fU56 );
    sub_26172( iParam0->_fU60 );
    sub_26172( iParam0->_fU64 );
    sub_26172( iParam0->_fU68 );
    sub_26172( iParam0->_fU72 );
    sub_26172( iParam0->_fU76 );
    sub_26172( iParam0->_fU80 );
    sub_26172( iParam0->_fU84 );
    sub_26172( iParam0->_fU88 );
    sub_26172( iParam0->_fU92 );
    sub_26129( iParam0->_fU32 );
    sub_26172( iParam0->_fU36 );
    sub_26172( iParam0->_fU40 );
    sub_26172( iParam0->_fU44 );
    sub_26129( iParam0->_fU136 );
    sub_26377( iParam0->_fU140 );
    sub_26172( iParam0->_fU52 );
    sub_5284( "---nRightHolsterAttachmentEnabled: " );
    sub_26172( iParam0->_fU96 );
    sub_5284( "---nRightHolsterAttachmentToggled: " );
    sub_26172( iParam0->_fU100 );
    sub_5284( "---nLeftHolsterAttachmentEnabled: " );
    sub_26172( iParam0->_fU104 );
    sub_5284( "---nLeftHolsterAttachmentToggled: " );
    sub_26172( iParam0->_fU108 );
    sub_5284( "---nRifleHolsterAttachmentEnabled: " );
    sub_26172( iParam0->_fU112 );
    sub_5284( "---nRifleHolsterAttachmentToggled: " );
    sub_26172( iParam0->_fU116 );
    sub_5284( "---nRightHandAttachmentEnabled: " );
    sub_26172( iParam0->_fU120 );
    sub_5284( "---nRightHandAttachmentToggled: " );
    sub_26172( iParam0->_fU124 );
    sub_5284( "---nLeftHandAttachmentEnabled: " );
    sub_26172( iParam0->_fU128 );
    sub_5284( "---nLeftHandAttachmentToggled: " );
    sub_26172( iParam0->_fU132 );
    sub_26172( l_U1 );
    sub_26172( 144 );
    return;
}

void sub_26106(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_26129(unknown uParam0)
{
    return;
}

void sub_26172(unknown uParam0)
{
    return;
}

void sub_26377(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_27208(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_27226( sub_1061(), uParam0 );
}

int sub_27226(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_27339(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    if (sub_27226( g_U809[0], uParam0 ))
    {
        sub_2863( g_U809[0] );
    }
    if (sub_27226( g_U809[1], uParam0 ))
    {
        sub_2863( g_U809[1] );
    }
    if (sub_27226( g_U809[2], uParam0 ))
    {
        sub_2863( g_U809[2] );
    }
    return;
}

void sub_27464(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_27226( sub_1061(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_27619(int iParam0)
{
    int iVar3;
    float Result;

    if ((sub_14907( iParam0 )) == 0)
    {
        sub_14973( iParam0 );
    }
    iVar3 = 0;
    Result = 0.00000000;
    GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar3, ref Result );
    return Result;
}

void sub_27784()
{
    sub_27798( ref l_U707 );
    if (NOT (IS_PED_DEAD( sub_1061() )))
    {
        if (NOT (IS_PED_DEAD( l_U707[0] )))
        {
            SET_PED_SUGGESTED_COVER_POINT( l_U707[0], "fav1_who", "Corner_Position22" );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U707[0], 0 );
            TASK_COMBAT_MOVE_TO_COVER( l_U707[0], "fav1_who", "Corner_Position22", 0 );
        }
        if (NOT (IS_PED_DEAD( l_U707[1] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U707[1], 0 );
            TASK_ATTACK_MOVE( l_U707[1], 74.26000000, -110.89000000, -2.62000000, 1.00000000, 1101004800, -1082130432, 3 );
        }
    }
    return;
}

void sub_27798(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_22286( (uParam0^)[I] );
    }
    return;
}

void sub_28127(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

void sub_28242()
{
    sub_2997( l_U1000 );
    l_U1000 = CREATE_OBJECT( 87421795, 109.44050000, -111.47460000, -3.76600000, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U1000 ))
    {
        SET_OBJECT_ROTATION( l_U1000, 0.00000000, 0.00000000, 0.00000000 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1000, ref l_U693 );
    }
    sub_15294( ref g_U1524, 179.90000000, 180.00000000 );
    sub_15117( ref g_U1524, 0, 1, 1065353216 );
    return;
}

void sub_28496()
{
    sub_706( "NS", "P_Create_Vig_02_Enemies()", 0 );
    sub_2829( ref l_U984 );
    l_U984[0] = sub_17237( ref l_U986[0] );
    if (NOT (IS_PED_DEAD( l_U984[0] )))
    {
        sub_17910( l_U984[0], ref l_U701 );
        SET_ROOM_FOR_PED_BY_NAME( l_U984[0], ref l_U693 );
        SET_PED_AI_TEMPLATE( l_U984[0], ref g_U1791 );
        SET_PED_ACCURACY( l_U984[0], 31186664 );
        sub_5613( l_U984[0], g_U1818, 25000, 0, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U984[0], 1 );
        SET_PED_ALERTNESS( l_U984[0], 3 );
        if (NOT (IS_PED_DEAD( sub_1061() )))
        {
            REGISTER_TARGET( l_U984[0], sub_1061() );
        }
        sub_18773( ref l_U563, l_U984[0], 1 );
    }
    SET_PED_NAME_DEBUG( l_U984[0], "piVIG_22B_F1 0" );
    return;
}

void sub_28822()
{
    sub_706( "NS", "P_Action_Vig_22B_Enemies()", 0 );
    sub_22860( l_U984[0], l_U986[0]._fU0, l_U986[0]._fU12 );
    ISEQ_REGISTER_ENTITY( 1411761023, "DUDE", l_U984[0], 0 );
    ISEQ_REGISTER_ENTITY( 1411761023, "DOOR", l_U1000, 1 );
    ISEQ_START( 1411761023 );
    if (DOES_OBJECT_EXIST( l_U1000 ))
    {
        PLAY_AUDIO_EVENT_FROM_OBJECT( "SFV1_VIG22A_DOOR", l_U1000 );
    }
    if ((sub_29043( sub_1061(), 108.85000000, -111.50000000, -2.76000000 )) < 1.50000000)
    {
        if (NOT (IS_PED_DEAD( sub_1061() )))
        {
            SET_PED_TO_RAGDOLL( sub_1061(), 1000, 2000, 2, 0, 1, 0, -1056964608 );
            APPLY_FORCE_TO_PED( sub_1061(), 2, 0.00000000, 150.00000000, 15.00000000, 0, 0, 0, 13, 0, 0, 1 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U984[0] )))
    {
        if (NOT (IS_PED_DEAD( sub_1061() )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U984[0], 0 );
            TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( l_U984[0], 109.48000000, -119.42000000, -4.11000000, sub_1061(), 1, 1092616192, 1101004800, -1082130432, 3 );
        }
    }
    sub_29323( ref l_U612 );
    sub_29407( 1, l_U984[0], -658152364, ref l_U612, 4, 0 );
    sub_29618( "SFV1_VIG22A", ref l_U612, 8, 1 );
    return;
}

void sub_29043(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    else
    {
        return -1.00000000;
    }
    return VDIST( uVar6, uParam1 );
}

void sub_29323(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_29407(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = uParam2;
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_29618(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_29642( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_29642(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_29697( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_29697(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_29732( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_30226( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_29732(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_30226(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_30415()
{
    int I;

    sub_706( "NS", "P_CREATE_FAR_SIDE_LEFT_WAVE1()", 0 );
    sub_2829( ref l_U809 );
    for ( I = 0; I < 2; I++ )
    {
        l_U809[I] = sub_17237( ref l_U812[I] );
        sub_17910( l_U809[I], ref l_U701 );
        if (NOT (IS_PED_A_MISSION_PED( l_U809[I] )))
        {
            SET_PED_AI_TEMPLATE( l_U809[I], ref g_U1791 );
            SET_PED_ACCURACY( l_U809[I], 31186664 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U809[I], 1 );
            SET_PED_ALERTNESS( l_U809[I], 4 );
            if (NOT (IS_PED_DEAD( sub_1061() )))
            {
                REGISTER_TARGET( l_U809[I], sub_1061() );
            }
            sub_706( "NS", "setting ped bullet cam pref", 0 );
            sub_18773( ref l_U553, l_U809[I], 1 );
            SET_BULLET_CAM_PREF( l_U809[I], "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
            SET_ROOM_FOR_PED_BY_NAME( l_U737[1], ref l_U693 );
        }
    }
    sub_18626( ref l_U809, "piFarSideLeftWave1" );
    sub_5613( l_U809[0], g_U1820, 25000, 0, 0 );
    sub_5613( l_U809[1], g_U1819, 25000, 0, 0 );
    sub_19036( ref l_U809 );
    return;
}

void sub_30915()
{
    int I;

    sub_706( "NS", "P_Create_Ground_Floor_Enemies()", 0 );
    sub_2829( ref l_U883 );
    for ( I = 0; I < 4; I++ )
    {
        l_U883[I] = sub_17237( ref l_U888[I] );
        if (NOT (IS_PED_DEAD( l_U883[I] )))
        {
            SET_PED_AI_TEMPLATE( l_U883[I], ref g_U1791 );
            SET_PED_ACCURACY( l_U883[I], 31186664 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U883[I], 1 );
            SET_ROOM_FOR_PED_BY_NAME( l_U883[I], ref l_U693 );
            SET_PED_ALERTNESS( l_U883[I], 4 );
            SET_BULLET_CAM_PREF( l_U883[I], "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
            if (I == 2)
            {
                SET_PED_COMBAT_ATTRIBUTES( l_U883[I], 128, 0 );
            }
            if (NOT (IS_PED_DEAD( sub_1061() )))
            {
                REGISTER_TARGET( l_U883[I], sub_1061() );
            }
        }
        sub_17910( l_U883[I], ref l_U701 );
    }
    sub_18626( ref l_U883, "piGroundFloor" );
    sub_18773( ref l_U557, l_U883[0], 1 );
    sub_18773( ref l_U556, l_U883[1], 1 );
    sub_18773( ref l_U556, l_U883[2], 1 );
    sub_18773( ref l_U556, l_U883[3], 1 );
    sub_5613( l_U883[0], g_U1819, 25000, 0, 0 );
    sub_5613( l_U883[1], g_U1820, 25000, 0, 0 );
    sub_5613( l_U883[2], g_U1818, 25000, 0, 0 );
    sub_5613( l_U883[3], g_U1820, 25000, 0, 0 );
    l_U643 = 1;
    sub_19036( ref l_U883 );
    return;
}

void sub_31507()
{
    sub_706( "NS", "P_Action_Ground_Floor()", 0 );
    if (NOT (IS_PED_DEAD( sub_1061() )))
    {
        if (NOT (IS_PED_DEAD( l_U883[0] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U81 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, l_U941[0], sub_1061(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_COMBAT_MOVE_TO_COVER_COORDS( 0, l_U941[0], sub_1061() );
            TASK_COMBAT_PED( 0, sub_1061() );
            CLOSE_SEQUENCE_TASK( l_U81 );
            sub_22286( l_U883[0] );
            TASK_PERFORM_SEQUENCE( l_U883[0], l_U81 );
            CLEAR_SEQUENCE_TASK( l_U81 );
        }
        if (NOT (IS_PED_DEAD( l_U883[1] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U81 );
            TASK_PAUSE( 0, 1000 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_ATTACK_MOVE( 0, l_U941[1], 1092616192, 1101004800, -1082130432, 3 );
            TASK_COMBAT_MOVE_TO_COVER_COORDS( 0, l_U941[1], sub_1061() );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            CLOSE_SEQUENCE_TASK( l_U81 );
            sub_22286( l_U883[1] );
            TASK_PERFORM_SEQUENCE( l_U883[1], l_U81 );
            CLEAR_SEQUENCE_TASK( l_U81 );
        }
        if (NOT (IS_PED_DEAD( l_U883[2] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U81 );
            TASK_PAUSE( 0, 2000 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_ATTACK_MOVE( 0, l_U941[2], 1092616192, 1101004800, -1082130432, 3 );
            TASK_COMBAT_MOVE_TO_COVER_COORDS( 0, l_U941[2], sub_1061() );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            CLOSE_SEQUENCE_TASK( l_U81 );
            sub_22286( l_U883[2] );
            TASK_PERFORM_SEQUENCE( l_U883[2], l_U81 );
            CLEAR_SEQUENCE_TASK( l_U81 );
        }
    }
    return;
}

void sub_32091()
{
    int I;

    sub_706( "NS", "P_Create_Ground_Floor_Wave2_Enemies()", 0 );
    sub_2829( ref l_U954 );
    for ( I = 0; I < 2; I++ )
    {
        l_U954[I] = sub_17237( ref l_U957[I] );
        sub_17910( l_U954[I], ref l_U701 );
        if (NOT (IS_PED_DEAD( l_U954[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U954[I], 1 );
            SET_ROOM_FOR_PED_BY_NAME( l_U954[I], ref l_U697 );
            SET_PED_AI_TEMPLATE( l_U954[I], ref g_U1791 );
            SET_PED_ACCURACY( l_U954[I], 31186664 );
            SET_PED_ALERTNESS( l_U954[I], 4 );
            SET_BULLET_CAM_PREF( l_U954[I], "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
            if (NOT (IS_PED_DEAD( sub_1061() )))
            {
                REGISTER_TARGET( l_U954[I], sub_1061() );
            }
        }
    }
    sub_18626( ref l_U954, "piGroundFloorWav2" );
    sub_5613( l_U954[0], g_U1820, 25000, 0, 0 );
    sub_5613( l_U954[1], g_U1819, 25000, 0, 0 );
    sub_19036( ref l_U954 );
    return;
}

void sub_32538()
{
    sub_706( "NS", "P_CREATE_UP_STAIRS()", 0 );
    sub_2863( l_U1031 );
    l_U1031 = sub_17237( ref l_U1032 );
    if (NOT (IS_PED_DEAD( l_U1031 )))
    {
        sub_17910( l_U1031, ref l_U701 );
        sub_5613( l_U1031, g_U1819, 25000, 0, 0 );
        SET_PED_AI_TEMPLATE( l_U1031, ref g_U1791 );
        SET_PED_ACCURACY( l_U1031, 31186664 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1031, 1 );
        SET_PED_COMBAT_MOVEMENT( l_U1031, 1 );
        SET_PED_ALERTNESS( l_U1031, 4 );
        if (NOT (IS_PED_DEAD( sub_1061() )))
        {
            REGISTER_TARGET( l_U1031, sub_1061() );
        }
        SET_BULLET_CAM_PREF( l_U1031, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        sub_18773( ref l_U559, l_U1031, 1 );
    }
    SET_PED_NAME_DEBUG( l_U1031, "piUpStairs" );
    sub_19067( l_U1031 );
    return;
}

void sub_33219()
{
    sub_706( "NS", "P_ACTION_FAR_SIDE_LEFT_WAVE1()", 0 );
    sub_27798( ref l_U809 );
    sub_706( "NS", "setting ped bullet cam pref", 0 );
    if (NOT (IS_PED_DEAD( sub_1061() )))
    {
        if (NOT (IS_PED_DEAD( l_U809[0] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U809[0], 0 );
            TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( l_U809[0], 89.86000000, -110.50000000, -2.77000000, sub_1061(), 0, 1092616192, 1101004800, -1082130432, 3 );
            SET_BULLET_CAM_PREF( l_U809[0], "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        }
        if (NOT (IS_PED_DEAD( l_U809[1] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U809[1], 0 );
            TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( l_U809[1], 89.86000000, -110.50000000, -2.77000000, sub_1061(), 0, 1092616192, 1101004800, -1082130432, 3 );
            SET_BULLET_CAM_PREF( l_U809[1], "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        }
    }
    return;
}

int sub_33667()
{
    if (l_U638 == 0)
    {
        if ((sub_28127( ref l_U737 )) > 1)
        {
            sub_33705();
            l_U638 = 1;
        }
    }
    else if (l_U639 == 0)
    {
        if ((sub_28127( ref l_U737 )) > 2)
        {
            sub_34232();
            l_U639 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_33705()
{
    sub_706( "NS", "P_Send_Far_Side_Wave1()", 0 );
    if (NOT (IS_PED_DEAD( l_U737[3] )))
    {
        OPEN_SEQUENCE_TASK( ref l_U153 );
        TASK_PAUSE( 0, 1000 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0, sub_1061() );
        CLOSE_SEQUENCE_TASK( l_U153 );
        sub_22286( l_U737[3] );
        TASK_PERFORM_SEQUENCE( l_U737[3], l_U153 );
        CLEAR_SEQUENCE_TASK( l_U153 );
    }
    sub_706( "NS", "P_Send_Far_Side_Wave2()", 0 );
    if (NOT (IS_PED_DEAD( l_U737[1] )))
    {
        OPEN_SEQUENCE_TASK( ref l_U153 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_ATTACK_MOVE( 0, 91.09000000, -111.28000000, -2.77000000, 1092616192, 1101004800, -1082130432, 3 );
        TASK_COMBAT_PED( 0, sub_1061() );
        CLOSE_SEQUENCE_TASK( l_U153 );
        sub_22286( l_U737[1] );
        TASK_PERFORM_SEQUENCE( l_U737[1], l_U153 );
        CLEAR_SEQUENCE_TASK( l_U153 );
    }
    if (NOT (IS_PED_DEAD( l_U737[4] )))
    {
        OPEN_SEQUENCE_TASK( ref l_U153 );
        TASK_PAUSE( 0, 500 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0, sub_1061() );
        CLOSE_SEQUENCE_TASK( l_U153 );
        sub_22286( l_U737[4] );
        TASK_PERFORM_SEQUENCE( l_U737[4], l_U153 );
        CLEAR_SEQUENCE_TASK( l_U153 );
    }
    return;
}

void sub_34232()
{
    return;
}

int sub_34290()
{
    if (l_U641 == 0)
    {
        if ((sub_28127( ref l_U839 )) > 0)
        {
            sub_34328();
            l_U641 = 1;
        }
    }
    if (l_U642 == 0)
    {
        if ((sub_28127( ref l_U839 )) > 1)
        {
            sub_34568();
            l_U642 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_34328()
{
    sub_706( "NS", "p_Send_Far_side_Right1()", 0 );
    if (NOT (IS_PED_DEAD( l_U839[1] )))
    {
        OPEN_SEQUENCE_TASK( ref l_U153 );
        TASK_STAND_STILL( 0, 1100 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_ATTACK_MOVE( 0, 87.79000000, -98.27000000, -2.71000000, 1092616192, 1101004800, -1082130432, 3 );
        CLOSE_SEQUENCE_TASK( l_U153 );
        sub_22286( l_U839[1] );
        TASK_PERFORM_SEQUENCE( l_U839[1], l_U153 );
        CLEAR_SEQUENCE_TASK( l_U153 );
    }
    return;
}

void sub_34568()
{
    sub_706( "NS", "p_Send_Far_side_Right2()", 0 );
    if (NOT (IS_PED_DEAD( sub_1061() )))
    {
        if (NOT (IS_PED_DEAD( l_U839[2] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U153 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_ATTACK_MOVE( 0, 85.66000000, -103.74000000, -2.71000000, 1092616192, 1101004800, -1082130432, 3 );
            CLOSE_SEQUENCE_TASK( l_U153 );
            sub_22286( l_U839[2] );
            TASK_PERFORM_SEQUENCE( l_U839[2], l_U153 );
            CLEAR_SEQUENCE_TASK( l_U153 );
        }
    }
    return;
}

void sub_34838()
{
    sub_706( "NS", "P_Action_Ground_Floor_Wave2()", 0 );
    sub_27798( ref l_U954 );
    if (NOT (IS_PED_DEAD( sub_1061() )))
    {
        if (NOT (IS_PED_DEAD( l_U954[0] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U954[0], 0 );
            TASK_COMBAT_MOVE_TO_COVER( l_U954[0], "GenCover", "E8D2B05C_4E6B48DC_Popover3", sub_1061() );
        }
        if (NOT (IS_PED_DEAD( l_U954[1] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U954[1], 0 );
            TASK_COMBAT_MOVE_TO_COVER( l_U954[1], "GenCover", "E8D2B05C_EFA68C98_Popover1", sub_1061() );
        }
    }
    return;
}

void sub_35135()
{
    sub_706( "NS", "P_UP_STAIRS_RETREAT()", 0 );
    sub_21765( l_U1031 );
    sub_18773( ref l_U554, l_U1031, 1 );
    return;
}

void sub_35296()
{
    sub_706( "NS", "P_ACTIVATE_REST_OF_GROUND()", 0 );
    if (NOT (IS_PED_DEAD( sub_1061() )))
    {
        if (NOT (IS_PED_DEAD( l_U883[3] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U81 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_ATTACK_MOVE( 0, 93.45000000, -95.02000000, -5.74000000, 1092616192, 1101004800, -1082130432, 3 );
            TASK_COMBAT_PED( 0, sub_1061() );
            CLOSE_SEQUENCE_TASK( l_U81 );
            sub_22286( l_U883[3] );
            TASK_PERFORM_SEQUENCE( l_U883[3], l_U81 );
            CLEAR_SEQUENCE_TASK( l_U81 );
        }
    }
    return;
}

void sub_35525()
{
    sub_706( "NS", "P_ACTIVATE_UP_STAIRS()", 0 );
    sub_22286( l_U1031 );
    if (NOT (IS_PED_DEAD( sub_1061() )))
    {
        if (NOT (IS_PED_DEAD( l_U1031 )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1031, 0 );
            TASK_COMBAT_PED( l_U1031, sub_1061() );
        }
    }
    return;
}

void sub_35670()
{
    sub_706( "NS", "P_Action_Left_side_Waiting()", 0 );
    sub_27798( ref l_U1001 );
    if (NOT (IS_PED_DEAD( sub_1061() )))
    {
        if (NOT (IS_PED_DEAD( l_U1001[0] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1001[0], 0 );
        }
        if (NOT (IS_PED_DEAD( l_U1001[1] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U81 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_ATTACK_MOVE( 0, 78.41000000, -105.09000000, -2.71000000, 1092616192, 1101004800, -1082130432, 3 );
            CLOSE_SEQUENCE_TASK( l_U81 );
            TASK_PERFORM_SEQUENCE( l_U1001[1], l_U81 );
            CLEAR_SEQUENCE_TASK( l_U81 );
        }
    }
    return;
}

void sub_35920()
{
    sub_706( "NS", "P_FarSide_Go_To_Cover()", 0 );
    if (NOT (IS_PED_DEAD( sub_1061() )))
    {
        if (NOT (IS_PED_DEAD( l_U839[0] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U81 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_MOVE_TO_COVER( 0, "GenCover", "E8D2B05C_4E6B48DC_Popover3", 0 );
            CLOSE_SEQUENCE_TASK( l_U81 );
            CLEAR_PED_TASKS( l_U839[0] );
            SET_PED_FLAG_LOCK_TO_COVER( l_U839[0], 1 );
            TASK_PERFORM_SEQUENCE( l_U839[0], l_U81 );
            CLEAR_SEQUENCE_TASK( l_U81 );
        }
        if (NOT (IS_PED_DEAD( l_U839[1] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U81 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_MOVE_TO_COVER( 0, "GenCover", "E8D2B05C_EFA68C98_Corner2", 0 );
            CLOSE_SEQUENCE_TASK( l_U81 );
            CLEAR_PED_TASKS( l_U839[1] );
            SET_PED_FLAG_LOCK_TO_COVER( l_U839[1], 1 );
            TASK_PERFORM_SEQUENCE( l_U839[1], l_U81 );
            CLEAR_SEQUENCE_TASK( l_U81 );
        }
        if (NOT (IS_PED_DEAD( l_U839[2] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U81 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_MOVE_TO_COVER( 0, "fav1_who", "Corner_Position03", 0 );
            CLOSE_SEQUENCE_TASK( l_U81 );
            CLEAR_PED_TASKS( l_U839[2] );
            SET_PED_FLAG_LOCK_TO_COVER( l_U839[2], 1 );
            TASK_PERFORM_SEQUENCE( l_U839[2], l_U81 );
            CLEAR_SEQUENCE_TASK( l_U81 );
        }
    }
    return;
}

void sub_36478()
{
    sub_706( "NS", "P_SetupWarehouseLastHall", 0 );
    l_U707[0] = sub_17237( ref l_U710[0] );
    if (NOT (IS_PED_DEAD( l_U707[0] )))
    {
        sub_5613( l_U707[0], g_U1819, 25000, 0, 0 );
        SET_ROOM_FOR_PED_BY_NAME( l_U707[0], ref l_U697 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U707[0], 1 );
        sub_17910( l_U707[0], ref l_U701 );
        SET_PED_AI_TEMPLATE( l_U707[0], ref g_U1791 );
        SET_PED_ALERTNESS( l_U707[0], 4 );
        SET_PED_ACCURACY( l_U707[0], 31186664 );
        SET_BULLET_CAM_PREF( l_U707[0], "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
    }
    l_U707[1] = sub_17237( ref l_U710[1] );
    if (NOT (IS_PED_DEAD( l_U707[1] )))
    {
        sub_5613( l_U707[1], g_U1820, 25000, 0, 0 );
        SET_ROOM_FOR_PED_BY_NAME( l_U707[1], ref l_U697 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U707[1], 1 );
        sub_17910( l_U707[1], ref l_U701 );
        SET_PED_AI_TEMPLATE( l_U707[1], ref g_U1791 );
        SET_PED_ALERTNESS( l_U707[1], 4 );
        SET_PED_ACCURACY( l_U707[1], 31186664 );
        SET_BULLET_CAM_PREF( l_U707[1], "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
    }
    sub_18773( ref l_U564, l_U707[0], 1 );
    sub_18773( ref l_U564, l_U707[1], 1 );
    sub_18626( ref l_U707, "WarehouseLastHall_" );
    sub_19036( ref l_U707 );
    return;
}

void sub_37100()
{
    int I;

    sub_706( "NS", "P_DELETE_TRAPPED_PEDS", 0 );
    for ( I = 0; I < 5; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U737[I] )))
        {
            sub_2863( l_U737[I] );
        }
    }
    return;
}

void sub_37212()
{
    int I;

    for ( I = 0; I < 4; I++ )
    {
        sub_21765( l_U883[I] );
        sub_18773( ref l_U562, l_U883[I], 1 );
    }
    return;
}

void sub_37307()
{
    int I;
    unknown uVar3;

    sub_706( "NS", "P_SEND_IN_A_GROUND_FLOOR", 0 );
    for ( I = 0; I < 4; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U883[I] )))
        {
            uVar3 = l_U883[I];
        }
    }
    for ( I = 0; I < 2; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U954[I] )))
        {
            uVar3 = l_U954[I];
        }
    }
    if (NOT (IS_PED_DEAD( uVar3 )))
    {
        sub_21765( uVar3 );
        sub_18773( ref l_U564, uVar3, 1 );
        sub_22860( uVar3, 77.13000000, -101.36000000, -2.71000000, -85.55000000 );
        CLEAR_PED_TASKS( uVar3 );
        if (NOT (IS_PED_DEAD( sub_1061() )))
        {
            OPEN_SEQUENCE_TASK( ref l_U81 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_GO_TO_PED_WHILE_AIMING_AT_PED( 0, sub_1061(), sub_1061(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_COMBAT_PED( 0, sub_1061() );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            CLOSE_SEQUENCE_TASK( l_U81 );
            TASK_PERFORM_SEQUENCE( uVar3, l_U81 );
            CLEAR_SEQUENCE_TASK( l_U81 );
        }
    }
    return;
}

int sub_37686()
{
    unknown uVar2;
    int I;

    if (sub_37696() == 1)
    {
        if (((IS_PED_DEAD( l_U984[0] )) == 0) AND ((DOES_PED_EXIST( l_U984[0] )) == 1))
        {
            if ((GET_PED_CAN_TRIGGER_BULLET_CAM( l_U984[0] )) == 0)
            {
                SET_PED_CAN_TRIGGER_BULLET_CAM( l_U984[0], 1 );
                uVar2 = l_U984[0];
            }
        }
        for ( I = 0; I < 2; I++ )
        {
            if (((DOES_PED_EXIST( l_U707[I] )) == 1) AND (NOT (IS_PED_DEAD( l_U707[I] ))))
            {
                if ((GET_PED_CAN_TRIGGER_BULLET_CAM( l_U707[I] )) == 0)
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( l_U707[I], 1 );
                    uVar2 = l_U707[I];
                }
            }
        }
        for ( I = 0; I < 5; I++ )
        {
            if (((DOES_PED_EXIST( l_U737[I] )) == 1) AND (NOT (IS_PED_DEAD( l_U737[I] ))))
            {
                if ((GET_PED_CAN_TRIGGER_BULLET_CAM( l_U737[I] )) == 0)
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( l_U737[I], 1 );
                    uVar2 = l_U737[I];
                }
            }
        }
        for ( I = 0; I < 2; I++ )
        {
            if (((DOES_PED_EXIST( l_U809[I] )) == 1) AND (NOT (IS_PED_DEAD( l_U809[I] ))))
            {
                if ((GET_PED_CAN_TRIGGER_BULLET_CAM( l_U809[I] )) == 0)
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( l_U809[I], 1 );
                    uVar2 = l_U809[I];
                }
            }
        }
        for ( I = 0; I < 3; I++ )
        {
            if (((DOES_PED_EXIST( l_U839[I] )) == 1) AND (NOT (IS_PED_DEAD( l_U839[I] ))))
            {
                if ((GET_PED_CAN_TRIGGER_BULLET_CAM( l_U839[I] )) == 0)
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( l_U839[I], 1 );
                    uVar2 = l_U839[I];
                }
            }
        }
        for ( I = 0; I < 4; I++ )
        {
            if (((DOES_PED_EXIST( l_U883[I] )) == 1) AND (NOT (IS_PED_DEAD( l_U883[I] ))))
            {
                if ((GET_PED_CAN_TRIGGER_BULLET_CAM( l_U883[I] )) == 0)
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( l_U883[I], 1 );
                    uVar2 = l_U883[I];
                }
            }
        }
        for ( I = 0; I < 2; I++ )
        {
            if (((DOES_PED_EXIST( l_U954[I] )) == 1) AND (NOT (IS_PED_DEAD( l_U954[I] ))))
            {
                if ((GET_PED_CAN_TRIGGER_BULLET_CAM( l_U954[I] )) == 0)
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( l_U954[I], 1 );
                    uVar2 = l_U954[I];
                }
            }
        }
        for ( I = 0; I < 2; I++ )
        {
            if (((DOES_PED_EXIST( l_U1001[I] )) == 1) AND (NOT (IS_PED_DEAD( l_U1001[I] ))))
            {
                if ((GET_PED_CAN_TRIGGER_BULLET_CAM( l_U1001[I] )) == 0)
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( l_U1001[I], 1 );
                    uVar2 = l_U1001[I];
                }
            }
        }
        if (((DOES_PED_EXIST( l_U1031 )) == 1) AND (NOT (IS_PED_DEAD( l_U1031 ))))
        {
            if ((GET_PED_CAN_TRIGGER_BULLET_CAM( l_U1031 )) == 0)
            {
                SET_PED_CAN_TRIGGER_BULLET_CAM( l_U1031, 1 );
                uVar2 = l_U1031;
            }
        }
        if (DOES_PED_EXIST( uVar2 ))
        {
            return 1;
        }
    }
    return 0;
}

void sub_37696()
{
    int Result;
    int I;

    Result = 0;
    if (((IS_PED_DEAD( l_U984[0] )) == 0) AND ((DOES_PED_EXIST( l_U984[0] )) == 1))
    {
        Result++;
    }
    for ( I = 0; I < 2; I++ )
    {
        if (((DOES_PED_EXIST( l_U707[I] )) == 1) AND (NOT (IS_PED_DEAD( l_U707[I] ))))
        {
            Result++;
        }
    }
    for ( I = 0; I < 5; I++ )
    {
        if (((DOES_PED_EXIST( l_U737[I] )) == 1) AND (NOT (IS_PED_DEAD( l_U737[I] ))))
        {
            Result++;
        }
    }
    for ( I = 0; I < 3; I++ )
    {
        if (((DOES_PED_EXIST( l_U839[I] )) == 1) AND (NOT (IS_PED_DEAD( l_U839[I] ))))
        {
            Result++;
        }
    }
    for ( I = 0; I < 4; I++ )
    {
        if (((DOES_PED_EXIST( l_U883[I] )) == 1) AND (NOT (IS_PED_DEAD( l_U883[I] ))))
        {
            Result++;
        }
    }
    for ( I = 0; I < 2; I++ )
    {
        if (((DOES_PED_EXIST( l_U954[I] )) == 1) AND (NOT (IS_PED_DEAD( l_U954[I] ))))
        {
            Result++;
        }
    }
    for ( I = 0; I < 2; I++ )
    {
        if (((DOES_PED_EXIST( l_U1001[I] )) == 1) AND (NOT (IS_PED_DEAD( l_U1001[I] ))))
        {
            Result++;
        }
    }
    for ( I = 0; I < 2; I++ )
    {
        if (((DOES_PED_EXIST( l_U809[I] )) == 1) AND (NOT (IS_PED_DEAD( l_U809[I] ))))
        {
            Result++;
        }
    }
    if (((DOES_PED_EXIST( l_U1031 )) == 1) AND (NOT (IS_PED_DEAD( l_U1031 ))))
    {
        Result++;
    }
    return Result;
}

void sub_39721(int iParam0, int iParam1)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if (iParam1 == 1)
    {
        iParam0->_fU8 = iParam0->_fU4 - iParam0->_fU0;
        sub_2290( iParam0 );
    }
    else if (iParam0->_fU8 > 0)
    {
        sub_1633( iParam0 );
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA() - iParam0->_fU8;
        }
        else
        {
            iParam0->_fU0 = TIMERB() - iParam0->_fU8;
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM() - iParam0->_fU8;
        }
        iParam0->_fU4 = iParam0->_fU0;
        iParam0->_fU8 = 0;
    }
    return;
}

void sub_39965(int iParam0, unknown uParam1, unknown uParam2)
{
    if ((sub_14907( iParam0 )) == 0)
    {
        sub_14973( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_FORCE_CLOSE( iParam0->_fU0, iParam0->_fU4, uParam1, uParam2 );
    return;
}

void sub_40214(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_40498(int iParam0)
{
    if (l_U92 == 0)
    {
        l_U93 = GET_PAYNEKILLER_AMT();
        l_U92 = 1;
    }
    if ((IS_PED_DEAD( sub_1061() )) == 0)
    {
        if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0))
        {
            if ((TIME_SINCE_LAST_MONOLOGUE() > 5000) AND ((IS_MONOLOGUE_PLAYING() == 0) AND (sub_40582() == 0)))
            {
                if ((iParam0 == 1) AND (l_U93 < GET_PAYNEKILLER_AMT()))
                {
                    if (g_U789 < 5)
                    {
                        if (((g_U788 mod 3) == 0) || (g_U788 == 0))
                        {
                            sub_706( "NS", "Playing Pills Monologue", 0 );
                            sub_29323( ref l_U82 );
                            sub_40214( 0, sub_1061(), "MAX", ref l_U82, 2, 0 );
                            sub_40214( 1, sub_1061(), "MAX", ref l_U82, 2, 0 );
                            sub_29618( "SFV1_MFPLS", ref l_U82, 7, 1 );
                            g_U789++;
                        }
                        g_U788++;
                    }
                }
            }
            l_U93 = GET_PAYNEKILLER_AMT();
        }
    }
    return;
}

void sub_40582()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

void sub_40909()
{
    sub_706( "SP", "P_UNLOAD_ASSETS", "###" );
    sub_40974( "level_s_fav1_cp_05" );
    sub_41007( 898813722 );
    sub_41007( 87421795 );
    sub_41007( -502497534 );
    sub_41007( 1788482433 );
    sub_41007( -248883091 );
    sub_41007( -1363134011 );
    sub_41007( 151831952 );
    sub_41007( g_U758 );
    sub_41007( g_U762 );
    RELEASE_NAMED_SCRIPT_AUDIO_BANK( "SCRIPT_MISSION\SFV1_VIG22A_DOOR_KICK" );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U154._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U175._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U196._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U217._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U238._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U259._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U280._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U301._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U322._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U343._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U364._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U385._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U406._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U427._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U448._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U469._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U553._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U554._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U555._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U556._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U557._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U558._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U559._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U560._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U561._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U562._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U564._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U563._fU0 );
    return;
}

void sub_40974(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

void sub_41007(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_5284( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_41666()
{
    if (l_U1057 == 1)
    {
        if (NOT (IS_PLAYER_DEAD( sub_1083() )))
        {
            sub_706( "NS", "bPlayerHeading = TRUE", 0 );
            sub_41742( 0 );
            SET_PLAYER_CONTROL( sub_1083(), 0, 0 );
            SET_PED_HEADING( sub_1061(), l_U1058 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U1059, 1.00000000, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( 0.00000000, 1.00000000, 0 );
            sub_41742( 0 );
        }
        l_U1057 = 0;
    }
    sub_41899();
    return;
}

void sub_41742(unknown uParam0)
{
    if ((IS_SCREEN_FADING_IN() == 0) AND (IS_SCREEN_FADED_IN() == 0))
    {
        DO_SCREEN_FADE_IN( uParam0 );
        while (IS_SCREEN_FADED_IN() == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_41899()
{
    if (l_U58 == 0)
    {
        START_WIDGET_GROUP( "Glint Placement Helper" );
        ADD_WIDGET_BOOL( "Show/Reset Glint", ref l_U56 );
        ADD_WIDGET_BOOL( "Hide Glint", ref l_U57 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U53._fU0, 60536, 5000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U53._fU4, 60536, 5000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U53._fU8, 60536, 5000, 0.10000000 );
        STOP_WIDGET_GROUP();
        l_U58 = 1;
    }
    if (l_U56 == 1)
    {
        if (l_U52 != nil)
        {
            if ((DOES_GLINT_EXIST( l_U52 )) == 1)
            {
                REMOVE_GLINT( l_U52 );
            }
        }
        l_U52 = nil;
        l_U52 = CREATE_GLINT( 0, l_U53 );
        l_U56 = 0;
    }
    if (l_U57 == 1)
    {
        if (l_U52 != nil)
        {
            if ((DOES_GLINT_EXIST( l_U52 )) == 1)
            {
                REMOVE_GLINT( l_U52 );
            }
        }
        l_U52 = nil;
        l_U57 = 0;
    }
    return;
}


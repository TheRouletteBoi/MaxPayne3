void main()
{
    unknown uVar2;

    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 0;
    l_U4 = 0;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U10 = 0;
    l_U11 = 0;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 0;
    l_U20 = 0;
    l_U21 = 0;
    l_U22 = 0;
    l_U23 = 0;
    l_U24 = 0;
    l_U25 = 0;
    l_U606 = 0;
    l_U1159 = 0;
    l_U1160 = 0;
    l_U1161 = 0;
    l_U1162 = 0;
    l_U1165 = 0;
    sub_203( "SK", "Script s_Fav1_bCamTest is starting...", "###" );
    sub_252();
    LOAD_SCENE( g_U1050[37] );
    SET_PLAYER_INVINCIBLE( sub_1492(), 1 );
    SET_ADRENALINE_AMT( 100.00000000 );
    uVar2 = sub_1593( sub_1537(), 456708483, 25000, 0, 1 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1216[37], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1258[37], 1065353216, 0 );
    while (true)
    {
        sub_1968();
        sub_19806();
        WAIT( 0 );
    }
    sub_203( "SK", "Script s_Fav1_bCamTest is terminating...", "###" );
    return;
}

void sub_203(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_252()
{
    int I;

    sub_334( ref l_U49, "TRIG_START_BRIDGE", -11.68000000, -46.71000000, 15.00000000, 3.00000000, 3.00000000, 7.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_334( ref l_U112, "TRIG_SETUP_FOUNTAIN", -49.17000000, -79.32000000, 13.78000000, 10.00000000, 7.00000000, 7.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_334( ref l_U70, "TRIG_FOUNTAIN_ACTION", -54.53000000, -78.65000000, 12.00000000, 10.00000000, 3.00000000, 5.00000000, 0.00000000, 0.00000000, 17.31000000, 1 );
    sub_334( ref l_U91, "TRIG_FOUNTAIN_BACKUP", -55.71000000, -71.20000000, 11.33000000, 12.00000000, 4.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_726( ref l_U343, "TETH_BRIDGE_GUARD", -24.57000000, -49.08000000, 16.20000000, 10.69000000, 10.16000000, 7.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_726( ref l_U344, "TETH_ROOF_ENEMY_01", -58.69000000, -58.39000000, 16.51000000, 8.00000000, 3.00000000, 3.00000000, 21.83310000, 0.00000000, 0.00000000, 1 );
    sub_726( ref l_U345, "TETH_ROOF_ENEMY_02", -63.86000000, -57.08000000, 17.01000000, 6.00000000, 6.00000000, 3.00000000, 21.83230000, 0.00000000, 0.00000000, 1 );
    sub_726( ref l_U346, "TETH_FOUNTAIN_HOUSE_WINDOWS", -59.00000000, -58.28000000, 12.52000000, 4.00000000, 3.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_726( ref l_U347, "TETH_FOUNTAIN_HOUSE_BACK", -59.38000000, -52.13000000, 13.03000000, 13.70000000, 3.80000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    GAMEPLAY_HELPER_BOX_SET_ENABLED( "TRIG_SETUP_FOUNTAIN", 0 );
    GAMEPLAY_HELPER_BOX_SET_ENABLED( "TRIG_FOUNTAIN_ACTION", 0 );
    GAMEPLAY_HELPER_BOX_SET_ENABLED( "TRIG_FOUNTAIN_BACKUP", 0 );
    l_U602[0] = -2139704145;
    l_U602[1] = -8807395;
    l_U602[2] = -892639963;
    for ( I = 0; I <= 2; I++ )
    {
        sub_1259( l_U602[I] );
    }
    return;
}

void sub_334(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_726(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_1259(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_1375( "[SP]### ERROR! (BlockLoadModel) Trying to block load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    LOAD_ALL_OBJECTS_NOW();
    while ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        LOAD_ALL_OBJECTS_NOW();
        WAIT( 0 );
    }
    return;
}

void sub_1375(unknown uParam0)
{
    return;
}

void sub_1492()
{
    return GET_PLAYER_ID();
}

int sub_1537()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_1492() );
    }
    return 0;
}

void sub_1593(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_1375( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_1968()
{
    int I;
    unknown uVar3;

    if (l_U1165 == 0)
    {
        sub_203( "Sk", "CREATE BULLET CAM TEST WIDGET", "###" );
        l_U870[0]._fU0 = 456708483;
        StrCopy( ref l_U870[0]._fU4, "pistol - DESERT EAGLE", 32 );
        l_U870[1]._fU0 = -612753081;
        StrCopy( ref l_U870[1]._fU4, "pistol - TAURUS .357", 32 );
        l_U870[2]._fU0 = 68019059;
        StrCopy( ref l_U870[2]._fU4, "pistol - TAURUS PT92", 32 );
        l_U870[3]._fU0 = -862236369;
        StrCopy( ref l_U870[3]._fU4, "pistol - COLT 1911 A1", 32 );
        l_U870[4]._fU0 = -1464892298;
        StrCopy( ref l_U870[4]._fU4, "pistol - GLOCK 18C", 32 );
        l_U870[5]._fU0 = 406496141;
        StrCopy( ref l_U870[5]._fU4, "pistol - .38 REVOLVER", 32 );
        l_U870[6]._fU0 = -168327769;
        StrCopy( ref l_U870[6]._fU4, "shotgun - MOSSBERG 590", 32 );
        l_U870[7]._fU0 = 434544317;
        StrCopy( ref l_U870[7]._fU4, "shotgun - BENELLI SUPER90", 32 );
        l_U870[8]._fU0 = 514118749;
        StrCopy( ref l_U870[8]._fU4, "shotgun - WINCHESTER SX3", 32 );
        l_U870[9]._fU0 = -184942895;
        StrCopy( ref l_U870[9]._fU4, "shotgun - SPAS15", 32 );
        l_U870[10]._fU0 = 1845102363;
        StrCopy( ref l_U870[10]._fU4, "shotgun - DOUBLE BARREL SHOTGUN", 32 );
        l_U870[11]._fU0 = 1194438308;
        StrCopy( ref l_U870[11]._fU4, "SMG - MINI UZI", 32 );
        l_U870[12]._fU0 = -691403429;
        StrCopy( ref l_U870[12]._fU4, "SMG - MAC10", 32 );
        l_U870[13]._fU0 = -1404433099;
        StrCopy( ref l_U870[13]._fU4, "SMG - BERRETTA PM12", 32 );
        l_U870[14]._fU0 = 1478009203;
        StrCopy( ref l_U870[14]._fU4, "SMG - H&K MP5", 32 );
        l_U870[15]._fU0 = -1074756423;
        StrCopy( ref l_U870[15]._fU4, "ASLT RIFLE - AK-47", 32 );
        l_U870[16]._fU0 = 1308526797;
        StrCopy( ref l_U870[16]._fU4, "ASLT RIFLE - FAL", 32 );
        l_U870[17]._fU0 = -1013714740;
        StrCopy( ref l_U870[17]._fU4, "ASLT RIFLE - MD-97LC", 32 );
        l_U870[18]._fU0 = 57534114;
        StrCopy( ref l_U870[18]._fU4, "ASLT RIFLE - G36K", 32 );
        l_U870[19]._fU0 = 57534114;
        StrCopy( ref l_U870[19]._fU4, "ASLT RIFLE - MT40 - missing", 32 );
        l_U870[20]._fU0 = 724901397;
        StrCopy( ref l_U870[20]._fU4, "RIFLE - MINI-30", 32 );
        l_U870[21]._fU0 = -110877124;
        StrCopy( ref l_U870[21]._fU4, "MACHINE GUN - RPD", 32 );
        l_U870[22]._fU0 = 319712764;
        StrCopy( ref l_U870[22]._fU4, "MACHINE GUN - 21E", 32 );
        l_U870[23]._fU0 = 10648147;
        StrCopy( ref l_U870[23]._fU4, "SNIPER RILFE - SG1", 32 );
        l_U870[24]._fU0 = 1224272620;
        StrCopy( ref l_U870[24]._fU4, "SNIPER RILFE - M82", 32 );
        l_U870[25]._fU0 = -1312131151;
        StrCopy( ref l_U870[25]._fU4, "EXPLOSIVE - RPG", 32 );
        l_U870[26]._fU0 = -1659006841;
        StrCopy( ref l_U870[26]._fU4, "SNIPER RILFE - M82", 32 );
        l_U870[27]._fU0 = 1545805694;
        StrCopy( ref l_U870[27]._fU4, "THROWN - MOLOTOV", 32 );
        l_U870[28]._fU0 = -378310276;
        StrCopy( ref l_U870[28]._fU4, "THROWN - FRAG GRENADE", 32 );
        l_U870[29]._fU0 = -1986694060;
        StrCopy( ref l_U870[29]._fU4, "THROWN - SMOKE GRENADE", 32 );
        l_U870[30]._fU0 = -1629340685;
        StrCopy( ref l_U870[30]._fU4, "THROWN - TEAR GAS", 32 );
        l_U870[31]._fU0 = -1258125182;
        StrCopy( ref l_U870[31]._fU4, "THROWN - FLASH GRENADE", 32 );
        START_WIDGET_GROUP( "Bullet Cam Testing" );
        START_WIDGET_GROUP( "Player" );
        START_NEW_WIDGET_COMBO();
        for ( I = 0; I <= 31; I++ )
        {
            ADD_TO_WIDGET_COMBO( ref l_U870[I]._fU4 );
        }
        STOP_WIDGET_COMBO( "Player Weapon", ref l_U1162 );
        ADD_WIDGET_BOOL( "Give Player Weapon", ref l_U2 );
        START_WIDGET_GROUP( "TELEPORT PLAYER" );
        ADD_WIDGET_BOOL( "TELEPORT TO BRIDGE & STAIRS", ref l_U3 );
        ADD_WIDGET_BOOL( "TELEPORT TO FOUNTAIN AERA", ref l_U4 );
        ADD_WIDGET_BOOL( "TELEPORT TO HOGAN'S ALLEY", ref l_U5 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Ped Control" );
        ADD_WIDGET_BOOL( "Clean Peds", ref l_U11 );
        START_NEW_WIDGET_COMBO();
        ADD_TO_WIDGET_COMBO( "AIT_NOVICE" );
        ADD_TO_WIDGET_COMBO( "AIT_NORMAL" );
        ADD_TO_WIDGET_COMBO( "AIT_EXPERT" );
        l_U351 = STOP_WIDGET_COMBO( "AI Template:", ref l_U1166 );
        ADD_WIDGET_BOOL( "SET AITemplate", ref l_U10 );
        START_WIDGET_GROUP( "Bridge and Stairs Ped Control" );
        ADD_WIDGET_BOOL( "Spawn Upper Bridge Peds", ref l_U13 );
        ADD_WIDGET_BOOL( "Spawn Downer Bridge Peds", ref l_U14 );
        ADD_WIDGET_BOOL( "Upstairs Ped Shoots", ref l_U15 );
        ADD_WIDGET_BOOL( "Downstair Ped Shoots", ref l_U16 );
        ADD_WIDGET_BOOL( "Spawn In-Game Peds", ref l_U17 );
        ADD_WIDGET_BOOL( "Show Time Stairs Ped", ref l_U18 );
        ADD_WIDGET_BOOL( "Show Time Bridge Peds", ref l_U19 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Fountain Ped Control" );
        ADD_WIDGET_BOOL( "Spawn Peds", ref l_U20 );
        ADD_WIDGET_BOOL( "Spawn Interiour Peds", ref l_U23 );
        ADD_WIDGET_BOOL( "Fountain Peds Show Time", ref l_U22 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        l_U6 = 1;
        l_U1165 = 1;
    }
    sub_4491();
    sub_10283();
    sub_15797();
    if (l_U2 == 1)
    {
        uVar3 = sub_1593( sub_1537(), l_U870[l_U1162]._fU0, 25000, 0, 0 );
        l_U2 = 0;
    }
    if (l_U11 == 1)
    {
        sub_6154();
        l_U11 = 0;
    }
    return;
}

void sub_4491()
{
    if (l_U3 == 1)
    {
        sub_203( "SK", "Teleporting player to Bridge and Stairs section", "###" );
        FREEZE_PED_POSITION( sub_1537(), 1 );
        sub_4593( 1000 );
        CLEAR_PED_TASKS_IMMEDIATELY( sub_1537() );
        sub_4709( sub_1537(), g_U1050[37], g_U1174[37] );
        LOAD_SCENE( g_U1050[37] );
        if (l_U6 == 0)
        {
            WAIT( 2500 );
        }
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1216[37], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1258[37], 1065353216, 0 );
        GAMEPLAY_HELPER_BOX_SET_ENABLED( "TRIG_START_BRIDGE", 0 );
        GAMEPLAY_HELPER_BOX_SET_ENABLED( "TRIG_START_BRIDGE", 1 );
        sub_4909( 1000 );
        l_U3 = 0;
        l_U6 = 1;
        l_U7 = 0;
        l_U8 = 0;
        FREEZE_PED_POSITION( sub_1537(), 0 );
    }
    if (l_U6 == 1)
    {
        if (sub_5031( ref l_U49, 0 ))
        {
            sub_5177();
        }
        if (l_U9 == 1)
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( "TRIG_START_BRIDGE", 0 );
            GAMEPLAY_HELPER_BOX_SET_ENABLED( "TRIG_START_BRIDGE", 1 );
            sub_5944( 0 );
            sub_7833();
            sub_8036( 0 );
            sub_8967();
            l_U9 = 0;
        }
        if (l_U13 == 1)
        {
            sub_9263( 1 );
            l_U13 = 0;
        }
        if (l_U15 == 1)
        {
            sub_9263( 1 );
            sub_9816();
            l_U15 = 0;
        }
        if (l_U14 == 1)
        {
            sub_5944( 1 );
            l_U14 = 0;
        }
        if (l_U16 == 1)
        {
            sub_5944( 1 );
            sub_7833();
            l_U16 = 0;
        }
        if (l_U17 == 1)
        {
            sub_8036( 1 );
            l_U17 = 0;
        }
        if (l_U18 == 1)
        {
            sub_8967();
            l_U18 = 0;
        }
        if (l_U19 == 1)
        {
            sub_5177();
            l_U19 = 0;
        }
        if (l_U12 == 1)
        {
            sub_7499( ref l_U478 );
            sub_7499( ref l_U446 );
            sub_7499( ref g_U876 );
            sub_7499( ref l_U361 );
            sub_7499( ref l_U377 );
            l_U12 = 0;
        }
        if (l_U10 == 1)
        {
            sub_5233( ref l_U478 );
            sub_5233( ref l_U446 );
            sub_5233( ref g_U876 );
            sub_5233( ref l_U361 );
            sub_5233( ref l_U377 );
            l_U10 = 0;
        }
        if (l_U15 == 1)
        {
            sub_9263( 1 );
            sub_9816();
            l_U15 = 0;
        }
        if (l_U16 == 1)
        {
            sub_5944( 1 );
            sub_7833();
            l_U16 = 0;
        }
    }
    return;
}

void sub_4593(unknown uParam0)
{
    if ((IS_SCREEN_FADING_OUT() == 0) AND (IS_SCREEN_FADED_OUT() == 0))
    {
        DO_SCREEN_FADE_OUT( uParam0 );
        while (IS_SCREEN_FADED_OUT() == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_4709(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_4909(unknown uParam0)
{
    if ((IS_SCREEN_FADING_IN() == 0) AND (IS_SCREEN_FADED_IN() == 0))
    {
        DO_SCREEN_FADE_IN( uParam0 );
        while (IS_SCREEN_FADED_IN() == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_5031(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_5073( sub_1537(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

int sub_5073(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_5177()
{
    int I;

    sub_203( "SP", "P_START_BRIDGE_SHOOTOUT", "###" );
    sub_5233( ref l_U446 );
    for ( I = 0; I <= 3; I++ )
    {
        if (((IS_PED_DEAD( l_U446[I] )) == 0) AND ((DOES_PED_EXIST( l_U446[I] )) == 1))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U446[I], 0 );
            SET_PED_PROOFS( l_U446[I], 0, 0, 0, 0, 0 );
            TASK_COMBAT_PED( l_U446[I], sub_1537() );
        }
    }
    if (((IS_PED_DEAD( l_U446[2] )) == 0) AND ((DOES_PED_EXIST( l_U446[2] )) == 1))
    {
        OPEN_SEQUENCE_TASK( ref l_U360 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if ((IS_PED_DEAD( sub_1537() )) == 0)
        {
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, -19.23000000, -50.23000000, 16.53000000, sub_1537(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_SHOOT_AT_PED( 0, sub_1537(), 4000, 0, 0, 0, 0 );
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( l_U360 );
        TASK_PERFORM_SEQUENCE( l_U446[2], l_U360 );
        CLEAR_SEQUENCE_TASK( l_U360 );
    }
    if (((IS_PED_DEAD( l_U446[1] )) == 0) AND ((DOES_PED_EXIST( l_U446[1] )) == 1))
    {
        OPEN_SEQUENCE_TASK( ref l_U360 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_STAND_STILL( 0, 1500 );
        if ((IS_PED_DEAD( sub_1537() )) == 0)
        {
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, -21.73000000, -49.89000000, 16.68000000, sub_1537(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_SHOOT_AT_PED( 0, sub_1537(), 2000, 0, 0, 0, 0 );
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( l_U360 );
        TASK_PERFORM_SEQUENCE( l_U446[1], l_U360 );
        CLEAR_SEQUENCE_TASK( l_U360 );
    }
    return;
}

void sub_5233(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((DOES_PED_EXIST( (uParam0^)[I] )) AND (NOT (IS_PED_DEAD( (uParam0^)[I] ))))
        {
            GET_CONTENTS_OF_COMBO_WIDGET_SELECTION( 32, ref l_U352, l_U351 );
            SET_PED_AI_TEMPLATE( (uParam0^)[I], ref l_U352 );
        }
    }
    return;
}

void sub_5944(int iParam0)
{
    sub_6052( ref l_U379[0], -11.80000000, -55.71000000, 12.48000000, 0.00000000, sub_5983(), 7, 3, 2, 0, 0 );
    if (iParam0 == 1)
    {
        sub_6154();
    }
    sub_6263( l_U377[0] );
    l_U377[0] = sub_6516( ref l_U379[0] );
    if ((IS_PED_DEAD( l_U377[0] )) AND (DOES_PED_EXIST( l_U377[0] )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U377[0], 1 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U377[0], 1 );
        SET_PED_ALERTNESS( l_U377[0], 1 );
        SET_PED_EMOTION_STATE( l_U377[0], 8 );
        SET_PED_COMBAT_RANGE_MIN( l_U377[0], 1.00000000 );
        SET_PED_COMBAT_RANGE_MAX( l_U377[0], 25.00000000 );
        SET_PED_ACCURACY( l_U377[0], -1467320974 );
    }
    sub_7499( ref l_U377 );
    sub_7598();
    sub_5233( ref l_U377 );
    sub_1593( l_U377[0], 68019059, 25000, 0, 0 );
    return;
}

void sub_5983()
{
    unknown Result;

    Result = l_U602[l_U606];
    l_U606++;
    if (l_U606 >= 1)
    {
        l_U606 = 0;
    }
    return Result;
}

void sub_6052(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

void sub_6154()
{
    sub_203( "SK", "CLEANING EVVVVVVERYTHING UP!!!", "###" );
    SET_ADRENALINE_AMT( 100.00000000 );
    sub_6229( ref l_U377 );
    sub_6229( ref l_U361 );
    sub_6229( ref l_U446 );
    sub_6229( ref l_U478 );
    sub_6229( ref g_U876 );
    sub_6263( l_U662 );
    sub_6263( l_U676 );
    sub_6263( l_U696 );
    sub_6263( l_U710 );
    sub_6263( l_U724 );
    sub_6263( l_U738 );
    sub_6229( ref l_U792 );
    sub_6229( ref l_U481 );
    sub_6229( ref l_U511 );
    sub_6229( ref l_U555 );
    return;
}

void sub_6229(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_6263( (uParam0^)[I] );
    }
    return;
}

void sub_6263(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_6516(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_6686( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_7155( iParam0->_fU40 );
    sub_7235( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_6686(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_1375( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_7155(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_7235(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_7499(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((DOES_PED_EXIST( (uParam0^)[I] )) AND (NOT (IS_PED_DEAD( (uParam0^)[I] ))))
        {
            SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
        }
    }
    l_U12 = 0;
    return;
}

void sub_7598()
{
    sub_5233( ref l_U377 );
    if (((IS_PED_DEAD( l_U377[0] )) == 0) AND ((DOES_PED_EXIST( l_U377[0] )) == 1))
    {
        OPEN_SEQUENCE_TASK( ref l_U360 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (NOT (IS_PED_DEAD( sub_1537() )))
        {
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, -11.70000000, -46.98000000, 16.50000000, 3, 20000, 1048576000, 0, 0 );
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( l_U360 );
        TASK_PERFORM_SEQUENCE( l_U377[0], l_U360 );
        CLEAR_SEQUENCE_TASK( l_U360 );
    }
    return;
}

void sub_7833()
{
    sub_5233( ref l_U377 );
    if (((IS_PED_DEAD( l_U377[0] )) == 0) AND ((DOES_PED_EXIST( l_U377[0] )) == 1))
    {
        OPEN_SEQUENCE_TASK( ref l_U360 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (NOT (IS_PED_DEAD( sub_1537() )))
        {
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, -11.70000000, -46.98000000, 16.50000000, sub_1537(), 2, 1, 0.00000000, 0.00000000, 1, 0 );
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( l_U360 );
        TASK_PERFORM_SEQUENCE( l_U377[0], l_U360 );
        CLEAR_SEQUENCE_TASK( l_U360 );
    }
    return;
}

void sub_8036(int iParam0)
{
    int I;

    SET_ADRENALINE_AMT( 100.00000000 );
    sub_6052( ref g_U863, -11.63000000, -64.47000000, 12.50000000, -1.41000000, sub_5983(), 7, 3, 2, 0, 0 );
    sub_6052( ref l_U393[0], -25.04000000, -48.27000000, 16.82000000, -94.81000000, sub_5983(), 7, 3, 2, 0, 0 );
    sub_6052( ref l_U393[1], -27.38000000, -55.01000000, 16.82000000, 55.32000000, sub_5983(), 7, 3, 2, 0, 0 );
    sub_6052( ref l_U393[2], -28.61000000, -55.17000000, 16.82000000, 18.28000000, sub_5983(), 7, 3, 2, 0, 0 );
    sub_6052( ref l_U393[3], -28.43000000, -56.80000000, 16.82000000, 42.06000000, sub_5983(), 7, 3, 2, 0, 0 );
    sub_6052( ref l_U451[0], -27.25000000, -56.50000000, 16.82000000, 29.57000000, sub_5983(), 7, 3, 2, 0, 0 );
    if (iParam0 == 1)
    {
        sub_6154();
    }
    sub_6263( g_U876[0] );
    g_U876[0] = sub_6516( ref g_U863 );
    if (((IS_PED_DEAD( g_U876[0] )) == 0) AND ((DOES_PED_EXIST( g_U876[0] )) == 1))
    {
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U876[0], 1 );
        SET_PED_NAME_DEBUG( g_U876[0], "piBridgeStairsEnemy" );
        SET_PED_CAN_TRIGGER_BULLET_CAM( g_U876[0], 1 );
        sub_7499( ref g_U876 );
    }
    for ( I = 0; I <= 3; I++ )
    {
        sub_6263( l_U446[I] );
        l_U446[I] = sub_6516( ref l_U393[I] );
        if (((IS_PED_DEAD( l_U446[I] )) == 0) AND ((DOES_PED_EXIST( l_U446[I] )) == 1))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U446[I], 1 );
            SET_PED_CAN_TRIGGER_BULLET_CAM( l_U446[I], 1 );
        }
        sub_8621( ref l_U343, l_U446[I], 1 );
    }
    sub_7499( ref l_U446 );
    sub_1593( l_U446[0], 1194438308, 25000, 0, 0 );
    sub_1593( l_U446[1], 1194438308, 25000, 0, 0 );
    sub_1593( l_U446[2], -862236369, 25000, 0, 0 );
    sub_1593( l_U446[3], 1845102363, 25000, 0, 0 );
    sub_1593( g_U876[0], 1194438308, 25000, 0, 0 );
    sub_5233( ref g_U876 );
    sub_5233( ref l_U446 );
    sub_8873( ref l_U446, "piBridgeEnemies_" );
    sub_8967();
    return;
}

void sub_8621(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_8873(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_8967()
{
    sub_203( "SP", "P_START_BRIDGE_STAIRS", "###" );
    sub_5233( ref g_U876 );
    if (((IS_PED_DEAD( g_U876[0] )) == 0) AND ((DOES_PED_EXIST( g_U876[0] )) == 1))
    {
        OPEN_SEQUENCE_TASK( ref l_U360 );
        TASK_STAND_STILL( 0, 1000 );
        if (NOT (IS_PED_DEAD( sub_1537() )))
        {
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, -15.05000000, -49.91000000, 16.50000000, 3, 20000, 1048576000, 0, 0 );
        }
        if ((IS_PED_DEAD( sub_1537() )) == 0)
        {
            TASK_COMBAT_PED( 0, sub_1537() );
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( l_U360 );
        TASK_PERFORM_SEQUENCE( g_U876[0], l_U360 );
        CLEAR_SEQUENCE_TASK( l_U360 );
    }
    return;
}

void sub_9263(int iParam0)
{
    SET_ADRENALINE_AMT( 100.00000000 );
    sub_6052( ref l_U363[0], -11.70000000, -46.98000000, 16.50000000, 0.00000000, sub_5983(), 7, 3, 2, 0, 0 );
    if (iParam0 == 1)
    {
        sub_6154();
    }
    sub_6263( l_U361[0] );
    l_U361[0] = sub_6516( ref l_U363[0] );
    if ((IS_PED_DEAD( l_U361[0] )) AND (DOES_PED_EXIST( l_U361[0] )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U361[0], 1 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U361[0], 1 );
        SET_PED_ALERTNESS( l_U361[0], 1 );
        SET_PED_EMOTION_STATE( l_U361[0], 1 );
        SET_PED_COMBAT_RANGE_MIN( l_U361[0], 1.00000000 );
        SET_PED_COMBAT_RANGE_MAX( l_U361[0], 25.00000000 );
        SET_PED_ACCURACY( l_U361[0], -1467320974 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U361[0], 1 );
    }
    sub_7499( ref l_U361 );
    sub_9561();
    sub_1593( l_U361[0], 68019059, 25000, 0, 0 );
    sub_5233( ref l_U361 );
    return;
}

void sub_9561()
{
    sub_5233( ref l_U361 );
    if (((IS_PED_DEAD( l_U361[0] )) == 0) AND ((DOES_PED_EXIST( l_U361[0] )) == 1))
    {
        OPEN_SEQUENCE_TASK( ref l_U360 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (NOT (IS_PED_DEAD( sub_1537() )))
        {
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, -11.80000000, -55.71000000, 12.48000000, 3, 20000, 1048576000, 0, 0 );
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( l_U360 );
        TASK_PERFORM_SEQUENCE( l_U361[0], l_U360 );
        CLEAR_SEQUENCE_TASK( l_U360 );
    }
    return;
}

void sub_9816()
{
    sub_5233( ref l_U361 );
    if (((IS_PED_DEAD( l_U361[0] )) == 0) AND ((DOES_PED_EXIST( l_U361[0] )) == 1))
    {
        OPEN_SEQUENCE_TASK( ref l_U360 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, -11.80000000, -55.71000000, 12.48000000, sub_1537(), 2, 1, 0.00000000, 0.00000000, 1, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( l_U360 );
        TASK_PERFORM_SEQUENCE( l_U361[0], l_U360 );
        CLEAR_SEQUENCE_TASK( l_U360 );
    }
    return;
}

void sub_10283()
{
    if (l_U4 == 1)
    {
        sub_203( "SK", "Teleporting player to Fountain section", "###" );
        FREEZE_PED_POSITION( sub_1537(), 1 );
        sub_4593( 1000 );
        sub_6154();
        CLEAR_PED_TASKS_IMMEDIATELY( sub_1537() );
        sub_4709( sub_1537(), g_U1050[8], g_U1174[8] );
        if (l_U7 == 0)
        {
            LOAD_SCENE( g_U1050[8] );
            WAIT( 2500 );
        }
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1216[8], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1258[8], 1065353216, 0 );
        SET_PLAYER_USING_COVER( sub_1492(), 0 );
        sub_4909( 1000 );
        l_U4 = 0;
        l_U7 = 1;
        l_U6 = 0;
        l_U8 = 0;
        FREEZE_PED_POSITION( sub_1537(), 0 );
    }
    if (l_U7 == 1)
    {
        if (l_U22 == 1)
        {
            if (l_U25 == 0)
            {
                sub_6154();
                sub_10588();
                sub_11085();
                sub_11349();
                sub_12183();
                sub_12504();
                sub_12825();
                sub_13240();
                l_U25 = 1;
            }
            if ((sub_5031( ref l_U112, 0 )) == 1)
            {
                sub_11349();
            }
            if ((sub_5031( ref l_U70, 0 )) == 1)
            {
                sub_12825();
                sub_12183();
                sub_13923( ref l_U31, 5000, 1, 0 );
                sub_14057( ref l_U31 );
                sub_13923( ref l_U40, 10000, 1, 0 );
                sub_14057( ref l_U40 );
            }
            if ((sub_14198( ref l_U31 )) == 1)
            {
                sub_12504();
            }
            if (l_U24 == 0)
            {
                if (((sub_14398( l_U91 )) == 1) || ((sub_14198( ref l_U40 )) == 1))
                {
                    sub_13240();
                    l_U24 = 1;
                }
            }
        }
        if (l_U23 == 1)
        {
            sub_14456();
            sub_14904();
            l_U23 = 0;
        }
        if (l_U9 == 1)
        {
            sub_10588();
            sub_11085();
            sub_11349();
            sub_12183();
            sub_12504();
            sub_12825();
            sub_13240();
            l_U22 = 1;
            l_U9 = 0;
        }
        if (l_U20 == 1)
        {
            sub_11085();
            sub_11349();
            sub_12183();
            sub_12504();
            sub_12825();
            sub_13240();
            l_U20 = 0;
        }
        if (l_U12 == 1)
        {
            sub_11969( l_U738 );
            sub_11969( l_U724 );
            sub_11969( l_U710 );
            sub_11969( l_U696 );
            sub_11969( l_U662 );
            sub_11969( l_U676 );
            l_U12 = 0;
        }
    }
    return;
}

void sub_10588()
{
    sub_203( "SP", "INITIALIZE_SCRIPT_DATA", "###" );
    l_U24 = 0;
    sub_10645( ref l_U31 );
    sub_10645( ref l_U40 );
    GAMEPLAY_HELPER_BOX_SET_ENABLED( "TRIG_SETUP_FOUNTAIN", 0 );
    GAMEPLAY_HELPER_BOX_SET_ENABLED( "TRIG_FOUNTAIN_ACTION", 0 );
    GAMEPLAY_HELPER_BOX_SET_ENABLED( "TRIG_FOUNTAIN_BACKUP", 0 );
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U599 = {89.65000000, -163.59000000, 1.01000000};
    l_U607[0] = {90.16000000, -164.90000000, -2.62000000};
    l_U607[1] = {91.51000000, -160.84000000, 1.57000000};
    l_U614[0] = {114.20000000, -161.91000000, -2.07000000};
    l_U614[1] = {111.15000000, -165.06000000, -2.26000000};
    l_U621[0] = {118.42000000, -164.82000000, 1.39000000};
    l_U621[1] = {122.92000000, -163.57000000, 3.92000000};
    l_U621[2] = {122.11000000, -152.36000000, 2.41000000};
    return;
}

void sub_10645(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_11085()
{
    sub_6052( ref l_U649, -57.38605000, -48.19279000, 18.69818000, 177.49620000, sub_5983(), 7, 3, 2, 0, 0 );
    sub_6052( ref l_U663, -60.11547000, -47.77013000, 18.69830000, 178.75840000, sub_5983(), 7, 3, 2, 0, 0 );
    sub_6052( ref l_U683, -67.94984000, -70.19060000, 12.47122000, 278.70210000, sub_5983(), 7, 3, 2, 0, 0 );
    sub_6052( ref l_U697, -48.82462000, -61.74516000, 13.83007000, 180.86850000, sub_5983(), 7, 3, 2, 0, 0 );
    sub_6052( ref l_U711, -55.98311000, -52.51805000, 13.83007000, 88.97557000, sub_5983(), 7, 3, 2, 0, 0 );
    sub_6052( ref l_U725, -70.78747000, -47.65159000, 13.63540000, 180.04260000, sub_5983(), 7, 3, 2, 0, 0 );
    return;
}

void sub_11349()
{
    unknown uVar2;
    unknown uVar3;

    sub_203( "SP", "P_SETUP_FOUNTAIN_ENEMIES", "###" );
    sub_6263( l_U696 );
    l_U696 = sub_6516( ref l_U683 );
    sub_11435( l_U696, ref l_U677 );
    if (((IS_PED_DEAD( l_U696 )) == 0) AND ((DOES_PED_EXIST( l_U696 )) == 1))
    {
        SET_PED_NAME_DEBUG( l_U696, "piFountainEnemy01" );
        uVar2 = sub_1593( l_U696, 1845102363, 25000, 0, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U696, 1 );
    }
    sub_11969( l_U696 );
    sub_6263( l_U710 );
    l_U710 = sub_6516( ref l_U697 );
    sub_11435( l_U710, ref l_U677 );
    if (((IS_PED_DEAD( l_U710 )) == 0) AND ((DOES_PED_EXIST( l_U710 )) == 1))
    {
        SET_PED_NAME_DEBUG( l_U710, "piFountainEnemy02" );
        uVar3 = sub_1593( l_U710, -862236369, 25000, 0, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U710, 1 );
    }
    sub_11969( l_U710 );
    return;
}

void sub_11435(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_1375( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_11578( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_11578( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_11578(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_11969(unknown uParam0)
{
    if ((DOES_PED_EXIST( uParam0 )) AND (NOT (IS_PED_DEAD( uParam0 ))))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( uParam0, 1 );
    }
    l_U12 = 0;
    return;
}

void sub_12183()
{
    vector vVar2;
    unknown uVar5;

    sub_203( "SP", "P_SETUP_ROOF_ENEMY_01", "###" );
    vVar2 = {-56.61974000, -58.78480000, 18.25486000};
    sub_6263( l_U662 );
    l_U662 = sub_6516( ref l_U649 );
    sub_8621( ref l_U344, l_U662, 3 );
    sub_8621( ref l_U345, l_U662, 3 );
    if (((IS_PED_DEAD( l_U662 )) == 0) AND ((DOES_PED_EXIST( l_U662 )) == 1))
    {
        uVar5 = sub_1593( l_U662, -1074756423, 25000, 0, 0 );
        sub_11969( l_U662 );
        sub_11435( l_U662, ref l_U631 );
        OPEN_SEQUENCE_TASK( ref l_U360 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, vVar2, 3, -1, 1048576000, 0, 0 );
        if ((IS_PED_DEAD( sub_1537() )) == 0)
        {
            ;
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( l_U360 );
        TASK_PERFORM_SEQUENCE( l_U662, l_U360 );
        CLEAR_SEQUENCE_TASK( l_U360 );
    }
    return;
}

void sub_12504()
{
    vector vVar2;
    unknown uVar5;

    sub_203( "SP", "P_SETUP_ROOF_ENEMY_02", "###" );
    vVar2 = {-64.04620000, -56.75750000, 19.07265000};
    sub_6263( l_U676 );
    l_U676 = sub_6516( ref l_U663 );
    sub_8621( ref l_U344, l_U676, 3 );
    sub_8621( ref l_U345, l_U676, 3 );
    if (((IS_PED_DEAD( l_U676 )) == 0) AND ((DOES_PED_EXIST( l_U676 )) == 1))
    {
        uVar5 = sub_1593( l_U676, -1074756423, 25000, 0, 0 );
        sub_11969( l_U676 );
        sub_11435( l_U676, ref l_U631 );
        OPEN_SEQUENCE_TASK( ref l_U360 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, vVar2, 3, -1, 1048576000, 0, 0 );
        if ((IS_PED_DEAD( sub_1537() )) == 0)
        {
            ;
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( l_U360 );
        TASK_PERFORM_SEQUENCE( l_U676, l_U360 );
        CLEAR_SEQUENCE_TASK( l_U360 );
    }
    return;
}

void sub_12825()
{
    vector vVar2;
    vector vVar5;

    sub_203( "SP", "P_ACTIVATE_FOUNTAIN_ENEMIES", "###" );
    vVar2 = {-67.17210000, -62.39354000, 12.37743000};
    if (((IS_PED_DEAD( l_U696 )) == 0) AND ((DOES_PED_EXIST( l_U696 )) == 1))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U696, 0 );
        OPEN_SEQUENCE_TASK( ref l_U360 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if ((IS_PED_DEAD( sub_1537() )) == 0)
        {
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, vVar2, sub_1537(), 3, 0, 1056964608, 0, 1, 0 );
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( l_U360 );
        TASK_PERFORM_SEQUENCE( l_U696, l_U360 );
        CLEAR_SEQUENCE_TASK( l_U360 );
    }
    vVar5 = {-56.66655000, -61.69790000, 12.41864000};
    if (((IS_PED_DEAD( l_U710 )) == 0) AND ((DOES_PED_EXIST( l_U710 )) == 1))
    {
        OPEN_SEQUENCE_TASK( ref l_U360 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if ((IS_PED_DEAD( sub_1537() )) == 0)
        {
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, vVar5, sub_1537(), 3, 1, 1056964608, 0, 1, 0 );
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( l_U360 );
        TASK_PERFORM_SEQUENCE( l_U710, l_U360 );
        CLEAR_SEQUENCE_TASK( l_U360 );
    }
    return;
}

void sub_13240()
{
    vector vVar2;
    unknown uVar5;
    vector vVar6;
    unknown uVar9;

    sub_203( "SP", "P_SETUP_FOUNTAIN_BACKUP", "###" );
    vVar2 = {-58.40917000, -58.47328000, 13.81813000};
    sub_6263( l_U724 );
    l_U724 = sub_6516( ref l_U711 );
    sub_11435( l_U724, ref l_U677 );
    sub_8621( ref l_U346, l_U738, 3 );
    if (((IS_PED_DEAD( l_U724 )) == 0) AND ((DOES_PED_EXIST( l_U724 )) == 1))
    {
        SET_PED_NAME_DEBUG( l_U724, "piFountainBackup01" );
        uVar5 = sub_1593( l_U724, 1194438308, 25000, 0, 0 );
        OPEN_SEQUENCE_TASK( ref l_U360 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, vVar2, 3, -1, 1048576000, 0, 0 );
        if ((IS_PED_DEAD( sub_1537() )) == 0)
        {
            ;
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( l_U360 );
        TASK_PERFORM_SEQUENCE( l_U724, l_U360 );
        CLEAR_SEQUENCE_TASK( l_U360 );
    }
    sub_11969( l_U724 );
    vVar6 = {-63.72724000, -52.41292000, 13.82744000};
    sub_6263( l_U738 );
    l_U738 = sub_6516( ref l_U725 );
    sub_11435( l_U738, ref l_U677 );
    sub_8621( ref l_U347, l_U738, 3 );
    if (((IS_PED_DEAD( l_U738 )) == 0) AND ((DOES_PED_EXIST( l_U738 )) == 1))
    {
        SET_PED_NAME_DEBUG( l_U738, "piFountainBackup02" );
        uVar9 = sub_1593( l_U738, 1194438308, 25000, 0, 0 );
        OPEN_SEQUENCE_TASK( ref l_U360 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, vVar6, 3, -1, 1048576000, 0, 0 );
        if ((IS_PED_DEAD( sub_1537() )) == 0)
        {
            ;
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( l_U360 );
        TASK_PERFORM_SEQUENCE( l_U738, l_U360 );
        CLEAR_SEQUENCE_TASK( l_U360 );
    }
    sub_11969( l_U738 );
    return;
}

void sub_13923(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_14057(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_14198(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_14398(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_5073( sub_1537(), uParam0 );
}

void sub_14456()
{
    int I;

    sub_6052( ref l_U739[0], -56.36000000, -61.63000000, 12.57000000, -1.41000000, sub_5983(), 7, 3, 2, 0, 0 );
    sub_6052( ref l_U739[1], -70.99000000, -52.99000000, 13.82000000, -1.41000000, sub_5983(), 7, 3, 2, 0, 0 );
    sub_6052( ref l_U739[2], -56.09000000, -55.21000000, 14.00000000, -1.41000000, sub_5983(), 7, 3, 2, 0, 0 );
    sub_6052( ref l_U739[3], -57.18000000, -58.23000000, 13.82000000, -1.41000000, sub_5983(), 7, 3, 2, 0, 0 );
    for ( I = 0; I <= 3; I++ )
    {
        sub_6263( l_U792[I] );
        l_U792[I] = sub_6516( ref l_U739[I] );
        if (((IS_PED_DEAD( l_U792[I] )) == 0) AND ((DOES_PED_EXIST( l_U792[I] )) == 1))
        {
            SET_PED_COMBAT_RANGE_MIN( l_U792[I], 1.00000000 );
            SET_PED_COMBAT_RANGE_MAX( l_U792[I], 8.00000000 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U792[I], 1 );
            SET_PED_CAN_TRIGGER_BULLET_CAM( l_U792[I], 1 );
            sub_1593( l_U792[I], 1194438308, 25000, 0, 0 );
        }
    }
    sub_7499( ref l_U792 );
    sub_5233( ref l_U792 );
    sub_8873( ref l_U792, "piFOUNTAIN_ENEMIES" );
    return;
}

void sub_14904()
{
    if (((IS_PED_DEAD( l_U792[0] )) == 0) AND ((DOES_PED_EXIST( l_U792[0] )) == 1))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U792[0], 0 );
        OPEN_SEQUENCE_TASK( ref l_U360 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if ((IS_PED_DEAD( sub_1537() )) == 0)
        {
            TASK_GO_TO_PED_WHILE_AIMING_AT_PED( 0, sub_1537(), sub_1537(), 3, 1, 5.00000000, 5.00000000, 1, 1 );
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( l_U360 );
        TASK_PERFORM_SEQUENCE( l_U792[0], l_U360 );
        CLEAR_SEQUENCE_TASK( l_U360 );
    }
    if (((IS_PED_DEAD( l_U792[1] )) == 0) AND ((DOES_PED_EXIST( l_U792[1] )) == 1))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U792[1], 0 );
        OPEN_SEQUENCE_TASK( ref l_U360 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if ((IS_PED_DEAD( sub_1537() )) == 0)
        {
            TASK_GO_TO_PED_WHILE_AIMING_AT_PED( 0, sub_1537(), sub_1537(), 3, 1, 5.00000000, 5.00000000, 1, 1 );
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( l_U360 );
        TASK_PERFORM_SEQUENCE( l_U792[1], l_U360 );
        CLEAR_SEQUENCE_TASK( l_U360 );
    }
    if (((IS_PED_DEAD( l_U792[2] )) == 0) AND ((DOES_PED_EXIST( l_U792[2] )) == 1))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U792[2], 0 );
        OPEN_SEQUENCE_TASK( ref l_U360 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if ((IS_PED_DEAD( sub_1537() )) == 0)
        {
            TASK_SHOOT_AT_PED( 0, sub_1537(), 1, 0, 0, 0, 0 );
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( l_U360 );
        TASK_PERFORM_SEQUENCE( l_U792[2], l_U360 );
        CLEAR_SEQUENCE_TASK( l_U360 );
    }
    if (((IS_PED_DEAD( l_U792[3] )) == 0) AND ((DOES_PED_EXIST( l_U792[3] )) == 1))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U792[3], 0 );
        OPEN_SEQUENCE_TASK( ref l_U360 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if ((IS_PED_DEAD( sub_1537() )) == 0)
        {
            TASK_SHOOT_AT_PED( 0, sub_1537(), 1, 0, 0, 0, 0 );
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( l_U360 );
        TASK_PERFORM_SEQUENCE( l_U792[3], l_U360 );
        CLEAR_SEQUENCE_TASK( l_U360 );
    }
    return;
}

void sub_15797()
{
    int I;

    if (l_U5 == 1)
    {
        sub_203( "SK", "Teleporting player to Lower Favela section", "###" );
        FREEZE_PED_POSITION( sub_1537(), 1 );
        sub_4593( 1000 );
        sub_6154();
        CLEAR_PED_TASKS_IMMEDIATELY( sub_1537() );
        sub_4709( sub_1537(), 92.49310000, -176.32570000, -2.84520700, 119.51290000 );
        if (l_U8 == 0)
        {
            LOAD_SCENE( 92.49310000, -176.32570000, -2.84520700 );
            WAIT( 2500 );
        }
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( 13.94753000, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( -0.34972000, 1065353216, 0 );
        sub_4909( 1000 );
        l_U5 = 0;
        l_U8 = 1;
        l_U7 = 0;
        l_U6 = 0;
        FREEZE_PED_POSITION( sub_1537(), 0 );
    }
    if (l_U9 == 1)
    {
        sub_10588();
        sub_16081();
        sub_16758();
        sub_4709( sub_1537(), 92.49310000, -176.32570000, -2.84520700, 119.51290000 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( -54.36062000, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( -3.80518700, 1065353216, 0 );
        l_U9 = 0;
    }
    if (l_U8 == 1)
    {
        if (l_U12 == 1)
        {
            sub_7499( ref l_U481 );
            sub_7499( ref l_U511 );
            sub_7499( ref l_U555 );
            l_U12 = 0;
        }
        if (sub_5031( ref l_U280, 0 ))
        {
            sub_203( "SA", "Starting Corner Enemy 0", "###" );
            if (NOT (IS_PED_DEAD( l_U481[0] )))
            {
                OPEN_SEQUENCE_TASK( ref l_U360 );
                TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
                if (NOT (IS_PED_DEAD( sub_1537() )))
                {
                    TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, l_U607[I], sub_1537(), 3, 1, 1056964608, 0, 1, 0 );
                    TASK_COMBAT_PED( 0, sub_1537() );
                }
                TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
                CLOSE_SEQUENCE_TASK( l_U360 );
                TASK_PERFORM_SEQUENCE( l_U481[0], l_U360 );
                CLEAR_SEQUENCE_TASK( l_U360 );
            }
        }
        if (NOT l_U27)
        {
            if (NOT (IS_PED_DEAD( sub_1537() )))
            {
                if ((HAS_PED_CLEAR_LOS_TO_SPHERE( sub_1537(), l_U599, 1.00000000 )) AND (sub_14398( l_U280 )))
                {
                    sub_203( "SA", "Starting Corner Enemy 1", "###" );
                    OPEN_SEQUENCE_TASK( ref l_U360 );
                    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
                    if (NOT (IS_PED_DEAD( sub_1537() )))
                    {
                        TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, l_U607[1], sub_1537(), 3, 1, 1056964608, 0, 1, 0 );
                        TASK_SHOOT_AT_PED( 0, sub_1537(), -1, 0, 0, 0, 0 );
                    }
                    CLOSE_SEQUENCE_TASK( l_U360 );
                    if (NOT (IS_PED_DEAD( l_U481[1] )))
                    {
                        TASK_PERFORM_SEQUENCE( l_U481[1], l_U360 );
                        CLEAR_SEQUENCE_TASK( l_U360 );
                    }
                    l_U27 = 1;
                }
            }
        }
        if (sub_5031( ref l_U301, 0 ))
        {
            sub_203( "SA", "Starting Alley Enemies Wave 1", "###" );
            for ( I = 0; I < 3; I++ )
            {
                OPEN_SEQUENCE_TASK( ref l_U360 );
                switch (I)
                {
                    case 0:
                    case 1:
                    if (NOT (IS_PED_DEAD( sub_1537() )))
                    {
                        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
                        TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, l_U614[I], sub_1537(), 3, 1, 1056964608, 0, 1, 0 );
                        TASK_COMBAT_SNAP_TO_COVER_COORDS( 0, l_U614[I], 0 );
                        TASK_COMBAT_PED( 0, sub_1537() );
                        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
                    }
                    break;
                    case 2:
                    if (NOT (IS_PED_DEAD( sub_1537() )))
                    {
                        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
                        TASK_SHOOT_AT_PED( 0, sub_1537(), -1, 0, 0, 0, 0 );
                        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
                    }
                    break;
                }
                CLOSE_SEQUENCE_TASK( l_U360 );
                if (NOT (IS_PED_DEAD( l_U511[I] )))
                {
                    TASK_PERFORM_SEQUENCE( l_U511[I], l_U360 );
                    CLEAR_SEQUENCE_TASK( l_U360 );
                }
            }
        }
        if (NOT l_U26)
        {
            if (((sub_18790( ref l_U511 )) > 1) || (sub_5031( ref l_U322, 0 )))
            {
                sub_203( "SA", "Starting Alley Enemies Wave 2", "###" );
                for ( I = 0; I < 3; I++ )
                {
                    OPEN_SEQUENCE_TASK( ref l_U360 );
                    if (I == 0)
                    {
                        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
                        if (NOT (IS_PED_DEAD( sub_1537() )))
                        {
                            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, l_U621[I], sub_1537(), 3, 1, 1056964608, 0, 1, 0 );
                            TASK_SHOOT_AT_PED( 0, sub_1537(), -1, 0, 0, 0, 0 );
                        }
                    }
                    else if (I == 1)
                    {
                        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
                        if (NOT (IS_PED_DEAD( sub_1537() )))
                        {
                            TASK_GO_TO_PED_WHILE_AIMING_AT_PED( 0, sub_1537(), sub_1537(), 3, 1, 1.00000000, 1.00000000, 1, 0 );
                            TASK_MELEE_LITE( 0, sub_1537(), 1 );
                            TASK_COMBAT_PED( 0, sub_1537() );
                            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
                        }
                    }
                    else
                    {
                        SET_PED_VISIBLE( l_U555[I], 1 );
                        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
                        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U621[1], 3, 20000, 1048576000, 0, 0 );
                        TASK_GO_STRAIGHT_TO_COORD( 0, l_U621[2], 3, 20000 );
                    }
                    CLOSE_SEQUENCE_TASK( l_U360 );
                    if (NOT (IS_PED_DEAD( l_U555[I] )))
                    {
                        TASK_PERFORM_SEQUENCE( l_U555[I], l_U360 );
                        CLEAR_SEQUENCE_TASK( l_U360 );
                    }
                }
                l_U26 = 1;
            }
        }
        sub_19325();
    }
    return;
}

void sub_16081()
{
    sub_6052( ref l_U484[0], 104.76000000, -163.72000000, -1.86000000, 88.04000000, sub_5983(), 7, 3, 2, 0, 0 );
    sub_6052( ref l_U484[1], 88.61000000, -159.75000000, 1.56000000, -84.05000000, sub_5983(), 7, 3, 2, 0, 0 );
    sub_6052( ref l_U515[0], 119.96000000, -155.59000000, -0.29000000, 177.35000000, sub_5983(), 7, 3, 2, 0, 0 );
    sub_6052( ref l_U515[1], 120.08000000, -153.31000000, -0.13000000, 176.55000000, sub_5983(), 7, 3, 2, 0, 0 );
    sub_6052( ref l_U515[2], 109.40000000, -160.51000000, 1.51000000, 89.55000000, sub_5983(), 7, 3, 2, 0, 0 );
    sub_6052( ref l_U559[0], 122.99000000, -163.48000000, 1.91000000, 87.07000000, sub_5983(), 7, 3, 2, 0, 0 );
    sub_6052( ref l_U559[1], 121.50000000, -153.74000000, -0.33000000, 153.49000000, sub_5983(), 7, 3, 2, 0, 0 );
    sub_6052( ref l_U559[2], 120.73000000, -172.05000000, 4.79000000, -3.77999000, sub_5983(), 7, 3, 2, 0, 0 );
    sub_334( ref l_U280, "TGR_CNR_ENEMIES", 88.95000000, -176.08000000, -9.86000000, 15.00000000, 15.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_334( ref l_U301, "TGR_ALLEY_ENEMIES_WV_1", 91.77000000, -162.73000000, -3.04000000, 6.00000000, 6.00000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_334( ref l_U322, "TGR_ALLEY_ENEMIES_WV_2", 107.76000000, -162.73000000, -3.04000000, 6.00000000, 6.00000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_726( ref l_U349, "THR_BALCONY", 119.61000000, -163.51000000, 1.14000000, 6.00000000, 6.00000000, 2.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    return;
}

void sub_16758()
{
    int I;

    sub_203( "SA", "P_LOWER_SETUP_ENEMIES", "###" );
    for ( I = 0; I < 2; I++ )
    {
        sub_6263( l_U481[I] );
        l_U481[I] = sub_6516( ref l_U484[I] );
        if (NOT (IS_PED_DEAD( l_U481[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U481[I], 1 );
            SET_PED_CAN_TRIGGER_BULLET_CAM( l_U481[I], 1 );
            SET_PED_AI_TEMPLATE( l_U481[I], "AIT_NORMAL" );
            if (I == 0)
            {
                SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( l_U481[I], 0 );
                sub_1593( l_U481[I], -862236369, 25000, 0, 0 );
            }
            else
            {
                SET_PED_AS_ONE_SHOT_KILL( l_U481[I], 1 );
                SET_PED_COMBAT_MOVEMENT( l_U481[I], 0 );
                sub_1593( l_U481[I], -1074756423, 25000, 0, 0 );
            }
            sub_11435( l_U481[I], ref l_U643 );
        }
    }
    sub_8873( ref l_U481, "EnemyCorner_" );
    for ( I = 0; I < 3; I++ )
    {
        sub_6263( l_U511[I] );
        l_U511[I] = sub_6516( ref l_U515[I] );
        if (NOT (IS_PED_DEAD( l_U511[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U511[I], 1 );
            SET_PED_AI_TEMPLATE( l_U511[I], "AIT_NORMAL" );
            SET_PED_CAN_TRIGGER_BULLET_CAM( l_U511[I], 1 );
            if (I == 1)
            {
                SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( l_U511[I], 0 );
                sub_1593( l_U511[I], -862236369, 25000, 0, 0 );
            }
            else if (I == 2)
            {
                SET_PED_AS_ONE_SHOT_KILL( l_U511[I], 1 );
                SET_PED_COMBAT_MOVEMENT( l_U511[I], 0 );
                sub_1593( l_U511[I], -1074756423, 25000, 0, 0 );
            }
            else
            {
                sub_1593( l_U511[I], -862236369, 25000, 0, 0 );
            }
            sub_11435( l_U511[I], ref l_U643 );
        }
    }
    sub_8873( ref l_U511, "EnemyAlleyWave1_" );
    for ( I = 0; I < 3; I++ )
    {
        sub_6263( l_U555[I] );
        l_U555[I] = sub_6516( ref l_U559[I] );
        if (NOT (IS_PED_DEAD( l_U555[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U555[I], 1 );
            SET_PED_AI_TEMPLATE( l_U555[I], "AIT_NORMAL" );
            SET_PED_CAN_TRIGGER_BULLET_CAM( l_U555[I], 1 );
            if (I == 0)
            {
                SET_PED_COMBAT_MOVEMENT( l_U555[I], 0 );
                sub_1593( l_U555[I], -1074756423, 25000, 0, 0 );
                sub_8621( ref l_U349, l_U555[I], 1 );
            }
            else if (I == 1)
            {
                sub_1593( l_U555[I], 1194438308, 25000, 0, 0 );
            }
            else
            {
                SET_PED_VISIBLE( l_U555[I], 0 );
                SET_PED_AS_ONE_SHOT_KILL( l_U555[I], 1 );
            }
            sub_11435( l_U555[I], ref l_U643 );
        }
    }
    sub_8873( ref l_U555, "EnemyAlleyWave2_" );
    return;
}

void sub_18790(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

void sub_19325()
{
    if (NOT l_U28)
    {
        if (NOT (IS_PED_DEAD( l_U481[0] )))
        {
            if (IS_PED_USING_MP3_COVER_TASK( l_U481[0] ))
            {
                sub_203( "SA", "Setting EnemyCorner_0 Target Ped", "###" );
                SET_PED_COVER_TARGET_PED( l_U481[0], sub_1537() );
                l_U28 = 1;
            }
        }
    }
    if (NOT l_U29)
    {
        if (NOT (IS_PED_DEAD( l_U511[0] )))
        {
            if (IS_PED_USING_MP3_COVER_TASK( l_U511[0] ))
            {
                sub_203( "SA", "Setting EnemyAlleyWave1_0 Target Ped", "###" );
                SET_PED_COVER_TARGET_PED( l_U511[0], sub_1537() );
                l_U29 = 1;
            }
        }
    }
    if (NOT l_U30)
    {
        if (NOT (IS_PED_DEAD( l_U511[1] )))
        {
            if (IS_PED_USING_MP3_COVER_TASK( l_U511[1] ))
            {
                sub_203( "SA", "Setting EnemyAlleyWave1_1 Target Ped", "###" );
                SET_PED_COVER_TARGET_PED( l_U511[1], sub_1537() );
                l_U30 = 1;
            }
        }
    }
    return;
}

void sub_19806()
{
    if (IS_BUTTON_PRESSED( 0, 11 ))
    {
        if (l_U6 == 1)
        {
            l_U4 = 1;
        }
        else if (l_U7 == 1)
        {
            l_U5 = 1;
        }
        else
        {
            l_U3 = 1;
        }
    }
    if (IS_BUTTON_PRESSED( 0, 10 ))
    {
        if (l_U6 == 1)
        {
            l_U5 = 1;
        }
        else if (l_U8 == 1)
        {
            l_U4 = 1;
        }
        else
        {
            l_U3 = 1;
        }
    }
    if ((IS_BUTTON_PRESSED( 0, 19 )) AND (IS_BUTTON_PRESSED( 0, 18 )))
    {
        DEACTIVATE_BULLET_TIME( 1, 0 );
        l_U9 = 1;
    }
    return;
}


void main()
{
    l_U0 = 1;
    l_U1 = 144;
    StrCopy( ref l_U2, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U10, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U19 = 0;
    l_U20 = 0;
    l_U21 = 1500;
    l_U41 = 0;
    l_U42 = 0;
    l_U79 = 0;
    l_U80 = 0;
    l_U81 = 0;
    l_U82 = 1;
    l_U83 = 0;
    l_U84 = 0;
    l_U85 = 0;
    l_U396 = 1;
    l_U398 = 500;
    l_U436 = {-67.39100000, -26.72700000, 14.91400000};
    l_U439 = {0.00000000, 0.00000000, 0.62800000};
    l_U443 = -1;
    l_U445 = {-67.50000000, -17.60000000, 13.69000000};
    l_U448 = {0.00000000, -1.00000000, 0.00000000};
    l_U452 = {-65.89400000, -20.59400000, 13.77000000};
    l_U455 = {0.10122700, -0.99486300, 0.00000000};
    StrCopy( ref l_U458, "Room_fav1_cpt_a_01", 32 );
    l_U466 = 0;
    l_U467 = 0;
    l_U469 = 1;
    l_U580 = {-62.20000000, -15.66000000, 16.86000000};
    l_U583 = 65441;
    l_U584 = 0;
    l_U629 = 0;
    sub_442( "SP", "Script s_fav1_DrugDen.sc is starting...", "###" );
    sub_491();
    sub_3290();
    if (l_U79 == 0)
    {
        if ((sub_4963( ref l_U43 )) == 0)
        {
            if (g_U1048 == 9)
            {
                sub_7291( sub_2799(), g_U1816, 200, 0, 1 );
            }
        }
        l_U79 = 1;
    }
    g_U770 = 1;
    while (g_U770 == 1)
    {
        sub_9229();
        sub_12659();
        WAIT( 0 );
    }
    sub_11265();
    sub_33573();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_fav1_DrugDen" );
    sub_442( "SP", "Script s_fav1_DrugDen.sc is terminating...", "###" );
    return;
}

void sub_442(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_491()
{
    sub_442( "SP", "P_SETUP_STATIC_DATA", "###" );
    sub_579( ref l_U303[0], -67.32000000, -16.03000000, 13.77000000, -179.36000000, -1560780798, 7, 3, 2, 0, 0 );
    sub_579( ref l_U303[1], -61.89900000, -15.26000000, 13.77900000, 150.63700000, 963313006, 7, 3, 2, 0, 0 );
    sub_579( ref l_U303[2], -66.91900000, -20.10700000, 13.79131000, 90.63700000, -2039799822, 7, 3, 2, 0, 0 );
    sub_579( ref l_U303[3], -67.50000000, -17.60000000, 13.77000000, -99.36000000, -1383638755, 7, 3, 2, 0, 0 );
    sub_579( ref l_U366[0], -58.67324000, -17.51710000, 13.79131000, 180.00000000, 203197516, 7, 3, 2, 0, 0 );
    sub_579( ref l_U366[1], -65.17994000, -9.83975600, 13.79132000, 180.00000000, 950321913, 7, 3, 2, 0, 0 );
    sub_976( ref l_U105, "tbCocaineWalk", -62.20000000, -10.03000000, 13.23000000, 3.00000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, -90.04000000, 1 );
    sub_976( ref l_U126, "tbCocaineEnd", -62.20000000, -9.24000000, 13.23000000, 1.00000000, 1.80000000, 5.00000000, 0.00000000, 0.00000000, -90.04000000, 1 );
    sub_976( ref l_U147, "tbMID_06B", -68.77000000, -36.60000000, 12.00000000, 2.53000000, 2.00000000, 5.00000000, 0.00000000, 0.00000000, -13.69000000, 1 );
    sub_976( ref l_U168, "tbReleaseCover", -67.87000000, -24.11000000, 13.23000000, 3.00000000, 9.19000000, 5.00000000, 0.00000000, 0.00000000, -90.04000000, 1 );
    sub_1341( ref l_U198, "teHangBack", -66.18000000, -15.73000000, 12.00000000, 14.91000000, 6.74000000, 5.00000000, 0.00000000, 0.00000000, -26.75000000, 1 );
    sub_1463( ref l_U199, 1, -61.72000000, -8.86000000, 14.85000000, -62.20000000, -8.86000000, 14.81000000, -62.20000000, -8.86000000, 14.81000000, 1069547520, 1077936128, 1, 1 );
    sub_2311( ref l_U199, 30, "POI_OPENDOOR" );
    sub_2472( ref l_U199, 0 );
    l_U444 = ADD_SPATIALDATA_COVER_POINT( "CP_Table", l_U445, l_U448, 0.93000000, 0, 0 );
    return;
}

void sub_579(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_976(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_1341(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_1463(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
    sub_1478( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
    sub_1846( iParam0 );
    return;
}

void sub_1478(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_1846(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_1925( iParam0 );
    return;
}

void sub_1925(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_1984( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_1984( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_1984( iParam0, 1 );
            }
            else
            {
                sub_1984( iParam0, 0 );
            };;;
        }
        else
        {
            sub_1984( iParam0, 0 );
        }
    }
    else
    {
        sub_1984( iParam0, 0 );
    }
    return;
}

void sub_1984(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_2311(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_2342( iParam0 );
    return;
}

void sub_2342(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_2472(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_1984( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_1984( iParam0, 0 );
        sub_2543( iParam0, 0 );
        if ((IS_PED_DEAD( sub_2799() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_2799() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_2799(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_2543(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_2694( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_2694(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_2755( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_2755( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_2755(int iParam0)
{
    if (((IS_PED_DEAD( sub_2799() )) == 0) AND ((IS_PLAYER_DEAD( sub_2765() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_2799() )) == 1) || (((IS_PED_GETTING_UP( sub_2799() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_2799() )) == 1) || (((IS_PED_IN_COVER( sub_2799() )) == 1) || (((IS_PED_DUCKING( sub_2799() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_2799() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_2765()
{
    return GET_PLAYER_ID();
}

int sub_2799()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_2765() );
    }
    return 0;
}

void sub_3290()
{
    sub_442( "SP", "INITIALIZE_SCRIPT_DATA", "###" );
    l_U471[0] = sub_3386( -4072149, -58.16000000, -15.75000000, 14.77000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0, 1119092736 );
    if (DOES_PLACEMENT_EXIST( l_U471[0] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U471[0], ref g_U1759 );
    }
    if (DOES_PLACEMENT_EXIST( l_U471[1] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U471[1], ref g_U1759 );
    }
    sub_3565( ref g_U1657, 1 );
    sub_3768( ref g_U1657, 1 );
    sub_3565( ref g_U1678, 1 );
    sub_3768( ref g_U1678, 1 );
    l_U466 = 0;
    l_U396 = 1;
    l_U467 = 0;
    l_U468 = 1;
    l_U469 = 1;
    l_U584 = 0;
    l_U82 = 1;
    l_U83 = 0;
    l_U84 = 0;
    l_U85 = 0;
    g_U783 = 0;
    l_U80 = 0;
    sub_3999( ref l_U399, l_U398, 1, 0 );
    sub_3999( ref l_U605, 60000, 1, 0 );
    sub_3999( ref l_U614, 25000, 1, 0 );
    sub_1463( ref l_U484, 2, 0.00000000, 0.00000000, 0.00000000, -60.31000000, -15.57000000, 14.89000000, -60.31000000, -15.57000000, 14.89000000, 1069547520, 1077936128, 1, 1 );
    sub_1984( ref l_U484, 0 );
    sub_2311( ref l_U484, 30, "POI_F1DRUGS" );
    sub_4271( ref l_U484, 0 );
    sub_4303( ref l_U484, 0 );
    sub_4363( ref l_U484, 1 );
    sub_3999( ref l_U408, 2200, 1, 0 );
    sub_4408( ref l_U189 );
    sub_4519();
    AUDIO_MUSIC_REQUEST_ONESHOT( "FAVELA_1_ONESHOT_6", 0 );
    return;
}

void sub_3386(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_3565(int iParam0, int iParam1)
{
    if ((sub_3577( iParam0 )) == 0)
    {
        sub_3643( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

int sub_3577(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_3643(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_3768(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_3577( iParam0 )) == 0)
    {
        sub_3643( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

void sub_3999(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_4271(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

void sub_4303(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
    sub_2694( iParam0 );
    return;
}

void sub_4363(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

void sub_4408(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_4519()
{
    sub_442( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U623 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( 33755758 )))
    {
        sub_442( "CCB", "Creating the TheTurtle script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( 33755758 );
        if (SCRIPT_VAR_HASH_EXISTS( 33755758 ))
        {
            sub_442( "CCB", "The TheTurtle script variable was successfully created...", 0 );
        }
        else
        {
            sub_442( "CCB", "The TheTurtle script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
        sub_442( "CCB", "The TheTurtle script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( 33755758, 0 );
    }
    return;
}

int sub_4963(unknown uParam0)
{
    sub_442( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_5093( uParam0, sub_2799() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_5093(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_442( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_5277( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_6354( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_6646( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_7006( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_6646( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_7006( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_6646( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_7006( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_7291( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_7006( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_7291( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_7006( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_7784( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_7945( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_2799(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_442( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_5277(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_5309( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_5309(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_6354(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_6646(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_6962( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_6962(unknown uParam0)
{
    return;
}

void sub_7006(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_7291(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_6962( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_7784(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_7945(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_5309( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_8017( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_8017(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_9229()
{
    if (g_U1049 == 9)
    {
        switch (l_U81)
        {
            case 0:
            if ((sub_9323()) || (IS_PED_DEAD( sub_2799() )))
            {
                l_U81 = 1;
                sub_442( "kja", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_9818())
            {
                sub_9847( 0 );
                l_U81 = 2;
            }
            else if ((sub_9951( 0 )) == 1)
            {
                l_U81 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_2799() )))
            {
                l_U81 = 3;
                sub_442( "kja", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_442( "kja", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((IS_PLAYER_DEAD( sub_2765() )) == 0)
            {
                SET_PLAYER_CONTROL( sub_2765(), 0, 0 );
            }
            if (IS_DEATH_PANEL_WIPE_ALLOWED() == 0)
            {
                sub_11187( 0 );
            }
            sub_11265();
            STOP_SCRIPT_STREAM( 1 );
            l_U81 = 4;
            sub_442( "kja", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_442( "kja", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_5093( ref l_U43, sub_2799() );
            l_U81 = 5;
            sub_442( "kja", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_442( "kja", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            sub_491();
            sub_3290();
            l_U81 = 0;
            sub_442( "kja", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_9323()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_2799() )))
        {
            SET_PED_FORCED_TO_WALK( sub_2799(), 0 );
            SET_PLAYER_FORCED_AIM( sub_2765(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_2765(), 1 );
            if ((IS_PED_VISIBLE( sub_2799() )) == 0)
            {
                SET_PED_VISIBLE( sub_2799(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_9818()
{
    return g_U648;
}

void sub_9847(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

int sub_9951(int iParam0)
{
    iParam0 = 1;
    switch (l_U20)
    {
        case 0:
        if (NOT (sub_10008( ref l_U22 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_2799() )))
            {
                l_U21 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_3999( ref l_U22, l_U21, 1, 1 );
            sub_10119( ref l_U22 );
        }
        if (sub_10237( ref l_U22 ))
        {
            sub_442( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_2799() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_2765() )))
            {
                SET_PLAYER_CONTROL( sub_2765(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U20 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U20 = 2;
            }
            else
            {
                l_U20 = 3;
            }
        }
        break;
        case 2:
        sub_442( "NS", "Player will QUIT", 0 );
        sub_10718();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_442( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_10718();
        return 1;
        break;
    }
    return 0;
}

int sub_10008(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_10119(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_10237(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_10718()
{
    sub_442( "NS", "P_PostFailRetryCleanup", 0 );
    sub_4408( ref l_U22 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_2765() )))
    {
        SET_PLAYER_CONTROL( sub_2765(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U19 = 0;
    l_U19 = l_U19;
    l_U20 = 0;
    return;
}

void sub_11187(unknown uParam0)
{
    if ((IS_SCREEN_FADING_OUT() == 0) AND (IS_SCREEN_FADED_OUT() == 0))
    {
        DO_SCREEN_FADE_OUT( uParam0 );
        while (IS_SCREEN_FADED_OUT() == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_11265()
{
    sub_442( "SP", "P_CLEANUP_ALL", "###" );
    if (sub_11313( l_U585 ))
    {
        sub_11479( ref l_U585, 0 );
    }
    if (sub_11313( l_U595 ))
    {
        sub_11479( ref l_U595, 0 );
    }
    sub_11602( l_U470 );
    sub_11649( ref l_U471 );
    sub_11710( ref l_U356 );
    sub_11710( ref l_U393 );
    sub_11851( g_U856 );
    sub_11851( l_U435 );
    ISEQ_TERMINATE( 1285840791 );
    if (l_U444 != l_U443)
    {
        REMOVE_SPATIALDATA_COVER_POINT( l_U444 );
        l_U444 = l_U443;
    }
    if (l_U451 != l_U443)
    {
        REMOVE_SPATIALDATA_COVER_POINT( l_U451 );
        l_U451 = l_U443;
    }
    CLEAR_NAMED_CUTSCENE( "MID_05b_FAV1_concat" );
    sub_12023( 1156505411 );
    sub_4408( ref l_U605 );
    sub_4408( ref l_U614 );
    sub_4408( ref l_U399 );
    sub_4408( ref l_U408 );
    sub_4408( ref l_U417 );
    sub_4408( ref l_U426 );
    sub_12213();
    return;
}

int sub_11313(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_11326( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

boolean sub_11326(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_11479(int iParam0, unknown uParam1)
{
    if (NOT (sub_11326( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

void sub_11602(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_11649(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_11602( (uParam0^)[I] );
    }
    return;
}

void sub_11710(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_11744( (uParam0^)[I] );
    }
    return;
}

void sub_11744(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_11851(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_12023(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_6962( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_12213()
{
    sub_442( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    sub_442( "CCB", "Stopping the Favela_Drug_Den context...", 0 );
    END_CONTEXT( "Favela_Drug_Den" );
    return;
}

void sub_12659()
{
    sub_12669();
    switch (l_U80)
    {
        case 0:
        if (g_U1049 < 9)
        {
            sub_13030( 0 );
            l_U80 = 2;
        }
        else
        {
            DO_SCREEN_FADE_OUT( 0 );
            sub_13886();
            l_U80 = 1;
        }
        sub_14147();
        sub_14232( "SFV1AUD" );
        break;
        case 1:
        if (sub_14349())
        {
            l_U442 = DOOR_FIND_CLOSEST( g_U1671._fU0, g_U1671._fU4 );
            sub_14554();
            sub_17016();
            l_U80 = 4;
        }
        break;
        case 2:
        if ((DOES_OBJECT_EXIST( l_U442 )) == 0)
        {
            l_U442 = DOOR_FIND_CLOSEST( g_U1671._fU0, g_U1671._fU4 );
            sub_442( "NS", "waiting for handle to door", 0 );
        }
        if (sub_17547( ref l_U147, 0 ))
        {
            g_U768 = 0;
            sub_17699();
            sub_17016();
            l_U80 = 3;
        }
        break;
        case 3:
        if (sub_18416() == 1)
        {
            l_U80 = 4;
            break;
        }
        return;
        case 4:
        sub_21193( ref l_U356 );
        if (DOES_OBJECT_EXIST( g_U856 ))
        {
            SET_OBJECT_VISIBLE( g_U856, 1 );
        }
        if (NOT (IS_PED_DEAD( l_U356[2] )))
        {
            TASK_COMBAT_SNAP_TO_COVER( l_U356[2], "GenCover", "220971D_D680D911_Popover1", 0 );
            SET_PED_FLAG_LOCK_TO_COVER( l_U356[2], 1 );
        }
        if (NOT (IS_PED_DEAD( l_U356[3] )))
        {
            TASK_COMBAT_SNAP_TO_COVER( l_U356[3], "SCRIPT", "CP_Table", 0 );
            SET_PED_FLAG_LOCK_TO_COVER( l_U356[3], 1 );
        }
        if (g_U1049 == 9)
        {
            if (NOT (IS_PED_DEAD( sub_2799() )))
            {
                sub_442( "NS", "Player not playing the blend out iseq", 0 );
                sub_21644( sub_2799(), -69.17973000, -27.61078000, 13.77209000, -90.00000000 );
                if (NOT (IS_PED_IN_COVER( sub_2799() )))
                {
                    SNAP_PLAYER_TO_COVERPOINT( sub_2765(), "GenCover", "220971D_9C79663B_Corner2", 0 );
                }
                ISEQ_REGISTER_ENTITY( 1285840791, "player", sub_2799(), 0 );
                l_U104 = GET_WEAPON_FROM_HAND( sub_2799(), 0, 0 );
                if (sub_21823( l_U104 ))
                {
                    PED_SET_ACTION_INTENTION( sub_2799(), 48, 5000, 0.00000000, 0.00000000, 0.00000000 );
                }
                else
                {
                    PED_SET_ACTION_INTENTION( sub_2799(), 47, 5000, 0.00000000, 0.00000000, 0.00000000 );
                }
            }
            sub_3565( ref g_U1671, 1 );
            if (DOES_OBJECT_EXIST( g_U856 ))
            {
                SET_OBJECT_COORDS( g_U856, g_U857 );
                SET_OBJECT_ROTATION( g_U856, g_U860 );
            }
            ISEQ_REGISTER_ENTITY( 1285840791, "ENEMY0", l_U356[0], 0 );
            ISEQ_REGISTER_ENTITY( 1285840791, "ENEMY1", l_U356[2], 0 );
            ISEQ_REGISTER_ENTITY( 1285840791, "ENEMY2", l_U356[1], 0 );
            ISEQ_REGISTER_ENTITY( 1285840791, "ENEMY3", l_U356[3], 0 );
            ISEQ_REGISTER_ENTITY( 1285840791, "TABLE", g_U856, 1 );
            ISEQ_REGISTER_ENTITY( 1285840791, "DOOR", l_U435, 1 );
            if (DOES_OBJECT_EXIST( g_U856 ))
            {
                SET_OBJECT_VISIBLE( g_U856, 1 );
            }
            if (NOT (IS_PED_DEAD( l_U356[2] )))
            {
                TASK_COMBAT_SNAP_TO_COVER( l_U356[2], "GenCover", "220971D_D680D911_Popover1", 0 );
                SET_PED_FLAG_LOCK_TO_COVER( l_U356[2], 1 );
            }
            if (NOT (IS_PED_DEAD( l_U356[3] )))
            {
                TASK_COMBAT_SNAP_TO_COVER( l_U356[3], "SCRIPT", "CP_Table", 0 );
                SET_PED_FLAG_LOCK_TO_COVER( l_U356[3], 1 );
            }
            ISEQ_START( 1285840791 );
        }
        PLAY_SCRIPT_STREAM_FRONTEND( 1 );
        sub_3999( ref l_U417, 3000, 1, 0 );
        sub_10119( ref l_U417 );
        sub_3999( ref l_U426, 4500, 1, 0 );
        sub_10119( ref l_U417 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_FAV1_CP_07", "B_OUT_MID_05B_F1_CAM", 1, -69.20100000, -29.65921000, 15.42400000, 180.00000000, 0, 0 );
        sub_442( "NS", "Setting Hud Off", 0 );
        DISPLAY_HUD( 0 );
        l_U80 = 5;
        break;
        case 5:
        sub_22803();
        sub_10119( ref l_U408 );
        if ((l_U43._fU0 == 0) || (g_U1049 < 9))
        {
            g_U1049 = 9;
            sub_23183( ref l_U43, g_U1049, sub_2799(), g_U1050[9], g_U1174[9], g_U1216[9], g_U1258[9], 1 );
        }
        l_U80 = 6;
        break;
        case 6:
        if (sub_10237( ref l_U417 ))
        {
            if (NOT (IS_PED_DEAD( l_U356[2] )))
            {
                SET_PED_FLAG_LOCK_TO_COVER( l_U356[2], 0 );
            }
        }
        if (sub_10237( ref l_U426 ))
        {
            if (NOT (IS_PED_DEAD( l_U356[3] )))
            {
                SET_PED_FLAG_LOCK_TO_COVER( l_U356[3], 0 );
            }
        }
        if (sub_17547( ref l_U168, 0 ))
        {
            if (NOT (IS_PED_DEAD( l_U356[2] )))
            {
                SET_PED_FLAG_LOCK_TO_COVER( l_U356[2], 0 );
            }
            if (NOT (IS_PED_DEAD( l_U356[3] )))
            {
                SET_PED_FLAG_LOCK_TO_COVER( l_U356[3], 0 );
            }
            if (l_U396 == 0)
            {
                sub_27011();
                l_U396 = 1;
            }
            g_U778 = 1;
        }
        if (l_U396 == 0)
        {
            if ((sub_27226( ref l_U356 )) == 0)
            {
                sub_27011();
                l_U396 = 1;
            }
        }
        if (l_U468)
        {
            if (((TO_FLOAT( CAMERA_ANIMATED_CURRENT_TIME() )) / (TO_FLOAT( CAMERA_ANIMATED_LENGTH( "LEVEL_S_FAV1_CP_07", "B_OUT_MID_05B_F1_CAM" ) ))) > 0.53737700)
            {
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( 85.00000000, 1065353216, 0 );
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( 0, 1065353216, 0 );
                if (DOES_OBJECT_EXIST( l_U442 ))
                {
                    SET_OBJECT_VISIBLE( l_U442, 1 );
                    SET_OBJECT_COLLISION( l_U442, 1 );
                }
                sub_11851( l_U435 );
                sub_16235( ref g_U1671, 1, 1, 0.72500000 );
                CAMERA_ANIMATED_STOP( 1000, 1 );
                sub_10119( ref l_U399 );
                l_U468 = 0;
            }
        }
        if (l_U469 == 1)
        {
            if ((ISEQ_QUERY_STATE( 1285840791, 3 )) == 0)
            {
                sub_442( "NS", "update table flip", 0 );
                if (DOES_OBJECT_EXIST( g_U856 ))
                {
                    sub_442( "NS", "table exists", 0 );
                    FORCE_UPDATE_OBJECT_PHYSICAL_STATE( g_U856 );
                    l_U469 = 0;
                }
            }
        }
        if (sub_10237( ref l_U408 ))
        {
            sub_442( "SA", "ONESHOT", 0 );
            AUDIO_MUSIC_PLAY_ONESHOT();
        }
        if (sub_10237( ref l_U399 ))
        {
            DISPLAY_HUD( 1 );
            if (NOT (IS_PLAYER_DEAD( sub_2765() )))
            {
                SET_PLAYER_CONTROL( sub_2765(), 1, 0 );
            }
        }
        if (l_U466 == 0)
        {
            if (sub_27777())
            {
                l_U466 = 1;
            }
        }
        if ((IS_BULLET_CAMERA_ACTIVE() == 0) AND ((sub_27787() == 0) AND (l_U466 == 1)))
        {
            l_U467 = 1;
            l_U466 = 0;
            sub_4303( ref l_U484, 1 );
            sub_10119( ref l_U605 );
            sub_10119( ref l_U614 );
        }
        if (sub_10237( ref l_U605 ))
        {
            if (NOT (IS_PED_DEAD( sub_2799() )))
            {
                if ((IS_PLAYER_CONTROL_ON( sub_2765() )) AND (NOT (IS_SCRIPTED_SPEECH_PLAYING( sub_2799() ))))
                {
                    sub_28320( ref l_U585 );
                    sub_28402( 0, sub_2799(), "MAX", ref l_U585, 2, 0 );
                    sub_28402( 1, sub_2799(), "MAX", ref l_U585, 2, 0 );
                    sub_28644( "SFV1_MXDRWDG", ref l_U585, 2, 1 );
                }
            }
        }
        if (sub_10237( ref l_U614 ))
        {
            if (NOT (IS_PED_DEAD( sub_2799() )))
            {
                if ((IS_PLAYER_CONTROL_ON( sub_2765() )) AND (NOT (IS_SCRIPTED_SPEECH_PLAYING( sub_2799() ))))
                {
                    sub_28320( ref l_U595 );
                    sub_28402( 0, sub_2799(), "MAX", ref l_U595, 2, 0 );
                    sub_28402( 1, sub_2799(), "MAX", ref l_U595, 2, 0 );
                    sub_28644( "SFV1_DTLDRG", ref l_U595, 2, 1 );
                }
            }
        }
        if ((sub_29572( ref l_U484 )) == 1)
        {
            sub_28320( ref l_U474 );
            sub_28402( 0, sub_2799(), "MAX", ref l_U474, 2, 0 );
            sub_28402( 1, sub_2799(), "MAX", ref l_U474, 2, 0 );
            sub_28644( "EXPLORE_ITEM", ref l_U474, 8, 1 );
        }
        if (sub_29909( ref l_U484 ))
        {
            if (sub_11313( l_U585 ))
            {
                sub_11479( ref l_U585, 0 );
            }
            else if ((NOT l_U605._fU16) AND (l_U605._fU20))
            {
                sub_442( "SA", "pausing tmrSFV1_MXDRWDG", 0 );
                sub_31741( ref l_U605, 1 );
            }
            if (sub_11313( l_U595 ))
            {
                sub_11479( ref l_U595, 0 );
            }
            else if ((NOT l_U614._fU16) AND (l_U614._fU20))
            {
                sub_442( "SA", "pausing tmrSFV1_DTLDRG", 0 );
                sub_31741( ref l_U614, 1 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_2765() )))
            {
                SET_PLAYER_CONTROL( sub_2765(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAM_GND_25_F_CAM", 1, l_U580, l_U583, 0, 0 );
            if (NOT (IS_PED_DEAD( sub_2799() )))
            {
                SET_PED_VISIBLE( sub_2799(), 0 );
            }
            if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "sfav1_Oxidado" )))
            {
                FOUND_EXPLORATION_ITEM( "sfav1_Oxidado" );
                sub_9847( 0 );
                sub_28320( ref l_U570 );
                sub_28402( 0, sub_2799(), "MAX", ref l_U570, 2, 0 );
                sub_28402( 1, sub_2799(), "MAX", ref l_U570, 2, 0 );
                sub_28644( "SFV1_OXDADA", ref l_U570, 8, 1 );
            }
            l_U584 = 1;
        }
        if (l_U584 == 1)
        {
            if (CAMERA_ANIMATED_CURRENT_TIME() > ((CAMERA_ANIMATED_LENGTH( "EXPL_CAM", "EXPL_CAM_GND_25_F_CAM" )) - 200))
            {
                if ((NOT l_U614._fU16) AND (l_U614._fU8 > 0))
                {
                    sub_442( "SA", "resuming tmrSFV1_DTLDRG", 0 );
                    sub_4408( ref l_U614 );
                    sub_10119( ref l_U614 );
                }
                if ((NOT l_U605._fU16) AND (l_U605._fU8 > 0))
                {
                    sub_442( "SA", "resuming tmrSFV1_MXDRWDG", 0 );
                    sub_4408( ref l_U605 );
                    sub_10119( ref l_U605 );
                }
                if (NOT (IS_PED_DEAD( sub_2799() )))
                {
                    SET_PLAYER_CONTROL( sub_2765(), 1, 0 );
                    SET_PED_VISIBLE( sub_2799(), 1 );
                }
                CAMERA_ANIMATED_STOP( 0, 0 );
                DISPLAY_HUD( 1 );
                sub_2472( ref l_U484, 1 );
                l_U584 = 0;
            }
        }
        if (l_U467 == 1)
        {
            if (sub_32673( l_U105 ))
            {
                if (NOT (IS_PED_DEAD( sub_2799() )))
                {
                    if ((GET_IS_PED_FORCED_TO_WALK( sub_2799() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_2799(), 1 );
                    }
                }
            }
            else if (NOT (IS_PED_DEAD( sub_2799() )))
            {
                if ((GET_IS_PED_FORCED_TO_WALK( sub_2799() )) == 1)
                {
                    SET_PED_FORCED_TO_WALK( sub_2799(), 0 );
                }
            }
            if (sub_17547( ref l_U126, 0 ))
            {
                if (IS_BULLET_CAMERA_ACTIVE() == 0)
                {
                    g_U783 = 1;
                    sub_3999( ref l_U189, 2000, 1, 0 );
                    sub_10119( ref l_U189 );
                }
            }
            if ((sub_10237( ref l_U189 )) == 1)
            {
                g_U770 = 0;
                l_U467 = 0;
            }
            sub_32901( 1 );
        }
        if (DOES_SPATIALDATA_COVER_POINT_EXIST( l_U444 ))
        {
            if (HAS_OBJECT_BEEN_DAMAGED( g_U856 ))
            {
                if (NOT (IS_PED_DEAD( l_U356[3] )))
                {
                    SET_PED_FLAG_LOCK_TO_COVER( l_U356[3], 0 );
                }
                REMOVE_SPATIALDATA_COVER_POINT( l_U444 );
            }
        }
        sub_33367();
        break;
    }
    return;
}

void sub_12669()
{
    switch (l_U623)
    {
        case 0:
        sub_442( "CCB", "eTheTurtle - STATE_CHALLENGE_IDLE", 0 );
        l_U623 = 1;
        break;
        case 1:
        if (l_U80 >= 6)
        {
            if (NOT (IS_PED_DEAD( sub_2799() )))
            {
                if (NOT (IS_PED_USING_MP3_COVER_TASK( sub_2799() )))
                {
                    sub_442( "CCB", "The player ped is not using cover...", 0 );
                    sub_442( "CCB", "eTheTurtle - STATE_CHALLENGE_COMPLETE", 0 );
                    l_U623 = 2;
                }
            }
        }
        break;
        case 2: break;
    }
    return;
}

void sub_13030(unknown uParam0)
{
    sub_442( "NS", "P_LOAD_PRE_CUTSCENE_ASSESTS", 0 );
    sub_13088( -107944300, uParam0 );
    sub_13088( 1156505411, uParam0 );
    sub_13088( 1907001043, uParam0 );
    sub_13088( -1193489045, uParam0 );
    sub_13088( -502497534, uParam0 );
    sub_13325( "MID_05b_FAV1_concat", uParam0 );
    sub_13580( 1285840791, uParam0 );
    sub_13788( "EXPL_CAM", 0, 0 );
    return;
}

void sub_13088(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_6962( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_13325(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_13580(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_13788(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_13886()
{
    sub_442( "NS", "P_REQUEST_GAMEPLAY_ASSETS", "###" );
    sub_13088( -107944300, 0 );
    sub_13088( 1156505411, 0 );
    sub_13088( 1907001043, 0 );
    sub_13088( -1193489045, 0 );
    sub_13088( -502497534, 0 );
    sub_13580( 1285840791, 0 );
    sub_13788( "EXPL_CAM", 0, 0 );
    sub_14058( "S_FAV1_MID_05B_FAV1_BLENDOUT_", 1, 0 );
    return;
}

void sub_14058(unknown uParam0, unknown uParam1, int iParam2)
{
    if (iParam2 == 0)
    {
        REQUEST_SCRIPT_STREAM( uParam0, uParam1 );
    }
    else
    {
        while ((LOAD_SCRIPT_STREAM( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_14147()
{
    sub_442( "NS", "P_RESET_MAX_CONTEXTUAL_DIALOGUE", 0 );
    l_U41 = 0;
    l_U42 = 0;
    return;
}

void sub_14232(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_14252();
    return;
}

void sub_14252()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

int sub_14349()
{
    if (((LOAD_SCRIPT_STREAM( "S_FAV1_MID_05B_FAV1_BLENDOUT_", 1 )) == 1) AND (((HAS_ANIM_DICT_LOADED( "EXPL_CAM", 0 )) == 1) AND (((ISEQ_QUERY_STATE( 1285840791, 2 )) == 1) AND ((HAS_MODEL_LOADED( -502497534 )) AND ((HAS_MODEL_LOADED( -1193489045 )) AND ((HAS_MODEL_LOADED( 1907001043 )) AND ((HAS_MODEL_LOADED( 1156505411 )) AND (HAS_MODEL_LOADED( -107944300 )))))))))
    {
        return 1;
    }
    return 0;
}

void sub_14554()
{
    int I;
    unknown uVar3;

    sub_442( "SP", "P_SETUP_COCAINE_ROOM", "###" );
    sub_14613( ref l_U297, 1056964608, 0 );
    sub_11710( ref l_U356 );
    for ( I = 0; I < 4; I++ )
    {
        l_U356[I] = sub_14814( ref l_U303[I] );
        if (NOT (IS_PED_DEAD( l_U356[I] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U356[I], ref g_U1759 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U356[I], 1 );
            SET_PED_AI_TEMPLATE( l_U356[I], ref g_U1791 );
            SET_PED_ALERTNESS( l_U356[I], 4 );
            if (NOT (IS_PED_DEAD( sub_2799() )))
            {
                REGISTER_TARGET( l_U356[I], sub_2799() );
            }
            sub_15622( l_U356[I], ref l_U297 );
        }
    }
    if (NOT (IS_PED_DEAD( sub_2799() )))
    {
        if (NOT (IS_PED_DEAD( l_U356[2] )))
        {
            SET_PED_PRIMARY_LOOKAT( l_U356[2], sub_2799() );
        }
    }
    l_U361[0] = sub_7291( l_U356[0], 1194438308, 25000, 0, 1 );
    l_U361[1] = sub_7291( l_U356[1], 1194438308, 25000, 0, 1 );
    l_U361[2] = sub_7291( l_U356[2], 1194438308, 25000, 0, 1 );
    l_U361[3] = sub_7291( l_U356[3], 1194438308, 25000, 0, 1 );
    sub_16093( ref l_U356, "piCocaine" );
    uVar3 = GET_INTERIOR_AT_COORDS( -66.88000000, -17.42000000, 13.79000000 );
    SET_INTERIOR_ACTIVE( uVar3, 1, 0 );
    sub_16235( ref g_U1671, 1, 1, 0.72500000 );
    if (DOES_OBJECT_EXIST( l_U442 ))
    {
        SET_OBJECT_VISIBLE( l_U442, 0 );
        SET_OBJECT_COLLISION( l_U442, 0 );
    }
    if (NOT (DOES_OBJECT_EXIST( g_U856 )))
    {
        g_U856 = sub_16462( 1907001043, g_U857, g_U860, 1, 1, 0 );
        if ((DOES_OBJECT_EXIST( g_U856 )) == 1)
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U856, ref g_U1759 );
            SET_OBJECT_COLLISION( g_U856, 1 );
            SET_OBJECT_AS_FLIPPABLE_TABLE( g_U856, 1 );
            SET_OBJECT_VISIBLE( g_U856, 0 );
        }
    }
    if (NOT (DOES_OBJECT_EXIST( l_U435 )))
    {
        l_U435 = sub_16462( -107944300, l_U436, l_U439, 0, 1, 0 );
        if ((DOES_OBJECT_EXIST( l_U435 )) == 1)
        {
            SET_OBJECT_COLLISION( l_U435, 0 );
            FREEZE_OBJECT_POSITION( l_U435, 1 );
        }
    }
    sub_16855( ref l_U356 );
    l_U396 = 0;
    return;
}

void sub_14613(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_14814(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_13088( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_15293( iParam0->_fU40 );
    sub_15373( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_15293(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_15373(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_15622(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_6962( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_14613( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_14613( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_16093(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_16235(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_3577( iParam0 )) == 0)
    {
        sub_3643( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

void sub_16462(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_13088( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_16855(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_16886( (uParam0^)[I] );
    }
    return;
}

void sub_16886(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_17016()
{
    int I;

    sub_442( "NS", "P_CREATE_COCAINE_WAV1()", 0 );
    sub_11710( ref l_U393 );
    for ( I = 0; I < 2; I++ )
    {
        if (I != 0)
        {
            l_U393[I] = sub_14814( ref l_U366[I] );
        }
        if (NOT (IS_PED_DEAD( l_U393[I] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U393[I], ref g_U1759 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U393[I], 1 );
            SET_PED_AI_TEMPLATE( l_U393[I], ref g_U1791 );
            SET_PED_ALERTNESS( l_U393[I], 4 );
            if (NOT (IS_PED_DEAD( sub_2799() )))
            {
                REGISTER_TARGET( l_U393[I], sub_2799() );
            }
            sub_17264( ref l_U198, l_U393[I], 1 );
            sub_15622( l_U393[I], ref l_U297 );
        }
    }
    sub_16093( ref l_U393, "piCocaineWav1" );
    sub_7291( l_U393[0], g_U1819, 25000, 0, 0 );
    sub_7291( l_U393[1], g_U1819, 25000, 0, 0 );
    return;
}

void sub_17264(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_17547(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_17589( sub_2799(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

int sub_17589(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_17699()
{
    int I;
    unknown uVar3;

    sub_442( "NS", "P_CREATE_CUTSCENE_PEDS()", 0 );
    sub_14613( ref l_U297, 1056964608, 0 );
    sub_11710( ref l_U624 );
    for ( I = 0; I < 4; I++ )
    {
        l_U624[I] = sub_14814( ref l_U303[I] );
        if (NOT (IS_PED_DEAD( l_U624[I] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U624[I], ref g_U1759 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U624[I], 1 );
            SET_PED_AI_TEMPLATE( l_U624[I], ref g_U1791 );
            SET_PED_ALERTNESS( l_U624[I], 4 );
            if (NOT (IS_PED_DEAD( sub_2799() )))
            {
                REGISTER_TARGET( l_U624[I], sub_2799() );
            }
            sub_15622( l_U356[I], ref l_U297 );
        }
    }
    l_U361[0] = sub_7291( l_U624[0], 1194438308, 25000, 0, 1 );
    l_U361[1] = sub_7291( l_U624[1], 1194438308, 25000, 0, 1 );
    l_U361[2] = sub_7291( l_U624[2], 1194438308, 25000, 0, 1 );
    l_U361[3] = sub_7291( l_U624[3], 1194438308, 25000, 0, 1 );
    sub_16093( ref l_U624, "piCutscene" );
    uVar3 = GET_INTERIOR_AT_COORDS( -66.88000000, -17.42000000, 13.79000000 );
    SET_INTERIOR_ACTIVE( uVar3, 1, 0 );
    sub_16235( ref g_U1671, 1, 1, 0.72500000 );
    if (DOES_OBJECT_EXIST( l_U442 ))
    {
        SET_OBJECT_VISIBLE( l_U442, 0 );
        SET_OBJECT_COLLISION( l_U442, 0 );
    }
    sub_11851( g_U856 );
    g_U856 = sub_16462( 1907001043, g_U857, g_U860, 1, 1, 0 );
    if ((DOES_OBJECT_EXIST( g_U856 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U856, ref g_U1759 );
        SET_OBJECT_COLLISION( g_U856, 1 );
        SET_OBJECT_VISIBLE( g_U856, 0 );
    }
    l_U435 = sub_16462( -107944300, l_U436, l_U439, 0, 1, 0 );
    if ((DOES_OBJECT_EXIST( l_U435 )) == 1)
    {
        SET_OBJECT_COLLISION( l_U435, 0 );
        FREEZE_OBJECT_POSITION( l_U435, 1 );
    }
    sub_14554();
    return;
}

int sub_18416()
{
    unknown uVar2;
    unknown uVar3;
    int iVar4;
    unknown uVar5;
    unknown uVar6;

    switch (l_U82)
    {
        case 0: break;
        case 1:
        sub_442( "NS", "CUTSCENE_SETUP", 0 );
        sub_3565( ref g_U1664, 1 );
        sub_3768( ref g_U1664, 1 );
        sub_16235( ref g_U1671, 1, 1, 1065353216 );
        REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U1671._fU0, g_U1671._fU4 ), "P_f1_wddoor_B", 0 );
        if (NOT (IS_PED_DEAD( sub_2799() )))
        {
            CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_2799(), "Global/Player/PlayerRoot/PLAYER_INITIALIZE_LOCO" );
            CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "GenCover", "220971D_9C79663B_Corner2", 1, 0 );
            CUTSCENE_REGISTER_PED_TELEPORT( sub_2799(), -69.17973000, -27.61078000, 13.77209000, -90.00000000 );
            ISEQ_REGISTER_ENTITY( 1285840791, "player", sub_2799(), 0 );
            ISEQ_REGISTER_ENTITY( 1285840791, "ENEMY0", l_U356[0], 0 );
            ISEQ_REGISTER_ENTITY( 1285840791, "ENEMY1", l_U356[2], 0 );
            ISEQ_REGISTER_ENTITY( 1285840791, "ENEMY2", l_U356[1], 0 );
            ISEQ_REGISTER_ENTITY( 1285840791, "ENEMY3", l_U356[3], 0 );
            ISEQ_REGISTER_ENTITY( 1285840791, "TABLE", g_U856, 1 );
            ISEQ_REGISTER_ENTITY( 1285840791, "DOOR", l_U435, 1 );
            sub_18959( l_U86, 0 );
            uVar6 = sub_19057();
            if (((GET_DOES_WEAPON_EXIST( uVar6 )) == 1) AND ((IS_PED_DEAD( sub_2799() )) == 0))
            {
                SELECT_WEAPON_TO_HAND( sub_2799(), uVar6, 0, 1 );
                if ((GET_WEAPON_TYPE( uVar6 )) == g_U1818)
                {
                    SET_WEAPON_VISIBLE( uVar6, 0 );
                }
                else
                {
                    REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar6, "W_PI_Clt1911_Aa_H", 0 );
                }
            }
        }
        SET_OBJECT_COORDS( l_U435, l_U436 );
        SET_OBJECT_ROTATION( l_U435, l_U439 );
        if (NOT (IS_PED_DEAD( l_U624[0] )))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U624[0], "M_F1_MISC_IB", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U361[0], "W_PI_Clt1911_Aa_H", 0 );
            CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U624[0], "/Global/AMED/AMED_Root/AMED_INITIALIZE_LOCO" );
        }
        if (NOT (IS_PED_DEAD( l_U624[1] )))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U624[1], "M_F1_MISC_IB^1", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U361[1], "W_AR_FAL_Aa_H", 0 );
            CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U624[1], "/Global/AMED/AMED_Root/AMED_INITIALIZE_LOCO" );
        }
        if (NOT (IS_PED_DEAD( l_U624[2] )))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U624[2], "M_F1_MISC_IB^2", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U361[2], "W_PI_Clt1911_Aa_H^1", 0 );
            CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U624[2], "/Global/AMED/AMED_Root/AMED_INITIALIZE_LOCO" );
        }
        if (NOT (IS_PED_DEAD( l_U624[3] )))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U624[3], "M_F1_MISC_IB^3", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U361[3], "W_PI_Clt1911_Aa_H_2", 0 );
            CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U624[3], "/Global/AMED/AMED_Root/AMED_INITIALIZE_LOCO" );
        }
        CUTSCENE_REGISTER_PED_TELEPORT( l_U624[0], l_U303[0]._fU0, l_U303[0]._fU12 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U624[1], l_U303[1]._fU0, l_U303[1]._fU12 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U624[2], l_U303[2]._fU0, l_U303[2]._fU12 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U624[3], l_U303[3]._fU0, l_U303[3]._fU12 );
        CUTSCENE_REGISTER_ISEQ( 1285840791 );
        START_SEAMLESS_CUTSCENE();
        CUTSCENE_ENABLE_SKIP( 0 );
        l_U82 = 2;
        break;
        case 2:
        sub_442( "SP", "eOpeningCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        AUDIO_MUSIC_SUSPEND( 7000 );
        BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        sub_20462( 1, 0, 0, 1 );
        if (IS_SCREEN_FADED_OUT())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        l_U82 = 3;
        sub_442( "SP", "eOpeningCutsceneState = CUTSCENE_PLAYING", 0 );
        break;
        case 3:
        if (HAS_CUTSCENE_FINISHED() == 1)
        {
            sub_18959( l_U86, 1 );
            sub_11710( ref l_U624 );
            CLEAR_NAMED_CUTSCENE( "MID_05b_FAV1_concat" );
            sub_20771( 1 );
            return 1;
        }
        else
        {
            uVar2 = GET_CUTSCENE_SECTION_PLAYING();
            uVar3 = GET_CUTSCENE_TIME();
            iVar4 = GET_CUTSCENE_TIME_MS();
            if ((IS_SCREEN_FADED_OUT() == 1) || (IS_SCREEN_FADING_OUT() == 1))
            {
                CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
                l_U83 = 1;
            }
            if (l_U84 == 0)
            {
                if (iVar4 >= 5000)
                {
                    sub_13886();
                    l_U84 = 1;
                }
            }
            else if (l_U85 == 0)
            {
                if (sub_14349() == 1)
                {
                    CUTSCENE_ENABLE_SKIP( 1 );
                }
            }
        }
        break;
    }
    return 0;
}

void sub_18959(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;

    uVar21 = uParam0._fU24._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar21, uParam18 );
    }
    uVar22 = uParam0._fU60._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar22, uParam18 );
    }
    return;
}

int sub_19057()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_2799() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_2799(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_19120( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_2799(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_2799(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_2799(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

int sub_19120(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_20462(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_2799() )))
        {
            SET_PLAYER_CONTROL( sub_2765(), 0, uParam2 );
            SET_PED_DUCKING( sub_2799(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_2799() );
            }
            SET_PED_INVINCIBLE( sub_2799(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_20771(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_2799() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_2799(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_2799(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_2799(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_2799(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_2799(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_21193(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_21224( (uParam0^)[I] );
    }
    return;
}

void sub_21224(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_21644(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

int sub_21823(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_22803()
{
    int I;

    sub_442( "NS", "P_START_GAMEPLAY()", 0 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    for ( I = 0; I < 4; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U356[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U356[I], 0 );
        }
    }
    ENABLE_STATIC_EMITTER( "S_FAV1_COKE_PACK_PLANT", 1 );
    DO_SCREEN_FADE_IN( 0 );
    sub_22957();
    return;
}

void sub_22957()
{
    sub_442( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_442( "CCB", "Starting the Favela_Drug_Den context...", 0 );
    START_CONTEXT( "Favela_Drug_Den" );
    return;
}

void sub_23183(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_442( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_442( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_7945( iParam1 );
        sub_23442( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_23893( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_23893( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_24125( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_23893( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_24125( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_24125( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_23893( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_24125( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_24125( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_24125( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_23893( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_24125( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_24125( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_24125( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_24125( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_25683( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_442( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_23442(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_5309( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_442( "TEH", "Ending context", 0 );
        sub_442( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_23893(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_24125(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_25683(int iParam0)
{
    sub_6962( "CHECKPOINT DATA" );
    sub_25722( iParam0->_fU4 );
    sub_25745( iParam0->_fU16 );
    sub_25745( iParam0->_fU20 );
    sub_25745( iParam0->_fU24 );
    sub_25788( iParam0->_fU28 );
    sub_25788( iParam0->_fU56 );
    sub_25788( iParam0->_fU60 );
    sub_25788( iParam0->_fU64 );
    sub_25788( iParam0->_fU68 );
    sub_25788( iParam0->_fU72 );
    sub_25788( iParam0->_fU76 );
    sub_25788( iParam0->_fU80 );
    sub_25788( iParam0->_fU84 );
    sub_25788( iParam0->_fU88 );
    sub_25788( iParam0->_fU92 );
    sub_25745( iParam0->_fU32 );
    sub_25788( iParam0->_fU36 );
    sub_25788( iParam0->_fU40 );
    sub_25788( iParam0->_fU44 );
    sub_25745( iParam0->_fU136 );
    sub_25993( iParam0->_fU140 );
    sub_25788( iParam0->_fU52 );
    sub_6962( "---nRightHolsterAttachmentEnabled: " );
    sub_25788( iParam0->_fU96 );
    sub_6962( "---nRightHolsterAttachmentToggled: " );
    sub_25788( iParam0->_fU100 );
    sub_6962( "---nLeftHolsterAttachmentEnabled: " );
    sub_25788( iParam0->_fU104 );
    sub_6962( "---nLeftHolsterAttachmentToggled: " );
    sub_25788( iParam0->_fU108 );
    sub_6962( "---nRifleHolsterAttachmentEnabled: " );
    sub_25788( iParam0->_fU112 );
    sub_6962( "---nRifleHolsterAttachmentToggled: " );
    sub_25788( iParam0->_fU116 );
    sub_6962( "---nRightHandAttachmentEnabled: " );
    sub_25788( iParam0->_fU120 );
    sub_6962( "---nRightHandAttachmentToggled: " );
    sub_25788( iParam0->_fU124 );
    sub_6962( "---nLeftHandAttachmentEnabled: " );
    sub_25788( iParam0->_fU128 );
    sub_6962( "---nLeftHandAttachmentToggled: " );
    sub_25788( iParam0->_fU132 );
    sub_25788( l_U1 );
    sub_25788( 144 );
    return;
}

void sub_25722(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_25745(unknown uParam0)
{
    return;
}

void sub_25788(unknown uParam0)
{
    return;
}

void sub_25993(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_27011()
{
    sub_442( "NS", "P_ACTION_COCAINE_WAV1()", 0 );
    if (NOT (IS_PED_DEAD( sub_2799() )))
    {
        if (NOT (IS_PED_DEAD( l_U393[0] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U393[0], 0 );
            TASK_COMBAT_PED( l_U393[0], sub_2799() );
        }
        if (NOT (IS_PED_DEAD( l_U393[1] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U393[1], 0 );
            TASK_COMBAT_PED( l_U393[1], sub_2799() );
        }
    }
    return;
}

void sub_27226(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

int sub_27777()
{
    unknown uVar2;
    int I;

    if (sub_27787() == 1)
    {
        for ( I = 0; I < 4; I++ )
        {
            if (((GET_PED_CAN_TRIGGER_BULLET_CAM( l_U356[I] )) == 0) AND (((IS_PED_DEAD( l_U356[I] )) == 0) AND ((DOES_PED_EXIST( l_U356[I] )) == 1)))
            {
                SET_PED_CAN_TRIGGER_BULLET_CAM( l_U356[I], 1 );
                uVar2 = l_U356[I];
            }
        }
        for ( I = 0; I < 2; I++ )
        {
            if (((GET_PED_CAN_TRIGGER_BULLET_CAM( l_U393[I] )) == 0) AND (((IS_PED_DEAD( l_U393[I] )) == 0) AND ((DOES_PED_EXIST( l_U393[I] )) == 1)))
            {
                SET_PED_CAN_TRIGGER_BULLET_CAM( l_U393[I], 1 );
                uVar2 = l_U393[I];
            }
        }
        if ((DOES_PED_EXIST( uVar2 )) == 1)
        {
            return 1;
        }
    }
    return 0;
}

void sub_27787()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I < 4; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U356[I] )))
        {
            Result++;
        }
    }
    for ( I = 0; I < 2; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U393[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_28320(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_28402(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_28644(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_28668( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_28668(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_28723( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_28723(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_28758( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_29252( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_28758(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_29252(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

int sub_29572(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND ((sub_29584( iParam0 )) == 0)))
    {
        if ((sub_29748() == 1) AND (((IS_PED_RELOADING( sub_2799() )) == 0) AND (((IS_PED_GETTING_UP( sub_2799() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP( sub_2799() )) == 0) AND (((IS_PED_IN_COVER( sub_2799() )) == 0) AND (((IS_PED_DUCKING( sub_2799() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_29584(int iParam0)
{
    return iParam0->_fU56;
}

int sub_29748()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

int sub_29909(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_2799() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_2799() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_17589( sub_2799(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_17589( sub_2799(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_2694( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_2755( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_29748() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_2472( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_1984( iParam0, 0 );
                            sub_2543( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_1984( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_2799() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_2799(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_1984( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_2543( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_2799() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_2799(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_2799() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_2799(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_2799() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_2799(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_1984( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_2543( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_2799() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_2799() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_2799() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_2799(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_2543( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

void sub_31741(int iParam0, int iParam1)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if (iParam1 == 1)
    {
        iParam0->_fU8 = iParam0->_fU4 - iParam0->_fU0;
        sub_4408( iParam0 );
    }
    else if (iParam0->_fU8 > 0)
    {
        sub_10119( iParam0 );
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA() - iParam0->_fU8;
        }
        else
        {
            iParam0->_fU0 = TIMERB() - iParam0->_fU8;
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM() - iParam0->_fU8;
        }
        iParam0->_fU4 = iParam0->_fU0;
        iParam0->_fU8 = 0;
    }
    return;
}

void sub_32673(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_17589( sub_2799(), uParam0 );
}

void sub_32901(int iParam0)
{
    if (l_U41 == 0)
    {
        l_U42 = GET_PAYNEKILLER_AMT();
        l_U41 = 1;
    }
    if ((IS_PED_DEAD( sub_2799() )) == 0)
    {
        if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0))
        {
            if ((TIME_SINCE_LAST_MONOLOGUE() > 5000) AND ((IS_MONOLOGUE_PLAYING() == 0) AND (sub_32985() == 0)))
            {
                if ((iParam0 == 1) AND (l_U42 < GET_PAYNEKILLER_AMT()))
                {
                    if (g_U789 < 5)
                    {
                        if (((g_U788 mod 3) == 0) || (g_U788 == 0))
                        {
                            sub_442( "NS", "Playing Pills Monologue", 0 );
                            sub_28320( ref l_U31 );
                            sub_28402( 0, sub_2799(), "MAX", ref l_U31, 2, 0 );
                            sub_28402( 1, sub_2799(), "MAX", ref l_U31, 2, 0 );
                            sub_28644( "SFV1_MFPLS", ref l_U31, 7, 1 );
                            g_U789++;
                        }
                        g_U788++;
                    }
                }
            }
            l_U42 = GET_PAYNEKILLER_AMT();
        }
    }
    return;
}

void sub_32985()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

void sub_33367()
{
    if (DOES_OBJECT_EXIST( DOOR_FIND_CLOSEST( g_U1664._fU0, g_U1664._fU4 ) ))
    {
        if (DOOR_GET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U1664._fU0, g_U1664._fU4 ) ))
        {
            sub_442( "NS", "Setting cocaine door to not react to bullets.", 0 );
            DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U1664._fU0, g_U1664._fU4 ), 0 );
        }
    }
    return;
}

void sub_33573()
{
    sub_442( "SP", "P_UNLOAD_ASSETS", "###" );
    sub_12023( -107944300 );
    sub_12023( 1907001043 );
    sub_12023( -1193489045 );
    sub_12023( 1156505411 );
    sub_12023( -502497534 );
    sub_12023( 508600758 );
    sub_12023( 416428258 );
    sub_33708( "LEVEL_S_FAV1_CP_07" );
    sub_33708( "EXPL_CAM" );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U105._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U126._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U147._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U168._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U198._fU0 );
    return;
}

void sub_33708(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}


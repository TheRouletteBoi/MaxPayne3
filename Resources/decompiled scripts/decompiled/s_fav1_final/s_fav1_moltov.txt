void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    StrCopy( ref l_U39, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U47, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U56 = 0;
    l_U57 = 0;
    l_U58 = 1500;
    l_U78 = 0;
    l_U79 = 0;
    l_U116 = 0;
    l_U117 = 0;
    l_U118 = 0;
    l_U119 = 1;
    l_U120 = 0;
    l_U121 = 5.00000000;
    l_U122 = 0;
    l_U123 = 0;
    l_U124 = 0;
    l_U125 = 0;
    l_U126 = 0;
    l_U127 = 1;
    l_U128 = 1;
    l_U129 = 1;
    l_U130 = 1;
    l_U131 = 1;
    l_U132 = 0;
    l_U133 = 1;
    l_U134 = 5000;
    l_U144 = 3000;
    l_U163 = {-36.31800000, 34.95600000, 21.74400000};
    l_U166 = 28.98400000;
    l_U167 = -64.81496000;
    l_U168 = 7.36553700;
    l_U178 = 0;
    l_U571 = 0;
    l_U572 = 0;
    l_U573 = 1;
    l_U576 = 1;
    l_U586 = 0;
    l_U587 = 0;
    l_U588 = 1000;
    l_U598 = 3000;
    l_U608 = 3750;
    l_U618 = 500;
    l_U628 = 500;
    l_U954 = 1200;
    l_U967 = 1;
    l_U968 = 1;
    l_U969 = 1;
    l_U1064 = 0;
    l_U1090 = 0;
    l_U1116 = 0;
    l_U1133 = 0;
    l_U1164 = 1;
    l_U1165 = 7000;
    l_U1208 = 1;
    l_U1253 = 1;
    l_U1254 = 0;
    l_U1300 = 4;
    l_U1301 = 0;
    l_U1311 = 2400;
    l_U1312 = 4400;
    l_U1313 = 3000;
    l_U1314 = 0;
    l_U1317 = 0;
    sub_741( "SA", "Script fav1_Molotov.sc is starting...", "###" );
    sub_790();
    sub_5834();
    if (l_U116 == 0)
    {
        if ((sub_6515( ref l_U80 )) == 0)
        {
            if (g_U1048 == 11)
            {
                sub_8904( sub_6640(), g_U1816, 200, 0, 1 );
            }
        }
        l_U116 = 1;
    }
    sub_10824();
    while (g_U773)
    {
        sub_11024();
        if (l_U118 == 0)
        {
            sub_14151();
        }
        WAIT( 0 );
    }
    sub_13032( 0 );
    sub_45938();
    sub_741( "SA", "Script fav1_Molotov.sc is shutting down...", "###" );
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_fav1_moltov" );
    return;
}

void sub_741(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_790()
{
    sub_741( "SA", "LOAD_ASSETS", "###" );
    sub_868( ref l_U365[0], -30.43000000, 50.93000000, 27.13000000, 152.66000000, -1407765721, 7, 3, 2, 0, 0 );
    sub_868( ref l_U365[1], -31.80000000, 51.80000000, 24.03000000, 174.26000000, -2081668700, 7, 3, 2, 0, 0 );
    sub_868( ref l_U365[2], -27.63000000, 47.05000000, 24.24000000, 164.71000000, 1395999778, 7, 3, 2, 0, 0 );
    sub_868( ref l_U365[3], -19.88000000, 47.15000000, 27.50000000, 144.23000000, 165785414, 7, 3, 2, 0, 0 );
    sub_868( ref l_U365[4], -32.89000000, 53.86000000, 24.03000000, 174.26090000, 225549800, 7, 3, 2, 0, 0 );
    sub_868( ref l_U544, -15.28000000, 35.21000000, 22.45000000, -0.55999400, 359212086, 7, 3, 2, 0, 0 );
    sub_1258( ref l_U197, "tbStartCSCompund", -31.40000000, 37.99000000, 19.53000000, 4.00000000, 13.00000000, 4.00000000, 0.00000000, 0.00000000, 0.93000000, 1 );
    sub_1258( ref l_U218, "tbStartCutScene", -39.32000000, 40.57000000, 20.75000000, 4.00000000, 5.50000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1258( ref l_U239, "tbSendStairs", -32.60000000, 37.99000000, 19.53000000, 4.00000000, 13.00000000, 4.00000000, 0.00000000, 0.00000000, 0.93000000, 1 );
    sub_1258( ref l_U281, "tbKillMolotov", -26.39000000, 43.61000000, 23.20000000, 3.00000000, 3.00000000, 5.00000000, 0.00000000, 0.00000000, 90.00000000, 1 );
    sub_1258( ref l_U260, "tbRemoveMolotov", -26.66000000, 38.44000000, 18.94000000, 4.00000000, 8.92000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1258( ref l_U302, "tbMoveThePlayer", -11.85000000, 26.50000000, 22.23000000, 20.00000000, 7.00000000, 2.64000000, 1.28360000, -0.46805900, -57.95000000, 1 );
    sub_1258( ref l_U437[0], "tbCleanMolotov[0]", -35.01000000, 55.20000000, 24.66000000, 3.00000000, 3.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1258( ref l_U437[1], "tbCleanMolotov[1]", -30.16000000, 54.88000000, 21.27000000, 3.00000000, 3.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1258( ref l_U437[2], "tbCleanMolotov[2]", -22.02000000, 46.73000000, 21.27000000, 3.00000000, 3.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1258( ref l_U437[3], "tbCleanMolotov[3]", -23.46000000, 48.70000000, 24.50000000, 3.00000000, 3.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1258( ref l_U437[4], "tbCleanMolotov[4]", -30.16000000, 54.88000000, 21.27000000, 3.00000000, 3.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1258( ref l_U323, "tbSpawnAnotherMolotov", -21.90000000, 39.67000000, 20.47000000, 4.00000000, 8.92000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_2251( ref l_U344, "thrEnemyMOLTOV1", -29.03000000, 42.84000000, 23.47000000, 4.64000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, -0.15999000, 1 );
    sub_2251( ref l_U345, "thrEnemyMOLTOV2", -33.68000000, 49.20000000, 22.52000000, 4.56000000, 1.43000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_2251( ref l_U346, "thrEnemyMOLTOV4", -31.43000000, 50.78000000, 26.66000000, 4.17000000, 2.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_2251( ref l_U347, "thrEnemyMOLTOV5", -24.92000000, 46.43000000, 26.48000000, 2.00000000, 2.00000000, 4.00000000, 0.00000000, 0.00000000, -4.51000000, 1 );
    sub_2251( ref l_U348, "thrEnemyMOLTOV6", -22.05000000, 42.99000000, 23.45000000, 2.00000000, 1.50000000, 3.00000000, 0.00000000, 0.00000000, -0.15999000, 1 );
    sub_2251( ref l_U349, "thrStairBottom", -9.95000000, 24.06000000, 21.56000000, 4.62000000, 4.00000000, 3.00000000, 0.00000000, 0.00000000, 27.27000000, 1 );
    sub_2251( ref l_U350, "thrPlayerTether", -26.24000000, 36.43000000, 19.56000000, 3.89000000, 4.54000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_2251( ref l_U351, "thrAnotherMolotov", -8.87000000, 40.34000000, 27.57000000, 2.00000000, 5.60000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_2251( ref l_U352, "thrGroupD", -10.89000000, 39.78000000, 21.41000000, 2.00000000, 3.25000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    SET_TIME_OF_DAY( 12, 0 );
    SET_WEATHER_TYPE_NOW_PERSIST( "cloudy" );
    sub_1258( ref l_U659, "tbCompoundMusicFade", -24.27000000, 37.83000000, 19.31000000, 3.00000000, 3.00000000, 5.00000000, 0.00000000, 0.00000000, 90.00000000, 1 );
    sub_1258( ref l_U638, "LOCK_FAV_GATE", -11.85000000, 26.50000000, 22.46000000, 2.02000000, 2.95000000, 2.64000000, 1.28360000, -0.46805900, -39.93000000, 1 );
    sub_1258( ref l_U680, "tbFirstSurprise", -14.60000000, 31.12000000, 22.31000000, 4.00000000, 2.95000000, 2.64000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1258( ref l_U701, "tbReleaseCornerCover", -6.93000000, 19.50000000, 23.33000000, 2.02000000, 2.95000000, 5.00000000, 1.28360000, -0.46805900, -59.41000000, 1 );
    sub_1258( ref l_U722, "tbDropDown", 14.32000000, 20.19000000, 21.43000000, 8.00000000, 8.00000000, 7.00000000, 0.00000000, 0.00000000, 89.86000000, 1 );
    sub_1258( ref l_U743, "tbStartRightSide", -14.13000000, 34.36000000, 19.59000000, 10.00000000, 10.00000000, 5.00000000, 0.00000000, 0.00000000, 90.00000000, 1 );
    sub_1258( ref l_U785, "tbRSFailSafe", -14.60000000, 32.30000000, 22.31000000, 4.00000000, 2.95000000, 2.64000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1258( ref l_U764, "tbStartRpg", -2.94000000, 17.07000000, 21.43000000, 7.00000000, 3.00000000, 7.00000000, 0.00000000, 0.00000000, 89.86000000, 1 );
    sub_1258( ref l_U806, "tbDeathTrigger", -0.40000000, 26.66000000, 18.70000000, 21.00000000, 21.00000000, 1.50000000, 0.00000000, 0.00000000, 26.00000000, 1 );
    sub_1258( ref l_U827, "tbDeathTrigger2", -4.12085000, 39.80840000, 14.31380000, 20.00000000, 20.00000000, 6.00000000, 0.00000000, 0.00000000, 89.86000000, 1 );
    sub_1258( ref l_U848, "tbDeathTrigger3", -8.67000000, 33.36000000, 13.57000000, 8.00000000, 8.00000000, 8.00000000, 0.00000000, 0.00000000, 89.86000000, 1 );
    sub_1258( ref l_U869, "tbDeathTrigger4", -7.10000000, 29.48000000, 15.31000000, 8.00000000, 8.00000000, 8.00000000, 0.00000000, 0.00000000, 138.89000000, 1 );
    sub_1258( ref l_U890, "tbDeathTrigger5", -19.15000000, 43.30000000, 14.58000000, 8.00000000, 9.50000000, 8.00000000, 0.00000000, 0.00000000, 89.86000000, 1 );
    sub_1258( ref l_U911, "tbDeathTrigger6", 0.33000000, 23.17000000, 15.92000000, 8.00000000, 13.00000000, 8.00000000, 0.00000000, 0.00000000, 89.86000000, 1 );
    sub_2251( ref l_U946, "PINKROOFleft", 5.12000000, 32.87000000, 25.95000000, 6.60000000, 13.96000000, 7.86000000, 0.00000000, 0.00000000, 89.86000000, 1 );
    sub_2251( ref l_U947, "tePINKROOFRight", 8.02000000, 32.87000000, 25.95000000, 6.40000000, 8.12000000, 7.86000000, 0.00000000, 0.00000000, 89.86000000, 1 );
    sub_2251( ref l_U948, "teLowerBALC", -0.77000000, 34.11000000, 23.16000000, 8.00000000, 5.08000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_2251( ref l_U949, "teRPG", 15.90000000, 34.17000000, 23.64000000, 2.74000000, 2.75000000, 7.86000000, 0.00000000, 0.00000000, 89.86000000, 1 );
    sub_2251( ref l_U950, "teRightSideRoof", 4.82000000, 15.12000000, 29.90000000, 3.47000000, 1.43000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_2251( ref l_U951, "teFarRoofTop", 18.94000000, 15.83000000, 29.97000000, 3.47000000, 1.43000000, 5.00000000, 0.00000000, 0.00000000, 85.61000000, 1 );
    sub_2251( ref l_U952, "teFarRoofBottom", 18.21000000, 19.57000000, 27.17000000, 3.47000000, 1.43000000, 5.00000000, 0.00000000, 0.00000000, 85.61000000, 1 );
    sub_2251( ref l_U953, "teCornerCover", -2.02000000, 18.42000000, 24.03000000, 4.62000000, 2.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_868( ref l_U977, 6.96000000, 12.02000000, 30.91000000, 27.52000000, -1526459992, 7, 3, 2, 0, 0 );
    sub_868( ref l_U993[0], 22.96000000, 12.75000000, 31.35000000, 159.76000000, -1703186085, 7, 3, 2, 0, 0 );
    sub_868( ref l_U993[1], 3.63074700, 13.94237000, 24.58833000, 159.76000000, 1856425051, 7, 3, 2, 0, 0 );
    sub_868( ref l_U1065[0], -8.60000000, 41.43000000, 24.33000000, 75.93000000, -6975242, 7, 3, 2, 0, 0 );
    sub_868( ref l_U1091[0], -8.58000000, 42.79000000, 21.77000000, 79.39990000, 1910702631, 7, 3, 2, 0, 0 );
    sub_868( ref l_U1024[0], 1.20000000, 40.47000000, 26.41000000, 86.00000000, 395873159, 7, 3, 2, 0, 0 );
    sub_868( ref l_U1024[1], 0.17000000, 39.96000000, 26.41000000, 86.00000000, -1998630048, 7, 3, 2, 0, 0 );
    sub_868( ref l_U1024[2], -1.76000000, 40.56000000, 26.41000000, 179.71900000, 974758640, 7, 3, 2, 0, 0 );
    sub_868( ref l_U1119[0], 0.20000000, 36.50000000, 26.42000000, 179.71900000, 1589633876, 7, 3, 2, 0, 0 );
    sub_868( ref l_U1137[0], 4.10000000, 34.76000000, 26.42000000, 179.72000000, -937653866, 7, 3, 2, 0, 0 );
    sub_868( ref l_U1137[1], 5.21000000, 34.07000000, 26.42000000, 179.72000000, 395873159, 7, 3, 2, 0, 0 );
    sub_868( ref l_U1178[0], 9.84000000, 35.43000000, 26.42000000, 179.71900000, -1286331611, 7, 3, 2, 0, 0 );
    sub_868( ref l_U1178[1], 9.84000000, 35.43000000, 26.42000000, 179.72000000, 1750794758, 7, 3, 2, 0, 0 );
    sub_868( ref l_U1213[0], -0.30000000, 34.53000000, 23.80000000, 179.26000000, -1994221912, 7, 3, 2, 0, 0 );
    sub_868( ref l_U1213[1], 0.92000000, 34.53000000, 23.80000000, 179.65000000, 312632642, 7, 3, 2, 0, 0 );
    sub_868( ref l_U1213[2], 0.96000000, 34.53000000, 23.80000000, 179.76000000, -1781565827, 7, 3, 2, 0, 0 );
    sub_868( ref l_U1258[0], 0.75000000, 34.95000000, 23.85000000, 179.76000000, -1781565827, 7, 3, 2, 0, 0 );
    sub_868( ref l_U1258[1], 6.60000000, 11.72000000, 30.91000000, 179.76000000, -1781565827, 7, 3, 2, 0, 0 );
    sub_868( ref l_U1286, 8.93000000, 14.73000000, 24.59000000, 6.11000000, -1998630048, 7, 3, 2, 0, 0 );
    sub_5320( ref l_U1081, 1000, 1, 0 );
    sub_5320( ref l_U1107, 2000, 1, 0 );
    sub_5320( ref l_U1166, l_U1165, 1, 0 );
    sub_5522( ref l_U932, 596292157, -16.54255000, 32.89448000, 23.55729000, 0.00000000, 0.00000000, 0.00000000 );
    sub_5570( ref l_U932, 1 );
    sub_5522( ref l_U939, 596292157, -37.41578000, 31.71139000, 21.71014000, 0.00000000, 0.00000000, 0.00000000 );
    sub_5570( ref l_U939, 1 );
    return;
}

void sub_868(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_1258(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_2251(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_5320(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_5522(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

void sub_5570(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_5582( iParam0 )) == 0)
    {
        sub_5648( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

int sub_5582(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_5648(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_5834()
{
    sub_741( "SA", "INITIALIZE_SCRIPT_DATA", "###" );
    l_U1300 = 4;
    l_U571 = 0;
    l_U572 = 0;
    g_U773 = 1;
    l_U573 = 1;
    l_U119 = 1;
    l_U120 = 0;
    l_U122 = 0;
    l_U123 = 0;
    l_U124 = 0;
    l_U125 = 0;
    l_U126 = 0;
    l_U127 = 1;
    l_U130 = 1;
    l_U129 = 1;
    l_U128 = 1;
    l_U131 = 1;
    l_U576 = 1;
    g_U774 = 0;
    l_U133 = 1;
    l_U132 = 0;
    sub_5320( ref l_U577, 20000, 1, 0 );
    l_U586 = 0;
    l_U587 = 0;
    sub_5320( ref l_U589, l_U588, 1, 0 );
    sub_5320( ref l_U599, l_U598, 1, 0 );
    sub_5320( ref l_U609, l_U608, 1, 0 );
    l_U117 = 0;
    l_U178 = 0;
    sub_5570( ref g_U1699, 0 );
    sub_6122( ref g_U1699, -100.00000000, 100.00000000 );
    sub_6227( ref g_U1699, 1, 1, 0.90000000 );
    sub_5570( ref g_U1699, 0 );
    sub_6122( ref g_U1699, -100.00000000, 100.00000000 );
    sub_6227( ref g_U1699, 1, 1, 0.90000000 );
    l_U1064 = 0;
    l_U1133 = 0;
    l_U1164 = 1;
    l_U1208 = 1;
    l_U1253 = 1;
    l_U1090 = 0;
    l_U1116 = 0;
    l_U1254 = 0;
    l_U1299 = 0;
    l_U967 = 1;
    l_U968 = 1;
    l_U969 = 1;
    return;
}

void sub_6122(int iParam0, float fParam1, float fParam2)
{
    if ((sub_5582( iParam0 )) == 0)
    {
        sub_5648( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        ;
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

void sub_6227(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_5582( iParam0 )) == 0)
    {
        sub_5648( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

int sub_6515(unknown uParam0)
{
    sub_741( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_6706( uParam0, sub_6640() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

int sub_6640()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_6662() );
    }
    return 0;
}

void sub_6662()
{
    return GET_PLAYER_ID();
}

void sub_6706(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_741( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_6890( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_7967( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_8259( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_8619( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_8259( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_8619( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_8259( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_8619( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_8904( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_8619( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_8904( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_8619( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_9397( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_9558( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_6640(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_741( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_6890(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_6922( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_6922(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_7967(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_8259(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_8575( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_8575(unknown uParam0)
{
    return;
}

void sub_8619(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_8904(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_8575( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_9397(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_9558(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_6922( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_9630( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_9630(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_10824()
{
    START_WIDGET_GROUP( "molotov test" );
    ADD_WIDGET_INT_SLIDER( "irndThrowWaitMin", ref l_U1311, 0, 90000, 100 );
    ADD_WIDGET_INT_SLIDER( "irndThrowWaitMax", ref l_U1312, 0, 90000, 100 );
    ADD_WIDGET_INT_SLIDER( "iThrowingTime", ref l_U1313, 0, 90000, 100 );
    ADD_WIDGET_BOOL( "bTestSound", ref l_U1317 );
    STOP_WIDGET_GROUP();
    return;
}

void sub_11024()
{
    if (g_U1049 == 11)
    {
        switch (l_U118)
        {
            case 0:
            if ((sub_11118()) || (IS_PED_DEAD( sub_6640() )))
            {
                l_U118 = 1;
                sub_741( "kja", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_11613())
            {
                l_U118 = 2;
            }
            else if ((sub_11653( 0 )) == 1)
            {
                l_U118 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_6640() )))
            {
                l_U118 = 3;
                sub_741( "kja", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_741( "kja", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if (NOT (IS_PLAYER_DEAD( sub_6662() )))
            {
                SET_PLAYER_CONTROL( sub_6662(), 0, 0 );
            }
            if (IS_DEATH_PANEL_WIPE_ALLOWED() == 0)
            {
                DO_SCREEN_FADE_OUT( 0 );
            }
            sub_13032( 1 );
            l_U118 = 4;
            sub_741( "kja", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_741( "kja", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_6706( ref l_U80, sub_6640() );
            l_U118 = 5;
            sub_741( "kja", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_741( "kja", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            sub_790();
            sub_5834();
            l_U118 = 0;
            sub_741( "kja", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_11118()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_6640() )))
        {
            SET_PED_FORCED_TO_WALK( sub_6640(), 0 );
            SET_PLAYER_FORCED_AIM( sub_6662(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_6662(), 1 );
            if ((IS_PED_VISIBLE( sub_6640() )) == 0)
            {
                SET_PED_VISIBLE( sub_6640(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_11613()
{
    return g_U648;
}

int sub_11653(int iParam0)
{
    iParam0 = 1;
    switch (l_U57)
    {
        case 0:
        if (NOT (sub_11714( ref l_U59 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_6640() )))
            {
                l_U58 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_5320( ref l_U59, l_U58, 1, 1 );
            sub_11833( ref l_U59 );
        }
        if (sub_11953( ref l_U59 ))
        {
            sub_741( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_6640() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_6662() )))
            {
                SET_PLAYER_CONTROL( sub_6662(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U57 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U57 = 2;
            }
            else
            {
                l_U57 = 3;
            }
        }
        break;
        case 2:
        sub_741( "NS", "Player will QUIT", 0 );
        sub_12440();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_741( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_12440();
        return 1;
        break;
    }
    return 0;
}

int sub_11714(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_11833(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_11953(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_12440()
{
    sub_741( "NS", "P_PostFailRetryCleanup", 0 );
    sub_12490( ref l_U59 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_6662() )))
    {
        SET_PLAYER_CONTROL( sub_6662(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U56 = 0;
    l_U56 = l_U56;
    l_U57 = 0;
    return;
}

void sub_12490(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_13032(unknown uParam0)
{
    sub_741( "SA", "P_CLEANUP_ALL", "###" );
    STOP_PARTICLE_FX_LOOPED( l_U575 );
    ISEQ_UNREGISTER_ENTITY( -997353972, "MAX" );
    ISEQ_TERMINATE( -997353972 );
    sub_13120( ref l_U359 );
    sub_13154( l_U543 );
    sub_13154( l_U976 );
    sub_13120( ref l_U990 );
    sub_13120( ref l_U1079 );
    sub_13120( ref l_U1105 );
    sub_13120( ref l_U1020 );
    sub_13120( ref l_U1117 );
    sub_13120( ref l_U1134 );
    sub_13120( ref l_U1175 );
    sub_13120( ref l_U1209 );
    sub_13120( ref l_U1255 );
    sub_13154( l_U1285 );
    sub_13154( l_U557 );
    sub_12490( ref l_U145 );
    sub_12490( ref l_U589 );
    sub_12490( ref l_U599 );
    sub_12490( ref l_U609 );
    sub_12490( ref l_U619 );
    sub_12490( ref l_U1081 );
    sub_12490( ref l_U1107 );
    sub_12490( ref l_U1166 );
    sub_12490( ref l_U955 );
    sub_12490( ref l_U135 );
    sub_13462( ref l_U964 );
    sub_13559( uParam0 );
    return;
}

void sub_13120(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_13154( (uParam0^)[I] );
    }
    return;
}

void sub_13154(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_13462(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_13495( (uParam0^)[I] );
    }
    return;
}

void sub_13495(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_13559(boolean bParam0)
{
    sub_741( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    if (bParam0)
    {
        ;
    }
    else
    {
        sub_741( "CCB", "Stopping the Favela_End context...", 0 );
        END_CONTEXT( "Favela_End" );
        sub_741( "CCB", "Stopping the Favela context...", 0 );
        END_CONTEXT( "Favela" );
    }
    sub_741( "CCB", "Stopping the Favela_Compound context...", 0 );
    END_CONTEXT( "Favela_Compound" );
    return;
}

void sub_14151()
{
    switch (l_U117)
    {
        case 0:
        if (g_U1049 < 11)
        {
            sub_14242( 0 );
            l_U117 = 2;
        }
        else
        {
            DO_SCREEN_FADE_OUT( 0 );
            sub_14967();
            sub_14745( -997353972, 1 );
            l_U178 = 1;
            l_U117 = 1;
        }
        sub_15154();
        break;
        case 1:
        if ((GET_NUMBER_OF_STREAMING_REQUESTS() == 0) AND (sub_15234()))
        {
            l_U117 = 4;
        }
        break;
        case 2:
        if (sub_15347( ref l_U218, 0 ))
        {
            sub_14242( 1 );
            sub_15499();
            l_U126 = 1;
            l_U117 = 3;
        }
        break;
        case 3:
        if (sub_17730() == 1)
        {
            sub_741( "KA", "eStateCutScene - Call Mid06 Cutscene here", 0 );
            l_U117 = 4;
            l_U178 = 1;
            break;
        }
        return;
        case 4:
        if (sub_21992() == 1)
        {
            sub_741( "KA", "estateBlendOut - Call the Mid06 Blendout", 0 );
            l_U117 = 5;
        }
        break;
        case 5:
        sub_24642();
        sub_17240( l_U359[4] );
        if ((l_U80._fU0 == 0) || (g_U1049 < 11))
        {
            g_U1049 = 11;
            sub_26151( ref l_U80, g_U1049, sub_6640(), g_U1050[11], g_U1174[11], g_U1216[11], g_U1258[11], 1 );
        }
        l_U117 = 6;
        break;
        case 6:
        if (sub_11953( ref l_U629 ))
        {
            if (NOT (IS_PED_DEAD( sub_6640() )))
            {
                if (NOT (IS_PLAYER_DEAD( sub_6662() )))
                {
                    SET_PLAYER_INVINCIBLE( sub_6662(), 0 );
                }
            }
        }
        if (l_U573 == 1)
        {
            if (sub_29851())
            {
                l_U573 = 0;
            }
        }
        sub_29990();
        if (l_U132 == 1)
        {
            if (sub_15347( ref l_U323, 0 ))
            {
                sub_30748();
                l_U132 = 0;
            }
        }
        if (sub_11953( ref l_U609 ))
        {
            sub_741( "NS", "tmrFakeMolotov02", 0 );
            SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -26.98000000, 49.66000000, 25.24000000, -35.82000000, 38.85000000, 32.00000000, 100, 1, 1545805694, 0 );
        }
        if (l_U127 == 1)
        {
            if (sub_31364() == 1)
            {
                l_U127 = 0;
            }
        }
        if (l_U572 == 1)
        {
            sub_31856();
            sub_31896();
        }
        sub_34565();
        if (g_U774 == 1)
        {
            sub_35162();
            sub_35295();
            g_U774 = 0;
        }
        if (l_U1254 == 0)
        {
            if (l_U133 == 1)
            {
                if (sub_35463())
                {
                    sub_35648();
                    l_U133 = 0;
                }
            }
        }
        if (sub_15347( ref l_U659, 0 ))
        {
            sub_741( "SA", "FAV_ONE_3_4_5_6", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "FAVELA_ONE_SONG", "FAV_ONE_3_4_5_6", "", 0.00000000, 2000, 0, -1082130432, 0 );
        }
        if (l_U968 == 1)
        {
            if (sub_36038( g_U1706 ))
            {
                l_U968 = 0;
            }
        }
        if (sub_15347( ref l_U638, 0 ))
        {
            sub_6122( ref g_U1699, -100.00000000, 0.00000000 );
            sub_5570( ref g_U1699, 1 );
            l_U1299 = 1;
            AUDIO_MUSIC_PLAY_ONESHOT();
        }
        if (sub_15347( ref l_U680, 0 ))
        {
            sub_36256();
        }
        if (sub_11953( ref l_U1107 ))
        {
            sub_36426();
            sub_36786();
        }
        if (l_U967 == 1)
        {
            if ((sub_35512( l_U785 )) || ((IS_SPHERE_VISIBLE( -14.38000000, 28.71000000, 23.49000000, 1.00000000, 0 )) AND (sub_35512( l_U743 ))))
            {
                sub_37073();
                sub_37207();
                sub_37375();
                sub_13120( ref l_U359 );
                l_U967 = 0;
            }
        }
        if (sub_15347( ref l_U701, 0 ))
        {
            sub_741( "NS", "F_IsPlayerInTriggerBoxFirstTime(tbReleaseCornerCover)", 0 );
            SHOOT_SINGLE_BULLET_BETWEEN_COORDS( 6.09800000, 40.35500000, 28.76400000, 0.00000000, 12.66700000, 40.00000000, 100, 1, 1545805694, 0 );
            sub_5320( ref l_U955, l_U954, 1, 0 );
            sub_11833( ref l_U955 );
            sub_37656();
            sub_37927();
            sub_38354();
            sub_38744();
            sub_38912();
            sub_39548();
            sub_11833( ref l_U1166 );
        }
        if (sub_11953( ref l_U955 ))
        {
            sub_741( "NS", "IsTimerDone(tmrWarningRocket)", 0 );
            SHOOT_SINGLE_BULLET_BETWEEN_COORDS( 6.09800000, 40.35500000, 28.76400000, 4.93000000, 20.02000000, 38.00000000, 0, 1, 1545805694, 0 );
        }
        if (l_U1064 == 0)
        {
            if ((sub_34905( ref l_U1020 )) >= 1)
            {
                sub_39926();
                l_U1064 = 1;
            }
        }
        if (sub_11953( ref l_U1166 ))
        {
            sub_40193();
            sub_40623();
            sub_40786();
            sub_41253();
        }
        if (l_U1164 == 0)
        {
            if (((IS_PED_DEAD( l_U1020[2] )) || (IS_PED_DEAD( l_U1020[0] ))) AND ((sub_34905( ref l_U1134 )) >= 1))
            {
                sub_41604();
                l_U1164 = 1;
            }
        }
        if (l_U1208 == 0)
        {
            if (((IS_PED_DEAD( l_U1020[2] )) || (IS_PED_DEAD( l_U1020[0] ))) AND ((sub_34905( ref l_U1175 )) >= 1))
            {
                sub_41834();
                l_U1208 = 1;
            }
        }
        if (GET_DOES_WEAPON_EXIST( l_U1205[1] ))
        {
            if ((GET_WEAPON_AMMO( l_U1205[1] )) == 0)
            {
                l_U1205[1] = sub_8259( l_U1175[1], g_U1820, 0, 25000, 0 );
            }
        }
        if (l_U1253 == 0)
        {
            if ((sub_34905( ref l_U1209 )) >= 1)
            {
                sub_42188();
                l_U1253 = 1;
            }
        }
        if (sub_15347( ref l_U764, 0 ))
        {
            g_U763 = 1;
        }
        g_U878 = sub_42391();
        if (l_U1254 == 0)
        {
            if (sub_35512( l_U722 ))
            {
                sub_42527();
                l_U1254 = 1;
                g_U774 = 1;
            }
        }
        else
        {
            sub_42699();
        }
        sub_43984();
        if (sub_45516( ref l_U806, sub_6640(), 0 ))
        {
            if (NOT (IS_PED_DEAD( sub_6640() )))
            {
                SET_PED_HEALTH( sub_6640(), 0, 0 );
            }
        }
        if (sub_45516( ref l_U827, sub_6640(), 0 ))
        {
            if (NOT (IS_PED_DEAD( sub_6640() )))
            {
                SET_PED_HEALTH( sub_6640(), 0, 0 );
            }
        }
        if (sub_45516( ref l_U848, sub_6640(), 0 ))
        {
            if (NOT (IS_PED_DEAD( sub_6640() )))
            {
                SET_PED_HEALTH( sub_6640(), 0, 0 );
            }
        }
        if (sub_45516( ref l_U869, sub_6640(), 0 ))
        {
            if (NOT (IS_PED_DEAD( sub_6640() )))
            {
                SET_PED_HEALTH( sub_6640(), 0, 0 );
            }
        }
        if (sub_45516( ref l_U890, sub_6640(), 0 ))
        {
            if (NOT (IS_PED_DEAD( sub_6640() )))
            {
                SET_PED_HEALTH( sub_6640(), 0, 0 );
            }
        }
        if (sub_45516( ref l_U911, sub_6640(), 0 ))
        {
            if (NOT (IS_PED_DEAD( sub_6640() )))
            {
                SET_PED_HEALTH( sub_6640(), 0, 0 );
            }
        }
        break;
    }
    return;
}

void sub_14242(unknown uParam0)
{
    sub_741( "NS", "P_LOAD_PRE_CUTSCENE_ASSESTS()", 0 );
    sub_14318( "mid_06_fAV1_CONCAT", uParam0 );
    sub_14573( 973577609, uParam0 );
    sub_14745( -997353972, uParam0 );
    return;
}

void sub_14318(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_14573(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_8575( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_14745(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_14967()
{
    sub_741( "NS", "P_REQUEST_GAMEPLAY_ASSETS", "###" );
    sub_14573( 973577609, 0 );
    sub_14573( -1409914275, 0 );
    sub_14573( 1773249650, 0 );
    sub_15060( 1545805694, 0 );
    return;
}

void sub_15060(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_15154()
{
    sub_741( "NS", "P_RESET_MAX_CONTEXTUAL_DIALOGUE", 0 );
    l_U78 = 0;
    l_U79 = 0;
    return;
}

void sub_15234()
{
    int Result;

    Result = 0;
    if ((HAS_WEAPON_LOADED( 1545805694 )) AND ((HAS_MODEL_LOADED( 1773249650 )) AND ((HAS_MODEL_LOADED( -1409914275 )) AND (HAS_MODEL_LOADED( 973577609 )))))
    {
        Result = 1;
    }
    return Result;
}

void sub_15347(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_15389( sub_6640(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

int sub_15389(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_15499()
{
    sub_741( "SA", "P_CREATE_ENEMIES", "###" );
    sub_15544();
    sub_17460();
    return;
}

void sub_15544()
{
    int I;

    sub_741( "NS", "P_CREATE_MOLOTOVERS()", 0 );
    sub_15599( ref l_U353, 1.00000000, 0 );
    sub_13120( ref l_U359 );
    for ( I = 0; I < 5; I++ )
    {
        l_U359[I] = sub_15800( ref l_U365[I] );
        if (NOT (IS_PED_DEAD( l_U359[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U359[I], 1 );
            SET_PED_AI_TEMPLATE( l_U359[I], ref g_U1791 );
            SET_PED_NO_RAGDOLL_TO_EXPLOSION_UNLESS_DEAD( l_U359[I], 1 );
            SET_PED_COMBAT_ATTRIBUTES( l_U359[I], 16, 0 );
            SET_PED_ALERTNESS( l_U359[I], 4 );
            SET_PED_FLAG_BLOCK_WOUNDED_MOVEMENT( l_U359[I], 1 );
            if (NOT (IS_PED_DEAD( sub_6640() )))
            {
                REGISTER_TARGET( l_U359[I], sub_6640() );
            }
            SET_BULLET_CAM_PREF( l_U359[I], "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", "", 0, 0, 0, 0, 0, 0, 0, 0 );
            sub_16706( l_U359[I], ref l_U353 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U359[2] )))
    {
        SET_PED_OBLIVIOUS_TO_DANGER( l_U359[2], 1 );
    }
    sub_17028( ref l_U346, l_U359[0], 1 );
    sub_17028( ref l_U345, l_U359[1], 1 );
    sub_17028( ref l_U344, l_U359[2], 1 );
    sub_17028( ref l_U347, l_U359[3], 1 );
    sub_17028( ref l_U345, l_U359[4], 1 );
    for ( I = 0; I < 5; I++ )
    {
        if (GET_DOES_WEAPON_EXIST( l_U431[I] ))
        {
            SET_WEAPON_VISIBLE( l_U431[I], 0 );
        }
    }
    sub_17240( l_U359[3] );
    sub_17358( ref l_U359, "piEnemyMOLTOV_" );
    return;
}

void sub_15599(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_15800(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_14573( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_16279( iParam0->_fU40 );
    sub_16359( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_16279(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_16359(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_16706(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_8575( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_15599( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_15599( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_17028(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_17240(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_17358(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_17460()
{
    sub_741( "NS", "P_CREATE_STAIRS_ENEMY()", 0 );
    sub_13154( l_U543 );
    l_U543 = sub_15800( ref l_U544 );
    if (NOT (IS_PED_DEAD( l_U543 )))
    {
        SET_PED_AI_TEMPLATE( l_U543, ref g_U1791 );
        SET_PED_ALERTNESS( l_U543, 4 );
        sub_8904( l_U543, g_U1819, 25000, 0, 0 );
        sub_16706( l_U543, ref l_U353 );
        REGISTER_TARGET( l_U543, sub_6640() );
        SET_PED_COMBAT_RANGE_MIN( l_U543, 0.00000000 );
        SET_PED_COMBAT_RANGE_MAX( l_U543, 5.00000000 );
        SET_PED_NAME_DEBUG( l_U543, "piStairs" );
        sub_17240( l_U543 );
    }
    return;
}

int sub_17730()
{
    unknown uVar2;
    unknown uVar3;
    int iVar4;
    unknown uVar5;
    unknown uVar6;

    switch (l_U119)
    {
        case 0: break;
        case 1:
        sub_741( "NS", "CUTSCENE_SETUP", 0 );
        sub_14242( 1 );
        sub_17837( ref l_U179, 1, 1 );
        sub_19097( 0 );
        sub_5320( ref l_U154, 300, 1, 0 );
        sub_11833( ref l_U154 );
        l_U119 = 2;
        break;
        case 2:
        if (sub_11953( ref l_U154 ))
        {
            if (NOT (IS_PED_DEAD( sub_6640() )))
            {
                CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_6640(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
                CUTSCENE_REGISTER_PED_TELEPORT( sub_6640(), l_U163, l_U166 );
                CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "GenCover", "15F1D7B8_6AA9829C_Corner1", 1, 1 );
                uVar6 = GET_WEAPON_FROM_HAND( sub_6640(), 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
                {
                    if ((sub_18028( uVar6 )) == 1)
                    {
                        CUTSCENE_REGISTER_PED_ACTION_INTENTION( sub_6640(), 47, -1, 0.00000000, 0.00000000, 0.00000000 );
                    }
                    else
                    {
                        CUTSCENE_REGISTER_PED_ACTION_INTENTION( sub_6640(), 48, -1, 0.00000000, 0.00000000, 0.00000000 );
                    }
                }
                uVar5 = GET_WEAPON_FROM_HAND( sub_6640(), 0, 0 );
                if (GET_DOES_WEAPON_EXIST( uVar5 ))
                {
                    if ((GET_WEAPON_TYPE( uVar5 )) == g_U1818)
                    {
                        SET_WEAPON_VISIBLE( uVar5, 0 );
                    }
                    else
                    {
                        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar5, "W_PI_Clt1911_Aa_H", 0 );
                    }
                }
            }
            REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U1692._fU0, g_U1692._fU4 ), "P_f1_mtlgatedoor_B01", 0 );
            ISEQ_REGISTER_ENTITY( -997353972, "MAX", sub_6640(), 0 );
            if (((IS_PED_DEAD( l_U359[3] )) == 0) AND ((DOES_PED_EXIST( l_U359[3] )) == 1))
            {
                REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U359[3], "M_F1_GCS_A", 0 );
                CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U359[3], "/Global/AMED/AMED_Root/AMED_INITIALIZE_LOCO" );
                CUTSCENE_REGISTER_PED_TELEPORT( l_U359[3], l_U365[3]._fU0, l_U365[3]._fU12 );
                if (GET_DOES_WEAPON_EXIST( l_U431[3] ))
                {
                    REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U431[3], "W_GR_Mtov_Aa_H", 0 );
                }
            }
            if (((IS_PED_DEAD( l_U359[2] )) == 0) AND ((DOES_PED_EXIST( l_U359[2] )) == 1))
            {
                REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U359[2], "M_F1_GCS_A^1", 0 );
                CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U359[2], "/Global/AMED/AMED_Root/AMED_INITIALIZE_LOCO" );
                CUTSCENE_REGISTER_PED_TELEPORT( l_U359[2], l_U365[2]._fU0, l_U365[2]._fU12 );
                if (GET_DOES_WEAPON_EXIST( l_U431[2] ))
                {
                    REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U431[2], "W_GR_Mtov_Aa_H^1", 0 );
                }
            }
            if (((IS_PED_DEAD( l_U359[1] )) == 0) AND ((DOES_PED_EXIST( l_U359[1] )) == 1))
            {
                REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U359[1], "M_F1_GCS_A^2", 0 );
                CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U359[1], "/Global/AMED/AMED_Root/AMED_INITIALIZE_LOCO" );
                CUTSCENE_REGISTER_PED_TELEPORT( l_U359[1], l_U365[1]._fU0, l_U365[1]._fU12 );
                if (GET_DOES_WEAPON_EXIST( l_U431[1] ))
                {
                    REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U431[1], "W_GR_Mtov_Aa_H^2", 0 );
                }
            }
            if (((IS_PED_DEAD( l_U359[0] )) == 0) AND ((DOES_PED_EXIST( l_U359[0] )) == 1))
            {
                REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U359[0], "M_F1_GCS_A^3", 0 );
                CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U359[0], "/Global/AMED/AMED_Root/AMED_INITIALIZE_LOCO" );
                CUTSCENE_REGISTER_PED_TELEPORT( l_U359[0], l_U365[0]._fU0, l_U365[0]._fU12 );
                if (GET_DOES_WEAPON_EXIST( l_U431[0] ))
                {
                    REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U431[0], "W_GR_Mtov_Aa_H^3", 0 );
                }
            }
            REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_F1_GCS_A^4", -1225995593 );
            REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_F1_GCS_A^5", 1993402636 );
            CUTSCENE_REGISTER_ISEQ( -997353972 );
            CUTSCENE_ENABLE_SKIP( 0 );
            START_SEAMLESS_CUTSCENE();
            l_U119 = 3;
        }
        break;
        case 3:
        sub_741( "SP", "eOpeningCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        sub_20988( 1, 0, 0, 1 );
        if (IS_SCREEN_FADED_OUT())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        l_U119 = 4;
        sub_741( "SP", "eOpeningCutsceneState = CUTSCENE_PLAYING", 0 );
        break;
        case 4:
        if (HAS_CUTSCENE_FINISHED() == 1)
        {
            if (l_U122 == 1)
            {
                if (l_U123 == 0)
                {
                    sub_14967();
                    l_U123 = 1;
                }
                l_U117 = 1;
            }
            CLEAR_NAMED_CUTSCENE( "mid_06_fAV1_CONCAT" );
            AUDIO_MUSIC_FORCE_TRACK( "FAVELA_ONE_SONG", "FAV_ONE_3_5", "", 0.00000000, 0, 0, -1082130432, 0 );
            sub_21371( 1 );
            return 1;
        }
        else
        {
            uVar2 = GET_CUTSCENE_SECTION_PLAYING();
            uVar3 = GET_CUTSCENE_TIME();
            iVar4 = GET_CUTSCENE_TIME_MS();
            if ((IS_SCREEN_FADED_OUT() == 1) || (IS_SCREEN_FADING_OUT() == 1))
            {
                CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
                l_U122 = 1;
            }
            if (l_U131 == 1)
            {
                if (iVar4 >= 4500)
                {
                    AUDIO_MUSIC_FORCE_TRACK( "FAVELA_ONE_SONG", "FAV_ONE_3_5", "", 0.00000000, 5000, 0, -1082130432, 0 );
                    l_U131 = 0;
                }
            }
            if (l_U123 == 0)
            {
                if (iVar4 >= 5000)
                {
                    sub_14967();
                    l_U123 = 1;
                }
            }
            if (l_U124 == 0)
            {
                if (l_U123 == 1)
                {
                    if (sub_15234() == 1)
                    {
                        sub_741( "NS", "Gameplay assets are loaded!!!", 0 );
                        CUTSCENE_ENABLE_SKIP( 1 );
                        l_U124 = 1;
                    }
                }
            }
        }
        break;
    }
    return 0;
}

void sub_17837(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

    sub_17849( iParam0 );
    if ((IS_PED_DEAD( sub_6640() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND( sub_6640(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if ((sub_18028( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if ((sub_18256( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND( sub_6640(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER( sub_6640(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER( sub_6640(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER( sub_6640(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD( sub_6640() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND( sub_6640(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_6640(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND( sub_6640(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_6640(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD( sub_6640() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND( sub_6640(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if ((sub_18256( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND( sub_6640(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND( sub_6640(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_6640(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

void sub_17849(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

int sub_18028(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_18256(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_19097(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_6640() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND( sub_6640(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if (((sub_18028( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 = sub_19202();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_6640(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

int sub_19202()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_6640() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_6640(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_18028( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_6640(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_6640(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_6640(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

void sub_20988(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_6640() )))
        {
            SET_PLAYER_CONTROL( sub_6662(), 0, uParam2 );
            SET_PED_DUCKING( sub_6640(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_6640() );
            }
            SET_PED_INVINCIBLE( sub_6640(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_21371(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_6640() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_6640(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_6640(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_6640(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_6640(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_6640(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

int sub_21992()
{
    unknown uVar2;

    switch (l_U178)
    {
        case 0: break;
        case 1:
        sub_741( "KA", "eMid06BlendState = BLEND_SETUP", 0 );
        sub_20988( 1, 0, 0, 1 );
        if ((ISEQ_QUERY_STATE( -997353972, 3 )) == 0)
        {
            sub_741( "KA", "SNAP_PLAYER_TO_COVER_POINT", 0 );
            sub_17837( ref l_U179, 1, 1 );
            sub_19097( 1 );
            SNAP_PLAYER_TO_COVERPOINT( sub_6662(), "GenCover", "15F1D7B8_6AA9829C_Corner1", 1 );
            uVar2 = GET_WEAPON_FROM_HAND( sub_6640(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
            {
                if ((sub_18028( uVar2 )) == 1)
                {
                    sub_741( "KA", "PED_SET_ACTION_INT - TIME TO MOVE", 0 );
                    PED_SET_ACTION_INTENTION( sub_6640(), 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
                }
                else
                {
                    PED_SET_ACTION_INTENTION( sub_6640(), 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
                }
            }
            sub_22414( sub_6640(), l_U163, l_U166 );
            ISEQ_REGISTER_ENTITY( -997353972, "MAX", sub_6640(), 0 );
            sub_741( "KA", "START ISEQ - MID06 BLEND", 0 );
            ISEQ_START( -997353972 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U167, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U168, 1065353216, 0 );
            l_U178 = 2;
        }
        else if (ISEQ_QUERY_STATE( -997353972, 1 ))
        {
            sub_741( "KA", "eSNS_LOADING+++++++++++++++++++++++++++++++++++++++++++++++++++++++", 0 );
        }
        else if (ISEQ_QUERY_STATE( -997353972, 2 ))
        {
            sub_741( "KA", "eSNS_READY+++++++++++++++++++++++++++++++++++++++++++++++++++++++", 0 );
        }
        else if (ISEQ_QUERY_STATE( -997353972, 4 ))
        {
            sub_741( "KA", "INTERUPTED+++++++++++++++++++++++++++++++++++++++++++++++++++++++", 0 );
        }
        else if (ISEQ_QUERY_STATE( -997353972, 6 ))
        {
            sub_741( "KA", "eSNS_TERMINATED+++++++++++++++++++++++++++++++++++++++++++++++++++++++", 0 );
        };;;;;
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U167, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U168, 1065353216, 0 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_FAV1_CP_09", "B_OUT_MID_06_FAV1_SIDEARM_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        l_U178 = 2;
        break;
        case 2:
        sub_741( "KA", "eMid06BlendState = BLEND_FIRST_FRAME", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "FAVELA_ONE_SONG", "FAV_ONE_3_5", "", 0.00000000, 0, 0, -1082130432, 0 );
        if (l_U126 == 0)
        {
            sub_15499();
        }
        l_U431[0] = sub_8904( l_U359[0], 1545805694, 1, 0, 0 );
        sub_8259( l_U359[0], g_U1819, 2, 25000, 0 );
        if (NOT (IS_PED_DEAD( l_U359[0] )))
        {
            SET_PED_COMBAT_ATTRIBUTES( l_U359[0], 1, 0 );
        }
        l_U431[1] = sub_8904( l_U359[1], 1545805694, 1, 0, 0 );
        sub_8259( l_U359[1], g_U1820, 0, 25000, 0 );
        if (NOT (IS_PED_DEAD( l_U359[1] )))
        {
            SET_PED_COMBAT_ATTRIBUTES( l_U359[1], 1, 0 );
        }
        l_U431[2] = sub_8904( l_U359[2], g_U1820, 25000, 0, 0 );
        sub_8904( l_U359[3], g_U1820, 25000, 0, 0 );
        l_U431[3] = sub_8259( l_U359[3], 1545805694, 6, 25000, 0 );
        if (NOT (IS_PED_DEAD( l_U359[3] )))
        {
            SET_PED_COMBAT_ATTRIBUTES( l_U359[3], 1, 0 );
        }
        l_U431[4] = sub_8904( l_U359[4], g_U1819, 25000, 0, 0 );
        sub_23592();
        DO_SCREEN_FADE_IN( 0 );
        if (NOT (IS_PED_DEAD( sub_6640() )))
        {
            if (NOT (IS_PLAYER_DEAD( sub_6662() )))
            {
                SET_PLAYER_INVINCIBLE( sub_6662(), 1 );
            }
        }
        l_U178 = 3;
        break;
        case 3:
        if (NOT (sub_11714( ref l_U619 )))
        {
            if (IS_ANIMATED_CAMERA_PLAYING())
            {
                if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_FAV1_CP_09", "B_OUT_MID_06_FAV1_SIDEARM_CAM" )) - 500))
                {
                    CAMERA_FREEZE_FRAME( 1, 400, 0, 0 );
                    sub_741( "NS", "eMid06BlendState = BLEND_PLAYING", 0 );
                    sub_5320( ref l_U619, l_U618, 1, 0 );
                    sub_11833( ref l_U619 );
                }
            }
        }
        if (sub_11953( ref l_U619 ))
        {
            sub_24208( 1, 1 );
            if (NOT (IS_PED_DEAD( sub_6640() )))
            {
                if (NOT (IS_PLAYER_DEAD( sub_6662() )))
                {
                    SET_PLAYER_INVINCIBLE( sub_6662(), 1 );
                }
            }
            sub_5320( ref l_U629, l_U628, 1, 0 );
            sub_11833( ref l_U629 );
            l_U178 = 0;
            return 1;
        }
        break;
    }
    return 0;
}

void sub_22414(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_23592()
{
    if (NOT (IS_PED_DEAD( sub_6640() )))
    {
        if (NOT (IS_PED_DEAD( l_U359[0] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U574 );
            TASK_SHOOT_AT_COORD( 0, -33.42757000, 36.22607000, 20.52932000, 1500, 0, 1, 1 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            CLOSE_SEQUENCE_TASK( l_U574 );
            TASK_PERFORM_SEQUENCE( l_U359[0], l_U574 );
            CLEAR_SEQUENCE_TASK( l_U574 );
        }
        if (NOT (IS_PED_DEAD( l_U359[1] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U359[1], 0 );
            TASK_ATTACK_MOVE( l_U359[1], -34.49126000, 49.66700000, 24.03268000, 1092616192, 1101004800, -1082130432, 3 );
        }
        if (NOT (IS_PED_DEAD( l_U359[2] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U359[2], 0 );
            TASK_ATTACK_MOVE( l_U359[2], -28.43000000, 42.89000000, 24.24000000, 1092616192, 1101004800, -1082130432, 3 );
        }
    }
    sub_5320( ref l_U145, l_U144, 1, 0 );
    sub_11833( ref l_U145 );
    return;
}

void sub_24208(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_6640() )))
    {
        SET_PLAYER_CONTROL( sub_6662(), 1, 0 );
        SET_PED_INVINCIBLE( sub_6640(), 0 );
        if (bParam0)
        {
            sub_24289();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_24289()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_6640() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_6640(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_6640(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_6640(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_6640(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_24642()
{
    int I;

    sub_741( "SA", "P_START_GAMEPLAY", "###" );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    sub_6227( ref g_U1692, 1, 1, 0.50000000 );
    sub_5570( ref g_U1692, 0 );
    sub_6122( ref g_U1706, 0.00000000, 110.00000000 );
    sub_24746( ref g_U1706, 1 );
    sub_24871();
    sub_25648();
    for ( I = 0; I < 5; I++ )
    {
        if (GET_DOES_WEAPON_EXIST( l_U431[I] ))
        {
            SET_WEAPON_VISIBLE( l_U431[I], 1 );
        }
    }
    DO_SCREEN_FADE_IN( 0 );
    l_U572 = 1;
    sub_11833( ref l_U577 );
    sub_11833( ref l_U589 );
    sub_11833( ref l_U599 );
    sub_11833( ref l_U609 );
    sub_25858();
    l_U964[0] = sub_25396( -4072149, -5.39000000, 15.84000000, 25.38000000, 0.00000000, 0.00000000, 0.00000000, 1, 0, 0, 1119092736 );
    return;
}

void sub_24746(int iParam0, int iParam1)
{
    if ((sub_5582( iParam0 )) == 0)
    {
        sub_5648( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

void sub_24871()
{
    sub_741( "CO", "P_CREATE_S_FV1_GG_SA_03", 0 );
    sub_24971( ref g_U685, g_U759, -767728684, 1948141297, -25.28000000, 40.03000000, 20.78000000, 1.50000000, 0.00000000, 1.00000000, "" );
    sub_25100( ref g_U685 );
    return;
}

void sub_24971(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_741( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_25100(int iParam0)
{
    sub_741( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_25161( iParam0->_fU12 )) == 1)
        {
            sub_741( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_741( "CO", "has never been collected.", 0 );
        }
        if ((sub_25161( iParam0->_fU12 )) == 0)
        {
            sub_13495( iParam0->_fU0 );
            iParam0->_fU0 = sub_25396( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_741( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_741( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_25161(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_25396(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_25648()
{
    sub_741( "SA", "P_TRIGGER_ENEMY_MOLTOV", "###" );
    sub_24746( ref g_U1692, 1 );
    sub_5570( ref g_U1692, 1 );
    l_U571 = 1;
    l_U1300 = GET_RANDOM_INT_IN_RANGE( 0, 2 );
    return;
}

void sub_25858()
{
    sub_741( "CCB", "P_START_SP_CHALLENGES_MOLOTOV", 0 );
    sub_741( "CCB", "Starting the Favela_Molotov context...", 0 );
    START_CONTEXT( "Favela_Molotov" );
    return;
}

void sub_26151(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_741( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_741( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_9558( iParam1 );
        sub_26410( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_26861( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_26861( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_27093( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_26861( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_27093( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_27093( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_26861( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_27093( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_27093( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_27093( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_26861( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_27093( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_27093( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_27093( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_27093( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_28651( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_741( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_26410(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_6922( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_741( "TEH", "Ending context", 0 );
        sub_741( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_26861(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_27093(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_28651(int iParam0)
{
    sub_8575( "CHECKPOINT DATA" );
    sub_28690( iParam0->_fU4 );
    sub_28713( iParam0->_fU16 );
    sub_28713( iParam0->_fU20 );
    sub_28713( iParam0->_fU24 );
    sub_28756( iParam0->_fU28 );
    sub_28756( iParam0->_fU56 );
    sub_28756( iParam0->_fU60 );
    sub_28756( iParam0->_fU64 );
    sub_28756( iParam0->_fU68 );
    sub_28756( iParam0->_fU72 );
    sub_28756( iParam0->_fU76 );
    sub_28756( iParam0->_fU80 );
    sub_28756( iParam0->_fU84 );
    sub_28756( iParam0->_fU88 );
    sub_28756( iParam0->_fU92 );
    sub_28713( iParam0->_fU32 );
    sub_28756( iParam0->_fU36 );
    sub_28756( iParam0->_fU40 );
    sub_28756( iParam0->_fU44 );
    sub_28713( iParam0->_fU136 );
    sub_28961( iParam0->_fU140 );
    sub_28756( iParam0->_fU52 );
    sub_8575( "---nRightHolsterAttachmentEnabled: " );
    sub_28756( iParam0->_fU96 );
    sub_8575( "---nRightHolsterAttachmentToggled: " );
    sub_28756( iParam0->_fU100 );
    sub_8575( "---nLeftHolsterAttachmentEnabled: " );
    sub_28756( iParam0->_fU104 );
    sub_8575( "---nLeftHolsterAttachmentToggled: " );
    sub_28756( iParam0->_fU108 );
    sub_8575( "---nRifleHolsterAttachmentEnabled: " );
    sub_28756( iParam0->_fU112 );
    sub_8575( "---nRifleHolsterAttachmentToggled: " );
    sub_28756( iParam0->_fU116 );
    sub_8575( "---nRightHandAttachmentEnabled: " );
    sub_28756( iParam0->_fU120 );
    sub_8575( "---nRightHandAttachmentToggled: " );
    sub_28756( iParam0->_fU124 );
    sub_8575( "---nLeftHandAttachmentEnabled: " );
    sub_28756( iParam0->_fU128 );
    sub_8575( "---nLeftHandAttachmentToggled: " );
    sub_28756( iParam0->_fU132 );
    sub_28756( l_U1 );
    sub_28756( 144 );
    return;
}

void sub_28690(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_28713(unknown uParam0)
{
    return;
}

void sub_28756(unknown uParam0)
{
    return;
}

void sub_28961(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

int sub_29851()
{
    if ((sub_29865( ref g_U1706 )) >= 0.85000000)
    {
        sub_6122( ref g_U1706, 110.00000000, 111.00000000 );
        return 1;
    }
    return 0;
}

void sub_29865(int iParam0)
{
    int iVar3;
    float Result;

    if ((sub_5582( iParam0 )) == 0)
    {
        sub_5648( iParam0 );
    }
    iVar3 = 0;
    Result = 0.00000000;
    GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar3, ref Result );
    return Result;
}

void sub_29990()
{
    int I;

    switch (l_U120)
    {
        case 0:
        if (sub_15347( ref l_U260, 0 ))
        {
            l_U120 = 1;
        }
        break;
        case 1:
        for ( I = 0; I < 5; I++ )
        {
            if ((I != 4) AND (I != 1))
            {
                if (NOT (IS_PED_DEAD( l_U359[I] )))
                {
                    CLEAR_PED_TASKS_IMMEDIATELY( l_U359[I] );
                    sub_30143( l_U359[I] );
                    if (I == 0)
                    {
                        TASK_ATTACK_MOVE( l_U359[I], -34.67000000, 54.94000000, 27.13000000, 2.00000000, 1101004800, -1082130432, 3 );
                    }
                    else if (I == 1)
                    {
                        TASK_ATTACK_MOVE( l_U359[I], -31.19000000, 54.19000000, 24.03000000, 2.00000000, 1101004800, -1082130432, 3 );
                    }
                    else if (I == 2)
                    {
                        TASK_ATTACK_MOVE( l_U359[I], -22.59000000, 46.87000000, 24.25000000, 2.00000000, 1101004800, -1082130432, 3 );
                    }
                    else if (I == 3)
                    {
                        TASK_ATTACK_MOVE( l_U359[I], -23.54000000, 48.02000000, 27.50000000, 2.00000000, 1101004800, -1082130432, 3 );
                    };;;;
                }
            }
            else if (I == 4)
            {
                if (NOT (IS_PED_VISIBLE( l_U359[I] )))
                {
                    sub_13154( l_U359[I] );
                }
            }
        }
        if ((sub_30506( ref l_U359 )) > 1)
        {
            l_U132 = 1;
        }
        l_U120 = 2;
        break;
        case 2:
        if ((sub_30506( ref l_U359 )) != 0)
        {
            for ( I = 0; I < 5; I++ )
            {
                if (sub_15389( l_U359[I], l_U437[I] ))
                {
                    sub_13154( l_U359[I] );
                }
            }
        }
        else
        {
            l_U120 = 3;
        }
        break;
        case 3: break;
    }
    return;
}

void sub_30143(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        RESET_PED_TETHERING( uParam0 );
    }
    return;
}

void sub_30506(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_30748()
{
    unknown uVar2;

    sub_741( "NS", "P_CREATE_ANOTHER_MOLOTOV()", 0 );
    sub_868( ref l_U558, -4.61000000, 42.85000000, 27.57000000, 100.29000000, -659081672, 7, 3, 2, 0, 0 );
    sub_13154( l_U557 );
    l_U557 = sub_15800( ref l_U558 );
    if (NOT (IS_PED_DEAD( l_U557 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U557, 1 );
        SET_PED_AI_TEMPLATE( l_U557, ref g_U1791 );
        SET_PED_NO_RAGDOLL_TO_EXPLOSION_UNLESS_DEAD( l_U557, 1 );
        SET_PED_COMBAT_ATTRIBUTES( l_U557, 16, 0 );
        SET_PED_ALERTNESS( l_U557, 4 );
        SET_PED_FLAG_BLOCK_WOUNDED_MOVEMENT( l_U557, 1 );
        SET_PED_NAME_DEBUG( l_U557, "piAnotherMolotov" );
        if (NOT (IS_PED_DEAD( sub_6640() )))
        {
            REGISTER_TARGET( l_U557, sub_6640() );
        }
        sub_16706( l_U557, ref l_U353 );
        sub_17028( ref l_U351, l_U557, 1 );
    }
    sub_8904( l_U557, g_U1820, 25000, 0, 0 );
    uVar2 = sub_8259( l_U557, 1545805694, 6, 25000, 0 );
    if (NOT (IS_PED_DEAD( sub_6640() )))
    {
        if (NOT (IS_PED_DEAD( l_U557 )))
        {
            OPEN_SEQUENCE_TASK( ref l_U574 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, -9.26000000, 40.34000000, 27.57000000, 3, 20000, 1048576000, 0, 0 );
            TASK_SWAP_WEAPON( 0, 0 );
            TASK_COMBAT_PED( 0, sub_6640() );
            CLOSE_SEQUENCE_TASK( l_U574 );
            TASK_PERFORM_SEQUENCE( l_U557, l_U574 );
            CLEAR_SEQUENCE_TASK( l_U574 );
        }
    }
    return;
}

void sub_31364()
{
    int Result;

    Result = 0;
    if (l_U129 == 1)
    {
        if (IS_PED_DEAD( l_U359[1] ))
        {
            sub_31417( l_U359[4] );
            if (NOT (IS_PED_DEAD( l_U359[4] )))
            {
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U359[4], 0 );
                TASK_COMBAT_PED( l_U359[4], sub_6640() );
            }
            l_U129 = 0;
        }
    }
    if (l_U130)
    {
        if ((sub_11953( ref l_U145 )) || ((IS_PED_DEAD( l_U359[2] )) || ((IS_PED_DEAD( l_U359[1] )) || (IS_PED_DEAD( l_U359[0] )))))
        {
            sub_31417( l_U359[3] );
            OPEN_SEQUENCE_TASK( ref l_U574 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, -24.95000000, 46.17000000, 27.50000000, 2, 20000, 0.25000000, 0, 4.00000000 );
            TASK_SWAP_WEAPON( 0, 0 );
            TASK_COMBAT_PED( 0, sub_6640() );
            CLOSE_SEQUENCE_TASK( l_U574 );
            TASK_PERFORM_SEQUENCE( l_U359[3], l_U574 );
            CLEAR_SEQUENCE_TASK( l_U574 );
            if (NOT (IS_PED_DEAD( l_U359[0] )))
            {
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U359[0], 0 );
            }
            l_U130 = 0;
        }
    }
    return Result;
}

void sub_31417(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

int sub_31856()
{
    if ((sub_30506( ref l_U359 )) == 0)
    {
        return 1;
    }
    return 0;
}

void sub_31896()
{
    if (l_U571 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_6640() )))
        {
            if (sub_15347( ref l_U197, 0 ))
            {
                sub_741( "NS", "PLAYER LEFT COVER", 0 );
                sub_24746( ref g_U1692, 1 );
                sub_5570( ref g_U1692, 1 );
                AUDIO_MUSIC_FORCE_TRACK( "FAVELA_ONE_SONG", "FAV_ONE_3_5", "", 0.00000000, 0, 0, -1082130432, 0 );
                AUDIO_MUSIC_REQUEST_ONESHOT( "FAVELA_1_ONESHOT_2", 0 );
                sub_32087();
                sub_32432();
                sub_32873();
                sub_33391();
                sub_33924();
                sub_34217();
                sub_11833( ref l_U1107 );
                sub_34424();
            }
        }
    }
    return;
}

void sub_32087()
{
    sub_741( "NS", "P_CREATE_RIGHT_SIDE_ROOF", 0 );
    sub_13154( l_U976 );
    l_U976 = sub_15800( ref l_U977 );
    if (NOT (IS_PED_DEAD( l_U976 )))
    {
        if (NOT (IS_PED_DEAD( sub_6640() )))
        {
            REGISTER_TARGET( l_U976, sub_6640() );
        }
        SET_BULLET_CAM_PREF( l_U976, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", "", 0, 0, 0, 0, 0, 0, 0, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U976, 1 );
        SET_PED_AI_TEMPLATE( l_U976, ref g_U1791 );
        SET_PED_ACCURACY( l_U976, 31186664 );
        SET_PED_ALERTNESS( l_U976, 4 );
        sub_16706( l_U976, ref l_U970 );
        SET_PED_NAME_DEBUG( l_U976, "piRightSideRoof " );
        sub_8904( l_U976, g_U1820, 25000, 0, 0 );
        sub_17240( l_U976 );
    }
    sub_17028( ref l_U950, l_U976, 1 );
    return;
}

void sub_32432()
{
    int I;

    sub_741( "NS", "P_CREATE_FAR_ROOF", 0 );
    sub_13120( ref l_U990 );
    for ( I = 0; I < 2; I++ )
    {
        l_U990[I] = sub_15800( ref l_U993[I] );
        if (NOT (IS_PED_DEAD( l_U990[I] )))
        {
            if (NOT (IS_PED_DEAD( sub_6640() )))
            {
                REGISTER_TARGET( l_U990[I], sub_6640() );
            }
            SET_BULLET_CAM_PREF( l_U990[I], "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", "", 0, 0, 0, 0, 0, 0, 0, 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U990[I], 1 );
            SET_PED_AI_TEMPLATE( l_U990[I], ref g_U1791 );
            SET_PED_ACCURACY( l_U990[I], 31186664 );
            SET_PED_ALERTNESS( l_U990[I], 4 );
            SET_PED_SUPERLOD_THRESHOLD( l_U990[I], 300.00000000 );
            sub_16706( l_U990[I], ref l_U970 );
            sub_17358( ref l_U990, "piFarRoof " );
            sub_8904( l_U990[I], g_U1819, 25000, 0, 0 );
            sub_17240( l_U990[I] );
        }
    }
    sub_17028( ref l_U951, l_U990[0], 1 );
    sub_17028( ref l_U953, l_U990[1], 1 );
    return;
}

void sub_32873()
{
    int I;

    sub_741( "NS", "P_CREATE_GROUP_C", 0 );
    sub_13120( ref l_U1079 );
    for ( I = 0; I < 1; I++ )
    {
        l_U1079[I] = sub_15800( ref l_U1065[I] );
        if (NOT (IS_PED_DEAD( l_U1079[I] )))
        {
            if (NOT (IS_PED_DEAD( sub_6640() )))
            {
                REGISTER_TARGET( l_U1079[I], sub_6640() );
            }
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1079[I], 1 );
            SET_PED_AI_TEMPLATE( l_U1079[I], ref g_U1791 );
            SET_PED_ACCURACY( l_U1079[I], 31186664 );
            SET_PED_ALERTNESS( l_U1079[I], 4 );
            SET_PED_COMBAT_ATTRIBUTES( l_U1079[I], 1, 0 );
            sub_16706( l_U1079[I], ref l_U970 );
            sub_17358( ref l_U1079, "piGroupC " );
            sub_33158( ref l_U970, 0.80000000 );
            sub_8904( l_U1079[I], g_U1819, 25000, 0, 0 );
            sub_17240( l_U1079[I] );
        }
    }
    return;
}

void sub_33158(int iParam0, unknown uParam1)
{
    iParam0->_fU4 = uParam1;
    if (DOES_GROUP_EXIST( iParam0->_fU0 ))
    {
        SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
        SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    }
    else
    {
        sub_8575( "[GA] Warning - AI Group does not exist when calling P_GROUP_CHANGE_FIRING_DISTRIBUTION" );
    }
    return;
}

void sub_33391()
{
    int I;

    sub_741( "NS", "P_CREATE_Move_the_player", 0 );
    sub_13120( ref l_U1255 );
    for ( I = 0; I < 2; I++ )
    {
        l_U1255[I] = sub_15800( ref l_U1258[I] );
        if (NOT (IS_PED_DEAD( l_U1255[I] )))
        {
            if (NOT (IS_PED_DEAD( sub_6640() )))
            {
                REGISTER_TARGET( l_U1255[I], sub_6640() );
            }
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1255[I], 1 );
            SET_PED_AI_TEMPLATE( l_U1255[I], ref g_U1791 );
            SET_PED_ACCURACY( l_U1255[I], 31186664 );
            SET_PED_ALERTNESS( l_U1255[I], 4 );
            SET_PED_COMBAT_ATTRIBUTES( l_U1255[I], 512, 1 );
            SET_PED_FLAG_SCRIPTED_PROJECTILE_USE( l_U1255[I], 1 );
            sub_16706( l_U1255[I], ref l_U970 );
            sub_17358( ref l_U1255, "piMoveThePlayerAlong " );
            sub_33158( ref l_U970, 0.80000000 );
        }
    }
    sub_8904( l_U1255[0], 1545805694, 5, 0, 0 );
    sub_8259( l_U1255[0], g_U1820, 0, 25000, 0 );
    if (NOT (IS_PED_DEAD( l_U1255[0] )))
    {
        SET_PED_COMBAT_ATTRIBUTES( l_U1255[0], 1, 0 );
    }
    sub_8904( l_U1255[1], g_U1820, 25000, 0, 0 );
    sub_17028( ref l_U950, l_U1255[1], 1 );
    sub_33861( ref l_U1255 );
    return;
}

void sub_33861(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_17240( (uParam0^)[I] );
    }
    return;
}

void sub_33924()
{
    sub_741( "NS", "P_CREATE_BottomStair()", 0 );
    sub_13154( l_U1285 );
    l_U1285 = sub_15800( ref l_U1286 );
    if (NOT (IS_PED_DEAD( l_U1285 )))
    {
        if (NOT (IS_PED_DEAD( sub_6640() )))
        {
            REGISTER_TARGET( l_U1285, sub_6640() );
        }
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1285, 1 );
        SET_PED_AI_TEMPLATE( l_U1285, ref g_U1791 );
        SET_PED_ACCURACY( l_U1285, 31186664 );
        SET_PED_ALERTNESS( l_U1285, 4 );
        sub_16706( l_U1285, ref l_U970 );
        SET_PED_NAME_DEBUG( l_U1285, "piBottomStair " );
        sub_33158( ref l_U970, 0.80000000 );
    }
    sub_17028( ref l_U349, l_U1285, 1 );
    sub_8904( l_U1285, g_U1819, 25000, 0, 0 );
    sub_17240( l_U1285 );
    return;
}

void sub_34217()
{
    int I;

    sub_741( "NS", "P_ACTION_GROUP_C()", 0 );
    for ( I = 0; I < 1; I++ )
    {
        sub_31417( l_U1079[I] );
        if (NOT (IS_PED_DEAD( l_U1079[I] )))
        {
            if (NOT (IS_PED_DEAD( sub_6640() )))
            {
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1079[I], 0 );
                TASK_ATTACK_MOVE( l_U1079[I], -10.28000000, 38.42000000, 24.33000000, 1092616192, 1101004800, -1082130432, 3 );
            }
        }
    }
    l_U1090 = 1;
    return;
}

void sub_34424()
{
    sub_741( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_741( "CCB", "Starting the Favela_Compound context...", 0 );
    START_CONTEXT( "Favela_Compound" );
    return;
}

void sub_34565()
{
    if (l_U576 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_6640() )))
        {
            if (NOT (IS_PED_IN_COVER( sub_6640() )))
            {
                sub_741( "NS", "player left cover and went for the stairs", 0 );
                sub_34678();
                l_U576 = 0;
            }
        }
        if ((sub_30506( ref l_U359 )) == 1)
        {
            sub_741( "NS", "one molotover left", 0 );
            sub_34678();
            l_U576 = 0;
        }
        l_U587 = sub_34905( ref l_U359 );
        if ((l_U586 == l_U587) AND ((l_U577._fU16) || (sub_11953( ref l_U577 ))))
        {
            sub_741( "NS", "Player did not kill anyone for 15 seconds", 0 );
            sub_34678();
            l_U576 = 0;
        }
        if (l_U586 != l_U587)
        {
            sub_12490( ref l_U577 );
            sub_11833( ref l_U577 );
        }
    }
    return;
}

void sub_34678()
{
    sub_741( "NS", "P_ACTION_STAIRS_ENEMY()", 0 );
    if (NOT (IS_PED_DEAD( sub_6640() )))
    {
        if (NOT (IS_PED_DEAD( l_U543 )))
        {
            sub_31417( l_U543 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U543, 0 );
            TASK_ATTACK_MOVE( l_U543, -27.90000000, 37.24000000, 20.24000000, 1092616192, 1101004800, -1082130432, 3 );
        }
    }
    return;
}

void sub_34905(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

void sub_35162()
{
    STOP_PARTICLE_FX_LOOPED( l_U575 );
    ISEQ_UNREGISTER_ENTITY( -997353972, "MAX" );
    ISEQ_TERMINATE( -997353972 );
    sub_13120( ref l_U359 );
    sub_13154( l_U543 );
    sub_12490( ref l_U145 );
    sub_12490( ref l_U589 );
    sub_12490( ref l_U599 );
    sub_12490( ref l_U609 );
    sub_12490( ref l_U619 );
    sub_12490( ref l_U629 );
    return;
}

void sub_35295()
{
    sub_741( "CCB", "P_STOP_SP_CHALLENGES_MOLOTOV", 0 );
    sub_741( "CCB", "Stopping the Favela_Molotov context...", 0 );
    END_CONTEXT( "Favela_Molotov" );
    return;
}

int sub_35463()
{
    if ((IS_PED_DEAD( l_U990[0] )) AND (IS_PED_DEAD( l_U976 )))
    {
        if (sub_35512( l_U302 ))
        {
            if (NOT (sub_11714( ref l_U135 )))
            {
                sub_5320( ref l_U135, l_U134, 1, 0 );
                sub_11833( ref l_U135 );
            }
        }
        else if (l_U135._fU20 == 1)
        {
            sub_12490( ref l_U135 );
        }
        if (sub_11953( ref l_U135 ))
        {
            return 1;
        }
    }
    return 0;
}

void sub_35512(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_15389( sub_6640(), uParam0 );
}

void sub_35648()
{
    sub_741( "NS", "P_ACTION_Move_the_player()", 0 );
    sub_31417( l_U1255[0] );
    if (NOT (IS_PED_DEAD( l_U1255[0] )))
    {
        if (NOT (IS_PED_DEAD( sub_6640() )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1255[0], 0 );
            TASK_ATTACK_MOVE( l_U1255[0], -3.52000000, 32.81000000, 23.64000000, 1092616192, 1101004800, -1082130432, 3 );
        }
    }
    sub_31417( l_U1255[1] );
    if (NOT (IS_PED_DEAD( l_U1255[1] )))
    {
        if (NOT (IS_PED_DEAD( sub_6640() )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1255[1], 0 );
            TASK_COMBAT_PED( l_U1255[1], sub_6640() );
        }
    }
    return;
}

int sub_36038(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    unknown uVar9;

    uVar9 = DOOR_FIND_CLOSEST( uParam0._fU0, uParam0._fU4 );
    if (DOES_OBJECT_EXIST( uVar9 ))
    {
        if (DOOR_GET_IS_AFFECTED_BY_BULLETS( uVar9 ))
        {
            sub_741( "NS", "Setting door to not react to bullets.", 0 );
            DOOR_SET_IS_AFFECTED_BY_BULLETS( uVar9, 0 );
            return 1;
        }
    }
    return 0;
}

void sub_36256()
{
    sub_741( "NS", "P_ACTION_FAR_ROOF()", 0 );
    sub_31417( l_U990[0] );
    if (NOT (IS_PED_DEAD( l_U990[0] )))
    {
        if (NOT (IS_PED_DEAD( sub_6640() )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U990[0], 0 );
            TASK_ATTACK_MOVE( l_U990[0], 19.15000000, 16.90000000, 31.35000000, 10, 20, -1, 2 );
        }
    }
    return;
}

void sub_36426()
{
    int I;

    sub_741( "NS", "P_CREATE_GROUP_D", 0 );
    sub_13120( ref l_U1105 );
    for ( I = 0; I < 1; I++ )
    {
        l_U1105[I] = sub_15800( ref l_U1091[I] );
        if (NOT (IS_PED_DEAD( l_U1105[I] )))
        {
            if (NOT (IS_PED_DEAD( sub_6640() )))
            {
                REGISTER_TARGET( l_U1105[I], sub_6640() );
            }
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1105[I], 1 );
            SET_PED_AI_TEMPLATE( l_U1105[I], ref g_U1791 );
            SET_PED_ACCURACY( l_U1105[I], 31186664 );
            SET_PED_COMBAT_ATTRIBUTES( l_U1105[I], 1, 0 );
            SET_PED_ALERTNESS( l_U1105[I], 4 );
            sub_16706( l_U1105[I], ref l_U970 );
            sub_33158( ref l_U970, 0.80000000 );
            sub_17358( ref l_U1105, "piGroupD " );
        }
    }
    sub_8904( l_U1105[0], g_U1819, 25000, 0, 0 );
    sub_17028( ref l_U352, l_U1105[0], 1 );
    sub_33861( ref l_U1105 );
    return;
}

void sub_36786()
{
    sub_741( "NS", "P_ACTION_GROUP_D()", 0 );
    sub_36832( ref l_U1105 );
    if (NOT (IS_PED_DEAD( sub_6640() )))
    {
        if (NOT (IS_PED_DEAD( l_U1105[0] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1105[0], 0 );
            TASK_ATTACK_MOVE( l_U1105[0], -10.38000000, 39.99000000, 21.77000000, 1092616192, 1101004800, -1082130432, 3 );
        }
    }
    l_U1116 = 1;
    return;
}

void sub_36832(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_31417( (uParam0^)[I] );
    }
    return;
}

void sub_37073()
{
    sub_741( "NS", "P_ACTION_RIGHT_SIDE_ROOF()", 0 );
    sub_31417( l_U976 );
    if (NOT (IS_PED_DEAD( l_U976 )))
    {
        if (NOT (IS_PED_DEAD( sub_6640() )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U976, 0 );
            TASK_COMBAT_PED( l_U976, sub_6640() );
        }
    }
    return;
}

void sub_37207()
{
    sub_741( "NS", "P_ACTION_FAR_ROOF_0()", 0 );
    sub_31417( l_U990[1] );
    if (NOT (IS_PED_DEAD( l_U990[1] )))
    {
        if (NOT (IS_PED_DEAD( sub_6640() )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U990[1], 0 );
            TASK_ATTACK_MOVE( l_U990[1], -4.74000000, 18.23000000, 25.28000000, 1092616192, 1101004800, -1082130432, 3 );
        }
    }
    return;
}

void sub_37375()
{
    sub_741( "NS", "P_ACTION_BottomStair()", 0 );
    sub_31417( l_U1285 );
    if (NOT (IS_PED_DEAD( l_U1285 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1285, 0 );
        TASK_COMBAT_PED( l_U1285, sub_6640() );
    }
    return;
}

void sub_37656()
{
    sub_741( "NS", "P_CREATE_HOUSE_ROOF", 0 );
    sub_13120( ref l_U1020 );
    sub_8904( l_U1020[0], 1545805694, 25000, 0, 0 );
    if (NOT (IS_PED_DEAD( l_U1020[0] )))
    {
        SET_PED_COMBAT_ATTRIBUTES( l_U1020[0], 1, 0 );
    }
    sub_8904( l_U1020[1], g_U1819, 25000, 0, 0 );
    sub_8904( l_U1020[2], 1545805694, 25000, 0, 0 );
    if (NOT (IS_PED_DEAD( l_U1020[2] )))
    {
        SET_PED_COMBAT_ATTRIBUTES( l_U1020[2], 1, 0 );
    }
    sub_33861( ref l_U1020 );
    sub_17028( ref l_U947, l_U1020[0], 1 );
    sub_17028( ref l_U947, l_U1020[1], 1 );
    sub_17028( ref l_U947, l_U1020[2], 1 );
    return;
}

void sub_37927()
{
    sub_741( "NS", "P_ACTION_HOUSE_ROOF()", 0 );
    sub_31417( l_U1020[0] );
    if (NOT (IS_PED_DEAD( l_U1020[0] )))
    {
        if (NOT (IS_PED_DEAD( sub_6640() )))
        {
            OPEN_SEQUENCE_TASK( ref l_U574 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 3.82000000, 33.46000000, 29.27000000, sub_6640(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_SHOOT_AT_PED( 0, sub_6640(), 10000, 0, 0, 0, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0, sub_6640() );
            CLOSE_SEQUENCE_TASK( l_U574 );
            TASK_PERFORM_SEQUENCE( l_U1020[0], l_U574 );
            CLEAR_SEQUENCE_TASK( l_U574 );
        }
    }
    sub_31417( l_U1020[1] );
    if (NOT (IS_PED_DEAD( l_U1020[1] )))
    {
        if (NOT (IS_PED_DEAD( sub_6640() )))
        {
            OPEN_SEQUENCE_TASK( ref l_U574 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 9.55000000, 33.42000000, 29.25000000, sub_6640(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_SHOOT_AT_PED( 0, sub_6640(), 7000, 0, 0, 0, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0, sub_6640() );
            CLOSE_SEQUENCE_TASK( l_U574 );
            TASK_PERFORM_SEQUENCE( l_U1020[1], l_U574 );
            CLEAR_SEQUENCE_TASK( l_U574 );
        }
    }
    return;
}

void sub_38354()
{
    int I;

    sub_741( "NS", "P_CREATE_HOUSE_LEFT", 0 );
    sub_13120( ref l_U1117 );
    for ( I = 0; I < 1; I++ )
    {
        l_U1117[I] = sub_15800( ref l_U1119[I] );
        if (NOT (IS_PED_DEAD( l_U1117[I] )))
        {
            if (NOT (IS_PED_DEAD( sub_6640() )))
            {
                REGISTER_TARGET( l_U1117[I], sub_6640() );
            }
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1117[I], 1 );
            SET_PED_AI_TEMPLATE( l_U1117[I], ref g_U1791 );
            SET_PED_ACCURACY( l_U1117[I], 31186664 );
            SET_PED_ALERTNESS( l_U1117[I], 4 );
            SET_CAN_AI_KICK_THROUGH_CORPSES( l_U1117[I], 1 );
            "[doubled result, dropped if not asigned]";
            "[doubled result, dropped if not asigned]";
            sub_16706( l_U1117[I], ref l_U970 );
            sub_17358( ref l_U1117, "piHouseLeft " );
            sub_33158( ref l_U970, 0.80000000 );
            SET_PED_ENABLE_DISTANCE_INACCURACY( l_U1117[I], 1, l_U121 );
        }
    }
    sub_8904( l_U1117[0], g_U1820, 25000, 0, 0 );
    sub_33861( ref l_U1117 );
    sub_17028( ref l_U946, l_U1117[0], 1 );
    return;
}

void sub_38744()
{
    sub_741( "NS", "P_ACTION_HOUSE_LEFT()", 0 );
    sub_31417( l_U1117[0] );
    if (NOT (IS_PED_DEAD( l_U1117[0] )))
    {
        if (NOT (IS_PED_DEAD( sub_6640() )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1117[0], 0 );
            TASK_ATTACK_MOVE( l_U1117[0], -2.23000000, 33.48000000, 26.42000000, 1092616192, 1101004800, -1082130432, 3 );
        }
    }
    return;
}

void sub_38912()
{
    int I;

    sub_741( "NS", "P_CREATE_HOUSE_RIGHT", 0 );
    sub_13120( ref l_U1175 );
    for ( I = 0; I < 2; I++ )
    {
        if (I != 1)
        {
            l_U1175[I] = sub_15800( ref l_U1178[I] );
        }
        if (NOT (IS_PED_DEAD( l_U1175[I] )))
        {
            if (NOT (IS_PED_DEAD( sub_6640() )))
            {
                REGISTER_TARGET( l_U1175[I], sub_6640() );
            }
            SET_BULLET_CAM_PREF( l_U1175[I], "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", "", 0, 0, 0, 0, 0, 0, 0, 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1175[I], 1 );
            SET_PED_AI_TEMPLATE( l_U1175[I], ref g_U1791 );
            SET_PED_ACCURACY( l_U1175[I], 31186664 );
            SET_PED_ALERTNESS( l_U1175[I], 4 );
            SET_PED_COMBAT_ATTRIBUTES( l_U1175[I], 512, 1 );
            SET_PED_FLAG_SCRIPTED_PROJECTILE_USE( l_U1175[I], 1 );
            SET_CAN_AI_KICK_THROUGH_CORPSES( l_U1175[I], 1 );
            "[doubled result, dropped if not asigned]";
            "[doubled result, dropped if not asigned]";
            sub_16706( l_U1175[I], ref l_U970 );
            sub_17358( ref l_U1175, "piHouseRight " );
            sub_33158( ref l_U970, 0.80000000 );
        }
    }
    sub_8904( l_U1175[0], g_U1820, 25000, 0, 0 );
    l_U1205[0] = sub_8259( l_U1175[0], 1545805694, 6, 3, 0 );
    if (NOT (IS_PED_DEAD( l_U1175[0] )))
    {
        SET_PED_COMBAT_ATTRIBUTES( l_U1175[0], 1, 0 );
    }
    l_U1205[1] = sub_8904( l_U1175[1], 1545805694, 25000, 0, 0 );
    if (NOT (IS_PED_DEAD( l_U1175[1] )))
    {
        SET_PED_COMBAT_ATTRIBUTES( l_U1175[1], 1, 0 );
    }
    sub_17028( ref l_U947, l_U1175[0], 1 );
    sub_17028( ref l_U947, l_U1175[1], 1 );
    sub_33861( ref l_U1175 );
    return;
}

void sub_39548()
{
    sub_741( "NS", "P_ACTION_HOUSE_RIGHT()", 0 );
    sub_31417( l_U1175[0] );
    if (NOT (IS_PED_DEAD( l_U1175[0] )))
    {
        if (NOT (IS_PED_DEAD( sub_6640() )))
        {
            OPEN_SEQUENCE_TASK( ref l_U574 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, 7.05000000, 30.83000000, 26.42000000, 3, 20000, 1048576000, 0, 0 );
            TASK_SWAP_WEAPON( 0, 0 );
            TASK_COMBAT_PED( 0, sub_6640() );
            CLOSE_SEQUENCE_TASK( l_U574 );
            SET_PED_CAN_SWITCH_WEAPON( l_U1175[0], 0 );
            TASK_PERFORM_SEQUENCE( l_U1175[0], l_U574 );
            CLEAR_SEQUENCE_TASK( l_U574 );
        }
    }
    l_U1208 = 0;
    return;
}

void sub_39926()
{
    sub_741( "NS", "P_ACTION_HOUSE_ROOF_WAVE_1()", 0 );
    sub_31417( l_U1020[2] );
    if (NOT (IS_PED_DEAD( l_U1020[2] )))
    {
        if (NOT (IS_PED_DEAD( sub_6640() )))
        {
            OPEN_SEQUENCE_TASK( ref l_U574 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 6.83000000, 33.71000000, 29.39000000, sub_6640(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_SHOOT_AT_PED( 0, sub_6640(), 10000, 0, 0, 0, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0, sub_6640() );
            CLOSE_SEQUENCE_TASK( l_U574 );
            TASK_PERFORM_SEQUENCE( l_U1020[2], l_U574 );
            CLEAR_SEQUENCE_TASK( l_U574 );
        }
    }
    return;
}

void sub_40193()
{
    int I;

    sub_741( "NS", "P_CREATE_HOUSE_MID", 0 );
    sub_13120( ref l_U1134 );
    for ( I = 0; I < 2; I++ )
    {
        l_U1134[I] = sub_15800( ref l_U1137[I] );
        if (NOT (IS_PED_DEAD( l_U1134[I] )))
        {
            if (NOT (IS_PED_DEAD( sub_6640() )))
            {
                REGISTER_TARGET( l_U1134[I], sub_6640() );
            }
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1134[I], 1 );
            SET_PED_AI_TEMPLATE( l_U1134[I], ref g_U1791 );
            SET_PED_ACCURACY( l_U1134[I], 31186664 );
            SET_PED_ALERTNESS( l_U1134[I], 4 );
            SET_CAN_AI_KICK_THROUGH_CORPSES( l_U1134[I], 1 );
            "[doubled result, dropped if not asigned]";
            "[doubled result, dropped if not asigned]";
            sub_16706( l_U1134[I], ref l_U970 );
            sub_17358( ref l_U1134, "piHouseMid " );
            sub_33158( ref l_U970, 0.80000000 );
            SET_PED_ENABLE_DISTANCE_INACCURACY( l_U1134[I], 1, l_U121 );
        }
    }
    sub_8904( l_U1134[0], g_U1820, 25000, 0, 0 );
    sub_8904( l_U1134[1], g_U1819, 25000, 0, 0 );
    sub_33861( ref l_U1134 );
    sub_17028( ref l_U946, l_U1134[0], 1 );
    sub_17028( ref l_U946, l_U1134[1], 1 );
    return;
}

void sub_40623()
{
    sub_741( "NS", "P_ACTION_HOUSE_MID()", 0 );
    sub_31417( l_U1134[0] );
    if (NOT (IS_PED_DEAD( l_U1134[0] )))
    {
        if (NOT (IS_PED_DEAD( sub_6640() )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1134[0], 0 );
            TASK_ATTACK_MOVE( l_U1134[0], 1.47000000, 30.77000000, 26.42000000, 10, 20, -1, 2 );
        }
    }
    l_U1164 = 0;
    return;
}

void sub_40786()
{
    int I;

    sub_741( "NS", "P_CREATE_HOUSE_BOTTOM", 0 );
    sub_13120( ref l_U1209 );
    for ( I = 0; I < 3; I++ )
    {
        if (I != 1)
        {
            l_U1209[I] = sub_15800( ref l_U1213[I] );
        }
        if (NOT (IS_PED_DEAD( l_U1209[I] )))
        {
            if (NOT (IS_PED_DEAD( sub_6640() )))
            {
                REGISTER_TARGET( l_U1209[I], sub_6640() );
            }
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1209[I], 1 );
            SET_PED_AI_TEMPLATE( l_U1209[I], ref g_U1791 );
            SET_PED_ACCURACY( l_U1209[I], 31186664 );
            SET_PED_ALERTNESS( l_U1209[I], 4 );
            sub_16706( l_U1209[I], ref l_U970 );
            sub_17358( ref l_U1209, "piHouseBottom " );
            sub_33158( ref l_U970, 0.80000000 );
            SET_PED_ENABLE_DISTANCE_INACCURACY( l_U1209[I], 1, l_U121 );
        }
    }
    sub_8904( l_U1209[0], g_U1820, 25000, 0, 0 );
    sub_8904( l_U1209[1], g_U1819, 25000, 0, 0 );
    sub_8904( l_U1209[2], g_U1819, 25000, 0, 0 );
    sub_17028( ref l_U948, l_U1209[0], 1 );
    sub_17028( ref l_U948, l_U1209[1], 1 );
    sub_17028( ref l_U948, l_U1209[2], 1 );
    sub_33861( ref l_U1209 );
    return;
}

void sub_41253()
{
    sub_741( "NS", "P_ACTION_HOUSE_BOTTOM()", 0 );
    sub_31417( l_U1209[0] );
    if (NOT (IS_PED_DEAD( l_U1209[0] )))
    {
        if (NOT (IS_PED_DEAD( sub_6640() )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1209[0], 0 );
            TASK_ATTACK_MOVE( l_U1209[0], -3.91000000, 32.49000000, 23.80000000, 1092616192, 1101004800, -1082130432, 3 );
        }
    }
    sub_31417( l_U1209[1] );
    if (NOT (IS_PED_DEAD( l_U1209[1] )))
    {
        if (NOT (IS_PED_DEAD( sub_6640() )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1209[1], 0 );
            TASK_ATTACK_MOVE( l_U1209[1], -2.54000000, 32.49000000, 23.80000000, 1092616192, 1101004800, -1082130432, 3 );
        }
    }
    l_U1253 = 0;
    return;
}

void sub_41604()
{
    sub_741( "NS", "P_ACTION_HOUSE_MID_WAVE_1()", 0 );
    sub_31417( l_U1134[1] );
    if (NOT (IS_PED_DEAD( l_U1134[1] )))
    {
        if (NOT (IS_PED_DEAD( sub_6640() )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1134[1], 0 );
            TASK_ATTACK_MOVE( l_U1134[1], 4.89000000, 30.78000000, 26.42000000, 10, 20, -1, 2 );
        }
    }
    return;
}

void sub_41834()
{
    sub_741( "NS", "P_ACTION_HOUSE_RIGHT_WAVE_1()", 0 );
    sub_31417( l_U1175[1] );
    if (NOT (IS_PED_DEAD( l_U1175[1] )))
    {
        if (NOT (IS_PED_DEAD( sub_6640() )))
        {
            OPEN_SEQUENCE_TASK( ref l_U574 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, 7.05000000, 30.83000000, 26.42000000, 3, 20000, 1048576000, 0, 0 );
            TASK_SHOOT_AT_PED( 0, sub_6640(), 5000, 0, 0, 0, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            CLOSE_SEQUENCE_TASK( l_U574 );
            SET_PED_CAN_SWITCH_WEAPON( l_U1175[1], 0 );
            TASK_PERFORM_SEQUENCE( l_U1175[1], l_U574 );
            CLEAR_SEQUENCE_TASK( l_U574 );
        }
    }
    return;
}

void sub_42188()
{
    sub_741( "NS", "P_ACTION_HOUSE_BOTTOM_WAVE_1()", 0 );
    sub_31417( l_U1209[2] );
    if (NOT (IS_PED_DEAD( l_U1209[2] )))
    {
        if (NOT (IS_PED_DEAD( sub_6640() )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1209[2], 0 );
            TASK_ATTACK_MOVE( l_U1209[2], 11.19000000, 30.88000000, 26.42000000, 1092616192, 1101004800, -1082130432, 3 );
        }
    }
    return;
}

void sub_42391()
{
    int Result;

    Result = 0;
    if (NOT (IS_PED_DEAD( l_U976 )))
    {
        Result++;
    }
    Result += sub_30506( ref l_U1117 );
    Result += sub_30506( ref l_U1209 );
    Result += sub_30506( ref l_U1134 );
    Result += sub_30506( ref l_U1175 );
    return Result;
}

void sub_42527()
{
    unknown uVar2;

    sub_741( "NS", "P_CLEANUP_PEDS_WHO_ARE_NOT_DEAD()", 0 );
    if (NOT (IS_PED_DEAD( l_U990[0] )))
    {
        sub_13154( l_U990[0] );
    }
    if (NOT (IS_PED_DEAD( l_U976 )))
    {
        sub_13154( l_U976 );
    }
    sub_13120( ref l_U1079 );
    sub_13120( ref l_U1105 );
    sub_13154( l_U557 );
    return;
}

void sub_42699()
{
    unknown uVar2;
    int iVar3;
    int I;
    unknown uVar5;

    iVar3 = (((((((sub_30506( ref l_U990 )) + (sub_30506( ref l_U1020 ))) + (sub_30506( ref l_U1079 ))) + (sub_30506( ref l_U1105 ))) + (sub_30506( ref l_U1117 ))) + (sub_30506( ref l_U1134 ))) + (sub_30506( ref l_U1175 ))) + (sub_30506( ref l_U1209 ));
    if (((IS_PED_DEAD( l_U976 )) == 1) || ((IS_PED_DEAD( l_U976 )) == 0))
    {
        if (IS_PED_VISIBLE( l_U976 ))
        {
            if (NOT (IS_PED_DEAD( l_U976 )))
            {
                iVar3++;
            }
        }
    }
    if (((IS_PED_DEAD( l_U543 )) == 1) || ((IS_PED_DEAD( l_U543 )) == 0))
    {
        if (IS_PED_VISIBLE( l_U543 ))
        {
            if (NOT (IS_PED_DEAD( l_U543 )))
            {
                iVar3++;
            }
        }
    }
    if (((IS_PED_DEAD( l_U1285 )) == 1) || ((IS_PED_DEAD( l_U1285 )) == 0))
    {
        if (IS_PED_VISIBLE( l_U1285 ))
        {
            if (NOT (IS_PED_DEAD( l_U1285 )))
            {
                iVar3++;
            }
        }
    }
    if (((IS_PED_DEAD( l_U557 )) == 1) || ((IS_PED_DEAD( l_U557 )) == 0))
    {
        if (IS_PED_VISIBLE( l_U557 ))
        {
            if (NOT (IS_PED_DEAD( l_U557 )))
            {
                iVar3++;
            }
        }
    }
    for ( I = 0; I < 2; I++ )
    {
        if (((IS_PED_DEAD( l_U1255[I] )) == 1) || ((IS_PED_DEAD( l_U1255[I] )) == 0))
        {
            if (IS_PED_VISIBLE( l_U1255[I] ))
            {
                if (NOT (IS_PED_DEAD( l_U1255[I] )))
                {
                    iVar3++;
                }
            }
        }
    }
    if (iVar3 == 1)
    {
        uVar5 = sub_43217( ref l_U990 );
        if (NOT (IS_PED_DEAD( uVar5 )))
        {
            CLEAR_PED_TASKS( uVar5 );
            SET_PED_COMBAT_ATTRIBUTES( uVar5, 1, 0 );
        }
        uVar5 = sub_43217( ref l_U1020 );
        if (NOT (IS_PED_DEAD( uVar5 )))
        {
            CLEAR_PED_TASKS( uVar5 );
            SET_PED_COMBAT_ATTRIBUTES( uVar5, 1, 0 );
        }
        uVar5 = sub_43217( ref l_U1079 );
        if (NOT (IS_PED_DEAD( uVar5 )))
        {
            CLEAR_PED_TASKS( uVar5 );
            SET_PED_COMBAT_ATTRIBUTES( uVar5, 1, 0 );
        }
        uVar5 = sub_43217( ref l_U1105 );
        if (NOT (IS_PED_DEAD( uVar5 )))
        {
            CLEAR_PED_TASKS( uVar5 );
            SET_PED_COMBAT_ATTRIBUTES( uVar5, 1, 0 );
        }
        uVar5 = sub_43217( ref l_U1117 );
        if (NOT (IS_PED_DEAD( uVar5 )))
        {
            CLEAR_PED_TASKS( uVar5 );
            SET_PED_COMBAT_ATTRIBUTES( uVar5, 1, 0 );
        }
        uVar5 = sub_43217( ref l_U1134 );
        if (NOT (IS_PED_DEAD( uVar5 )))
        {
            CLEAR_PED_TASKS( uVar5 );
            SET_PED_COMBAT_ATTRIBUTES( uVar5, 1, 0 );
        }
        uVar5 = sub_43217( ref l_U1175 );
        if (NOT (IS_PED_DEAD( uVar5 )))
        {
            CLEAR_PED_TASKS( uVar5 );
            SET_PED_COMBAT_ATTRIBUTES( uVar5, 1, 0 );
        }
        uVar5 = sub_43217( ref l_U1209 );
        if (NOT (IS_PED_DEAD( uVar5 )))
        {
            CLEAR_PED_TASKS( uVar5 );
            SET_PED_COMBAT_ATTRIBUTES( uVar5, 1, 0 );
        }
        uVar5 = sub_43217( ref l_U1255 );
        if (NOT (IS_PED_DEAD( uVar5 )))
        {
            CLEAR_PED_TASKS( uVar5 );
            SET_PED_COMBAT_ATTRIBUTES( uVar5, 1, 0 );
        }
        if (NOT (IS_PED_DEAD( l_U557 )))
        {
            CLEAR_PED_TASKS( l_U557 );
            SET_PED_COMBAT_ATTRIBUTES( l_U557, 1, 0 );
            SET_PED_CAN_TRIGGER_BULLET_CAM( l_U557, 1 );
        }
        if (NOT (IS_PED_DEAD( l_U1285 )))
        {
            CLEAR_PED_TASKS( l_U1285 );
            SET_PED_COMBAT_ATTRIBUTES( l_U1285, 1, 0 );
            SET_PED_CAN_TRIGGER_BULLET_CAM( l_U1285, 1 );
        }
        if (NOT (IS_PED_DEAD( l_U543 )))
        {
            CLEAR_PED_TASKS( l_U543 );
            SET_PED_COMBAT_ATTRIBUTES( l_U543, 1, 0 );
            SET_PED_CAN_TRIGGER_BULLET_CAM( l_U543, 1 );
        }
        if (NOT (IS_PED_DEAD( l_U976 )))
        {
            CLEAR_PED_TASKS( l_U976 );
            SET_PED_COMBAT_ATTRIBUTES( l_U976, 1, 0 );
            SET_PED_CAN_TRIGGER_BULLET_CAM( l_U976, 1 );
        }
    }
    return;
}

void sub_43217(unknown uParam0)
{
    int I;

    if ((sub_30506( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_43984()
{
    if (((((((((sub_30506( ref l_U990 )) + (sub_30506( ref l_U1020 ))) + (sub_30506( ref l_U1079 ))) + (sub_30506( ref l_U1105 ))) + (sub_30506( ref l_U1117 ))) + (sub_30506( ref l_U1134 ))) + (sub_30506( ref l_U1175 ))) + (sub_30506( ref l_U1209 ))) == 0)
    {
        sub_44081( 1 );
    }
    return;
}

void sub_44081(int iParam0)
{
    if (l_U78 == 0)
    {
        l_U79 = GET_PAYNEKILLER_AMT();
        l_U78 = 1;
    }
    if ((IS_PED_DEAD( sub_6640() )) == 0)
    {
        if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0))
        {
            if ((TIME_SINCE_LAST_MONOLOGUE() > 5000) AND ((IS_MONOLOGUE_PLAYING() == 0) AND (sub_44165() == 0)))
            {
                if ((iParam0 == 1) AND (l_U79 < GET_PAYNEKILLER_AMT()))
                {
                    if (g_U789 < 5)
                    {
                        if (((g_U788 mod 3) == 0) || (g_U788 == 0))
                        {
                            sub_741( "NS", "Playing Pills Monologue", 0 );
                            sub_44352( ref l_U68 );
                            sub_44434( 0, sub_6640(), "MAX", ref l_U68, 2, 0 );
                            sub_44434( 1, sub_6640(), "MAX", ref l_U68, 2, 0 );
                            sub_44674( "SFV1_MFPLS", ref l_U68, 7, 1 );
                            g_U789++;
                        }
                        g_U788++;
                    }
                }
            }
            l_U79 = GET_PAYNEKILLER_AMT();
        }
    }
    return;
}

void sub_44165()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

void sub_44352(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_44434(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_44674(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_44698( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_44698(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_44753( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_44753(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_44788( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_45282( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_44788(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_45282(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_45516(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 = sub_15389( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

void sub_45938()
{
    sub_741( "SA", "P_UNLOAD_ASSETS", "###" );
    CLEAR_NAMED_CUTSCENE( "mid_06_fAV1_CONCAT" );
    sub_46015( 973577609 );
    sub_46015( -1409914275 );
    sub_46015( 1773249650 );
    sub_46176( 1545805694 );
    sub_46228( "npc_pstl_cover_grenade" );
    sub_46228( "npc_rifle_cover_grenade" );
    sub_46228( "mped_grenade_core" );
    sub_46228( "LEVEL_S_FAV1_CP_09" );
    SET_ALLOW_MOLOTOV_DAMAGE( 0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U197._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U218._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U239._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U260._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U281._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U344._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U345._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U346._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U347._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U348._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U350._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U638._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U680._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U701._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U743._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U764._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U785._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U806._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U827._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U848._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U946._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U947._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U948._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U949._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U950._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U951._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U952._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U953._fU0 );
    sub_13559( 0 );
    return;
}

void sub_46015(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_8575( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_46176(unknown uParam0)
{
    SET_WEAPON_AS_NO_LONGER_NEEDED( uParam0 );
    return;
}

void sub_46228(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}


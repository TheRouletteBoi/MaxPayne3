void main()
{
    l_U0 = 1;
    l_U1 = 144;
    StrCopy( ref l_U2, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U10, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U21 = 0;
    l_U22 = 0;
    l_U23 = 1;
    l_U24 = 0;
    l_U25 = 1.00000000;
    l_U26 = -5.00000000;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U33 = 42;
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = 90.00000000;
    l_U40 = {0.00000000, 0.00000000, 0.00000000};
    l_U43 = {0.00000000, 0.00000000, 0.00000000};
    l_U46 = 0;
    l_U47 = 0;
    l_U48 = 0;
    l_U49 = 0;
    l_U50 = 0;
    l_U51 = 0;
    l_U52 = nil;
    l_U53 = {0.00000000, 0.00000000, 0.00000000};
    l_U56 = 0;
    l_U57 = 0;
    l_U58 = 0;
    l_U60 = 0;
    l_U61 = 0;
    l_U62 = 1500;
    l_U72 = {100.33000000, -111.10100000, -5.39500000};
    l_U75 = {99.78500000, -116.78500000, -9.03400000};
    l_U78 = {100.70300000, -112.41100000, -8.61400000};
    l_U82 = {0, 0, 0};
    StrCopy( ref l_U85, "DUMMY", 32 );
    l_U93 = 1;
    l_U98 = 0;
    l_U99 = 0;
    l_U100 = 0;
    l_U103 = 0;
    l_U184 = 0;
    l_U185 = 1;
    l_U187 = 0;
    l_U188 = 0;
    l_U493 = 1055;
    l_U512 = 1000;
    l_U513 = 500;
    l_U535 = 0;
    l_U536 = 1;
    l_U537 = 1;
    l_U538 = 0;
    l_U539 = 0;
    l_U540 = 1;
    l_U541 = 1;
    l_U542 = 0;
    l_U543 = 1;
    l_U544 = 0;
    l_U545 = 0;
    l_U546 = 1;
    l_U547 = 0;
    l_U548 = 0;
    l_U549 = 0;
    l_U550 = 0;
    l_U551 = 0;
    l_U552 = 0;
    l_U553 = 1;
    l_U554 = 0.07377500;
    l_U555 = 1;
    l_U556 = 0.07924300;
    l_U557 = 1;
    l_U558 = 0.08024300;
    l_U559 = 0.00000000;
    l_U560 = 0;
    StrCopy( ref l_U592, "room_large", 16 );
    StrCopy( ref l_U596, "room_hall", 16 );
    l_U791 = {2.70000000, -1.50000000, 0.70000000};
    l_U794 = 0.85000000;
    l_U802 = 0;
    l_U823 = GET_GAME_TIMER() + 300;
    l_U824 = 0;
    l_U825 = 0;
    l_U826 = 0;
    l_U827 = 0.00000000;
    l_U828 = -90.00000000;
    sub_846( "SP", "Script fav1_warehouseMPM.sc is starting...", "###" );
    sub_895();
    sub_3556();
    while (l_U185 == 1)
    {
        sub_4350();
        if (l_U187 == 0)
        {
            sub_11979();
        }
        WAIT( 0 );
    }
    sub_6875();
    sub_36679();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_fav1_warehouseMPM" );
    sub_846( "SP", "Script fav1_warehouseMPM.sc is terminating...", "###" );
    return;
}

void sub_846(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_895()
{
    sub_846( "SP", "LOAD_ASSETS", "###" );
    sub_974( ref l_U612[0], 99.64000000, -109.75000000, -8.65000000, 178.64000000, -31457820, 7, 3, 2, 0, 0 );
    sub_974( ref l_U612[1], 95.98000000, -107.94000000, -8.68000000, 177.75000000, 408164991, 7, 3, 2, 0, 0 );
    sub_974( ref l_U612[2], 97.70000000, -109.19000000, -8.67000000, 177.47000000, -1609309601, 7, 3, 2, 0, 0 );
    sub_974( ref l_U612[3], 101.35000000, -108.51000000, -8.68000000, -162.22000000, -1795812748, 7, 3, 2, 0, 0 );
    sub_974( ref l_U672[0], 113.16000000, -113.36000000, 0.78000000, 89.37000000, -1699206678, 7, 3, 2, 0, 0 );
    sub_974( ref l_U689[0], 106.09000000, -112.69000000, -4.11000000, 163.49000000, 1200287478, 7, 3, 2, 0, 0 );
    sub_974( ref l_U689[1], 109.77000000, -118.73000000, -3.57000000, 93.72000000, -2035724586, 7, 3, 2, 0, 0 );
    sub_974( ref l_U719[0], 109.68000000, -113.41000000, -3.57000000, 39.67000000, 53293864, 7, 3, 2, 0, 0 );
    sub_974( ref l_U719[1], 110.20000000, -114.77000000, -4.11000000, 38.87000000, -250258176, 7, 3, 2, 0, 0 );
    sub_974( ref g_U813[0], 74.89000000, -104.66000000, -2.12000000, -85.55000000, -321351501, 7, 3, 2, 0, 0 );
    sub_974( ref g_U813[1], 74.78000000, -103.62000000, -2.12000000, -85.55000000, -2071281917, 7, 3, 2, 0, 0 );
    sub_974( ref g_U813[2], 78.50000000, -120.24000000, -2.12000000, -85.55000000, 824948016, 7, 3, 2, 0, 0 );
    sub_974( ref l_U749[0], 112.27000000, -97.98000000, 1.00000000, -175.35000000, -907469361, 7, 3, 2, 0, 0 );
    sub_974( ref l_U749[1], 105.45000000, -95.08000000, -2.48000000, 146.50000000, -1161361804, 7, 3, 2, 0, 0 );
    sub_1721( ref l_U190, "tbCutScene", 112.75000000, -131.61000000, -1.00000000, 4.00000000, 2.50000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1721( ref l_U211, "tbMPMend", 100.08000000, -116.97000000, -0.36000000, 6.07000000, 5.01000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1938( ref l_U484, "teMPMSurPrise", 109.97000000, -114.49000000, -4.89000000, 15.31000000, 5.52000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1721( ref l_U253, "tbMPMsurprise", 100.22000000, -116.97000000, -6.99000000, 6.07000000, 5.01000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1721( ref l_U274, "farside", 112.98000000, -108.64000000, -4.33000000, 3.92000000, 3.00000000, 9.17000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1721( ref l_U295, "tbShutDownMPM", 73.31000000, -101.70000000, -2.96000000, 6.36000000, 5.83000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1721( ref l_U316, "tbCleanFloor", 108.29000000, -112.13000000, -9.97000000, 8.51000000, 9.94000000, 4.23000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1721( ref l_U337, "tbMPMEnableLMS", 105.21000000, -116.00000000, 0.07000000, 6.07000000, 5.01000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1721( ref l_U358, "tbKillMaxFromFall", 96.97000000, -108.87000000, -13.44000000, 37.94000000, 30.41000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1721( ref l_U379, "tbPortable", 106.31000000, -107.93000000, -4.24000000, 6.36000000, 6.83000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1721( ref l_U400, "tbMpmCrush", 100.48000000, -110.88000000, -10.70000000, 1.00000000, 1.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1721( ref l_U421, "tbPortableAction", 107.02000000, -98.10000000, -5.69000000, 8.51000000, 3.00000000, 7.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1721( ref l_U442, "tbClosePortDoor", 94.26000000, -113.94000000, -10.55000000, 20.00000000, 20.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1721( ref l_U463, "tbAudioCueSwitchDownFirstSteps", 109.95000000, -95.44000000, -0.18000000, 3.00000000, 4.00000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1938( ref l_U484, "teMPMSurPrise", 109.97000000, -115.98000000, -4.89000000, 9.94000000, 2.89000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1938( ref l_U485, "teLeftTopInside", 86.37000000, -100.91000000, -3.47000000, 5.26000000, 14.92000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1938( ref l_U486, "teMiniHouse", 108.24000000, -105.49000000, -4.89000000, 10.69000000, 12.14000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1938( ref l_U485, "teLeftTopInside", 86.37000000, -100.91000000, -3.47000000, 5.26000000, 14.92000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1938( ref l_U487, "teAfterCubicle", 109.52000000, -121.17000000, -5.45000000, 3.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1938( ref l_U488, "teGroundWave2", 87.76000000, -97.31000000, -5.45000000, 2.31000000, 6.74000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1938( ref l_U489, "thrbxKeepOffStairs1", 112.96000000, -105.50000000, 0.41000000, 5.00000000, 25.00000000, 5.00000000, 0.00000000, 0.00000000, -0.20000000, 1 );
    sub_1938( ref l_U490, "thrbxKeepOffStairs2", 108.49000000, -101.61000000, -4.98000000, 11.05000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1938( ref l_U491, "thrMpmCrush", 100.48000000, -110.98000000, -10.70000000, 0.50000000, 0.50000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1938( ref l_U492, "thrPostMPM", 113.40000000, -99.80000000, 0.41000000, 5.00000000, 7.88000000, 5.00000000, 0.00000000, 0.00000000, -0.20000000, 1 );
    return;
}

void sub_974(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_1721(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_1938(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_3556()
{
    sub_846( "SP", "INITIALIZE_SCRIPT_DATA", "###" );
    l_U186 = 0;
    l_U535 = 0;
    l_U536 = 1;
    l_U537 = 1;
    l_U538 = 0;
    l_U539 = 0;
    l_U540 = 1;
    l_U541 = 1;
    l_U542 = 0;
    l_U543 = 1;
    l_U544 = 0;
    l_U545 = 0;
    l_U546 = 1;
    sub_3689( ref l_U503 );
    sub_3730( ref l_U494, l_U493, 1, 0 );
    l_U548 = 0;
    l_U549 = 0;
    l_U550 = 0;
    l_U551 = 0;
    l_U552 = 0;
    l_U547 = 0;
    l_U560 = 0;
    l_U553 = 1;
    l_U555 = 1;
    l_U557 = 1;
    l_U188 = 2;
    sub_3928();
    return;
}

void sub_3689(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

void sub_3730(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_3928()
{
    sub_846( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U790 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( 2040251834 )))
    {
        sub_846( "CCB", "Creating the CrushedEnemy script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( 2040251834 );
        if (SCRIPT_VAR_HASH_EXISTS( 2040251834 ))
        {
            sub_846( "CCB", "The CrushedEnemy script variable was successfully created...", 0 );
        }
        else
        {
            sub_846( "CCB", "The CrushedEnemy script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
        sub_846( "CCB", "The CrushedEnemy script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( 2040251834, 0 );
    }
    return;
}

void sub_4350()
{
    if (g_U1049 == 4)
    {
        switch (l_U187)
        {
            case 0:
            if ((sub_4513()) || (IS_PED_DEAD( sub_4440() )))
            {
                l_U187 = 1;
                sub_846( "kja", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_5008())
            {
                l_U187 = 2;
            }
            else if ((sub_5048( 0 )) == 1)
            {
                l_U187 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_4440() )))
            {
                l_U187 = 3;
                sub_846( "kja", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            ISEQ_UNREGISTER_ENTITY( -1580872458, "mpm_player" );
            sub_6359( -1580872458, 0 );
            if (NOT (IS_PED_DEAD( sub_4440() )))
            {
                PED_ACTION_TREE_PLAY_NODE( sub_4440(), "/Global/Player/PlayerLoco" );
            }
            if ((IS_PLAYER_DEAD( sub_4462() )) == 0)
            {
                SET_PLAYER_CONTROL( sub_4462(), 0, 0 );
            }
            sub_6655( g_U790 );
            sub_6655( g_U791 );
            sub_6655( g_U792 );
            sub_6719( ref g_U793 );
            sub_6818( ref g_U853 );
            sub_6875();
            AUDIO_MUSIC_SUSPEND( 500 );
            l_U187 = 4;
            sub_846( "kja", "eFailState = FAIL_WAIT_FOR_ISEQ", 0 );
            break;
            case 4:
            if ((l_U802 > 3) AND ((ISEQ_IS_LOADED( -1580872458 )) == 0))
            {
                sub_846( "NS", "ISEQ_IS_LOADED(S_FAV1_VIG_21_MPM) = FALSE", 0 );
                l_U187 = 5;
            }
            l_U802++;
            break;
            case 5:
            l_U802 = 0;
            sub_7726( ref l_U148, sub_4440() );
            l_U187 = 6;
            sub_846( "kja", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 6:
            sub_895();
            sub_3556();
            l_U187 = 0;
            sub_846( "kja", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    else if ((sub_5008()) || (IS_PED_DEAD( sub_4440() )))
    {
        l_U185 = 0;
        g_U765 = 1;
        sub_11925( ref g_U879[4] );
    }
    return;
}

int sub_4440()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_4462() );
    }
    return 0;
}

void sub_4462()
{
    return GET_PLAYER_ID();
}

int sub_4513()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_4440() )))
        {
            SET_PED_FORCED_TO_WALK( sub_4440(), 0 );
            SET_PLAYER_FORCED_AIM( sub_4462(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_4462(), 1 );
            if ((IS_PED_VISIBLE( sub_4440() )) == 0)
            {
                SET_PED_VISIBLE( sub_4440(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_5008()
{
    return g_U648;
}

int sub_5048(int iParam0)
{
    iParam0 = 1;
    switch (l_U61)
    {
        case 0:
        if (NOT (sub_5109( ref l_U63 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_4440() )))
            {
                l_U62 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_3730( ref l_U63, l_U62, 1, 1 );
            sub_5228( ref l_U63 );
        }
        if (sub_5348( ref l_U63 ))
        {
            sub_846( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_4440() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_4462() )))
            {
                SET_PLAYER_CONTROL( sub_4462(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U61 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U61 = 2;
            }
            else
            {
                l_U61 = 3;
            }
        }
        break;
        case 2:
        sub_846( "NS", "Player will QUIT", 0 );
        sub_5835();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_846( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_5835();
        return 1;
        break;
    }
    return 0;
}

int sub_5109(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_5228(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_5348(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_5835()
{
    sub_846( "NS", "P_PostFailRetryCleanup", 0 );
    sub_5885( ref l_U63 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_4462() )))
    {
        SET_PLAYER_CONTROL( sub_4462(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U60 = 0;
    l_U60 = l_U60;
    l_U61 = 0;
    return;
}

void sub_5885(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_6359(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_6655(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_6719(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_6752( (uParam0^)[I] );
    }
    return;
}

void sub_6752(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_6818(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_6655( (uParam0^)[I] );
    }
    return;
}

void sub_6875()
{
    sub_846( "SP", "P_CLEANUP_ALL", "###" );
    sub_6921( ref l_U607 );
    sub_6921( ref l_U670 );
    sub_6921( ref l_U686 );
    sub_6655( l_U600 );
    sub_5885( ref l_U494 );
    sub_5885( ref l_U514 );
    sub_5885( ref l_U503 );
    sub_6921( ref l_U716 );
    sub_6921( ref l_U746 );
    STOP_SCRIPT_STREAM( 0 );
    if (g_U1049 < 4)
    {
        sub_6719( ref g_U793 );
        sub_6818( ref g_U804 );
        sub_6921( ref g_U809 );
        sub_6818( ref g_U853 );
        sub_6752( g_U667._fU0 );
        sub_6752( g_U739._fU0 );
        sub_6655( g_U790 );
        sub_6655( g_U791 );
        sub_6655( g_U792 );
        sub_6752( g_U799 );
        sub_6752( g_U800 );
    }
    sub_7251();
    sub_7385();
    return;
}

void sub_6921(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_6955( (uParam0^)[I] );
    }
    return;
}

void sub_6955(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_7251()
{
    sub_846( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    sub_846( "CCB", "Stopping the Favela_Warehouse context...", 0 );
    END_CONTEXT( "Favela_Warehouse" );
    return;
}

void sub_7385()
{
    sub_846( "CCB", "P_STOP_SP_CHALLENGES_MPM", 0 );
    sub_846( "CCB", "Stopping the Favela_Warehouse_MPM context...", 0 );
    END_CONTEXT( "Favela_Warehouse_MPM" );
    return;
}

void sub_7726(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_846( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_7910( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_8987( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_9279( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_9639( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_9279( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_9639( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_9279( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_9639( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_9924( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_9639( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_9924( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_9639( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_10417( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_10578( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_4440(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_846( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_7910(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_7942( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_7942(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_8987(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_9279(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_9595( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_9595(unknown uParam0)
{
    return;
}

void sub_9639(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_9924(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_9595( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_10417(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_10578(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_7942( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_10650( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_10650(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_11925(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_11979()
{
    sub_11989();
    switch (l_U186)
    {
        case 0:
        if (g_U1049 < 4)
        {
            sub_12335( 0 );
            l_U186 = 2;
        }
        else
        {
            DO_SCREEN_FADE_OUT( 0 );
            SET_WEATHER_TYPE_NOW_PERSIST( "Sunny" );
            FREEZE_TIME_OF_DAY( 12, 0 );
            g_U777 = 1;
            sub_13195( 0 );
            l_U186 = 1;
        }
        break;
        case 1:
        sub_846( "NS", "eCurrentWareHouseState = eStateLoadAssets", 0 );
        if (sub_13773())
        {
            sub_14041();
            sub_15562();
            sub_16059();
            if (NOT IS_MAGDEMO())
            {
                sub_16844();
                sub_17246();
            }
            l_U186 = 4;
        }
        break;
        case 2:
        if (sub_17852( l_U190 ))
        {
            g_U777 = 1;
            sub_17939();
            sub_18363();
            l_U560 = 1;
            l_U547 = 1;
            l_U186 = 3;
            AUDIO_MUSIC_SUSPEND( 10000 );
        }
        break;
        case 3:
        if (sub_18575() == 1)
        {
            l_U186 = 4;
            break;
        }
        return;
        case 4:
        sub_22905( ref g_U1384, 1, 1, 0.50000000 );
        if (l_U551 == 0)
        {
            sub_22368();
        }
        if (l_U547 == 0)
        {
            sub_17939();
        }
        if (DOES_OBJECT_EXIST( g_U853[0] ))
        {
            SET_OBJECT_VISIBLE( g_U853[0], 1 );
        }
        if (DOES_OBJECT_EXIST( g_U853[1] ))
        {
            SET_OBJECT_VISIBLE( g_U853[1], 1 );
        }
        sub_24730();
        if (l_U184 == 0)
        {
            if ((sub_26870( ref l_U148 )) == 0)
            {
                if (g_U1048 == 4)
                {
                    sub_9924( sub_4440(), g_U1816, 200, 0, 1 );
                }
            }
            l_U184 = 1;
        }
        if ((l_U148._fU0 == 0) || (g_U1049 < 4))
        {
            g_U1049 = 4;
            sub_27167( ref l_U148, g_U1049, sub_4440(), g_U1050[4], g_U1174[4], g_U1216[4], g_U1258[4], 1 );
        }
        AUDIO_MUSIC_FORCE_TRACK( "FAVELA_ONE_SONG", "FAV_ONE_5", "", 1.00000000, 1000, 0, -1082130432, 0 );
        AUDIO_MUSIC_REQUEST_ONESHOT( "FAVELA_1_ONESHOT_3", 0 );
        sub_30866();
        sub_31446();
        sub_31581();
        DISPLAY_HUD( 0 );
        DO_SCREEN_FADE_IN( 0 );
        l_U186 = 5;
        break;
        case 5:
        if (l_U544)
        {
            if (sub_17852( l_U358 ))
            {
                if (NOT (IS_PED_DEAD( sub_4440() )))
                {
                    SET_PED_HEALTH( sub_4440(), 0, 0 );
                }
            }
        }
        if (l_U546 == 1)
        {
            if ((l_U545 == 1) || (sub_17852( l_U337 )))
            {
                if ((l_U545 == 1) || ((ISEQ_QUERY_STATE( -1580872458, 3 )) == 0))
                {
                    sub_31877();
                    sub_32252();
                    l_U544 = 1;
                    l_U538 = 1;
                    l_U535 = 1;
                    ENABLE_LAST_MAN_STANDING( 1 );
                    SET_PED_INVINCIBLE( sub_4440(), 0 );
                    SET_PED_PROOFS( sub_4440(), 0, 0, 0, 0, 0 );
                    sub_3730( ref l_U514, l_U513, 1, 0 );
                    sub_5228( ref l_U514 );
                    sub_7385();
                    sub_846( "SA", "FAV_ONE_3_4_5_6", 0 );
                    AUDIO_MUSIC_FORCE_TRACK( "FAVELA_ONE_SONG", "FAV_ONE_3_4_5_6", "", 1.00000000, 2000, 0, -1082130432, 0 );
                    l_U546 = 0;
                }
            }
        }
        if (l_U545 == 0)
        {
            if (IS_PED_DEAD( l_U670[0] ))
            {
                if (IS_BULLET_CAMERA_ACTIVE() == 0)
                {
                    l_U545 = 1;
                }
            }
        }
        if (sub_5348( ref l_U514 ))
        {
            sub_846( "NS", "ACTIVATING SILHOUETTE", 0 );
            SET_SILHOUETTE_ACTIVE( 1 );
        }
        if (sub_32917( ref l_U232, 0 ))
        {
            sub_6921( ref l_U607 );
            sub_33027();
        }
        if (sub_32917( ref l_U253, 0 ))
        {
            sub_33156();
            sub_33863();
            g_U766 = 1;
        }
        if (sub_32917( ref l_U463, 0 ))
        {
            sub_846( "SA", "FAV_ONE_5_6", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "FAVELA_ONE_SONG", "FAV_ONE_5_6", "", 1.00000000, 0, 12000, -1082130432, 0 );
        }
        if (sub_5348( ref l_U494 ))
        {
            sub_34243();
        }
        if (sub_32917( ref l_U274, 0 ))
        {
            sub_34542();
        }
        if ((l_U557) || ((l_U555) || (l_U553)))
        {
            if ((DOES_OBJECT_EXIST( g_U804[3] )) == 1)
            {
                l_U559 = GET_OBJECT_ANIM_CURRENT_TIME( g_U804[3], "COLLISION_ROOT_WW", "fa_whmpm" );
            }
        }
        if (l_U553)
        {
            if (l_U559 > l_U554)
            {
                if (sub_17870( l_U607[0], l_U400 ))
                {
                    sub_846( "NS", "Send Crush Signal", 0 );
                    if (DOES_OBJECT_EXIST( g_U804[3] ))
                    {
                        GENERATE_OBJECT_CRUSH_IMMINENT_EVENT( g_U804[3] );
                    }
                    if (NOT (IS_PED_DEAD( l_U607[0] )))
                    {
                        Temporarily_Disable_Ped_Self_Collision( l_U607[0], 15000 );
                    }
                    l_U553 = 0;
                }
            }
        }
        if (l_U555 == 1)
        {
            if (l_U559 > l_U556)
            {
                if (NOT (IS_PED_DEAD( l_U607[0] )))
                {
                    START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "blood_fall_high_death", l_U607[0], 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 5169, 2.00000000 );
                    START_PARTICLE_FX_NON_LOOPED_AT_COORD( "blood_fall_high_death", 100.46000000, -111.04900000, -7.53900000, 0.00000000, 0.00000000, 0.00000000, 2.00000000 );
                    SET_PED_COLLISION( l_U607[0], 0 );
                    l_U555 = 0;
                }
            }
        }
        if (l_U557 == 1)
        {
            if (l_U559 > l_U558)
            {
                if (NOT (IS_PED_DEAD( l_U607[0] )))
                {
                    sub_6955( l_U607[0] );
                    l_U557 = 0;
                }
            }
        }
        if (NOT IS_MAGDEMO())
        {
            if (((sub_32087( ref l_U716 )) + (sub_32087( ref l_U746 ))) == 0)
            {
                if (sub_17852( l_U379 ))
                {
                    l_U544 = 0;
                    g_U767 = 1;
                }
            }
        }
        if (IS_MAGDEMO())
        {
            if (IS_PED_DEAD( l_U670[0] ))
            {
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
                if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
                {
                    sub_35673( 1000 );
                    RETURN_TO_TITLESCREEN( 0 );
                    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
                    l_U185 = 0;
                }
            }
        }
        if (sub_17852( l_U421 ))
        {
            DOOR_FIND_CLOSEST_SET_FORCE_CLOSE( g_U1524._fU0, g_U1524._fU4, 1, 1 );
        }
        if (sub_32917( ref l_U295, 0 ))
        {
            l_U542 = 1;
        }
        if (sub_32917( ref l_U442, 0 ))
        {
            sub_22424( ref g_U1524, 0 );
        }
        if (l_U542 == 1)
        {
            if (((sub_35876( ref g_U1524 )) > -0.10000000) AND ((sub_35876( ref g_U1524 )) < 0.10000000))
            {
                l_U185 = 0;
            }
        }
        if (l_U543 == 1)
        {
            if (sub_35993() == 1)
            {
                l_U543 = 0;
            }
        }
        sub_36453();
        sub_36630();
        break;
    }
    return;
}

void sub_11989()
{
    switch (l_U790)
    {
        case 0:
        sub_846( "CCB", "eCrushYourEnemies - STATE_CHALLENGE_IDLE", 0 );
        l_U790 = 1;
        break;
        case 1:
        if (l_U186 >= 5)
        {
            if (NOT l_U557)
            {
                sub_846( "CCB", "The player crushed a ped...", 0 );
                SCRIPT_VAR_HASH_SET_INT( 2040251834, 1 );
                sub_846( "CCB", "eCrushYourEnemies - STATE_CHALLENGE_COMPLETE", 0 );
                l_U790 = 2;
            }
        }
        break;
        case 2: break;
    }
    return;
}

void sub_12335(unknown uParam0)
{
    sub_12365( "MID_03_FAV1_SEQ", uParam0 );
    sub_12620( 1402932022, uParam0 );
    sub_12620( 1954287605, uParam0 );
    sub_12620( -248883091, uParam0 );
    sub_12816( -1580872458, uParam0 );
    sub_12620( 1954287605, uParam0 );
    sub_13047( "LEVEL_S_FAV1_CP_05", 0, uParam0 );
    sub_13047( "fa_whmpm", 0, uParam0 );
    return;
}

void sub_12365(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_12620(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_9595( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_12816(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_13047(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_13195(unknown uParam0)
{
    sub_846( "SP", "LOAD_ASSETS", "###" );
    sub_13251( "S_FAV1_MPM", 0, uParam0 );
    sub_12620( g_U758, uParam0 );
    sub_12620( g_U762, uParam0 );
    sub_12620( 1402932022, uParam0 );
    sub_12620( 898813722, uParam0 );
    sub_12620( 1954287605, uParam0 );
    sub_13393( g_U1821, uParam0 );
    sub_12816( -1580872458, uParam0 );
    sub_12620( 1788482433, uParam0 );
    sub_12620( -248883091, uParam0 );
    sub_12620( -1363134011, uParam0 );
    sub_12620( 655204164, uParam0 );
    sub_12620( 2124875535, uParam0 );
    sub_12620( 151831952, uParam0 );
    sub_13047( "CRUSH_IMMINENT", 0, uParam0 );
    sub_12620( -502497534, uParam0 );
    sub_13587( "SFV1AUD" );
    return;
}

void sub_13251(unknown uParam0, unknown uParam1, int iParam2)
{
    if (iParam2 == 0)
    {
        REQUEST_SCRIPT_STREAM( uParam0, uParam1 );
    }
    else
    {
        while ((LOAD_SCRIPT_STREAM( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_13393(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_13587(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_13607();
    return;
}

void sub_13607()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_13773()
{
    int Result;

    Result = 0;
    if ((HAS_ANIM_DICT_LOADED( "CRUSH_IMMINENT", 0 )) AND ((HAS_MODEL_LOADED( 2124875535 )) AND ((HAS_MODEL_LOADED( -502497534 )) AND ((HAS_MODEL_LOADED( 151831952 )) AND ((HAS_MODEL_LOADED( 655204164 )) AND ((HAS_MODEL_LOADED( -1363134011 )) AND ((HAS_MODEL_LOADED( -248883091 )) AND ((HAS_MODEL_LOADED( 1788482433 )) AND (((ISEQ_QUERY_STATE( -1580872458, 2 )) == 1) AND ((HAS_WEAPON_LOADED( g_U1821 )) AND ((HAS_MODEL_LOADED( 1954287605 )) AND ((HAS_MODEL_LOADED( 898813722 )) AND ((HAS_MODEL_LOADED( 1402932022 )) AND ((HAS_MODEL_LOADED( g_U762 )) AND ((HAS_MODEL_LOADED( g_U758 )) AND (LOAD_SCRIPT_STREAM( "S_FAV1_MPM", 0 )))))))))))))))))
    {
        Result = 1;
    }
    return Result;
}

void sub_14041()
{
    int I;

    sub_846( "NS", "P_CREATE_MPM_LAST()", 0 );
    for ( I = 0; I < 1; I++ )
    {
        l_U670[I] = sub_14104( ref l_U672[I] );
        sub_14777( l_U670[I], ref l_U601 );
        SET_ROOM_FOR_PED_BY_NAME( l_U670[I], ref l_U592 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U670[I], 1 );
        SET_PED_AI_TEMPLATE( l_U670[I], ref g_U1791 );
    }
    sub_9924( l_U670[0], g_U1819, 25000, 0, 0 );
    sub_15313( ref l_U670, "piMpmLast" );
    if (NOT (IS_PED_DEAD( l_U670[0] )))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U670[0], 1 );
        SET_BULLET_CAM_PREF( l_U670[0], "FAV1_WAREHOUSE_MPM_CUSTOM", "FAV1_WAREHOUSE_MPM_CUSTOM", "FAV1_WAREHOUSE_MPM_CUSTOM", "", 0, 0, 0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_14104(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_12620( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_14583( iParam0->_fU40 );
    sub_14663( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_14583(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_14663(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_14777(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_9595( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_14920( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_14920( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_14920(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_15313(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_15562()
{
    int I;

    sub_846( "NS", "P_Create_MPM_surprise", 0 );
    for ( I = 0; I < 2; I++ )
    {
        l_U686[I] = sub_14104( ref l_U689[I] );
        if (NOT (IS_PED_DEAD( l_U686[I] )))
        {
            sub_14777( l_U686[I], ref l_U601 );
            SET_ROOM_FOR_PED_BY_NAME( l_U686[I], ref l_U592 );
            SET_PED_AI_TEMPLATE( l_U686[I], ref g_U1791 );
            sub_9924( l_U686[I], g_U1820, 25000, 0, 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U686[I], 1 );
            sub_15777( ref l_U484, l_U686[I], 1 );
            SET_PED_AS_ONE_SHOT_KILL( l_U686[I], 1 );
        }
    }
    sub_15880( ref l_U686 );
    sub_15313( ref l_U686, "piMPMsurprse" );
    return;
}

void sub_15777(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_15880(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_15911( (uParam0^)[I] );
    }
    return;
}

void sub_15911(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_16059()
{
    sub_846( "NS", "P_CREATE_WAREHOUSE_PROPANE()", 0 );
    if (NOT (DOES_OBJECT_EXIST( g_U790 )))
    {
        sub_846( "NS", "oiWarehousePropane01", 0 );
        sub_6655( g_U790 );
        g_U790 = sub_16213( -502497534, 91.55000000, -108.78000000, -2.77000000, 0.00000000, 0.00000000, 0.00000000, 1, 0, 0 );
        if (DOES_OBJECT_EXIST( g_U790 ))
        {
            CAMERA_CAN_TARGET_OBJECT( 1, g_U790 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U790, "room_large" );
        }
    }
    if (NOT (DOES_OBJECT_EXIST( g_U791 )))
    {
        sub_846( "NS", "oiWarehousePropane02", 0 );
        sub_6655( g_U791 );
        g_U791 = sub_16213( -502497534, 91.55000000, -117.12000000, -2.77000000, 0.00000000, 0.00000000, 0.00000000, 1, 0, 0 );
        if (DOES_OBJECT_EXIST( g_U791 ))
        {
            CAMERA_CAN_TARGET_OBJECT( 1, g_U791 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U791, "room_large" );
        }
    }
    if (NOT (DOES_OBJECT_EXIST( g_U792 )))
    {
        sub_846( "NS", "oiWarehousePropane03", 0 );
        sub_6655( g_U792 );
        g_U792 = sub_16213( -502497534, 73.22000000, -116.02000000, -2.75000000, 0.00000000, 0.00000000, 0.00000000, 1, 0, 0 );
        if (DOES_OBJECT_EXIST( g_U792 ))
        {
            CAMERA_CAN_TARGET_OBJECT( 1, g_U792 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U792, "room_hall" );
        }
    }
    return;
}

void sub_16213(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_12620( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_16844()
{
    int I;

    sub_846( "NS", "P_CREATE_FAR_SIDE_EXTRA()", 0 );
    sub_6921( ref g_U809 );
    for ( I = 0; I < 3; I++ )
    {
        g_U809[I] = sub_14104( ref g_U813[I] );
        sub_9924( g_U809[I], g_U1819, 25000, 0, 0 );
        if (NOT (IS_PED_DEAD( g_U809[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U809[I], 1 );
            SET_PED_ALERTNESS( g_U809[I], 4 );
            SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( g_U809[I], 0 );
            SET_BULLET_CAM_PREF( g_U809[I], "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", "", 0, 0, 0, 0, 0, 0, 0, 0 );
            SET_PED_IGNORE_LOS_CHECKS( g_U809[I], 1 );
            if (NOT (IS_PED_DEAD( sub_4440() )))
            {
                REGISTER_TARGET( g_U809[I], sub_4440() );
            }
        }
    }
    sub_15777( ref l_U485, g_U809[0], 1 );
    sub_15777( ref l_U485, g_U809[1], 1 );
    sub_15313( ref g_U809, "piExtraFarSide" );
    sub_15880( ref g_U809 );
    return;
}

void sub_17246()
{
    int I;

    sub_846( "ns", "p_Create_Top_Level_right", 0 );
    for ( I = 0; I < 2; I++ )
    {
        l_U746[I] = sub_14104( ref l_U749[I] );
        sub_14777( l_U746[I], ref l_U601 );
        if (NOT (IS_PED_DEAD( l_U746[I] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U746[I], ref l_U592 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U746[I], 1 );
            SET_PED_AI_TEMPLATE( l_U746[I], ref g_U1791 );
            SET_PED_ALERTNESS( l_U746[I], 4 );
            SET_PED_COMBAT_MOVEMENT( l_U746[I], 1 );
            SET_BULLET_CAM_PREF( l_U746[I], "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", "", 0, 0, 0, 0, 0, 0, 0, 0 );
        }
    }
    sub_15777( ref l_U489, l_U746[0], 1 );
    sub_15777( ref l_U492, l_U746[1], 1 );
    sub_9924( l_U746[0], g_U1820, 25000, 0, 0 );
    SET_PED_SUGGESTED_COVER_POINT( l_U746[0], "GenCover", "E8D2B05C_F7EA001B_Popover3" );
    SET_PED_COMBAT_RANGE_MIN( l_U746[0], 1 );
    sub_9924( l_U746[1], g_U1819, 25000, 0, 0 );
    SET_PED_SUGGESTED_COVER_POINT( l_U746[1], "GenCover", "E8D2B05C_1A7BC40E_Corner2" );
    SET_PED_SUGGESTED_COVER_POINT( l_U746[1], "GenCover", "E8D2B05C_1A7BC40E_Popover1" );
    sub_15313( ref l_U746, "piTopRightSide" );
    return;
}

void sub_17852(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_17870( sub_4440(), uParam0 );
}

int sub_17870(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_17939()
{
    int I;

    sub_846( "ns", "P_SetupChickenFightAudience", 0 );
    for ( I = 0; I < 4; I++ )
    {
        l_U607[I] = sub_14104( ref l_U612[I] );
        if (NOT (IS_PED_DEAD( l_U607[I] )))
        {
            sub_14777( l_U607[I], ref l_U601 );
            SET_ROOM_FOR_PED_BY_NAME( l_U607[I], ref l_U592 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U607[I], 1 );
            SET_PED_AI_TEMPLATE( l_U607[I], ref g_U1791 );
            SET_PED_AS_ONE_SHOT_KILL( l_U607[I], 1 );
            if (NOT (IS_PED_DEAD( sub_4440() )))
            {
                REGISTER_TARGET( l_U607[I], sub_4440() );
            }
        }
    }
    sub_15777( ref l_U491, l_U607[0], 1 );
    l_U665[0] = sub_9924( l_U607[0], g_U1820, 25000, 0, 1 );
    l_U665[1] = sub_9924( l_U607[1], g_U1819, 25000, 0, 0 );
    l_U665[2] = sub_9924( l_U607[2], g_U1820, 25000, 0, 0 );
    l_U665[3] = sub_9924( l_U607[3], g_U1820, 25000, 0, 0 );
    sub_15313( ref l_U607, "ChickenFight_" );
    return;
}

void sub_18363()
{
    sub_6655( g_U804[2] );
    sub_846( "NS", "P_CREATE_HOOK_MPM_OBJECT()", 0 );
    g_U804[2] = CREATE_OBJECT_NO_OFFSET( -248883091, l_U75, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U804[2] ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U804[2], "room_large" );
        FREEZE_OBJECT_POSITION( g_U804[2], 1 );
        SET_OBJECT_VISIBLE( g_U804[2], 0 );
    }
    return;
}

int sub_18575()
{
    unknown uVar2;
    unknown uVar3;
    int iVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    int iVar8;

    switch (l_U188)
    {
        case 0: break;
        case 2:
        sub_846( "NS", "CUTSCENE_SETUP", 0 );
        if (NOT (IS_PED_DEAD( sub_4440() )))
        {
            iVar8 = sub_18680();
            if (iVar8 != 0)
            {
                g_U801 = 1;
                g_U802 = GET_WEAPON_TYPE( iVar8 );
            }
            sub_19119( ref l_U803, 0, 1 );
            l_U821 = sub_20104();
            if (GET_DOES_WEAPON_EXIST( l_U821 ))
            {
                if ((GET_WEAPON_TYPE( l_U821 )) == g_U1818)
                {
                    sub_846( "NS", "PLAYER HAD DOUBLE BARREL BEFORE MPM", 0 );
                    l_U822 = l_U821;
                    sub_19119( ref l_U803, 0, 1 );
                    l_U821 = GET_WEAPON_FROM_HOLSTER( sub_4440(), 1 );
                    if (((GET_WEAPON_TYPE( l_U821 )) == g_U1818) || (l_U821 == 0))
                    {
                        l_U821 = GET_WEAPON_FROM_HOLSTER( sub_4440(), 0 );
                    }
                    SELECT_WEAPON_TO_HAND( sub_4440(), l_U821, 0, 0 );
                    REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U821, "W_PI_Clt1911_Aa_H", 0 );
                    SET_WEAPON_VISIBLE( l_U822, 0 );
                }
                else
                {
                    REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U821, "W_PI_Clt1911_Aa_H", 0 );
                }
            }
            ISEQ_REGISTER_ENTITY( -1580872458, "mpm_player", sub_4440(), 0 );
            CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_4440(), "Global/Player/PlayerRoot/PLAYER_INITIALIZE_LOCO" );
            CUTSCENE_REGISTER_PED_TELEPORT( sub_4440(), 100.14000000, -116.61500000, -8.54500000, 0.00000000 );
        }
        if (GET_DOES_WEAPON_EXIST( l_U821 ))
        {
            sub_846( "NS", "mpm weapon exists", 0 );
            if ((GET_WEAPON_AMMO( l_U821 )) == 0)
            {
                SET_WEAPON_AMMO( l_U821, 5 );
            }
            if ((GET_WEAPON_AMMO_IN_CLIP( l_U821 )) == 0)
            {
                SET_WEAPON_AMMO_IN_CLIP( l_U821, 5 );
            }
        }
        REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U1510._fU0, g_U1510._fU4 ), "P_Dr_Fav1_04_L_H", 0 );
        REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U1517._fU0, g_U1517._fU4 ), "P_Dr_Fav1_04_R_H", 0 );
        if (NOT (IS_PED_DEAD( l_U607[0] )))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U607[0], "G_FAV_Mug_AVG", 0 );
            CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U607[0], "/Global/AMED/AMED_Root/AMED_INITIALIZE_LOCO" );
            CUTSCENE_REGISTER_PED_TELEPORT( l_U607[0], l_U612[0]._fU0, l_U612[0]._fU12 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U665[0], "W_PI_Glk18_Aa_H^1", 0 );
        }
        if (NOT (IS_PED_DEAD( l_U607[1] )))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U607[1], "M_F1_MISC_Y^1", 0 );
            CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U607[1], "/Global/AMED/AMED_Root/AMED_INITIALIZE_LOCO" );
            CUTSCENE_REGISTER_PED_TELEPORT( l_U607[1], l_U612[1]._fU0, l_U612[1]._fU12 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U665[1], "W_AR_AK47_Aa_H", 0 );
        }
        if (NOT (IS_PED_DEAD( l_U607[2] )))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U607[2], "M_F1_MISC_X", 0 );
            CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U607[2], "/Global/AMED/AMED_Root/AMED_INITIALIZE_LOCO" );
            CUTSCENE_REGISTER_PED_TELEPORT( l_U607[2], l_U612[2]._fU0, l_U612[2]._fU12 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U665[2], "W_SB_Uzi_Aa_H", 0 );
        }
        if (NOT (IS_PED_DEAD( l_U607[3] )))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U607[3], "M_F1_MISC_Y", 0 );
            CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U607[3], "/Global/AMED/AMED_Root/AMED_INITIALIZE_LOCO" );
            CUTSCENE_REGISTER_PED_TELEPORT( l_U607[3], l_U612[3]._fU0, l_U612[3]._fU12 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U665[3], "W_PI_Glk18_Aa_H", 0 );
        }
        CUTSCENE_REGISTER_OBJECT_ANIM( g_U804[2], "VIG_21_F1_MPM_CHAIN", "LEVEL_S_FAV1_CP_05", 0.00000000, 0, 1 );
        CUTSCENE_ENABLE_SKIP( 0 );
        CUTSCENE_REGISTER_ISEQ( -1580872458 );
        START_SEAMLESS_CUTSCENE();
        l_U188 = 3;
        break;
        case 3:
        sub_846( "SP", "eOpeningCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        SET_WEATHER_TYPE_NOW_PERSIST( "Sunny" );
        FREEZE_TIME_OF_DAY( 12, 0 );
        BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        sub_19119( ref l_U803, 1, 1 );
        if (NOT (IS_PED_DEAD( sub_4440() )))
        {
            uVar5 = GET_WEAPON_FROM_HOLSTER( sub_4440(), 2 );
            if (GET_DOES_WEAPON_EXIST( uVar5 ))
            {
                REMOVE_PED_WEAPON( sub_4440(), uVar5 );
            }
        }
        sub_21935( 1, 0, 0, 1 );
        if (IS_SCREEN_FADED_OUT())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        l_U188 = 4;
        sub_846( "SP", "eOpeningCutsceneState = CUTSCENE_PLAYING", 0 );
        break;
        case 4:
        if (HAS_CUTSCENE_FINISHED() == 1)
        {
            if (NOT (IS_PED_DEAD( sub_4440() )))
            {
                sub_846( "NS", "giving player back his weapon", 0 );
                sub_6655( l_U600 );
                SELECT_WEAPON_TO_HAND( sub_4440(), l_U821, 0, 1 );
                SET_WEAPON_VISIBLE( l_U821, 1 );
            }
            if (l_U548 == 1)
            {
                if (l_U549 == 0)
                {
                    sub_13195( 0 );
                    l_U549 = 1;
                }
                if (l_U550 == 0)
                {
                    sub_13195( 1 );
                    l_U550 = 1;
                }
                if (l_U551 == 0)
                {
                    sub_22368();
                    l_U551 = 1;
                }
            }
            CLEAR_NAMED_CUTSCENE( "MID_03_FAV1_seq" );
            return 1;
        }
        else
        {
            uVar2 = GET_CUTSCENE_SECTION_PLAYING();
            uVar3 = GET_CUTSCENE_TIME();
            iVar4 = GET_CUTSCENE_TIME_MS();
            if ((IS_SCREEN_FADED_OUT() == 1) || (IS_SCREEN_FADING_OUT() == 1))
            {
                CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
                l_U548 = 1;
            }
            if (l_U549 == 0)
            {
                if (iVar4 >= 5000)
                {
                    sub_13195( 0 );
                    l_U549 = 1;
                }
            }
            if (l_U550 == 0)
            {
                if (l_U549 == 1)
                {
                    if (sub_13773() == 1)
                    {
                        sub_14041();
                        sub_15562();
                        sub_16059();
                        if (NOT IS_MAGDEMO())
                        {
                            sub_16844();
                            sub_17246();
                        }
                        sub_846( "NS", "Gameplay assets are loaded!!!", 0 );
                        CUTSCENE_ENABLE_SKIP( 1 );
                        l_U550 = 1;
                    }
                }
            }
            if (l_U551 == 0)
            {
                if (l_U550 == 1)
                {
                    sub_22368();
                    l_U551 = 1;
                }
            }
        }
        break;
    }
    return 0;
}

int sub_18680()
{
    unknown Result;
    unknown uVar3;

    if ((IS_PED_DEAD( sub_4440() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_4440(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_18743( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_4440(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
    }
    return 0;
}

int sub_18743(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_19119(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

    sub_19131( iParam0 );
    if ((IS_PED_DEAD( sub_4440() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND( sub_4440(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if ((sub_19310( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if ((sub_18743( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND( sub_4440(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER( sub_4440(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER( sub_4440(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER( sub_4440(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD( sub_4440() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND( sub_4440(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_4440(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND( sub_4440(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_4440(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD( sub_4440() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND( sub_4440(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if ((sub_18743( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND( sub_4440(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND( sub_4440(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_4440(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

void sub_19131(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

int sub_19310(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_20104()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_4440() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_4440(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_19310( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_4440(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_4440(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_4440(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

void sub_21935(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_4440() )))
        {
            SET_PLAYER_CONTROL( sub_4462(), 0, uParam2 );
            SET_PED_DUCKING( sub_4440(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_4440() );
            }
            SET_PED_INVINCIBLE( sub_4440(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_22368()
{
    sub_846( "NS", "P_CREATE_GAMEPLAY_OBJECTS()", 0 );
    sub_22424( ref g_U1496, 1 );
    sub_22424( ref g_U1503, 1 );
    sub_22637( ref g_U1496, 1 );
    sub_22637( ref g_U1503, 1 );
    sub_22637( ref g_U1524, 0 );
    sub_22800( ref g_U1524, -100.00000000, 0.00000000 );
    sub_22905( ref g_U1531, 1, 1, 1065353216 );
    if (NOT (IS_PED_DEAD( sub_4440() )))
    {
        SET_PED_FORCED_TO_WALK( sub_4440(), 0 );
    }
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    sub_23091();
    sub_23853();
    if (DOES_OBJECT_EXIST( g_U853[0] ))
    {
        SET_OBJECT_VISIBLE( g_U853[0], 0 );
    }
    if (DOES_OBJECT_EXIST( g_U853[1] ))
    {
        SET_OBJECT_VISIBLE( g_U853[1], 0 );
    }
    return;
}

void sub_22424(int iParam0, int iParam1)
{
    if ((sub_22436( iParam0 )) == 0)
    {
        sub_22502( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

int sub_22436(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_22502(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_22637(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_22436( iParam0 )) == 0)
    {
        sub_22502( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

void sub_22800(int iParam0, float fParam1, float fParam2)
{
    if ((sub_22436( iParam0 )) == 0)
    {
        sub_22502( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        ;
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

void sub_22905(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_22436( iParam0 )) == 0)
    {
        sub_22502( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

void sub_23091()
{
    sub_846( "NS", "P_CREATE_MPM_OBJECTS()", 0 );
    sub_6655( g_U804[0] );
    sub_6655( g_U804[1] );
    sub_6655( g_U804[3] );
    g_U804[0] = CREATE_OBJECT_NO_OFFSET( 1788482433, l_U72 + (vector( 0.00000000, 0.00000000, 100.00000000)), 0, 0 );
    g_U804[1] = CREATE_OBJECT_NO_OFFSET( -1363134011, l_U78 + (vector( 0.00000000, 0.00000000, 100.00000000)), 0, 0 );
    g_U804[3] = CREATE_OBJECT_NO_OFFSET( 655204164, (l_U72 - (vector( 0.00000000, 0.00000000, 3.80000000))) + (vector( 0.00000000, 0.00000000, 100.00000000)), 0, 0 );
    if (DOES_OBJECT_EXIST( g_U804[0] ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U804[0], "room_large" );
        FREEZE_OBJECT_POSITION( g_U804[0], 1 );
        PLAY_OBJECT_ANIM( g_U804[0], "FAV1_MPM_CW_a", "fa_whmpm", 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( g_U804[0], "FAV1_MPM_CW_a", "fa_whmpm", 0.00000000 );
        SET_OBJECT_VISIBLE( g_U804[0], 0 );
    }
    if (DOES_OBJECT_EXIST( g_U804[1] ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U804[1], "room_large" );
        FREEZE_OBJECT_POSITION( g_U804[1], 1 );
        PLAY_OBJECT_ANIM( g_U804[1], "RF_whomach_C", "fa_whmpm", 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( g_U804[1], "RF_whomach_C", "fa_whmpm", 0.00000000 );
        SET_OBJECT_VISIBLE( g_U804[1], 0 );
    }
    if (DOES_OBJECT_EXIST( g_U804[3] ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U804[3], "room_large" );
        FREEZE_OBJECT_POSITION( g_U804[3], 1 );
        PLAY_OBJECT_ANIM( g_U804[3], "COLLISION_ROOT_WW", "fa_whmpm", 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( g_U804[3], "COLLISION_ROOT_WW", "fa_whmpm", 0.00000000 );
    }
    return;
}

void sub_23853()
{
    sub_846( "NS", "P_CREATE_LARGE_PROPANE()", 0 );
    if (NOT (DOES_OBJECT_EXIST( g_U853[0] )))
    {
        g_U853[0] = CREATE_OBJECT( 151831952, 98.62000000, -117.58700000, -8.34500000, 1, 0 );
        if (DOES_OBJECT_EXIST( g_U853[0] ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U853[0], "room_large" );
            SET_OBJECT_ROTATION( g_U853[0], -121.00000000, 90.00000000, 0.00000000 );
        }
    }
    if (NOT (DOES_OBJECT_EXIST( g_U853[1] )))
    {
        g_U853[1] = CREATE_OBJECT( 151831952, 99.10200000, -117.82800000, -8.34500000, 1, 0 );
        if (DOES_OBJECT_EXIST( g_U853[1] ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U853[1], "room_large" );
            SET_OBJECT_ROTATION( g_U853[1], -76.00000000, 90.00000000, 0.00000000 );
        }
    }
    return;
}

void sub_24730()
{
    vector vVar2;
    float fVar5;
    vector[4] vVar6;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    vector[2] vVar19;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;

    sub_21935( 1, 0, 0, 1 );
    if (NOT (IS_PLAYER_DEAD( sub_4462() )))
    {
        SET_PLAYER_CONTROL( sub_4462(), 0, 0 );
    }
    FREEZE_PED_POSITION( sub_4440(), 1 );
    SET_ROOM_FOR_PED_BY_NAME( sub_4440(), ref l_U592 );
    FREEZE_PED_POSITION( sub_4440(), 0 );
    if (NOT (IS_PED_DEAD( sub_4440() )))
    {
        SET_PED_CONSUMING_AMMO( sub_4440(), 0 );
        PLAYER_SET_AIM_MODE( 1 );
        SET_PED_INVINCIBLE( sub_4440(), 1 );
        SET_PED_PROOFS( sub_4440(), 1, 1, 1, 1, 1 );
        SET_CAMERA_OVERRIDE( "S_FAV1_MPM_AIM_CAMERA", "", 0, 0, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1216[4], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1258[4], 1065353216, 0 );
    }
    ENABLE_LAST_MAN_STANDING( 0 );
    DISPLAY_HUD( 0 );
    SET_SILHOUETTE_ACTIVE( 0 );
    sub_846( "NS", "SETTING GAMEPLAY CAM HEADING FOR MPM", 0 );
    if ((ISEQ_QUERY_STATE( -1580872458, 3 )) == 0)
    {
        sub_18363();
        if (l_U560 == 0)
        {
            if (DOES_OBJECT_EXIST( g_U804[2] ))
            {
                PLAY_OBJECT_ANIM( g_U804[2], "VIG_21_F1_MPM_CHAIN", "LEVEL_S_FAV1_CP_05", 1.00000000, 0, 1 );
                SET_OBJECT_ANIM_SPEED( g_U804[2], "VIG_21_F1_MPM_CHAIN", "LEVEL_S_FAV1_CP_05", 0.00000000 );
            }
        }
        vVar2 = {100.14000000, -116.61500000, -8.54500000};
        fVar5 = 0.00000000;
        sub_25268( sub_4440(), vVar2, fVar5 );
        ISEQ_REGISTER_ENTITY( -1580872458, "mpm_player", sub_4440(), 0 );
        sub_846( "NS", "Starting the s_Fav1_mpm sequence", "###" );
        ISEQ_START( -1580872458 );
    }
    if (NOT (IS_PED_DEAD( sub_4440() )))
    {
        if (DOES_OBJECT_EXIST( g_U804[2] ))
        {
            SET_IK_ATTACH_TARGET_OBJ( sub_4440(), g_U804[2], "fa_mpmhook_BONE01" );
        }
    }
    sub_25498();
    sub_25709();
    PLAY_SCRIPT_STREAM_FRONTEND( 0 );
    CAMERA_PLAY_ANIMATED( "LEVEL_S_FAV1_CP_05", "VIG_21_F1_MPM_CAM", 1, 100.84000000, -118.36000000, -7.10000000, 0.00000000, 0, 0 );
    array(ref vVar6, 4);
    array(ref vVar19, 2);
    vVar6[0] = {100.21000000, -113.09000000, -8.61000000};
    vVar6[1] = {99.21000000, -113.09000000, -8.61000000};
    vVar6[2] = {99.21000000, -115.09000000, -7.61000000};
    vVar6[3] = {100.21000000, -113.09000000, -6.61000000};
    vVar19[0] = {100.21000000, -113.09000000, -6.61000000};
    vVar19[1] = {100.81000000, -113.09000000, -7.61000000};
    START_PARTICLE_FX_NON_LOOPED_AT_COORD( "Fav1_MPM_smoke_S", vVar6[0], 0.00000000, 0.00000000, 0.00000000, 1065353216 );
    START_PARTICLE_FX_NON_LOOPED_AT_COORD( "Fav1_MPM_smoke_S", vVar6[1], 0.00000000, 0.00000000, 0.00000000, 1065353216 );
    START_PARTICLE_FX_NON_LOOPED_AT_COORD( "Fav1_MPM_smoke_S", vVar6[2], 0.00000000, 0.00000000, 0.00000000, 1065353216 );
    START_PARTICLE_FX_NON_LOOPED_AT_COORD( "Fav1_MPM_smoke_S", vVar6[3], 0.00000000, 0.00000000, 0.00000000, 1065353216 );
    START_PARTICLE_FX_NON_LOOPED_AT_COORD( "Fav1_MPM_sparks_S", vVar19[0], 0.00000000, 0.00000000, 0.00000000, 1065353216 );
    START_PARTICLE_FX_NON_LOOPED_AT_COORD( "Fav1_MPM_sparks_S", vVar19[1], 0.00000000, 0.00000000, 0.00000000, 1065353216 );
    sub_846( "NS", "500", 0 );
    ENABLE_MPM( 1 );
    ENABLE_ALL_ADRENALINE( 0 );
    sub_5228( ref l_U494 );
    return;
}

void sub_25268(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_25498()
{
    sub_846( "NS", "P_MOVE_MPM_OBJECTS()", 0 );
    if (DOES_OBJECT_EXIST( g_U804[0] ))
    {
        SET_OBJECT_COORDS( g_U804[0], l_U72 );
    }
    if (DOES_OBJECT_EXIST( g_U804[1] ))
    {
        SET_OBJECT_COORDS( g_U804[1], l_U78 );
    }
    if (DOES_OBJECT_EXIST( g_U804[2] ))
    {
        ;
    }
    if (DOES_OBJECT_EXIST( g_U804[3] ))
    {
        SET_OBJECT_COORDS( g_U804[3], l_U72 - (vector( 0.00000000, 0.00000000, 3.80000000)) );
    }
    return;
}

void sub_25709()
{
    sub_846( "NS", "P_PLAY_MPM_OBJECTS()", 0 );
    if (DOES_OBJECT_EXIST( g_U804[0] ))
    {
        SET_OBJECT_ANIM_SPEED( g_U804[0], "FAV1_MPM_CW_a", "fa_whmpm", 1.00000000 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U804[0], "FAV1_MPM_CW_A", "fa_whmpm", 0.03000000 );
        SET_OBJECT_VISIBLE( g_U804[0], 1 );
    }
    if (DOES_OBJECT_EXIST( g_U804[1] ))
    {
        SET_OBJECT_ANIM_SPEED( g_U804[1], "RF_whomach_C", "fa_whmpm", 1.00000000 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U804[1], "RF_whomach_C", "fa_whmpm", 0.22000000 );
        SET_OBJECT_VISIBLE( g_U804[1], 1 );
    }
    if (DOES_OBJECT_EXIST( g_U804[2] ))
    {
        if (l_U560 == 0)
        {
            SET_OBJECT_ANIM_SPEED( g_U804[2], "VIG_21_F1_MPM_CHAIN", "LEVEL_S_FAV1_CP_05", 1.00000000 );
        }
        SET_OBJECT_VISIBLE( g_U804[2], 1 );
    }
    if (DOES_OBJECT_EXIST( g_U804[3] ))
    {
        SET_OBJECT_ANIM_SPEED( g_U804[3], "COLLISION_ROOT_WW", "fa_whmpm", 1.00000000 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U804[3], "COLLISION_ROOT_WW", "fa_whmpm", 0.03000000 );
    }
    return;
}

int sub_26870(unknown uParam0)
{
    sub_846( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_7726( uParam0, sub_4440() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_27167(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_846( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_846( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_10578( iParam1 );
        sub_27426( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_27877( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_27877( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_28109( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_27877( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_28109( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_28109( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_27877( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_28109( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_28109( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_28109( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_27877( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_28109( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_28109( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_28109( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_28109( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_29667( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_846( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_27426(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_7942( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_846( "TEH", "Ending context", 0 );
        sub_846( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_27877(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_28109(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_29667(int iParam0)
{
    sub_9595( "CHECKPOINT DATA" );
    sub_29706( iParam0->_fU4 );
    sub_29729( iParam0->_fU16 );
    sub_29729( iParam0->_fU20 );
    sub_29729( iParam0->_fU24 );
    sub_29772( iParam0->_fU28 );
    sub_29772( iParam0->_fU56 );
    sub_29772( iParam0->_fU60 );
    sub_29772( iParam0->_fU64 );
    sub_29772( iParam0->_fU68 );
    sub_29772( iParam0->_fU72 );
    sub_29772( iParam0->_fU76 );
    sub_29772( iParam0->_fU80 );
    sub_29772( iParam0->_fU84 );
    sub_29772( iParam0->_fU88 );
    sub_29772( iParam0->_fU92 );
    sub_29729( iParam0->_fU32 );
    sub_29772( iParam0->_fU36 );
    sub_29772( iParam0->_fU40 );
    sub_29772( iParam0->_fU44 );
    sub_29729( iParam0->_fU136 );
    sub_29977( iParam0->_fU140 );
    sub_29772( iParam0->_fU52 );
    sub_9595( "---nRightHolsterAttachmentEnabled: " );
    sub_29772( iParam0->_fU96 );
    sub_9595( "---nRightHolsterAttachmentToggled: " );
    sub_29772( iParam0->_fU100 );
    sub_9595( "---nLeftHolsterAttachmentEnabled: " );
    sub_29772( iParam0->_fU104 );
    sub_9595( "---nLeftHolsterAttachmentToggled: " );
    sub_29772( iParam0->_fU108 );
    sub_9595( "---nRifleHolsterAttachmentEnabled: " );
    sub_29772( iParam0->_fU112 );
    sub_9595( "---nRifleHolsterAttachmentToggled: " );
    sub_29772( iParam0->_fU116 );
    sub_9595( "---nRightHandAttachmentEnabled: " );
    sub_29772( iParam0->_fU120 );
    sub_9595( "---nRightHandAttachmentToggled: " );
    sub_29772( iParam0->_fU124 );
    sub_9595( "---nLeftHandAttachmentEnabled: " );
    sub_29772( iParam0->_fU128 );
    sub_9595( "---nLeftHandAttachmentToggled: " );
    sub_29772( iParam0->_fU132 );
    sub_29772( l_U1 );
    sub_29772( 144 );
    return;
}

void sub_29706(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_29729(unknown uParam0)
{
    return;
}

void sub_29772(unknown uParam0)
{
    return;
}

void sub_29977(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_30866()
{
    if (NOT (IS_PED_DEAD( sub_4440() )))
    {
        if (NOT (IS_PED_DEAD( l_U607[0] )))
        {
            sub_25268( l_U607[0], 100.48000000, -110.98000000, -8.55000000, 0 );
            OPEN_SEQUENCE_TASK( ref l_U189 );
            TASK_SHOOT_AT_PED( 0, sub_4440(), 20000, 0, 0, 0, 0 );
            CLOSE_SEQUENCE_TASK( l_U189 );
            TASK_PERFORM_SEQUENCE( l_U607[0], l_U189 );
            CLEAR_SEQUENCE_TASK( l_U189 );
        }
        if (NOT (IS_PED_DEAD( l_U607[1] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U189 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 101.71000000, -105.92000000, -8.68000000, sub_4440(), 2, 1, 0.50000000, 0, 1, 1 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0, sub_4440() );
            CLOSE_SEQUENCE_TASK( l_U189 );
            TASK_PERFORM_SEQUENCE( l_U607[1], l_U189 );
            CLEAR_SEQUENCE_TASK( l_U189 );
        }
        if (NOT (IS_PED_DEAD( l_U607[2] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U189 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 102.00000000, -108.14000000, -8.65000000, sub_4440(), 2, 1, 0.50000000, 0, 1, 1 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0, sub_4440() );
            CLOSE_SEQUENCE_TASK( l_U189 );
            TASK_PERFORM_SEQUENCE( l_U607[2], l_U189 );
            CLEAR_SEQUENCE_TASK( l_U189 );
        }
        if (NOT (IS_PED_DEAD( l_U607[3] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U189 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 102.50000000, -110.61000000, -8.68000000, sub_4440(), 2, 1, 0.50000000, 0, 1, 1 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0, sub_4440() );
            CLOSE_SEQUENCE_TASK( l_U189 );
            TASK_PERFORM_SEQUENCE( l_U607[3], l_U189 );
            CLEAR_SEQUENCE_TASK( l_U189 );
        }
    }
    return;
}

void sub_31446()
{
    sub_846( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_846( "CCB", "Starting the Favela_Warehouse context...", 0 );
    START_CONTEXT( "Favela_Warehouse" );
    return;
}

void sub_31581()
{
    sub_846( "CCB", "P_START_SP_CHALLENGES_MPM", 0 );
    sub_846( "CCB", "Starting the Favela_Warehouse_MPM context...", 0 );
    START_CONTEXT( "Favela_Warehouse_MPM" );
    return;
}

void sub_31877()
{
    int iVar2;
    float fVar3;
    int iVar4;
    float fVar5;
    int iVar6;

    sub_846( "NS", "ONESHOT", 0 );
    AUDIO_MUSIC_PLAY_ONESHOT();
    if (NOT (IS_PED_DEAD( sub_4440() )))
    {
        SET_PLAYER_CONTROL( sub_4462(), 1, 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        OVERRIDE_WARP_MODIFIER( 0, 1.00000000 );
        PLAYER_SET_WARP_FIRE_SCALE( 1.00000000 );
        SET_PED_CONSUMING_AMMO( sub_4440(), 1 );
        PLAYER_SET_AIM_MODE( 2 );
        SET_CAMERA_OVERRIDE( "", "", 0, 1, 1 );
        SET_ADRENALINE_NOT_ALLOW( 0 );
        DISPLAY_HUD( 0 );
        DISPLAY_HUD( 1 );
        CLEAR_IK_ATTACH_TARGET( sub_4440() );
        DISPLAY_HUD( 1 );
        ENABLE_MPM( 0 );
        ENABLE_ALL_ADRENALINE( 1 );
        iVar2 = 200;
        iVar4 = (sub_32087( ref l_U607 )) + (sub_32087( ref l_U686 ));
        fVar5 = 0.14200000;
        fVar3 = 1.00000000 - (iVar4 * fVar5);
        if (fVar3 > 0)
        {
            iVar6 = (ROUND( iVar2 * fVar3 )) + 100;
            SET_PED_HEALTH( sub_4440(), iVar6, 0 );
        }
    }
    return;
}

void sub_32087(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_32252()
{
    int I;

    sub_846( "NS", "P_Send_Floor_To_Get_Cleaned()", 0 );
    for ( I = 0; I < 4; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U607[I] )))
        {
            CLEAR_PED_TASKS( l_U607[I] );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U607[I], 1 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( l_U607[I], 105.19000000, -116.06000000, -8.57000000, 3, 20000, 1048576000, 0, 0 );
        }
    }
    for ( I = 0; I < 2; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U686[I] )))
        {
            CLEAR_PED_TASKS( l_U686[I] );
            sub_32486( l_U686[I] );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U686[I], 1 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( l_U686[I], 105.19000000, -116.06000000, -8.57000000, 3, 20000, 1048576000, 0, 0 );
        }
    }
    return;
}

void sub_32486(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        RESET_PED_TETHERING( uParam0 );
    }
    return;
}

void sub_32917(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_17870( sub_4440(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_33027()
{
    int I;

    sub_846( "NS", "p_DELETE_MPM_SURPRISE()", 0 );
    for ( I = 0; I < 2; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U686[I] )))
        {
            sub_6955( l_U686[I] );
        }
    }
    return;
}

void sub_33156()
{
    sub_846( "NS", "p_MPM_Surprise_Action", 0 );
    sub_33205( ref l_U686 );
    if (NOT (IS_PED_DEAD( sub_4440() )))
    {
        if (NOT (IS_PED_DEAD( l_U686[1] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U189 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 108.70000000, -112.96000000, -3.65000000, sub_4440(), 2, 1, 0.20000000, 0, 1, 0 );
            TASK_SHOOT_AT_PED( 0, sub_4440(), 2000, 0, 1, 0, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            CLOSE_SEQUENCE_TASK( l_U189 );
            TASK_PERFORM_SEQUENCE( l_U686[1], l_U189 );
            CLEAR_SEQUENCE_TASK( l_U189 );
        }
        if (NOT (IS_PED_DEAD( l_U686[0] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U189 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 103.32000000, -112.58000000, -4.11000000, sub_4440(), 2, 1, 0.20000000, 0, 1, 0 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 103.34000000, -115.66000000, -4.11000000, sub_4440(), 2, 1, 0.20000000, 0, 1, 0 );
            TASK_SHOOT_AT_PED( 0, sub_4440(), 2000, 0, 1, 0, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            CLOSE_SEQUENCE_TASK( l_U189 );
            TASK_PERFORM_SEQUENCE( l_U686[0], l_U189 );
            CLEAR_SEQUENCE_TASK( l_U189 );
        }
        if (NOT (IS_PED_DEAD( l_U670[0] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U189 );
            TASK_PAUSE( 0, 2000 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 106.82000000, -115.82000000, 0.85000000, sub_4440(), 2, 1, 1056964608, 0, 1, 0 );
            TASK_SHOOT_AT_PED( 0, sub_4440(), 5000, 0, 1, 0, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            CLOSE_SEQUENCE_TASK( l_U189 );
            TASK_PERFORM_SEQUENCE( l_U670[0], l_U189 );
            CLEAR_SEQUENCE_TASK( l_U189 );
        }
    }
    return;
}

void sub_33205(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_33236( (uParam0^)[I] );
    }
    return;
}

void sub_33236(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_33863()
{
    sub_846( "NS", "P_Top_Level_Right_Action", 0 );
    if (NOT (IS_PED_DEAD( sub_4440() )))
    {
        if (NOT (IS_PED_DEAD( l_U746[0] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U746[0], 0 );
            TASK_COMBAT_MOVE_TO_COVER( l_U746[0], "GenCover", "E8D2B05C_F7EA001B_Popover3", 0 );
        }
        if (NOT (IS_PED_DEAD( l_U746[1] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U746[1], 0 );
            TASK_COMBAT_MOVE_TO_COVER( l_U746[1], "GenCover", "E8D2B05C_1A7BC40E_Corner2", sub_4440() );
        }
    }
    return;
}

void sub_34243()
{
    sub_846( "NS", "P_MPM_Slow_Down()", 0 );
    if (NOT (IS_PED_DEAD( sub_4440() )))
    {
        if (GET_ADRENALINE_AMT() < 0.10000000)
        {
            SET_ADRENALINE_AMT( 0.10000000 );
        }
        ACTIVATE_BULLET_TIME( 0, l_U794, 1 );
        SET_PED_CONSUMING_AMMO( sub_4440(), 0 );
        PLAYER_SET_AIM_MODE( 1 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1216[4], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1258[4], 1065353216, 0 );
        CAMERA_ANIMATED_STOP( 1000, 1 );
        SET_PLAYER_CONTROL( sub_4462(), 1, 0 );
        SET_PLAYER_CONTROL( sub_4462(), 0, 0 );
        REENABLE_PLAYER_INPUT( 14 );
        REENABLE_PLAYER_INPUT( 15 );
        REENABLE_PLAYER_INPUT( 16 );
        REENABLE_PLAYER_INPUT( 17 );
        REENABLE_PLAYER_INPUT( 6 );
        REENABLE_PLAYER_INPUT( 4 );
        REENABLE_PLAYER_INPUT( 20 );
        SET_CROSSHAIR_PULSE();
    }
    ENABLE_CROSSHAIR( 1 );
    return;
}

void sub_34542()
{
    unknown uVar2;

    sub_846( "NS", "P_ACTION_FARSIDE_EXTRA()", 0 );
    sub_33205( ref g_U809 );
    if (NOT (IS_PED_DEAD( sub_4440() )))
    {
        if (NOT (IS_PED_DEAD( g_U809[0] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U81 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_ATTACK_MOVE( 0, 85.37000000, -105.08000000, -2.12000000, 1092616192, 1101004800, -1082130432, 3 );
            CLOSE_SEQUENCE_TASK( l_U81 );
            TASK_PERFORM_SEQUENCE( g_U809[0], l_U81 );
            CLEAR_SEQUENCE_TASK( l_U81 );
        }
        if (NOT (IS_PED_DEAD( g_U809[1] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U81 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_SNAP_TO_COVER( 0, "fav1_who", "Corner Position05", sub_4440() );
            CLOSE_SEQUENCE_TASK( l_U81 );
            TASK_PERFORM_SEQUENCE( g_U809[1], l_U81 );
            CLEAR_SEQUENCE_TASK( l_U81 );
        }
        if (NOT (IS_PED_DEAD( g_U809[2] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U81 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_ATTACK_MOVE( 0, 89.29000000, -112.41000000, -2.12000000, 1092616192, 1101004800, -1082130432, 3 );
            CLOSE_SEQUENCE_TASK( l_U81 );
            TASK_PERFORM_SEQUENCE( g_U809[2], l_U81 );
            CLEAR_SEQUENCE_TASK( l_U81 );
        }
    }
    return;
}

void sub_35673(unknown uParam0)
{
    if ((IS_SCREEN_FADING_OUT() == 0) AND (IS_SCREEN_FADED_OUT() == 0))
    {
        DO_SCREEN_FADE_OUT( uParam0 );
        while (IS_SCREEN_FADED_OUT() == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_35876(int iParam0)
{
    int iVar3;
    float Result;

    if ((sub_22436( iParam0 )) == 0)
    {
        sub_22502( iParam0 );
    }
    iVar3 = 0;
    Result = 0.00000000;
    GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar3, ref Result );
    return Result;
}

void sub_35993()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I < 4; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U607[I] )))
        {
            if (sub_17870( l_U607[I], l_U316 ))
            {
                sub_846( "NS", "Cleaned floor ped", 0 );
                sub_29772( I );
                sub_6955( l_U607[I] );
            }
        }
    }
    for ( I = 0; I < 2; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U686[I] )))
        {
            if (sub_17870( l_U686[I], l_U316 ))
            {
                sub_846( "NS", "Cleaned floor ped", 0 );
                sub_29772( I );
                sub_6955( l_U686[I] );
            }
        }
    }
    if (((sub_32087( ref l_U607 )) + (sub_32087( ref l_U686 ))) == 0)
    {
        sub_36281( 1402932022 );
        sub_36281( 1954287605 );
        Result = 1;
    }
    return Result;
}

void sub_36281(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_9595( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_36453()
{
    if (DOES_OBJECT_EXIST( DOOR_FIND_CLOSEST( g_U1524._fU0, g_U1524._fU4 ) ))
    {
        if (DOOR_GET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U1524._fU0, g_U1524._fU4 ) ))
        {
            sub_846( "NS", "Setting WAREHOUSE door to not react to bullets.", 0 );
            DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U1524._fU0, g_U1524._fU4 ), 0 );
        }
    }
    return;
}

void sub_36630()
{
    return;
}

void sub_36679()
{
    sub_846( "SP", "P_UNLOAD_ASSETS", "###" );
    ISEQ_TERMINATE( -1580872458 );
    sub_36281( 898813722 );
    sub_36281( 1402932022 );
    sub_36281( 1954287605 );
    sub_36281( g_U758 );
    sub_36281( g_U762 );
    sub_36806( "LEVEL_S_FAV1_CP_05" );
    sub_36806( "LEVEL_S_FAV1" );
    sub_36806( "CRUSH_IMMINENT" );
    sub_36281( -502497534 );
    sub_36281( 1788482433 );
    sub_36281( -248883091 );
    sub_36281( -1363134011 );
    sub_36281( 655204164 );
    sub_36806( "fa_whmpm" );
    CLEAR_NAMED_CUTSCENE( "MID_03_FAV1_seq" );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U190._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U211._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U232._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U253._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U274._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U295._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U316._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U337._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U358._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U379._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U400._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U484._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U485._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U486._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U421._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U442._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U487._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U488._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U489._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U490._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U491._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U492._fU0 );
    return;
}

void sub_36806(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}


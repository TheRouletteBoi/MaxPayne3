void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    StrCopy( ref l_U39, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U47, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U56 = 0;
    l_U57 = 0;
    l_U58 = 1500;
    l_U71 = 0;
    l_U82 = 0;
    l_U83 = 0;
    l_U120 = 0;
    l_U121 = 0;
    l_U126 = 0;
    l_U951 = {64.88800000, -187.59500000, -2.89700000};
    l_U954 = 163.54600000;
    l_U956 = {64.00000000, -188.22900000, -2.85100000};
    l_U959 = {0.00000000, 0.00000000, -190.00000000};
    l_U978 = {51.94800000, -189.79700000, -1.70300000};
    l_U981 = 164.85800000;
    l_U983 = {52.10280000, -190.79840000, -1.58000000};
    l_U986 = {0.00000000, 0.00000000, -15.00000000};
    l_U990 = {51.13690000, -190.53960000, -1.58000000};
    l_U993 = {0.00000000, 0.00000000, -15.00000000};
    l_U998 = 0;
    l_U999 = 0;
    l_U1000 = 0;
    l_U1001 = 0;
    l_U1002 = 0;
    l_U1004 = {21.02940000, -259.72400000, 1.00140000};
    l_U1007 = {0, 0, 54};
    StrCopy( ref l_U1117, "07_03_FAV1_concat", 32 );
    l_U1146 = 0;
    l_U1147 = 700;
    l_U1148 = 0;
    l_U1149 = 0.25000000;
    l_U1150 = 60.00000000;
    l_U1151 = {24.12700000, -260.87000000, 0.86800000};
    l_U1154 = 50.00000000;
    l_U1155 = {25.41500000, -264.41000000, 0.02000000};
    l_U1158 = 37.52200000;
    l_U1159 = {26.91100000, -263.86800000, 0.02000000};
    l_U1162 = 31.58000000;
    l_U1163 = {22.24000000, -272.75700000, 0.07900000};
    l_U1166 = -93.23800000;
    l_U1167 = {22.20000000, -274.27000000, 0.10000000};
    l_U1170 = 180.00000000;
    l_U1171 = {21.81500000, -259.75700000, 0.97800000};
    l_U1174 = {0, 0, 0};
    l_U1177 = {22.30000000, -259.73000000, 1.38000000};
    l_U1180 = {0, 0, -179.85600000};
    l_U1183 = {20.68500000, -269.34200000, 1.01500000};
    l_U1186 = -90.00000000;
    l_U1191 = 0;
    l_U1192 = 0;
    l_U1193 = 0;
    l_U1194 = 0;
    l_U1195 = 0;
    l_U1196 = 0;
    l_U1482 = 1;
    l_U1487 = 0;
    l_U1488 = 1;
    l_U1489 = 1;
    l_U1491 = 1;
    l_U1492 = 1;
    l_U1493 = 1;
    l_U1534 = 0;
    l_U1535 = 0;
    l_U1536 = 1;
    l_U1537 = 1;
    l_U1538 = 0;
    l_U1539 = 0;
    l_U1540 = 1;
    l_U1541 = 0;
    sub_1093( "SA", "Script fav1_barFight.sc is starting...", 0 );
    l_U121 = 2;
    while (NOT IS_EXITFLAG_SET())
    {
        sub_1161();
        if (l_U120 == 0)
        {
            sub_9204();
        }
        WAIT( 0 );
    }
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_fav1_barFight" );
    sub_1093( "SA", "Script fav1_barFight.sc is terminating...", 0 );
    return;
}

void sub_1093(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_1161()
{
    if (g_U1049 == 1)
    {
        switch (l_U120)
        {
            case 0:
            if ((sub_1316()) || (IS_PED_DEAD( sub_1243() )))
            {
                l_U120 = 1;
                sub_1093( "kja", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_1811())
            {
                l_U120 = 2;
            }
            else if ((sub_1851( 0 )) == 1)
            {
                l_U120 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_1243() )))
            {
                l_U120 = 3;
                sub_1093( "kja", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            if ((IS_PLAYER_DEAD( sub_1265() )) == 0)
            {
                SET_PLAYER_CONTROL( sub_1265(), 0, 0 );
            }
            AUDIO_MUSIC_SUSPEND( 0 );
            DO_SCREEN_FADE_OUT( 0 );
            STOP_SCRIPT_STREAM( 0 );
            sub_3315();
            sub_4725();
            if (CUTSCENE_IS_LOADED( "MID_02_FAV1_SEQ" ))
            {
                CLEAR_NAMED_CUTSCENE( "MID_02_FAV1_SEQ" );
                g_U785 = 1;
            }
            l_U120 = 4;
            sub_1093( "kja", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_5030( ref l_U84, sub_1243() );
            l_U120 = 5;
            sub_1093( "kja", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            l_U121 = 2;
            g_U786 = 0;
            l_U120 = 0;
            sub_1093( "kja", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_1243()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_1265() );
    }
    return 0;
}

void sub_1265()
{
    return GET_PLAYER_ID();
}

int sub_1316()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_1243() )))
        {
            SET_PED_FORCED_TO_WALK( sub_1243(), 0 );
            SET_PLAYER_FORCED_AIM( sub_1265(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1265(), 1 );
            if ((IS_PED_VISIBLE( sub_1243() )) == 0)
            {
                SET_PED_VISIBLE( sub_1243(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_1811()
{
    return g_U648;
}

int sub_1851(int iParam0)
{
    iParam0 = 1;
    switch (l_U57)
    {
        case 0:
        if (NOT (sub_1912( ref l_U59 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1243() )))
            {
                l_U58 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_2022( ref l_U59, l_U58, 1, 1 );
            sub_2158( ref l_U59 );
        }
        if (sub_2278( ref l_U59 ))
        {
            sub_1093( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1243() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_1265() )))
            {
                SET_PLAYER_CONTROL( sub_1265(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U57 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U57 = 2;
            }
            else
            {
                l_U57 = 3;
            }
        }
        break;
        case 2:
        sub_1093( "NS", "Player will QUIT", 0 );
        sub_2765();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_1093( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_2765();
        return 1;
        break;
    }
    return 0;
}

int sub_1912(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_2022(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_2158(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_2278(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_2765()
{
    sub_1093( "NS", "P_PostFailRetryCleanup", 0 );
    sub_2815( ref l_U59 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_1265() )))
    {
        SET_PLAYER_CONTROL( sub_1265(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U56 = 0;
    l_U56 = l_U56;
    l_U57 = 0;
    return;
}

void sub_2815(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_3315()
{
    sub_1093( "SA", "P_CLEANUP_ALL_INSIDE_CLUB", 0 );
    ISEQ_UNREGISTER_ENTITY( 1955589854, "tkpstl1_enemy" );
    ISEQ_UNREGISTER_ENTITY( 1955589854, "tkpstl1_table" );
    sub_3426( 1955589854, 1 );
    ISEQ_UNREGISTER_ENTITY( -2091070501, "MAX" );
    ISEQ_UNREGISTER_ENTITY( -2091070501, "ENEMY" );
    ISEQ_UNREGISTER_ENTITY( -2091070501, "ENEMY2" );
    ISEQ_UNREGISTER_ENTITY( -2091070501, "ENEMY3" );
    ISEQ_UNREGISTER_ENTITY( -2091070501, "ENEMY5" );
    ISEQ_UNREGISTER_ENTITY( -2091070501, "STRIPPER" );
    ISEQ_UNREGISTER_ENTITY( -2091070501, "STRIPPER2" );
    ISEQ_UNREGISTER_ENTITY( -2091070501, "TABLE" );
    ISEQ_UNREGISTER_ENTITY( -2091070501, "BEERCAN" );
    sub_3426( -2091070501, 1 );
    ISEQ_UNREGISTER_ENTITY( 945701832, "tourist" );
    sub_3426( 945701832, 1 );
    ISEQ_UNREGISTER_ENTITY( -1134472698, "STRIPPER" );
    sub_3426( -1134472698, 1 );
    sub_3898( l_U1187 );
    sub_3898( l_U1188 );
    sub_3898( l_U1189 );
    sub_3898( l_U1190 );
    sub_3898( l_U1003 );
    sub_3982( ref l_U1275 );
    sub_4082( l_U1261 );
    sub_4160( ref l_U601 );
    sub_4160( ref l_U617 );
    sub_4160( ref l_U677 );
    sub_4160( ref l_U749 );
    sub_4160( ref l_U782 );
    sub_4160( ref l_U815 );
    sub_4160( ref l_U833 );
    sub_4160( ref l_U863 );
    sub_4160( ref l_U647 );
    sub_4082( l_U909 );
    sub_4082( l_U923 );
    sub_4082( l_U895 );
    sub_4160( ref l_U879 );
    SET_RAIL_RELATIVE_DIR( 0, 0.00000000 );
    sub_2815( ref l_U1383 );
    sub_2815( ref l_U1392 );
    sub_2815( ref l_U1374 );
    sub_2815( ref l_U1329 );
    sub_2815( ref l_U1347 );
    sub_2815( ref l_U1356 );
    sub_2815( ref l_U1365 );
    sub_2815( ref l_U1338 );
    sub_2815( ref l_U1401 );
    sub_2815( ref l_U1428 );
    sub_2815( ref l_U1437 );
    sub_2815( ref l_U1446 );
    sub_2815( ref l_U1455 );
    sub_2815( ref l_U1464 );
    sub_2815( ref l_U1473 );
    sub_2815( ref l_U1108 );
    sub_4486();
    sub_4620();
    sub_4015( g_U649._fU0 );
    ENABLE_STATIC_EMITTER( "S_FAV1_SE_STRIP_CLUB_MUSIC", 0 );
    return;
}

void sub_3426(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_3898(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_3982(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_4015( (uParam0^)[I] );
    }
    return;
}

void sub_4015(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_4082(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_4160(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_4082( (uParam0^)[I] );
    }
    return;
}

void sub_4486()
{
    sub_1093( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    sub_1093( "CCB", "Stopping the Favela_Bar_Fight context...", 0 );
    END_CONTEXT( "Favela_Bar_Fight" );
    return;
}

void sub_4620()
{
    END_CONTEXT( "Favela_Bar_Fight_MPM" );
    return;
}

void sub_4725()
{
    sub_2815( ref l_U1410 );
    sub_2815( ref l_U1419 );
    STOP_PARTICLE_FX_LOOPED( l_U1327 );
    ISEQ_UNREGISTER_ENTITY( -257554750, "CIV" );
    ISEQ_UNREGISTER_ENTITY( -257554750, "DOOR" );
    ISEQ_TERMINATE( -257554750 );
    ISEQ_UNREGISTER_ENTITY( 1432523160, "CIV" );
    ISEQ_TERMINATE( 1432523160 );
    sub_4082( l_U964 );
    sub_3898( l_U982 );
    sub_3898( l_U989 );
    sub_4082( l_U937 );
    sub_3898( l_U955 );
    return;
}

void sub_5030(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_1093( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_5214( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_6291( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_6583( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_6943( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_6583( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_6943( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_6583( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_6943( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_7228( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_6943( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_7228( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_6943( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_7721( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_7882( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_1243(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_1093( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_5214(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_5246( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_5246(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_6291(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_6583(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_6899( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_6899(unknown uParam0)
{
    return;
}

void sub_6943(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_7228(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_6899( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_7721(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_7882(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_5246( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_7954( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_7954(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_9204()
{
    switch (l_U121)
    {
        case 0:
        sub_1093( "SA", "eCheckpointState = CHECKPOINT_IDLE", 0 );
        break;
        case 2:
        sub_1093( "SA", "eCheckpointState = CHECKPOINT_INIT_SCRIPT_DATA", 0 );
        ENABLE_STATIC_EMITTER( "S_FAV1_SE_STRIP_CLUB_MUSIC", 0 );
        sub_9496();
        sub_11722();
        sub_16582( "SFV1AUD" );
        l_U121 = 1;
        break;
        case 1:
        sub_1093( "SA", "eCheckpointState = CHECKPOINT_LOAD_ASSETS", 0 );
        if (IS_MAGDEMO())
        {
            StrCopy( ref l_U1117, "07_03_FAV1_DEMO_concat", 32 );
        }
        if (g_U1049 == 0)
        {
            sub_16815();
            l_U121 = 3;
        }
        else
        {
            sub_17750();
            l_U121 = 4;
        }
        break;
        case 3:
        if (sub_18115())
        {
            sub_18447();
            DO_SCREEN_FADE_IN( 0 );
            SET_DISABLE_FADE( 1 );
            sub_18777();
            l_U121 = 8;
        }
        break;
        case 4:
        sub_1093( "NS", "CHECKPOINT_WAIT_FOR_GAMEPLAY_ASSETS", 0 );
        if (sub_21850())
        {
            sub_18777();
            l_U121 = 10;
        }
        break;
        case 8:
        sub_1093( "SA", "eCheckpointState = CHECKPOINT_PLAY_INTRO_CUTSCENE", 0 );
        sub_22444();
        l_U121 = 7;
        break;
        case 7:
        if ((CUTSCENE_IS_WAITING_FOR_MOVIE() == 0) || (IS_TRANSITION_MOVIE_PLAYING() == 0))
        {
            START_SEAMLESS_CUTSCENE();
            DO_SCREEN_FADE_IN( 0 );
            l_U121 = 9;
            sub_1093( "SP", "eOpeningCutsceneState = CUTSCENE_PLAYING", 0 );
        }
        break;
        case 9:
        if (HAS_CUTSCENE_FINISHED())
        {
            CLEAR_NAMED_CUTSCENE( ref l_U1117 );
            sub_4160( ref l_U601 );
            sub_4160( ref l_U617 );
            if (l_U1194 == 1)
            {
                if (l_U1192 == 0)
                {
                    sub_17750();
                    l_U1192 = 1;
                }
                if (l_U1193 == 0)
                {
                    l_U121 = 4;
                    l_U1193 = 1;
                }
            }
            if (l_U1196 == 0)
            {
                sub_23159();
                l_U1196 = 1;
            }
            sub_28493( 1 );
            l_U121 = 10;
        }
        else if ((IS_SCREEN_FADED_OUT() == 1) || (IS_SCREEN_FADING_OUT() == 1))
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
            l_U1194 = 1;
        }
        if (l_U1191 == 0)
        {
            if (GET_CUTSCENE_TIME_MS() > 15000)
            {
                if (DOES_OBJECT_EXIST( l_U1190 ))
                {
                    SET_OBJECT_VISIBLE( l_U1190, 1 );
                    l_U1191 = 1;
                }
            }
        }
        if (l_U1192 == 0)
        {
            if (GET_CUTSCENE_TIME_MS() >= 5000)
            {
                sub_17750();
                l_U1192 = 1;
            }
        }
        if (l_U1195 == 0)
        {
            if (GET_CUTSCENE_TIME_MS() >= 273000)
            {
                sub_31424();
                l_U1195 = 1;
            }
        }
        if (l_U1193 == 0)
        {
            if (l_U1192 == 1)
            {
                if (sub_21850() == 1)
                {
                    sub_1093( "NS", "Gameplay assets are loaded!!!", 0 );
                    l_U1193 = 1;
                }
            }
        }
        if (l_U1193 == 1)
        {
            if (l_U1196 == 0)
            {
                sub_23159();
                sub_28493( 0 );
                CUTSCENE_ENABLE_SKIP( 1 );
                l_U1196 = 1;
            }
        }
        break;
        case 10:
        if (l_U1196 == 0)
        {
            sub_23159();
            l_U1196 = 1;
        }
        sub_31712();
        DO_SCREEN_FADE_IN( 0 );
        SET_PLAYER_CONTROL( sub_1265(), 1, 0 );
        if ((l_U84._fU0 == 0) || (g_U1049 < 1))
        {
            g_U1049 = 1;
            sub_32701( ref l_U84, g_U1049, sub_1243(), g_U1050[1], g_U1174[1], g_U1216[1], g_U1258[1], 0 );
        }
        ENABLE_STATIC_EMITTER( "S_FAV1_SE_STRIP_CLUB_MUSIC", 1 );
        sub_36352();
        l_U121 = 11;
        break;
        case 11:
        sub_36559();
        sub_47991();
        sub_49092();
        sub_49748();
        if (l_U1540 == 1)
        {
            if (sub_50960())
            {
                l_U1540 = 0;
            }
        }
        sub_51798( sub_51666() );
        if (sub_39313( ref l_U253, 0 ))
        {
            l_U121 = 12;
        }
        break;
        case 12:
        sub_1093( "SA", "eCheckpointState = CHECKPOINT_OUTSIDE_BAR", 0 );
        sub_52220( ref g_U1391, 0 );
        sub_52220( ref g_U1398, 0 );
        l_U121 = 13;
        sub_1093( "SA", "eCheckpointState = CHECKPOINT_BAR_DOORS_CLOSED", 0 );
        break;
        case 13:
        if (((sub_52430( ref g_U1398 )) < 0.05000000) AND ((sub_52430( ref g_U1391 )) < 0.05000000))
        {
            sub_3315();
            sub_52533();
            sub_52938();
            l_U121 = 14;
            sub_1093( "SA", "eCheckpointState = CHECKPOINT_LISTEN_FOR_OUTSIDE_BAR_EVENTS", 0 );
        }
        break;
        case 14:
        if (l_U998 == 0)
        {
            if (sub_53137())
            {
                sub_53229();
                sub_53633();
                l_U998 = 1;
            }
        }
        sub_49092();
        if (sub_39313( ref l_U274, 0 ))
        {
            sub_1093( "SA", "tbPlayBirds", 0 );
            l_U1327 = START_PARTICLE_FX_LOOPED_AT_COORD( "Ambient_Birds_S", 47.70000000, -195.06000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
            l_U996 = 1;
            l_U962 = 1;
        }
        if (l_U998 == 1)
        {
            sub_54095();
            sub_54450();
        }
        if (sub_41430( l_U295 ))
        {
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1265(), 0 );
        }
        else
        {
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1265(), 1 );
        }
        if (sub_39313( ref l_U316, 0 ))
        {
            if (NOT (IS_PED_DEAD( sub_1243() )))
            {
                SET_PED_FORCED_TO_WALK( sub_1243(), 1 );
            }
            l_U121 = 15;
            sub_1093( "SA", "eCheckpointState = CHECKPOINT_UNLOAD_ASSETS", 0 );
        }
        break;
        case 15:
        sub_4725();
        sub_55309();
        g_U780 = 1;
        l_U121 = 16;
        break;
        case 16:
        sub_1093( "SA", "eCheckpointState = CHECKPOINT_FINISHED", 0 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        break;
    }
    if (l_U1489 == 1)
    {
        if (sub_55485( g_U1356 ))
        {
            l_U1489 = 0;
        }
    }
    if ((sub_39313( ref l_U421, 0 )) == 1)
    {
        l_U1535 = 1;
    }
    sub_55653();
    sub_55825();
    sub_56055();
    sub_56952();
    sub_57494();
    sub_60752();
    if (l_U1002 == 1)
    {
        sub_60997();
    }
    if ((sub_39313( ref l_U568, 0 )) == 1)
    {
        sub_61327( ref g_U879[2] );
    }
    return;
}

void sub_9496()
{
    int I;

    sub_1093( "SA", "INITIALIZE_SCRIPT_DATA", 0 );
    SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY_WINDY" );
    FREEZE_TIME_OF_DAY( 12, 0 );
    sub_2022( ref l_U1329, 2500, 1, 0 );
    sub_2022( ref l_U1338, 5000, 1, 0 );
    sub_2022( ref l_U1347, l_U1146, 1, 0 );
    sub_2022( ref l_U1356, l_U1148, 1, 0 );
    sub_2022( ref l_U1365, l_U1147, 1, 0 );
    sub_2022( ref l_U1374, GET_RANDOM_INT_IN_RANGE( 3000, 6000 ), 1, 0 );
    sub_2022( ref l_U1401, GET_RANDOM_INT_IN_RANGE( 3000, 6000 ), 1, 0 );
    sub_2022( ref l_U1383, 2500, 1, 0 );
    sub_2022( ref l_U1392, 1000, 1, 0 );
    sub_2022( ref l_U1446, 500, 1, 0 );
    sub_2022( ref l_U1455, 500, 1, 0 );
    sub_2022( ref l_U1464, 500, 1, 0 );
    sub_2022( ref l_U1473, 20000, 1, 0 );
    l_U1283[0] = {46.56000000, -267.24000000, 1.34000000};
    l_U1283[1] = {57.83000000, -256.20000000, 0.90000000};
    l_U1283[2] = {43.36000000, -250.75000000, 0.90000000};
    l_U1283[3] = {24.93000000, -281.63000000, 1.41000000};
    l_U1283[4] = {43.35000000, -250.69000000, 0.90000000};
    l_U1283[5] = {24.75000000, -277.17000000, 0.91000000};
    l_U1283[6] = {24.75000000, -277.30000000, 0.91000000};
    l_U1305[0] = {31.92210000, -263.88300000, 0.73950200};
    l_U1305[1] = {31.88000000, -267.98000000, 0.74000000};
    l_U1305[2] = {32.07930000, -272.23900000, 0.73950200};
    l_U1305[3] = {36.97670000, -265.91900000, 0.73950200};
    l_U1305[4] = {39.86340000, -265.01700000, 0.73950200};
    l_U1305[5] = {41.21000000, -268.99000000, 0.74000000};
    l_U1305[6] = {40.54204000, -264.74530000, 0.42611100};
    l_U122 = 0;
    l_U1328 = 0;
    l_U1482 = 1;
    l_U1191 = 0;
    l_U1192 = 0;
    l_U1193 = 0;
    l_U1194 = 0;
    l_U1196 = 0;
    l_U1483 = 0;
    l_U1484 = 0;
    l_U1485 = 0;
    l_U1486 = 1;
    l_U1489 = 1;
    l_U996 = 0;
    l_U997 = 0;
    l_U998 = 0;
    l_U962 = 0;
    l_U963 = 0;
    l_U1487 = 0;
    l_U1488 = 1;
    l_U1490 = 0;
    l_U1491 = 1;
    l_U1492 = 1;
    l_U1493 = 1;
    l_U1535 = 0;
    l_U1536 = 1;
    l_U1534 = 0;
    l_U1107 = 0;
    l_U1537 = 1;
    l_U1538 = 0;
    l_U999 = 0;
    l_U1000 = 0;
    l_U1001 = 0;
    l_U1002 = 0;
    l_U1197 = 0;
    l_U1198 = 0;
    l_U1199 = 0;
    l_U1200 = 0;
    l_U1539 = 0;
    l_U1540 = 1;
    l_U1541 = 0;
    for ( I = 0; I < 2; I++ )
    {
        l_U779[I] = 0;
    }
    for ( I = 0; I < 2; I++ )
    {
        l_U812[I] = 0;
    }
    for ( I = 0; I < 1; I++ )
    {
        l_U831[I] = 0;
    }
    l_U1195 = 0;
    sub_10481();
    l_U126 = 0;
    ENABLE_COVERPOINTMP3( "GenCover", "1B927B05_9EFDCF50_Popover1", 1 );
    sub_11639();
    return;
}

void sub_10481()
{
    sub_1093( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U123 = 0;
    l_U124 = 0;
    l_U125 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( -42171820 )))
    {
        sub_1093( "CCB", "Creating the SomethinForMe script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( -42171820 );
        if (SCRIPT_VAR_HASH_EXISTS( -42171820 ))
        {
            sub_1093( "CCB", "The SomethinForMe script variable was successfully created...", 0 );
        }
        else
        {
            sub_1093( "CCB", "The SomethinForMe script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
        sub_1093( "CCB", "The SomethinForMe script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( -42171820, 0 );
    }
    if (NOT (SCRIPT_VAR_HASH_EXISTS( -606560271 )))
    {
        sub_1093( "CCB", "Creating the ClearingTab script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( -606560271 );
        if (SCRIPT_VAR_HASH_EXISTS( -606560271 ))
        {
            sub_1093( "CCB", "The ClearingTab script variable was successfully created...", 0 );
        }
        else
        {
            sub_1093( "CCB", "The ClearingTab script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
        sub_1093( "CCB", "The ClearingTab script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( -606560271, 0 );
    }
    if (NOT (SCRIPT_VAR_HASH_EXISTS( -751318812 )))
    {
        sub_1093( "CCB", "Creating the BarFightComplete script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( -751318812 );
        if (SCRIPT_VAR_HASH_EXISTS( -751318812 ))
        {
            sub_1093( "CCB", "The BarFightComplete script variable was successfully created...", 0 );
        }
        else
        {
            sub_1093( "CCB", "The BarFightComplete script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
        sub_1093( "CCB", "The BarFightComplete script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( -751318812, 0 );
    }
    return;
}

void sub_11639()
{
    sub_1093( "NS", "P_RESET_MAX_CONTEXTUAL_DIALOGUE", 0 );
    l_U82 = 0;
    l_U83 = 0;
    return;
}

void sub_11722()
{
    sub_1093( "SA", "P_SETUP_STATIC_DATA", 0 );
    sub_11800( ref l_U896, 26.48000000, -270.13000000, 0.00000000, 47.30000000, -822370967, 7, 3, 2, 0, 0 );
    sub_11800( ref l_U603[0], 48.54340000, -264.60840000, 0.39081400, 8.85000000, 1407771315, 7, 3, 2, 0, 0 );
    sub_11800( ref l_U683[0], l_U1151, l_U1154, 880328027, 7, 3, 2, 0, 0 );
    sub_11800( ref l_U683[1], l_U1155, l_U1158, -1212414504, 7, 3, 2, 0, 0 );
    sub_11800( ref l_U683[2], l_U1159, l_U1162, -1964418878, 7, 3, 2, 0, 0 );
    sub_11800( ref l_U683[3], l_U1163, l_U1166, -184854396, 7, 3, 2, 0, 0 );
    sub_11800( ref l_U683[4], l_U1167, l_U1170, 1407771315, 7, 3, 2, 0, 0 );
    sub_11800( ref l_U752[0], 42.01868000, -259.81400000, 0.39081400, 175.72460000, 1505920183, 7, 3, 2, 0, 0 );
    sub_11800( ref l_U752[1], 43.76771000, -257.63250000, 0.39081400, 173.80340000, 1911586682, 7, 3, 2, 0, 0 );
    sub_11800( ref l_U785[0], 46.82000000, -258.83000000, 0.82000000, 154.30000000, -70997019, 7, 3, 2, 0, 0 );
    sub_11800( ref l_U785[1], 46.82000000, -257.78000000, 0.82000000, 177.14000000, 1578048316, 7, 3, 2, 0, 0 );
    sub_11800( ref l_U817[0], 47.94000000, -267.22000000, 0.82000000, -0.30000900, 761814022, 7, 3, 2, 0, 0 );
    sub_11800( ref l_U836[0], 49.28701000, -258.48300000, -0.01855400, 90.99000000, 938699844, 7, 3, 2, 0, 0 );
    sub_11800( ref l_U836[1], 50.37000000, -254.27000000, 0.83000000, -179.84000000, -1760832334, 7, 3, 2, 0, 0 );
    sub_11800( ref l_U865[0], 54.24000000, -249.85000000, 0.83000000, 143.56000000, -1657518015, 7, 3, 2, 0, 0 );
    sub_11800( ref l_U881[0], 46.16000000, -252.61000000, 0.83000000, 143.56000000, -1597196623, 7, 3, 2, 0, 0 );
    sub_11800( ref l_U620[0], 20.46000000, -268.45000000, 1.02000000, 142.91000000, -622819428, 5, 2, 0, 0, 0 );
    sub_11800( ref l_U620[1], 22.12000000, -264.84000000, -0.01000000, 142.91000000, 631257344, 5, 2, 0, 0, 0 );
    sub_11800( ref l_U650[0], 25.12200000, -272.25000000, 0, 65491, -622819428, 5, 2, 0, 0, 0 );
    sub_11800( ref l_U650[1], 27.94100000, -267.89500000, 0, -90.00000000, 631257344, 5, 2, 0, 0, 0 );
    sub_11800( ref l_U910, 45.61000000, -251.64000000, -0.01409500, 210.00000000, -622819428, 5, 2, 0, 0, 0 );
    sub_11800( ref l_U924, l_U1183, l_U1186, 517497816, 7, 3, 2, 0, 0 );
    sub_11800( ref l_U965, l_U978, l_U981, 1655197024, 4, 1, 0, 0, 0 );
    sub_11800( ref l_U938, l_U951, l_U954, -1737376503, 4, 1, 0, 0, 0 );
    sub_12875( ref l_U127, "FAV1_TGR_THR_REASS", 39.02000000, -267.17000000, 0.00000000, 8.00000000, 8.00000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12875( ref l_U148, "FAV1_TGR_WV_3", 39.24000000, -268.34000000, -0.11000000, 12.00000000, 11.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12875( ref l_U169, "FAV1_TGR_WV_4", 32.98000000, -268.07000000, -0.11000000, 6.00000000, 11.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12875( ref l_U190, "FAV1_TGR_WV_5", 42.45000000, -260.02000000, 0.00000000, 6.50000000, 7.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12875( ref l_U211, "FAV1_TGR_WV_6", 45.13000000, -258.05000000, 0.00000000, 4.00000000, 4.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12875( ref l_U232, "tbFav1Vig16", 50.45000000, -255.35000000, 0.00000000, 4.00000000, 4.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12875( ref l_U253, "FAV1_CLEAN_ENEMIES", 50.53000000, -239.61000000, 0.00000000, 15.00000000, 4.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12875( ref l_U274, "tbPlayBirds", 56.15000000, -236.15000000, -5.61000000, 5.00000000, 5.00000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12875( ref l_U295, "FAV1_DISABLE_SHOOTDODGE", 58.57000000, -225.45000000, -5.61000000, 15.00000000, 17.00000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12875( ref l_U316, "FAV1_TGR_KILL_BARFIGHT", 58.65000000, -215.51000000, -7.52000000, 18.00000000, 8.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12875( ref l_U337, "tbFav1MaxInBack", 51.51000000, -251.51000000, 0.00000000, 17.00000000, 17.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12875( ref l_U358, "tbFav1Backup", 49.50000000, -258.38000000, 0.00000000, 4.00000000, 4.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12875( ref l_U379, "tbBreakoutofCover", 50.61000000, -252.55000000, 0.00000000, 3.39000000, 4.14000000, 2.66000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12875( ref l_U400, "tbFav1OutsideAudioTransition", 57.73000000, -236.15000000, -5.61000000, 5.00000000, 5.00000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12875( ref l_U421, "tbDiaLeaveClub", 50.53000000, -243.00000000, 0.00000000, 15.00000000, 4.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12875( ref l_U442, "tbSexTourist", 54.03000000, -247.05000000, 0.00000000, 3.39000000, 4.14000000, 2.66000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12875( ref l_U484, "tbFav1MonoBehindBar", 22.08000000, -278.93000000, -0.11000000, 6.00000000, 7.50000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12875( ref l_U505, "tbFav1MonoOnStage", 20.07000000, -269.02000000, -0.11000000, 2.50000000, 6.50000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12875( ref l_U526, "tbFav1MonoInBathroom", 49.20000000, -266.02000000, -0.11000000, 6.00000000, 6.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12875( ref l_U463, "tbSTRIP_IMAGEFX_01", 50.61000000, -242.15700000, -2.54670000, 3.00000000, 6.00000000, 8.00000000, 0.00000000, 0.00000000, 0.31141600, 1 );
    sub_12875( ref l_U568, "TRIG_LOAD_SCRIPT_LOWERFAVELA", 51.82000000, -232.24000000, -0.32000000, 18.00000000, 12.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12875( ref l_U547, "tbAcivateWave2", 30.43000000, -264.73000000, -0.11000000, 6.00000000, 22.65000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14602( ref l_U1010, 2, 0.00000000, 0.00000000, 0.00000000, l_U1004, l_U1004, 1.50000000, 3.00000000, 1, 0 );
    sub_15452( ref l_U1010, 30, "POI_PHOTOGRAPH" );
    sub_15613( ref l_U1010, 0 );
    sub_15645( ref l_U1010, 1 );
    sub_15677( ref l_U1010, 0 );
    sub_16124( ref l_U589, "FAV1_THR_MAIN_BAR", 32.37000000, -268.02000000, -1.74000000, 22.00000000, 27.00000000, 5.00000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_16124( ref l_U590, "FAV1_THR_BACK_BAR", 49.58000000, -253.23000000, -1.74000000, 15.68000000, 20.00000000, 5.00000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_16124( ref l_U591, "FAV1_THR_FRONT_BAR", 22.08000000, -277.48000000, -1.73000000, 5.00000000, 6.00000000, 5.00000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_16124( ref l_U592, "FAV1_THR_POOL", 35.48000000, -269.29000000, -1.74000000, 12.00000000, 15.00000000, 5.00000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_16124( ref l_U593, "teStripperRoom", 47.42000000, -255.48000000, -1.74000000, 8.06000000, 9.27000000, 5.00000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_16124( ref l_U594, "teFav1BackBarCorner", 42.41000000, -259.44000000, -1.74000000, 4.09000000, 4.54000000, 5.00000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    return;
}

void sub_11800(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_12875(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_14602(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
    sub_14617( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
    sub_14985( iParam0 );
    return;
}

void sub_14617(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_14985(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_15064( iParam0 );
    return;
}

void sub_15064(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_15123( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_15123( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_15123( iParam0, 1 );
            }
            else
            {
                sub_15123( iParam0, 0 );
            };;;
        }
        else
        {
            sub_15123( iParam0, 0 );
        }
    }
    else
    {
        sub_15123( iParam0, 0 );
    }
    return;
}

void sub_15123(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_15452(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_15483( iParam0 );
    return;
}

void sub_15483(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_15613(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

void sub_15645(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

void sub_15677(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
    sub_15719( iParam0 );
    return;
}

void sub_15719(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_15780( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_15780( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_15780(int iParam0)
{
    if (((IS_PED_DEAD( sub_1243() )) == 0) AND ((IS_PLAYER_DEAD( sub_1265() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_1243() )) == 1) || (((IS_PED_GETTING_UP( sub_1243() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_1243() )) == 1) || (((IS_PED_IN_COVER( sub_1243() )) == 1) || (((IS_PED_DUCKING( sub_1243() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_1243() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_16124(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_16582(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_16602();
    return;
}

void sub_16602()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_16815()
{
    sub_1093( "SA", "P_REQUEST_ASSETS", 0 );
    sub_16860( ref l_U1117, 0 );
    sub_17114( g_U757, 0 );
    sub_17114( 544736226, 0 );
    sub_17114( 1666790652, 0 );
    sub_17114( -1747592197, 0 );
    sub_17114( 84110945, 0 );
    sub_17114( 1816820755, 0 );
    sub_17114( -1114554771, 0 );
    sub_17368( "LEVEL_S_FAV1_CP_03", 0, 0 );
    sub_17445( -2091070501, 0 );
    sub_17445( 1955589854, 0 );
    sub_17657( g_U1816, 0 );
    sub_17114( -1409914275, 0 );
    return;
}

void sub_16860(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_17114(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_6899( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_17368(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_17445(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_17657(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_17750()
{
    sub_1093( "NS", "P_REQUEST_GAMEPLAY_ASSETS()", 0 );
    sub_17114( 84110945, 0 );
    sub_17114( 622633207, 0 );
    sub_17114( 1982985106, 0 );
    sub_17114( g_U757, 0 );
    sub_17114( 544736226, 0 );
    sub_17114( 1666790652, 0 );
    sub_17114( -1747592197, 0 );
    sub_17114( 1365935825, 0 );
    sub_17114( 84110945, 0 );
    sub_17114( 1816820755, 0 );
    sub_17114( 1422427243, 0 );
    sub_17114( -1114554771, 0 );
    sub_17445( -2091070501, 0 );
    sub_17445( 945701832, 0 );
    sub_17445( -1134472698, 0 );
    sub_17445( 1955589854, 0 );
    sub_17445( 1432523160, 0 );
    sub_17445( -257554750, 0 );
    sub_17368( "EXPL_CAM", 0, 0 );
    g_U787 = 1;
    sub_17368( "LEVEL_S_FAV1_CP_03", 0, 0 );
    if (g_U1049 == 1)
    {
        LOAD_SCRIPT_STREAM( "S_FAV1_STRIP_CLUB_MPM", 0 );
    }
    return;
}

int sub_18115()
{
    if ((HAS_CUTSCENE_LOADED()) AND ((HAS_MODEL_LOADED( -1409914275 )) AND ((HAS_WEAPON_LOADED( g_U1816 )) AND (((ISEQ_GET_STATE( 1955589854 )) == 2) AND (((ISEQ_GET_STATE( -2091070501 )) == 2) AND ((HAS_ANIM_DICT_LOADED( "LEVEL_S_FAV1_CP_03", 0 )) AND (((HAS_MODEL_LOADED( 84110945 )) == 1) AND (((HAS_MODEL_LOADED( -1114554771 )) == 1) AND (((HAS_MODEL_LOADED( 1816820755 )) == 1) AND (((HAS_MODEL_LOADED( -1747592197 )) == 1) AND (((HAS_MODEL_LOADED( 1666790652 )) == 1) AND (((HAS_MODEL_LOADED( 544736226 )) == 1) AND ((HAS_MODEL_LOADED( g_U757 )) == 1)))))))))))))
    {
        sub_1093( "SA", "P_HAVE_BARFIGHT_ASSETS_LOADED - true", 0 );
        return 1;
    }
    sub_1093( "SA", "P_HAVE_BARFIGHT_ASSETS_LOADED - false", 0 );
    return 0;
}

void sub_18447()
{
    int I;

    sub_1093( "SA", "P_SETUP_BAR_ACTORS", 0 );
    for ( I = 0; I < 1; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U601[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U601[I], 1 );
        }
    }
    sub_18570( ref l_U601, "piBarActors_" );
    for ( I = 0; I < 2; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U617[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U617[I], 1 );
        }
    }
    sub_18570( ref l_U617, "piBarStrippers_" );
    return;
}

void sub_18570(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_18777()
{
    sub_1093( "SA", "P_START_GAMEPLAY", 0 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    if (NOT (IS_PED_DEAD( sub_1243() )))
    {
        FREEZE_PED_POSITION( sub_1243(), 1 );
        SET_PLAYER_CONTROL( sub_1265(), 0, 0 );
        REMOVE_ALL_PED_WEAPONS( sub_1243() );
        SET_PLAYER_SPRINT( sub_1265(), 1 );
        SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1265(), 1 );
        SET_ADRENALINE_NOT_ALLOW( 0 );
        if (GET_ADRENALINE_AMT() < 0.10000000)
        {
            SET_ADRENALINE_AMT( 0.10000000 );
        }
        SET_CAM_VIEW_MODE( 1 );
        SET_PED_CONSUMING_AMMO( sub_1243(), 0 );
        REMOVE_ALL_PED_WEAPONS( sub_1243() );
        if (g_U1049 == 0)
        {
            l_U1127 = sub_6583( sub_1243(), g_U1816, 1, 40, 0 );
        }
        else if ((sub_19026( ref l_U84 )) == 0)
        {
            if (g_U1049 == 1)
            {
                l_U1127 = sub_7228( sub_1243(), g_U1816, 40, 0, 0 );
            }
        }
        SET_PED_CONSUMING_AMMO( sub_1243(), 0 );
    }
    if (NOT (IS_PED_DEAD( sub_1243() )))
    {
        FREEZE_PED_POSITION( sub_1243(), 0 );
    }
    sub_19294( ref g_U1426, 1 );
    sub_19294( ref g_U1405, 0 );
    sub_19294( ref g_U1412, 0 );
    sub_19526( ref g_U1405, 0, 1, 0.70000000 );
    sub_19526( ref g_U1412, 1, 1, 0.50000000 );
    sub_19688();
    sub_20510();
    return;
}

int sub_19026(unknown uParam0)
{
    sub_1093( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_5030( uParam0, sub_1243() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_19294(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_19306( iParam0 )) == 0)
    {
        sub_19372( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

int sub_19306(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_19372(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_19526(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_19306( iParam0 )) == 0)
    {
        sub_19372( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

void sub_19688()
{
    sub_1093( "SA", "P_SETUP_OBJECTS", 0 );
    l_U1125 = ADD_SPATIALDATA_COVER_POINT( "Cover_Table2", 24.90000000, -267.11000000, -0.01000000, 0.66000000, -1.12000000, -0.00000000, 1.22000000, 0, 0 );
    l_U1126 = ADD_SPATIALDATA_COVER_POINT( "Cover_Table3", 26.07000000, -266.45000000, -0.01000000, 0.66000000, -1.12000000, -0.00000000, 1.22000000, 0, 0 );
    l_U1187 = sub_19894( 1816820755, 25.28000000, -268.61000000, -0.01000000, 0, 0, 30, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U1187 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1187, ref g_U1727 );
        SET_OBJECT_AS_FLIPPABLE_TABLE( l_U1187, 1 );
    }
    l_U1188 = sub_19894( 1666790652, 21.71000000, -259.76000000, 0.98000000, 0, 0, 0, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U1188 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1188, "room_bar" );
    }
    l_U1189 = sub_19894( -1747592197, 22.30000000, -259.73000000, 1.38000000, 0, 0, -179.85600000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U1189 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1189, "room_bar" );
    }
    l_U1190 = sub_19894( 544736226, 27.92500000, -258.94900000, 0.90000000, 0, 0, 0, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U1190 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1190, "room_bar" );
        SET_OBJECT_COLLISION( l_U1190, 0 );
    }
    l_U1003 = sub_19894( -1114554771, l_U1004, l_U1007, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U1003 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1003, "room_bar" );
        FREEZE_OBJECT_POSITION( l_U1003, 1 );
    }
    return;
}

void sub_19894(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_17114( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_20510()
{
    sub_1093( "SP", "P_SETUP_PLACEMENTS", 0 );
    sub_3982( ref l_U1275 );
    if (DOES_PLACEMENT_EXIST( l_U1275[0] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1275[0], ref g_U1735 );
    }
    l_U1275[1] = sub_20637( -4072149, l_U1283[1], 0.00000000, 0.00000000, 0.00000000, 0, 0, 0, 1119092736 );
    if (DOES_PLACEMENT_EXIST( l_U1275[1] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1275[1], ref g_U1743 );
    }
    if (DOES_PLACEMENT_EXIST( l_U1275[2] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1275[2], ref g_U1743 );
    }
    l_U1275[3] = sub_20637( -4072149, l_U1283[3], 0.00000000, 0.00000000, 20.00000000, 0, 0, 0, 1119092736 );
    if (DOES_PLACEMENT_EXIST( l_U1275[3] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1275[3], ref g_U1727 );
    }
    if (DOES_PLACEMENT_EXIST( l_U1275[4] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1275[4], ref g_U1743 );
    }
    l_U1275[5] = sub_20637( -4072149, l_U1283[5], 0.00000000, 0.00000000, 20.00000000, 0, 0, 0, 1119092736 );
    if (DOES_PLACEMENT_EXIST( l_U1275[5] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1275[5], ref g_U1727 );
    }
    if (DOES_PLACEMENT_EXIST( l_U1275[6] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1275[6], ref g_U1727 );
    }
    sub_21067();
    return;
}

void sub_20637(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_21067()
{
    sub_1093( "CO", "P_CREATE_S_FV1_GG_SA_01", 0 );
    sub_21180( ref g_U649, g_U757, -1247237461, 1489506373, 50.53000000, -266.00000000, 0.49000000, 1.50000000, 0.00000000, 1.00000000, "room_bathroom" );
    sub_21309( ref g_U649 );
    return;
}

void sub_21180(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_1093( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_21309(int iParam0)
{
    sub_1093( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_21370( iParam0->_fU12 )) == 1)
        {
            sub_1093( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_1093( "CO", "has never been collected.", 0 );
        }
        if ((sub_21370( iParam0->_fU12 )) == 0)
        {
            sub_4015( iParam0->_fU0 );
            iParam0->_fU0 = sub_20637( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_1093( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_1093( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_21370(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

int sub_21850()
{
    if ((HAS_ANIM_DICT_LOADED( "EXPL_CAM", 0 )) AND (((HAS_MODEL_LOADED( -1409914275 )) == 1) AND (((HAS_WEAPON_LOADED( g_U1820 )) == 1) AND (((HAS_WEAPON_LOADED( g_U1819 )) == 1) AND (((HAS_WEAPON_LOADED( g_U1818 )) == 1) AND (((HAS_WEAPON_LOADED( g_U1816 )) == 1) AND (((HAS_WEAPON_LOADED( g_U1817 )) == 1) AND (((ISEQ_GET_STATE( -257554750 )) == 2) AND (((ISEQ_GET_STATE( 1432523160 )) == 2) AND (((ISEQ_GET_STATE( 1955589854 )) == 2) AND (((ISEQ_GET_STATE( -1134472698 )) == 2) AND (((ISEQ_GET_STATE( -2091070501 )) == 2) AND ((HAS_ANIM_DICT_LOADED( "LEVEL_S_FAV1_CP_03", 0 )) AND (((HAS_MODEL_LOADED( 1365935825 )) == 1) AND (((HAS_MODEL_LOADED( 84110945 )) == 1) AND (((HAS_MODEL_LOADED( 1816820755 )) == 1) AND (((HAS_MODEL_LOADED( -1114554771 )) == 1) AND (((HAS_MODEL_LOADED( 1816820755 )) == 1) AND (((HAS_MODEL_LOADED( 1422427243 )) == 1) AND (((HAS_MODEL_LOADED( -1747592197 )) == 1) AND (((HAS_MODEL_LOADED( 1666790652 )) == 1) AND (((HAS_MODEL_LOADED( 544736226 )) == 1) AND (((HAS_MODEL_LOADED( g_U757 )) == 1) AND ((HAS_MODEL_LOADED( 1982985106 )) AND (((HAS_MODEL_LOADED( 622633207 )) == 1) AND (((HAS_MODEL_LOADED( 84110945 )) == 1) AND ((HAS_MODEL_LOADED( 1365935825 )) == 1)))))))))))))))))))))))))))
    {
        if (g_U1049 == 1)
        {
            if ((LOAD_SCRIPT_STREAM( "S_FAV1_STRIP_CLUB_MPM", 0 )) == 1)
            {
                return 1;
            }
        }
        else
        {
            return 1;
        }
    }
    return 0;
}

void sub_22444()
{
    sub_1093( "SA", "P_BEGIN_CUTSCENE", 0 );
    if (NOT (IS_PED_DEAD( l_U601[0] )))
    {
        SET_PED_VISIBLE( l_U601[0], 1 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U601[0], "M_F1_MISC_C^1", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U617[0] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U617[0], "F_F1_MISC_B^5", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U617[1] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U617[1], "F_F1_MISC_B^6", 0 );
    }
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_F1_MISC_C", -1212414504 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_F1_MISC_C^1", -1964418878 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_F1_MISC_C^2", 880328027 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "F_F1_MISC_B^5", -622819428 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "F_F1_MISC_B^6", 631257344 );
    if (NOT (IS_PED_DEAD( sub_1243() )))
    {
        CUTSCENE_REGISTER_PED_TELEPORT( sub_1243(), g_U1050[1], g_U1174[1] );
        if (GET_DOES_WEAPON_EXIST( l_U1127 ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U1127, "W_PI_Des_Aa_H", 0 );
            CUTSCENE_REGISTER_PED_WEAPON_HAND( sub_1243(), l_U1127, 0 );
        }
    }
    CUTSCENE_ENABLE_SKIP( 0 );
    CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
    return;
}

void sub_23159()
{
    int I;

    sub_1093( "SA", "P_SETUP_BAR_ENEMIES", 0 );
    sub_23202();
    sub_24133();
    l_U895 = sub_24634( ref l_U896 );
    if (NOT (IS_PED_DEAD( l_U895 )))
    {
        sub_25153( l_U895, ref l_U595 );
        SET_ROOM_FOR_PED_BY_NAME( l_U895, "room_bar" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U895, 1 );
        SET_PED_AI_TEMPLATE( l_U895, "AIT_CS_AVERAGE" );
        SET_PED_ALERTNESS( l_U895, 3 );
        if (NOT (IS_PED_DEAD( sub_1243() )))
        {
            REGISTER_TARGET( l_U895, sub_1243() );
        }
        sub_7228( l_U895, g_U1817, 25000, 0, 0 );
        sub_25725( ref l_U589, l_U895, 3 );
        if (g_U1049 == 0)
        {
            if (NOT (IS_PED_DEAD( l_U895 )))
            {
                SET_PED_FREEZE_PROCESSING( l_U895, 1 );
            }
        }
    }
    SET_PED_NAME_DEBUG( l_U895, "piTableFlipper" );
    if (NOT (IS_PED_DEAD( l_U895 )))
    {
        ISEQ_REGISTER_ENTITY( 1955589854, "tkpstl1_enemy", l_U895, 0 );
        ISEQ_REGISTER_ENTITY( 1955589854, "tkpstl1_table", l_U1187, 1 );
        CUTSCENE_REGISTER_ISEQ( 1955589854 );
    }
    for ( I = 0; I < 5; I++ )
    {
        if (I != 3)
        {
            l_U677[I] = sub_24634( ref l_U683[I] );
        }
        if (NOT (IS_PED_DEAD( l_U677[I] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U677[I], "room_bar" );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U677[I], 1 );
            SET_PED_AI_TEMPLATE( l_U677[I], "AIT_CS_AVERAGE" );
            SET_PED_AS_ONE_SHOT_KILL( l_U677[I], 1 );
            SET_PED_ALERTNESS( l_U677[I], 3 );
            sub_25153( l_U677[I], ref l_U595 );
            sub_25725( ref l_U589, l_U677[I], 3 );
            if (I == 0)
            {
                sub_7228( l_U677[I], g_U1817, 25000, 0, 0 );
            }
            else if (I == 1)
            {
                sub_7228( l_U677[I], g_U1817, 25000, 0, 0 );
            }
            else if (I == 2)
            {
                sub_7228( l_U677[I], g_U1817, 25000, 0, 0 );
            }
            else if (I == 3)
            {
                sub_7228( l_U677[I], g_U1817, 25000, 0, 0 );
            }
            else if (I == 4)
            {
                SET_PED_COMBAT_RANGE_MAX( l_U677[I], 7.00000000 );
                SET_PED_COMBAT_RANGE_MIN( l_U677[I], 4.00000000 );
                SET_PED_COMBAT_ATTRIBUTES( l_U677[I], 1, 0 );
            };;;;;
            if (g_U1049 == 0)
            {
                if (NOT (IS_PED_DEAD( l_U677[I] )))
                {
                    SET_PED_FREEZE_PROCESSING( l_U677[I], 1 );
                }
            }
        }
    }
    sub_18570( ref l_U677, "BarEnemiesWave1_" );
    for ( I = 0; I < 2; I++ )
    {
        l_U749[I] = sub_24634( ref l_U752[I] );
        if (NOT (IS_PED_DEAD( l_U749[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U749[I], 1 );
            SET_PED_AI_TEMPLATE( l_U749[I], "AIT_CS_AVERAGE" );
            sub_25153( l_U749[I], ref l_U595 );
            sub_25725( ref l_U592, l_U749[I], 1 );
            if (NOT (IS_PED_DEAD( sub_1243() )))
            {
                REGISTER_TARGET( l_U749[I], sub_1243() );
            }
            if (I == 0)
            {
                sub_7228( l_U749[I], g_U1820, 25000, 0, 0 );
                sub_6583( l_U749[I], g_U1817, 1, 25000, 0 );
            }
            else if (I == 1)
            {
                sub_7228( l_U749[I], g_U1819, 25000, 0, 0 );
                sub_6583( l_U749[I], g_U1817, 1, 25000, 0 );
            }
            if (g_U1049 == 0)
            {
                if (NOT (IS_PED_DEAD( l_U749[I] )))
                {
                    SET_PED_FREEZE_PROCESSING( l_U749[I], 1 );
                }
            }
        }
    }
    sub_18570( ref l_U749, "BarEnemiesWave2_" );
    for ( I = 0; I < 2; I++ )
    {
        if (I == 0)
        {
            l_U782[I] = sub_24634( ref l_U785[I] );
        }
        if (NOT (IS_PED_DEAD( l_U782[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U782[I], 1 );
            SET_PED_AI_TEMPLATE( l_U782[I], "AIT_CS_AVERAGE" );
            sub_25153( l_U782[I], ref l_U595 );
            sub_25725( ref l_U592, l_U782[I], 1 );
            if (NOT (IS_PED_DEAD( sub_1243() )))
            {
                REGISTER_TARGET( l_U782[I], sub_1243() );
            }
            if (I == 0)
            {
                sub_7228( l_U782[I], g_U1820, 25000, 0, 0 );
                sub_6583( l_U782[I], g_U1817, 1, 25000, 0 );
            }
            else if (I == 1)
            {
                sub_7228( l_U782[I], g_U1819, 25000, 0, 0 );
                sub_6583( l_U782[I], g_U1817, 1, 25000, 0 );
            }
            if (g_U1049 == 0)
            {
                if (NOT (IS_PED_DEAD( l_U782[I] )))
                {
                    SET_PED_FREEZE_PROCESSING( l_U782[I], 1 );
                }
            }
        }
    }
    sub_18570( ref l_U782, "BarEnemiesWave3_" );
    for ( I = 0; I < 1; I++ )
    {
        l_U815[I] = sub_24634( ref l_U817[I] );
        if (NOT (IS_PED_DEAD( l_U815[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U815[I], 1 );
            SET_PED_AI_TEMPLATE( l_U815[I], "AIT_CS_AVERAGE" );
            SET_PED_ALERTNESS( l_U815[I], 3 );
            sub_25153( l_U815[I], ref l_U595 );
            sub_25725( ref l_U592, l_U815[I], 1 );
            sub_7228( l_U815[I], g_U1819, 25000, 0, 0 );
            if (NOT (IS_PED_DEAD( sub_1243() )))
            {
                REGISTER_TARGET( l_U815[I], sub_1243() );
            }
            if (g_U1049 == 0)
            {
                if (NOT (IS_PED_DEAD( l_U815[I] )))
                {
                    SET_PED_FREEZE_PROCESSING( l_U815[I], 1 );
                }
            }
        }
    }
    sub_18570( ref l_U815, "BarEnemiesWave4_" );
    for ( I = 0; I < 2; I++ )
    {
        l_U833[I] = sub_24634( ref l_U836[I] );
        if (NOT (IS_PED_DEAD( l_U833[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U833[I], 1 );
            SET_PED_ALERTNESS( l_U833[I], 3 );
            sub_25153( l_U833[I], ref l_U595 );
            sub_7228( l_U833[I], g_U1820, 25000, 0, 0 );
            if (I == 0)
            {
                sub_25725( ref l_U594, l_U833[I], 1 );
                if (NOT (IS_PED_DEAD( sub_1243() )))
                {
                    REGISTER_TARGET( l_U833[I], sub_1243() );
                }
            }
            else
            {
                SET_PED_AI_TEMPLATE( l_U833[I], "AIT_CS_AVERAGE" );
            }
            if (g_U1049 == 0)
            {
                if (NOT (IS_PED_DEAD( l_U833[I] )))
                {
                    SET_PED_FREEZE_PROCESSING( l_U833[I], 1 );
                }
            }
        }
    }
    sub_18570( ref l_U833, "BarEnemiesWave5_" );
    for ( I = 0; I < 1; I++ )
    {
        l_U863[I] = sub_24634( ref l_U865[I] );
        if (NOT (IS_PED_DEAD( l_U863[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U863[I], 1 );
            SET_PED_AI_TEMPLATE( l_U863[I], "AIT_CS_AVERAGE" );
            sub_25153( l_U863[I], ref l_U595 );
            sub_25725( ref l_U590, l_U863[I], 3 );
            sub_7228( l_U863[I], g_U1819, 25000, 0, 0 );
            if (g_U1049 == 0)
            {
                if (NOT (IS_PED_DEAD( l_U863[I] )))
                {
                    SET_PED_FREEZE_PROCESSING( l_U863[I], 1 );
                }
            }
        }
    }
    sub_18570( ref l_U863, "BarEnemiesWave6_" );
    ISEQ_REGISTER_ENTITY( -2091070501, "MAX", sub_1243(), 0 );
    ISEQ_REGISTER_ENTITY( -2091070501, "ENEMY", l_U677[0], 0 );
    ISEQ_REGISTER_ENTITY( -2091070501, "ENEMY2", l_U677[1], 0 );
    ISEQ_REGISTER_ENTITY( -2091070501, "ENEMY3", l_U677[2], 0 );
    ISEQ_REGISTER_ENTITY( -2091070501, "ENEMY5", l_U677[4], 0 );
    ISEQ_REGISTER_ENTITY( -2091070501, "STRIPPER", l_U647[0], 0 );
    ISEQ_REGISTER_ENTITY( -2091070501, "STRIPPER2", l_U647[1], 0 );
    ISEQ_REGISTER_ENTITY( -2091070501, "TABLE", l_U1188, 1 );
    ISEQ_REGISTER_ENTITY( -2091070501, "BEERCAN", l_U1189, 1 );
    CUTSCENE_REGISTER_ISEQ( -2091070501 );
    return;
}

void sub_23202()
{
    sub_1093( "rw", "P_START_TOURIST_VIG", 0 );
    sub_11800( ref l_U1262, 53.30000000, -246.40000000, 0.02000000, 180, -207298816, 5, 2, 0, 0, 0 );
    sub_4082( l_U1261 );
    l_U1261 = sub_23298( ref l_U1262 );
    if (NOT (IS_PED_DEAD( l_U1261 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1261, 0 );
        SET_PED_AS_ONE_SHOT_KILL( l_U1261, 1 );
        SET_PED_USES_ANIMATED_DEATH( l_U1261, 1 );
        SET_PED_NAME_DEBUG( l_U1261, "piTourist" );
    }
    if ((IS_GERMAN_VERSION() == 1) || (IS_JAPANESE_GAME()))
    {
        SET_PED_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP( l_U1261, 0, 0 );
        SET_PED_GORE_FROM_PLAYER( l_U1261, 0 );
    }
    ISEQ_REGISTER_ENTITY( 945701832, "tourist", l_U1261, 0 );
    ISEQ_START( 945701832 );
    return;
}

void sub_23298(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_17114( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_23777( iParam0->_fU40 );
    sub_23857( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_23777(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_23857(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_24133()
{
    int I;

    sub_1093( "SA", "P_CREATE_CIVS", 0 );
    l_U909 = sub_23298( ref l_U910 );
    if (NOT (IS_PED_DEAD( l_U909 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U909, 1 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( l_U909, 0 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U909, 1 );
        SET_PED_AS_ONE_SHOT_KILL( l_U909, 1 );
        ISEQ_REGISTER_ENTITY( -1134472698, "STRIPPER", l_U909, 0 );
        SET_PED_NAME_DEBUG( l_U909, "piSTRIPPER" );
        if (g_U1049 == 0)
        {
            if (NOT (IS_PED_DEAD( l_U909 )))
            {
                SET_PED_FREEZE_PROCESSING( l_U909, 1 );
            }
        }
        SET_COLLISION_BETWEEN_PEDS( l_U909, 0 );
        if ((IS_GERMAN_VERSION() == 1) || (IS_JAPANESE_GAME()))
        {
            SET_PED_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP( l_U909, 0, 0 );
            SET_PED_GORE_FROM_PLAYER( l_U909, 0 );
        }
    }
    for ( I = 0; I < 2; I++ )
    {
        l_U647[I] = sub_23298( ref l_U650[I] );
        if (NOT (IS_PED_DEAD( l_U647[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U647[I], 1 );
            SET_PED_AS_ONE_SHOT_KILL( l_U647[I], 1 );
            SET_COLLISION_BETWEEN_PEDS( l_U647[I], 0 );
            if ((IS_GERMAN_VERSION() == 1) || (IS_JAPANESE_GAME()))
            {
                SET_PED_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP( l_U647[I], 0, 0 );
                SET_PED_GORE_FROM_PLAYER( l_U647[I], 0 );
            }
        }
    }
    sub_18570( ref l_U647, "piBarStrippersMain_" );
    return;
}

void sub_24634(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_17114( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    return iParam0->_fU40;
}

void sub_25153(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_6899( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_25296( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_25296( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_25296(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_25725(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_28493(boolean bParam0)
{
    int I;

    if (bParam0)
    {
        sub_1093( "SA", "P_SET_SCENE_VISIBLE: Setting scene visible", 0 );
        for ( I = 0; I < 2; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U647[I] )))
            {
                FREEZE_PED_POSITION( l_U647[I], 0 );
                SET_PED_COLLISION( l_U647[I], 1 );
                SET_PED_VISIBLE( l_U647[I], 1 );
            }
        }
        for ( I = 0; I < 5; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U677[I] )))
            {
                FREEZE_PED_POSITION( l_U677[I], 0 );
                SET_PED_COLLISION( l_U677[I], 1 );
                SET_PED_VISIBLE( l_U677[I], 1 );
                SET_PED_FREEZE_PROCESSING( l_U677[I], 0 );
                if (NOT (IS_PED_DEAD( sub_1243() )))
                {
                    REGISTER_TARGET( l_U677[I], sub_1243() );
                    CLEAR_PED_DEFAULT_AIM( l_U677[I] );
                    SET_PED_DEFAULT_AIM_AT_PED( l_U677[I], sub_1243() );
                }
            }
        }
        for ( I = 0; I < 2; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U749[I] )))
            {
                FREEZE_PED_POSITION( l_U749[I], 0 );
                SET_PED_COLLISION( l_U749[I], 1 );
                SET_PED_VISIBLE( l_U749[I], 1 );
                SET_PED_FREEZE_PROCESSING( l_U749[I], 0 );
                if (NOT (IS_PED_DEAD( sub_1243() )))
                {
                    REGISTER_TARGET( l_U749[I], sub_1243() );
                    CLEAR_PED_DEFAULT_AIM( l_U749[I] );
                    SET_PED_DEFAULT_AIM_AT_PED( l_U749[I], sub_1243() );
                }
            }
        }
        for ( I = 0; I < 2; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U782[I] )))
            {
                FREEZE_PED_POSITION( l_U782[I], 0 );
                SET_PED_COLLISION( l_U782[I], 1 );
                SET_PED_VISIBLE( l_U782[I], 1 );
                SET_PED_FREEZE_PROCESSING( l_U782[I], 0 );
                if (NOT (IS_PED_DEAD( sub_1243() )))
                {
                    REGISTER_TARGET( l_U782[I], sub_1243() );
                }
            }
        }
        for ( I = 0; I < 1; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U815[I] )))
            {
                FREEZE_PED_POSITION( l_U815[I], 0 );
                SET_PED_COLLISION( l_U815[I], 1 );
                SET_PED_VISIBLE( l_U815[I], 1 );
                SET_PED_FREEZE_PROCESSING( l_U815[I], 0 );
                if (NOT (IS_PED_DEAD( sub_1243() )))
                {
                    REGISTER_TARGET( l_U815[I], sub_1243() );
                }
            }
        }
        for ( I = 0; I < 2; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U833[I] )))
            {
                FREEZE_PED_POSITION( l_U833[I], 0 );
                SET_PED_COLLISION( l_U833[I], 1 );
                SET_PED_VISIBLE( l_U833[I], 1 );
                SET_PED_FREEZE_PROCESSING( l_U833[I], 0 );
                if (NOT (IS_PED_DEAD( sub_1243() )))
                {
                    REGISTER_TARGET( l_U833[I], sub_1243() );
                    CLEAR_PED_DEFAULT_AIM( l_U833[I] );
                    SET_PED_DEFAULT_AIM_AT_PED( l_U833[I], sub_1243() );
                }
            }
        }
        for ( I = 0; I < 1; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U863[I] )))
            {
                FREEZE_PED_POSITION( l_U863[I], 0 );
                SET_PED_COLLISION( l_U863[I], 1 );
                SET_PED_VISIBLE( l_U863[I], 1 );
                SET_PED_FREEZE_PROCESSING( l_U863[I], 0 );
                if (NOT (IS_PED_DEAD( sub_1243() )))
                {
                    REGISTER_TARGET( l_U863[I], sub_1243() );
                    CLEAR_PED_DEFAULT_AIM( l_U863[I] );
                    SET_PED_DEFAULT_AIM_AT_PED( l_U863[I], sub_1243() );
                }
            }
        }
        if (NOT (IS_PED_DEAD( l_U895 )))
        {
            FREEZE_PED_POSITION( l_U895, 0 );
            SET_PED_COLLISION( l_U895, 1 );
            SET_PED_VISIBLE( l_U895, 1 );
            SET_PED_FREEZE_PROCESSING( l_U895, 0 );
        }
        if (NOT (IS_PED_DEAD( l_U909 )))
        {
            FREEZE_PED_POSITION( l_U909, 0 );
            SET_PED_COLLISION( l_U909, 1 );
            SET_PED_VISIBLE( l_U909, 1 );
            SET_PED_FREEZE_PROCESSING( l_U909, 0 );
        }
        if (NOT (IS_PED_DEAD( l_U923 )))
        {
            FREEZE_PED_POSITION( l_U923, 0 );
            SET_PED_COLLISION( l_U923, 1 );
            SET_PED_VISIBLE( l_U923, 1 );
            SET_PED_FREEZE_PROCESSING( l_U923, 0 );
        }
        if (DOES_OBJECT_EXIST( l_U1187 ))
        {
            FREEZE_OBJECT_POSITION( l_U1187, 0 );
            SET_OBJECT_COLLISION( l_U1187, 1 );
            SET_OBJECT_VISIBLE( l_U1187, 1 );
        }
        if (DOES_OBJECT_EXIST( l_U1188 ))
        {
            FREEZE_OBJECT_POSITION( l_U1188, 0 );
            SET_OBJECT_COLLISION( l_U1188, 1 );
            SET_OBJECT_VISIBLE( l_U1188, 1 );
        }
        if (DOES_OBJECT_EXIST( l_U1189 ))
        {
            FREEZE_OBJECT_POSITION( l_U1189, 0 );
            SET_OBJECT_COLLISION( l_U1189, 1 );
            SET_OBJECT_VISIBLE( l_U1189, 1 );
        }
        if (DOES_OBJECT_EXIST( l_U1190 ))
        {
            SET_OBJECT_VISIBLE( l_U1190, 1 );
        }
    }
    else
    {
        sub_1093( "SA", "P_SET_SCENE_VISIBLE: Setting scene INvisible", 0 );
        for ( I = 0; I < 2; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U647[I] )))
            {
                FREEZE_PED_POSITION( l_U647[I], 1 );
                SET_PED_COLLISION( l_U647[I], 0 );
                SET_PED_VISIBLE( l_U647[I], 0 );
            }
        }
        for ( I = 0; I < 5; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U677[I] )))
            {
                FREEZE_PED_POSITION( l_U677[I], 1 );
                SET_PED_COLLISION( l_U677[I], 0 );
                SET_PED_VISIBLE( l_U677[I], 0 );
            }
        }
        for ( I = 0; I < 2; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U749[I] )))
            {
                FREEZE_PED_POSITION( l_U749[I], 1 );
                SET_PED_COLLISION( l_U749[I], 0 );
                SET_PED_VISIBLE( l_U749[I], 0 );
            }
        }
        for ( I = 0; I < 2; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U782[I] )))
            {
                FREEZE_PED_POSITION( l_U782[I], 1 );
                SET_PED_COLLISION( l_U782[I], 0 );
                SET_PED_VISIBLE( l_U782[I], 0 );
            }
        }
        for ( I = 0; I < 1; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U815[I] )))
            {
                FREEZE_PED_POSITION( l_U815[I], 1 );
                SET_PED_COLLISION( l_U815[I], 0 );
                SET_PED_VISIBLE( l_U815[I], 0 );
            }
        }
        for ( I = 0; I < 2; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U833[I] )))
            {
                FREEZE_PED_POSITION( l_U833[I], 1 );
                SET_PED_COLLISION( l_U833[I], 0 );
                SET_PED_VISIBLE( l_U833[I], 0 );
            }
        }
        for ( I = 0; I < 1; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U863[I] )))
            {
                FREEZE_PED_POSITION( l_U863[I], 1 );
                SET_PED_COLLISION( l_U863[I], 0 );
                SET_PED_VISIBLE( l_U863[I], 0 );
            }
        }
        if (NOT (IS_PED_DEAD( l_U895 )))
        {
            FREEZE_PED_POSITION( l_U895, 1 );
            SET_PED_COLLISION( l_U895, 0 );
            SET_PED_VISIBLE( l_U895, 0 );
        }
        if (NOT (IS_PED_DEAD( l_U909 )))
        {
            FREEZE_PED_POSITION( l_U909, 1 );
            SET_PED_COLLISION( l_U909, 0 );
            SET_PED_VISIBLE( l_U909, 0 );
        }
        if (NOT (IS_PED_DEAD( l_U923 )))
        {
            FREEZE_PED_POSITION( l_U923, 1 );
            SET_PED_COLLISION( l_U923, 0 );
            SET_PED_VISIBLE( l_U923, 0 );
        }
        if (DOES_OBJECT_EXIST( l_U1187 ))
        {
            FREEZE_OBJECT_POSITION( l_U1187, 1 );
            SET_OBJECT_COLLISION( l_U1187, 0 );
            SET_OBJECT_VISIBLE( l_U1187, 0 );
        }
        if (DOES_OBJECT_EXIST( l_U1188 ))
        {
            FREEZE_OBJECT_POSITION( l_U1188, 1 );
            SET_OBJECT_COLLISION( l_U1188, 0 );
            SET_OBJECT_VISIBLE( l_U1188, 0 );
        }
        if (DOES_OBJECT_EXIST( l_U1189 ))
        {
            FREEZE_OBJECT_POSITION( l_U1189, 1 );
            SET_OBJECT_COLLISION( l_U1189, 0 );
            SET_OBJECT_VISIBLE( l_U1189, 0 );
        }
        if (DOES_OBJECT_EXIST( l_U1190 ))
        {
            SET_OBJECT_VISIBLE( l_U1190, 0 );
        }
    }
    return;
}

void sub_31424()
{
    int I;

    sub_1093( "rw", "P_REACTIVATE_SCENE_ENEMIES", 0 );
    for ( I = 0; I < 5; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U677[I] )))
        {
            SET_PED_FREEZE_PROCESSING( l_U677[I], 0 );
        }
    }
    return;
}

void sub_31712()
{
    int I;

    sub_1093( "SA", "P_START_07_03_BLENDOUT", 0 );
    if (NOT (IS_PED_DEAD( sub_1243() )))
    {
        SET_CAMERA_OVERRIDE( "S_FAV1_STRIP_CLUB_CAM", "S_FAV1_STRIP_CLUB_CAM", 0, 1, 0 );
        SET_RAIL_RELATIVE_DIR( 5, l_U1150 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1216[1], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1258[1], 1065353216, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U923 )))
    {
        SET_PED_FREEZE_PROCESSING( l_U923, 0 );
    }
    if ((ISEQ_GET_STATE( -2091070501 )) != 3)
    {
        PLAY_SCRIPT_STREAM_FRONTEND( 0 );
        sub_31969( sub_1243(), g_U1050[1], g_U1174[1] );
        ISEQ_REGISTER_ENTITY( -2091070501, "MAX", sub_1243(), 0 );
        ISEQ_REGISTER_ENTITY( -2091070501, "ENEMY", l_U677[0], 0 );
        ISEQ_REGISTER_ENTITY( -2091070501, "ENEMY2", l_U677[1], 0 );
        ISEQ_REGISTER_ENTITY( -2091070501, "ENEMY3", l_U677[2], 0 );
        ISEQ_REGISTER_ENTITY( -2091070501, "ENEMY5", l_U677[4], 0 );
        ISEQ_REGISTER_ENTITY( -2091070501, "STRIPPER", l_U647[0], 0 );
        ISEQ_REGISTER_ENTITY( -2091070501, "STRIPPER2", l_U647[1], 0 );
        ISEQ_REGISTER_ENTITY( -2091070501, "TABLE", l_U1188, 1 );
        ISEQ_REGISTER_ENTITY( -2091070501, "BEERCAN", l_U1189, 1 );
        ISEQ_START( -2091070501 );
    }
    if ((NOT (IS_PED_DEAD( l_U677[0] ))) AND (NOT (IS_PED_DEAD( sub_1243() ))))
    {
        SET_PED_DEFAULT_AIM_AT_PED( sub_1243(), l_U677[0] );
    }
    for ( I = 0; I < 5; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U677[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U677[I], 0 );
        }
    }
    for ( I = 0; I < 2; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U647[I] )))
        {
            TASK_FOLLOW_NAV_MESH_TO_COORD( l_U647[I], 50.61000000, -246.22000000, -0.01000000, 3, 20000, 1048576000, 0, 0 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U895 )))
    {
        SET_PED_FREEZE_PROCESSING( l_U895, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U895, 0 );
    }
    sub_2158( ref l_U1347 );
    sub_2158( ref l_U1356 );
    sub_2158( ref l_U1383 );
    sub_2158( ref l_U1338 );
    return;
}

void sub_31969(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_32701(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_1093( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_1093( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_7882( iParam1 );
        sub_32960( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_33411( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_33411( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_33643( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_33411( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_33643( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_33643( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_33411( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_33643( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_33643( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_33643( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_33411( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_33643( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_33643( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_33643( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_33643( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_35201( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_1093( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_32960(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_5246( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_1093( "TEH", "Ending context", 0 );
        sub_1093( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_33411(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_33643(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_35201(int iParam0)
{
    sub_6899( "CHECKPOINT DATA" );
    sub_35240( iParam0->_fU4 );
    sub_35263( iParam0->_fU16 );
    sub_35263( iParam0->_fU20 );
    sub_35263( iParam0->_fU24 );
    sub_35306( iParam0->_fU28 );
    sub_35306( iParam0->_fU56 );
    sub_35306( iParam0->_fU60 );
    sub_35306( iParam0->_fU64 );
    sub_35306( iParam0->_fU68 );
    sub_35306( iParam0->_fU72 );
    sub_35306( iParam0->_fU76 );
    sub_35306( iParam0->_fU80 );
    sub_35306( iParam0->_fU84 );
    sub_35306( iParam0->_fU88 );
    sub_35306( iParam0->_fU92 );
    sub_35263( iParam0->_fU32 );
    sub_35306( iParam0->_fU36 );
    sub_35306( iParam0->_fU40 );
    sub_35306( iParam0->_fU44 );
    sub_35263( iParam0->_fU136 );
    sub_35511( iParam0->_fU140 );
    sub_35306( iParam0->_fU52 );
    sub_6899( "---nRightHolsterAttachmentEnabled: " );
    sub_35306( iParam0->_fU96 );
    sub_6899( "---nRightHolsterAttachmentToggled: " );
    sub_35306( iParam0->_fU100 );
    sub_6899( "---nLeftHolsterAttachmentEnabled: " );
    sub_35306( iParam0->_fU104 );
    sub_6899( "---nLeftHolsterAttachmentToggled: " );
    sub_35306( iParam0->_fU108 );
    sub_6899( "---nRifleHolsterAttachmentEnabled: " );
    sub_35306( iParam0->_fU112 );
    sub_6899( "---nRifleHolsterAttachmentToggled: " );
    sub_35306( iParam0->_fU116 );
    sub_6899( "---nRightHandAttachmentEnabled: " );
    sub_35306( iParam0->_fU120 );
    sub_6899( "---nRightHandAttachmentToggled: " );
    sub_35306( iParam0->_fU124 );
    sub_6899( "---nLeftHandAttachmentEnabled: " );
    sub_35306( iParam0->_fU128 );
    sub_6899( "---nLeftHandAttachmentToggled: " );
    sub_35306( iParam0->_fU132 );
    sub_35306( l_U1 );
    sub_35306( 144 );
    return;
}

void sub_35240(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_35263(unknown uParam0)
{
    return;
}

void sub_35306(unknown uParam0)
{
    return;
}

void sub_35511(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_36352()
{
    sub_1093( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_1093( "CCB", "Starting the Favela context...", 0 );
    START_CONTEXT( "Favela" );
    sub_1093( "CCB", "Starting the Favela_Bar_Fight context...", 0 );
    START_CONTEXT( "Favela_Bar_Fight" );
    return;
}

void sub_36559()
{
    sub_36569();
    sub_39007();
    if (l_U1491 == 1)
    {
        if (((sub_39459( ref l_U677 )) <= 1) || ((sub_39313( ref l_U547, 0 )) || (sub_2278( ref l_U1338 ))))
        {
            sub_2815( ref l_U1338 );
            sub_39556();
            l_U1491 = 0;
        }
    }
    if (l_U1492 == 1)
    {
        if ((((sub_39459( ref l_U677 )) + (sub_39459( ref l_U749 ))) <= 2) || (sub_39313( ref l_U148, 0 )))
        {
            sub_39922();
            sub_40172();
            l_U1492 = 0;
        }
    }
    if (l_U1493 == 1)
    {
        if ((((sub_40378( ref l_U677 )) + (sub_40378( ref l_U749 ))) == 7) || (sub_39313( ref l_U169, 0 )))
        {
            sub_40494();
            l_U1493 = 0;
        }
    }
    if (sub_39313( ref l_U190, 0 ))
    {
        if (NOT (IS_PED_DEAD( l_U815[0] )))
        {
            RESET_PED_TETHERING( l_U815[0] );
        }
        sub_40935( l_U833[0] );
        if (NOT (IS_PED_DEAD( l_U833[0] )))
        {
            SET_PED_FLAG_LOCK_TO_COVER( l_U833[0], 0 );
            CLEAR_PED_TASKS( l_U833[0] );
        }
        l_U1537 = 0;
        sub_41048();
        l_U1538 = 1;
    }
    if (l_U1536 == 1)
    {
        if ((sub_41430( l_U190 )) || (sub_41312()))
        {
            sub_41467();
            l_U1536 = 0;
        }
    }
    if (l_U1537 == 1)
    {
        if (NOT (IS_PED_DEAD( l_U833[0] )))
        {
            if (IS_PED_IN_COVER( l_U833[0] ))
            {
                SET_PED_FLAG_LOCK_TO_COVER( l_U833[0], 1 );
                l_U1537 = 0;
            }
        }
    }
    if (sub_39313( ref l_U211, 0 ))
    {
        sub_42029();
    }
    if (sub_39313( ref l_U358, 0 ))
    {
        sub_42177();
    }
    if (HAS_CUTSCENE_FINISHED())
    {
        sub_42426();
    }
    sub_44286();
    sub_44604();
    if ((sub_39313( ref l_U379, 0 )) == 1)
    {
        if (NOT (IS_PED_DEAD( l_U833[1] )))
        {
            SET_PED_FLAG_LOCK_TO_COVER( l_U833[1], 0 );
        }
        if ((IS_PED_DEAD( l_U863[0] )) == 0)
        {
            SET_PED_FLAG_LOCK_TO_COVER( l_U863[0], 0 );
            SET_PED_COMBAT_MOVEMENT( l_U863[0], 2 );
            SET_PED_COMBAT_RANGE_MAX( l_U863[0], 5.00000000 );
        }
    }
    if ((IS_PED_IN_SPHERE_AREA_OF_ANY_ENEMY_PEDS( sub_1243(), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1243() ), 25.00000000, 0 )) == 0)
    {
        if ((sub_45328( ref l_U1010 )) == 0)
        {
            sub_15677( ref l_U1010, 1 );
        }
    }
    if ((sub_45374( ref l_U1010 )) == 1)
    {
        sub_47535( 1, 0, 0, 1 );
        l_U126 = 1;
    }
    if ((sub_47704( ref l_U1010 )) == 1)
    {
        sub_37600( ref l_U1096 );
        sub_37754( 0, sub_1243(), "MAX", ref l_U1096, 2, 0 );
        sub_37754( 1, sub_1243(), "MAX", ref l_U1096, 2, 0 );
        sub_38008( "EXPLORE_ITEM", ref l_U1096, 8, 1 );
    }
    return;
}

void sub_36569()
{
    if (HAS_CUTSCENE_UNLOADED())
    {
        if (sub_2278( ref l_U1347 ))
        {
            ACTIVATE_BULLET_TIME( 0, l_U1149, 1 );
            SET_CROSSHAIR_PULSE();
            ENABLE_MPM( 1 );
            ENABLE_ALL_ADRENALINE( 0 );
            sub_2158( ref l_U1365 );
            sub_36651();
            if (DOES_OBJECT_EXIST( l_U1188 ))
            {
                SET_OBJECT_COLLISION( l_U1188, 0 );
            }
            if (NOT (IS_PED_DEAD( sub_1243() )))
            {
                ;
            }
        }
    }
    if (NOT (IS_PED_DEAD( l_U677[3] )))
    {
        if ((ISEQ_QUERY_ENTITY_STATE( -2091070501, "ENEMY4", 4 )) || (ISEQ_QUERY_ENTITY_STATE( -2091070501, "ENEMY4", 5 )))
        {
            TASK_COMBAT_MOVE_TO_COVER( l_U677[3], "GenCover", "1B927B05_EB738302_Corner1", sub_1243() );
        }
    }
    if (l_U1482 == 1)
    {
        if (IS_PED_DEAD( l_U677[0] ))
        {
            if (DOES_OBJECT_EXIST( l_U1188 ))
            {
                SET_OBJECT_COLLISION( l_U1188, 1 );
                l_U1482 = 0;
            }
        }
    }
    if (((IS_PED_DEAD( l_U677[2] )) AND ((IS_PED_DEAD( l_U677[1] )) AND (IS_PED_DEAD( l_U677[0] )))) || (sub_2278( ref l_U1365 )))
    {
        SET_CAMERA_OVERRIDE( "", "", 0, 1, 1 );
        DEACTIVATE_BULLET_TIME( 0, 0 );
        ENABLE_MPM( 0 );
        ENABLE_ALL_ADRENALINE( 1 );
        if (DOES_OBJECT_EXIST( l_U1188 ))
        {
            SET_OBJECT_COLLISION( l_U1188, 1 );
        }
        l_U1002 = 1;
        if (NOT (IS_PED_DEAD( sub_1243() )))
        {
            SET_PED_CONSUMING_AMMO( sub_1243(), 1 );
            REMOVE_SCRIPTED_WEAPON_MODIFIER( sub_1243(), 1857733015 );
        }
        sub_4620();
    }
    if (sub_2278( ref l_U1383 ))
    {
        if (NOT (IS_PED_DEAD( l_U677[4] )))
        {
            sub_1093( "NS", "Give bartender his weapon", 0 );
            sub_7228( l_U677[4], g_U1818, 25000, 0, 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U677[4], 0 );
            SET_PED_AS_ONE_SHOT_KILL( l_U677[4], 0 );
            sub_2158( ref l_U1392 );
        }
    }
    if (sub_2278( ref l_U1392 ))
    {
        if (NOT (IS_PED_DEAD( l_U677[4] )))
        {
            if (NOT (IS_PED_DEAD( sub_1243() )))
            {
                if (NOT (sub_37434( l_U1251 )))
                {
                    sub_37600( ref l_U1251 );
                    sub_1093( "NS", "Adding PLAYER_PED_ID ped for sssSFV1_VIG15B script speech.", 0 );
                    sub_37754( 0, sub_1243(), "MAX", ref l_U1251, 2, 0 );
                    sub_37754( 1, l_U677[4], "M7_SCB_01_LRG", ref l_U1251, 2, 0 );
                    sub_38008( "SFV1_VIG15B", ref l_U1251, 7, 1 );
                }
            }
        }
    }
    if (NOT (IS_PED_DEAD( l_U647[0] )))
    {
        if ((sub_38834( l_U647[0], 50.61000000, -246.22000000, -0.01000000 )) < 2)
        {
            sub_4082( l_U647[0] );
        }
    }
    if (NOT (IS_PED_DEAD( l_U647[1] )))
    {
        if ((sub_38834( l_U647[1], 50.61000000, -246.22000000, -0.01000000 )) < 2)
        {
            sub_4082( l_U647[1] );
        }
    }
    return;
}

void sub_36651()
{
    sub_1093( "CCB", "P_START_SP_CHALLENGES_MPM", 0 );
    sub_1093( "CCB", "Starting the Favela_Bar_Fight_MPM context...", 0 );
    START_CONTEXT( "Favela_Bar_Fight_MPM" );
    return;
}

int sub_37434(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_37447( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

boolean sub_37447(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_37600(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_37754(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_38008(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_38032( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_38032(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_38087( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_38087(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_38122( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_38616( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_38122(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_38616(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_38834(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    else
    {
        return -1.00000000;
    }
    return VDIST( uVar6, uParam1 );
}

void sub_39007()
{
    if ((ISEQ_GET_STATE( 1955589854 )) < 3)
    {
        if (NOT (IS_PED_DEAD( l_U895 )))
        {
            ISEQ_REGISTER_ENTITY( 1955589854, "tkpstl1_enemy", l_U895, 0 );
            ISEQ_REGISTER_ENTITY( 1955589854, "tkpstl1_table", l_U1187, 1 );
            ISEQ_START( 1955589854 );
            sub_2158( ref l_U1329 );
        }
    }
    if (l_U1488 == 1)
    {
        if ((l_U1329._fU16) || (sub_2278( ref l_U1329 )))
        {
            if (HAS_OBJECT_BEEN_DAMAGED( l_U1187 ))
            {
                ENABLE_COVERPOINTMP3( "GenCover", "1B927B05_9EFDCF50_Popover1", 0 );
                l_U1488 = 0;
            }
            if (DOES_OBJECT_EXIST( l_U1187 ))
            {
                FORCE_UPDATE_OBJECT_PHYSICAL_STATE( l_U1187 );
            }
        }
    }
    return;
}

void sub_39313(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_39355( sub_1243(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

int sub_39355(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_39459(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_39556()
{
    int I;

    sub_1093( "SA", "P_ENEMY_ATTACK_WAVE_2", 0 );
    for ( I = 0; I < 2; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U749[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U749[I], 0 );
            switch (I)
            {
                case 0:
                SET_PED_SUGGESTED_COVER_POINT( l_U749[I], "GenCover", "1B927B05_162BD872_Popover1" );
                TASK_COMBAT_MOVE_TO_COVER( l_U749[I], "GenCover", "1B927B05_162BD872_Popover1", 0 );
                break;
                case 1:
                TASK_ATTACK_MOVE( l_U749[I], 33.32000000, -271.60000000, 0.68000000, 1092616192, 1101004800, -1082130432, 3 );
                break;
            }
        }
    }
    return;
}

void sub_39922()
{
    int I;

    sub_1093( "SA", "P_ENEMY_ATTACK_WAVE_3", 0 );
    for ( I = 0; I < 2; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U782[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U782[I], 0 );
            switch (I)
            {
                case 0:
                if (NOT (IS_PED_DEAD( sub_1243() )))
                {
                    TASK_ATTACK_MOVE( l_U782[I], l_U1305[4], 1, 3, -1, 3 );
                }
                break;
                case 1:
                if (NOT (IS_PED_DEAD( sub_1243() )))
                {
                    TASK_ATTACK_MOVE( l_U782[I], l_U1305[5], 1, 3, -1, 3 );
                }
                break;
            }
        }
    }
    return;
}

void sub_40172()
{
    int I;

    sub_1093( "SA", "P_ENEMY_ATTACK_WAVE_4", 0 );
    for ( I = 0; I < 1; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U815[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U815[I], 0 );
            if (NOT (IS_PED_DEAD( sub_1243() )))
            {
                TASK_ATTACK_MOVE( l_U815[I], l_U1305[6], 1092616192, 1101004800, -1082130432, 3 );
            }
        }
    }
    return;
}

void sub_40378(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

void sub_40494()
{
    sub_1093( "NS", "P_CREATE_STRIPPER_ROOM_ENEMY", 0 );
    sub_4160( ref l_U879 );
    l_U879[0] = sub_23298( ref l_U881[0] );
    if (NOT (IS_PED_DEAD( l_U879[0] )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U879[0], 1 );
        SET_PED_AI_TEMPLATE( l_U879[0], "AIT_CS_AVERAGE" );
        SET_PED_ALERTNESS( l_U879[0], 3 );
        sub_25153( l_U879[0], ref l_U595 );
        if (NOT (IS_PED_DEAD( sub_1243() )))
        {
            REGISTER_TARGET( l_U879[0], sub_1243() );
        }
    }
    sub_25725( ref l_U593, l_U879[0], 1 );
    sub_7228( l_U879[0], g_U1819, 25000, 0, 0 );
    sub_40765( l_U879[0] );
    return;
}

void sub_40765(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_40935(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        RESET_PED_TETHERING( uParam0 );
    }
    return;
}

void sub_41048()
{
    sub_1093( "NS", "P_ACTION_STRIPPER_ROOM_ENEMY", 0 );
    sub_41108( l_U879[0] );
    if (NOT (IS_PED_DEAD( sub_1243() )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U879[0], 0 );
        TASK_ATTACK_MOVE( l_U879[0], 50.65604000, -247.75450000, 0.02333100, 1092616192, 1101004800, -1082130432, 3 );
    }
    return;
}

void sub_41108(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

int sub_41312()
{
    int iVar2;

    iVar2 += sub_39459( ref l_U677 );
    iVar2 += sub_39459( ref l_U749 );
    iVar2 += sub_39459( ref l_U782 );
    iVar2 += sub_39459( ref l_U815 );
    if (NOT (IS_PED_DEAD( l_U895 )))
    {
        iVar2++;
    }
    if (iVar2 <= 1)
    {
        return 1;
    }
    return 0;
}

void sub_41430(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_39355( sub_1243(), uParam0 );
}

void sub_41467()
{
    int I;

    sub_1093( "SA", "P_ENEMY_ATTACK_WAVE_5", 0 );
    for ( I = 0; I < 2; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U833[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U833[I], 0 );
            if (I == 0)
            {
                if (NOT (IS_PED_DEAD( sub_1243() )))
                {
                    SET_PED_SUGGESTED_COVER_POINT( l_U833[I], "GenCover", "1B927B05_B2027730_Corner2" );
                    OPEN_SEQUENCE_TASK( ref l_U1106 );
                    TASK_COMBAT_MOVE_TO_COVER( 0, "GenCover", "1B927B05_B2027730_Corner2", 0 );
                    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
                    CLOSE_SEQUENCE_TASK( l_U1106 );
                    CLEAR_PED_TASKS( l_U833[I] );
                    SET_PED_FLAG_LOCK_TO_COVER( l_U833[I], 1 );
                    TASK_PERFORM_SEQUENCE( l_U833[I], l_U1106 );
                    CLEAR_SEQUENCE_TASK( l_U1106 );
                    sub_2815( ref l_U1108 );
                    sub_2022( ref l_U1108, 20000, 1, 0 );
                    sub_2158( ref l_U1108 );
                }
            }
            else if (I == 1)
            {
                SET_PED_FLAG_LOCK_TO_COVER( l_U833[I], 1 );
                TASK_COMBAT_SNAP_TO_COVER( l_U833[I], "GenCover", "1B927B05_64ECDA1F_Corner1", sub_1243() );
            }
        }
    }
    return;
}

void sub_42029()
{
    sub_1093( "SA", "P_ENEMY_ATTACK_WAVE_5_PT2", 0 );
    if (NOT (IS_PED_DEAD( l_U833[1] )))
    {
        TASK_COMBAT_MOVE_TO_COVER( l_U833[1], "GenCover", "1B927B05_40889436_Corner1", 0 );
    }
    return;
}

void sub_42177()
{
    sub_1093( "ka", "P_ENEMY_ATTACK_WAVE_6", 0 );
    if (NOT (IS_PED_DEAD( sub_1243() )))
    {
        if (NOT (IS_PED_DEAD( l_U863[0] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U863[0], 0 );
            SET_PED_SUGGESTED_COVER_POINT( l_U863[0], "GenCover", "1B927B05_200B533C_Corner2" );
            TASK_COMBAT_MOVE_TO_COVER( l_U863[0], "GenCover", "1B927B05_200B533C_Corner2", sub_1243() );
            SET_PED_FLAG_LOCK_TO_COVER( l_U863[0], 1 );
        }
    }
    return;
}

void sub_42426()
{
    unknown uVar2;

    switch (l_U122)
    {
        case 0:
        if (IS_BULLET_CAMERA_RUNNING( 0 ))
        {
            if (sub_39313( ref l_U337, 0 ))
            {
                if (NOT (IS_PED_DEAD( l_U909 )))
                {
                    sub_1093( "SA", "Triggering vig16 from bulletcam", 0 );
                    ISEQ_START( -1134472698 );
                    sub_2815( ref l_U1374 );
                    sub_37600( ref l_U1494 );
                    sub_42618( 1, l_U909, 631257344, ref l_U1494, 4, 0 );
                    sub_38008( "SFV1_VIG16AA", ref l_U1494, 2, 1 );
                    l_U122 = 1;
                }
            }
        }
        else if (sub_39313( ref l_U232, 0 ))
        {
            if (NOT (IS_PED_DEAD( l_U909 )))
            {
                sub_1093( "SA", "Triggering vig16 from trigger", 0 );
                ISEQ_START( -1134472698 );
                sub_2815( ref l_U1374 );
                sub_37600( ref l_U1494 );
                sub_42618( 1, l_U909, 631257344, ref l_U1494, 4, 0 );
                sub_38008( "SFV1_VIG16AA", ref l_U1494, 2, 1 );
                l_U122 = 1;
            }
        }
        else if (((((sub_39459( ref l_U677 )) + (sub_39459( ref l_U749 ))) + (sub_39459( ref l_U782 ))) + (sub_39459( ref l_U815 ))) < 1)
        {
            if ((NOT l_U1428._fU16) AND (NOT l_U1428._fU20))
            {
                sub_2022( ref l_U1428, GET_RANDOM_INT_IN_RANGE( 6000, 12000 ), 1, 0 );
                sub_2158( ref l_U1428 );
            }
            if (sub_2278( ref l_U1428 ))
            {
                if (NOT (IS_PED_DEAD( l_U909 )))
                {
                    sub_1093( "SA", "Starting Stripper argue", 0 );
                    sub_37600( ref l_U1494 );
                    sub_42618( 1, l_U909, 631257344, ref l_U1494, 4, 0 );
                    sub_38008( "SFV1_VIG16AD", ref l_U1494, 2, 1 );
                    sub_2022( ref l_U1437, 1000, 1, 0 );
                    sub_2158( ref l_U1437 );
                }
            }
            if (sub_2278( ref l_U1437 ))
            {
                sub_2815( ref l_U1428 );
                sub_2815( ref l_U1437 );
                if (NOT (IS_PED_DEAD( l_U863[0] )))
                {
                    sub_1093( "SA", "Starting Enemy argue", 0 );
                    sub_37600( ref l_U1504 );
                    sub_42618( 1, l_U863[0], -1657518015, ref l_U1504, 4, 0 );
                    sub_38008( "SFV1_VIG16AC", ref l_U1504, 2, 1 );
                }
            }
        };;;
        break;
        case 1:
        if (HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U909 ), 5.00000000, ref uVar2 ))
        {
            if ((GET_RANDOM_INT_IN_RANGE( 1, 10 )) < 6)
            {
                if (NOT (IS_PED_DEAD( l_U909 )))
                {
                    PED_SET_ACTION_INTENTION( l_U909, 47, 1000, 0, 0, 0 );
                }
            }
            else if (NOT (IS_PED_DEAD( l_U909 )))
            {
                PED_SET_ACTION_INTENTION( l_U909, 48, 1000, 0, 0, 0 );
            }
        }
        if (l_U1328 > 3)
        {
            l_U122 = 3;
        }
        else if ((sub_43586( sub_1243(), l_U909, 1 )) < 5)
        {
            if ((NOT l_U1374._fU16) AND (NOT l_U1374._fU20))
            {
                sub_2022( ref l_U1374, GET_RANDOM_INT_IN_RANGE( 3000, 6000 ), 1, 0 );
                sub_2158( ref l_U1374 );
            }
            if (sub_2278( ref l_U1374 ))
            {
                if (NOT (IS_PED_DEAD( l_U909 )))
                {
                    sub_2815( ref l_U1374 );
                    sub_37600( ref l_U1494 );
                    sub_37754( 0, sub_1243(), "MAX", ref l_U1494, 2, 0 );
                    sub_42618( 1, l_U909, 631257344, ref l_U1494, 4, 0 );
                    sub_38008( "SFV1_VIG16AA", ref l_U1494, 2, 1 );
                    l_U1328++;
                }
            }
        }
        if (IS_PED_DEAD( l_U909 ))
        {
            l_U122 = 4;
        }
        break;
        case 3:
        if ((NOT l_U1401._fU16) AND (NOT l_U1401._fU20))
        {
            sub_2022( ref l_U1401, GET_RANDOM_INT_IN_RANGE( 3000, 6000 ), 1, 0 );
            sub_2158( ref l_U1401 );
        }
        if (sub_2278( ref l_U1401 ))
        {
            sub_2815( ref l_U1401 );
            if (NOT (IS_PED_DEAD( l_U909 )))
            {
                sub_1093( "SA", "Stripper crying", 0 );
                sub_44072( ref l_U1494, 0 );
                sub_37600( ref l_U1504 );
                sub_37754( 0, sub_1243(), "MAX", ref l_U1504, 2, 0 );
                sub_42618( 1, l_U909, 631257344, ref l_U1504, 4, 0 );
                sub_38008( "SFV1_VIG16AB", ref l_U1504, 2, 1 );
            }
        }
        if (IS_PED_DEAD( l_U909 ))
        {
            l_U122 = 4;
        }
        break;
        case 4: break;
    }
    return;
}

void sub_42618(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = uParam2;
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_43586(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    }
    if (bParam2)
    {
        return VDIST( uVar5, uVar8 );
        break;
    }
    return VDIST( uVar5._fU0, uVar5._fU4, 0, uVar8._fU0, uVar8._fU4, 0 );
}

void sub_44072(int iParam0, unknown uParam1)
{
    if (NOT (sub_37447( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

void sub_44286()
{
    if (l_U1485 == 0)
    {
        if ((HAS_OBJECT_BEEN_DAMAGED( l_U1187 )) == 1)
        {
            sub_1093( "ka", "Table damaged - no longer valid cover for enemies", 0 );
            if (DOES_SPATIALDATA_COVER_POINT_EXIST( l_U1125 ))
            {
                REMOVE_SPATIALDATA_COVER_POINT( l_U1125 );
            }
            if (DOES_SPATIALDATA_COVER_POINT_EXIST( l_U1126 ))
            {
                REMOVE_SPATIALDATA_COVER_POINT( l_U1126 );
            }
            l_U1485 = 1;
        }
    }
    if (l_U1486 == 1)
    {
        if ((DOES_SPATIALDATA_COVER_POINT_EXIST( l_U1125 )) == 1)
        {
            sub_1093( "ka", "COVERPOINT 2 NEAR TABLE WORKS", 0 );
        }
        if ((DOES_SPATIALDATA_COVER_POINT_EXIST( l_U1126 )) == 1)
        {
            sub_1093( "ka", "COVERPOINT 3 NEAR TABLE WORKS", 0 );
        }
        l_U1486 = 0;
    }
    return;
}

void sub_44604()
{
    int I;

    for ( I = 0; I < 2; I++ )
    {
        if (NOT l_U779[I])
        {
            if (NOT (IS_PED_DEAD( l_U749[I] )))
            {
                if (sub_39355( l_U749[I], l_U127 ))
                {
                    sub_1093( "SA", "Reassigning tether for Wave 2 enemy", 0 );
                    RESET_PED_TETHERING( l_U749[I] );
                    sub_25725( ref l_U589, l_U749[I], 3 );
                    l_U779[I] = 1;
                }
            }
        }
    }
    for ( I = 0; I < 2; I++ )
    {
        if (NOT l_U812[I])
        {
            if (NOT (IS_PED_DEAD( l_U782[I] )))
            {
                if (sub_39355( l_U782[I], l_U127 ))
                {
                    sub_1093( "SA", "Reassigning tether for Wave 3 enemy", 0 );
                    RESET_PED_TETHERING( l_U782[I] );
                    sub_25725( ref l_U589, l_U782[I], 3 );
                    l_U812[I] = 1;
                }
            }
        }
    }
    for ( I = 0; I < 1; I++ )
    {
        if (NOT l_U831[I])
        {
            if (NOT (IS_PED_DEAD( l_U815[I] )))
            {
                if (sub_39355( l_U815[I], l_U127 ))
                {
                    sub_1093( "SA", "Reassigning tether for Wave 4 enemy", 0 );
                    RESET_PED_TETHERING( l_U815[I] );
                    sub_25725( ref l_U589, l_U815[I], 3 );
                    l_U831[I] = 1;
                }
            }
        }
    }
    return;
}

void sub_45328(int iParam0)
{
    return iParam0->_fU56;
}

int sub_45374(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_1243() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1243() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_39355( sub_1243(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_39355( sub_1243(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_15719( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_15780( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_46256() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_46333( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_15123( iParam0, 0 );
                            sub_46404( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_15123( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_1243() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_1243(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_15123( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_46404( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_1243() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_1243(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_1243() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_1243(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_1243() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_1243(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_15123( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_46404( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_1243() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_1243() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_1243() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_1243(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_46404( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

int sub_46256()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

void sub_46333(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_15123( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_15123( iParam0, 0 );
        sub_46404( iParam0, 0 );
        if ((IS_PED_DEAD( sub_1243() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_1243() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_1243(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_46404(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_15719( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_47535(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_1243() )))
        {
            SET_PLAYER_CONTROL( sub_1265(), 0, uParam2 );
            SET_PED_DUCKING( sub_1243(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_1243() );
            }
            SET_PED_INVINCIBLE( sub_1243(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

int sub_47704(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND ((sub_45328( iParam0 )) == 0)))
    {
        if ((sub_46256() == 1) AND (((IS_PED_RELOADING( sub_1243() )) == 0) AND (((IS_PED_GETTING_UP( sub_1243() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP( sub_1243() )) == 0) AND (((IS_PED_IN_COVER( sub_1243() )) == 0) AND (((IS_PED_DUCKING( sub_1243() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

int sub_47991()
{
    vector vVar2;
    float fVar5;

    vVar2 = {21.72000000, -260.16000000, 1.86000000};
    fVar5 = 54;
    switch (l_U126)
    {
        case 0: break;
        case 1:
        sub_1093( "SP", "eMidCondoState = MIDSCENE_SETUP", 0 );
        sub_47535( 1, 0, 0, 1 );
        CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAM_GND_15_F_CAM", 1, vVar2, fVar5, 0, 3000 );
        if (((IS_PED_DEAD( sub_1243() )) == 0) AND ((IS_PLAYER_DEAD( sub_1265() )) == 0))
        {
            SET_PED_VISIBLE( sub_1243(), 0 );
            FREEZE_PED_POSITION( sub_1243(), 1 );
        }
        if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "sfav1_SrrnoPic" )))
        {
            FOUND_EXPLORATION_ITEM( "sfav1_SrrnoPic" );
            sub_1093( "CCB", "Playing SFV1_PSRNA speech.", 0 );
            sub_48329( 0 );
            sub_37600( ref l_U1514 );
            if (NOT (IS_PED_DEAD( sub_1243() )))
            {
                sub_1093( "CCB", "Adding PLAYER_PED_ID ped for sss_SFV1_PSRNA script speech.", 0 );
                sub_37754( 0, sub_1243(), "MAX", ref l_U1514, 2, 0 );
                sub_37754( 1, sub_1243(), "MAX", ref l_U1514, 2, 0 );
            }
            sub_38008( "SFV1_PSRNA", ref l_U1514, 7, 1 );
        }
        l_U126 = 3;
        sub_1093( "SP", "eMidCondoState = MIDSCENE_PLAYING", 0 );
        break;
        case 3:
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            if (CAMERA_ANIMATED_CURRENT_TIME() > 5000)
            {
                CAMERA_ANIMATED_STOP( 0, 0 );
                sub_48689( 1, 1 );
                if (((IS_PED_DEAD( sub_1243() )) == 0) AND ((IS_PLAYER_DEAD( sub_1265() )) == 0))
                {
                    SET_PED_VISIBLE( sub_1243(), 1 );
                    FREEZE_PED_POSITION( sub_1243(), 0 );
                }
                l_U126 = 0;
                sub_1093( "SP", "eMidCondoState = MIDSCENE_IDLE", 0 );
                sub_46333( ref l_U1010, 1 );
                return 1;
            }
        }
        break;
    }
    return 0;
}

void sub_48329(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

void sub_48689(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_1243() )))
    {
        SET_PLAYER_CONTROL( sub_1265(), 1, 0 );
        SET_PED_INVINCIBLE( sub_1243(), 0 );
        if (bParam0)
        {
            sub_48770();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_48770()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1243() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_1243(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_1243(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1243(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1243(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_49092()
{
    if (NOT l_U1490)
    {
        if (sub_49113() == 0)
        {
            sub_1093( "SA", "Forcing Track - FAV_ONE_1", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "FAVELA_ONE_SONG", "FAV_ONE_1", "", 0.00000000, 18000, 0, -1082130432, 0 );
            l_U1490 = 1;
        }
    }
    if (sub_39313( ref l_U400, 0 ))
    {
        sub_1093( "SA", "Forcing Track - FAV_ONE_1_2", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "FAVELA_ONE_SONG", "FAV_ONE_1_2", "", 0.00000000, 4000, 0, -1082130432, 0 );
    }
    return;
}

void sub_49113()
{
    int I;
    int Result;

    I = 0;
    Result = 0;
    for ( I = 0; I < 5; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U677[I] )))
        {
            Result++;
        }
    }
    for ( I = 0; I < 2; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U749[I] )))
        {
            Result++;
        }
    }
    for ( I = 0; I < 2; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U782[I] )))
        {
            Result++;
        }
    }
    for ( I = 0; I < 1; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U815[I] )))
        {
            Result++;
        }
    }
    for ( I = 0; I < 2; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U833[I] )))
        {
            Result++;
        }
    }
    for ( I = 0; I < 1; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U863[I] )))
        {
            Result++;
        }
    }
    for ( I = 0; I < 1; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U879[I] )))
        {
            Result++;
        }
    }
    if (NOT (IS_PED_DEAD( l_U895 )))
    {
        Result++;
    }
    return Result;
}

void sub_49748()
{
    if (sub_49113() == 0)
    {
        if (NOT l_U1198)
        {
            if (sub_41430( l_U484 ))
            {
                if (NOT l_U1446._fU20)
                {
                    sub_2158( ref l_U1446 );
                }
                else if (sub_2278( ref l_U1446 ))
                {
                    sub_49838();
                    l_U1198 = 1;
                }
            }
            else if (l_U1446._fU20)
            {
                sub_2815( ref l_U1446 );
            }
        }
        if (NOT l_U1199)
        {
            if (sub_41430( l_U505 ))
            {
                if (NOT l_U1455._fU20)
                {
                    sub_2158( ref l_U1455 );
                }
                else if (sub_2278( ref l_U1455 ))
                {
                    sub_50103();
                    l_U1199 = 1;
                }
            }
            else if (l_U1455._fU20)
            {
                sub_2815( ref l_U1455 );
            }
        }
        if (NOT l_U1200)
        {
            if (sub_41430( l_U526 ))
            {
                if (NOT l_U1464._fU20)
                {
                    sub_2158( ref l_U1464 );
                }
                else if (sub_2278( ref l_U1464 ))
                {
                    sub_50370();
                    l_U1200 = 1;
                }
            }
            else if (l_U1464._fU20)
            {
                sub_2815( ref l_U1464 );
            }
        }
        if (NOT l_U1197)
        {
            if (NOT ((l_U1464._fU20) || ((l_U1455._fU20) || (l_U1446._fU20))))
            {
                if (NOT l_U1473._fU20)
                {
                    sub_1093( "SA", "Starting tmrMonoInBar", 0 );
                    sub_2158( ref l_U1473 );
                }
                else if (sub_2278( ref l_U1473 ))
                {
                    sub_50683();
                    l_U1197 = 1;
                }
            }
            else if (l_U1473._fU20)
            {
                sub_2815( ref l_U1473 );
            }
        }
    }
    return;
}

void sub_49838()
{
    sub_1093( "SA", "P_PLAY_SFV1_MGBHB", 0 );
    if (NOT (IS_PED_DEAD( sub_1243() )))
    {
        if (NOT (IS_SCRIPTED_SPEECH_PLAYING( sub_1243() )))
        {
            sub_37600( ref l_U1201 );
            sub_37754( 0, sub_1243(), "MAX", ref l_U1201, 2, 0 );
            sub_37754( 1, sub_1243(), "MAX", ref l_U1201, 2, 0 );
            sub_38008( "SFV1_MGBHB", ref l_U1201, 2, 1 );
        }
    }
    return;
}

void sub_50103()
{
    sub_1093( "SA", "P_PLAY_SFV1_MGNSTA", 0 );
    if (NOT (IS_PED_DEAD( sub_1243() )))
    {
        if (NOT (IS_SCRIPTED_SPEECH_PLAYING( sub_1243() )))
        {
            sub_37600( ref l_U1211 );
            sub_37754( 0, sub_1243(), "MAX", ref l_U1211, 2, 0 );
            sub_37754( 1, sub_1243(), "MAX", ref l_U1211, 2, 0 );
            sub_38008( "SFV1_MGNSTA", ref l_U1211, 2, 1 );
        }
    }
    return;
}

void sub_50370()
{
    sub_1093( "SA", "P_PLAY_SFV1_MGSCB", 0 );
    if (NOT (IS_PED_DEAD( sub_1243() )))
    {
        if (NOT (IS_SCRIPTED_SPEECH_PLAYING( sub_1243() )))
        {
            sub_37600( ref l_U1221 );
            sub_37754( 0, sub_1243(), "MAX", ref l_U1221, 2, 0 );
            sub_37754( 1, sub_1243(), "MAX", ref l_U1221, 2, 0 );
            sub_38008( "SFV1_MGSCB", ref l_U1221, 2, 1 );
        }
    }
    return;
}

void sub_50683()
{
    sub_1093( "SA", "P_PLAY_SFV1_MFMLA", 0 );
    if (NOT (IS_PED_DEAD( sub_1243() )))
    {
        if (NOT sub_50742())
        {
            if (l_U1541 == 0)
            {
                sub_37600( ref l_U1231 );
                sub_37754( 0, sub_1243(), "MAX", ref l_U1231, 2, 0 );
                sub_37754( 1, sub_1243(), "MAX", ref l_U1231, 2, 0 );
                sub_38008( "SFV1_MFMLA", ref l_U1231, 2, 1 );
            }
        }
    }
    return;
}

void sub_50742()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

int sub_50960()
{
    unknown uVar2;

    sub_1093( "NS", "P_SMASH_OBJECTS()", 0 );
    if (l_U1539 == 0)
    {
        uVar2 = FIND_OBJECT_AT_POSITION( "BtlGlsBee_S2_Ab_H", 21.86998000, -275.49680000, 1.10104000, 0.10000000 );
        if (DOES_OBJECT_EXIST( uVar2 ))
        {
            DAMAGE_ALL_GROUPS_ON_OBJECT( uVar2 );
        }
    }
    else if (l_U1539 == 1)
    {
        uVar2 = FIND_OBJECT_AT_POSITION( "BtlGlsBee_S2_Ab_H", 21.80116000, -275.38410000, 1.10104000, 0.10000000 );
        if (DOES_OBJECT_EXIST( uVar2 ))
        {
            DAMAGE_ALL_GROUPS_ON_OBJECT( uVar2 );
        }
    }
    else if (l_U1539 == 2)
    {
        uVar2 = FIND_OBJECT_AT_POSITION( "P_MI_CupGls_S2_Aa_H", 21.97855000, -275.59720000, 1.10272000, 0.10000000 );
        if (DOES_OBJECT_EXIST( uVar2 ))
        {
            DAMAGE_ALL_GROUPS_ON_OBJECT( uVar2 );
        }
    }
    else if (l_U1539 == 3)
    {
        uVar2 = FIND_OBJECT_AT_POSITION( "P_MI_CupGls_S2_Aa_H", 21.88284000, -275.24170000, 1.10272000, 0.10000000 );
        if (DOES_OBJECT_EXIST( uVar2 ))
        {
            DAMAGE_ALL_GROUPS_ON_OBJECT( uVar2 );
        }
    }
    else if (l_U1539 == 4)
    {
        uVar2 = FIND_OBJECT_AT_POSITION( "BtlGlsBee_S2_Af_H", 22.08549000, -275.34340000, 1.09540000, 0.10000000 );
        if (DOES_OBJECT_EXIST( uVar2 ))
        {
            DAMAGE_ALL_GROUPS_ON_OBJECT( uVar2 );
        }
    }
    else if (l_U1539 == 5)
    {
        uVar2 = FIND_OBJECT_AT_POSITION( "BtlGlsWky_S2_Aa_H", 22.46718000, -275.25570000, 1.09587000, 0.20000000 );
        if (DOES_OBJECT_EXIST( uVar2 ))
        {
            DAMAGE_ALL_GROUPS_ON_OBJECT( uVar2 );
        }
    }
    else if (l_U1539 == 6)
    {
        uVar2 = FIND_OBJECT_AT_POSITION( "BtlGlsBee_S2_Af_H", 22.66130000, -275.18040000, 1.09809000, 0.10000000 );
        if (DOES_OBJECT_EXIST( uVar2 ))
        {
            DAMAGE_ALL_GROUPS_ON_OBJECT( uVar2 );
        }
        return 1;
    };;;;;;;
    l_U1539++;
    return 0;
}

int sub_51666()
{
    if (l_U1538 == 1)
    {
        if (NOT (IS_PED_IN_SPHERE_AREA_OF_ANY_ENEMY_PEDS( sub_1243(), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1243() ), 50.00000000, 0 )))
        {
            return 1;
        }
    }
    else if (((sub_39459( ref l_U815 )) == 0) AND (((sub_39459( ref l_U782 )) == 0) AND (((sub_39459( ref l_U749 )) == 0) AND ((sub_39459( ref l_U677 )) == 0))))
    {
        return 1;
    }
    return 0;
}

void sub_51798(int iParam0)
{
    if (l_U82 == 0)
    {
        l_U83 = GET_PAYNEKILLER_AMT();
        l_U82 = 1;
    }
    if ((IS_PED_DEAD( sub_1243() )) == 0)
    {
        if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0))
        {
            if ((TIME_SINCE_LAST_MONOLOGUE() > 5000) AND ((IS_MONOLOGUE_PLAYING() == 0) AND (sub_50742() == 0)))
            {
                if ((iParam0 == 1) AND (l_U83 < GET_PAYNEKILLER_AMT()))
                {
                    if (g_U789 < 5)
                    {
                        if (((g_U788 mod 3) == 0) || (g_U788 == 0))
                        {
                            sub_1093( "NS", "Playing Pills Monologue", 0 );
                            sub_37600( ref l_U72 );
                            sub_37754( 0, sub_1243(), "MAX", ref l_U72, 2, 0 );
                            sub_37754( 1, sub_1243(), "MAX", ref l_U72, 2, 0 );
                            sub_38008( "SFV1_MFPLS", ref l_U72, 7, 1 );
                            g_U789++;
                        }
                        g_U788++;
                    }
                }
            }
            l_U83 = GET_PAYNEKILLER_AMT();
        }
    }
    return;
}

void sub_52220(int iParam0, int iParam1)
{
    if ((sub_19306( iParam0 )) == 0)
    {
        sub_19372( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

void sub_52430(int iParam0)
{
    int iVar3;
    float Result;

    if ((sub_19306( iParam0 )) == 0)
    {
        sub_19372( iParam0 );
    }
    iVar3 = 0;
    Result = 0.00000000;
    GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar3, ref Result );
    return Result;
}

void sub_52533()
{
    sub_1093( "SA", "P_UNLOAD_ASSETS_INSIDE_CLUB", 0 );
    sub_52589( 544736226 );
    sub_52589( 1105408049 );
    sub_52589( 84110945 );
    sub_52589( -1005944799 );
    sub_52589( 780260626 );
    sub_52589( 1084029256 );
    sub_52589( 183504367 );
    sub_52589( 490877587 );
    sub_52589( 1365935825 );
    sub_52589( 1982985106 );
    sub_52589( 236403166 );
    sub_52589( 1816820755 );
    sub_52589( 1422427243 );
    sub_52589( 622633207 );
    sub_52589( 544736226 );
    sub_52886( "LEVEL_S_FAV1_CP_03" );
    sub_52886( "EXPL_CAM" );
    return;
}

void sub_52589(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_6899( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_52886(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

void sub_52938()
{
    sub_1093( "NS", "P_REQUEST_POST_BAR_ASSETS()", 0 );
    sub_17114( 2051896956, 0 );
    sub_17114( 1826773926, 0 );
    sub_17114( 1652957375, 0 );
    sub_17114( -2125109598, 0 );
    return;
}

int sub_53137()
{
    if (((HAS_MODEL_LOADED( -2125109598 )) == 1) AND (((HAS_MODEL_LOADED( 1652957375 )) == 1) AND (((HAS_MODEL_LOADED( 1826773926 )) == 1) AND ((HAS_MODEL_LOADED( 2051896956 )) == 1))))
    {
        return 1;
    }
    return 0;
}

void sub_53229()
{
    sub_1093( "SA", "P_CREATE_00A_ForthWindow", 0 );
    sub_4082( l_U964 );
    l_U964 = sub_23298( ref l_U965 );
    sub_3898( l_U982 );
    l_U982 = sub_19894( 2051896956, l_U983, l_U986, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U982 ))
    {
        FREEZE_OBJECT_POSITION( l_U982, 1 );
    }
    sub_3898( l_U989 );
    l_U989 = sub_19894( 1826773926, l_U990, l_U993, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U989 ))
    {
        FREEZE_OBJECT_POSITION( l_U989, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U964 )))
    {
        if ((IS_GERMAN_VERSION() == 1) || (IS_JAPANESE_GAME()))
        {
            SET_PED_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP( l_U964, 0, 0 );
            SET_PED_GORE_FROM_PLAYER( l_U964, 0 );
        }
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U964, 1 );
        if ((IS_PED_DEAD( sub_1243() )) == 0)
        {
            SET_PED_PRIMARY_LOOKAT( l_U964, sub_1243() );
        }
        ISEQ_REGISTER_ENTITY( 1432523160, "CIV", l_U964, 0 );
        ISEQ_START( 1432523160 );
        SET_PED_NAME_DEBUG( l_U964, "pi00AForthWindow" );
    }
    return;
}

void sub_53633()
{
    sub_1093( "SA", "P_CREATE_00A_DoorOpen", 0 );
    sub_4082( l_U937 );
    l_U937 = sub_23298( ref l_U938 );
    sub_3898( l_U955 );
    l_U955 = sub_19894( 1652957375, l_U956, l_U959, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U955 ))
    {
        FREEZE_OBJECT_POSITION( l_U955, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U937 )))
    {
        if ((IS_GERMAN_VERSION() == 1) || (IS_JAPANESE_GAME()))
        {
            SET_PED_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP( l_U937, 0, 0 );
            SET_PED_GORE_FROM_PLAYER( l_U937, 0 );
        }
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U937, 1 );
        if ((IS_PED_DEAD( sub_1243() )) == 0)
        {
            SET_PED_PRIMARY_LOOKAT( l_U937, sub_1243() );
            CLEAR_ALL_PED_PROPS( l_U937 );
            SET_PED_PROP_INDEX( l_U937, 13, 0, 0, 255 );
        }
        SET_PED_NAME_DEBUG( l_U937, "pi00ADoorOpen" );
    }
    return;
}

void sub_54095()
{
    if ((IS_PED_SHOOTING( sub_1243() )) AND (sub_41430( l_U295 )))
    {
        sub_1093( "SA", "P_HANDLE_00A_DoorOpen: Max shooting", 0 );
        l_U963 = 1;
    }
    if (sub_2278( ref l_U1419 ))
    {
        sub_1093( "SA", "P_HANDLE_00A_DoorOpen: Timer Expiry", 0 );
        l_U963 = 1;
    }
    if (l_U962 == 1)
    {
        ISEQ_REGISTER_ENTITY( -257554750, "CIV", l_U937, 0 );
        ISEQ_REGISTER_ENTITY( -257554750, "DOOR", l_U955, 1 );
        ISEQ_START( -257554750 );
        sub_2815( ref l_U1419 );
        sub_2022( ref l_U1419, 45000, 1, 0 );
        sub_2158( ref l_U1419 );
        l_U962 = 0;
    }
    if (l_U963 == 1)
    {
        if (NOT (IS_PED_DEAD( l_U937 )))
        {
            PED_SET_ACTION_INTENTION( l_U937, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
        }
        l_U963 = 0;
    }
    return;
}

void sub_54450()
{
    if ((IS_PED_SHOOTING( sub_1243() )) AND (sub_41430( l_U295 )))
    {
        sub_1093( "SA", "P_HANDLE_00A_ForthWindow: Max shooting", 0 );
        l_U997 = 1;
    }
    if (sub_2278( ref l_U1410 ))
    {
        sub_1093( "SA", "P_HANDLE_00A_ForthWindow: Timer Expiry", 0 );
        l_U997 = 1;
    }
    if (l_U996 == 1)
    {
        if (NOT (IS_PED_DEAD( l_U964 )))
        {
            PED_SET_ACTION_INTENTION( l_U964, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
            PLAY_OBJECT_ANIM( l_U982, "VIG_00A_F1_FOURTH_WINDOW_OPEN_shutr_Aa", "LEVEL_S_FAV1_CP_04", 0.00000000, 0, 1 );
            PLAY_OBJECT_ANIM( l_U989, "VIG_00A_F1_FOURTH_WINDOW_OPEN_shutr_Ab", "LEVEL_S_FAV1_CP_04", 0.00000000, 0, 1 );
        }
        sub_2815( ref l_U1410 );
        sub_2022( ref l_U1410, 30000, 1, 0 );
        sub_2158( ref l_U1410 );
        l_U996 = 0;
    }
    if (l_U997 == 1)
    {
        if (NOT (IS_PED_DEAD( l_U964 )))
        {
            PED_SET_ACTION_INTENTION( l_U964, 48, 1000, 0.00000000, 0.00000000, 0.00000000 );
            PLAY_OBJECT_ANIM( l_U982, "VIG_00A_F1_FOURTH_WINDOW_CLOSE_FRANTIC_shutr_Aa", "LEVEL_S_FAV1_CP_04", 0.00000000, 0, 1 );
            PLAY_OBJECT_ANIM( l_U989, "VIG_00A_F1_FOURTH_WINDOW_CLOSE_FRANTIC_shutr_Ab", "LEVEL_S_FAV1_CP_04", 0.00000000, 0, 1 );
        }
        l_U997 = 0;
    }
    return;
}

void sub_55309()
{
    sub_1093( "SA", "P_UNLOAD_ASSETS_OUTSIDE_CLUB", 0 );
    sub_52589( 1652957375 );
    return;
}

int sub_55485(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    unknown uVar9;

    uVar9 = DOOR_FIND_CLOSEST( uParam0._fU0, uParam0._fU4 );
    if (DOES_OBJECT_EXIST( uVar9 ))
    {
        if (DOOR_GET_IS_AFFECTED_BY_BULLETS( uVar9 ))
        {
            sub_1093( "NS", "Setting door to not react to bullets.", 0 );
            DOOR_SET_IS_AFFECTED_BY_BULLETS( uVar9, 0 );
            return 1;
        }
    }
    return 0;
}

void sub_55653()
{
    if (NOT (IS_PED_DEAD( l_U833[0] )))
    {
        if (IS_PED_IN_COVER( l_U833[0] ))
        {
            if (((sub_1912( ref l_U1108 )) == 0) || (sub_2278( ref l_U1108 )))
            {
                sub_1093( "NS", "Force Taunt", 0 );
                sub_2815( ref l_U1108 );
                sub_2022( ref l_U1108, 20000, 1, 0 );
                sub_2158( ref l_U1108 );
                PLAY_PED_AMBIENT_SPEECH( l_U833[0], "TAUNT", 1, 1, 2, 0, 30000 );
            }
        }
    }
    return;
}

void sub_55825()
{
    if (l_U1535 == 1)
    {
        if (NOT sub_50742())
        {
            sub_1093( "ka", "It was Monday afternoon, and I’d already been thrown out of a party... - SFV1_MEXSC", 0 );
            sub_37600( ref l_U1514 );
            sub_37600( ref l_U1494 );
            sub_37600( ref l_U1504 );
            sub_37600( ref l_U1524 );
            sub_37754( 1, sub_1243(), "MAX", ref l_U1524, 2, 0 );
            sub_38008( "SFV1_MEXSC", ref l_U1524, 8, 1 );
            l_U1535 = 0;
        }
    }
    return;
}

void sub_56055()
{
    switch (l_U123)
    {
        case 0:
        sub_1093( "CCB", "eYouGotSomethinForMe - STATE_CHALLENGE_IDLE", 0 );
        l_U123 = 1;
        break;
        case 1:
        if (l_U121 >= 11)
        {
            if ((IS_PED_DEAD( l_U677[2] )) AND ((IS_PED_DEAD( l_U677[1] )) AND (IS_PED_DEAD( l_U677[0] ))))
            {
                sub_1093( "CCB", "The player killed the 3 piBarEnemiesWave1 peds...", 0 );
                SCRIPT_VAR_HASH_SET_INT( -42171820, 1 );
                sub_1093( "CCB", "eYouGotSomethinForMe - STATE_CHALLENGE_COMPLETE", 0 );
                l_U123 = 2;
            }
        }
        break;
        case 2: break;
    }
    switch (l_U124)
    {
        case 0:
        sub_1093( "CCB", "eClearingTheTab - STATE_CHALLENGE_IDLE", 0 );
        l_U124 = 1;
        break;
        case 1:
        if (l_U121 >= 11)
        {
            if (NOT (IS_PED_DEAD( l_U677[4] )))
            {
                if (IS_PED_IN_MELEE_COMBAT( l_U677[4] ))
                {
                    sub_1093( "CCB", "The piBarTender ped in in melee combat...", 0 );
                    SCRIPT_VAR_HASH_SET_INT( -606560271, 1 );
                    sub_1093( "CCB", "eClearingTheTab - STATE_CHALLENGE_COMPLETE", 0 );
                    l_U124 = 2;
                }
            }
        }
        break;
        case 2: break;
    }
    switch (l_U125)
    {
        case 0:
        sub_1093( "CCB", "eBulletDodger - STATE_CHALLENGE_IDLE", 0 );
        l_U125 = 1;
        break;
        case 1:
        if (l_U121 >= 11)
        {
            if (sub_41430( l_U253 ))
            {
                sub_1093( "CCB", "The Favela bar fight is complete...", 0 );
                SCRIPT_VAR_HASH_SET_INT( -751318812, 1 );
                sub_1093( "CCB", "eBulletDodger - STATE_CHALLENGE_COMPLETE", 0 );
                l_U125 = 2;
            }
        }
        break;
        case 2: break;
    }
    return;
}

void sub_56952()
{
    unknown[15] uVar2;
    int I;
    int iVar19;

    array(ref uVar2, 15);
    I = 0;
    iVar19 = 0;
    for ( I = 0; I < 5; I++ )
    {
        uVar2[iVar19] = l_U677[I];
        iVar19++;
    }
    for ( I = 0; I < 2; I++ )
    {
        uVar2[iVar19] = l_U749[I];
        iVar19++;
    }
    for ( I = 0; I < 2; I++ )
    {
        uVar2[iVar19] = l_U782[I];
        iVar19++;
    }
    for ( I = 0; I < 1; I++ )
    {
        uVar2[iVar19] = l_U815[I];
        iVar19++;
    }
    for ( I = 0; I < 2; I++ )
    {
        uVar2[iVar19] = l_U833[I];
        iVar19++;
    }
    for ( I = 0; I < 1; I++ )
    {
        uVar2[iVar19] = l_U863[I];
        iVar19++;
    }
    for ( I = 0; I < 1; I++ )
    {
        uVar2[iVar19] = l_U879[I];
        iVar19++;
    }
    uVar2[iVar19] = l_U895;
    iVar19++;
    sub_57359( ref uVar2 );
    return;
}

void sub_57359(unknown uParam0)
{
    int I;

    if ((sub_39459( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_57494()
{
    switch (l_U1107)
    {
        case 0:
        if (NOT (IS_PED_DEAD( l_U1261 )))
        {
            if (l_U1534 == 0)
            {
                if (NOT (IS_PED_DEAD( sub_1243() )))
                {
                    if (NOT (IS_PED_IN_SPHERE_AREA_OF_ANY_ENEMY_PEDS( sub_1243(), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1243() ), 50.00000000, 0 )))
                    {
                        l_U1534 = 1;
                    }
                }
            }
            else if (NOT IS_BULLET_CAMERA_ACTIVE())
            {
                if (sub_39313( ref l_U442, 0 ))
                {
                    l_U1107 = 1;
                }
            }
        }
        break;
        case 1:
        l_U1541 = 1;
        sub_16860( "07_FAV1_RANDOM_2", 0 );
        l_U1107 = 2;
        break;
        case 2:
        if (HAS_CUTSCENE_LOADED())
        {
            sub_48329( 0 );
            sub_47535( 1, 0, 0, 1 );
            sub_57761( 0, 1 );
            if (NOT (IS_PED_DEAD( l_U1261 )))
            {
                REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1261, "SexT_dave", 0 );
            }
            if (NOT (IS_PED_DEAD( sub_1243() )))
            {
                sub_58594( ref l_U1128, 0, 1 );
                l_U1127 = GET_WEAPON_FROM_HOLSTER( sub_1243(), 1 );
                if ((GET_WEAPON_TYPE( l_U1127 )) != 1845102363)
                {
                    REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U1127, "W_PI_Clt1911_Aa_H", 0 );
                }
                else
                {
                    l_U1127 = GET_WEAPON_FROM_HOLSTER( sub_1243(), 0 );
                    if ((GET_WEAPON_TYPE( l_U1127 )) != 1845102363)
                    {
                        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U1127, "W_PI_Clt1911_Aa_H", 0 );
                    }
                }
                CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_1243(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE_BLEND_ZERO" );
                CUTSCENE_REGISTER_PED_TELEPORT( sub_1243(), 52.41983000, -249.65440000, 0.09000000, 14.62633000 );
            }
            REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U1398._fU0, g_U1398._fU4 ), "p_dr_fav1_02_l_h", 0 );
            REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U1391._fU0, g_U1391._fU4 ), "p_dr_fav1_02_r_h", 0 );
            START_SEAMLESS_CUTSCENE();
            l_U1107 = 3;
        }
        break;
        case 3:
        if ((WAS_CUTSCENE_SKIPPED() == 1) || (HAS_CUTSCENE_FINISHED()))
        {
            sub_48689( 1, 1 );
            sub_60265( l_U1128, 1 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( -18.22095000, 1065353216, 0 );
            sub_4082( l_U1261 );
            if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "sfav1_Dave1" )))
            {
                FOUND_EXPLORATION_ITEM( "sfav1_Dave1" );
            }
            HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE( sub_1243(), 0 );
            sub_48329( 0 );
            sub_37600( ref l_U1241 );
            if (NOT (IS_PED_DEAD( sub_1243() )))
            {
                sub_1093( "NS", "Adding PLAYER_PED_ID ped for sssSFV1_MXFRENCD script speech.", 0 );
                sub_37754( 0, sub_1243(), "MAX", ref l_U1241, 2, 0 );
                sub_37754( 1, sub_1243(), "MAX", ref l_U1241, 2, 0 );
            }
            sub_38008( "SFV1_MXFRENCD", ref l_U1241, 7, 1 );
            l_U1541 = 1;
            l_U1107 = 4;
        }
        break;
        case 4: break;
    }
    return;
}

void sub_57761(unknown uParam0, unknown uParam1)
{
    int iVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown Result;
    int iVar9;
    int iVar10;
    boolean bVar11;

    sub_1093( "CO", "P_Update_player_Weapon", "************" );
    iVar9 = 1;
    iVar10 = 1;
    bVar11 = false;
    if (NOT (IS_PED_DEAD( sub_1243() )))
    {
        uVar7 = GET_WEAPON_FROM_HOLSTER( sub_1243(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar7 ))
        {
            sub_1093( "CO", "I HAVE A RIFLE IN MY LEFT HAND", "************" );
            bVar11 = true;
        }
        if (NOT bVar11)
        {
            l_U69 = GET_WEAPON_FROM_HAND( sub_1243(), 0, 0 );
            l_U70 = GET_WEAPON_FROM_HAND( sub_1243(), 1, 0 );
            if (GET_DOES_WEAPON_EXIST( l_U70 ))
            {
                sub_1093( "CO", "I HAVE A LEFT", "************" );
                SELECT_WEAPON_TO_HAND( sub_1243(), 0, 1, 1 );
                bVar11 = true;
            }
            if (GET_DOES_WEAPON_EXIST( l_U69 ))
            {
                sub_1093( "CO", "I HAVE A RIGHT", "************" );
                SELECT_WEAPON_TO_HAND( sub_1243(), 0, 0, 1 );
                bVar11 = true;
            }
            uVar5 = GET_WEAPON_FROM_HOLSTER( sub_1243(), 0 );
            uVar6 = GET_WEAPON_FROM_HOLSTER( sub_1243(), 1 );
            if (GET_DOES_WEAPON_EXIST( uVar5 ))
            {
                sub_1093( "CO", "I HAVE A RIGHT HOLSTERED WEAPON", "************" );
                SELECT_WEAPON_TO_HAND( sub_1243(), uVar5, 0, uParam1 );
            }
            else if (GET_DOES_WEAPON_EXIST( uVar6 ))
            {
                sub_1093( "CO", "I HAVE A LEFT HOLSTERED WEAPON", "************" );
                SELECT_WEAPON_TO_HAND( sub_1243(), uVar6, 0, uParam1 );
            }
        }
        WAIT( 0 );
        if (NOT (IS_PED_DEAD( sub_1243() )))
        {
            Result = GET_WEAPON_FROM_HAND( sub_1243(), 0, 0 );
            if (GET_DOES_WEAPON_EXIST( Result ))
            {
                iVar4 = GET_WEAPON_AMMO_IN_CLIP( Result );
                sub_1093( "CO", "P_Update_player_Weapon : Bullet Count", ":" );
                sub_35306( iVar4 );
                if (iVar4 < 1)
                {
                    SET_WEAPON_AMMO( Result, 1 );
                }
                return Result;
            }
        }
    }
    return Result;
}

void sub_58594(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

    sub_58606( iParam0 );
    if ((IS_PED_DEAD( sub_1243() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND( sub_1243(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if ((sub_58785( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if ((sub_59013( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND( sub_1243(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER( sub_1243(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER( sub_1243(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER( sub_1243(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD( sub_1243() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND( sub_1243(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_1243(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND( sub_1243(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_1243(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD( sub_1243() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND( sub_1243(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if ((sub_59013( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND( sub_1243(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND( sub_1243(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_1243(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

void sub_58606(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

int sub_58785(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_59013(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_60265(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;

    if ((IS_PED_DEAD( sub_1243() )) == 0)
    {
        uVar21 = uParam0._fU0._fU0;
        if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
        {
            SELECT_WEAPON_TO_HAND( sub_1243(), uVar21, 0, uParam18 );
        }
        uVar22 = uParam0._fU12._fU0;
        if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
        {
            SELECT_WEAPON_TO_HAND( sub_1243(), uVar22, 1, uParam18 );
        }
        uVar23 = uParam0._fU24._fU0;
        if ((GET_DOES_WEAPON_EXIST( uVar23 )) == 1)
        {
            SELECT_WEAPON_TO_HAND( sub_1243(), uVar23, 0, uParam18 );
        }
    }
    return;
}

void sub_60752()
{
    if (sub_60772( ref l_U463, sub_1243(), 0 ))
    {
        sub_1093( "CO", "P_INITIALIZE_STRIP_IMAGEFX_01", 0 );
        PLAY_IMAGEFX( "FLASH_WHITE", 4, 0 );
        PLAY_IMAGEFX( "EXPOSURE_DARKEN_CONTRAST_01", 4, 0 );
    }
    return;
}

void sub_60772(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 = sub_39355( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

void sub_60997()
{
    if (NOT (IS_PED_DEAD( sub_1243() )))
    {
        if (l_U999 == 0)
        {
            if (((IS_PED_DEAD( l_U647[0] )) == 0) || ((IS_PED_DEAD( l_U647[0] )) == 1))
            {
                if (HAS_PED_BEEN_DAMAGED_BY_PED( l_U647[0], sub_1243(), 0 ))
                {
                    SET_ADRENALINE_AMT( 0 );
                    l_U999 = 1;
                }
            }
        }
        if (l_U1000 == 0)
        {
            if (((IS_PED_DEAD( l_U647[1] )) == 0) || ((IS_PED_DEAD( l_U647[1] )) == 1))
            {
                if (HAS_PED_BEEN_DAMAGED_BY_PED( l_U647[1], sub_1243(), 0 ))
                {
                    SET_ADRENALINE_AMT( 0 );
                    l_U1000 = 1;
                }
            }
        }
        if (l_U1001 == 0)
        {
            if (((IS_PED_DEAD( l_U909 )) == 0) || ((IS_PED_DEAD( l_U909 )) == 1))
            {
                if (HAS_PED_BEEN_DAMAGED_BY_PED( l_U909, sub_1243(), 0 ))
                {
                    SET_ADRENALINE_AMT( 0 );
                    l_U1001 = 1;
                }
            }
        }
    }
    return;
}

void sub_61327(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}


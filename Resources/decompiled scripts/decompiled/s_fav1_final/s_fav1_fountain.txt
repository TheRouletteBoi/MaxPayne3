void main()
{
    l_U0 = 1;
    l_U1 = 144;
    StrCopy( ref l_U2, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U10, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U19 = 0;
    l_U20 = 0;
    l_U21 = 1500;
    l_U32 = 0;
    l_U44 = 0;
    l_U45 = 0;
    l_U82 = 0;
    l_U83 = 0;
    l_U84 = 0;
    l_U85 = 1;
    l_U510 = {0.07300000, 0.02500000, -0.06000000};
    l_U513 = {3.14200000, 0.00000000, 0.00000000};
    l_U655 = 0;
    StrCopy( ref l_U709, "Room_fav1_cpt_a_01", 32 );
    l_U717 = 0;
    l_U718 = 1;
    l_U719 = 0;
    l_U720 = 1;
    l_U721 = 1;
    l_U722 = 1;
    l_U723 = 0;
    l_U724 = 0;
    l_U725 = 0;
    l_U727 = 0;
    l_U769 = 1500;
    l_U779 = 6000;
    l_U789 = 3000;
    l_U799 = 2500;
    l_U910 = 3000;
    l_U929 = 0;
    sub_368( "SP", "Script fav1_fountain.sc is starting...", "###" );
    g_U768 = 1;
    while (g_U768 == 1)
    {
        sub_435();
        if (l_U84 == 0)
        {
            sub_7563();
        }
        WAIT( 0 );
    }
    sub_2601();
    sub_33150();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_fav1_fountain" );
    sub_368( "SP", "Script fav1_fountain.sc is terminating...", "###" );
    return;
}

void sub_368(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_435()
{
    if (g_U1049 == 8)
    {
        switch (l_U84)
        {
            case 0:
            if ((sub_590()) || (IS_PED_DEAD( sub_517() )))
            {
                l_U84 = 1;
                sub_368( "kja", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_1085())
            {
                l_U84 = 2;
            }
            else if ((sub_1125( 0 )) == 1)
            {
                l_U84 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_517() )))
            {
                l_U84 = 3;
                sub_368( "kja", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_368( "kja", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((IS_PLAYER_DEAD( sub_539() )) == 0)
            {
                SET_PLAYER_CONTROL( sub_539(), 0, 0 );
            }
            if (IS_DEATH_PANEL_WIPE_ALLOWED() == 0)
            {
                DO_SCREEN_FADE_OUT( 0 );
            }
            sub_2601();
            l_U84 = 4;
            sub_368( "kja", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_368( "kja", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_3357( ref l_U46, sub_517() );
            l_U84 = 5;
            sub_368( "kja", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_368( "kja", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U83 = 0;
            l_U84 = 0;
            sub_368( "kja", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_517()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_539() );
    }
    return 0;
}

void sub_539()
{
    return GET_PLAYER_ID();
}

int sub_590()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_517() )))
        {
            SET_PED_FORCED_TO_WALK( sub_517(), 0 );
            SET_PLAYER_FORCED_AIM( sub_539(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_539(), 1 );
            if ((IS_PED_VISIBLE( sub_517() )) == 0)
            {
                SET_PED_VISIBLE( sub_517(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_1085()
{
    return g_U648;
}

int sub_1125(int iParam0)
{
    iParam0 = 1;
    switch (l_U20)
    {
        case 0:
        if (NOT (sub_1182( ref l_U22 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_517() )))
            {
                l_U21 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_1286( ref l_U22, l_U21, 1, 1 );
            sub_1420( ref l_U22 );
        }
        if (sub_1538( ref l_U22 ))
        {
            sub_368( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_517() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_539() )))
            {
                SET_PLAYER_CONTROL( sub_539(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U20 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U20 = 2;
            }
            else
            {
                l_U20 = 3;
            }
        }
        break;
        case 2:
        sub_368( "NS", "Player will QUIT", 0 );
        sub_2019();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_368( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_2019();
        return 1;
        break;
    }
    return 0;
}

int sub_1182(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_1286(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_1420(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_1538(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_2019()
{
    sub_368( "NS", "P_PostFailRetryCleanup", 0 );
    sub_2067( ref l_U22 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_539() )))
    {
        SET_PLAYER_CONTROL( sub_539(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U19 = 0;
    l_U19 = l_U19;
    l_U20 = 0;
    return;
}

void sub_2067(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_2601()
{
    sub_368( "SP", "P_CLEANUP_ALL", "###" );
    ISEQ_UNREGISTER_ENTITY( 1669748883, "roof" );
    ISEQ_TERMINATE( 1669748883 );
    sub_2679( l_U757 );
    sub_2679( l_U758 );
    sub_2679( l_U759 );
    sub_2747( l_U550 );
    sub_2747( l_U564 );
    sub_2747( l_U584 );
    sub_2747( l_U598 );
    sub_2747( l_U612 );
    sub_2747( l_U626 );
    sub_2747( l_U640 );
    sub_2747( l_U536 );
    sub_2747( l_U641 );
    sub_2747( l_U494 );
    sub_2915( ref l_U703 );
    sub_2978( l_U708 );
    sub_3023( 1156505411 );
    sub_2067( ref l_U737 );
    sub_2067( ref l_U728 );
    sub_2067( ref l_U760 );
    sub_2067( ref l_U770 );
    sub_2067( ref l_U780 );
    sub_2067( ref l_U790 );
    sub_2067( ref l_U746 );
    return;
}

void sub_2679(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_2747(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_2915(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_2747( (uParam0^)[I] );
    }
    return;
}

void sub_2978(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_3023(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_3146( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_3146(unknown uParam0)
{
    return;
}

void sub_3357(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_368( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_3541( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_4618( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_4910( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_5257( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_4910( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_5257( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_4910( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_5257( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_5542( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_5257( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_5542( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_5257( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_6035( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_6196( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_517(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_368( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_3541(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_3573( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_3573(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_4618(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_4910(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_3146( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_5257(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_5542(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_3146( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_6035(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_6196(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_3573( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_6268( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_6268(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_7563()
{
    switch (l_U83)
    {
        case 0:
        if (g_U1049 < 8)
        {
            sub_7656( ref g_U1636, 1, 1, 0.20000000 );
        }
        sub_7875();
        sub_8541();
        sub_13079();
        sub_13622();
        if (g_U1049 == 8)
        {
            if (NOT (IS_PED_DEAD( sub_517() )))
            {
                if (NOT (IS_PLAYER_DEAD( sub_539() )))
                {
                    SET_PLAYER_CONTROL( sub_539(), 0, 0 );
                }
                sub_13781( sub_517(), g_U1050[8], g_U1174[8] );
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1216[8], 1065353216, 0 );
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1258[8], 1065353216, 0 );
                if ((IS_PED_DEAD( sub_517() )) == 0)
                {
                    FREEZE_PED_POSITION( sub_517(), 1 );
                }
                LOAD_SCENE( g_U1050[8] );
                if ((IS_PED_DEAD( sub_517() )) == 0)
                {
                    FREEZE_PED_POSITION( sub_517(), 0 );
                }
            }
        }
        SET_WEATHER_TYPE_NOW_PERSIST( "Sunny" );
        FREEZE_TIME_OF_DAY( 12, 0 );
        l_U83 = 1;
        break;
        case 1:
        if (sub_13995())
        {
            AUDIO_MUSIC_FORCE_TRACK( "FAVELA_ONE_SONG", "FAV_ONE_1_2", "", 0.00000000, 0, 0, -1082130432, 0 );
            if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
            }
            sub_14297();
            sub_14736();
            if (l_U82 == 0)
            {
                if ((sub_18085( ref l_U46 )) == 0)
                {
                    if (g_U1048 == 8)
                    {
                        sub_5542( sub_517(), g_U1816, 200, 0, 1 );
                    }
                }
                l_U82 = 1;
            }
            l_U83 = 2;
        }
        break;
        case 2:
        if (g_U1049 == 8)
        {
            l_U83 = 3;
        }
        if (sub_18335())
        {
            l_U83 = 3;
        }
        break;
        case 3:
        l_U83 = 4;
        break;
        case 4:
        if ((l_U46._fU0 == 0) || (g_U1049 < 8))
        {
            g_U1049 = 8;
            sub_18677( ref l_U46, g_U1049, sub_517(), g_U1050[8], g_U1174[8], g_U1216[8], g_U1258[8], 1 );
        }
        l_U83 = 5;
        break;
        case 5:
        if (l_U723 == 1)
        {
            if (l_U727 == 0)
            {
                if (sub_18351( l_U317 ))
                {
                    if (sub_22342() <= 4)
                    {
                        sub_22724();
                        l_U727 = 1;
                    }
                }
            }
            else if (sub_23282( ref l_U338, 0 ))
            {
                sub_23383();
            }
        }
        if (sub_23699( ref l_U380, sub_517(), 0 ))
        {
            sub_23797();
        }
        sub_24316( ref l_U800 );
        if (sub_25055())
        {
            if (l_U723 == 0)
            {
                sub_26747();
                l_U723 = 1;
            }
        }
        if (l_U723 == 0)
        {
            if (sub_23282( ref l_U359, 0 ))
            {
                sub_368( "NS", "Acitvate enemies early", 0 );
                sub_26747();
                if (l_U724 == 0)
                {
                    sub_26379();
                    l_U724 = 1;
                }
                l_U723 = 1;
            }
        }
        if (NOT l_U726)
        {
            if ((IS_PED_DEAD( l_U494 )) || (l_U770._fU16))
            {
                sub_368( "SA", "ONESHOT", 0 );
                AUDIO_MUSIC_PLAY_ONESHOT();
                sub_368( "SA", "FAV_ONE_3_4_5_6", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "FAVELA_ONE_SONG", "FAV_ONE_3_4_5_6", "", 3.00000000, 2000, 6000, -1082130432, 0 );
                l_U726 = 1;
            }
        }
        if (l_U655 == 0)
        {
            if (sub_28272() == 1)
            {
                l_U655 = 1;
            }
        }
        if (l_U717 == 0)
        {
            if (((sub_18351( l_U128 )) == 1) || ((sub_1538( ref l_U737 )) == 1))
            {
                sub_28398();
                l_U717 = 1;
            }
        }
        if (NOT l_U756)
        {
            if (sub_29219() < 4)
            {
                sub_368( "SA", "FAV_ONE_3_5", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "FAVELA_ONE_SONG", "FAV_ONE_3_5", "", 0.00000000, 0, 12000, -1082130432, 0 );
                l_U756 = 1;
            }
        }
        if (NOT l_U755)
        {
            if (sub_29219() == 0)
            {
                sub_368( "SA", "FAV_ONE_5", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "FAVELA_ONE_SONG", "FAV_ONE_5", "", 0.00000000, 6000, 0, -1082130432, 0 );
                sub_368( "SA", "FAV1_RAND_ONESHOT", 0 );
                AUDIO_MUSIC_PLAY_ONESHOT();
                sub_2067( ref l_U746 );
                sub_1286( ref l_U746, 12000, 1, 0 );
                sub_1420( ref l_U746 );
                l_U755 = 1;
            }
        }
        if (sub_1538( ref l_U746 ))
        {
            sub_368( "SA", "AUDIO_MUSIC_SUSPEND", 0 );
            AUDIO_MUSIC_SUSPEND( 6000 );
        }
        if (l_U720 == 1)
        {
            if (NOT (IS_PED_DEAD( sub_517() )))
            {
                if (NOT (IS_PED_DEAD( l_U640 )))
                {
                    if ((sub_23282( ref l_U191, 0 )) || (HAS_PED_CLEAR_LOS_TO_PED( l_U640, sub_517() )))
                    {
                        sub_29932();
                        l_U720 = 0;
                    }
                }
            }
        }
        if (sub_23282( ref l_U170, 0 ))
        {
            sub_30071();
        }
        if (l_U718 == 1)
        {
            l_U662 = sub_30300();
            if (DOES_PED_EXIST( l_U662 ))
            {
                l_U718 = 0;
            }
        }
        if (sub_23282( ref l_U254, 0 ))
        {
            g_U769 = 1;
        }
        if (sub_23282( ref l_U296, 0 ))
        {
            sub_31094();
        }
        if (sub_23282( ref l_U275, 0 ))
        {
            sub_31223();
        }
        if (l_U722 == 1)
        {
            if (sub_22342() == 0)
            {
                sub_31223();
                l_U722 = 0;
            }
        }
        sub_31357();
        if (l_U718 == 0)
        {
            sub_31702( 1 );
        }
        break;
    }
    return;
}

void sub_7656(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_7668( iParam0 )) == 0)
    {
        sub_7734( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

int sub_7668(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_7734(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_7875()
{
    sub_368( "SP", "LOAD_ASSETS", "###" );
    sub_7921( -1947223203, 0 );
    sub_7921( 1396472798, 0 );
    sub_7921( -502497534, 0 );
    sub_7921( 508600758, 0 );
    sub_7921( 416428258, 0 );
    sub_8153( "LEVEL_S_FAV1_CP_07", 0, 1 );
    sub_8230( 1669748883, 0 );
    sub_8466( "SCRIPT_MISSION\S_FAV1_FIREWORK_LAUNCH", 0 );
    return;
}

void sub_7921(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_3146( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_8153(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_8230(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_8466(unknown uParam0, int iParam1)
{
    LOAD_SCRIPT_AUDIO_BANK( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_8541()
{
    sub_368( "SP", "P_SETUP_STATIC_DATA", "###" );
    sub_8626( ref l_U495, -65.14200000, -47.13100000, 23.46000000, -180.00000000, -485270208, 7, 3, 2, 0, 0 );
    sub_8626( ref l_U523, -62.14000000, -58.73000000, 13.84000000, 177.50000000, -2036221668, 7, 3, 2, 0, 0 );
    sub_8626( ref l_U537, -60.65000000, -52.14000000, 18.70000000, 178.76000000, -1265474502, 7, 3, 2, 0, 0 );
    sub_8626( ref l_U551, -55.81320000, -55.58808000, 14.01503000, 178.75840000, 2078165819, 7, 3, 2, 0, 0 );
    sub_8626( ref l_U571, -69.25000000, -63.75000000, 12.47000000, -81.30000000, 755150765, 7, 3, 2, 0, 0 );
    sub_8626( ref l_U585, -48.82462000, -61.74516000, 13.83007000, 180.86850000, -1927319148, 7, 3, 2, 0, 0 );
    sub_8626( ref l_U599, -55.98311000, -52.51805000, 13.83007000, 88.97557000, -739680065, 7, 3, 2, 0, 0 );
    sub_8626( ref l_U613, -70.78747000, -47.65159000, 13.63540000, 180.04260000, 431714796, 7, 3, 2, 0, 0 );
    sub_8626( ref l_U627, -68.42000000, -48.73000000, 13.77000000, -148.48000000, -612401391, 7, 3, 2, 0, 0 );
    sub_8626( ref l_U642, -60.94000000, -58.57000000, 13.91000000, -165.50000000, -485270208, 7, 3, 2, 0, 0 );
    sub_8626( ref l_U663[0], -56.32000000, -52.84000000, 18.70000000, -165.50000000, 2130003499, 7, 3, 2, 0, 0 );
    sub_8626( ref l_U663[1], -60.96986000, -57.95084000, 13.86038000, -165.50000000, 1736289771, 7, 3, 2, 0, 0 );
    sub_8626( ref l_U663[2], -69.37000000, -46.02000000, 13.79000000, -165.50000000, -321081485, 7, 3, 2, 0, 0 );
    sub_9314( ref l_U86, "TRIG_SETUP_FOUNTAIN", -49.17000000, -79.32000000, 13.78000000, 10.00000000, 7.00000000, 7.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9314( ref l_U107, "TRIG_FOUNTAIN_ACTION", -60.14000000, -72.48000000, 12.00000000, 20.00000000, 20.00000000, 5.00000000, 0.00000000, 0.00000000, 90.00000000, 1 );
    sub_9314( ref l_U128, "TRIG_FOUNTAIN_BACKUP", -55.71000000, -71.20000000, 11.33000000, 12.00000000, 4.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9314( ref l_U149, "TRIG_SETUP_COCAINE", -60.20000000, -58.78000000, 12.00000000, 25.00000000, 2.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9314( ref l_U170, "tbSurprise0", -61.89000000, -61.44000000, 12.00000000, 2.61000000, 2.78000000, 5.25000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9314( ref l_U191, "tbSurprise1", -64.79000000, -66.83000000, 11.61000000, 2.61000000, 15.04000000, 5.25000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9314( ref l_U233, "tbCleanupVig24b", -66.26000000, -45.91000000, 17.16000000, 4.00000000, 4.00000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9314( ref l_U254, "tbStartDrugDen", -59.63000000, -58.21000000, 12.00000000, 8.22000000, 2.78000000, 5.25000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9314( ref l_U275, "tbEnableEmitter", -68.37000000, -52.16000000, 12.20000000, 4.00000000, 4.00000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9314( ref l_U296, "tbReleaseGrenader", -58.83000000, -65.16000000, 12.00000000, 26.37000000, 4.78000000, 5.25000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9314( ref l_U359, "tbFailSafe", -57.70000000, -69.63000000, 11.33000000, 21.00000000, 4.00000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9314( ref l_U212, "tbFirstLureBurstFromDoor", -61.89000000, -61.24000000, 12.00000000, 2.61000000, 2.78000000, 5.25000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9314( ref l_U317, "tbCreateFountWav2", -53.59000000, -77.66000000, 13.79000000, 9.07000000, 10.60000000, 5.00000000, 0.00000000, 0.00000000, 90.00000000, 1 );
    sub_9314( ref l_U338, "tbActionFountWav2", -55.71000000, -71.20000000, 11.40000000, 12.00000000, 4.00000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9314( ref l_U380, "tbFOUNT_IMAGEFX_01", -69.29990000, -40.80750000, 8.45000000, 7.00000000, 6.00000000, 8.00000000, 0.00000000, 0.00000000, -8.22000000, 1 );
    sub_10536( ref l_U401, "TETH_ROOF_ENEMY_01", -57.79000000, -56.40000000, 18.31000000, 6.80000000, 1.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10536( ref l_U402, "TETH_ROOF_ENEMY_02", -63.86000000, -57.08000000, 17.01000000, 6.00000000, 6.00000000, 3.00000000, 21.83230000, 0.00000000, 0.00000000, 1 );
    sub_10536( ref l_U403, "TETH_FOUNTAIN_HOUSE_WINDOWS", -59.43000000, -58.33000000, 13.30000000, 6.37000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10536( ref l_U404, "TETH_FOUNTAIN_HOUSE_BACK", -60.23000000, -57.00000000, 13.03000000, 9.45000000, 12.60000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10536( ref l_U405, "teOpenFountain", -56.78000000, -64.49000000, 11.47000000, 14.25000000, 8.68000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10536( ref l_U406, "teSurprise", -69.24000000, -57.05000000, 12.00000000, 6.72000000, 8.19000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10536( ref l_U407, "teRightSide", -52.39000000, -61.10000000, 13.73000000, 5.27000000, 4.22000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11122( ref l_U408, 1, -61.72000000, -8.86000000, 14.85000000, -62.20000000, -8.86000000, 14.81000000, -62.20000000, -8.86000000, 14.81000000, 1069547520, 1077936128, 1, 1 );
    sub_11970( ref l_U408, 30, "POI_OPENDOOR" );
    sub_12131( ref l_U408, 0 );
    sub_1286( ref l_U790, l_U799, 1, 0 );
    sub_12895( ref l_U516, 1731037237, -69.04147000, -60.59292000, 13.83030000, 0.00000000, 0.00000000, 0.00000000 );
    sub_12943( ref l_U516, 1 );
    return;
}

void sub_8626(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_9314(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_10536(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_11122(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
    sub_11137( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
    sub_11505( iParam0 );
    return;
}

void sub_11137(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_11505(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_11584( iParam0 );
    return;
}

void sub_11584(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_11643( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_11643( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_11643( iParam0, 1 );
            }
            else
            {
                sub_11643( iParam0, 0 );
            };;;
        }
        else
        {
            sub_11643( iParam0, 0 );
        }
    }
    else
    {
        sub_11643( iParam0, 0 );
    }
    return;
}

void sub_11643(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_11970(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_12001( iParam0 );
    return;
}

void sub_12001(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_12131(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_11643( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_11643( iParam0, 0 );
        sub_12202( iParam0, 0 );
        if ((IS_PED_DEAD( sub_517() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_517() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_517(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_12202(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_12353( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_12353(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_12414( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_12414( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_12414(int iParam0)
{
    if (((IS_PED_DEAD( sub_517() )) == 0) AND ((IS_PLAYER_DEAD( sub_539() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_517() )) == 1) || (((IS_PED_GETTING_UP( sub_517() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_517() )) == 1) || (((IS_PED_IN_COVER( sub_517() )) == 1) || (((IS_PED_DUCKING( sub_517() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_517() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_12895(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

void sub_12943(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_7668( iParam0 )) == 0)
    {
        sub_7734( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

void sub_13079()
{
    sub_368( "SP", "INITIALIZE_SCRIPT_DATA", "###" );
    l_U758 = sub_13175( -4072149, -61.89000000, -52.29000000, 14.58000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0, 1119092736 );
    if (DOES_PLACEMENT_EXIST( l_U758 ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U758, ref g_U1751 );
    }
    if (DOES_PLACEMENT_EXIST( l_U759 ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U759, ref g_U1751 );
    }
    l_U655 = 0;
    l_U717 = 0;
    sub_2067( ref l_U728 );
    sub_2067( ref l_U737 );
    sub_13369( ref g_U1657, 1 );
    sub_12943( ref g_U1657, 1 );
    sub_13369( ref g_U1678, 1 );
    sub_12943( ref g_U1678, 1 );
    l_U718 = 1;
    l_U726 = 0;
    l_U719 = 0;
    l_U720 = 1;
    l_U755 = 0;
    l_U756 = 0;
    l_U721 = 1;
    l_U722 = 1;
    l_U723 = 0;
    l_U724 = 0;
    l_U725 = 0;
    g_U783 = 0;
    l_U727 = 0;
    l_U83 = 0;
    l_U85 = 1;
    return;
}

void sub_13175(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_13369(int iParam0, int iParam1)
{
    if ((sub_7668( iParam0 )) == 0)
    {
        sub_7734( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

void sub_13622()
{
    sub_368( "NS", "P_RESET_MAX_CONTEXTUAL_DIALOGUE", 0 );
    l_U44 = 0;
    l_U45 = 0;
    return;
}

void sub_13781(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

int sub_13995()
{
    sub_368( "NS", "F_HAS_ASSETS_LOADED()", 0 );
    if ((IS_SCRIPT_AUDIO_BANK_LOADED( "SCRIPT_MISSION\S_FAV1_FIREWORK_LAUNCH", 0 )) AND (((ISEQ_QUERY_STATE( 1669748883, 2 )) == 1) AND ((HAS_ANIM_DICT_LOADED( "LEVEL_S_FAV1_CP_07", 0 )) AND ((HAS_MODEL_LOADED( 416428258 )) AND ((HAS_MODEL_LOADED( 508600758 )) AND ((HAS_MODEL_LOADED( -502497534 )) AND ((HAS_MODEL_LOADED( 1396472798 )) AND (HAS_MODEL_LOADED( -1947223203 )))))))))
    {
        return 1;
    }
    return 0;
}

void sub_14297()
{
    sub_368( "SP", "P_START_GAMEPLAY", "###" );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    sub_7656( ref g_U1643, 1, 1, -0.20000000 );
    if (g_U1049 == 8)
    {
        if (NOT (IS_PED_DEAD( sub_517() )))
        {
            CLEAR_PED_TASKS( sub_517() );
            PED_ACTION_TREE_PLAY_NODE( sub_517(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        }
    }
    if ((IS_PLAYER_DEAD( sub_539() )) == 0)
    {
        SET_PLAYER_CONTROL( sub_539(), 1, 0 );
    }
    sub_12943( ref g_U1664, 0 );
    sub_7656( ref g_U1664, 0, 1, 0.15000000 );
    sub_13369( ref g_U1671, 1 );
    sub_13369( ref g_U1650, 1 );
    sub_14568( ref g_U1650, -100.00000000, 0.00000000 );
    DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U1650._fU0, g_U1650._fU4 ), 0 );
    AUDIO_MUSIC_REQUEST_ONESHOT( "FAVELA_1_ONESHOT_1", 0 );
    l_U719 = 1;
    return;
}

void sub_14568(int iParam0, float fParam1, float fParam2)
{
    if ((sub_7668( iParam0 )) == 0)
    {
        sub_7734( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        ;
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

void sub_14736()
{
    sub_14746();
    sub_16452();
    sub_16758();
    sub_17110();
    sub_17385();
    sub_17752();
    return;
}

void sub_14746()
{
    unknown uVar2;
    unknown uVar3;

    sub_368( "SP", "P_SETUP_FOUNTAIN_ENEMIES", "###" );
    sub_2747( l_U584 );
    sub_14818( l_U584, ref l_U565 );
    sub_15255( ref l_U405, l_U584 );
    if (((IS_PED_DEAD( l_U584 )) == 0) AND ((DOES_PED_EXIST( l_U584 )) == 1))
    {
        SET_PED_AI_TEMPLATE( l_U584, ref g_U1791 );
        SET_PED_ACCURACY( l_U584, 31186664 );
        SET_PED_COMBAT_MOVEMENT( l_U584, 1 );
        SET_PED_NAME_DEBUG( l_U584, "piFountainEnemy01" );
        uVar2 = sub_5542( l_U584, g_U1818, 25000, 0, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U584, 1 );
        if (NOT (IS_PED_DEAD( sub_517() )))
        {
            REGISTER_TARGET( l_U584, sub_517() );
        }
    }
    sub_2747( l_U598 );
    l_U598 = sub_15511( ref l_U585 );
    sub_14818( l_U598, ref l_U565 );
    sub_16191( ref l_U407, l_U598, 1 );
    if (((IS_PED_DEAD( l_U598 )) == 0) AND ((DOES_PED_EXIST( l_U598 )) == 1))
    {
        SET_PED_NAME_DEBUG( l_U598, "piFountainEnemy02" );
        SET_PED_AI_TEMPLATE( l_U598, ref g_U1791 );
        SET_PED_ACCURACY( l_U598, 31186664 );
        SET_PED_COMBAT_MOVEMENT( l_U598, 1 );
        uVar3 = sub_5542( l_U598, g_U1820, 25000, 0, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U598, 1 );
        if (NOT (IS_PED_DEAD( sub_517() )))
        {
            REGISTER_TARGET( l_U598, sub_517() );
        }
    }
    return;
}

void sub_14818(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_3146( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_14961( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_14961( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_14961(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_15255(int iParam0, unknown uParam1)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_SUGGESTED_COMBAT_AREA_ADD_BOX( uParam1, iParam0->_fU0 );
    }
    return;
}

void sub_15511(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_7921( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_15990( iParam0->_fU40 );
    sub_16070( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_15990(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_16070(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_16191(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_16452()
{
    sub_368( "NS", "P_CREATE_SURPRISE()", 0 );
    sub_2747( l_U640 );
    l_U640 = sub_15511( ref l_U627 );
    sub_14818( l_U640, ref l_U565 );
    sub_5542( l_U640, g_U1819, 25000, 0, 0 );
    if (NOT (IS_PED_DEAD( l_U640 )))
    {
        SET_PED_AI_TEMPLATE( l_U640, ref g_U1791 );
        SET_PED_ACCURACY( l_U640, 31186664 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U640, 1 );
        SET_PED_ALERTNESS( l_U640, 4 );
        TASK_AIM_GUN_AT_COORD( l_U640, -65.89000000, -51.98000000, 14.35000000, -1, 1 );
        SET_PED_COMBAT_MOVEMENT( l_U640, 0 );
        if (NOT (IS_PED_DEAD( sub_517() )))
        {
            REGISTER_TARGET( l_U640, sub_517() );
        }
    }
    sub_16191( ref l_U406, l_U640, 1 );
    SET_PED_NAME_DEBUG( l_U640, "piSurprise" );
    return;
}

void sub_16758()
{
    sub_368( "ns", "P_CREATE_PROPANE()", 0 );
    sub_2978( l_U708 );
    l_U708 = sub_16850( -502497534, -55.67000000, -60.61000000, 12.46000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U708 ))
    {
        CAMERA_CAN_TARGET_OBJECT( 1, l_U708 );
    }
    return;
}

void sub_16850(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_7921( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_17110()
{
    sub_368( "NS", "P_CREATE_GRENADER()", 0 );
    sub_2747( l_U641 );
    l_U641 = sub_15511( ref l_U642 );
    sub_5542( l_U641, g_U1817, 25000, 0, 0 );
    if (NOT (IS_PED_DEAD( l_U641 )))
    {
        SET_PED_AI_TEMPLATE( l_U641, ref g_U1791 );
        SET_PED_ACCURACY( l_U641, 31186664 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U641, 1 );
        SET_PED_ALERTNESS( l_U641, 2 );
        if (NOT (IS_PED_DEAD( sub_517() )))
        {
            REGISTER_TARGET( l_U641, sub_517() );
        }
        FREEZE_PED_POSITION( l_U641, 1 );
    }
    sub_16191( ref l_U403, l_U641, 1 );
    sub_14818( l_U641, ref l_U565 );
    SET_PED_NAME_DEBUG( l_U641, "piGrenader" );
    return;
}

void sub_17385()
{
    sub_368( "NS", "P_CREATE_FIRST_LURE()", 0 );
    sub_2747( l_U536 );
    l_U536 = sub_15511( ref l_U523 );
    if (NOT (IS_PED_DEAD( l_U536 )))
    {
        SET_PED_NAME_DEBUG( l_U536, "piFirstLure" );
        SET_PED_AI_TEMPLATE( l_U536, ref g_U1791 );
        SET_PED_ALERTNESS( l_U536, 4 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U536, 1 );
        SET_PED_ACCURACY( l_U536, 31186664 );
        if (NOT (IS_PED_DEAD( sub_517() )))
        {
            REGISTER_TARGET( l_U536, sub_517() );
        }
    }
    sub_16191( ref l_U405, l_U536, 1 );
    sub_14818( l_U536, ref l_U565 );
    sub_5542( l_U536, g_U1820, 25000, 0, 0 );
    sub_17647( l_U536 );
    return;
}

void sub_17647(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_17752()
{
    unknown uVar2;

    sub_368( "SP", "P_SETUP_ROOF_ENEMY_02", "###" );
    sub_2747( l_U564 );
    l_U564 = sub_15511( ref l_U551 );
    if (((IS_PED_DEAD( l_U564 )) == 0) AND ((DOES_PED_EXIST( l_U564 )) == 1))
    {
        SET_PED_NAME_DEBUG( l_U564, "piHouseEnemy" );
        SET_PED_AI_TEMPLATE( l_U564, ref g_U1791 );
        SET_PED_ACCURACY( l_U564, 31186664 );
        uVar2 = sub_5542( l_U564, g_U1819, 25000, 0, 0 );
        SET_PED_ALERTNESS( l_U564, 4 );
        SET_PED_COMBAT_MOVEMENT( l_U564, 1 );
        sub_14818( l_U564, ref l_U565 );
        if (NOT (IS_PED_DEAD( sub_517() )))
        {
            REGISTER_TARGET( l_U564, sub_517() );
        }
        SET_PED_ALERTNESS( l_U564, 4 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U564, 1 );
    }
    sub_17647( l_U564 );
    return;
}

int sub_18085(unknown uParam0)
{
    sub_368( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_3357( uParam0, sub_517() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

int sub_18335()
{
    if (sub_18351( l_U107 ))
    {
        if (IS_SPHERE_VISIBLE( -62.38000000, -56.96000000, 20.55000000, 1.00000000, 1 ))
        {
            return 1;
        }
        if (sub_18471())
        {
            return 1;
        }
    }
    return 0;
}

void sub_18351(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_18369( sub_517(), uParam0 );
}

int sub_18369(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

int sub_18471()
{
    int iVar2;

    if (NOT (IS_PED_DEAD( sub_517() )))
    {
        if (HAS_SHOT_BEEN_FIRED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_517() ), 2.00000000, 1, ref iVar2 ))
        {
            if (iVar2 == sub_517())
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_18677(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_368( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_368( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_6196( iParam1 );
        sub_18936( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_19387( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_19387( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_19619( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_19387( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_19619( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_19619( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_19387( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_19619( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_19619( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_19619( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_19387( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_19619( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_19619( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_19619( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_19619( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_21177( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_368( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_18936(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_3573( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_368( "TEH", "Ending context", 0 );
        sub_368( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_19387(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_19619(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_21177(int iParam0)
{
    sub_3146( "CHECKPOINT DATA" );
    sub_21216( iParam0->_fU4 );
    sub_21239( iParam0->_fU16 );
    sub_21239( iParam0->_fU20 );
    sub_21239( iParam0->_fU24 );
    sub_21282( iParam0->_fU28 );
    sub_21282( iParam0->_fU56 );
    sub_21282( iParam0->_fU60 );
    sub_21282( iParam0->_fU64 );
    sub_21282( iParam0->_fU68 );
    sub_21282( iParam0->_fU72 );
    sub_21282( iParam0->_fU76 );
    sub_21282( iParam0->_fU80 );
    sub_21282( iParam0->_fU84 );
    sub_21282( iParam0->_fU88 );
    sub_21282( iParam0->_fU92 );
    sub_21239( iParam0->_fU32 );
    sub_21282( iParam0->_fU36 );
    sub_21282( iParam0->_fU40 );
    sub_21282( iParam0->_fU44 );
    sub_21239( iParam0->_fU136 );
    sub_21487( iParam0->_fU140 );
    sub_21282( iParam0->_fU52 );
    sub_3146( "---nRightHolsterAttachmentEnabled: " );
    sub_21282( iParam0->_fU96 );
    sub_3146( "---nRightHolsterAttachmentToggled: " );
    sub_21282( iParam0->_fU100 );
    sub_3146( "---nLeftHolsterAttachmentEnabled: " );
    sub_21282( iParam0->_fU104 );
    sub_3146( "---nLeftHolsterAttachmentToggled: " );
    sub_21282( iParam0->_fU108 );
    sub_3146( "---nRifleHolsterAttachmentEnabled: " );
    sub_21282( iParam0->_fU112 );
    sub_3146( "---nRifleHolsterAttachmentToggled: " );
    sub_21282( iParam0->_fU116 );
    sub_3146( "---nRightHandAttachmentEnabled: " );
    sub_21282( iParam0->_fU120 );
    sub_3146( "---nRightHandAttachmentToggled: " );
    sub_21282( iParam0->_fU124 );
    sub_3146( "---nLeftHandAttachmentEnabled: " );
    sub_21282( iParam0->_fU128 );
    sub_3146( "---nLeftHandAttachmentToggled: " );
    sub_21282( iParam0->_fU132 );
    sub_21282( l_U1 );
    sub_21282( 144 );
    return;
}

void sub_21216(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_21239(unknown uParam0)
{
    return;
}

void sub_21282(unknown uParam0)
{
    return;
}

void sub_21487(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_22342()
{
    int Result;
    int I;

    Result = 0;
    if (((IS_PED_DEAD( l_U640 )) == 0) AND ((DOES_PED_EXIST( l_U640 )) == 1))
    {
        Result++;
    }
    if (((IS_PED_DEAD( l_U612 )) == 0) AND ((DOES_PED_EXIST( l_U612 )) == 1))
    {
        Result++;
    }
    if (((IS_PED_DEAD( l_U584 )) == 0) AND ((DOES_PED_EXIST( l_U584 )) == 1))
    {
        Result++;
    }
    if (((IS_PED_DEAD( l_U598 )) == 0) AND ((DOES_PED_EXIST( l_U598 )) == 1))
    {
        Result++;
    }
    if (((IS_PED_DEAD( l_U550 )) == 0) AND ((DOES_PED_EXIST( l_U550 )) == 1))
    {
        Result++;
    }
    if (((IS_PED_DEAD( l_U564 )) == 0) AND ((DOES_PED_EXIST( l_U564 )) == 1))
    {
        Result++;
    }
    if (((IS_PED_DEAD( l_U641 )) == 0) AND ((DOES_PED_EXIST( l_U641 )) == 1))
    {
        Result++;
    }
    for ( I = 0; I < 3; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U703[I] )))
        {
            if (IS_PED_VISIBLE( l_U703[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

void sub_22724()
{
    int I;

    sub_368( "NS", "P_CREATE_FOUNT_WAVE2()", 0 );
    sub_2915( ref l_U703 );
    for ( I = 0; I < 3; I++ )
    {
        l_U703[I] = sub_15511( ref l_U663[I] );
        if (NOT (IS_PED_DEAD( l_U703[I] )))
        {
            SET_PED_AI_TEMPLATE( l_U703[I], ref g_U1791 );
            SET_PED_ACCURACY( l_U703[I], 31186664 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U703[I], 1 );
            SET_PED_ALERTNESS( l_U703[I], 2 );
            if (NOT (IS_PED_DEAD( sub_517() )))
            {
                REGISTER_TARGET( l_U703[I], sub_517() );
            }
        }
    }
    sub_16191( ref l_U401, l_U703[0], 1 );
    sub_16191( ref l_U405, l_U703[1], 3 );
    sub_16191( ref l_U405, l_U703[2], 1 );
    sub_5542( l_U703[0], g_U1819, 25000, 0, 0 );
    sub_5542( l_U703[1], g_U1820, 25000, 0, 0 );
    sub_5542( l_U703[2], g_U1819, 25000, 0, 0 );
    sub_23105( ref l_U703, "piFountWave2" );
    sub_23203( ref l_U703 );
    return;
}

void sub_23105(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_23203(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_17647( (uParam0^)[I] );
    }
    return;
}

void sub_23282(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_18369( sub_517(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_23383()
{
    int I;

    sub_368( "NS", "P_ACTION_FOUNT_WAVE2()", 0 );
    sub_23433( ref l_U703 );
    for ( I = 0; I < 3; I++ )
    {
        if (NOT (IS_PED_DEAD( sub_517() )))
        {
            if (NOT (IS_PED_DEAD( l_U703[I] )))
            {
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U703[I], 0 );
                TASK_COMBAT_PED( l_U703[I], sub_517() );
            }
        }
    }
    return;
}

void sub_23433(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_23464( (uParam0^)[I] );
    }
    return;
}

void sub_23464(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_23699(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 = sub_18369( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

void sub_23797()
{
    sub_368( "CO", "P_INITIALIZE_FOUNT_IMAGEFX_01", 0 );
    sub_23854( ref l_U800 );
    l_U800[0]._fU4 = "FLICKER_VIBRATE_INTERLACE_01";
    l_U800[0]._fU8 = 4;
    l_U800[0]._fU32 = 0;
    l_U800[1]._fU4 = "FLICKER_VIBRATE_INTERLACE_01";
    l_U800[1]._fU12 = 50;
    l_U800[1]._fU8 = 4;
    l_U800[1]._fU32 = 0;
    l_U800[2]._fU4 = "FLICKER_VIBRATE_INTERLACE_01";
    l_U800[2]._fU12 = 100;
    l_U800[2]._fU8 = 4;
    l_U800[2]._fU32 = 0;
    l_U800[3]._fU4 = "FLICKER_VIBRATE_INTERLACE_01";
    l_U800[3]._fU12 = 150;
    l_U800[3]._fU8 = 4;
    l_U800[3]._fU32 = 0;
    l_U31 = 0;
    return;
}

void sub_23854(unknown uParam0)
{
    int I;

    sub_368( "CO", "P_INIT_IMAGEFX", 0 );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU4 = "";
        (uParam0^)[I]._fU12 = 0;
        (uParam0^)[I]._fU16 = 0;
        (uParam0^)[I]._fU20 = 0;
        (uParam0^)[I]._fU24 = 0;
        (uParam0^)[I]._fU28 = 0;
        (uParam0^)[I]._fU32 = 1;
    }
    return;
}

void sub_24316(unknown uParam0)
{
    int I;
    int J;

    switch (l_U31)
    {
        case 0:
        sub_368( "CO", "P_HANDLE_IMAGEFX", 0 );
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (uParam0^)[I]._fU32)
            {
                sub_1286( ref (uParam0^)[I]._fU36, (uParam0^)[I]._fU12, 1, 0 );
                sub_1420( ref (uParam0^)[I]._fU36 );
                if ((uParam0^)[I]._fU20 > 0)
                {
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        l_U31 = 1;
        break;
        case 1:
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (sub_1538( ref (uParam0^)[I]._fU36 ))
            {
                (uParam0^)[I]._fU0 = PLAY_IMAGEFX( (uParam0^)[I]._fU4, (uParam0^)[I]._fU8, (uParam0^)[I]._fU28 );
                if ((uParam0^)[I]._fU16 > 0)
                {
                    sub_1286( ref (uParam0^)[I]._fU72, (uParam0^)[I]._fU16, 1, 0 );
                    sub_1420( ref (uParam0^)[I]._fU72 );
                }
                if ((uParam0^)[I]._fU20 > 0)
                {
                    for ( J = I + 1; J <= (I + (uParam0^)[I]._fU20); J++ )
                    {
                        (uParam0^)[J]._fU0 = PLAY_IMAGEFX( (uParam0^)[J]._fU4, (uParam0^)[J]._fU8, (uParam0^)[I]._fU28 );
                        if ((uParam0^)[J]._fU16 > 0)
                        {
                            sub_1286( ref (uParam0^)[J]._fU72, (uParam0^)[J]._fU16, 1, 0 );
                            sub_1420( ref (uParam0^)[J]._fU72 );
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
            if (sub_1538( ref (uParam0^)[I]._fU72 ))
            {
                STOP_IMAGEFX( (uParam0^)[I]._fU0, (uParam0^)[I]._fU24 );
                (uParam0^)[I]._fU32 = 1;
                if ((uParam0^)[I]._fU20 > 0)
                {
                    if ((uParam0^)[I]._fU20 == 1)
                    {
                        STOP_IMAGEFX( (uParam0^)[I + 1]._fU0, (uParam0^)[I + 1]._fU24 );
                        (uParam0^)[I + 1]._fU32 = 1;
                    }
                    else
                    {
                        for ( J = I + 1; J <= (uParam0^)[I]._fU20; J++ )
                        {
                            STOP_IMAGEFX( (uParam0^)[J]._fU0, (uParam0^)[J]._fU24 );
                            (uParam0^)[J]._fU32 = 1;
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        break;
    }
    return;
}

int sub_25055()
{
    switch (l_U85)
    {
        case 1:
        sub_25117();
        if (NOT (IS_PED_DEAD( l_U494 )))
        {
            ISEQ_REGISTER_ENTITY( 1669748883, "roof", l_U494, 0 );
            ISEQ_START( 1669748883 );
        }
        sub_1286( ref l_U920, 50, 1, 0 );
        sub_1420( ref l_U920 );
        l_U85 = 2;
        break;
        case 2:
        if (sub_1538( ref l_U920 ))
        {
            sub_25789();
            if (NOT (IS_PED_DEAD( l_U494 )))
            {
                SET_PED_VISIBLE( l_U494, 1 );
            }
            g_U782 = 0;
            sub_1286( ref l_U911, l_U910, 1, 0 );
            sub_1420( ref l_U911 );
            if (g_U1049 == 8)
            {
                if (NOT (IS_PLAYER_DEAD( sub_539() )))
                {
                    SET_PLAYER_CONTROL( sub_539(), 1, 0 );
                }
            }
            DO_SCREEN_FADE_IN( 0 );
            l_U85 = 3;
        }
        break;
        case 3:
        if ((ISEQ_QUERY_STATE( 1669748883, 3 )) == 1)
        {
            l_U85 = 4;
        }
        break;
        case 4:
        if ((sub_1538( ref l_U770 )) == 1)
        {
            sub_26143();
            if (l_U724 == 0)
            {
                sub_26379();
                l_U724 = 1;
            }
        }
        if (sub_1538( ref l_U911 ))
        {
            RENDER_SCRIPT_CAMS( 0, 1, 2250, 0 );
            DESTROY_ALL_CAMS();
        }
        if ((ISEQ_QUERY_STATE( 1669748883, 3 )) == 0)
        {
            if (NOT (IS_PED_DEAD( l_U494 )))
            {
                ISEQ_UNREGISTER_ENTITY( 1669748883, "roof" );
                ISEQ_TERMINATE( 1669748883 );
                sub_2747( l_U494 );
                sub_2067( ref l_U911 );
                sub_2067( ref l_U770 );
            }
            DISPLAY_HUD( 1 );
            if (NOT (IS_PLAYER_DEAD( sub_539() )))
            {
                SET_PLAYER_CONTROL( sub_539(), 1, 0 );
            }
            l_U85 = 0;
            return 1;
        }
        break;
        case 0: break;
    }
    return 0;
}

void sub_25117()
{
    vector vVar2;

    sub_368( "NS", "P_CREATE_VIG_24B_FOUNT()", 0 );
    sub_2747( l_U494 );
    l_U494 = sub_15511( ref l_U495 );
    if (((IS_PED_DEAD( l_U494 )) == 0) AND ((DOES_PED_EXIST( l_U494 )) == 1))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U494, 1 );
        SET_PED_VISIBLE( l_U494, 0 );
        SET_PED_AS_ONE_SHOT_KILL( l_U494, 1 );
        SET_PED_ACCURACY( l_U494, 31186664 );
        SET_BULLET_CAM_PREF( l_U494, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", "", 0, 0, 0, 0, 0, 0, 0, 0 );
    }
    vVar2 = {2.70489700, -41.73405000, 17.51681000};
    sub_2978( l_U508 );
    l_U508 = sub_16850( 508600758, vVar2, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( l_U508 )) == 1)
    {
        if (((IS_PED_DEAD( l_U494 )) == 0) AND ((DOES_PED_EXIST( l_U494 )) == 1))
        {
            ATTACH_OBJECT_TO_PED( l_U508, l_U494, 25310, l_U510, l_U513, 0 );
        }
    }
    sub_2978( l_U509 );
    l_U509 = sub_16850( 416428258, vVar2, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( l_U509 )) == 1)
    {
        if (((IS_PED_DEAD( l_U494 )) == 0) AND ((DOES_PED_EXIST( l_U494 )) == 1))
        {
            ATTACH_OBJECT_TO_PED( l_U509, l_U494, 25310, l_U510, l_U513, 0 );
            SET_OBJECT_VISIBLE( l_U509, 0 );
        }
    }
    SET_PED_NAME_DEBUG( l_U494, "piVig24B_fountain_Enemy__" );
    return;
}

void sub_25789()
{
    sub_368( "NS", "P_ACTION_VIG_24B_FOUNT()", 0 );
    if (NOT (IS_PED_DEAD( l_U494 )))
    {
        PED_SET_ACTION_INTENTION( l_U494, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    }
    sub_1286( ref l_U760, l_U769, 1, 0 );
    sub_1420( ref l_U760 );
    sub_1286( ref l_U770, l_U779, 1, 0 );
    sub_1420( ref l_U770 );
    sub_1286( ref l_U780, l_U789, 1, 0 );
    sub_1420( ref l_U780 );
    return;
}

void sub_26143()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    vector vVar5;
    vector vVar8;

    sub_368( "SP", "Shooting Fireworks...", 0 );
    if ((IS_PED_DEAD( l_U494 )) == 0)
    {
        if ((DOES_OBJECT_EXIST( l_U509 )) == 1)
        {
            uVar2 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( l_U509 )};
            vVar5 = {0.00000000, 0.00000000, 0.30000000};
            vVar8 = {0.00000000, 0.00000000, 0.00000000};
            PLAY_SOUND_FROM_OBJECT( -1, "S_FAV1_FIREWORK_LAUNCH", l_U509 );
            START_PARTICLE_FX_NON_LOOPED_ON_OBJECT( "Firework_Launch", l_U509, vVar5, vVar8, 1.00000000 );
        }
    }
    return;
}

void sub_26379()
{
    sub_368( "NS", "P_ACTION_FIRST_LURE()", 0 );
    sub_23464( l_U536 );
    if (NOT (IS_PED_DEAD( sub_517() )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U536, 0 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( l_U536, -55.82000000, -64.41000000, 12.22000000, sub_517(), 1, 1092616192, 1101004800, -1082130432, 3 );
    }
    return;
}

void sub_26747()
{
    sub_26757();
    sub_27226();
    sub_27373();
    AUDIO_MUSIC_REQUEST_ONESHOT( "FAV1_RAND_ONESHOT", 0 );
    sub_1286( ref l_U728, 5000, 1, 0 );
    sub_1420( ref l_U728 );
    sub_1286( ref l_U737, 10000, 1, 0 );
    sub_1420( ref l_U737 );
    sub_27559();
    sub_14568( ref g_U1650, -100.00000000, 100.00000000 );
    return;
}

void sub_26757()
{
    vector vVar2;
    unknown uVar5;
    vector vVar6;
    unknown uVar9;

    sub_368( "SP", "P_ACTIVATE_FOUNTAIN_ENEMIES", "###" );
    vVar2 = {-67.17210000, -62.39354000, 12.37743000};
    if (((IS_PED_DEAD( l_U584 )) == 0) AND ((DOES_PED_EXIST( l_U584 )) == 1))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U584, 0 );
        OPEN_SEQUENCE_TASK( ref uVar5 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        if ((IS_PED_DEAD( sub_517() )) == 0)
        {
            TASK_ATTACK_MOVE( 0, vVar2, 1092616192, 1101004800, -1082130432, 3 );
            TASK_COMBAT_PED( 0, sub_517() );
        }
        CLOSE_SEQUENCE_TASK( uVar5 );
        TASK_PERFORM_SEQUENCE( l_U584, uVar5 );
        CLEAR_SEQUENCE_TASK( uVar5 );
    }
    vVar6 = {-56.66655000, -61.69790000, 12.41864000};
    if (((IS_PED_DEAD( l_U598 )) == 0) AND ((DOES_PED_EXIST( l_U598 )) == 1))
    {
        OPEN_SEQUENCE_TASK( ref uVar9 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        if ((IS_PED_DEAD( sub_517() )) == 0)
        {
            TASK_COMBAT_PED( 0, sub_517() );
        }
        CLOSE_SEQUENCE_TASK( uVar9 );
        TASK_PERFORM_SEQUENCE( l_U598, uVar9 );
        CLEAR_SEQUENCE_TASK( uVar9 );
    }
    if (IS_SCREEN_FADED_OUT())
    {
        sub_27140( 0 );
    }
    return;
}

void sub_27140(unknown uParam0)
{
    if ((IS_SCREEN_FADING_IN() == 0) AND (IS_SCREEN_FADED_IN() == 0))
    {
        DO_SCREEN_FADE_IN( uParam0 );
        while (IS_SCREEN_FADED_IN() == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_27226()
{
    sub_368( "NS", "P_ACTION_GRENADER()", 0 );
    if (NOT (IS_PED_DEAD( sub_517() )))
    {
        if (NOT (IS_PED_DEAD( l_U641 )))
        {
            FREEZE_PED_POSITION( l_U641, 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U641, 0 );
            TASK_COMBAT_MOVE_TO_COVER_COORDS( l_U641, -58.60000000, -59.09000000, 13.90000000, sub_517() );
        }
    }
    return;
}

void sub_27373()
{
    sub_23464( l_U564 );
    if (((IS_PED_DEAD( l_U564 )) == 0) AND ((DOES_PED_EXIST( l_U564 )) == 1))
    {
        if ((IS_PED_DEAD( sub_517() )) == 0)
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U564, 0 );
            TASK_COMBAT_PED( l_U564, sub_517() );
        }
    }
    return;
}

void sub_27559()
{
    unknown uVar2;

    sub_368( "SP", "P_SETUP_ROOF_ENEMY_01", "###" );
    sub_2747( l_U550 );
    l_U550 = sub_15511( ref l_U537 );
    sub_16191( ref l_U401, l_U550, 1 );
    if (((IS_PED_DEAD( l_U550 )) == 0) AND ((DOES_PED_EXIST( l_U550 )) == 1))
    {
        SET_PED_NAME_DEBUG( l_U550, "piRoofEnemy01" );
        uVar2 = sub_5542( l_U550, g_U1819, 25000, 0, 0 );
        SET_PED_AI_TEMPLATE( l_U550, ref g_U1791 );
        SET_PED_ACCURACY( l_U550, 31186664 );
        SET_PED_COMBAT_MOVEMENT( l_U550, 1 );
        sub_4910( l_U550, g_U1817, 1, 25000, 0 );
        sub_14818( l_U550, ref l_U565 );
        SET_BULLET_CAM_PREF( l_U550, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", "", 0, 0, 0, 0, 0, 0, 0, 0 );
        if (NOT (IS_PED_DEAD( sub_517() )))
        {
            REGISTER_TARGET( l_U550, sub_517() );
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U550, 1 );
        if ((IS_PED_DEAD( sub_517() )) == 0)
        {
            TASK_COMBAT_PED( l_U550, sub_517() );
        }
    }
    return;
}

int sub_28272()
{
    if (NOT (IS_PED_DEAD( l_U641 )))
    {
        if (IS_PED_IN_COVER( l_U641 ))
        {
            SET_PED_FLAG_LOCK_TO_COVER( l_U641, 1 );
            return 1;
        }
    }
    return 0;
}

void sub_28398()
{
    vector vVar2;
    unknown uVar5;
    unknown uVar6;
    vector vVar7;
    unknown uVar10;
    unknown uVar11;

    sub_368( "SP", "P_SETUP_FOUNTAIN_BACKUP", "###" );
    vVar2 = {-61.43000000, -61.98000000, 13.81000000};
    sub_2747( l_U612 );
    l_U612 = sub_15511( ref l_U599 );
    sub_14818( l_U612, ref l_U565 );
    sub_16191( ref l_U407, l_U612, 1 );
    if (((IS_PED_DEAD( l_U612 )) == 0) AND ((DOES_PED_EXIST( l_U612 )) == 1))
    {
        SET_PED_NAME_DEBUG( l_U612, "piFountainBackup01" );
        SET_PED_AI_TEMPLATE( l_U612, ref g_U1791 );
        SET_PED_ACCURACY( l_U612, 31186664 );
        SET_PED_COMBAT_MOVEMENT( l_U612, 1 );
        uVar5 = sub_5542( l_U612, g_U1819, 25000, 0, 0 );
        SET_PED_ALERTNESS( l_U612, 4 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( l_U612, 1 );
        SET_PED_PATH_CAN_USE_CLIMBOVERS( l_U612, 1 );
        if (NOT (IS_PED_DEAD( sub_517() )))
        {
            REGISTER_TARGET( l_U612, sub_517() );
        }
        OPEN_SEQUENCE_TASK( ref uVar6 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        if ((IS_PED_DEAD( sub_517() )) == 0)
        {
            TASK_COMBAT_PED( 0, sub_517() );
        }
        CLOSE_SEQUENCE_TASK( uVar6 );
        TASK_PERFORM_SEQUENCE( l_U612, uVar6 );
        CLEAR_SEQUENCE_TASK( uVar6 );
    }
    vVar7 = {-63.72724000, -52.41292000, 13.82744000};
    sub_2747( l_U626 );
    sub_14818( l_U626, ref l_U565 );
    sub_16191( ref l_U404, l_U626, 3 );
    if (((IS_PED_DEAD( l_U626 )) == 0) AND ((DOES_PED_EXIST( l_U626 )) == 1))
    {
        SET_PED_NAME_DEBUG( l_U626, "piFountainBackup02" );
        SET_PED_AI_TEMPLATE( l_U626, ref g_U1791 );
        SET_PED_ACCURACY( l_U626, 31186664 );
        SET_PED_COMBAT_MOVEMENT( l_U626, 1 );
        uVar10 = sub_5542( l_U626, g_U1820, 25000, 0, 0 );
        SET_PED_ALERTNESS( l_U626, 4 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( l_U626, 1 );
        SET_PED_PATH_CAN_USE_CLIMBOVERS( l_U626, 1 );
        if (NOT (IS_PED_DEAD( sub_517() )))
        {
            REGISTER_TARGET( l_U626, sub_517() );
        }
        OPEN_SEQUENCE_TASK( ref uVar11 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_ATTACK_MOVE( 0, vVar7, 1092616192, 1101004800, -1082130432, 3 );
        if ((IS_PED_DEAD( sub_517() )) == 0)
        {
            TASK_COMBAT_PED( 0, sub_517() );
        }
        CLOSE_SEQUENCE_TASK( uVar11 );
        TASK_PERFORM_SEQUENCE( l_U626, uVar11 );
        CLEAR_SEQUENCE_TASK( uVar11 );
    }
    return;
}

void sub_29219()
{
    int Result;

    Result = 0;
    if (((IS_PED_DEAD( l_U536 )) == 0) AND ((DOES_PED_EXIST( l_U536 )) == 1))
    {
        Result++;
    }
    if (((IS_PED_DEAD( l_U641 )) == 0) AND ((DOES_PED_EXIST( l_U641 )) == 1))
    {
        Result++;
    }
    if (((IS_PED_DEAD( l_U564 )) == 0) AND ((DOES_PED_EXIST( l_U564 )) == 1))
    {
        Result++;
    }
    if (((IS_PED_DEAD( l_U640 )) == 0) AND ((DOES_PED_EXIST( l_U640 )) == 1))
    {
        Result++;
    }
    if (((IS_PED_DEAD( l_U598 )) == 0) AND ((DOES_PED_EXIST( l_U598 )) == 1))
    {
        Result++;
    }
    if (((IS_PED_DEAD( l_U550 )) == 0) AND ((DOES_PED_EXIST( l_U550 )) == 1))
    {
        Result++;
    }
    if (((IS_PED_DEAD( l_U612 )) == 0) AND ((DOES_PED_EXIST( l_U612 )) == 1))
    {
        Result++;
    }
    return Result;
}

void sub_29932()
{
    sub_368( "NS", "P_ACTION_SURPRISE_SIDE()", 0 );
    if (NOT (IS_PED_DEAD( sub_517() )))
    {
        if (NOT (IS_PED_DEAD( l_U640 )))
        {
            TASK_SHOOT_AT_PED( l_U640, sub_517(), -1, -256437761, 1, 0, 0 );
        }
    }
    return;
}

void sub_30071()
{
    sub_368( "NS", "P_ACTION_SURPRISE()", 0 );
    if (NOT (IS_PED_DEAD( sub_517() )))
    {
        if (NOT (IS_PED_DEAD( l_U640 )))
        {
            SET_PED_COMBAT_MOVEMENT( l_U640, 2 );
            sub_30168( l_U640 );
            CLEAR_PED_TASKS( l_U640 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U640, 0 );
            sub_16191( ref l_U404, l_U640, 1 );
            TASK_COMBAT_PED( l_U640, sub_517() );
        }
    }
    return;
}

void sub_30168(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        RESET_PED_TETHERING( uParam0 );
    }
    return;
}

void sub_30300()
{
    if (sub_22342() == 1)
    {
        if (((GET_PED_CAN_TRIGGER_BULLET_CAM( l_U640 )) == 0) AND (((IS_PED_DEAD( l_U640 )) == 0) AND ((DOES_PED_EXIST( l_U640 )) == 1)))
        {
            SET_PED_CAN_TRIGGER_BULLET_CAM( l_U640, 1 );
            return l_U640;
        }
        if (((GET_PED_CAN_TRIGGER_BULLET_CAM( l_U612 )) == 0) AND (((IS_PED_DEAD( l_U612 )) == 0) AND ((DOES_PED_EXIST( l_U612 )) == 1)))
        {
            SET_PED_CAN_TRIGGER_BULLET_CAM( l_U612, 1 );
            return l_U612;
        }
        if (((GET_PED_CAN_TRIGGER_BULLET_CAM( l_U584 )) == 0) AND (((IS_PED_DEAD( l_U584 )) == 0) AND ((DOES_PED_EXIST( l_U584 )) == 1)))
        {
            SET_PED_CAN_TRIGGER_BULLET_CAM( l_U584, 1 );
            return l_U584;
        }
        if (((GET_PED_CAN_TRIGGER_BULLET_CAM( l_U598 )) == 0) AND (((IS_PED_DEAD( l_U598 )) == 0) AND ((DOES_PED_EXIST( l_U598 )) == 1)))
        {
            SET_PED_CAN_TRIGGER_BULLET_CAM( l_U598, 1 );
            return l_U598;
        }
        if (((GET_PED_CAN_TRIGGER_BULLET_CAM( l_U550 )) == 0) AND (((IS_PED_DEAD( l_U550 )) == 0) AND ((DOES_PED_EXIST( l_U550 )) == 1)))
        {
            SET_PED_CAN_TRIGGER_BULLET_CAM( l_U550, 1 );
            return l_U550;
        }
        if (((GET_PED_CAN_TRIGGER_BULLET_CAM( l_U564 )) == 0) AND (((IS_PED_DEAD( l_U564 )) == 0) AND ((DOES_PED_EXIST( l_U564 )) == 1)))
        {
            SET_PED_CAN_TRIGGER_BULLET_CAM( l_U564, 1 );
            return l_U564;
        }
        if (((GET_PED_CAN_TRIGGER_BULLET_CAM( l_U641 )) == 0) AND (((IS_PED_DEAD( l_U641 )) == 0) AND ((DOES_PED_EXIST( l_U641 )) == 1)))
        {
            SET_PED_CAN_TRIGGER_BULLET_CAM( l_U641, 1 );
            return l_U641;
        }
        return sub_30816( ref l_U703 );
    }
    return nil;
}

void sub_30816(unknown uParam0)
{
    int I;

    if ((sub_30828( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_30828(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_31094()
{
    sub_368( "NS", "P_RELEASE_GRENADER()", 0 );
    if (NOT (IS_PED_DEAD( l_U641 )))
    {
        sub_30168( l_U641 );
        sub_16191( ref l_U404, l_U641, 1 );
        SET_PED_FLAG_LOCK_TO_COVER( l_U641, 0 );
    }
    l_U655 = 1;
    return;
}

void sub_31223()
{
    sub_368( "NS", "P_ENABLE_COKE_PACK_PLANT_EMITTER()", 0 );
    ENABLE_STATIC_EMITTER( "S_FAV1_COKE_PACK_PLANT", 1 );
    return;
}

void sub_31357()
{
    if (DOES_OBJECT_EXIST( DOOR_FIND_CLOSEST( g_U1664._fU0, g_U1664._fU4 ) ))
    {
        if (DOOR_GET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U1664._fU0, g_U1664._fU4 ) ))
        {
            sub_368( "NS", "Setting cocaine door to not react to bullets.", 0 );
            DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U1664._fU0, g_U1664._fU4 ), 0 );
        }
    }
    if (DOES_OBJECT_EXIST( DOOR_FIND_CLOSEST( g_U1671._fU0, g_U1671._fU4 ) ))
    {
        if (DOOR_GET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U1671._fU0, g_U1671._fU4 ) ))
        {
            sub_368( "NS", "Setting cocaine door to not react to bullets.", 0 );
            DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U1671._fU0, g_U1671._fU4 ), 0 );
        }
    }
    return;
}

void sub_31702(int iParam0)
{
    if (l_U44 == 0)
    {
        l_U45 = GET_PAYNEKILLER_AMT();
        l_U44 = 1;
    }
    if ((IS_PED_DEAD( sub_517() )) == 0)
    {
        if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0))
        {
            if ((TIME_SINCE_LAST_MONOLOGUE() > 5000) AND ((IS_MONOLOGUE_PLAYING() == 0) AND (sub_31786() == 0)))
            {
                if ((iParam0 == 1) AND (l_U45 < GET_PAYNEKILLER_AMT()))
                {
                    if (g_U789 < 5)
                    {
                        if (((g_U788 mod 3) == 0) || (g_U788 == 0))
                        {
                            sub_368( "NS", "Playing Pills Monologue", 0 );
                            sub_31973( ref l_U34 );
                            sub_32055( 0, sub_517(), "MAX", ref l_U34, 2, 0 );
                            sub_32055( 1, sub_517(), "MAX", ref l_U34, 2, 0 );
                            sub_32295( "SFV1_MFPLS", ref l_U34, 7, 1 );
                            g_U789++;
                        }
                        g_U788++;
                    }
                }
            }
            l_U45 = GET_PAYNEKILLER_AMT();
        }
    }
    return;
}

void sub_31786()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

void sub_31973(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_32055(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_32295(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_32319( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_32319(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_32374( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_32374(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_32409( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_32903( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_32409(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_32903(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_33150()
{
    sub_368( "SP", "P_UNLOAD_ASSETS", "###" );
    sub_3023( -1947223203 );
    sub_3023( 1396472798 );
    sub_3023( 1156505411 );
    sub_3023( -502497534 );
    sub_3023( 508600758 );
    sub_3023( 416428258 );
    sub_33275( "LEVEL_S_FAV1_CP_07" );
    ISEQ_UNREGISTER_ENTITY( 1669748883, "roof" );
    ISEQ_TERMINATE( 1669748883 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U86._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U107._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U128._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U149._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U170._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U191._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U233._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U254._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U275._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U296._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U401._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U402._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U403._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U404._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U405._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U406._fU0 );
    return;
}

void sub_33275(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}


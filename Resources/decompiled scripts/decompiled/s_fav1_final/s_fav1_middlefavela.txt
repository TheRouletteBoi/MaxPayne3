void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U3 = 0;
    l_U4 = 0;
    l_U5 = 1500;
    StrCopy( ref l_U15, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U23, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U34 = 0;
    l_U45 = 0;
    l_U46 = 0;
    l_U48 = 0;
    l_U86 = 0;
    l_U87 = 0;
    l_U88 = 0;
    l_U89 = 1;
    l_U732 = 1;
    l_U733 = 1;
    l_U734 = 1;
    l_U735 = 0;
    l_U736 = 1;
    l_U737 = 1;
    l_U738 = 1;
    l_U739 = 1;
    l_U740 = 1;
    l_U741 = 1;
    l_U742 = 0;
    l_U743 = 0;
    l_U744 = 0;
    l_U745 = 0;
    l_U746 = 0;
    l_U747 = 0;
    l_U757 = 0;
    l_U758 = 0;
    l_U759 = 0;
    l_U760 = 0;
    l_U761 = 0;
    l_U762 = 0;
    l_U763 = 0;
    l_U764 = 1;
    l_U765 = 1;
    l_U766 = 0;
    l_U767 = 0;
    l_U768 = 0;
    l_U769 = 0;
    l_U770 = 0;
    l_U909 = 10000;
    l_U919 = 10000;
    l_U978 = 0;
    l_U979 = 1;
    l_U980 = {0.00000000, 0.00000000, 0.30000000};
    l_U983 = {0.00000000, 0.00000000, 0.00000000};
    l_U1113 = {37.80387000, -92.62990000, 2.40747400};
    l_U1116 = {7.14057100, 0.00002000, 14.11135000};
    l_U1119 = {38.28480000, -95.26000000, 3.10000000};
    l_U1122 = 107.00000000;
    l_U1123 = "EXPL_CAM_WAL_25_F";
    l_U1124 = 0;
    l_U1230 = {11.67800000, -55.08300000, 10.60400000};
    l_U1233 = -168.34300000;
    l_U1235 = {12.85000000, -55.76000000, 10.60000000};
    l_U1238 = {0.00000000, 0.00000000, 12.00000000};
    l_U1255 = {6.59200000, -87.04300000, 8.02600000};
    l_U1258 = -80.00000000;
    l_U1260 = {7.08700000, -86.38900000, 8.22100000};
    l_U1263 = {0.00000000, 0.00000000, -58.00000000};
    l_U1268 = {7.28700000, -87.36300000, 8.22100000};
    l_U1271 = {0.00000000, 0.00000000, -70.00000000};
    l_U1274 = 2051896956;
    l_U1275 = 1826773926;
    l_U1276 = 1;
    l_U1291 = {25.87300000, -92.01000000, 4.43500000};
    l_U1294 = -38.79600000;
    l_U1296 = {27.60800000, -90.08200000, 4.55300000};
    l_U1299 = {0.00000000, 0.00000000, 106.00000000};
    l_U1303 = {27.90000000, -91.05000000, 4.55300000};
    l_U1306 = {0.00000000, 0.00000000, 100.00000000};
    l_U1323 = {9.42000000, -55.72000000, 13.96600000};
    l_U1326 = -167.59600000;
    l_U1328 = {10.04000000, -56.48000000, 14.06000000};
    l_U1331 = {0.00000000, 0.00000000, 14.22000000};
    l_U1335 = {9.06000000, -56.69000000, 14.06000000};
    l_U1338 = {0.00000000, 0.00000000, 8.20000000};
    l_U1341 = 1;
    l_U1411 = 0;
    sub_1025( "SP", "Script fav1_middleFavela.sc is starting...", "###" );
    sub_1074();
    sub_5988();
    while (NOT (sub_6549( ref l_U90, 0 )))
    {
        sub_6757();
        if (l_U88 == 0)
        {
            sub_13885();
        }
        sub_45458();
        WAIT( 0 );
    }
    sub_8562();
    sub_46498();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_fav1_middleFavela" );
    sub_1025( "SP", "Script fav1_middleFavela.sc is terminating...", "###" );
    return;
}

void sub_1025(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_1074()
{
    sub_1025( "SP", "LOAD_ASSETS", "###" );
    sub_1150( ref g_U863, -11.67000000, -50.35000000, 15.49000000, 220.00000000, 1478782890, 7, 3, 2, 0, 0 );
    sub_1150( ref l_U1242, l_U1255, l_U1258, 902665022, 4, 1, 1, 0, 0 );
    sub_1150( ref l_U1278, l_U1291, l_U1294, 218081796, 4, 1, 1, 0, 0 );
    sub_1150( ref l_U1310, l_U1323, l_U1326, -825498176, 4, 1, 1, 0, 0 );
    sub_1150( ref l_U1217, l_U1230, l_U1233, 230527244, 4, 1, 1, 0, 0 );
    sub_1150( ref l_U1133, 39.84000000, -80.65000000, 4.24000000, 86.80000000, 1811046118, 7, 3, 2, 0, 0 );
    sub_1150( ref l_U1147, 2.51000000, -85.92000000, 11.58000000, -79.74000000, 242091642, 7, 3, 2, 0, 0 );
    sub_1150( ref l_U1343, 16.71000000, -66.60000000, 15.36000000, -79.74000000, 1480053795, 7, 3, 2, 0, 0 );
    sub_1576( ref l_U90, "FAV1_KILL_MIDDLEFAVELA", -5.25000000, -51.10000000, 10.85000000, 10.00000000, 6.80000000, 3.57000000, 0.00000000, 0.00000000, 11.39000000, 1 );
    sub_1724( ref l_U681, "teWaterBarrel", 7.34000000, -87.06000000, 10.51000000, 4.00000000, 1.00000000, 2.50000000, 0.00000000, 0.00000000, 100.59000000, 1 );
    sub_1576( ref l_U111, "tbCheckFireWorks", 3.10000000, -56.00000000, 12.58000000, 10.00000000, 10.00000000, 5.00000000, 0.00000000, 0.00000000, 10.11000000, 1 );
    sub_1576( ref l_U153, "tbLoadBridge", 8.84000000, -57.96000000, 6.33000000, 10.00000000, 10.00000000, 8.50000000, 0.00000000, 0.00000000, 10.11000000, 1 );
    sub_1576( ref l_U174, "tbKillGroundWalker", 30.90000000, -86.48000000, 0.96000000, 11.53000000, 2.21000000, 4.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1576( ref l_U195, "FireWorkZone1", 57.86000000, -95.91000000, 0.77000000, 46.14000000, 25.00000000, 5.00000000, 0.00000000, 0.00000000, -14.51000000, 1 );
    sub_1576( ref l_U216, "FireWorkZone2", 18.47000000, -86.18000000, 0.77000000, 35.00000000, 30.00000000, 5.00000000, 0.00000000, 0.00000000, -14.51000000, 1 );
    sub_1576( ref l_U237, "tbKillFinalRoof", -5.20000000, -40.51000000, 9.67000000, 2.00000000, 10.00000000, 5.00000000, 0.00000000, 0.00000000, 11.01000000, 1 );
    sub_1576( ref l_U258, "tbSendStairs", 3.76000000, -49.81000000, 12.58000000, 20.00000000, 10.00000000, 5.00000000, 0.00000000, 0.00000000, 10.11000000, 1 );
    sub_1576( ref l_U279, "tbKillStairs", -14.69000000, -49.00000000, 15.00000000, 3.00000000, 3.00000000, 7.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1576( ref l_U300, "tbBalcony02", 18.66000000, -84.37000000, 3.00000000, 3.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 11.25000000, 1 );
    sub_1576( ref l_U132, "tbActivateWaterBarrel", 19.51000000, -84.73000000, 3.00000000, 27.00000000, 7.00000000, 5.00000000, 0.00000000, 0.00000000, 12.92000000, 1 );
    sub_1576( ref l_U489, "tbRugBeater", 34.01000000, -92.05000000, 0.96000000, 11.53000000, 2.21000000, 4.05000000, 0.00000000, 0.00000000, 68.78000000, 1 );
    sub_1724( ref l_U678, "tepiBalcony02", 9.61000000, -72.97000000, 10.15000000, 5.37000000, 1.00000000, 2.00000000, 0.00000000, 0.00000000, 12.23000000, 1 );
    sub_1724( ref l_U679, "teRoof01", 37.99000000, -88.99000000, 3.28000000, 5.99000000, 2.00000000, 2.00000000, 0.00000000, 0.00000000, 12.23000000, 1 );
    sub_1724( ref l_U680, "teJumpDown", 25.24000000, -93.89000000, 9.66000000, 4.76000000, 2.55000000, 2.50000000, 0.00000000, 0.00000000, 100.59000000, 1 );
    sub_1724( ref l_U681, "teWaterBarrel", 7.57000000, -86.94000000, 10.51000000, 4.00000000, 2.00000000, 2.50000000, 0.00000000, 0.00000000, 100.59000000, 1 );
    sub_1576( ref l_U321, "tbMID_05_F1", 62.20000000, -97.38000000, 0.00000000, 3.21000000, 7.06000000, 5.00000000, 0.00000000, 0.00000000, -78.35000000, 1 );
    sub_1576( ref l_U342, "tbKillReleaxRoom", 8.02000000, -64.56000000, 8.56000000, 2.00000000, 6.00000000, 5.00000000, 0.00000000, 0.00000000, 102.03000000, 1 );
    sub_1576( ref l_U363, "tbKillRoof02", 15.88000000, -53.88000000, 13.72000000, 3.00000000, 3.00000000, 5.00000000, 0.00000000, 0.00000000, 11.68000000, 1 );
    sub_1576( ref l_U384, "tbMusicStart", 71.78000000, -114.21000000, 0.70000000, 5.22000000, 1.99000000, 2.93000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1576( ref l_U405, "tbMusicSwitch", 29.44000000, -85.37000000, 0.00000000, 9.70000000, 3.26000000, 5.03000000, 0.00000000, 0.00000000, 42.07000000, 1 );
    sub_1576( ref l_U426, "tbShootDodgeOff", 61.01000000, -99.47000000, 0.00000000, 12.00000000, 7.00000000, 5.00000000, 0.00000000, 0.00000000, 15.28000000, 1 );
    sub_1576( ref l_U447, "tbStartSecondDoor", 13.99000000, -68.46000000, 6.50000000, 5.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 12.92000000, 1 );
    sub_1576( ref l_U468, "tbStart00a", 50.81000000, -89.33000000, 0.96000000, 19.83000000, 2.21000000, 4.05000000, 0.00000000, 0.00000000, 101.18000000, 1 );
    sub_1576( ref l_U510, "tbMIDFAV_IMAGEFX_01", 53.23790000, -92.64090000, 0.96000000, 11.53000000, 2.21000000, 4.05000000, 0.00000000, 0.00000000, 96.76000000, 1 );
    sub_1576( ref l_U531, "tbMIDFAV_IMAGEFX_02", 34.08470000, -90.34590000, 0.96000000, 11.53000000, 2.21000000, 4.05000000, 0.00000000, 0.00000000, 53.14600000, 1 );
    sub_1576( ref l_U552, "tbMIDFAV_IMAGEFX_03", 25.60320000, -85.93190000, 0.96000000, 7.00000000, 6.00000000, 8.00000000, 0.00000000, 0.00000000, 39.98280000, 1 );
    sub_1576( ref l_U573, "tbMIDFAV_IMAGEFX_04", 11.50550000, -81.35540000, 3.58700000, 7.00000000, 6.00000000, 8.00000000, 0.00000000, 0.00000000, 11.62000000, 1 );
    sub_1576( ref l_U594, "tbMIDFAV_IMAGEFX_05", 13.39010000, -62.30450000, 6.09081000, 7.00000000, 6.00000000, 8.00000000, 0.00000000, 0.00000000, -77.03050000, 1 );
    sub_1576( ref l_U615, "tbMIDFAV_IMAGEFX_06", 8.09347000, -56.91420000, 8.45000000, 7.00000000, 6.00000000, 8.00000000, 0.00000000, 0.00000000, 11.62000000, 1 );
    sub_1576( ref l_U636, "tbMIDFAV_IMAGEFX_07", 5.60276000, -57.08740000, 8.45000000, 7.00000000, 6.00000000, 8.00000000, 0.00000000, 0.00000000, 11.62000000, 1 );
    sub_1576( ref l_U657, "tbMIDFAV_IMAGEFX_08", 4.12141000, -58.06260000, 11.42000000, 7.00000000, 6.00000000, 8.00000000, 0.00000000, 0.00000000, 11.62000000, 1 );
    sub_4100( ref l_U1357, -957257324, 11.83170000, -89.43270000, 5.44670000, 0, 0, 0 );
    sub_4148( ref l_U1357, 1 );
    sub_4354( ref g_U1384, 1 );
    sub_4488( ref l_U855, 1500, 1, 0 );
    sub_4488( ref l_U864, 1500, 1, 0 );
    sub_4488( ref l_U873, 1000, 1, 0 );
    l_U818 = sub_4692( -4072149, 56.25000000, -89.18000000, 1.83000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0, 1119092736 );
    l_U1356 = sub_4692( -4072149, 29.28000000, -105.48000000, 2.63000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0, 1119092736 );
    sub_4903( ref l_U996, 2, 0.00000000, 0.00000000, 0.00000000, 37.00566000, -90.48167000, 1.12465100, 37.00566000, -90.48167000, 1.12465100, 1069547520, 1077936128, 1, 1 );
    sub_5424( ref l_U996, 0 );
    sub_5760( ref l_U996, 30, "POI_GANGTAG" );
    sub_5921( ref l_U996, 0 );
    sub_5953( ref l_U996, 1 );
    return;
}

void sub_1150(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_1576(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_1724(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_4100(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

void sub_4148(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_4160( iParam0 )) == 0)
    {
        sub_4226( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

int sub_4160(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_4226(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_4354(int iParam0, int iParam1)
{
    if ((sub_4160( iParam0 )) == 0)
    {
        sub_4226( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

void sub_4488(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_4692(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_4903(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
    sub_4918( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
    sub_5286( iParam0 );
    return;
}

void sub_4918(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_5286(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_5365( iParam0 );
    return;
}

void sub_5365(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_5424( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_5424( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_5424( iParam0, 1 );
            }
            else
            {
                sub_5424( iParam0, 0 );
            };;;
        }
        else
        {
            sub_5424( iParam0, 0 );
        }
    }
    else
    {
        sub_5424( iParam0, 0 );
    }
    return;
}

void sub_5424(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_5760(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_5791( iParam0 );
    return;
}

void sub_5791(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_5921(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

void sub_5953(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

void sub_5988()
{
    sub_1025( "SP", "INITIALIZE_SCRIPT_DATA", "###" );
    l_U733 = 1;
    l_U734 = 1;
    l_U736 = 1;
    l_U737 = 1;
    l_U738 = 1;
    l_U739 = 1;
    l_U740 = 1;
    l_U741 = 1;
    l_U742 = 0;
    l_U745 = 0;
    l_U746 = 0;
    l_U747 = 0;
    l_U744 = 0;
    l_U732 = 1;
    l_U1208 = 0;
    l_U743 = 0;
    l_U764 = 1;
    l_U1276 = 1;
    l_U1341 = 1;
    l_U765 = 1;
    l_U770 = 0;
    l_U767 = 0;
    l_U768 = 0;
    l_U769 = 0;
    l_U757 = 0;
    l_U758 = 0;
    l_U759 = 0;
    l_U760 = 0;
    l_U761 = 0;
    l_U762 = 0;
    l_U763 = 0;
    l_U979 = 1;
    l_U766 = 0;
    l_U1124 = 0;
    l_U735 = 0;
    l_U807 = GET_SOUND_ID();
    l_U87 = 0;
    l_U89 = 1;
    sub_4488( ref l_U910, l_U909, 1, 0 );
    sub_4488( ref l_U920, l_U919, 1, 0 );
    sub_4488( ref l_U748, 30000, 1, 0 );
    sub_6323( ref l_U789 );
    sub_6323( ref l_U771 );
    sub_6323( ref l_U780 );
    sub_6323( ref l_U798 );
    sub_6461();
    return;
}

void sub_6323(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_6461()
{
    sub_1025( "NS", "P_RESET_MAX_CONTEXTUAL_DIALOGUE", 0 );
    l_U45 = 0;
    l_U46 = 0;
    return;
}

void sub_6549(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_6652( sub_6582(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

int sub_6582()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_6604() );
    }
    return 0;
}

void sub_6604()
{
    return GET_PLAYER_ID();
}

int sub_6652(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_6757()
{
    if (g_U1049 == 6)
    {
        switch (l_U88)
        {
            case 0:
            if ((sub_6851()) || (IS_PED_DEAD( sub_6582() )))
            {
                l_U88 = 1;
                sub_1025( "kja", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_7346())
            {
                l_U88 = 2;
            }
            else if ((sub_7386( 0 )) == 1)
            {
                l_U88 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_6582() )))
            {
                l_U88 = 3;
                sub_1025( "NS", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            if ((IS_PLAYER_DEAD( sub_6604() )) == 0)
            {
                SET_PLAYER_CONTROL( sub_6604(), 0, 0 );
            }
            sub_8562();
            if (NOT (IS_PED_DEAD( sub_6582() )))
            {
                CLEAR_PED_PRIMARY_LOOKAT( sub_6582() );
            }
            l_U88 = 4;
            sub_1025( "NS", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_1025( "kja", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_9708( ref l_U50, sub_6582() );
            l_U88 = 5;
            sub_1025( "NS", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_1074();
            sub_5988();
            g_U786 = 0;
            l_U88 = 0;
            sub_1025( "kja", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_6851()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_6582() )))
        {
            SET_PED_FORCED_TO_WALK( sub_6582(), 0 );
            SET_PLAYER_FORCED_AIM( sub_6604(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_6604(), 1 );
            if ((IS_PED_VISIBLE( sub_6582() )) == 0)
            {
                SET_PED_VISIBLE( sub_6582(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_7346()
{
    return g_U648;
}

int sub_7386(int iParam0)
{
    iParam0 = 1;
    switch (l_U4)
    {
        case 0:
        if (NOT (sub_7443( ref l_U6 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_6582() )))
            {
                l_U5 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_4488( ref l_U6, l_U5, 1, 1 );
            sub_7554( ref l_U6 );
        }
        if (sub_7672( ref l_U6 ))
        {
            sub_1025( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_6582() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_6604() )))
            {
                SET_PLAYER_CONTROL( sub_6604(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U4 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U4 = 2;
            }
            else
            {
                l_U4 = 3;
            }
        }
        break;
        case 2:
        sub_1025( "NS", "Player will QUIT", 0 );
        sub_8153();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_1025( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_8153();
        return 1;
        break;
    }
    return 0;
}

int sub_7443(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_7554(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_7672(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_8153()
{
    sub_1025( "NS", "P_PostFailRetryCleanup", 0 );
    sub_6323( ref l_U6 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_6604() )))
    {
        SET_PLAYER_CONTROL( sub_6604(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U3 = 0;
    l_U3 = l_U3;
    l_U4 = 0;
    return;
}

void sub_8562()
{
    sub_1025( "SP", "P_CLEANUP_ALL", "###" );
    ISEQ_UNREGISTER_ENTITY( -1760130878, "CIV" );
    ISEQ_TERMINATE( -1760130878 );
    sub_8639( l_U1309 );
    sub_8718( l_U1327 );
    sub_8718( l_U1334 );
    ISEQ_UNREGISTER_ENTITY( -942571757, "CIV" );
    ISEQ_TERMINATE( -942571757 );
    sub_8639( l_U1277 );
    sub_8718( l_U1295 );
    sub_8718( l_U1302 );
    ISEQ_UNREGISTER_ENTITY( 253844683, "CIV" );
    ISEQ_TERMINATE( 253844683 );
    sub_8639( l_U1241 );
    sub_8718( l_U1259 );
    sub_8718( l_U1266 );
    sub_8718( l_U1267 );
    ISEQ_UNREGISTER_ENTITY( -1213260108, "CIV" );
    ISEQ_UNREGISTER_ENTITY( -1213260108, "DOOR" );
    sub_8639( l_U1216 );
    sub_8718( l_U1234 );
    ISEQ_UNREGISTER_ENTITY( -1980288623, "roof" );
    ISEQ_TERMINATE( -1980288623 );
    ISEQ_UNREGISTER_ENTITY( 1327258126, "peddoor" );
    ISEQ_UNREGISTER_ENTITY( 1327258126, "door" );
    ISEQ_TERMINATE( 1327258126 );
    ISEQ_UNREGISTER_ENTITY( 939658976, "ENEMY" );
    ISEQ_TERMINATE( 939658976 );
    ISEQ_UNREGISTER_ENTITY( 2125861995, "CIV" );
    ISEQ_TERMINATE( 2125861995 );
    ISEQ_UNREGISTER_ENTITY( -695267807, "GMED" );
    ISEQ_UNREGISTER_ENTITY( -695267807, "GMED1" );
    ISEQ_UNREGISTER_ENTITY( -695267807, "GMED2" );
    ISEQ_TERMINATE( -695267807 );
    sub_9176( ref l_U1164 );
    STOP_SOUND( l_U807, 0 );
    RELEASE_SOUND_ID( l_U807 );
    sub_6323( ref l_U855 );
    sub_6323( ref l_U864 );
    sub_6323( ref l_U837 );
    sub_6323( ref l_U873 );
    sub_6323( ref l_U819 );
    sub_6323( ref l_U910 );
    sub_6323( ref l_U920 );
    sub_6323( ref l_U748 );
    sub_9336( l_U818 );
    sub_8639( l_U1132 );
    sub_8639( l_U1132 );
    sub_8639( l_U1146 );
    sub_8639( l_U1160 );
    sub_8639( l_U1161 );
    sub_8718( l_U1162 );
    sub_8718( l_U1163 );
    sub_9176( ref l_U1210 );
    sub_9176( ref l_U1214 );
    sub_8639( l_U1342 );
    sub_9336( g_U703._fU0 );
    sub_9493( ref l_U808 );
    return;
}

void sub_8639(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_8718(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_9176(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_8639( (uParam0^)[I] );
    }
    return;
}

void sub_9336(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_9493(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_9708(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_1025( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_9892( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_10969( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_11261( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_11621( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_11261( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_11621( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_11261( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_11621( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_11906( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_11621( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_11906( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_11621( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_12399( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_12560( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_6582(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_1025( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_9892(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_9924( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_9924(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_10969(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_11261(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_11577( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_11577(unknown uParam0)
{
    return;
}

void sub_11621(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_11906(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_11577( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_12399(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_12560(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_9924( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_12632( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_12632(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_13885()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;

    switch (l_U87)
    {
        case 0:
        if (g_U1049 < 6)
        {
            sub_13967();
            l_U87 = 2;
        }
        else
        {
            DO_SCREEN_FADE_OUT( 0 );
            sub_14480();
            l_U87 = 1;
        }
        break;
        case 1:
        if (sub_15285())
        {
            l_U87 = 4;
        }
        break;
        case 2:
        if (l_U746 == 0)
        {
            if (sub_15640( g_U1559 ))
            {
                l_U746 = 1;
            }
        }
        if (l_U747 == 0)
        {
            if (sub_15640( g_U1552 ))
            {
                l_U747 = 1;
            }
        }
        if (l_U764 == 1)
        {
            if (sub_15837( l_U426 ))
            {
                if (NOT (IS_PLAYER_DEAD( sub_6604() )))
                {
                    SET_PLAYER_CAN_USE_SHOOTDODGE( sub_6604(), 0 );
                    SET_CAN_ROLL_DODGE( sub_6582(), 0 );
                    if (NOT (IS_PED_DEAD( sub_6582() )))
                    {
                        SET_COORD_PRIMARY_LOOKAT( sub_6582(), 61.96000000, -96.04000000, 2.41000000 );
                        l_U764 = 0;
                    }
                }
            }
        }
        else if (NOT (sub_15837( l_U426 )))
        {
            if (NOT (IS_PED_DEAD( sub_6582() )))
            {
                CLEAR_PED_PRIMARY_LOOKAT( sub_6582() );
                l_U764 = 1;
            }
        }
        if (sub_6549( ref l_U321, 0 ))
        {
            sub_1025( "NS", "F_IsPlayerInTriggerBoxFirstTime(tbMID_05_F1) = true", 0 );
            sub_7554( ref l_U873 );
            sub_16116();
            if ((IS_PED_DEAD( sub_6582() )) == 0)
            {
                SET_PED_FORCED_TO_WALK( sub_6582(), 1 );
            }
        }
        if (sub_7672( ref l_U873 ))
        {
            sub_1025( "NS", "IsTimerDone(tmrMID_05_F1) ", 0 );
            l_U87 = 3;
        }
        break;
        case 3:
        sub_1025( "NS", "eStateCutScene", 0 );
        if (sub_17580())
        {
            l_U87 = 4;
            break;
        }
        return;
        case 4:
        sub_24374();
        sub_25147();
        if (l_U86 == 0)
        {
            if ((sub_28082( ref l_U50 )) == 0)
            {
                if (g_U1048 == 6)
                {
                    sub_11906( sub_6582(), g_U1816, 200, 0, 1 );
                }
            }
            l_U86 = 1;
        }
        if ((l_U50._fU0 == 0) || (g_U1049 < 6))
        {
            g_U1049 = 6;
            sub_28379( ref l_U50, g_U1049, sub_6582(), g_U1050[6], g_U1174[6], g_U1216[6], g_U1258[6], 1 );
        }
        g_U781 = 0;
        l_U87 = 5;
        break;
        case 5:
        if (sub_32015( ref l_U938, 1 ))
        {
            sub_32169( 1000, 1, 0, -859915232, -859915232, 0 );
            sub_4488( ref l_U969, l_U978, 1, 0 );
            sub_7554( ref l_U969 );
        }
        if (sub_7672( ref l_U969 ))
        {
            sub_32307( 0, 1 );
        }
        if (NOT l_U742)
        {
            if (l_U996._fU56 == 0)
            {
                sub_32603( ref l_U996, 1 );
            }
        }
        else if (l_U996._fU56 == 1)
        {
            sub_32603( ref l_U996, 0 );
        }
        if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "sfav1_MFGTag" )))
        {
            if (sub_33040( ref l_U996 ))
            {
                FOUND_EXPLORATION_ITEM( "sfav1_MFGTag" );
                sub_35218( 0 );
                sub_35315( ref l_U682, 0 );
                sub_35315( ref l_U692, 0 );
                sub_35315( ref l_U702, 0 );
                sub_35315( ref l_U712, 0 );
                sub_35315( ref l_U722, 0 );
                sub_9493( ref l_U808 );
                sub_35530( 0, sub_6582(), "MAX", ref l_U808, 2, 0 );
                sub_35530( 1, sub_6582(), "MAX", ref l_U808, 2, 0 );
                sub_35769( "SFV1_BRML", ref l_U808, 8, 1 );
            }
            if ((sub_36553( ref l_U996 )) == 1)
            {
                sub_9493( ref l_U986 );
                sub_35530( 0, sub_6582(), "MAX", ref l_U986, 2, 0 );
                sub_35530( 1, sub_6582(), "MAX", ref l_U986, 2, 0 );
                sub_35769( "EXPLORE_ITEM", ref l_U986, 8, 1 );
            }
        }
        if (l_U736 == 1)
        {
            if (sub_6652( l_U1164[0], l_U342 ))
            {
                sub_8639( l_U1164[0] );
            }
            if (sub_6652( l_U1164[1], l_U342 ))
            {
                sub_8639( l_U1164[1] );
            }
            if (sub_6652( l_U1164[2], l_U342 ))
            {
                sub_8639( l_U1164[2] );
                sub_4354( ref g_U1573, 0 );
            }
        }
        else if (sub_6652( l_U1164[0], l_U342 ))
        {
            sub_37014();
        }
        if (sub_6652( l_U1164[1], l_U342 ))
        {
            sub_37392();
        }
        if (sub_6652( l_U1164[2], l_U342 ))
        {
            sub_8639( l_U1164[2] );
            sub_4354( ref g_U1573, 0 );
        }
        if ((NOT l_U736) AND (NOT l_U1208))
        {
            if ((NOT (IS_PED_DEAD( sub_6582() ))) AND (NOT (IS_PED_DEAD( l_U1164[1] ))))
            {
                uVar2 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_6582() )};
                if (uVar2._fU4 > -67.00000000)
                {
                    sub_1025( "GA", "Unlocking vig24 enemy 1 from cover", 0 );
                    SET_PED_FLAG_LOCK_TO_COVER( l_U1164[1], 0 );
                    l_U1208 = 1;
                }
            }
        }
        if (l_U765 == 1)
        {
            if (sub_15640( g_U1580 ))
            {
                l_U765 = 0;
            }
        }
        if (sub_6652( l_U1210[0], l_U174 ))
        {
            sub_1025( "NS", "CleanPed(piGroundWalk[0])", 0 );
            sub_8639( l_U1210[0] );
        }
        if (sub_6652( l_U1210[1], l_U174 ))
        {
            sub_1025( "NS", "CleanPed(piGroundWalk[1])", 0 );
            sub_8639( l_U1210[1] );
        }
        if (sub_6652( l_U1210[2], l_U174 ))
        {
            sub_1025( "NS", "CleanPed(piGroundWalk[2])", 0 );
            sub_8639( l_U1210[2] );
        }
        if (l_U738 == 1)
        {
            if (IS_PED_ON_SCREEN( l_U1132, 0 ))
            {
                l_U738 = 0;
            }
        }
        if (l_U740 == 1)
        {
            if (sub_15837( l_U111 ))
            {
                if (IS_SPHERE_VISIBLE( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U1161 ), 1.00000000, 0 ))
                {
                    sub_38287();
                    l_U740 = 0;
                }
            }
        }
        if (sub_6549( ref l_U153, 0 ))
        {
            g_U775 = 1;
        }
        sub_38420();
        if (sub_38731( ref l_U237, l_U1161, 0 ))
        {
            ISEQ_UNREGISTER_ENTITY( -1980288623, "roof" );
            ISEQ_TERMINATE( -1980288623 );
            sub_8639( l_U1161 );
        }
        if (NOT (sub_7443( ref l_U837 )))
        {
            if (l_U741 == 1)
            {
                if (sub_6549( ref l_U300, 0 ))
                {
                    sub_38912();
                    l_U741 = 0;
                }
            }
        }
        if (l_U736 == 0)
        {
            if (sub_6549( ref l_U132, 0 ))
            {
                sub_25484( l_U1146 );
                if (NOT (IS_PED_DEAD( l_U1146 )))
                {
                    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1146, 0 );
                    TASK_COMBAT_PED( l_U1146, sub_6582() );
                }
            }
        }
        if (l_U745)
        {
            sub_39625();
            sub_40623();
        }
        if (l_U732 == 1)
        {
            if (sub_15837( l_U258 ))
            {
                if (IS_PED_ON_SCREEN( g_U876[0], 0 ))
                {
                    sub_41785();
                    l_U732 = 0;
                    l_U744 = 1;
                }
            }
        }
        if (sub_38731( ref l_U279, g_U876[0], 0 ))
        {
            sub_9176( ref g_U876 );
        }
        if (sub_6549( ref l_U447, 0 ))
        {
            sub_4148( ref g_U1587, 1 );
            if (NOT (IS_PED_DEAD( l_U1216 )))
            {
                sub_24436( l_U1216, l_U1217._fU0, l_U1217._fU12 );
                PED_SET_ACTION_INTENTION( l_U1216, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
            }
        }
        if ((sub_6549( ref l_U468, 0 )) == 1)
        {
            sub_1025( "kja", "Open the window's here - first and second", 0 );
            sub_6323( ref l_U882 );
            sub_4488( ref l_U882, 0, 1, 0 );
            sub_7554( ref l_U882 );
            if (NOT (IS_PED_DEAD( l_U1277 )))
            {
                if (NOT l_U742)
                {
                    PED_SET_ACTION_INTENTION( l_U1277, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
                    PLAY_OBJECT_ANIM( l_U1295, "VIG_00A_F1_FIRST_WINDOW_REACT_shutr_Aa", "LEVEL_S_FAV1_CP_06", 0.00000000, 0, 1 );
                    PLAY_OBJECT_ANIM( l_U1302, "VIG_00A_F1_FIRST_WINDOW_REACT_shutr_Ab", "LEVEL_S_FAV1_CP_06", 0.00000000, 0, 1 );
                }
                else
                {
                    sub_8639( l_U1277 );
                }
            }
            if (NOT (IS_PED_DEAD( l_U1309 )))
            {
                if (NOT l_U742)
                {
                    PED_SET_ACTION_INTENTION( l_U1309, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
                }
                else
                {
                    sub_8639( l_U1309 );
                }
            }
        }
        if ((sub_6549( ref l_U489, 0 )) == 1)
        {
            if (NOT (IS_PED_DEAD( l_U1241 )))
            {
                if (NOT l_U742)
                {
                    PED_SET_ACTION_INTENTION( l_U1241, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
                    PLAY_OBJECT_ANIM( l_U1259, "VIG_00A_F1_SECOND_WINDOW_OPEN_shutr_Aa", "LEVEL_S_FAV1_CP_06", 0.00000000, 0, 1 );
                    PLAY_OBJECT_ANIM( l_U1266, "VIG_00A_F1_SECOND_WINDOW_OPEN_shutr_Ab", "LEVEL_S_FAV1_CP_06", 0.00000000, 0, 1 );
                }
                else
                {
                    sub_8639( l_U1241 );
                }
            }
            l_U757 = 1;
            l_U770 = 1;
        }
        if (l_U770 == 1)
        {
            if (sub_42885() == 1)
            {
                if (NOT (IS_PED_DEAD( l_U1241 )))
                {
                    if (l_U766 == 0)
                    {
                        sub_1025( "kja", "Second Window activated, close shutters now!", 0 );
                        PED_SET_ACTION_INTENTION( l_U1241, 48, 1000, 0.00000000, 0.00000000, 0.00000000 );
                        PLAY_OBJECT_ANIM( l_U1259, "VIG_00A_F1_SECOND_WINDOW_CLOSE_shutr_Aa", "LEVEL_S_FAV1_CP_06", 0.00000000, 0, 1 );
                        PLAY_OBJECT_ANIM( l_U1266, "VIG_00A_F1_SECOND_WINDOW_CLOSE_shutr_Ab", "LEVEL_S_FAV1_CP_06", 0.00000000, 0, 1 );
                        l_U766 = 1;
                    }
                }
            }
        }
        if (l_U757)
        {
            if (NOT (IS_PED_DEAD( sub_6582() )))
            {
                if (NOT (IS_SCRIPTED_SPEECH_PLAYING( sub_6582() )))
                {
                    sub_9493( ref l_U712 );
                    sub_35530( 0, sub_6582(), "MAX", ref l_U712, 2, 0 );
                    sub_35530( 1, sub_6582(), "MAX", ref l_U712, 2, 0 );
                    sub_35769( "SFV1_MXTAGER", ref l_U712, 2, 1 );
                }
            }
            l_U757 = 0;
        }
        if (l_U766 == 1)
        {
            if ((IS_PED_DEAD( l_U1241 )) == 1)
            {
                SET_OBJECT_ANIM_SPEED( l_U1259, "VIG_00A_F1_SECOND_WINDOW_CLOSE_shutr_Aa", "LEVEL_S_FAV1_CP_06", 0.00000000 );
                SET_OBJECT_ANIM_SPEED( l_U1266, "VIG_00A_F1_SECOND_WINDOW_CLOSE_shutr_Ab", "LEVEL_S_FAV1_CP_06", 0.00000000 );
            }
        }
        if ((sub_7443( ref l_U920 )) == 0)
        {
            if (NOT (IS_PED_DEAD( l_U1309 )))
            {
                if (IS_SPHERE_VISIBLE( 9.60000000, -56.57000000, 14.81000000, 1.00000000, 1 ))
                {
                    sub_7554( ref l_U920 );
                }
            }
        }
        if (l_U1341 == 1)
        {
            if (sub_43745() == 1)
            {
                l_U1341 = 0;
            }
        }
        if (NOT l_U742)
        {
            sub_44418( 1 );
        }
        else if (l_U45 == 1)
        {
            sub_6461();
        }
        sub_44831();
        break;
    }
    sub_44854();
    sub_44927();
    return;
}

void sub_13967()
{
    sub_1025( "NS", "P_LOAD_PRE_CUTSCENE_ASSETS()", 0 );
    sub_14034( "MID_05_FAV1", 0 );
    sub_14288( 1197404850, 0 );
    return;
}

void sub_14034(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_14288(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_11577( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_14480()
{
    sub_1025( "SP", "LOAD_ASSETS", "###" );
    sub_14561( "SCRIPT_MISSION\S_FAV1_FIREWORK_LAUNCH", 0 );
    sub_14288( -957257324, 0 );
    sub_14288( 714795075, 0 );
    sub_14288( 1197404850, 0 );
    sub_14288( g_U760, 0 );
    sub_14288( 1037363415, 0 );
    sub_14288( -877134998, 0 );
    sub_14288( -1417400376, 0 );
    sub_14288( l_U1274, 0 );
    sub_14288( l_U1275, 0 );
    sub_14733( 939658976, 0 );
    sub_14733( 1327258126, 0 );
    sub_14733( -1980288623, 0 );
    sub_14733( -695267807, 0 );
    sub_14733( 253844683, 0 );
    sub_14733( -942571757, 0 );
    sub_14733( -1760130878, 0 );
    sub_14288( 508600758, 0 );
    sub_14288( 416428258, 0 );
    sub_14288( -957257324, 0 );
    sub_14733( -1213260108, 0 );
    sub_15048( "SFV1AUD" );
    sub_15173( "EXPL_CAM", 0, 1 );
    SET_PED_MODEL_LOD_DISTANCES( 1197404850, 10.00000000, 300.00000000 );
    return;
}

void sub_14561(unknown uParam0, int iParam1)
{
    LOAD_SCRIPT_AUDIO_BANK( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_14733(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_15048(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_15068();
    return;
}

void sub_15068()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_15173(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_15285()
{
    int Result;

    Result = 0;
    if ((HAS_ANIM_DICT_LOADED( "EXPL_CAM", 0 )) AND (((ISEQ_QUERY_STATE( -1760130878, 2 )) == 1) AND (((ISEQ_QUERY_STATE( -942571757, 2 )) == 1) AND (((ISEQ_QUERY_STATE( 1327258126, 2 )) == 1) AND (((ISEQ_QUERY_STATE( 253844683, 2 )) == 1) AND ((HAS_MODEL_LOADED( l_U1275 )) AND ((HAS_MODEL_LOADED( l_U1274 )) AND ((HAS_MODEL_LOADED( -877134998 )) AND ((HAS_MODEL_LOADED( -957257324 )) AND ((HAS_MODEL_LOADED( 416428258 )) AND ((HAS_MODEL_LOADED( 508600758 )) AND (((ISEQ_QUERY_STATE( -1213260108, 2 )) == 1) AND (((ISEQ_QUERY_STATE( -695267807, 2 )) == 1) AND (((ISEQ_QUERY_STATE( -1980288623, 2 )) == 1) AND (((ISEQ_QUERY_STATE( 939658976, 2 )) == 1) AND ((HAS_WEAPON_LOADED( 1194438308 )) AND ((HAS_WEAPON_LOADED( -1074756423 )) AND ((HAS_MODEL_LOADED( 1037363415 )) AND ((HAS_MODEL_LOADED( 1197404850 )) AND (HAS_MODEL_LOADED( g_U760 )))))))))))))))))))))
    {
        Result = 1;
    }
    return Result;
}

int sub_15640(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    unknown uVar9;

    uVar9 = DOOR_FIND_CLOSEST( uParam0._fU0, uParam0._fU4 );
    if (DOES_OBJECT_EXIST( uVar9 ))
    {
        if (DOOR_GET_IS_AFFECTED_BY_BULLETS( uVar9 ))
        {
            sub_1025( "NS", "Setting door to not react to bullets.", 0 );
            DOOR_SET_IS_AFFECTED_BY_BULLETS( uVar9, 0 );
            return 1;
        }
    }
    return 0;
}

void sub_15837(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_6652( sub_6582(), uParam0 );
}

void sub_16116()
{
    sub_1025( "ns", "P_Create_Roof01", 0 );
    sub_8639( l_U1132 );
    l_U1132 = sub_16169( ref l_U1133 );
    if (NOT (IS_PED_DEAD( l_U1132 )))
    {
        sub_16852( l_U1132, ref l_U1126 );
        sub_11906( l_U1132, g_U1820, 25000, 0, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1132, 1 );
        SET_PED_AI_TEMPLATE( l_U1132, ref g_U1791 );
        SET_PED_COMBAT_MOVEMENT( l_U1132, 2 );
    }
    sub_17353( ref l_U679, l_U1132, 1 );
    SET_PED_NAME_DEBUG( l_U1132, "piRoof01" );
    return;
}

void sub_16169(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_14288( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_16648( iParam0->_fU40 );
    sub_16728( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_16648(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_16728(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_16852(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_11577( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_16995( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_16995( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_16995(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_17353(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

int sub_17580()
{
    unknown uVar2;
    unknown uVar3;
    int iVar4;

    switch (l_U89)
    {
        case 0: break;
        case 1:
        sub_1025( "NS", "CUTSCENE_SETUP", 0 );
        g_U781 = 0;
        if (NOT (IS_PED_DEAD( sub_6582() )))
        {
            CLEAR_PED_PRIMARY_LOOKAT( sub_6582() );
        }
        if (NOT (IS_PLAYER_DEAD( sub_6604() )))
        {
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_6604(), 1 );
        }
        sub_17756( ref l_U1393, 1, 0 );
        l_U1391 = sub_19015();
        if ((sub_19223( l_U1391 )) == 1)
        {
            sub_1025( "kja", "RIGHT HOLSTER", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U1391, "w_pi_des_aa_h", 0 );
        }
        else
        {
            sub_1025( "kja", "LEFT HOLSTER", 0 );
            sub_17756( ref l_U1393, 0, 0 );
            l_U1391 = GET_WEAPON_FROM_HOLSTER( sub_6582(), 1 );
            if ((sub_19223( l_U1391 )) == 1)
            {
                sub_1025( "kja", "First weapon was a dbrlshotty, so we switch hands and now we're good", 0 );
                SELECT_WEAPON_TO_HAND( sub_6582(), l_U1391, 0, 0 );
                REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U1391, "w_pi_des_aa_h", 0 );
            }
            else
            {
                sub_1025( "kja", "First weapon was a dbrlshotty, so we switch hands and now we've equipped another shotty, let's hide everything", 0 );
                HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE( sub_6582(), 1 );
                l_U735 = 1;
            }
        }
        if (NOT (IS_PED_DEAD( sub_6582() )))
        {
            SELECT_WEAPON_TO_HAND( sub_6582(), l_U1391, 0, 0 );
            SET_PLAYER_CONTROL( sub_6604(), 0, 0 );
        }
        sub_4488( ref l_U900, 250, 1, 0 );
        sub_7554( ref l_U900 );
        l_U89 = 2;
        break;
        case 2:
        if (sub_7672( ref l_U900 ))
        {
            REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U1559._fU0, g_U1559._fU4 ), "p_f1_trainDoorB", 0 );
            REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U1552._fU0, g_U1552._fU4 ), "p_f1_trainDoorA", 0 );
            if (NOT (IS_PED_DEAD( l_U1132 )))
            {
                REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1132, "M_F1_MISC_F", 0 );
                CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U1132, "/Global/AMED/AMED_Root/AMED_INITIALIZE_LOCO" );
                CUTSCENE_REGISTER_PED_TELEPORT( l_U1132, l_U1133._fU0, l_U1133._fU12 );
            }
            if (NOT (IS_PED_DEAD( sub_6582() )))
            {
                CUTSCENE_REGISTER_PED_TELEPORT( sub_6582(), g_U1050[6], g_U1174[6] );
            }
            if (NOT (IS_PED_DEAD( sub_6582() )))
            {
                CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_6582(), "Global/Player/PlayerRoot/PLAYER_INITIALIZE_LOCO" );
                CUTSCENE_REGISTER_PED_TELEPORT( sub_6582(), g_U1050[6], g_U1174[6] );
                SET_PLAYER_CONTROL( sub_6604(), 1, 0 );
            }
            CUTSCENE_ENABLE_SKIP( 0 );
            START_SEAMLESS_CUTSCENE();
            l_U89 = 3;
        }
        break;
        case 3:
        sub_1025( "SP", "eOpeningCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        sub_20425( 1, 0, 0, 1 );
        if (IS_SCREEN_FADED_OUT())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        l_U89 = 4;
        sub_1025( "SP", "eOpeningCutsceneState = CUTSCENE_PLAYING", 0 );
        break;
        case 4:
        if (HAS_CUTSCENE_FINISHED() == 1)
        {
            if (l_U760 == 1)
            {
                if (l_U761 == 0)
                {
                    sub_14480();
                    l_U761 = 1;
                }
                l_U87 = 1;
            }
            CLEAR_NAMED_CUTSCENE( "MID_05_FAV1" );
            sub_8718( l_U1392 );
            if (NOT (IS_PED_DEAD( sub_6582() )))
            {
                SET_PLAYER_CONTROL( sub_6604(), 0, 0 );
            }
            if (NOT (IS_PED_DEAD( sub_6582() )))
            {
                SET_PLAYER_CONTROL( sub_6604(), 0, 0 );
            }
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1216[6], 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1258[6], 1065353216, 0 );
            sub_4354( ref g_U1552, 1 );
            sub_4354( ref g_U1559, 1 );
            sub_4488( ref l_U891, 2500, 1, 0 );
            sub_7554( ref l_U891 );
            l_U89 = 0;
            return 1;
        }
        else
        {
            uVar2 = GET_CUTSCENE_SECTION_PLAYING();
            uVar3 = GET_CUTSCENE_TIME();
            iVar4 = GET_CUTSCENE_TIME_MS();
            if ((IS_SCREEN_FADED_OUT() == 1) || (IS_SCREEN_FADING_OUT() == 1))
            {
                CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
                l_U760 = 1;
            }
            if (l_U761 == 0)
            {
                if (iVar4 >= 6000)
                {
                    sub_14480();
                    l_U761 = 1;
                }
            }
            if (l_U761 == 1)
            {
                if (l_U735 == 1)
                {
                    l_U1391 = GET_WEAPON_FROM_HOLSTER( sub_6582(), 0 );
                    if ((GET_DOES_WEAPON_EXIST( l_U1391 )) == 1)
                    {
                        SELECT_WEAPON_TO_HAND( sub_6582(), l_U1391, 0, 1 );
                    }
                    else
                    {
                        l_U1391 = GET_WEAPON_FROM_HOLSTER( sub_6582(), 1 );
                        SELECT_WEAPON_TO_HAND( sub_6582(), l_U1391, 0, 1 );
                    }
                    l_U735 = 0;
                }
            }
            if (l_U762 == 0)
            {
                if (l_U761 == 1)
                {
                    if (sub_15285() == 1)
                    {
                        sub_1025( "NS", "Gameplay assets are loaded!!!", 0 );
                        CUTSCENE_ENABLE_SKIP( 1 );
                        l_U762 = 1;
                    }
                }
            }
            if (l_U763 == 0)
            {
                if (l_U762 == 1)
                {
                    sub_21263();
                    sub_21957();
                    sub_22331();
                    sub_22874();
                    sub_23137();
                    sub_24041();
                    l_U763 = 1;
                }
            }
        }
        break;
        case 5: break;
    }
    return 0;
}

void sub_17756(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

    sub_17768( iParam0 );
    if ((IS_PED_DEAD( sub_6582() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND( sub_6582(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if ((sub_17947( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if ((sub_18175( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND( sub_6582(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER( sub_6582(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER( sub_6582(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER( sub_6582(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD( sub_6582() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND( sub_6582(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_6582(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND( sub_6582(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_6582(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD( sub_6582() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND( sub_6582(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if ((sub_18175( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND( sub_6582(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND( sub_6582(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_6582(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

void sub_17768(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

int sub_17947(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_18175(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_19015()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_6582() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_6582(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_17947( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_6582(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_6582(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_6582(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

int sub_19223(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_20425(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_6582() )))
        {
            SET_PLAYER_CONTROL( sub_6604(), 0, uParam2 );
            SET_PED_DUCKING( sub_6582(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_6582() );
            }
            SET_PED_INVINCIBLE( sub_6582(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_21263()
{
    sub_1025( "CO", "P_CREATE_S_FV1_GG_SP_01", 0 );
    sub_21363( ref g_U703, g_U760, -522027362, -1923321353, 43.06000000, -86.55000000, 0.93000000, 1.50000000, 0.00000000, 1.00000000, "" );
    sub_21492( ref g_U703 );
    return;
}

void sub_21363(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_1025( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_21492(int iParam0)
{
    sub_1025( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_21553( iParam0->_fU12 )) == 1)
        {
            sub_1025( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_1025( "CO", "has never been collected.", 0 );
        }
        if ((sub_21553( iParam0->_fU12 )) == 0)
        {
            sub_9336( iParam0->_fU0 );
            iParam0->_fU0 = sub_4692( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_1025( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_1025( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_21553(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_21957()
{
    sub_1025( "NS", "P_Create_WaterBarell_Roof", 0 );
    sub_8639( l_U1146 );
    l_U1146 = sub_16169( ref l_U1147 );
    if (NOT (IS_PED_DEAD( l_U1146 )))
    {
        SET_BULLET_CAM_PREF( l_U1146, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", "", 0, 0, 0, 0, 0, 0, 0, 0 );
        sub_16852( l_U1146, ref l_U1126 );
        sub_11906( l_U1146, g_U1820, 25000, 0, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1146, 1 );
        SET_PED_AI_TEMPLATE( l_U1146, ref g_U1791 );
    }
    sub_17353( ref l_U681, l_U1146, 1 );
    sub_22194( l_U1146 );
    SET_PED_NAME_DEBUG( l_U1146, "piWaterBarellRoof" );
    return;
}

void sub_22194(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_22331()
{
    int I;

    sub_1025( "NS", "P_Create_Balcony02", 0 );
    sub_1150( ref l_U1168[0], 11.32000000, -71.55000000, 10.38000000, 104.73000000, 784279835, 7, 3, 2, 0, 0 );
    sub_1150( ref l_U1168[1], 10.36000000, -72.65000000, 10.32000000, 12.40000000, -1158921002, 7, 3, 2, 0, 0 );
    sub_1150( ref l_U1168[2], 8.02000000, -73.20000000, 10.33000000, -76.41000000, 2081576018, 7, 3, 2, 0, 0 );
    for ( I = 0; I < 3; I++ )
    {
        sub_8639( l_U1164[I] );
        l_U1164[I] = sub_16169( ref l_U1168[I] );
        if (NOT (IS_PED_DEAD( l_U1164[I] )))
        {
            FREEZE_PED_POSITION( l_U1164[I], 1 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1164[I], 1 );
            if (NOT (IS_PED_DEAD( sub_6582() )))
            {
                REGISTER_TARGET( l_U1164[I], sub_6582() );
            }
        }
    }
    if (NOT (IS_PED_DEAD( l_U1164[2] )))
    {
        SET_PED_AS_ONE_SHOT_KILL( l_U1164[2], 1 );
    }
    sub_22698( ref l_U1164 );
    sub_22772( ref l_U1164, "piVig24Enemy" );
    return;
}

void sub_22698(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_22194( (uParam0^)[I] );
    }
    return;
}

void sub_22772(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_22874()
{
    sub_1025( "SP", "P_SETUP_BRIDGE_STAIRS", "###" );
    sub_8639( g_U876[0] );
    g_U876[0] = sub_16169( ref g_U863 );
    if (((IS_PED_DEAD( g_U876[0] )) == 0) AND ((DOES_PED_EXIST( g_U876[0] )) == 1))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U876[0], 1 );
        SET_PED_NAME_DEBUG( g_U876[0], "piBridgeStairsEnemy" );
        SET_PED_AI_TEMPLATE( g_U876[0], ref g_U1791 );
        SET_PED_AS_ONE_SHOT_KILL( g_U876[0], 1 );
        sub_16852( g_U876[0], ref l_U1126 );
    }
    sub_11906( g_U876[0], g_U1820, 25000, 0, 0 );
    g_U779 = 1;
    return;
}

void sub_23137()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    vector vVar15;
    vector vVar18;
    vector vVar21;

    sub_1025( "NS", "P_Create_Roof_Final", 0 );
    sub_1150( ref uVar2, 1.24000000, -44.98000000, 17.81000000, -170.00000000, -411938958, 7, 3, 2, 0, 0 );
    l_U1161 = sub_16169( ref uVar2 );
    if (NOT (IS_PED_DEAD( l_U1161 )))
    {
        sub_16852( l_U1161, ref l_U1126 );
        SET_PED_AS_ONE_SHOT_KILL( l_U1161, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1161, 1 );
        SET_PED_AI_TEMPLATE( l_U1161, ref g_U1791 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U1161, 1 );
        SET_BULLET_CAM_PREF( l_U1161, "ALL_LMS_01", "ALL_LMS_01", "ALL_LMS_01", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
    }
    SET_PED_NAME_DEBUG( l_U1161, "piVig24BEnemy" );
    vVar15 = {0.07300000, 0.02500000, -0.06000000};
    vVar18 = {3.14200000, 0.00000000, 0.00000000};
    vVar21 = {2.70489700, -41.73405000, 17.51681000};
    sub_8718( l_U1162 );
    l_U1162 = sub_23500( 508600758, vVar15, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( l_U1162 )) == 1)
    {
        if (((IS_PED_DEAD( l_U1161 )) == 0) AND ((DOES_PED_EXIST( l_U1161 )) == 1))
        {
            ATTACH_OBJECT_TO_PED( l_U1162, l_U1161, 25310, vVar15, vVar18, 0 );
        }
    }
    sub_8718( l_U1163 );
    l_U1163 = sub_23500( 416428258, vVar21, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( l_U1163 )) == 1)
    {
        if (((IS_PED_DEAD( l_U1161 )) == 0) AND ((DOES_PED_EXIST( l_U1161 )) == 1))
        {
            ATTACH_OBJECT_TO_PED( l_U1163, l_U1161, 25310, vVar15, vVar18, 0 );
            SET_OBJECT_VISIBLE( l_U1163, 0 );
        }
    }
    ISEQ_REGISTER_ENTITY( -1980288623, "roof", l_U1161, 0 );
    ISEQ_START( -1980288623 );
    if (NOT (IS_PED_DEAD( l_U1161 )))
    {
        TASK_GO_STRAIGHT_TO_COORD( l_U1161, -6.02000000, -40.95000000, 17.63000000, 3, -1 );
    }
    return;
}

void sub_23500(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_14288( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_24041()
{
    unknown[1] uVar2;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    int I;

    sub_1025( "NS", "P_CREATE_JUMP_DOWN()", 0 );
    array(ref uVar2, 1);
    sub_1150( ref uVar2[0], 22.92000000, -90.85000000, 11.62000000, -103.70000000, 1480053795, 7, 3, 2, 0, 0 );
    sub_9176( ref l_U1214 );
    for ( I = 0; I < 1; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U1214[I] )))
        {
            SET_PED_AI_TEMPLATE( l_U1214[I], ref g_U1791 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1214[I], 1 );
        }
        sub_16852( l_U1214[0], ref l_U1126 );
        sub_11906( l_U1214[I], g_U1820, 25000, 0, 0 );
        sub_17353( ref l_U680, l_U1214[I], 1 );
    }
    sub_22698( ref l_U1214 );
    sub_22772( ref l_U1214, "piJumpDown" );
    return;
}

void sub_24374()
{
    sub_1025( "rw", "P_RUN_BLENDOUT()", 0 );
    sub_24436( sub_6582(), g_U1050[6], g_U1174[6] );
    sub_4148( ref g_U1552, 0 );
    sub_4148( ref g_U1559, 0 );
    sub_24524( ref g_U1552, 0, 1, 0.60000000 );
    sub_24524( ref g_U1559, 0, 1, 0.60000000 );
    sub_24722( ref l_U938, 64.07000000, -93.90000000, 2.84000000, 0, 0, 91.85190000, 45, 1000 );
    sub_24931( ref l_U938 );
    if (NOT (IS_PLAYER_DEAD( sub_6604() )))
    {
        if (NOT (IS_PED_DEAD( sub_6582() )))
        {
            SET_PLAYER_CONTROL( sub_6604(), 0, 0 );
            SIMULATE_PLAYER_INPUT_GAIT( sub_6604(), 2, 2500, 0 );
            DISPLAY_HUD( 0 );
        }
    }
    l_U743 = 1;
    sub_4354( ref g_U1552, 1 );
    sub_4354( ref g_U1559, 1 );
    sub_4488( ref l_U891, 2500, 1, 0 );
    sub_7554( ref l_U891 );
    return;
}

void sub_24436(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_24524(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_4160( iParam0 )) == 0)
    {
        sub_4226( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

void sub_24722(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_4488( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref l_U15, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_24931(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_7554( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

void sub_25147()
{
    sub_1025( "SP", "P_START_GAMEPLAY", "###" );
    SET_WEATHER_TYPE_NOW_PERSIST( "Sunny" );
    FREEZE_TIME_OF_DAY( 12, 0 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    if (l_U763 == 0)
    {
        sub_21263();
        sub_16116();
        sub_21957();
        sub_22331();
        sub_22874();
        sub_23137();
        sub_24041();
        l_U763 = 1;
    }
    sub_25278();
    sub_25435();
    sub_25708();
    sub_26138();
    sub_26573();
    sub_27330();
    sub_4354( ref g_U1552, 0 );
    sub_4354( ref g_U1559, 0 );
    sub_4148( ref g_U1552, 1 );
    sub_4148( ref g_U1559, 1 );
    sub_24524( ref g_U1573, 1, 1, 1065353216 );
    l_U745 = 1;
    if (NOT (IS_PED_DEAD( sub_6582() )))
    {
        FREEZE_PED_POSITION( sub_6582(), 0 );
        SET_PED_FORCED_TO_WALK( sub_6582(), 0 );
        SET_CAN_ROLL_DODGE( sub_6582(), 1 );
    }
    DO_SCREEN_FADE_IN( 0 );
    l_U1411 = 1;
    return;
}

void sub_25278()
{
    int I;

    sub_1025( "NS", "P_ACTION_GROUND_WALK()", 0 );
    for ( I = 0; I < 3; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U1210[I] )))
        {
            TASK_GO_TO_COORD_WHILE_AIMING_AT_COORD( l_U1210[I], 28.92000000, -84.19000000, 2.51000000, 28.92000000, -84.19000000, 2.51000000, 2, 0, 1056964608, 0, 1, 0 );
        }
    }
    return;
}

void sub_25435()
{
    sub_1025( "NS", "p_Double_jump_Action", 0 );
    sub_25484( l_U1342 );
    if (NOT (IS_PED_DEAD( l_U1342 )))
    {
        OPEN_SEQUENCE_TASK( ref l_U1125 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_ATTACK_MOVE( 0, 20.91000000, -78.23000000, 12.31000000, 1092616192, 1101004800, -1082130432, 3 );
        CLOSE_SEQUENCE_TASK( l_U1125 );
        TASK_PERFORM_SEQUENCE( l_U1342, l_U1125 );
        CLEAR_SEQUENCE_TASK( l_U1125 );
    }
    return;
}

void sub_25484(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_25708()
{
    sub_1025( "NS", "P_CREATE_S_FAV1_MID_FAV_SECOND_DOOR()", 0 );
    sub_8639( l_U1216 );
    l_U1216 = sub_16169( ref l_U1217 );
    SET_PED_NAME_DEBUG( l_U1216, "piMID_FAV_SECOND_DOOR__" );
    sub_25836( ref g_U1587, 0 );
    sub_8718( l_U1234 );
    l_U1234 = sub_23500( 714795075, l_U1235, l_U1238, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U1234 ))
    {
        FREEZE_OBJECT_POSITION( l_U1234, 1 );
    }
    if ((IS_GERMAN_VERSION() == 1) || (IS_JAPANESE_GAME() == 1))
    {
        SET_PED_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP( l_U1216, 0, 0 );
        SET_PED_GORE_FROM_PLAYER( l_U1216, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1216 )))
    {
        SET_PED_AS_ONE_SHOT_KILL( l_U1216, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1216, 1 );
        ISEQ_REGISTER_ENTITY( -1213260108, "CIV", l_U1216, 0 );
        ISEQ_REGISTER_ENTITY( -1213260108, "DOOR", l_U1234, 1 );
        ISEQ_START( -1213260108 );
    }
    return;
}

void sub_25836(int iParam0, unknown uParam1)
{
    if ((sub_4160( iParam0 )) == 0)
    {
        sub_4226( iParam0 );
    }
    DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( iParam0->_fU0, iParam0->_fU4 ), uParam1 );
    return;
}

void sub_26138()
{
    sub_1025( "NS", "P_Create_S_FAV1_VIG_00A_SECOND_WINDOW()", 0 );
    sub_8639( l_U1241 );
    l_U1241 = sub_16169( ref l_U1242 );
    SET_PED_NAME_DEBUG( l_U1241, "pi00ASecondWindow" );
    sub_8718( l_U1259 );
    l_U1259 = sub_23500( l_U1274, l_U1260, l_U1263, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U1259 ))
    {
        FREEZE_OBJECT_POSITION( l_U1259, 1 );
    }
    sub_8718( l_U1266 );
    l_U1266 = sub_23500( l_U1275, l_U1268, l_U1271, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U1266 ))
    {
        FREEZE_OBJECT_POSITION( l_U1266, 1 );
    }
    if ((IS_GERMAN_VERSION() == 1) || (IS_JAPANESE_GAME() == 1))
    {
        SET_PED_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP( l_U1241, 0, 0 );
        SET_PED_GORE_FROM_PLAYER( l_U1241, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1241 )))
    {
        if ((IS_PED_DEAD( sub_6582() )) == 0)
        {
            SET_PED_PRIMARY_LOOKAT( l_U1241, sub_6582() );
        }
        SET_PED_AS_ONE_SHOT_KILL( l_U1241, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1241, 1 );
        ISEQ_REGISTER_ENTITY( 253844683, "CIV", l_U1241, 0 );
        ISEQ_START( 253844683 );
    }
    return;
}

void sub_26573()
{
    sub_1025( "NS", "P_Create_S_FAV1_VIG_00A_FIRST_WINDOW()", 0 );
    sub_8639( l_U1277 );
    l_U1277 = sub_16169( ref l_U1278 );
    SET_PED_NAME_DEBUG( l_U1277, "pi00AFirstWindow__" );
    sub_8718( l_U1295 );
    l_U1295 = sub_23500( l_U1274, l_U1296, l_U1299, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U1295 ))
    {
        FREEZE_OBJECT_POSITION( l_U1295, 1 );
    }
    sub_8718( l_U1302 );
    l_U1302 = sub_23500( l_U1275, l_U1303, l_U1306, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U1302 ))
    {
        FREEZE_OBJECT_POSITION( l_U1302, 1 );
    }
    if ((IS_GERMAN_VERSION() == 1) || (IS_JAPANESE_GAME() == 1))
    {
        SET_PED_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP( l_U1277, 0, 0 );
        SET_PED_GORE_FROM_PLAYER( l_U1277, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1277 )))
    {
        SET_PED_AS_ONE_SHOT_KILL( l_U1277, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1277, 1 );
        if ((IS_PED_DEAD( sub_6582() )) == 0)
        {
            SET_PED_PRIMARY_LOOKAT( l_U1277, sub_6582() );
        }
        ISEQ_REGISTER_ENTITY( -942571757, "CIV", l_U1277, 0 );
        PLAY_OBJECT_ANIM( l_U1295, "VIG_00A_F1_FIRST_WINDOW_REACT_shutr_Aa", "LEVEL_S_FAV1_CP_06", 0.00000000, 0, 1 );
        PLAY_OBJECT_ANIM( l_U1302, "VIG_00A_F1_FIRST_WINDOW_REACT_shutr_Ab", "LEVEL_S_FAV1_CP_06", 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( l_U1295, "VIG_00A_F1_FIRST_WINDOW_REACT_shutr_Aa", "LEVEL_S_FAV1_CP_06", 0.00000000 );
        SET_OBJECT_ANIM_SPEED( l_U1302, "VIG_00A_F1_FIRST_WINDOW_REACT_shutr_Ab", "LEVEL_S_FAV1_CP_06", 0.00000000 );
        ISEQ_START( -942571757 );
    }
    return;
}

void sub_27330()
{
    sub_1025( "NS", "P_CREATE_S_FAV1_VIG_00A_THIRD_WINDOW()", 0 );
    sub_8639( l_U1309 );
    l_U1309 = sub_16169( ref l_U1310 );
    sub_8718( l_U1327 );
    l_U1327 = sub_23500( l_U1274, l_U1328, l_U1331, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U1327 ))
    {
        FREEZE_OBJECT_POSITION( l_U1327, 1 );
    }
    sub_8718( l_U1334 );
    l_U1334 = sub_23500( l_U1275, l_U1335, l_U1338, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U1334 ))
    {
        FREEZE_OBJECT_POSITION( l_U1334, 1 );
    }
    if ((IS_GERMAN_VERSION() == 1) || (IS_JAPANESE_GAME() == 1))
    {
        SET_PED_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP( l_U1309, 0, 0 );
        SET_PED_GORE_FROM_PLAYER( l_U1309, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1309 )))
    {
        SET_PED_AS_ONE_SHOT_KILL( l_U1309, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1309, 1 );
        if ((IS_PED_DEAD( sub_6582() )) == 0)
        {
            SET_PED_PRIMARY_LOOKAT( l_U1309, sub_6582() );
            SET_PED_NAME_DEBUG( l_U1309, "pi00AThirdWindow" );
        }
        ISEQ_REGISTER_ENTITY( -1760130878, "CIV", l_U1309, 0 );
        PLAY_OBJECT_ANIM( l_U1327, "VIG_00A_F1_THIRD_WINDOW_IDLE_shutr_Aa", "LEVEL_S_FAV1_CP_06", 0.00000000, 0, 1 );
        PLAY_OBJECT_ANIM( l_U1334, "VIG_00A_F1_THIRD_WINDOW_IDLE_shutr_Ab", "LEVEL_S_FAV1_CP_06", 0.00000000, 0, 1 );
        ISEQ_START( -1760130878 );
    }
    return;
}

int sub_28082(unknown uParam0)
{
    sub_1025( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_9708( uParam0, sub_6582() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_28379(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_1025( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_1025( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_12560( iParam1 );
        sub_28638( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_29089( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_29089( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_29321( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_29089( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_29321( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_29321( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_29089( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_29321( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_29321( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_29321( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_29089( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_29321( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_29321( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_29321( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_29321( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_30879( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_1025( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_28638(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_9924( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_1025( "TEH", "Ending context", 0 );
        sub_1025( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_29089(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_29321(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_30879(int iParam0)
{
    sub_11577( "CHECKPOINT DATA" );
    sub_30918( iParam0->_fU4 );
    sub_30941( iParam0->_fU16 );
    sub_30941( iParam0->_fU20 );
    sub_30941( iParam0->_fU24 );
    sub_30984( iParam0->_fU28 );
    sub_30984( iParam0->_fU56 );
    sub_30984( iParam0->_fU60 );
    sub_30984( iParam0->_fU64 );
    sub_30984( iParam0->_fU68 );
    sub_30984( iParam0->_fU72 );
    sub_30984( iParam0->_fU76 );
    sub_30984( iParam0->_fU80 );
    sub_30984( iParam0->_fU84 );
    sub_30984( iParam0->_fU88 );
    sub_30984( iParam0->_fU92 );
    sub_30941( iParam0->_fU32 );
    sub_30984( iParam0->_fU36 );
    sub_30984( iParam0->_fU40 );
    sub_30984( iParam0->_fU44 );
    sub_30941( iParam0->_fU136 );
    sub_31189( iParam0->_fU140 );
    sub_30984( iParam0->_fU52 );
    sub_11577( "---nRightHolsterAttachmentEnabled: " );
    sub_30984( iParam0->_fU96 );
    sub_11577( "---nRightHolsterAttachmentToggled: " );
    sub_30984( iParam0->_fU100 );
    sub_11577( "---nLeftHolsterAttachmentEnabled: " );
    sub_30984( iParam0->_fU104 );
    sub_11577( "---nLeftHolsterAttachmentToggled: " );
    sub_30984( iParam0->_fU108 );
    sub_11577( "---nRifleHolsterAttachmentEnabled: " );
    sub_30984( iParam0->_fU112 );
    sub_11577( "---nRifleHolsterAttachmentToggled: " );
    sub_30984( iParam0->_fU116 );
    sub_11577( "---nRightHandAttachmentEnabled: " );
    sub_30984( iParam0->_fU120 );
    sub_11577( "---nRightHandAttachmentToggled: " );
    sub_30984( iParam0->_fU124 );
    sub_11577( "---nLeftHandAttachmentEnabled: " );
    sub_30984( iParam0->_fU128 );
    sub_11577( "---nLeftHandAttachmentToggled: " );
    sub_30984( iParam0->_fU132 );
    sub_30984( l_U1 );
    sub_30984( 144 );
    return;
}

void sub_30918(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_30941(unknown uParam0)
{
    return;
}

void sub_30984(unknown uParam0)
{
    return;
}

void sub_31189(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

int sub_32015(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || (sub_7672( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || (sub_7672( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_32169(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

void sub_32307(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_6582() )))
    {
        SET_PLAYER_CONTROL( sub_6604(), 1, 0 );
        SET_PED_INVINCIBLE( sub_6582(), 0 );
        if (bParam0)
        {
            sub_32388();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_32388()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_6582() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_6582(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_6582(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_6582(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_6582(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_32603(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
    sub_32645( iParam0 );
    return;
}

void sub_32645(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_32706( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_32706( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_32706(int iParam0)
{
    if (((IS_PED_DEAD( sub_6582() )) == 0) AND ((IS_PLAYER_DEAD( sub_6604() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_6582() )) == 1) || (((IS_PED_GETTING_UP( sub_6582() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_6582() )) == 1) || (((IS_PED_IN_COVER( sub_6582() )) == 1) || (((IS_PED_DUCKING( sub_6582() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_6582() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

int sub_33040(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_6582() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_6582() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_6652( sub_6582(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_6652( sub_6582(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_32645( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_32706( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_33922() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_33999( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_5424( iParam0, 0 );
                            sub_34070( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_5424( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_6582() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_6582(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_5424( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_34070( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_6582() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_6582(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_6582() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_6582(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_6582() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_6582(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_5424( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_34070( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_6582() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_6582() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_6582() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_6582(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_34070( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

int sub_33922()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

void sub_33999(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_5424( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_5424( iParam0, 0 );
        sub_34070( iParam0, 0 );
        if ((IS_PED_DEAD( sub_6582() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_6582() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_6582(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_34070(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_32645( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_35218(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

void sub_35315(int iParam0, unknown uParam1)
{
    if (NOT (sub_35329( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

boolean sub_35329(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_35530(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_35769(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_35793( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_35793(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_35848( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_35848(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_35883( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_36377( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_35883(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_36377(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

int sub_36553(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND ((sub_36565( iParam0 )) == 0)))
    {
        if ((sub_33922() == 1) AND (((IS_PED_RELOADING( sub_6582() )) == 0) AND (((IS_PED_GETTING_UP( sub_6582() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP( sub_6582() )) == 0) AND (((IS_PED_IN_COVER( sub_6582() )) == 0) AND (((IS_PED_DUCKING( sub_6582() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_36565(int iParam0)
{
    return iParam0->_fU56;
}

void sub_37014()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    sub_1025( "GA", "P_Balcony02_EnterCombat_Enemy0 start", 0 );
    if ((NOT (IS_PED_DEAD( sub_6582() ))) AND (NOT (IS_PED_DEAD( l_U1164[0] ))))
    {
        uVar2 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_6582() )};
        if (uVar2._fU4 < -67.00000000)
        {
            sub_24436( l_U1164[0], 8.06700000, -60.30000000, 10.20000000, -90.00000000 );
            REGISTER_TARGET( l_U1164[0], sub_6582() );
            OPEN_SEQUENCE_TASK( ref uVar5 );
            TASK_ATTACK_MOVE( 0, 13.89000000, -66.83000000, 7.70000000, 5, -1, -1082130432, 3 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0, sub_6582() );
            CLOSE_SEQUENCE_TASK( uVar5 );
            TASK_PERFORM_SEQUENCE( l_U1164[0], uVar5 );
            CLEAR_SEQUENCE_TASK( uVar5 );
        }
        else
        {
            sub_8639( l_U1164[0] );
        }
    }
    sub_1025( "GA", "P_Balcony02_EnterCombat_Enemy0 end", 0 );
    return;
}

void sub_37392()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;

    sub_1025( "GA", "P_Balcony02_EnterCombat_Enemy1 start", 0 );
    if ((NOT (IS_PED_DEAD( sub_6582() ))) AND (NOT (IS_PED_DEAD( l_U1164[1] ))))
    {
        uVar2 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_6582() )};
        if (uVar2._fU4 < -67.00000000)
        {
            sub_24436( l_U1164[1], 9.91000000, -61.88000000, 9.80000000, -90.00000000 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1164[1], 0 );
            SET_PED_FLAG_LOCK_TO_COVER( l_U1164[1], 1 );
            REGISTER_TARGET( l_U1164[1], sub_6582() );
            TASK_COMBAT_SNAP_TO_COVER( l_U1164[1], "fav1_lfv", "Corner_Position12", sub_6582() );
        }
        else
        {
            sub_8639( l_U1164[1] );
        }
    }
    sub_1025( "GA", "P_Balcony02_EnterCombat_Enemy1 end", 0 );
    return;
}

void sub_38287()
{
    sub_1025( "NS", "P_Roof_Final_Run_Away()", 0 );
    if (NOT (IS_PED_DEAD( l_U1161 )))
    {
        PED_SET_ACTION_INTENTION( l_U1161, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    }
    return;
}

void sub_38420()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;

    if (l_U979 == 1)
    {
        if (NOT (IS_PED_DEAD( l_U1161 )))
        {
            if ((PED_GET_ACTION_INTENTION_STATUS( l_U1161, 48 )) == 3)
            {
                sub_1025( "SP", "Shooting Fireworks...", 0 );
                PED_FINISH_ACTION_INTENTION( l_U1161, 48 );
                AUDIO_MUSIC_FORCE_TRACK( "FAVELA_ONE_SONG", "FAV_ONE_1", "", 0.00000000, 12000, 0, -1082130432, 0 );
                if ((DOES_OBJECT_EXIST( l_U1163 )) == 1)
                {
                    uVar2 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( l_U1163 )};
                    PLAY_SOUND_FROM_OBJECT( -1, "S_FAV1_FIREWORK_LAUNCH", l_U1163 );
                    START_PARTICLE_FX_NON_LOOPED_ON_OBJECT( "Firework_Launch", l_U1163, l_U980, l_U983, 1.00000000 );
                    l_U979 = 0;
                }
            }
        }
    }
    return;
}

void sub_38731(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 = sub_6652( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

void sub_38912()
{
    int I;

    sub_1025( "NS", "P_Balcony02_Convo()", 0 );
    sub_38959( ref l_U1164 );
    sub_9493( ref l_U702 );
    sub_39043( 1, l_U1164[0], 784279835, ref l_U702, 4, 0 );
    sub_39043( 2, l_U1164[1], -1158921002, ref l_U702, 4, 0 );
    sub_39043( 3, l_U1164[2], 2081576018, ref l_U702, 4, 0 );
    sub_35769( "SFV1_VIG24A", ref l_U702, 8, 1 );
    ISEQ_REGISTER_ENTITY( -695267807, "GMED", l_U1164[0], 0 );
    ISEQ_REGISTER_ENTITY( -695267807, "GMED1", l_U1164[1], 0 );
    ISEQ_REGISTER_ENTITY( -695267807, "GMED2", l_U1164[2], 0 );
    ISEQ_START( -695267807 );
    for ( I = 0; I < 3; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U1164[I] )))
        {
            FREEZE_PED_POSITION( l_U1164[I], 0 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( l_U1164[I], 7.53000000, -63.84000000, 10.41000000, 3, 20000, 1048576000, 0, 0 );
        }
    }
    return;
}

void sub_38959(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_25484( (uParam0^)[I] );
    }
    return;
}

void sub_39043(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = uParam2;
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_39625()
{
    if (l_U736)
    {
        if (NOT (IS_PED_DEAD( sub_6582() )))
        {
            if (HAS_SHOT_BEEN_FIRED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_6582() ), 3.00000000, 1, ref l_U1209 ))
            {
                sub_1025( "NS", "player_shot", 0 );
                sub_4488( ref l_U828, 1500, 1, 0 );
                sub_7554( ref l_U828 );
                sub_4488( ref l_U837, 500, 1, 0 );
                sub_7554( ref l_U837 );
                l_U736 = 0;
            }
        }
    }
    if (sub_7672( ref l_U837 ))
    {
        sub_39788();
    }
    return;
}

void sub_39788()
{
    sub_1025( "ns", "Player Shot Activate Roofers", 0 );
    if (NOT (IS_PED_DEAD( sub_6582() )))
    {
        sub_25484( l_U1132 );
        if (NOT (IS_PED_DEAD( l_U1132 )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1132, 0 );
            TASK_COMBAT_PED( l_U1132, sub_6582() );
        }
    }
    sub_39916();
    sub_40133();
    sub_40541();
    return;
}

void sub_39916()
{
    sub_1025( "NS", "P_ACTION_JUMP_DOWN()", 0 );
    sub_38959( ref l_U1214 );
    if (NOT (IS_PED_DEAD( sub_6582() )))
    {
        if (NOT (IS_PED_DEAD( l_U1214[0] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U1125 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_ATTACK_MOVE( 0, 25.04000000, -93.56000000, 11.62000000, 1092616192, 1101004800, -1082130432, 3 );
            TASK_COMBAT_PED( 0, sub_6582() );
            CLOSE_SEQUENCE_TASK( l_U1125 );
            TASK_PERFORM_SEQUENCE( l_U1214[0], l_U1125 );
            CLEAR_SEQUENCE_TASK( l_U1125 );
        }
    }
    return;
}

void sub_40133()
{
    int I;

    sub_1025( "NS", "P_Balcony02_Fight()", 0 );
    sub_38959( ref l_U1164 );
    sub_11906( l_U1164[0], g_U1820, 25000, 0, 0 );
    sub_11906( l_U1164[1], g_U1820, 25000, 0, 0 );
    sub_11906( l_U1164[2], g_U1820, 25000, 0, 0 );
    for ( I = 0; I < 3; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U1164[I] )))
        {
            FREEZE_PED_POSITION( l_U1164[I], 0 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( l_U1164[I], 7.53000000, -63.84000000, 10.41000000, 3, 20000, 1048576000, 0, 0 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U1164[0] )))
    {
        PED_SET_ACTION_INTENTION( l_U1164[0], 47, 10000, 0.00000000, 0.00000000, 0.00000000 );
    }
    if (NOT (IS_PED_DEAD( l_U1164[1] )))
    {
        PED_SET_ACTION_INTENTION( l_U1164[1], 47, 10000, 0.00000000, 0.00000000, 0.00000000 );
    }
    if (NOT (IS_PED_DEAD( l_U1164[2] )))
    {
        PED_SET_ACTION_INTENTION( l_U1164[2], 47, 10000, 0.00000000, 0.00000000, 0.00000000 );
    }
    return;
}

void sub_40541()
{
    sub_1025( "NS", "P_Balcony02_Kill_Convo()", 0 );
    sub_35315( ref l_U702, 1 );
    return;
}

void sub_40623()
{
    if (l_U742 == 1)
    {
        if (NOT (sub_7443( ref l_U855 )))
        {
            if (sub_40676( 36.26000000, -90.22000000, 6.53000000 ))
            {
                sub_7554( ref l_U855 );
                sub_1025( "NS", "firework 1 shot, player saw firework", 0 );
            }
        }
        if (NOT (sub_7443( ref l_U864 )))
        {
            if (sub_40676( 11.13000000, -75.64000000, 10.33000000 ))
            {
                sub_1025( "NS", "firework 2 shot, player saw firework", 0 );
                sub_7554( ref l_U864 );
            }
        }
        if (sub_40966())
        {
            l_U742 = 0;
        }
    }
    else if (HAS_SHOT_BEEN_FIRED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_6582() ), 2.00000000, 1, ref l_U1209 ))
    {
        if (l_U1209 == sub_6582())
        {
            if (NOT (sub_7443( ref l_U855 )))
            {
                if (sub_15837( l_U195 ))
                {
                    sub_1025( "NS", "Firework 1 shot, player fired gun", 0 );
                    sub_7554( ref l_U855 );
                    l_U742 = 1;
                }
            }
            if (NOT (sub_7443( ref l_U864 )))
            {
                if (sub_15837( l_U216 ))
                {
                    sub_1025( "NS", "Firework 2 shot, player fired gun", 0 );
                    sub_7554( ref l_U864 );
                    l_U742 = 1;
                }
            }
        }
    }
    if (sub_7672( ref l_U855 ))
    {
        sub_41384();
    }
    if (sub_7672( ref l_U864 ))
    {
        sub_41559();
        l_U855._fU20 = 1;
    }
    return;
}

void sub_40676(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;

    Result = 0;
    if (NOT (IS_PED_DEAD( sub_6582() )))
    {
        if (IS_SPHERE_VISIBLE( uParam0, 1.00000000, 0 ))
        {
            if (HAS_PED_CLEAR_LOS_TO_SPHERE( sub_6582(), uParam0, 0.75000000 ))
            {
                Result = 1;
                sub_1025( "NS", "Player has seen coords", 0 );
            }
        }
    }
    return Result;
}

int sub_40966()
{
    if (((sub_41005( ref l_U1164 )) == 0) AND (((sub_41005( ref l_U1214 )) == 0) AND ((IS_PED_DEAD( l_U1146 )) AND (IS_PED_DEAD( l_U1132 )))))
    {
        return 1;
    }
    return 0;
}

void sub_41005(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_41384()
{
    sub_1025( "NS", "P_Shoot_Firework_1", 0 );
    PLAY_SOUND_FROM_COORD( l_U807, "S_FAV1_FIREWORK_LAUNCH", 18.28000000, -80.01000000, 12.16000000 );
    START_PARTICLE_FX_NON_LOOPED_AT_COORD( "Fav1_Firework_Launch", 18.28000000, -80.01000000, 12.16000000, 0, 0, 0, 1.00000000 );
    return;
}

void sub_41559()
{
    sub_1025( "NS", "P_Shoot_Firework_2", 0 );
    PLAY_SOUND_FROM_COORD( l_U807, "S_FAV1_FIREWORK_LAUNCH", 10.58000000, -71.21000000, 16.47000000 );
    START_PARTICLE_FX_NON_LOOPED_AT_COORD( "Fav1_Firework_Launch", 10.58000000, -71.21000000, 16.47000000, 0, 0, 0, 1.00000000 );
    return;
}

void sub_41785()
{
    sub_1025( "SP", "P_START_BRIDGE_STAIRS", "###" );
    if (NOT (IS_PED_DEAD( g_U876[0] )))
    {
        sub_24436( g_U876[0], g_U863._fU0, g_U863._fU12 );
        ISEQ_REGISTER_ENTITY( 939658976, "ENEMY", g_U876[0], 0 );
        ISEQ_START( 939658976 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( g_U876[0], -14.69000000, -49.00000000, 16.38400000, 3, 20000, 1048576000, 0, 0 );
    }
    sub_9493( ref l_U692 );
    sub_39043( 1, g_U876[0], 1478782890, ref l_U692, 4, 0 );
    sub_35769( "SFV1_VIG25A", ref l_U692, 8, 1 );
    return;
}

int sub_42885()
{
    if (NOT (IS_PED_DEAD( sub_6582() )))
    {
        if (IS_PED_SHOOTING( sub_6582() ))
        {
            return 1;
        }
    }
    if (((IS_PLAYER_GUN_RAISED( sub_6604() )) == 1) AND ((IS_PED_IN_CROSSHAIR_CYLINDER_OFFSET( l_U1241, 2.00000000, 1.00000000, 0.00000000, 0.00000000, 0.00000000, 100.00000000, 0 )) == 1))
    {
        return 1;
    }
    if (sub_7672( ref l_U910 ))
    {
        return 1;
    }
    return 0;
}

int sub_43745()
{
    if (NOT (IS_PED_DEAD( l_U1309 )))
    {
        if ((sub_43833()) || (((IS_PLAYER_GUN_RAISED( sub_6604() )) == 1) AND ((IS_PED_IN_CROSSHAIR_CYLINDER_OFFSET( l_U1309, 0.40000000, 1.00000000, 0.00000000, 0.00000000, 0.00000000, 100.00000000, 0 )) == 1)))
        {
            PED_SET_ACTION_INTENTION( l_U1309, 49, 1000, 0.00000000, 0.00000000, 0.00000000 );
            PLAY_OBJECT_ANIM( l_U1327, "VIG_00A_F1_THIRD_WINDOW_CLOSE_FRANTIC_shutr_Aa", "LEVEL_S_FAV1_CP_06", 0.00000000, 0, 1 );
            PLAY_OBJECT_ANIM( l_U1334, "VIG_00A_F1_THIRD_WINDOW_CLOSE_FRANTIC_shutr_Ab", "LEVEL_S_FAV1_CP_06", 0.00000000, 0, 1 );
        }
    }
    if (sub_7672( ref l_U920 ))
    {
        if (NOT (IS_PED_DEAD( l_U1309 )))
        {
            PLAY_OBJECT_ANIM( l_U1327, "VIG_00A_F1_THIRD_WINDOW_CLOSE_CASUAL_shutr_Aa", "LEVEL_S_FAV1_CP_06", 0.00000000, 0, 1 );
            PLAY_OBJECT_ANIM( l_U1334, "VIG_00A_F1_THIRD_WINDOW_CLOSE_CASUAL_shutr_Ab", "LEVEL_S_FAV1_CP_06", 0.00000000, 0, 1 );
            PED_SET_ACTION_INTENTION( l_U1309, 48, 1000, 0.00000000, 0.00000000, 0.00000000 );
            return 1;
        }
    }
    return 0;
}

int sub_43833()
{
    int iVar2;

    if (NOT (IS_PED_DEAD( sub_6582() )))
    {
        if (HAS_SHOT_BEEN_FIRED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_6582() ), 2.00000000, 0, ref iVar2 ))
        {
            if (sub_6582() == iVar2)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_44418(int iParam0)
{
    if (l_U45 == 0)
    {
        l_U46 = GET_PAYNEKILLER_AMT();
        l_U45 = 1;
    }
    if ((IS_PED_DEAD( sub_6582() )) == 0)
    {
        if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0))
        {
            if ((TIME_SINCE_LAST_MONOLOGUE() > 5000) AND ((IS_MONOLOGUE_PLAYING() == 0) AND (sub_44502() == 0)))
            {
                if ((iParam0 == 1) AND (l_U46 < GET_PAYNEKILLER_AMT()))
                {
                    if (g_U789 < 5)
                    {
                        if (((g_U788 mod 3) == 0) || (g_U788 == 0))
                        {
                            sub_1025( "NS", "Playing Pills Monologue", 0 );
                            sub_9493( ref l_U35 );
                            sub_35530( 0, sub_6582(), "MAX", ref l_U35, 2, 0 );
                            sub_35530( 1, sub_6582(), "MAX", ref l_U35, 2, 0 );
                            sub_35769( "SFV1_MFPLS", ref l_U35, 7, 1 );
                            g_U789++;
                        }
                        g_U788++;
                    }
                }
            }
            l_U46 = GET_PAYNEKILLER_AMT();
        }
    }
    return;
}

void sub_44502()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

void sub_44831()
{
    return;
}

void sub_44854()
{
    if (sub_7672( ref l_U891 ))
    {
        STOP_GAMEPLAY_CAM_SHAKING( "HAND_SHAKE", 0 );
        sub_4148( ref g_U1552, 1 );
        sub_4148( ref g_U1559, 1 );
    }
    return;
}

void sub_44927()
{
    if (HAS_MODEL_LOADED( -957257324 ))
    {
        if (NOT (DOES_OBJECT_EXIST( l_U1267 )))
        {
            sub_1025( "SA", "Creating mid door object", 0 );
            l_U1267 = sub_45042( -957257324, 28.88000000, -96.18000000, 5.50000000, 0, 0, 65456, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U1267 ))
            {
                FREEZE_OBJECT_POSITION( l_U1267, 1 );
            }
        }
    }
    switch (l_U1411)
    {
        case 0: break;
        case 1: break;
        case 2:
        if (sub_7672( ref l_U846 ))
        {
            l_U1411 = 3;
        }
        break;
        case 3:
        ISEQ_UNREGISTER_ENTITY( 1327258126, "peddoor" );
        ISEQ_UNREGISTER_ENTITY( 1327258126, "door" );
        ISEQ_TERMINATE( 1327258126 );
        l_U1411 = 0;
        break;
        default: break;
    }
    return;
}

void sub_45042(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_14288( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_45458()
{
    if (sub_38731( ref l_U510, sub_6582(), 0 ))
    {
        sub_45488();
    }
    if (sub_38731( ref l_U531, sub_6582(), 0 ))
    {
        sub_45632();
    }
    if (sub_38731( ref l_U552, sub_6582(), 0 ))
    {
        sub_45749();
    }
    if (sub_38731( ref l_U573, sub_6582(), 0 ))
    {
        sub_45907();
    }
    if (sub_38731( ref l_U594, sub_6582(), 0 ))
    {
        sub_46087();
    }
    if (sub_38731( ref l_U615, sub_6582(), 0 ))
    {
        sub_46206();
    }
    if (sub_38731( ref l_U636, sub_6582(), 0 ))
    {
        sub_46326();
    }
    if (sub_38731( ref l_U657, sub_6582(), 0 ))
    {
        PLAY_IMAGEFX( "BLUR_ZOOM_LIGHT_FAST", 4, 0 );
    }
    return;
}

void sub_45488()
{
    sub_1025( "CO", "P_INITIALIZE_MIDFAV_IMAGEFX_01", 0 );
    PLAY_IMAGEFX( "FLICKER_VIBRATE_01", 4, 0 );
    PLAY_IMAGEFX( "FLICKER_VIBRATE_01", 4, 0 );
    return;
}

void sub_45632()
{
    sub_1025( "CO", "P_INITIALIZE_MIDFAV_IMAGEFX_02", 0 );
    PLAY_IMAGEFX( "DOUBLE_TINT_BLUE_FLASH", 4, 0 );
    return;
}

void sub_45749()
{
    sub_1025( "CO", "P_INITIALIZE_MIDFAV_IMAGEFX_03", 0 );
    PLAY_IMAGEFX( "DOUBLE_WIDE_INTERLACE_FLASH_07", 4, 0 );
    PLAY_IMAGEFX( "BLUR_ZOOM_LIGHT_FAST", 4, 0 );
    return;
}

void sub_45907()
{
    sub_1025( "CO", "P_INITIALIZE_MIDFAV_IMAGEFX_04", 0 );
    PLAY_IMAGEFX( "FLICKER_VIBRATE_01", 4, 0 );
    PLAY_IMAGEFX( "FLICKER_VIBRATE_INTERLACE_M", 4, 0 );
    PLAY_IMAGEFX( "GRADE_RED_FAST", 4, 0 );
    return;
}

void sub_46087()
{
    sub_1025( "CO", "P_INITIALIZE_MIDFAV_IMAGEFX_05", 0 );
    PLAY_IMAGEFX( "EXPOSURE_DARKEN_CONTRAST", 4, 0 );
    return;
}

void sub_46206()
{
    sub_1025( "CO", "P_INITIALIZE_MIDFAV_IMAGEFX_06", 0 );
    PLAY_IMAGEFX( "TRIPLE_MOVE_RIGHT_FAST_04", 4, 0 );
    return;
}

void sub_46326()
{
    sub_1025( "CO", "P_INITIALIZE_MIDFAV_IMAGEFX_07", 0 );
    PLAY_IMAGEFX( "FLICKER_VIBRATE_01", 4, 0 );
    return;
}

void sub_46498()
{
    sub_1025( "SP", "P_UNLOAD_ASSETS", "###" );
    SET_PED_MODEL_LOD_DISTANCES( 1197404850, 1092616192, 1109393408 );
    sub_46569( g_U760 );
    sub_46569( 1197404850 );
    sub_46569( 721929021 );
    sub_46569( 1037363415 );
    sub_46569( -877134998 );
    sub_46569( -957257324 );
    sub_46569( 508600758 );
    sub_46569( 416428258 );
    sub_46569( l_U1274 );
    sub_46569( l_U1275 );
    sub_46806( "EXPL_CAM" );
    RELEASE_SCRIPT_AUDIO_BANK();
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U90._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U111._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U132._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U174._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U195._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U216._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U237._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U258._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U300._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U321._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U342._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U363._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U384._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U405._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U426._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U447._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U678._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U679._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U680._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U681._fU0 );
    return;
}

void sub_46569(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_11577( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_46806(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}


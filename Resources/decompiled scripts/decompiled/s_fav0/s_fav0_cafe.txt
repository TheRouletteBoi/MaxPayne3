void main()
{
    l_U0 = 1;
    l_U1 = 144;
    StrCopy( ref l_U2, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U10, "DEFAULT_SPLINE_CAMERA", 32 );
    StrCopy( ref l_U360, "07_03_fav1_intro_g", 32 );
    l_U616 = {97.22500000, -242.10000000, -2.42000000};
    l_U619 = 1.34300000;
    l_U634 = {94.95100000, -240.02100000, -2.79000000};
    l_U637 = -87.79800000;
    l_U946 = 0;
    l_U948 = {81.56000000, -248.05000000, -1.08000000};
    l_U951 = 178.43600000 + 90;
    l_U952 = {82.77000000, -248.17000000, -1.08000000};
    l_U955 = -1.56400000 + 90;
    l_U956 = {82.12000000, -249.16000000, -1.08000000};
    l_U959 = -86.56400000 + 90;
    l_U960 = {161.51900000, -282.21100000, -4.02900000};
    l_U963 = {0.00000000, 0.00000000, 48.43600000};
    l_U966 = 0;
    l_U967 = 0;
    l_U968 = 0;
    l_U970 = {119.92000000, -233.11000000, -5.88000000};
    l_U973 = -67.30000000;
    l_U974 = {121.67000000, -230.91000000, -5.88000000};
    l_U977 = 175.40000000;
    l_U978 = {122.42000000, -234.56000000, -5.88000000};
    l_U981 = 59.13000000;
    l_U982 = {120.70000000, -232.00000000, -5.78000000};
    l_U985 = {0.00000000, 0.00000000, -180.00000000};
    l_U988 = 0;
    l_U989 = 0;
    l_U990 = 0;
    l_U991 = 0;
    l_U992 = 0;
    l_U993 = 0;
    l_U994 = {126.14000000, -243.69000000, -4.43000000};
    l_U997 = {126.16000000, -238.88000000, -4.43000000};
    l_U1000 = 90.00000000;
    l_U1001 = 140.00000000;
    l_U1070 = {116.12000000, -238.20000000, -2.92000000};
    l_U1073 = -171.00000000;
    l_U1074 = {113.35000000, -244.10000000, -0.07000000};
    l_U1077 = -90.00000000;
    l_U1078 = {113.02000000, -245.20000000, -0.09000000};
    l_U1081 = -90.00000000;
    l_U1096 = {111.93000000, -257.20000000, -0.76000000};
    l_U1099 = -90.00000000;
    l_U1114 = {125.23000000, -265.53000000, -5.72000000};
    l_U1117 = 0.00000000;
    l_U1118 = {(vector( 121.78000000, -265.74000000, -1.18000000)) + ((vector( 125.23000000, -265.53000000, -5.72000000)) - (vector( 121.78000000, -265.74000000, -1.18000000)))};
    l_U1121 = {0.00000000, 0.00000000, -22.74300000};
    l_U1124 = {0.19000000, 0.10000000, 0.16000000};
    l_U1127 = {0.60000000, 0.00000000, 0.00000000};
    StrCopy( ref l_U1130, "07_FAV1_RANDOM_1_concat", 32 );
    l_U1138 = 0;
    l_U1139 = 0;
    l_U1140 = 0;
    l_U1155 = {105.77000000, -240.22000000, -2.94000000};
    l_U1158 = 72.70000000;
    l_U1159 = 0;
    l_U1160 = {104.47190000, -240.54800000, -2.89110800};
    l_U1163 = 51.95953000;
    l_U1176 = {79.67500000, -245.17100000, 0.17400000};
    l_U1179 = {0.00000000, 0.00000000, -180.00000000};
    l_U1182 = {79.60500000, -245.73900000, 0.17300000};
    l_U1185 = {0.00000000, 0.00000000, -180.00000000};
    l_U1260 = {73.69400000, -244.91400000, -0.17200000};
    l_U1263 = 101.43000000;
    l_U1264 = {79.63900000, -245.42400000, -0.64000000};
    l_U1267 = -86.74100000;
    l_U1268 = {63.61500000, -243.62800000, -0.03000000};
    l_U1271 = -180.00000000;
    l_U1272 = {71.60400000, -243.37700000, 0.00800000};
    l_U1275 = 178.94400000;
    l_U1276 = {74.38200000, -245.91400000, -0.23500000};
    l_U1279 = 88.98900000;
    l_U1280 = 0;
    l_U1281 = 0;
    l_U1282 = 0;
    l_U1283 = 0;
    l_U1284 = 0;
    l_U1285 = 0;
    l_U1286 = 0;
    l_U1287 = 0;
    l_U1288 = {49.19000000, -244.35000000, -0.10000000};
    l_U1291 = 8.00000000;
    l_U1337 = {55.58000000, -238.76000000, -0.07000000};
    l_U1340 = 110.00000000;
    l_U1341 = {50.31000000, -245.98000000, -0.01000000};
    l_U1344 = 0.00000000;
    l_U1345 = {51.80000000, -245.03800000, 0.00000000};
    l_U1348 = {0.00000000, 0.00000000, 180.00000000};
    l_U1351 = 0;
    l_U1352 = 0;
    l_U1353 = 0;
    l_U1354 = 0;
    l_U1369 = {123.42000000, -259.89000000, -8.61000000};
    l_U1372 = 9.10000000;
     /* WRITESCRIPTLOG */ sub_1576( "SA", "Script fav1_cafe.sc is starting...", "###" );
    if (g_U747 == 3)
    {
        g_U655 = 1;
        DO_SCREEN_FADE_OUT( 0 );
    }
    l_U967 = 1;
    while (IS_EXITFLAG_SET() == 0)
    {
         /* P_HANDLE_CHECKPOINTS */ sub_1740();
         /* P_HANDLE_EVENTS */ sub_9136();
         /* P_HANDLE_HEAD_TRACK */ sub_37044();
        WAIT( 0 );
    }
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_fav0_cafe" );
     /* WRITESCRIPTLOG */ sub_1576( "SA", "Script fav1_cafe.sc is terminating...", "###" );
    return;
}

/* WRITESCRIPTLOG */ void sub_1576(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_HANDLE_CHECKPOINTS */ void sub_1740()
{
    if ( /* RESTARTING_CHECKPOINT */ sub_1773())
    {
        if (g_U748 == 3)
        {
            if ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_2107() )) == 0)
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2107(), 0, 0 );
            }
             /* P_CLEANUP_ALL */ sub_2363();
            ISEQ_UNREGISTER_ENTITY( -1353661000, "player" );
            ISEQ_TERMINATE( -1353661000 );
            if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2069() )) == 0)
            {
                PED_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_2069(), "/Global/S_FAV1_WALK/S_FAV1_WALK/S_FAV1_WALK" );
            }
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_4288( ref l_U18,  /* PLAYER_PED_ID */ sub_2069() );
            l_U967 = 1;
        }
        else
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        }
    }
    if ( /* ISTIMERDONE */ sub_8809( ref l_U324 ))
    {
         /* P_RUN_SPECIFIC_INTERLACE_FX */ sub_9011( "KILL_FLASH_DOUBLE", 3, 0 );
    }
    return;
}

/* RESTARTING_CHECKPOINT */ int sub_1773()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2069() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_2069(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_2107(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_2107(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_2069() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_2069(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* PLAYER_PED_ID */ int sub_2069()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_2107() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_2107()
{
    return GET_PLAYER_ID();
}

/* P_CLEANUP_ALL */ void sub_2363()
{
     /* WRITESCRIPTLOG */ sub_1576( "SA", "P_CLEANUP_ALL", "###" );
    CLEAR_NAMED_CUTSCENE( ref l_U1130 );
    ISEQ_UNREGISTER_ENTITY( 1022559443, "anders" );
    ISEQ_TERMINATE( 1022559443 );
     /* CLEANPED */ sub_2470( l_U425 );
     /* CLEANPEDARRAY */ sub_2559( ref l_U410 );
     /* CLEANPEDARRAY */ sub_2559( ref l_U479 );
     /* CLEANPEDARRAY */ sub_2559( ref l_U569 );
     /* CLEANPEDARRAY */ sub_2559( ref l_U612 );
     /* CLEANPEDARRAY */ sub_2559( ref l_U537 );
     /* CLEANPEDARRAY */ sub_2559( ref l_U937 );
     /* CLEANPEDARRAY */ sub_2559( ref l_U1333 );
     /* CLEANPED */ sub_2470( g_U658 );
     /* CLEANPED */ sub_2470( g_U659 );
     /* CLEANPED */ sub_2470( g_U660 );
     /* CLEANPED */ sub_2470( g_U661 );
     /* CLEANPEDARRAY */ sub_2559( ref l_U1333 );
     /* CLEANPED */ sub_2470( l_U1305 );
     /* CLEANPEDARRAY */ sub_2559( ref l_U1188 );
     /* CLEANPED */ sub_2470( l_U1141 );
    ISEQ_UNREGISTER_ENTITY( 353676333, "smoker" );
     /* TERMINATEISEQ */ sub_2792( 353676333, 1 );
     /* CLEANPED */ sub_2470( l_U368 );
    ISEQ_UNREGISTER_ENTITY( -1989829375, "balcony1" );
    ISEQ_UNREGISTER_ENTITY( -1989829375, "balcony2" );
    ISEQ_UNREGISTER_ENTITY( -1989829375, "balcony3" );
    ISEQ_UNREGISTER_ENTITY( -1989829375, "balcony4" );
    ISEQ_UNREGISTER_ENTITY( -1989829375, "balcony5" );
     /* TERMINATEISEQ */ sub_2792( -1989829375, 1 );
     /* CLEANPED */ sub_2470( g_U662 );
     /* CLEANPED */ sub_2470( g_U663 );
     /* CLEANPED */ sub_2470( g_U664 );
     /* CLEANPED */ sub_2470( g_U665 );
     /* CLEANPED */ sub_2470( g_U666 );
    ISEQ_UNREGISTER_ENTITY( 512666002, "sweeper" );
     /* TERMINATEISEQ */ sub_2792( 512666002, 1 );
     /* CLEANPED */ sub_2470( l_U395 );
     /* CLEANPED */ sub_2470( l_U395 );
    ISEQ_UNREGISTER_ENTITY( -991583103, "player" );
     /* TERMINATEISEQ */ sub_2792( -991583103, 1 );
     /* CLEANPED */ sub_2470( l_U620 );
    ISEQ_UNREGISTER_ENTITY( -1471947456, "player" );
     /* TERMINATEISEQ */ sub_2792( -1471947456, 1 );
     /* CLEANPED */ sub_2470( l_U638 );
    ISEQ_UNREGISTER_ENTITY( 1782590701, "CIVILIAN1" );
    ISEQ_UNREGISTER_ENTITY( 1782590701, "CIVILIAN2" );
    ISEQ_UNREGISTER_ENTITY( 1782590701, "CIVILIAN3" );
     /* TERMINATEISEQ */ sub_2792( 1782590701, 1 );
    ISEQ_UNREGISTER_ENTITY( -1196735135, "dealer1" );
    ISEQ_UNREGISTER_ENTITY( -1196735135, "dealer2" );
    ISEQ_UNREGISTER_ENTITY( -1196735135, "talker1" );
    ISEQ_UNREGISTER_ENTITY( -1196735135, "talker2" );
     /* TERMINATEISEQ */ sub_2792( -1196735135, 1 );
     /* CLEANPEDARRAY */ sub_2559( ref l_U937 );
     /* CLEANOBJECT */ sub_3612( l_U941 );
     /* CLEANOBJECT */ sub_3612( l_U942[0] );
     /* CLEANOBJECT */ sub_3612( l_U942[1] );
     /* CLEANOBJECT */ sub_3612( l_U942[2] );
     /* CLEANPED */ sub_2470( l_U1355 );
     /* CLEANPED */ sub_2470( g_U662 );
     /* CLEANPED */ sub_2470( g_U663 );
     /* CLEANPED */ sub_2470( g_U664 );
     /* CLEANPED */ sub_2470( g_U665 );
     /* CLEANPED */ sub_2470( g_U666 );
     /* CLEANPED */ sub_2470( l_U1082 );
     /* CLEANPED */ sub_2470( l_U1100 );
     /* CLEANOBJECT */ sub_3612( l_U1041 );
     /* CLEANOBJECT */ sub_3612( l_U1042 );
     /* CLEANOBJECT */ sub_3612( l_U1069 );
     /* CLEANOBJECT */ sub_3612( l_U969 );
     /* CLEANOBJECT */ sub_3612( g_U736 );
     /* CLEANOBJECT */ sub_3612( g_U737 );
     /* CLEANOBJECT */ sub_3612( l_U1336 );
     /* CLEANOBJECTARRAY */ sub_3859( ref l_U1173 );
    RESET_PED_MODEL_LOD_DISTANCES( -1942652953 );
     /* RESETTIMER */ sub_3951( ref l_U770 );
     /* RESETTIMER */ sub_3951( ref l_U779 );
     /* RESETTIMER */ sub_3951( ref l_U788 );
     /* RESETTIMER */ sub_3951( ref l_U797 );
     /* RESETTIMER */ sub_3951( ref l_U806 );
     /* RESETTIMER */ sub_3951( ref l_U815 );
    ISEQ_UNREGISTER_ENTITY( 123547706, "sitter" );
     /* TERMINATEISEQ */ sub_2792( 123547706, 1 );
     /* CLEANPED */ sub_2470( l_U652 );
    return;
}

/* CLEANPED */ void sub_2470(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CLEANPEDARRAY */ void sub_2559(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_2470( (uParam0^)[I] );
    }
    return;
}

/* TERMINATEISEQ */ void sub_2792(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            DISPLAYF( "[SP]### Waiting for interactive sequence to terminate: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* CLEANOBJECT */ void sub_3612(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* CLEANOBJECTARRAY */ void sub_3859(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* CLEANOBJECT */ sub_3612( (uParam0^)[I] );
    }
    return;
}

/* RESETTIMER */ void sub_3951(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_4288(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_1576( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_4507( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_5671( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_5985( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6464( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_5985( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6464( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_5985( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6464( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_6780( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6464( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_6780( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6464( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_7352( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_7554( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_2069(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_1576( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_4507(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_4569( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_4569(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_5671(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_5985(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_6389( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* WRITE_STRING */ void sub_6389(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_6464(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_6780(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_6389( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_7352(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_7554(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_4569( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_7652( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_7652(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* ISTIMERDONE */ int sub_8809(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_RUN_SPECIFIC_INTERLACE_FX */ void sub_9011(unknown uParam0, unknown uParam1, unknown uParam2)
{
     /* WRITESCRIPTLOG */ sub_1576( "rw", "P_RUN_SPECIFIC_INTERLACE_FX", 0 );
    if (IS_SCRIPTEDFX_ENABLED() == 1)
    {
        PLAY_IMAGEFX( uParam0, uParam1, uParam2 );
    }
    return;
}

/* P_HANDLE_EVENTS */ void sub_9136()
{
    switch (l_U967)
    {
        case 0: break;
        case 1:
         /* P_SETUP_STATIC_DATA */ sub_9253();
         /* P_INITIALIZE_SCRIPT_DATA */ sub_12381();
        l_U967 = 2;
        break;
        case 2:
         /* P_REQUEST_ASSETS */ sub_13125();
        l_U967 = 3;
        break;
        case 3:
        if ( /* HAVE_ASSETS_LOADED */ sub_13953())
        {
            l_U967 = 4;
        }
        break;
        case 4:
        if (g_U655 == 1)
        {
             /* P_RUN_SPECIFIC_INTERLACE_FX */ sub_9011( "RELOAD_GLITCH_BORDER", 3, 0 );
            SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY_WINDY" );
             /* P_START_GAMEPLAY */ sub_14327();
            if (g_U748 == 3)
            {
                CAMERA_PLAY_ANIMATED( "LEVEL_S_FAV1_CP_02", "B_OUT_MID_01_FAV1_FWD_CAM", 1, 104.77000000, -240.80000000, -1.34000000, -106.00000000, 0, 0 );
                ISEQ_REGISTER_ENTITY( -1353661000, "player",  /* PLAYER_PED_ID */ sub_2069(), 0 );
                ISEQ_START( -1353661000 );
            }
             /* CREATETIMER */ sub_11596( ref l_U261, 750, 1, 0 );
             /* STARTTIMER */ sub_12849( ref l_U261 );
             /* CREATETIMER */ sub_11596( ref l_U306, 16000, 1, 0 );
             /* STARTTIMER */ sub_12849( ref l_U306 );
            l_U967 = 5;
        }
        break;
        case 5:
         /* P_HANDLE_ANDERS */ sub_16294();
         /* P_HANDLE_S_FAV1_VIG_09C_RES */ sub_16513();
         /* P_HANDLE_VIG_09_B_SMOKER */ sub_17182();
         /* P_HANDLE_VIG_09_A */ sub_17393();
         /* P_HANDLE_INTRO_TIMER */ sub_17910();
         /* P_HANDLE_BALCONY_TIMER */ sub_18266();
         /* P_HANDLE_WALKERS */ sub_18607();
         /* P_HANDLE_ISEQ_S_FAV1_VIG_09B */ sub_18766();
         /* P_HANDLE_VIG_11 */ sub_20930();
         /* P_HANDLE_VIG_SITTER */ sub_21271();
         /* P_HANDLE_VIG_SWEEPER */ sub_21392();
         /* P_DEBUG_HANDLE_VIG_12B */ sub_21592();
         /* P_HANDLE_ISEQ_VIG_03 */ sub_22781();
         /* F_HANDLE_RANDOM_CUTSCENE */ sub_24342();
         /* P_HANDLE_IMAGEFX_CAFE */ sub_27609();
        if (l_U947)
        {
            if (IS_ANIMATED_CAMERA_PLAYING() == 1)
            {
                 /* WRITE_STRING */ sub_6389( "Definitely a animated camera going on here. " );
                if (CAMERA_ANIMATED_CURRENT_TIME() >= 5400)
                {
                    l_U947 = 0;
                     /* P_RUN_SPECIFIC_INTERLACE_FX */ sub_9011( "FLASH_ORANGE", 4, 0 );
                     /* P_RUN_SPECIFIC_INTERLACE_FX */ sub_9011( "FLASH_GREEN", 4, 0 );
                     /* P_RUN_SPECIFIC_INTERLACE_FX */ sub_9011( "COLOR_CHANNEL_SPLIT_LEFT", 4, 0 );
                    CAMERA_ANIMATED_STOP( 2500, 1 );
                     /* LOADSEAMLESSCUTSCENE */ sub_24659( ref l_U360, 0 );
                }
            }
        }
        if ( /* ISTIMERDONE */ sub_8809( ref l_U306 ))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_26245( ref l_U736 );
             /* ADD_PED_FOR_SCRIPT_SPEECH_ENUM */ sub_28354( 1, l_U937[1], 417748645, ref l_U736, 4, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH_ENUM */ sub_28354( 2, l_U937[0], 1982525545, ref l_U736, 4, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH_ENUM */ sub_28354( 3, l_U937[2], 640901490, ref l_U736, 4, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_26626( "SFV1_VIG03A", ref l_U736, 8, 1 );
        }
        if ((NOT (IS_PED_DEAD( l_U937[2] ))) AND ((NOT (IS_PED_DEAD( l_U937[1] ))) AND (NOT (IS_PED_DEAD( l_U937[0] )))))
        {
            if (((PED_GET_ACTION_INTENTION_STATUS( l_U937[2], 48 )) == 3) || (((PED_GET_ACTION_INTENTION_STATUS( l_U937[1], 48 )) == 3) || ((PED_GET_ACTION_INTENTION_STATUS( l_U937[0], 48 )) == 3)))
            {
                PED_FINISH_ACTION_INTENTION( l_U937[0], 48 );
                PED_FINISH_ACTION_INTENTION( l_U937[1], 48 );
                PED_FINISH_ACTION_INTENTION( l_U937[2], 48 );
                 /* KILL_SPEECH */ sub_28835( ref l_U736, 0 );
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_26245( ref l_U746 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH_ENUM */ sub_28354( 1, l_U937[1], 417748645, ref l_U746, 4, 0 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH_ENUM */ sub_28354( 2, l_U937[0], 1982525545, ref l_U746, 4, 0 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH_ENUM */ sub_28354( 3, l_U937[2], 640901490, ref l_U746, 4, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_26626( "SFV1_VIG03B", ref l_U746, 8, 1 );
            }
        }
        if ( /* ISTIMERDONE */ sub_8809( ref l_U270 ))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_26245( ref l_U726 );
             /* ADD_PED_FOR_SCRIPT_SPEECH_ENUM */ sub_28354( 1, g_U662, 847022755, ref l_U726, 4, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH_ENUM */ sub_28354( 2, g_U663, -296288220, ref l_U726, 4, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_26626( "SFV1_VIG09B", ref l_U726, 8, 1 );
        }
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2069() )))
        {
            if ((PED_GET_ACTION_INTENTION_STATUS(  /* PLAYER_PED_ID */ sub_2069(), 48 )) == 3)
            {
                PED_FINISH_ACTION_INTENTION(  /* PLAYER_PED_ID */ sub_2069(), 48 );
                if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2069() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_2107() )) == 0))
                {
                    SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2107(), 0, 0 );
                }
                 /* P_LIMIT_PLAYER_ACTIONS */ sub_29404();
                 /* P_PLAYER_LOOK_AT_COORD */ sub_29641( 97.33000000, -238.99000000, -1.40000000 );
                DISPLAY_HUD( 1 );
                SIMULATE_PLAYER_INPUT_GAIT(  /* PLAYER_ID */ sub_2107(), 2, 3000, 0 );
                if (l_U18._fU0 == 0)
                {
                     /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_29970( ref l_U18, 3,  /* PLAYER_PED_ID */ sub_2069(), g_U749[3], g_U849[3], g_U883[3], g_U917[3], 1 );
                }
                g_U748 = 3;
                if (NOT IS_MAGDEMO())
                {
                     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_26245( ref l_U676 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_26356( 0,  /* PLAYER_PED_ID */ sub_2069(), "MAX", ref l_U676, 2, 0 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_26356( 1,  /* PLAYER_PED_ID */ sub_2069(), "MAX", ref l_U676, 2, 0 );
                     /* PLAY_SINGLE_SPEECH */ sub_26626( "SFV1_MIDA", ref l_U676, 8, 1 );
                }
            }
        }
        if (( /* ISTIMERDONE */ sub_8809( ref l_U261 )) == 1)
        {
            CLEAR_PRINTS();
        }
        if ( /* ISTIMERDONE */ sub_8809( ref l_U279 ))
        {
            ;
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_23891( ref l_U54, 0 ))
        {
             /* P_PLAYER_LOOK_AT_COORD */ sub_29641( 58.75000000, -246.10000000, 7.02000000 );
             /* CREATETIMER */ sub_11596( ref l_U279, 9200, 1, 0 );
             /* STARTTIMER */ sub_12849( ref l_U279 );
        }
        if ( /* ISTIMERDONE */ sub_8809( ref l_U243 ))
        {
             /* KILL_SPEECH */ sub_28835( ref l_U696, 0 );
            ISEQ_UNREGISTER_ENTITY( -442719108, "FLGE" );
            ISEQ_UNREGISTER_ENTITY( -442719108, "GMED" );
            ISEQ_UNREGISTER_ENTITY( -442719108, "GMED1" );
            ISEQ_UNREGISTER_ENTITY( -442719108, "GMED2" );
            ISEQ_TERMINATE( -442719108 );
             /* NIS_PRE_SETUP */ sub_34880( 1, 0, 0, 0 );
             /* CLEANPEDARRAY */ sub_2559( ref l_U537 );
             /* TELEPORTPED */ sub_14534(  /* PLAYER_PED_ID */ sub_2069(), 104.80000000, -245.89000000, -2.92000000, 90.00000000 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( -0.54728900, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( -9.98944300, 1065353216, 0 );
             /* NIS_BLACK_SCREEN_WITH_TEXT */ sub_35163( "MIDSCENE: MID_01_F1", 3000, 0, 500 );
             /* NIS_POST_SETUP */ sub_35689( 1, 1 );
             /* NIS_RETURN_TO_GAMEPLAY_CAM */ sub_36007( 0, 1, 0, -859915232, -859915232, 0 );
             /* UNLOADMODEL */ sub_25760( -8479567 );
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_23891( ref l_U138, 0 ))
        {
            AUDIO_MUSIC_SUSPEND( 12000 );
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_23891( ref l_U138, 0 ))
        {
            AUDIO_MUSIC_SUSPEND( 12000 );
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_23891( ref l_U96, 0 ))
        {
             /* P_PLAYER_LOOK_AT_COORD */ sub_29641( 61.50000000, -254.88000000, 2.74000000 );
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_23891( ref l_U117, 0 ))
        {
            REGISTER_HIDE_ENTITY_AT_POSITION( g_U979._fU0, g_U979._fU4 );
            REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U993._fU0, g_U993._fU4 ), "P_f1_mtlgatedoor_B01", 0 );
             /* P_CREATE_07_03_ACTORS */ sub_36319();
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1333[0], "G_CS_Avg", 1 );
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1333[1], "G_CS_Avg^1", 1 );
             /* LOADSEAMLESSCUTSCENE */ sub_24659( ref l_U360, 0 );
            l_U967 = 6;
        }
        break;
        case 6:
        if (HAS_CUTSCENE_LOADED())
        {
            DISABLE_FADE_BETWEEN_SP_LEVELS();
            CUTSCENE_ENABLE_SKIP( 0 );
            AUD_ENABLE_PRE_BINK_SHUTDOWN( 1 );
            START_SEAMLESS_CUTSCENE();
            l_U967 = 7;
        }
        break;
        case 7:
        if (HAS_CUTSCENE_FINISHED())
        {
            l_U967 = 8;
        }
        else
        {
            PRINTSTRING( "[SP] SECTION: " );
            PRINTINT( GET_CUTSCENE_SECTION_PLAYING() );
            PRINTSTRING( " Time: " );
            PRINTINT( GET_CUTSCENE_TIME() );
            PRINTSTRING( " Time MS: " );
            PRINTINT( GET_CUTSCENE_TIME_MS() );
            PRINTNL();
            if ((IS_SCREEN_FADED_OUT()) || (GET_CUTSCENE_TIME_MS() > 20244))
            {
                g_U651 = 1;
            }
        }
        break;
        case 8:
        g_U651 = 1;
         /* P_CLEANUP_ALL */ sub_2363();
         /* P_UNLOAD_ASSETS */ sub_36844();
        l_U967 = 0;
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        break;
        default: break;
    }
    return;
}

/* P_SETUP_STATIC_DATA */ void sub_9253()
{
     /* WRITESCRIPTLOG */ sub_1576( "SA", "LOAD_ASSETS", "###" );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U412, 74.65900000, -249.23600000, 0.00000000, -180.00000000, 486812562, 4, 1, 1, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U396[0], 123.60000000, -252.24000000, -8.36000000, 78.45000000, -1928333464, 4, 1, 1, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U426[0], 133.58000000, -241.57000000, 1.20000000, -177.03000000, 2047596736, 4, 1, 1, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U426[1], 125.00000000, -242.81000000, -1.99000000, 87.64000000, -1124039499, 4, 1, 1, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U426[2], 126.30000000, -243.55000000, -2.67000000, -159.51000000, -1443423610, 5, 2, 1, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U426[3], 130.45000000, -242.08000000, -1.76000000, -178.33000000, 986555693, 5, 2, 1, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U484[0], 102.69000000, -247.81000000, -2.00000000, 37.04000000, -706707838, 4, 1, 1, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U484[1], 101.50000000, -248.08000000, -2.00000000, 20.15000000, -295777167, 4, 1, 1, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U484[2], 100.53000000, -247.07000000, -2.00000000, -113.00000000, -96417682, 4, 1, 1, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U484[3], 100.53000000, -247.07000000, -2.00000000, -113.00000000, 521768239, 4, 1, 1, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U542[0], 94.68000000, -239.88000000, -2.15000000, -114.24000000, 847022755, 5, 2, 1, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U542[1], 97.31000000, -241.65000000, -2.83000000, 9.32194300, -1833292740, 5, 2, 1, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U572[0], 49.05000000, -244.42000000, -0.09000000, -12.16000000, -1823102511, 4, 1, 1, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U572[1], 47.13000000, -241.66000000, -0.09000000, -118.75000000, 751117464, 4, 1, 1, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U572[2], 49.88000000, -239.29000000, -0.09000000, -173.75000000, -1208915897, 4, 1, 1, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U653, 71.42000000, -240.87000000, 4.53000000, 180.00000000, -1823102511, 4, 1, 1, 0, 0 );
     /* P_CREATEDOORSTRUCT */ sub_10182( ref l_U756, -1881113741, 93.76585000, -239.47710000, -1.80044000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_10261( ref l_U756, -65.00000000, 0.00000000 );
     /* P_OPENDOOR */ sub_10601( ref l_U756, 0, 1, 1 );
     /* P_CREATEDOORSTRUCT */ sub_10182( ref l_U763, -1881113741, 77.96150000, -248.81610000, 1.08520000, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U1356, l_U1369, l_U1372, -2124613950, 4, 1, 1, 0, 0 );
     /* P_CREATETRIGGERBOX */ sub_10896( ref l_U54, "START_VIG12C_LSA", 62.06000000, -241.18000000, 0.14000000, 3.00000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_10896( ref l_U75, "START_VIG03_ACTION", 82.25000000, -245.74000000, -2.00000000, 4.00000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_10896( ref l_U96, "FAV1_BAR_WALKER", 67.00000000, -244.25000000, -2.97000000, 5.00000000, 6.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_10896( ref l_U117, "FAV1_BAR_ENTRANCE", 54.60000000, -241.28000000, -0.10000000, 6.00000000, 8.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_10896( ref l_U138, "tbDisableMusic", 65.69000000, -245.51000000, -0.18000000, 4.11000000, 3.62000000, 2.76000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_10896( ref l_U159, "IMAGE_FX_1_", 87.99860000, -245.64000000, -2.50000000, 3.00000000, 4.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_10896( ref l_U180, "IMAGE_FX_2_", 82.42230000, -245.67100000, -1.37000000, 3.00000000, 4.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_10896( ref l_U201, "IMAGE_FX_3_", 62.22000000, -243.87000000, -0.33000000, 3.00000000, 4.00000000, 3.00000000, 0.00000000, 0.00000000, -55.30000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_10896( ref l_U222, "IMAGE_FX_4_", 79.35000000, -245.66000000, -1.37000000, 3.00000000, 4.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* CREATETIMER */ sub_11596( ref l_U779, 3000, 1, 0 );
     /* CREATETIMER */ sub_11596( ref l_U788, 15000, 1, 0 );
     /* CREATETIMER */ sub_11596( ref l_U797, 7000, 1, 0 );
     /* CREATETIMER */ sub_11596( ref l_U243, 50, 1, 0 );
     /* CREATETIMER */ sub_11596( ref l_U252, 10000, 1, 0 );
     /* CREATETIMER */ sub_11596( ref l_U806, 4000, 1, 0 );
     /* CREATETIMER */ sub_11596( ref l_U815, 6000, 1, 0 );
     /* CREATETIMER */ sub_11596( ref l_U770, 16075, 1, 0 );
     /* P_CREATEDOORSTRUCT */ sub_10182( ref l_U848, -1624636319, 107.44270000, -247.36020000, -1.30923000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_11891( ref l_U848, 1 );
     /* P_CREATEDOORSTRUCT */ sub_10182( ref l_U855, 596292157, 105.92570000, -236.41240000, -1.76156000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_11891( ref l_U855, 1 );
     /* P_CREATEDOORSTRUCT */ sub_10182( ref l_U862, 596292157, 92.09013000, -249.67190000, -1.42980000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_11891( ref l_U862, 1 );
     /* P_CREATEDOORSTRUCT */ sub_10182( ref l_U869, 596292157, 87.79914000, -248.80370000, -0.23442000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_11891( ref l_U869, 1 );
     /* P_CREATEDOORSTRUCT */ sub_10182( ref l_U876, 596292157, 114.00110000, -244.06040000, -4.49155000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_11891( ref l_U876, 1 );
     /* P_CREATEDOORSTRUCT */ sub_10182( ref l_U883, 596292157, 115.18850000, -235.55170000, -4.61929000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_11891( ref l_U883, 1 );
     /* P_CREATEDOORSTRUCT */ sub_10182( ref l_U890, -119620944, 125.42960000, -248.76510000, -7.07274000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_11891( ref l_U890, 1 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_9351(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATEDOORSTRUCT */ void sub_10182(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

/* P_SETDOORMINMAXLIMIT */ void sub_10261(int iParam0, float fParam1, float fParam2)
{
    if (( /* F_DOESDOOREXIST */ sub_10296( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_10380( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        PRINTSTRING( "[SP]### Error: Door fMinLimit greater than fMaxLimit (default min:-81.0 max:81.0) ###" );
        PRINTNL();
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_10296(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_10380(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_OPENDOOR */ void sub_10601(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if (( /* F_DOESDOOREXIST */ sub_10296( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_10380( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

/* P_CREATETRIGGERBOX */ void sub_10896(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* CREATETIMER */ void sub_11596(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* P_SETDOORLOCKED */ void sub_11891(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if (( /* F_DOESDOOREXIST */ sub_10296( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_10380( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_12381()
{
     /* WRITESCRIPTLOG */ sub_1576( "SA", "INITIALIZE_SCRIPT_DATA", "###" );
     /* SETUP_SCRIPTED_SPEECH */ sub_12463( ref g_U1271 );
    l_U824 = {110.99000000, -241.62000000, -4.40000000};
    l_U827 = {125.66000000, -239.21000000, -2.63000000};
    l_U830 = {129.68000000, -239.89000000, -2.61000000};
    l_U833 = {113.87000000, -235.36000000, 0.56000000};
    l_U836 = {137.44000000, -236.76000000, -5.65000000};
    l_U839 = {102.04000000, -245.13000000, -2.29000000};
    l_U842 = {85.65000000, -251.04000000, -1.19000000};
    l_U845 = {53.06000000, -249.98000000, -0.03000000};
    SET_PED_MODEL_LOD_DISTANCES( -1942652953, 1000.00000000, 2000.00000000 );
     /* CREATETIMER */ sub_11596( ref l_U351, 4000, 1, 0 );
     /* STARTTIMER */ sub_12849( ref l_U351 );
    l_U1287 = 1;
    l_U966 = 1;
    l_U968 = 0;
    l_U992 = 1;
    l_U993 = 1;
    l_U946 = 0;
    l_U947 = 1;
    ENABLE_STATIC_EMITTER( "S_FAV0_SE_INTRO_PARTY_MUSIC_CENTRE", 0 );
    ENABLE_STATIC_EMITTER( "S_FAV0_SE_INTRO_PARTY_MUSIC_02", 1 );
    return;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_12463(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_12507();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_12507()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* STARTTIMER */ void sub_12849(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* P_REQUEST_ASSETS */ void sub_13125()
{
     /* LOADMODEL */ sub_13160( -42513452, 0 );
     /* LOADMODEL */ sub_13160( -1942652953, 0 );
     /* LOADMODEL */ sub_13160( -1745537260, 0 );
     /* LOADMODEL */ sub_13160( 723970757, 0 );
     /* LOADMODEL */ sub_13160( -42513452, 0 );
     /* LOADMODEL */ sub_13160( -1942652953, 0 );
     /* LOADMODEL */ sub_13160( -1745537260, 0 );
     /* LOADISEQ */ sub_13477( -991583103, 0 );
     /* LOADISEQ */ sub_13477( -1471947456, 0 );
     /* LOADISEQ */ sub_13477( 123547706, 0 );
     /* LOADISEQ */ sub_13477( 353747438, 0 );
     /* LOADISEQ */ sub_13477( 353676333, 0 );
     /* LOADISEQ */ sub_13477( 1782590701, 0 );
     /* LOADISEQ */ sub_13477( 1022559443, 0 );
     /* LOADMODEL */ sub_13160( -42513452, 0 );
     /* LOADMODEL */ sub_13160( -1942652953, 0 );
     /* LOADMODEL */ sub_13160( -1745537260, 0 );
     /* LOADMODEL */ sub_13160( 2045629272, 0 );
     /* LOADMODEL */ sub_13160( 2001921552, 0 );
     /* LOADISEQ */ sub_13477( 512666002, 0 );
     /* LOADISEQ */ sub_13477( -1196735135, 0 );
     /* LOADISEQ */ sub_13477( -1353661000, 0 );
     /* LOADISEQ */ sub_13477( -1989829375, 0 );
    return;
}

/* LOADMODEL */ void sub_13160(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_6389( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADISEQ */ void sub_13477(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                DISPLAYF( "[SP]### Waiting for interactive sequence to be loaded: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* HAVE_ASSETS_LOADED */ int sub_13953()
{
    if ((ISEQ_IS_LOADED( -1989829375 )) AND ((ISEQ_IS_LOADED( -1353661000 )) AND ((ISEQ_IS_LOADED( -1196735135 )) AND ((ISEQ_IS_LOADED( 512666002 )) AND ((ISEQ_IS_LOADED( 1022559443 )) AND ((ISEQ_IS_LOADED( 1782590701 )) AND ((ISEQ_IS_LOADED( 353676333 )) AND ((ISEQ_IS_LOADED( 353747438 )) AND ((ISEQ_IS_LOADED( 123547706 )) AND ((ISEQ_IS_LOADED( -1471947456 )) AND ((ISEQ_IS_LOADED( -991583103 )) AND ((HAS_MODEL_LOADED( 2001921552 )) AND ((HAS_MODEL_LOADED( -1745537260 )) AND ((HAS_MODEL_LOADED( -1942652953 )) AND ((HAS_MODEL_LOADED( -42513452 )) AND ((HAS_MODEL_LOADED( 723970757 )) AND ((HAS_MODEL_LOADED( -1745537260 )) AND ((HAS_MODEL_LOADED( -1942652953 )) AND (HAS_MODEL_LOADED( -42513452 ))))))))))))))))))))
    {
        return 1;
    }
    return 0;
}

/* P_START_GAMEPLAY */ void sub_14327()
{
     /* WRITESCRIPTLOG */ sub_1576( "SA", "P_START_GAMEPLAY", "###" );
     /* P_SETDOORLOCKED */ sub_11891( ref g_U1217, 1 );
     /* P_SETDOORLOCKED */ sub_11891( ref g_U1224, 1 );
    if (g_U748 == 3)
    {
         /* P_SETUP_PLAYER */ sub_14423();
    }
     /* P_SETDOORLOCKED */ sub_11891( ref g_U979, 0 );
     /* P_SETDOORLOCKED */ sub_11891( ref g_U986, 0 );
     /* P_SETDOORLOCKED */ sub_11891( ref g_U993, 0 );
     /* P_SETDOORLOCKED */ sub_11891( ref g_U1000, 1 );
     /* P_CREATE_VIG_11 */ sub_14775();
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2069() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_2107() )) == 0))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2107(), 0, 0 );
    }
     /* STARTTIMER */ sub_12849( ref l_U806 );
     /* STARTTIMER */ sub_12849( ref l_U815 );
    if (NOT (DOES_PED_EXIST( g_U662 )))
    {
         /* CREATETIMER */ sub_11596( ref l_U270, 8000, 1, 0 );
         /* STARTTIMER */ sub_12849( ref l_U270 );
        l_U990 = 1;
    }
    DISPLAY_HUD( 0 );
    AUDIO_MUSIC_FORCE_TRACK( "FAVELA_ONE_SONG", "FAV_ONE_1", "", 0.00000000, 0, 0, -1082130432, 0 );
    return;
}

/* P_SETUP_PLAYER */ void sub_14423()
{
     /* WRITESCRIPTLOG */ sub_1576( "rw", "P_SETUP_PLAYER", 0 );
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2069() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_2107() )) == 0))
    {
         /* TELEPORTPED */ sub_14534(  /* PLAYER_PED_ID */ sub_2069(), g_U749[3], g_U849[3] );
        SET_PLAYER_SPRINT(  /* PLAYER_ID */ sub_2107(), 0 );
        SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_2107(), 0 );
        SET_CAN_ROLL_DODGE(  /* PLAYER_PED_ID */ sub_2069(), 0 );
        SET_ADRENALINE_NOT_ALLOW( 1 );
        REMOVE_ALL_PED_WEAPONS(  /* PLAYER_PED_ID */ sub_2069() );
        SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_2069(), 1 );
        SET_CAM_VIEW_MODE( 0 );
    }
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U883[3], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U883[3], 1065353216, 0 );
    return;
}

/* TELEPORTPED */ void sub_14534(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_CREATE_VIG_11 */ void sub_14775()
{
     /* WRITESCRIPTLOG */ sub_1576( "SA", "P_CREATE_VIG_11", 0 );
     /* CLEANPED */ sub_2470( l_U620 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U621, l_U616, l_U619, 847022755, 4, 1, 1, 0, 0 );
    l_U620 =  /* CREATEPED */ sub_14876( ref l_U621 );
    if (NOT (IS_PED_DEAD( l_U620 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U620, 1 );
    }
    ISEQ_UNREGISTER_ENTITY( -991583103, "player" );
     /* TERMINATEISEQ */ sub_2792( -991583103, 1 );
     /* LOADISEQ */ sub_13477( -991583103, 1 );
     /* TELEPORTPED */ sub_14534( l_U620, l_U616, l_U619 );
    ISEQ_REGISTER_ENTITY( -991583103, "player", l_U620, 0 );
    ISEQ_START( -991583103 );
     /* CLEANPED */ sub_2470( l_U638 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U639, l_U634, l_U637, -1833292740, 4, 1, 1, 0, 0 );
    l_U638 =  /* CREATEPED */ sub_14876( ref l_U639 );
    if (NOT (IS_PED_DEAD( l_U638 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U638, 1 );
    }
    ISEQ_UNREGISTER_ENTITY( -1471947456, "player" );
     /* TERMINATEISEQ */ sub_2792( -1471947456, 1 );
     /* LOADISEQ */ sub_13477( -1471947456, 1 );
     /* TELEPORTPED */ sub_14534( l_U638, l_U634, l_U637 );
    ISEQ_REGISTER_ENTITY( -1471947456, "player", l_U638, 0 );
    ISEQ_START( -1471947456 );
    return;
}

/* CREATEPED */ void sub_14876(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_13160( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_15367( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_15468( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_15367(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_15468(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* P_HANDLE_ANDERS */ void sub_16294()
{
    if (ISEQ_IS_LOADED( 1022559443 ))
    {
        if ((l_U968 == 0) AND ((HAS_EXPLORATION_ITEM_BEEN_FOUND( "sclb_Anders1" )) AND (NOT (DOES_PED_EXIST( l_U425 )))))
        {
            l_U425 =  /* CREATEPED */ sub_14876( ref l_U412 );
            if (NOT (IS_PED_DEAD( l_U425 )))
            {
                SET_PED_NAME_DEBUG( l_U425, "piRandoandersmCiv" );
                FREEZE_PED_POSITION( l_U425, 1 );
                ISEQ_REGISTER_ENTITY( 1022559443, "anders", l_U425, 0 );
            }
            ISEQ_START( 1022559443 );
        }
    }
    return;
}

/* P_HANDLE_S_FAV1_VIG_09C_RES */ void sub_16513()
{
    if (NOT (DOES_PED_EXIST( g_U658 )))
    {
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref g_U684, g_U668, g_U671, 1794331553, 4, 1, 1, 0, 0 );
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref g_U697, g_U672, g_U675, -2124613950, 4, 1, 1, 0, 0 );
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref g_U710, g_U676, g_U679, -296288220, 4, 1, 1, 0, 0 );
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref g_U723, g_U680, g_U683, -2124613950, 4, 1, 1, 0, 0 );
        g_U658 =  /* CREATEPED */ sub_14876( ref g_U684 );
        g_U659 =  /* CREATEPED */ sub_14876( ref g_U697 );
        if (NOT (IS_PED_DEAD( g_U658 )))
        {
            SET_PED_NAME_DEBUG( g_U658, "piVig09C_1__" );
        }
        if (NOT (IS_PED_DEAD( g_U659 )))
        {
            SET_PED_NAME_DEBUG( g_U659, "piVig09C_2__" );
        }
        if (NOT (IS_PED_DEAD( g_U659 )))
        {
            FREEZE_PED_POSITION( g_U659, 1 );
        }
        g_U660 =  /* CREATEPED */ sub_14876( ref g_U710 );
        g_U661 =  /* CREATEPED */ sub_14876( ref g_U723 );
        ISEQ_REGISTER_ENTITY( -1196735135, "dealer1", g_U658, 0 );
        ISEQ_REGISTER_ENTITY( -1196735135, "dealer2", g_U659, 0 );
        ISEQ_REGISTER_ENTITY( -1196735135, "talker1", g_U660, 0 );
        ISEQ_REGISTER_ENTITY( -1196735135, "talker2", g_U661, 0 );
        if (NOT (IS_PED_DEAD( g_U658 )))
        {
            SET_PED_NAME_DEBUG( g_U658, "piVig09C_1" );
        }
        if (NOT (IS_PED_DEAD( g_U659 )))
        {
            SET_PED_NAME_DEBUG( g_U659, "piVig09C_2" );
        }
        if (NOT (IS_PED_DEAD( g_U660 )))
        {
            SET_PED_NAME_DEBUG( g_U660, "piVig09C_3" );
        }
        if (NOT (IS_PED_DEAD( g_U661 )))
        {
            SET_PED_NAME_DEBUG( g_U661, "piVig09C_4" );
        }
        ISEQ_START( -1196735135 );
        g_U667 = 0;
    }
    return;
}

/* P_HANDLE_VIG_09_B_SMOKER */ void sub_17182()
{
    if ( /* ISTIMERDONE */ sub_8809( ref l_U351 ))
    {
         /* LOADISEQ */ sub_13477( 353676333, 1 );
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U369, 67.98000000, -239.78000000, 4.53000000, 177.47000000, 986555693, 4, 1, 1, 0, 0 );
        l_U368 =  /* CREATEPED */ sub_14876( ref l_U369 );
        ISEQ_REGISTER_ENTITY( 353676333, "smoker", l_U368, 0 );
        ISEQ_START( 353676333 );
        if (NOT (IS_PED_DEAD( l_U368 )))
        {
            CLEAR_PED_PRIMARY_LOOKAT( l_U368 );
            SET_PED_PRIMARY_LOOKAT( l_U368,  /* PLAYER_PED_ID */ sub_2069() );
        }
    }
    return;
}

/* P_HANDLE_VIG_09_A */ void sub_17393()
{
    unknown uVar2;

    switch (l_U988)
    {
        case 0: break;
        case 1:
         /* CLEANPED */ sub_2470( l_U1355 );
        l_U1355 =  /* CREATEPED */ sub_14876( ref l_U1356 );
        if (NOT (IS_PED_DEAD( l_U1355 )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1355, 1 );
            SET_PED_AIM_LOCKONABLE( l_U1355, 0 );
            SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( l_U1355, 0 );
            SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U1355, 1 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2069() )))
            {
                SET_PED_DEFAULT_AIM_AT_PED( l_U1355,  /* PLAYER_PED_ID */ sub_2069() );
            }
        }
         /* TELEPORTPED */ sub_14534( l_U1355, l_U1369, l_U1372 );
        ISEQ_REGISTER_ENTITY( 868916918, "PED", l_U1355, 0 );
        ISEQ_START( 868916918 );
        if (NOT (IS_PED_DEAD( l_U1355 )))
        {
            OPEN_SEQUENCE_TASK( ref uVar2 );
            if (l_U1354 == 1)
            {
                TASK_FOLLOW_NAV_MESH_TO_COORD( 0, 105.70000000, -240.26000000, -2.93000000, 2, -1, 1048576000, 0, 0 );
            }
            else
            {
                TASK_FOLLOW_NAV_MESH_TO_COORD( 0, 105.70000000, -240.26000000, -2.93000000, 3, -1, 1048576000, 0, 0 );
            }
            CLOSE_SEQUENCE_TASK( uVar2 );
            TASK_PERFORM_SEQUENCE( l_U1355, uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
        }
        l_U988 = 2;
        break;
        case 2:
        if (((ISEQ_QUERY_ENTITY_STATE( 868916918, "PED", 6 )) == 1) || (((ISEQ_QUERY_STATE( 868916918, 3 )) == 0) || ((ISEQ_IS_LOADED( 868916918 )) == 0)))
        {
            l_U988 = 3;
        }
        break;
        case 3:
         /* CLEANPED */ sub_2470( l_U1355 );
        l_U988 = 0;
        break;
    }
    return;
}

/* P_HANDLE_INTRO_TIMER */ void sub_17910()
{
    if ( /* ISTIMERDONE */ sub_8809( ref l_U779 ))
    {
        if (NOT (IS_PED_DEAD( l_U410[0] )))
        {
             /* WRITESCRIPTLOG */ sub_1576( "SA", "Triggering Ditch Runner", "###" );
            TASK_FOLLOW_NAV_MESH_TO_COORD( l_U410[0], l_U824, 3, 20000, 1048576000, 0, 0 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U410[0] )))
    {
        if (( /* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ sub_18087( l_U410[0], l_U824 )) < 3)
        {
             /* WRITESCRIPTLOG */ sub_1576( "SA", "Deleting Ditch Runner", "###" );
             /* CLEANPED */ sub_2470( l_U410[0] );
        }
    }
    return;
}

/* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ void sub_18087(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    else
    {
        return -1.00000000;
    }
    return VDIST( uVar6, uParam1 );
}

/* P_HANDLE_BALCONY_TIMER */ void sub_18266()
{
    unknown uVar2;

    if (NOT (IS_PED_DEAD( l_U479[2] )))
    {
        if ( /* ISTIMERDONE */ sub_8809( ref l_U788 ))
        {
             /* WRITESCRIPTLOG */ sub_1576( "SA", "Sending Balcony Ped 2 inside", "###" );
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_ACHIEVE_HEADING( 0, (GET_PED_HEADING( l_U479[2] )) + 180, 0, 1085905306 );
            TASK_GO_STRAIGHT_TO_COORD( 0, l_U827, 2, 20000 );
            TASK_GO_STRAIGHT_TO_COORD( 0, l_U830, 2, 20000 );
            CLOSE_SEQUENCE_TASK( uVar2 );
            FREEZE_PED_POSITION( l_U479[2], 0 );
            CLEAR_PED_TASKS( l_U479[2] );
            TASK_PERFORM_SEQUENCE( l_U479[2], uVar2 );
        }
        if (( /* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ sub_18087( l_U479[2], l_U830 )) < 2)
        {
             /* WRITESCRIPTLOG */ sub_1576( "SA", "Deleting Balcony Ped 2", "###" );
             /* CLEANPED */ sub_2470( l_U479[2] );
        }
    }
    return;
}

/* P_HANDLE_WALKERS */ void sub_18607()
{
    if (NOT (IS_PED_DEAD( l_U612[1] )))
    {
        if (( /* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ sub_18087( l_U612[1], l_U845 )) < 2)
        {
             /* CLEANPED */ sub_2470( l_U612[1] );
        }
    }
    if (NOT (IS_PED_DEAD( l_U612[2] )))
    {
        if (( /* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ sub_18087( l_U612[2], l_U845 )) < 2)
        {
             /* CLEANPED */ sub_2470( l_U612[2] );
        }
    }
    return;
}

/* P_HANDLE_ISEQ_S_FAV1_VIG_09B */ void sub_18766()
{
    if (l_U990)
    {
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U1002, l_U994, l_U1000, 1656351018, 4, 1, 1, 0, 0 );
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U1015, l_U997, l_U1001, -2124613950, 4, 1, 1, 0, 0 );
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U1028, l_U1070, l_U1073, -296288220, 4, 1, 1, 0, 0 );
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U1043, l_U1074, l_U1077, 986555693, 4, 1, 1, 0, 0 );
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U1056, l_U1078, l_U1081, 1558652918, 4, 1, 1, 0, 0 );
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U1083, l_U1096, l_U1099, 1794331553, 4, 1, 1, 0, 0 );
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U1101, l_U1114, l_U1117, -1124039499, 4, 1, 1, 0, 0 );
         /* CLEANPED */ sub_2470( g_U662 );
         /* CLEANPED */ sub_2470( g_U663 );
         /* CLEANPED */ sub_2470( g_U664 );
         /* CLEANPED */ sub_2470( g_U665 );
         /* CLEANPED */ sub_2470( g_U666 );
         /* CLEANPED */ sub_2470( l_U1082 );
         /* CLEANPED */ sub_2470( l_U1100 );
        g_U662 =  /* CREATEPED */ sub_14876( ref l_U1002 );
        g_U663 =  /* CREATEPED */ sub_14876( ref l_U1015 );
        g_U664 =  /* CREATEPED */ sub_14876( ref l_U1028 );
        g_U665 =  /* CREATEPED */ sub_14876( ref l_U1043 );
        g_U666 =  /* CREATEPED */ sub_14876( ref l_U1056 );
        ISEQ_REGISTER_ENTITY( -1989829375, "balcony1", g_U662, 0 );
        ISEQ_REGISTER_ENTITY( -1989829375, "balcony2", g_U663, 0 );
        ISEQ_REGISTER_ENTITY( -1989829375, "balcony3", g_U664, 0 );
        ISEQ_REGISTER_ENTITY( -1989829375, "balcony4", g_U665, 0 );
        ISEQ_REGISTER_ENTITY( -1989829375, "balcony5", g_U666, 0 );
        l_U1069 =  /* CREATEOBJECT */ sub_19337( 1899377337, l_U1118, l_U1121, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U1069 ))
        {
            SET_OBJECT_COLLISION( l_U1069, 0 );
        }
        g_U736 =  /* CREATEOBJECT */ sub_19337( 1977329440, 126.25000000, -243.65000000, -4.57000000, 0.00000000, 0.00000000, 90.00000000, 0, 0, 0 );
        g_U737 =  /* CREATEOBJECT */ sub_19337( 1977329440, 126.12000000, -242.26000000, -4.45000000, 0.00000000, 0.00000000, 150.00000000, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( g_U736 ))
        {
            FREEZE_OBJECT_POSITION( g_U736, 1 );
            SET_OBJECT_COLLISION( g_U736, 0 );
        }
        if (DOES_OBJECT_EXIST( g_U737 ))
        {
            FREEZE_OBJECT_POSITION( g_U737, 1 );
            SET_OBJECT_COLLISION( g_U737, 0 );
        }
        l_U1041 =  /* CREATEOBJECTNOOFFSET */ sub_19881( 723970757, l_U1124, l_U1127, 0, 0, 0 );
        l_U1042 =  /* CREATEOBJECTNOOFFSET */ sub_19881( 723970757, l_U1124, l_U1127, 0, 0, 0 );
        if (NOT (IS_PED_DEAD( g_U665 )))
        {
            ATTACH_OBJECT_TO_PED( l_U1041, g_U665, 55060, 0.07000000, 0.14000000, 0.09000000, 0.60000000, 0.00000000, 0.00000000, 0 );
        }
        if (NOT (IS_PED_DEAD( g_U666 )))
        {
            ATTACH_OBJECT_TO_PED( l_U1042, g_U666, 54548, 0.04500000, 0.08500000, -0.05000000, -0.80000000, 0.20000000, 0.00000000, 0 );
        }
        ISEQ_REGISTER_ENTITY( -1989829375, "broom", l_U1069, 1 );
         /* TELEPORTPED */ sub_14534( g_U662, l_U994, l_U1000 );
         /* TELEPORTPED */ sub_14534( g_U663, l_U997, l_U1001 );
         /* TELEPORTPED */ sub_14534( g_U664, l_U1070, l_U1073 );
         /* TELEPORTPED */ sub_14534( g_U665, l_U1074, l_U1077 );
         /* TELEPORTPED */ sub_14534( g_U666, l_U1078, l_U1081 );
         /* TELEPORTPED */ sub_14534( l_U1082, l_U1096, l_U1099 );
         /* TELEPORTPED */ sub_14534( l_U1100, l_U1114, l_U1117 );
        if (NOT (IS_PED_DEAD( g_U662 )))
        {
            SET_PED_NAME_DEBUG( g_U662, "piVIG09B_Bal_1" );
        }
        if (NOT (IS_PED_DEAD( g_U663 )))
        {
            SET_PED_NAME_DEBUG( g_U663, "piVIG09B_Bal_2" );
        }
        if (NOT (IS_PED_DEAD( g_U664 )))
        {
            SET_PED_NAME_DEBUG( g_U664, "piVIG09B_Bal_3" );
        }
        if (NOT (IS_PED_DEAD( g_U665 )))
        {
            SET_PED_NAME_DEBUG( g_U665, "piVIG09B_Bal_4" );
        }
        if (NOT (IS_PED_DEAD( g_U666 )))
        {
            SET_PED_NAME_DEBUG( g_U666, "piVIG09B_Bal_5" );
        }
        if (NOT (IS_PED_DEAD( l_U1100 )))
        {
            SET_PED_NAME_DEBUG( l_U1100, "piVIG09B_Bal_7" );
        }
        ISEQ_START( -1989829375 );
        if ((DOES_PED_EXIST( g_U659 )) AND (NOT (IS_PED_DEAD( g_U659 ))))
        {
            PED_SET_ACTION_INTENTION( g_U659, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
            FREEZE_PED_POSITION( g_U659, 0 );
        }
        l_U990 = 0;
    }
    return;
}

/* CREATEOBJECT */ void sub_19337(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_13160( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* CREATEOBJECTNOOFFSET */ void sub_19881(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_13160( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* P_HANDLE_VIG_11 */ void sub_20930()
{
     /* STARTTIMER */ sub_12849( ref l_U770 );
    if ( /* ISTIMERDONE */ sub_8809( ref l_U806 ))
    {
        if ((DOES_PED_EXIST( l_U620 )) AND (NOT (IS_PED_DEAD( l_U620 ))))
        {
            PED_SET_ACTION_INTENTION( l_U620, 47, 1000, 0, 0, 0 );
        }
    }
    if ( /* ISTIMERDONE */ sub_8809( ref l_U815 ))
    {
        if ((DOES_PED_EXIST( l_U638 )) AND (NOT (IS_PED_DEAD( l_U638 ))))
        {
            PED_SET_ACTION_INTENTION( l_U638, 47, 1000, 0, 0, 0 );
        }
    }
    if ( /* ISTIMERDONE */ sub_8809( ref l_U770 ))
    {
         /* P_CLOSEDOOR */ sub_21124( ref l_U756, 0 );
    }
    return;
}

/* P_CLOSEDOOR */ void sub_21124(int iParam0, int iParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_10296( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_10380( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

/* P_HANDLE_VIG_SITTER */ void sub_21271()
{
    if (l_U992)
    {
        l_U652 =  /* CREATEPED */ sub_14876( ref l_U653 );
         /* LOADISEQ */ sub_13477( 123547706, 1 );
        ISEQ_REGISTER_ENTITY( 123547706, "sitter", l_U652, 0 );
        ISEQ_START( 123547706 );
        l_U992 = 0;
    }
    return;
}

/* P_HANDLE_VIG_SWEEPER */ void sub_21392()
{
    if (l_U993)
    {
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U382, 65.92000000, -243.17000000, 0.04000000, 90.00000000, -1124039499, 4, 1, 1, 0, 0 );
        l_U395 =  /* CREATEPED */ sub_14876( ref l_U382 );
        if (NOT (IS_PED_DEAD( l_U395 )))
        {
            CLEAR_ALL_PED_PROPS( l_U395 );
            SET_PED_PROP_INDEX( l_U395, 13, 1, 0, 255 );
        }
        ISEQ_REGISTER_ENTITY( 512666002, "sweeper", l_U395, 0 );
        ISEQ_START( 512666002 );
        l_U993 = 0;
    }
    return;
}

/* P_DEBUG_HANDLE_VIG_12B */ void sub_21592()
{
    int I;

    switch (l_U1287)
    {
        case 0: break;
        case 1:
         /* LOADISEQ */ sub_13477( 353747438, 1 );
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U1194[0], l_U1260, l_U1263, -976650743, 4, 1, 1, 0, 0 );
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U1194[1], l_U1264, l_U1267, -459567353, 4, 1, 1, 0, 0 );
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U1194[2], l_U1268, l_U1271, -19214611, 4, 1, 1, 0, 0 );
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U1194[3], l_U1272, l_U1275, 645975154, 4, 1, 1, 0, 0 );
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U1194[4], l_U1276, l_U1279, -1173153379, 4, 1, 1, 0, 0 );
         /* CLEANPEDARRAY */ sub_2559( ref l_U1188 );
        for ( I = 0; I < l_U1188; I++ )
        {
            l_U1188[I] =  /* CREATEPED */ sub_14876( ref l_U1194[I] );
            if (((IS_PED_DEAD( l_U1188[I] )) == 0) AND ((DOES_PED_EXIST( l_U1188[I] )) == 1))
            {
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1188[I], 1 );
            }
        }
        if (((IS_PED_DEAD( l_U1188[1] )) == 0) AND ((DOES_PED_EXIST( l_U1188[1] )) == 1))
        {
            CLEAR_ALL_PED_PROPS( l_U1188[1] );
            SET_PED_PROP_INDEX( l_U1188[1], 12, 0, 0, 255 );
            SET_PED_PROP_INDEX( l_U1188[1], 13, 0, 0, 255 );
        }
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_22093( ref l_U1188, "piVig12_Civs" );
         /* TELEPORTPED */ sub_14534( l_U1188[0], l_U1260, l_U1263 );
         /* TELEPORTPED */ sub_14534( l_U1188[1], l_U1264, l_U1267 );
         /* TELEPORTPED */ sub_14534( l_U1188[2], l_U1268, l_U1271 );
         /* TELEPORTPED */ sub_14534( l_U1188[3], l_U1272, l_U1275 );
         /* TELEPORTPED */ sub_14534( l_U1188[4], l_U1276, l_U1279 );
        ISEQ_REGISTER_ENTITY( 353747438, "CIV", l_U1188[0], 0 );
        ISEQ_REGISTER_ENTITY( 353747438, "CIV1", l_U1188[1], 0 );
        ISEQ_REGISTER_ENTITY( 353747438, "CIV2", l_U1188[2], 0 );
        ISEQ_REGISTER_ENTITY( 353747438, "CIV3", l_U1188[3], 0 );
        ISEQ_REGISTER_ENTITY( 353747438, "CIV4", l_U1188[4], 0 );
        ISEQ_START( 353747438 );
        DO_SCREEN_FADE_IN( 0 );
        l_U1287 = 2;
        break;
        case 2:
         /* CREATETIMER */ sub_11596( ref l_U288, 8750, 1, 0 );
         /* STARTTIMER */ sub_12849( ref l_U288 );
         /* CREATETIMER */ sub_11596( ref l_U297, 17000, 1, 0 );
         /* STARTTIMER */ sub_12849( ref l_U297 );
        l_U1287 = 3;
        break;
        case 3:
        if (( /* ISTIMERDONE */ sub_8809( ref l_U288 )) == 1)
        {
            ISEQ_UNREGISTER_ENTITY( 353747438, "CIV1" );
             /* CLEANPED */ sub_2470( l_U1188[1] );
        }
        if ( /* ISTIMERDONE */ sub_8809( ref l_U297 ))
        {
            l_U1287 = 4;
        }
        break;
        case 4:
        ISEQ_UNREGISTER_ENTITY( 353747438, "CIV" );
        ISEQ_UNREGISTER_ENTITY( 353747438, "CIV1" );
        ISEQ_UNREGISTER_ENTITY( 353747438, "CIV2" );
        ISEQ_UNREGISTER_ENTITY( 353747438, "CIV3" );
        ISEQ_UNREGISTER_ENTITY( 353747438, "CIV4" );
         /* TERMINATEISEQ */ sub_2792( 353747438, 1 );
         /* CLEANPEDARRAY */ sub_2559( ref l_U1188 );
        l_U1287 = 0;
        break;
    }
    return;
}

/* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ void sub_22093(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

/* P_HANDLE_ISEQ_VIG_03 */ void sub_22781()
{
    int I;

    switch (l_U966)
    {
        case 0: break;
        case 1:
         /* LOADISEQ */ sub_13477( 1782590701, 1 );
        l_U942[0] =  /* CREATEOBJECTNOOFFSET */ sub_19881( 723970757, l_U948 + (vector( 1.00000000, 1.00000000, 1.00000000)), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        l_U942[2] =  /* CREATEOBJECTNOOFFSET */ sub_19881( 723970757, l_U956 + (vector( 1.00000000, 1.00000000, 1.00000000)), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U897[0], l_U948, l_U951, -19214611, 4, 1, 1, 0, 0 );
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U897[1], l_U952, l_U955, 645975154, 4, 1, 1, 0, 0 );
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U897[2], l_U956, l_U959, -1173153379, 4, 1, 1, 0, 0 );
        for ( I = 0; I < l_U937; I++ )
        {
             /* CLEANPED */ sub_2470( l_U937[I] );
            l_U937[I] =  /* CREATEPED */ sub_14876( ref l_U897[I] );
            if (NOT (IS_PED_DEAD( l_U937[I] )))
            {
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U937[I], 1 );
                SET_PED_AIM_LOCKONABLE( l_U937[I], 0 );
                SET_COLLISION_BETWEEN_PEDS( l_U937[I], 0 );
                if (I == 0)
                {
                    ATTACH_OBJECT_TO_PED( l_U942[I], l_U937[I], 54548, 0.04500000, 0.08500000, -0.05000000, -0.80000000, 0.20000000, 0.00000000, 0 );
                }
                else if (I == 2)
                {
                    ATTACH_OBJECT_TO_PED( l_U942[I], l_U937[I], 55060, -0.02000000, 0.26000000, 0.06000000, 0.52000000, -0.76000000, -0.04000000, 0 );
                }
            }
        }
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_22093( ref l_U937, "piVig03civs_" );
         /* TELEPORTPED */ sub_14534( l_U937[0], l_U948, l_U951 );
         /* TELEPORTPED */ sub_14534( l_U937[1], l_U952, l_U955 );
         /* TELEPORTPED */ sub_14534( l_U937[2], l_U956, l_U959 );
        ISEQ_REGISTER_ENTITY( 1782590701, "CIVILIAN1", l_U937[0], 0 );
        ISEQ_REGISTER_ENTITY( 1782590701, "CIVILIAN2", l_U937[1], 0 );
        ISEQ_REGISTER_ENTITY( 1782590701, "CIVILIAN3", l_U937[2], 0 );
        ISEQ_START( 1782590701 );
        l_U966 = 2;
         /* RESETTIMER */ sub_3951( ref l_U315 );
         /* CREATETIMER */ sub_11596( ref l_U315, 5000, 1, 0 );
         /* STARTTIMER */ sub_12849( ref l_U315 );
        break;
        case 2:
        if ( /* ISTIMERDONE */ sub_8809( ref l_U315 ))
        {
            l_U966 = 3;
        }
        break;
        case 3:
        if ((ISEQ_QUERY_ENTITY_STATE( 1782590701, "CIVILIAN1", 6 )) || (((ISEQ_QUERY_STATE( 1782590701, 3 )) == 0) || ((ISEQ_IS_LOADED( 1782590701 )) == 0)))
        {
            l_U966 = 4;
        }
        break;
        case 4:
        ISEQ_UNREGISTER_ENTITY( 1782590701, "CIVILIAN1" );
        ISEQ_UNREGISTER_ENTITY( 1782590701, "CIVILIAN2" );
        ISEQ_UNREGISTER_ENTITY( 1782590701, "CIVILIAN3" );
         /* TERMINATEISEQ */ sub_2792( 1782590701, 1 );
         /* CLEANPEDARRAY */ sub_2559( ref l_U937 );
         /* CLEANOBJECT */ sub_3612( l_U941 );
         /* CLEANOBJECT */ sub_3612( l_U942[0] );
         /* CLEANOBJECT */ sub_3612( l_U942[1] );
         /* CLEANOBJECT */ sub_3612( l_U942[2] );
        l_U966 = 0;
        break;
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_23891( ref l_U75, 0 ))
    {
        l_U946 = 1;
    }
    if (l_U946)
    {
        l_U946 = 0;
        if ((DOES_PED_EXIST( l_U937[0] )) AND (NOT (IS_PED_DEAD( l_U937[0] ))))
        {
            PED_SET_ACTION_INTENTION( l_U937[0], 47, 5000, 0.00000000, 0.00000000, 0.00000000 );
        }
        if ((DOES_PED_EXIST( l_U937[1] )) AND (NOT (IS_PED_DEAD( l_U937[1] ))))
        {
            PED_SET_ACTION_INTENTION( l_U937[1], 47, 5000, 0.00000000, 0.00000000, 0.00000000 );
        }
        if ((DOES_PED_EXIST( l_U937[2] )) AND (NOT (IS_PED_DEAD( l_U937[2] ))))
        {
            PED_SET_ACTION_INTENTION( l_U937[2], 47, 5000, 0.00000000, 0.00000000, 0.00000000 );
        }
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_23891(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_23967(  /* PLAYER_PED_ID */ sub_2069(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* F_ISPEDINTRIGGERBOX */ int sub_23967(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* F_HANDLE_RANDOM_CUTSCENE */ int sub_24342()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;

    switch (l_U968)
    {
        case 0:
        if (HAS_EXPLORATION_ITEM_BEEN_FOUND( "sclb_Anders1" ))
        {
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2069() )))
            {
                if (( /* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ sub_18087(  /* PLAYER_PED_ID */ sub_2069(), 76.60000000, -248.23000000, 1.35000000 )) < 3.00000000)
                {
                    if (HAS_CUTSCENE_LOADED())
                    {
                        CLEAR_NAMED_CUTSCENE( ref l_U360 );
                    }
                    l_U968 = 1;
                }
            }
        }
        break;
        case 1:
         /* WRITESCRIPTLOG */ sub_1576( "SA", "eRandomCutsceneState = CUTSCENE_REQUEST_ASSETS", 0 );
        if (HAS_CUTSCENE_UNLOADED())
        {
             /* LOADMODEL */ sub_13160( 2001921552, 0 );
             /* LOADSEAMLESSCUTSCENE */ sub_24659( ref l_U1130, 0 );
            l_U968 = 2;
             /* WRITESCRIPTLOG */ sub_1576( "SA", "eRandomCutsceneState = CUTSCENE_LOAD_ASSETS", 0 );
        }
        break;
        case 2:
        if ((HAS_CUTSCENE_LOADED()) AND (HAS_MODEL_LOADED( 2001921552 )))
        {
            l_U968 = 3;
        }
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_1576( "SA", "eRandomCutsceneState = CUTSCENE_SETUP", 0 );
        l_U968 = 4;
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_1576( "SA", "eRandomCutsceneState = CUTSCENE_START", 0 );
        if (((IS_PED_DEAD( l_U425 )) == 0) AND ((DOES_PED_EXIST( l_U425 )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U425, "Andr_UC", 0 );
        }
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2069() )))
        {
            CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_2069(), "/Global/S_FAV1_WALK/S_FAV1_WALK/S_FAV1_WALK" );
            CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_2069(), 75.81089000, -246.05320000, -0.24770800, 76.21000000 );
        }
        SET_VISIBILITY_OF_CLOSEST_OBJECT_OF_TYPE( l_U763._fU4, 1.00000000, l_U763._fU0, 0 );
        CUTSCENE_ENABLE_SKIP( 0 );
        START_SEAMLESS_CUTSCENE();
        l_U968 = 5;
         /* WRITESCRIPTLOG */ sub_1576( "SA", "eRandomCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        break;
        case 5:
         /* WRITESCRIPTLOG */ sub_1576( "SA", "eRandomCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        DO_SCREEN_FADE_IN( 0 );
        l_U968 = 6;
         /* WRITESCRIPTLOG */ sub_1576( "SA", "eRandomCutsceneState = CUTSCENE_PLAYING", 0 );
        break;
        case 6:
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            uVar2 = GET_CUTSCENE_SECTION_PLAYING();
            uVar3 = GET_CUTSCENE_TIME();
            uVar4 = GET_CUTSCENE_TIME_MS();
        }
        else
        {
            SET_VISIBILITY_OF_CLOSEST_OBJECT_OF_TYPE( l_U763._fU4, 1.00000000, l_U763._fU0, 1 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( -2.70084800, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( 1.14725300, 1065353216, 0 );
            CLEAR_NAMED_CUTSCENE( ref l_U1130 );
             /* CLEANPED */ sub_2470( l_U425 );
             /* UNLOADMODEL */ sub_25760( 2001921552 );
            l_U968 = 7;
             /* WRITESCRIPTLOG */ sub_1576( "SA", "eRandomCutsceneState = CUTSCENE_UNLOAD", 0 );
            return 1;
        }
        break;
        case 7:
        if (HAS_CUTSCENE_UNLOADED())
        {
            if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "sfav0_Anders2" )))
            {
                FOUND_EXPLORATION_ITEM( "sfav0_Anders2" );
            }
             /* KILL_ANY_MISSION_SPEECH */ sub_26042( 0 );
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_26245( ref l_U666 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_26356( 0,  /* PLAYER_PED_ID */ sub_2069(), "MAX", ref l_U666, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_26356( 1,  /* PLAYER_PED_ID */ sub_2069(), "MAX", ref l_U666, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_26626( "SFV1_MXENCAN", ref l_U666, 8, 1 );
             /* LOADSEAMLESSCUTSCENE */ sub_24659( ref l_U360, 0 );
            l_U968 = 8;
             /* WRITESCRIPTLOG */ sub_1576( "SA", "eRandomCutsceneState = CUTSCENE_FINISHED", 0 );
        }
        break;
    }
    return 0;
}

/* LOADSEAMLESSCUTSCENE */ void sub_24659(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* UNLOADMODEL */ void sub_25760(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
         /* WRITE_STRING */ sub_6389( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

/* KILL_ANY_MISSION_SPEECH */ void sub_26042(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        PRINTSTRING( "\n KILL_ANY_MISSION_SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_26245(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_26356(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_26626(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_26671( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_26671(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_26758( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_26758(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_26810( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_27328( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_26810(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_27328(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* P_HANDLE_IMAGEFX_CAFE */ void sub_27609()
{
    if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_27653( ref l_U159,  /* PLAYER_PED_ID */ sub_2069(), 0 ))
    {
         /* P_RUN_SPECIFIC_INTERLACE_FX */ sub_9011( "FLICKER_VIBRATE_INTERLACE_M", 4, 0 );
         /* P_RUN_SPECIFIC_INTERLACE_FX */ sub_9011( "FLICKER_VIBRATE_INTERLACE_M", 4, 0 );
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_23891( ref l_U180, 0 ))
    {
         /* P_RUN_SPECIFIC_INTERLACE_FX */ sub_9011( "TRIPLE_MOVE_RIGHT_FAST", 4, 0 );
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_23891( ref l_U222, 0 ))
    {
         /* P_RUN_SPECIFIC_INTERLACE_FX */ sub_9011( "FLICKER_VIBRATE_INTERLACE_M", 4, 0 );
         /* P_RUN_SPECIFIC_INTERLACE_FX */ sub_9011( "FLICKER_VIBRATE_INTERLACE_M", 4, 0 );
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_23891( ref l_U201, 0 ))
    {
         /* P_RUN_SPECIFIC_INTERLACE_FX */ sub_9011( "FLICKER_VIBRATE_ZOOM_01", 3, 0 );
         /* CREATETIMER */ sub_11596( ref l_U342, 1000, 1, 0 );
         /* STARTTIMER */ sub_12849( ref l_U342 );
    }
    if ( /* ISTIMERDONE */ sub_8809( ref l_U342 ))
    {
         /* P_RUN_SPECIFIC_INTERLACE_FX */ sub_9011( "FLICKER_VIBRATE_LONG", 4, 1 );
    }
    return;
}

/* F_ISPEDINTRIGGERBOXFIRSTTIME */ void sub_27653(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 =  /* F_ISPEDINTRIGGERBOX */ sub_23967( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

/* ADD_PED_FOR_SCRIPT_SPEECH_ENUM */ void sub_28354(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = uParam2;
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* KILL_SPEECH */ void sub_28835(int iParam0, unknown uParam1)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_28863( (iParam0^) )))
    {
        ;
    }
    else
    {
        PRINTSTRING( "\n KILL SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
        {
            if (iParam0->_fU8 == g_U6[iParam0->_fU4])
            {
                STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
            }
        }
    }
    return;
}

/* IS_SCRIPT_SPEECH_STRUCT_VALID */ boolean sub_28863(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

/* P_LIMIT_PLAYER_ACTIONS */ void sub_29404()
{
     /* WRITESCRIPTLOG */ sub_1576( "SA", "P_LIMIT_PLAYER_ACTIONS", "###" );
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2069() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_2107() )) == 0))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2107(), 0, 0 );
        REENABLE_PLAYER_INPUT( 7 );
        REENABLE_PLAYER_INPUT( 10 );
        REENABLE_PLAYER_INPUT( 11 );
        REENABLE_PLAYER_INPUT( 12 );
        REENABLE_PLAYER_INPUT( 13 );
        REENABLE_PLAYER_INPUT( 14 );
        REENABLE_PLAYER_INPUT( 15 );
        REENABLE_PLAYER_INPUT( 16 );
        REENABLE_PLAYER_INPUT( 17 );
        REENABLE_PLAYER_INPUT( 19 );
        REENABLE_PLAYER_INPUT( 22 );
    }
    return;
}

/* P_PLAYER_LOOK_AT_COORD */ void sub_29641(unknown uParam0, unknown uParam1, unknown uParam2)
{
     /* WRITESCRIPTLOG */ sub_1576( "rw", "P_PLAYER_LOOK_AT_Coord", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2069() )))
    {
        CLEAR_PED_PRIMARY_LOOKAT(  /* PLAYER_PED_ID */ sub_2069() );
    }
     /* P_START_LOOK_TIME */ sub_29742();
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2069() )))
    {
        SET_COORD_PRIMARY_LOOKAT(  /* PLAYER_PED_ID */ sub_2069(), uParam0 );
    }
    return;
}

/* P_START_LOOK_TIME */ void sub_29742()
{
     /* WRITESCRIPTLOG */ sub_1576( "RW", "P_START_LOOK_TIME()", "###" );
     /* RESETTIMER */ sub_3951( ref g_U738 );
     /* CREATETIMER */ sub_11596( ref g_U738, 5500, 1, 0 );
     /* STARTTIMER */ sub_12849( ref g_U738 );
    return;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_29970(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_1576( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_1576( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_7554( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_30261( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_30738( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_30738( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_30998( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_30738( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_30998( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_30998( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_30738( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_30998( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_30998( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_30998( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_30738( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_30998( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_30998( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_30998( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_30998( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_32578( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_1576( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_30261(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_4569( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_1576( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_1576( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_30738(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_30998(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_32578(int iParam0)
{
     /* WRITE_STRING */ sub_6389( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_32666( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_32743( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_32743( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_32743( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_32912( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_32912( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_32912( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_32912( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_32912( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_32912( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_32912( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_32912( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_32912( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_32912( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_32912( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_32743( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_32912( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_32912( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_32912( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_32743( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_33613( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_32912( iParam0->_fU52 );
     /* WRITE_STRING */ sub_6389( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_32912( iParam0->_fU96 );
     /* WRITE_STRING */ sub_6389( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_32912( iParam0->_fU100 );
     /* WRITE_STRING */ sub_6389( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_32912( iParam0->_fU104 );
     /* WRITE_STRING */ sub_6389( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_32912( iParam0->_fU108 );
     /* WRITE_STRING */ sub_6389( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_32912( iParam0->_fU112 );
     /* WRITE_STRING */ sub_6389( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_32912( iParam0->_fU116 );
     /* WRITE_STRING */ sub_6389( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_32912( iParam0->_fU120 );
     /* WRITE_STRING */ sub_6389( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_32912( iParam0->_fU124 );
     /* WRITE_STRING */ sub_6389( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_32912( iParam0->_fU128 );
     /* WRITE_STRING */ sub_6389( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_32912( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_32912( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_32912( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_32666(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_32743(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_32912(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_33613(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* NIS_PRE_SETUP */ void sub_34880(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2069() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2107(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_2069(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_2069() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_2069(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* NIS_BLACK_SCREEN_WITH_TEXT */ void sub_35163(unknown uParam0, int iParam1, boolean bParam2, unknown uParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    boolean bVar15;

     /* CREATETIMER */ sub_11596( ref uVar6, iParam1 + 600, 1, 0 );
    bVar15 = false;
    CLEAR_HELP();
    CLEAR_PRINTS();
     /* P_FADE_OUT_AND_WAIT */ sub_35236( uParam3 );
    PRINT_STRING_WITH_LITERAL_STRING( "STRING", uParam0, iParam1, 1 );
    DRAW_RECT( 0.50000000, 0.50000000, 1, 1, 0, 0, 0, 255 );
    DO_SCREEN_FADE_IN( 0 );
    DRAW_RECT( 0.50000000, 0.50000000, 1, 1, 0, 0, 0, 255 );
     /* STARTTIMER */ sub_12849( ref uVar6 );
    while ((NOT bVar15) AND (NOT ( /* ISTIMERDONE */ sub_8809( ref uVar6 ))))
    {
        WAIT( 0 );
        DRAW_RECT( 0.50000000, 0.50000000, 1, 1, 0, 0, 0, 255 );
        if (bParam2)
        {
            if ( /* NIS_IS_SKIPPED */ sub_35540())
            {
                bVar15 = true;
            }
        }
    }
    DO_SCREEN_FADE_OUT( 0 );
    CLEAR_PRINTS();
    return;
}

/* P_FADE_OUT_AND_WAIT */ void sub_35236(unknown uParam0)
{
    if ((IS_SCREEN_FADING_OUT() == 0) AND (IS_SCREEN_FADED_OUT() == 0))
    {
        DO_SCREEN_FADE_OUT( uParam0 );
        while (IS_SCREEN_FADED_OUT() == 0)
        {
            DISPLAYF( "[SP]### Waiting for screen to fade out... ###", 0 );
            WAIT( 0 );
        }
    }
    return;
}

/* NIS_IS_SKIPPED */ int sub_35540()
{
    if (((IS_BUTTON_PRESSED( 0, 16 )) == 1) || ((IS_BUTTON_JUST_PRESSED( 0, 16 )) == 1))
    {
         /* WRITE_STRING */ sub_6389( "[SP] NIS_IS_SKIPPED returning true" );
        return 1;
    }
    return 0;
}

/* NIS_POST_SETUP */ void sub_35689(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2069() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2107(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_2069(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_35787();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_35787()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2069() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2069(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2069(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_2069(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_2069(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* NIS_RETURN_TO_GAMEPLAY_CAM */ void sub_36007(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

/* P_CREATE_07_03_ACTORS */ void sub_36319()
{
     /* WRITESCRIPTLOG */ sub_1576( "rw", "P_CREATE_BOUNCER", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U1306[0], 0.00000000, 1.00000000, 2.00000000, 0, -1208915897, 4, 1, 1, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9351( ref l_U1306[1], 0.00000000, 1.00000000, 2.00000000, 0, 751117464, 4, 1, 1, 0, 0 );
     /* CLEANPED */ sub_2470( l_U1333[0] );
     /* CLEANPED */ sub_2470( l_U1333[1] );
    l_U1333[0] =  /* CREATEPED */ sub_14876( ref l_U1306[0] );
    l_U1333[1] =  /* CREATEPED */ sub_14876( ref l_U1306[1] );
    return;
}

/* P_UNLOAD_ASSETS */ void sub_36844()
{
     /* WRITESCRIPTLOG */ sub_1576( "SA", "P_UNLOAD_ASSETS", "###" );
     /* UNLOADMODEL */ sub_25760( 2001921552 );
     /* UNLOADMODEL */ sub_25760( -1745537260 );
     /* UNLOADMODEL */ sub_25760( 1422427243 );
     /* UNLOADMODEL */ sub_25760( -895916100 );
     /* UNLOADMODEL */ sub_25760( 1899377337 );
     /* UNLOADMODEL */ sub_25760( 723970757 );
     /* UNLOADMODEL */ sub_25760( 2001921552 );
     /* TERMINATEISEQ */ sub_2792( 868916918, 1 );
     /* TERMINATEISEQ */ sub_2792( -1989829375, 1 );
    return;
}

/* P_HANDLE_HEAD_TRACK */ void sub_37044()
{
    if ( /* ISTIMERDONE */ sub_8809( ref g_U738 ))
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2069() )))
        {
            CLEAR_PED_PRIMARY_LOOKAT(  /* PLAYER_PED_ID */ sub_2069() );
        }
    }
    return;
}


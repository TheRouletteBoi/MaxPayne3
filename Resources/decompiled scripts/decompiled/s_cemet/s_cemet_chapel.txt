void main()
{
    l_U0 = 0;
    l_U1 = 1;
    l_U2 = 0;
    l_U3 = 1.00000000;
    l_U4 = -5.00000000;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U11 = 42;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 90.00000000;
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = nil;
    l_U31 = {0.00000000, 0.00000000, 0.00000000};
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U37 = 1;
    l_U38 = 144;
    l_U40 = 0;
    l_U41 = 0;
    l_U42 = 1500;
    l_U52 = {0, 0, 0};
    StrCopy( ref l_U55, "DUMMY", 32 );
    l_U63 = 1;
    l_U68 = 0;
    l_U69 = 0;
    l_U70 = 0;
    l_U73 = 0;
    l_U118 = -1;
    l_U119 = {64536, 64536, 64536};
    l_U122 = "PED_DEF";
    l_U164 = 1.00000000;
    l_U176 = 0;
    l_U217 = 0;
    l_U258 = 0;
    l_U260 = 1;
    l_U261 = 0;
    l_U262 = 1;
    l_U263 = 0;
    StrCopy( ref l_U264, "08_05_CEMETERY_concat", 32 );
    l_U291 = 1;
    l_U337 = "mid_08_cem_concat";
    l_U352 = 0;
    l_U366 = {60.10000000, -110.65000000, 5.38000000};
    l_U369 = 196.00000000;
    l_U482 = 0;
    l_U649 = {64.00000000, -112.35000000, 4.99000000};
    l_U652 = {63.50000000, -107.85000000, 4.99000000};
    l_U655 = {63.50000000, -103.50000000, 4.99000000};
    l_U721 = {74.00000000, -101.72000000, 4.99079600};
    l_U724 = {74.00000000, -113.72000000, 4.99079600};
    l_U1298 = {90.46000000, -111.19000000, 5.77000000};
    l_U1301 = {89.98800000, -110.67600000, 4.99900000};
    l_U1304 = -120.61500000;
    l_U1334 = {74.11000000, -108.30000000, 4.99070400};
    l_U1337 = {71.05000000, -104.14000000, 7.70000000};
    l_U1340 = {-16.04000000, 0.00000000, -140.06000000};
    l_U1343 = {64.20000000, -112.58000000, 7.69000000};
    l_U1346 = {-26.02000000, 0.00000000, 58.52000000};
    l_U1561 = 0;
     /* WRITESCRIPTLOG */ sub_812( "SBA", "s_cemet_chapel script started.", "***" );
    l_U258 = 0;
     /* P_INITIALIZE_SCRIPT_DATA */ sub_936();
     /* P_SET_STATIC_GAMEPLAY_DATA */ sub_2548();
     /* P_LOAD_ASSETS_CHAPEL */ sub_6758();
     /* P_LOAD_AUDIO_ASSETS_CHAPEL */ sub_7904();
     /* P_LOAD_WEAPONS */ sub_8152( 10 );
     /* P_CREATE_CHAPEL_PILLS */ sub_8678();
    if (g_U825 == 10)
    {
         /* WRITESCRIPTLOG */ sub_812( "SBA", "s_cemet_chapel is starting from dev menu", "***" );
         /* P_SETUP_MAX_FROM_CHECKPOINT */ sub_9108();
        l_U1568 = 1;
        g_U826 = 10;
        l_U260 = 1;
         /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_14108( ref l_U752, g_U826, g_U1178, g_U971[10]._fU0, g_U971[10]._fU12, g_U971[10]._fU16, g_U971[10]._fU20, 0 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_812( "SBA", "s_cemet_chapel is starting in flow", "***" );
         /* LOADSEAMLESSCUTSCENE */ sub_18774( ref l_U264, 0 );
        l_U1568 = 0;
    }
    while (NOT IS_EXITFLAG_SET())
    {
        if (g_U826 == 10)
        {
             /* P_HANDLE_MUSIC */ sub_19145();
        }
         /* P_HANDLE_CHECKPOINTS */ sub_19864();
        if (l_U1567 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_29931();
        }
        WAIT( 0 );
    }
     /* P_CLEANUP_ALL */ sub_28021( 0 );
     /* P_UNLOAD_ASSETS_CHAPEL */ sub_73333();
     /* P_UNLOAD_WEAPONS */ sub_73642( 10 );
    if (g_U826 == 10)
    {
        if (IS_ARCADE_MODE_ACTIVE() == 0)
        {
            SWITCH_TO_LEVEL_NAME( "s_fav2" );
        }
    }
     /* WRITESCRIPTLOG */ sub_812( "SBA", "s_cemet_chapel script ended", "***" );
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_cemet_chapel" );
    SET_EXITFLAG_RESPONSE();
    return;
}

/* WRITESCRIPTLOG */ void sub_812(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_936()
{
    int I;

     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_INITIALIZE_SCRIPT_DATA", "***" );
    l_U1568 = 1;
    l_U1513 = -1;
    l_U1565 = 0;
    l_U1514 = -1;
    l_U1566 = 1;
    l_U1515 = 0;
    l_U788 = 0;
    l_U482 = 0;
    l_U789 = 0;
    l_U790 = 0;
    l_U791 = 0;
    l_U792 = 0;
    l_U793 = 0;
    l_U794 = 0;
    l_U795 = 0;
    l_U796 = 0;
    l_U797 = 0;
    l_U798 = 0;
    l_U799 = 0;
    l_U800 = 0;
    l_U801 = 0;
    l_U1521 = 0;
    l_U1522 = 0;
    l_U1523 = 0;
    l_U1519 = 0;
    l_U1518 = 0;
    l_U1520 = 0;
    l_U1561 = 0;
    l_U647 = 1;
    l_U648 = 0;
    l_U803 = 0;
    l_U802 = 0;
    l_U804 = 0;
    l_U805[0] = 0;
    l_U805[1] = 0;
    l_U805[2] = 0;
    l_U805[3] = 0;
    l_U805[4] = 0;
    l_U811 = 0;
    l_U1210 = 8000;
    l_U1211 = 0;
    l_U1563 = 0;
    l_U1564 = 0;
    l_U733 = 0;
     /* CREATETIMER */ sub_1307( ref l_U1174, 1500, 1, 0 );
     /* RESETTIMER */ sub_1457( ref l_U464 );
     /* RESETTIMER */ sub_1457( ref l_U473 );
     /* RESETTIMER */ sub_1457( ref l_U1183 );
     /* RESETTIMER */ sub_1457( ref l_U1192 );
     /* RESETTIMER */ sub_1457( ref l_U1201 );
     /* RESETTIMER */ sub_1457( ref l_U1524 );
     /* RESETTIMER */ sub_1457( ref l_U1533 );
     /* RESETTIMER */ sub_1457( ref l_U1542 );
    for ( I = 0; I <= (l_U532 - 1); I++ )
    {
         /* RESETTIMER */ sub_1457( ref l_U532[I] );
    }
    for ( I = 0; I <= (l_U587 - 1); I++ )
    {
         /* RESETTIMER */ sub_1457( ref l_U587[I] );
    }
    for ( I = 0; I <= (l_U635 - 1); I++ )
    {
         /* RESETTIMER */ sub_1457( ref l_U635[I] );
    }
    l_U1323 = 0;
    l_U1324 = 0;
     /* SETUP_SCRIPTED_SPEECH */ sub_1792( "SCMTAUD" );
     /* P_INITIALIZE_SP_CHALLENGES */ sub_1955();
    return;
}

/* CREATETIMER */ void sub_1307(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* RESETTIMER */ void sub_1457(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_1792(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_1836();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_1836()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* P_INITIALIZE_SP_CHALLENGES */ void sub_1955()
{
     /* WRITESCRIPTLOG */ sub_812( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U1569 = 0;
    l_U1570 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( 1701971384 )))
    {
         /* WRITESCRIPTLOG */ sub_812( "CCB", "Creating the OldPainless script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( 1701971384 );
        DISPLAYF( "[CCB] ### The current OldPainless value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( 1701971384 ) );
        if (SCRIPT_VAR_HASH_EXISTS( 1701971384 ))
        {
             /* WRITESCRIPTLOG */ sub_812( "CCB", "The OldPainless script variable was successfully created...", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_812( "CCB", "The OldPainless script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_812( "CCB", "The OldPainless script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( 1701971384, 0 );
        DISPLAYF( "[CCB] ### The current OldPainless value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( 1701971384 ) );
    }
    return;
}

/* P_SET_STATIC_GAMEPLAY_DATA */ void sub_2548()
{
     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_SET_STATIC_GAMEPLAY_DATA", "***" );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2668( ref l_U353, g_U779[10]._fU0, g_U779[10]._fU12, 1862331818, 26, 6, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2668( ref l_U376[0], 88.00000000, -115.75000000, 5.00000000, -2.35999000, -68091699, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2668( ref l_U376[1], 87.45000000, -117.50000000, 5.01000000, -2.35999000, -38377016, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2668( ref l_U376[2], 90.00000000, -118.00000000, 5.01000000, -2.35999000, -1453944767, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2668( ref l_U376[3], 85.34801000, -102.53230000, 4.99093900, 180.00000000, 1401204614, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2668( ref l_U376[4], 87.20600000, -102.53230000, 5.01000000, 180.00000000, 1717130700, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2668( ref l_U492, 80.61954000, -107.65610000, 8.58793100, 91.60791000, 593978584, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2668( ref l_U508[0], 80.50000000, -110.85000000, 4.99000000, 90.00000000, -1753740406, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2668( ref l_U547[0], 80.50000000, -107.90000000, 4.99000000, 90.00000000, 1678996005, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2668( ref l_U547[1], 85.03655000, -103.97460000, 4.99090200, 104.00000000, 280979325, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2668( ref l_U611[0], 80.50000000, -104.85000000, 4.99000000, 90.00000000, -1785258920, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2668( ref l_U663[0], 85.00000000, 65428, 4.99081800, 125, 1035856716, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2668( ref l_U663[1], 85.00000000, -107.00000000, 4.99086000, 65, 1269362446, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2668( ref l_U663[2], 85.60000000, 65427, 4.99081800, 125, 703965785, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2668( ref l_U663[3], 85.60000000, -106.35000000, 4.99081800, 65, -1277385465, 7, 3, 2, 0, 0 );
     /* P_CREATETETHERBOX */ sub_3464( ref l_U1158, "ChapelTetherA", 70.75000000, -107.92000000, 4.56000000, 7.00000000, 13.50000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_3464( ref l_U1159, "ChapelTetherB", 75.01900000, -107.85000000, 4.56000000, 5.25000000, 16.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_3464( ref l_U1160, "TETH_MAIN_CHAPEL_C", 69.81000000, -107.94000000, 4.56000000, 15.46000000, 13.76000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_3464( ref l_U1163, "TETH_CHAPEL_BACK", 83.40000000, -107.94000000, 4.56000000, 12.50000000, 11.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_3464( ref l_U1164, "TETH_CHAP_BALCONY", 82.73000000, -107.42000000, 8.50000000, 6.12000000, 4.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_3464( ref l_U1162, "TETH_REINFORCEMENTS_RIGHT", 72.13500000, -102.52000000, 4.56000000, 6.25000000, 7.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_3464( ref l_U1161, "TETH_REINFORCEMENTS_LEFT", 72.13500000, -113.26000000, 4.56000000, 6.25000000, 7.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4073( ref l_U821, "TRIG_MAX_START", 59.82000000, -104.16000000, 4.56000000, 4.84000000, 3.75000000, 2.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4073( ref l_U842, "TRIGGER_LOBBY", 82.73000000, -107.92000000, 4.56000000, 3.25000000, 11.49000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4073( ref l_U863, "TRIGGER_UPSTAIRS", 93.16000000, -108.18000000, 8.75000000, 1.83000000, 15.50000000, 3.38000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4073( ref l_U884, "CEM_CHAPEL_UPSTAIRS_R", 90.70000000, -112.41000000, 8.60000000, 3.50000000, 3.00000000, 2.31000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4073( ref l_U905, "CEM_CHAPEL_UPSTAIRS_L", 90.70000000, -103.43000000, 8.60000000, 3.50000000, 3.00000000, 2.31000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4073( ref l_U926, "TRIGGER_OFFICESTAIRS", 87.72000000, -111.57000000, 8.63000000, 1.37000000, 1.24000000, 3.38000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4073( ref l_U947, "TRIG_CHAPEL_GAMEPLAY", 90.41000000, -94.51000000, 1.18000000, 7.35000000, 6.15000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4073( ref l_U968, "TRIG_CHAPEL_BALCONY", 81.92000000, -107.90000000, 8.33000000, 4.00000000, 11.10000000, 3.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4073( ref l_U989, "TRIG_PASSOS_SHOOT1", 71.15000000, -109.19000000, 4.56000000, 15.25000000, 8.20000000, 3.00000000, 0.00000000, 0.00000000, 30.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4073( ref l_U1010, "TRIG_PASSOS_SHOOT2", 75.94500000, -108.40000000, 4.56000000, 6.30000000, 11.00000000, 6.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4073( ref l_U1031, "TRIG_FINAL_WAVE_VACATE", 83.80000000, -107.76000000, 4.56000000, 12.00000000, 13.12000000, 3.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4073( ref l_U1073, "TRIG_FRONT_ROW_CHAPEL", 61.01000000, -107.96000000, 4.56000000, 7.30000000, 12.00000000, 3.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4073( ref l_U1052, "TRIG_DUMMY", 19.60000000, 68.57000000, 0.00000000, 2.00000000, 2.00000000, 2.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATEVARIANTBOX */ sub_5176( ref l_U1094, "TRIG_LAST_CHAPEL_THUG", 74.11000000, -108.30000000, 4.56000000, 3.25000000, 3.25000000, 2.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4073( ref l_U1095, "TRIG_PASSOS_CHAPEL_WARN", 88.90000000, -107.97000000, 4.79000000, 13.00000000, 13.00000000, 3.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4073( ref l_U1116, "TRIG_PASSOS_CHAPEL_WARN_UPSTAIRS", 90.27000000, -107.97000000, 8.36000000, 10.00000000, 13.00000000, 3.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4073( ref l_U1137, "TRIGGER_DOWNSTAIRS", 91.56000000, -108.39000000, 5.04000000, 7.00000000, 13.00000000, 3.70000000, 0.00000000, 0.00000000, -13.00000000, 1 );
     /* P_CREATEPOISTRUCTCOORD */ sub_5537( ref l_U1212, 2, l_U1298, l_U1298, l_U1298, 1.50000000, 3.00000000, 0, 0 );
     /* P_SET_INTERACTIVE_TEXT */ sub_6490( ref l_U1212, 30, "POI_RP_PIANO" );
     /* P_SET_POI_FORCE_WALK */ sub_6700( ref l_U1212, 0 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_2668(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATETETHERBOX */ void sub_3464(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATETRIGGERBOX */ void sub_4073(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATEVARIANTBOX */ void sub_5176(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 4, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATEPOISTRUCTCOORD */ void sub_5537(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
     /* P_CREATEBLANKPOISTRUCT */ sub_5577( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
     /* P_CREATEPOIGLINT */ sub_5970( iParam0 );
    return;
}

/* P_CREATEBLANKPOISTRUCT */ void sub_5577(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

/* P_CREATEPOIGLINT */ void sub_5970(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
     /* P_INITPOIGLINT */ sub_6068( iParam0 );
    return;
}

/* P_INITPOIGLINT */ void sub_6068(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                 /* P_ENABLEPOIGLINT */ sub_6144( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                 /* P_ENABLEPOIGLINT */ sub_6144( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                 /* P_ENABLEPOIGLINT */ sub_6144( iParam0, 1 );
            }
            else
            {
                 /* P_ENABLEPOIGLINT */ sub_6144( iParam0, 0 );
            };;;
        }
        else
        {
             /* P_ENABLEPOIGLINT */ sub_6144( iParam0, 0 );
        }
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_6144( iParam0, 0 );
    }
    return;
}

/* P_ENABLEPOIGLINT */ void sub_6144(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

/* P_SET_INTERACTIVE_TEXT */ void sub_6490(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
     /* P_INITINTERACTIVETEXT */ sub_6546( iParam0 );
    return;
}

/* P_INITINTERACTIVETEXT */ void sub_6546(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

/* P_SET_POI_FORCE_WALK */ void sub_6700(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

/* P_LOAD_ASSETS_CHAPEL */ void sub_6758()
{
     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_LOAD_ASSETS_CHAPEL", "***" );
     /* LOADMODEL */ sub_6837( g_U762, 1 );
     /* LOADMODEL */ sub_6837( -1504197122, 1 );
     /* LOADMODEL */ sub_6837( g_U1349, 1 );
     /* LOADMODEL */ sub_6837( 164359972, 1 );
     /* LOADMODEL */ sub_6837( g_U1332, 1 );
     /* LOADANIMDICT */ sub_7192( "LEVEL_S_CEM_CP_10", 0, 1 );
     /* LOADISEQ */ sub_7364( 457935336, 0 );
     /* LOADISEQ */ sub_7364( 1381054646, 0 );
     /* LOADISEQ */ sub_7364( 1219989804, 0 );
     /* LOADANIMDICT */ sub_7192( "FACE_PASNYB", 0, 1 );
     /* LOADACTIONTREE */ sub_7742( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act", 1 );
    return;
}

/* LOADMODEL */ void sub_6837(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_6954( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* WRITE_STRING */ void sub_6954(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* LOADANIMDICT */ void sub_7192(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an animation dictionary to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADISEQ */ void sub_7364(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                DISPLAYF( "[SP]### Waiting for interactive sequence to be loaded: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* LOADACTIONTREE */ void sub_7742(unknown uParam0, int iParam1)
{
    ACTION_TREE_LOAD( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_ACTION_TREE_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an Action Tree to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_LOAD_AUDIO_ASSETS_CHAPEL */ void sub_7904()
{
    STOP_SCRIPT_STREAM( 0 );
     /* LOADSCRIPTSTREAM */ sub_7969( "S_CEMET_PIANO", 0, 1 );
    return;
}

/* LOADSCRIPTSTREAM */ void sub_7969(unknown uParam0, unknown uParam1, int iParam2)
{
    if (iParam2 == 0)
    {
        REQUEST_SCRIPT_STREAM( uParam0, uParam1 );
    }
    else
    {
        while ((LOAD_SCRIPT_STREAM( uParam0, uParam1 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for script stream to be loaded: {} : {} ###", 2, 1537, uParam0, 513, uParam1 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_LOAD_WEAPONS */ void sub_8152(unknown uParam0)
{
     /* LOADWEAPON */ sub_8185( -862236369, 1 );
    switch (uParam0)
    {
        case 0:
        case 1:
         /* LOADWEAPON */ sub_8185( 434544317, 1 );
         /* LOADWEAPON */ sub_8185( -691403429, 1 );
        break;
        case 2: break;
        case 3:
         /* LOADWEAPON */ sub_8185( -691403429, 1 );
         /* LOADWEAPON */ sub_8185( 930042831, 1 );
        break;
        case 4:
        case 5:
         /* LOADWEAPON */ sub_8185( 434544317, 1 );
         /* LOADWEAPON */ sub_8185( -691403429, 1 );
        break;
        case 6:
         /* LOADWEAPON */ sub_8185( 434544317, 1 );
         /* LOADWEAPON */ sub_8185( -691403429, 1 );
        break;
        case 7:
         /* LOADWEAPON */ sub_8185( 434544317, 1 );
         /* LOADWEAPON */ sub_8185( -691403429, 1 );
         /* LOADWEAPON */ sub_8185( 1224272620, 1 );
        break;
        case 8:
         /* LOADWEAPON */ sub_8185( 434544317, 1 );
         /* LOADWEAPON */ sub_8185( -691403429, 1 );
        break;
        case 9:
         /* LOADWEAPON */ sub_8185( 434544317, 1 );
         /* LOADWEAPON */ sub_8185( -691403429, 1 );
        break;
        case 10:
         /* LOADWEAPON */ sub_8185( 434544317, 1 );
         /* LOADWEAPON */ sub_8185( -184942895, 1 );
         /* LOADWEAPON */ sub_8185( -691403429, 1 );
        break;
    }
    return;
}

/* LOADWEAPON */ void sub_8185(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load weapon: {!f1} : {1} ###", 2, 1, 199730165, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_CREATE_CHAPEL_PILLS */ void sub_8678()
{
     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_CREATE_CHAPEL_PILLS", "***" );
     /* CLEANPLACEMENT */ sub_8758( l_U751 );
    l_U751 =  /* CREATEPLACEMENT */ sub_8853( -4072149, 59.57000000, -107.38000000, 6.35900000, 0, 0, 0, 0, 0, 0, 1119092736 );
    return;
}

/* CLEANPLACEMENT */ void sub_8758(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

/* CREATEPLACEMENT */ void sub_8853(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a placement to exist: {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return Result;
}

/* P_SETUP_MAX_FROM_CHECKPOINT */ void sub_9108()
{
     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_SETUP_MAX_FROM_CHECKPOINT", "***" );
    if (NOT ( /* HAS_SAVEFILE_LOADED */ sub_9199( ref l_U752 )))
    {
        if (NOT (IS_PED_DEAD( g_U1178 )))
        {
             /* F_GIVEPEDWEAPON */ sub_11894( g_U1178,  /* GET_STARTING_WEAPON */ sub_13970( 10 ), 100, 0, 1 );
        }
    }
    return;
}

/* HAS_SAVEFILE_LOADED */ int sub_9199(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_812( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U37 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U38 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_9444( uParam0,  /* PLAYER_PED_ID */ sub_9350() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* PLAYER_PED_ID */ int sub_9350()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_9388() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_9388()
{
    return GET_PLAYER_ID();
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_9444(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_812( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U37)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_9665( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_10829( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_11143( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11578( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_11143( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11578( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_11143( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11578( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_11894( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11578( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_11894( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11578( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U37 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_12468( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_12670( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_9350(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U37)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U37 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_812( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_9665(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_9727( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_9727(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_10829(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_11143(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_6954( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_11578(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_11894(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_6954( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_12468(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_12670(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_9727( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_12768( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_12768(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* GET_STARTING_WEAPON */ int sub_13970(unknown uParam0)
{
    return -862236369;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_14108(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_812( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_812( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_12670( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_14399( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_14876( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_14876( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_15136( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_14876( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_15136( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_15136( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_14876( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_15136( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_15136( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_15136( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_14876( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_15136( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_15136( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_15136( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_15136( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_16716( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U38, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_812( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_14399(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_9727( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_812( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_812( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_14876(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_15136(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_16716(int iParam0)
{
     /* WRITE_STRING */ sub_6954( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_16804( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_16881( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_16881( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_16881( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_17050( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_17050( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_17050( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_17050( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_17050( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_17050( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_17050( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_17050( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_17050( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_17050( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_17050( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_16881( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_17050( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_17050( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_17050( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_16881( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_17751( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_17050( iParam0->_fU52 );
     /* WRITE_STRING */ sub_6954( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_17050( iParam0->_fU96 );
     /* WRITE_STRING */ sub_6954( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_17050( iParam0->_fU100 );
     /* WRITE_STRING */ sub_6954( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_17050( iParam0->_fU104 );
     /* WRITE_STRING */ sub_6954( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_17050( iParam0->_fU108 );
     /* WRITE_STRING */ sub_6954( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_17050( iParam0->_fU112 );
     /* WRITE_STRING */ sub_6954( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_17050( iParam0->_fU116 );
     /* WRITE_STRING */ sub_6954( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_17050( iParam0->_fU120 );
     /* WRITE_STRING */ sub_6954( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_17050( iParam0->_fU124 );
     /* WRITE_STRING */ sub_6954( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_17050( iParam0->_fU128 );
     /* WRITE_STRING */ sub_6954( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_17050( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_17050( l_U38 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_17050( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_16804(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_16881(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_17050(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_17751(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* LOADSEAMLESSCUTSCENE */ void sub_18774(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* P_HANDLE_MUSIC */ void sub_19145()
{
    if (l_U262 != l_U260)
    {
         /* WRITESCRIPTLOG */ sub_812( "TEH", "playing music:changed CUR FLAG", 0 );
         /* WRITE_INT */ sub_17050( l_U260 );
         /* WRITE_INT */ sub_17050( l_U261 );
        l_U262 = l_U260;
    }
    else if (l_U263 != l_U261)
    {
         /* WRITESCRIPTLOG */ sub_812( "TEH", "playing music:changed NEW FLAG", 0 );
         /* WRITE_INT */ sub_17050( l_U260 );
         /* WRITE_INT */ sub_17050( l_U261 );
        l_U263 = l_U261;
    }
    switch (l_U260)
    {
        case 1:
        AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_1_3_4_6", "", 0, 10000, 2000, -1082130432, 0 );
        l_U260 = 3;
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_812( "TEH", "playing music: CEMETERY_SONG_03 CEMETERY_SONG_03_1_3_4_6 ", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_1_3_4_6", "", 0, 10000, 2000, -1082130432, 0 );
        l_U260 = 3;
        break;
        case 3:
        if (l_U261 == 3)
        {
            AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_4_5_6", "", 0, 2000, 8000, -1082130432, 0 );
            l_U260 = 4;
        }
        break;
        case 4:
        if (l_U261 == 4)
        {
            AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_3", "", 0, 5000, 5000, -1082130432, 0 );
            l_U260 = 5;
        }
        break;
        case 5:
        if (l_U261 == 5)
        {
            AUDIO_MUSIC_SUSPEND( 5000 );
            l_U260 = 6;
        }
        break;
    }
    return;
}

/* P_HANDLE_CHECKPOINTS */ void sub_19864()
{
    if (g_U826 == 10)
    {
        if (l_U1567 == 0)
        {
            if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() )) == 1)
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HANDLE_CHECKPOINTS: player is dead, setting eFailure = STATE_FAIL_WAITING", "***" );
                l_U1567 = 2;
            }
            else if ( /* RESTARTING_CHECKPOINT */ sub_20046())
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "HANDLE_CHECKPOINTS - Restart, setting eFailure = STATE_FAIL_WAITING", 0 );
                l_U1567 = 2;
            }
            else if (l_U1520 == 1)
            {
                if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (IS_PED_DEAD( g_U824 )))
                {
                     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HANDLE_CHECKPOINTS: Passos killed, setting eFailure = STATE_FAIL_DEATH_CAM_PASSOS", "***" );
                    l_U1567 = 1;
                }
                else if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (l_U1518))
                {
                     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HANDLE_CHECKPOINTS: Passos shot by thugs, setting eFailure = STATE_FAIL_DEATH_CAM_PASSOS", "***" );
                    l_U1566 = 0;
                    l_U1567 = 1;
                }
            };;;
        }
         /* P_HANDLE_FAILURE */ sub_20890();
    }
    return;
}

/* RESTARTING_CHECKPOINT */ int sub_20046()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U37 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_9350(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_9388(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_9388(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_9350() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_9350(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* P_HANDLE_FAILURE */ void sub_20890()
{
    switch (l_U1567)
    {
        case 0: break;
        case 1:
        if ( /* IS_MAX_VALID */ sub_20992())
        {
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_9350(), 1 );
        }
        if (l_U1566 == 1)
        {
            l_U1567 = 2;
             /* WRITESCRIPTLOG */ sub_812( "SBA", "Disabling ALLOW_BULLET_CAMERA_TO_GAMEPLAY...", 0 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
             /* WRITESCRIPTLOG */ sub_812( "CCB", "ePassosDeathState = PE_MOVING; eFailure - STATE_FAIL_WAITING", 0 );
        }
        else if ( /* F_HANDLE_DEATH_CAM_PASSOS */ sub_21287())
        {
            l_U1567 = 2;
             /* WRITESCRIPTLOG */ sub_812( "CCB", "eFailure - STATE_FAIL_WAITING", 0 );
        }
        break;
        case 2:
        if ( /* IS_RESTART_ACTIVE */ sub_26464())
        {
            l_U1567 = 3;
        }
        else if (( /* F_CHECK_QUIT_RETRY */ sub_26524( 0 )) == 1)
        {
            l_U1567 = 3;
        }
        break;
        case 3:
        if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
        {
            if (NOT IS_LAST_MAN_STANDING_ACTIVE())
            {
                if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() )))
                {
                     /* WRITESCRIPTLOG */ sub_812( "CCB", "Deactivating bullettime...", 0 );
                    DEACTIVATE_BULLET_TIME( 1, 0 );
                    END_POSTFX_BLENDER( 3, 0 );
                    l_U1567 = 4;
                     /* WRITESCRIPTLOG */ sub_812( "CCB", "eFailure - STATE_FAIL_CLEANUP", 0 );
                }
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_812( "CCB", "Waiting for the last man standing...", 0 );
            }
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_812( "CCB", "Waiting for bullet death cam...", 0 );
        }
        break;
        case 4:
        if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_9388() )))
        {
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_9388(), 0, 0 );
            }
        }
        DO_SCREEN_FADE_OUT( 0 );
         /* P_IMAGEFX_STOP_BULLETCAM */ sub_27783( "CEM_PASSOS4_SCRIPTED_FAIL_FX" );
        DESTROY_ALL_CAMS();
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        AUDIO_MUSIC_SUSPEND( 500 );
        END_CONTEXT( "CEMETERY_CHAPEL_BALCONY" );
         /* WRITESCRIPTLOG */ sub_812( "CCB", "Destroying Passos...", 0 );
         /* CLEANPED */ sub_24287( g_U824 );
         /* P_CLEANUP_ALL */ sub_28021( 1 );
        l_U1567 = 5;
         /* WRITESCRIPTLOG */ sub_812( "CCB", "eFailure - STATE_FAIL_RESTORE", 0 );
        break;
        case 5:
         /* P_INITIALIZE_SCRIPT_DATA */ sub_936();
         /* P_SET_STATIC_GAMEPLAY_DATA */ sub_2548();
        if (NOT IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED())
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        }
         /* LOADANIMDICT */ sub_7192( "FACE_PASNYB", 0, 1 );
         /* LOADACTIONTREE */ sub_7742( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act", 1 );
         /* P_SETUP_PLAYER_RELATIONSHIPS */ sub_29451();
        l_U1518 = 0;
        l_U1567 = 6;
         /* WRITESCRIPTLOG */ sub_812( "CCB", "eFailure - STATE_FAIL_RESTART", 0 );
        break;
        case 6:
        if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
        {
             /* WRITESCRIPTLOG */ sub_812( "CCB", "eFailure - STATE_FAIL_IDLE", 0 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_9444( ref l_U752, g_U1178 );
             /* P_LOAD_AUDIO_ASSETS_CHAPEL */ sub_7904();
            if ( /* IS_MAX_VALID */ sub_20992())
            {
                SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_9350(), 0 );
            }
            l_U1568 = 1;
            l_U260 = 2;
            l_U1567 = 0;
             /* WRITESCRIPTLOG */ sub_812( "CCB", "eCheckpoint - STATE_CHECKPOINT_INIT", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_812( "CCB", "Waiting for stream requests...", 0 );
        }
        break;
    }
    return;
}

/* IS_MAX_VALID */ int sub_20992()
{
    if ( /* IS_PED_VALID */ sub_21022(  /* PLAYER_PED_ID */ sub_9350() ))
    {
        return 1;
    }
    return 0;
}

/* IS_PED_VALID */ int sub_21022(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (DOES_PED_EXIST( uParam0 )))
    {
        return 1;
    }
    return 0;
}

/* F_HANDLE_DEATH_CAM_PASSOS */ int sub_21287()
{
    unknown uVar2;

    switch (l_U1515)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_812( "RJM", "F_HANDLE_DEATH_CAM_PASSOS: ePassosDeathMidsceneState - STATE_DEATHCAM_INIT", 0 );
         /* NIS_PRE_SETUP */ sub_21470( 1, 0, 0, 1 );
         /* P_DEACTIVATEPED */ sub_21650( l_U505 );
         /* P_DEACTIVATEPEDARRAY */ sub_21769( ref l_U370 );
         /* P_DEACTIVATEPEDARRAY */ sub_21769( ref l_U506 );
         /* P_DEACTIVATEPEDARRAY */ sub_21769( ref l_U544 );
         /* P_DEACTIVATEPEDARRAY */ sub_21769( ref l_U609 );
         /* P_DEACTIVATEPEDARRAY */ sub_21769( ref l_U658 );
        uVar2 =  /* GET_SCENEPED_FOR_PASSOS_DEATH */ sub_21883();
         /* NIS_CREATE_STATIC_CAM */ sub_22781( ref l_U1652, 62.06467000, -113.21480000, 8.02932100, -35.94379000, -1.19396200, 39.21636000, 45, 1500 );
         /* P_IMAGEFX_START_BULLETCAM */ sub_23044( "CEM_PASSOS4_SCRIPTED_FAIL_FX", 0 );
         /* LOADISEQ */ sub_7364( 1219989804, 1 );
        if (ISEQ_QUERY_ENTITY_STATE( 457935336, "passos", 3 ))
        {
             /* WRITESCRIPTLOG */ sub_812( "RJM", "S_CEM_VIG_23_24 was playing, kill it.", 0 );
            ISEQ_UNREGISTER_ENTITY( 457935336, "passos" );
             /* TERMINATEISEQ */ sub_23549( 457935336, 0 );
        }
        if ( /* IS_PED_VALID */ sub_21022( g_U824 ))
        {
            CLEAR_PED_TASKS_IMMEDIATELY( g_U824 );
             /* SETUP_PASSOS_FOR_FAILURE_SCENE */ sub_23881( ref g_U824 );
            ISEQ_REGISTER_ENTITY( 1219989804, "PASSOS", g_U824, 0 );
            ISEQ_START( 1219989804 );
        }
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_2668( ref l_U736, 66.04000000, -112.63000000, 4.99000000, 75, uVar2, 7, 3, 2, 0, 0 );
         /* CLEANPED */ sub_24287( l_U735 );
        l_U735 =  /* CREATEPED */ sub_24376( ref l_U736 );
        if ( /* IS_PED_VALID */ sub_21022( l_U735 ))
        {
             /* SETUP_KILLER_FOR_FAILURE_CUTSCENES */ sub_25108( ref l_U735 );
             /* F_GIVEPEDWEAPON */ sub_11894( l_U735, -862236369, 25000, 0, 0 );
            REGISTER_TARGET( l_U735, g_U824 );
            SET_PED_DEFAULT_AIM_AT_PED( l_U735, g_U824 );
            TASK_AIM_GUN_AT_PED( l_U735, g_U824, -1, 0 );
        }
         /* CREATETIMER */ sub_1307( ref l_U1683, 10, 1, 0 );
         /* STARTTIMER */ sub_25298( ref l_U1683 );
        l_U1515 = 3;
         /* NIS_PLAY_STATIC_CAMERA */ sub_25437( ref l_U1652 );
        SHAKE_CAM( l_U1652._fU0,  /* F_CAM_SHAKE_WOBBLY */ sub_25553(), 0.25000000 );
         /* WRITESCRIPTLOG */ sub_812( "CCB", "ePassosDeathMidsceneState - STATE_DEATHCAM_START", 0 );
        break;
        case 3:
        if ( /* ISTIMERDONE */ sub_25691( ref l_U1683 ))
        {
             /* CREATETIMER */ sub_1307( ref l_U1683, 750, 1, 0 );
             /* STARTTIMER */ sub_25298( ref l_U1683 );
            l_U1515 = 1;
             /* WRITESCRIPTLOG */ sub_812( "CCB", "ePassosDeathMidsceneState - STATE_DEATHCAM_WAITING", 0 );
        }
        break;
        case 1:
        if ( /* ISTIMERDONE */ sub_25691( ref l_U1683 ))
        {
            if (( /* IS_PED_VALID */ sub_21022( g_U824 )) AND ( /* IS_PED_VALID */ sub_21022( l_U735 )))
            {
                SET_PED_SHOOTS_AT_COORD( l_U735, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U824, 65488, 0, 0, 0 ) );
                SHAKE_CAM( l_U1652._fU0, "SMALL_EXPLOSION_SHAKE", 1 );
                SET_PED_DEFAULT_AIM_AT_COORD( l_U735, -10.06000000, 108.19000000, 5.24000000 );
                 /* P_KILL_PED */ sub_26118( g_U824 );
                 /* CREATETIMER */ sub_1307( ref l_U1683, 50, 1, 0 );
                 /* STARTTIMER */ sub_25298( ref l_U1683 );
                l_U1515 = 5;
                 /* WRITESCRIPTLOG */ sub_812( "CCB", "ePassosDeathMidsceneState - STATE_DEATHCAM_PLAYING", 0 );
            }
        }
        break;
        case 5:
        if ( /* ISTIMERDONE */ sub_25691( ref l_U1683 ))
        {
            l_U1515 = 6;
             /* WRITESCRIPTLOG */ sub_812( "CCB", "ePassosDeathMidsceneState - STATE_DEATHCAM_FINISHED", 0 );
        }
        break;
        case 6:
        return 1;
        break;
    }
    return 0;
}

/* NIS_PRE_SETUP */ void sub_21470(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_9388(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_9350(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_9350() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_9350(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* P_DEACTIVATEPED */ void sub_21650(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

/* P_DEACTIVATEPEDARRAY */ void sub_21769(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_DEACTIVATEPED */ sub_21650( (uParam0^)[I] );
    }
    return;
}

/* GET_SCENEPED_FOR_PASSOS_DEATH */ int sub_21883()
{
    int I;

    for ( I = 0; I <= (l_U370 - 1); I++ )
    {
        if ( /* IS_PED_VALID */ sub_21022( l_U370[I] ))
        {
             /* WRITESCRIPTLOG */ sub_812( "RJM", "GET_SCENEPED_FOR_PASSOS_DEATH - Found a guy from the Confront", 0 );
            return l_U376[I]._fU20;
        }
    }
    for ( I = 0; I <= (l_U506 - 1); I++ )
    {
        if ( /* IS_PED_VALID */ sub_21022( l_U506[I] ))
        {
             /* WRITESCRIPTLOG */ sub_812( "RJM", "GET_SCENEPED_FOR_PASSOS_DEATH - Found a guy from the Car", 0 );
            return l_U508[I]._fU20;
        }
    }
    for ( I = 0; I <= (l_U544 - 1); I++ )
    {
        if ( /* IS_PED_VALID */ sub_21022( l_U544[I] ))
        {
             /* WRITESCRIPTLOG */ sub_812( "RJM", "GET_SCENEPED_FOR_PASSOS_DEATH - Found a guy from the Middle Wave", 0 );
            return l_U547[I]._fU20;
        }
    }
    for ( I = 0; I <= (l_U609 - 1); I++ )
    {
        if ( /* IS_PED_VALID */ sub_21022( l_U609[I] ))
        {
             /* WRITESCRIPTLOG */ sub_812( "RJM", "GET_SCENEPED_FOR_PASSOS_DEATH - Found a guy from the Middle Wave", 0 );
            return l_U611[I]._fU20;
        }
    }
    for ( I = 0; I <= (l_U658 - 1); I++ )
    {
        if ( /* IS_PED_VALID */ sub_21022( l_U658[I] ))
        {
             /* WRITESCRIPTLOG */ sub_812( "RJM", "GET_SCENEPED_FOR_PASSOS_DEATH - Found a guy from the Middle Wave", 0 );
            return l_U663[I]._fU20;
        }
    }
     /* WRITESCRIPTLOG */ sub_812( "RJM", "GET_SCENEPED_FOR_PASSOS_DEATH - Couldn't find anyone alive...that's weird, use a default", 0 );
    return 1678996005;
}

/* NIS_CREATE_STATIC_CAM */ void sub_22781(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_1307( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U763, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* P_IMAGEFX_START_BULLETCAM */ void sub_23044(unknown uParam0, boolean bParam1)
{
    PRINTSTRING( "[CO] P_IMAGEFX_START_BULLETCAM: Starting BulletCam: " );
    PRINTSTRING( uParam0 );
    PRINTNL();
     /* CLEANCAMERA */ sub_23164( ref l_U259 );
    l_U259 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
    SETUP_BULLET_CAMERA_SCENE( l_U259, uParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
    if (bParam1)
    {
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    }
    return;
}

/* CLEANCAMERA */ void sub_23164(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

/* TERMINATEISEQ */ void sub_23549(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            DISPLAYF( "[SP]### Waiting for interactive sequence to terminate: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* SETUP_PASSOS_FOR_FAILURE_SCENE */ void sub_23881(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_812( "RJM", "P_SETUP_PASSOS_FOR_FAILURE_SCENE", "***" );
    if ( /* IS_PED_VALID */ sub_21022( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^), 0 );
        SET_PED_VALIDATE_BULLET_CAM_HIT( (uParam0^), 1 );
        SET_AI_SHOULD_ALWAYS_MISS_PED( (uParam0^), 0 );
        SET_CAN_AI_KICK_THROUGH_CORPSES( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_AI_TEMPLATE( (uParam0^), "AIT_NORMAL" );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( (uParam0^), 0 );
        SET_PED_AS_ONE_SHOT_KILL( (uParam0^), 1 );
        SET_PED_GORE( (uParam0^), 1 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), 0 );
        SET_PED_PROOFS( (uParam0^), 0, 1, 1, 1, 1 );
        SET_PED_ALLOWED_TO_SURRENDER( (uParam0^), 0 );
        SET_PED_CAN_AVOID_DEATH_ZONES( (uParam0^), 0 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( (uParam0^), 1 );
        SET_PED_CAN_PUSH_PLAYER( (uParam0^), 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( (uParam0^), 0 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_CAN_BE_TARGETTED( (uParam0^), 1 );
    }
    return;
}

/* CLEANPED */ void sub_24287(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CREATEPED */ void sub_24376(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_6837( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_24867( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_24968( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_24867(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_24968(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* SETUP_KILLER_FOR_FAILURE_CUTSCENES */ void sub_25108(unknown uParam0)
{
    if ( /* IS_PED_VALID */ sub_21022( (uParam0^) ))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
        SET_PED_COMBAT_MOVEMENT( (uParam0^), 0 );
    }
    return;
}

/* STARTTIMER */ void sub_25298(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* NIS_PLAY_STATIC_CAMERA */ void sub_25437(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_25298( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

/* F_CAM_SHAKE_WOBBLY */ string sub_25553()
{
    return "WOBBLY_SHAKE";
}

/* ISTIMERDONE */ int sub_25691(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_KILL_PED */ void sub_26118(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

/* IS_RESTART_ACTIVE */ void sub_26464()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_26524(int iParam0)
{
    iParam0 = 1;
    switch (l_U41)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_26606( ref l_U43 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() )))
            {
                l_U42 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_1307( ref l_U43, l_U42, 1, 1 );
             /* STARTTIMER */ sub_25298( ref l_U43 );
        }
        if ( /* ISTIMERDONE */ sub_25691( ref l_U43 ))
        {
             /* WRITESCRIPTLOG */ sub_812( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_9388() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_9388(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U41 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U41 = 2;
            }
            else
            {
                l_U41 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_812( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_27089();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_812( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_27089();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_26606(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_27089()
{
     /* WRITESCRIPTLOG */ sub_812( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_1457( ref l_U43 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_9388() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_9388(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U40 = 0;
    l_U40 = l_U40;
    l_U41 = 0;
    return;
}

/* P_IMAGEFX_STOP_BULLETCAM */ void sub_27783(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_812( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
     /* CLEANCAMERA */ sub_23164( ref l_U259 );
    l_U258 = 1;
    return;
}

/* P_CLEANUP_ALL */ void sub_28021(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_CLEANUP_ALL", "***" );
    ISEQ_UNREGISTER_ENTITY( 457935336, "passos" );
     /* TERMINATEISEQ */ sub_23549( 457935336, 0 );
     /* TERMINATEISEQ */ sub_23549( 1381054646, 0 );
    ISEQ_UNREGISTER_ENTITY( 1219989804, "PASSOS" );
     /* TERMINATEISEQ */ sub_23549( 1219989804, 0 );
     /* P_ENABLE_POI */ sub_28160( ref l_U1212, 0 );
     /* CLEANPED */ sub_24287( l_U735 );
     /* CLEANPEDARRAY */ sub_28985( ref l_U370 );
     /* CLEANPEDARRAY */ sub_28985( ref l_U506 );
     /* CLEANPEDARRAY */ sub_28985( ref l_U544 );
     /* CLEANPEDARRAY */ sub_28985( ref l_U609 );
     /* CLEANPEDARRAY */ sub_28985( ref l_U658 );
    ISEQ_UNREGISTER_ENTITY( 1100244310, "stad_sniper" );
     /* TERMINATEISEQ */ sub_23549( 1100244310, 0 );
     /* CLEANPED */ sub_24287( l_U505 );
     /* CLEANPED */ sub_24287( g_U824 );
     /* CLEANPLACEMENT */ sub_8758( g_U739._fU0 );
     /* CLEANPLACEMENT */ sub_8758( l_U749 );
     /* CLEANPLACEMENT */ sub_8758( l_U750 );
     /* CLEANPLACEMENT */ sub_8758( l_U751 );
    STOP_SCRIPT_STREAM( 0 );
     /* P_STOP_SP_CHALLENGES */ sub_29204( uParam0 );
    return;
}

/* P_ENABLE_POI */ void sub_28160(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
             /* P_ENABLEPOIGLINT */ sub_6144( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_6144( iParam0, 0 );
         /* P_ENABLEPOIINTERACTIONTEXT */ sub_28246( iParam0, 0 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() )) == 0)
        {
            TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_9350() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_9350(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

/* P_ENABLEPOIINTERACTIONTEXT */ void sub_28246(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_28426( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

/* P_UPDATEINTERACTIONTEXTAVAILABLE */ void sub_28426(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if (( /* F_ISACTIONINGAVAILABLE */ sub_28522( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if (( /* F_ISACTIONINGAVAILABLE */ sub_28522( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

/* F_ISACTIONINGAVAILABLE */ int sub_28522(int iParam0)
{
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_9388() )) == 0))
    {
        if (((IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_9350() )) == 1) || (((IS_PED_GETTING_UP(  /* PLAYER_PED_ID */ sub_9350() )) == 1) || (((IS_PED_PICKING_UP_PICKUP(  /* PLAYER_PED_ID */ sub_9350() )) == 1) || (((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_9350() )) == 1) || (((IS_PED_DUCKING(  /* PLAYER_PED_ID */ sub_9350() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_9350() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

/* CLEANPEDARRAY */ void sub_28985(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_24287( (uParam0^)[I] );
    }
    return;
}

/* P_STOP_SP_CHALLENGES */ void sub_29204(boolean bParam0)
{
     /* WRITESCRIPTLOG */ sub_812( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    if (bParam0)
    {
        ;
    }
    return;
}

/* P_SETUP_PLAYER_RELATIONSHIPS */ void sub_29451()
{
     /* WRITESCRIPTLOG */ sub_812( "SP", "P_SETUP_PLAYER_RELATIONSHIPS", "###" );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() )) == 0)
    {
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_9350(), 0, 1 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_9350(), 0, 2 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_9350(), 0, 6 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_9350(), 0, 7 );
    }
    return;
}

/* P_HANDLE_EVENTS */ void sub_29931()
{
    unknown uVar2;
    int iVar3;
    int iVar4;
    unknown uVar5;

    if (l_U1568 > 1)
    {
         /* P_PEDARRAY_HEIGHT_SAFETY_CHECK */ sub_29980( ref l_U370, -1054867456 );
         /* P_PEDARRAY_HEIGHT_SAFETY_CHECK */ sub_29980( ref l_U506, -1054867456 );
         /* P_PEDARRAY_HEIGHT_SAFETY_CHECK */ sub_29980( ref l_U544, -1054867456 );
         /* P_PEDARRAY_HEIGHT_SAFETY_CHECK */ sub_29980( ref l_U609, -1054867456 );
    }
     /* P_HANDLE_SP_CHALLENGES */ sub_30339();
    switch (l_U1568)
    {
        case 0:
        if (g_U1991[8])
        {
            if ( /* PLAY_CUTSCENE_08_05 */ sub_30814( 1 ))
            {
                l_U789 = 1;
                 /* P_CREATE_AND_START_TIMER */ sub_34492( ref l_U1165, 500 );
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HANDLE_EVENTS: advancing to eCS_Start", "** **" );
                l_U1568 = 1;
            }
        }
        break;
        case 1:
         /* P_SETUP_GAMEPLAY */ sub_34632( l_U789 );
        if (NOT (DOES_PLACEMENT_EXIST( l_U751 )))
        {
             /* P_CREATE_CHAPEL_PILLS */ sub_8678();
        }
         /* LOADSEAMLESSCUTSCENE */ sub_18774( "mid_08_cem_sh01", 0 );
         /* LOADISEQ */ sub_7364( 457935336, 1 );
        l_U1513 = 0;
         /* UPDATE_PASSOS_CHAPEL_VIGS */ sub_40195( 5 );
        if ( /* IS_MAX_VALID */ sub_20992())
        {
            if (NOT (IS_PED_USING_MP3_COVER_TASK(  /* PLAYER_PED_ID */ sub_9350() )))
            {
                SNAP_PLAYER_TO_COVERPOINT(  /* PLAYER_ID */ sub_9388(), "GenCover", "847B4949_CA4D949F_Corner1", 1 );
            }
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_9388(), 1, 0 );
        }
        if (g_U826 != 10)
        {
            g_U826 = 10;
             /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_14108( ref l_U752, g_U826, g_U1178, g_U971[10]._fU0, g_U971[10]._fU12, g_U971[10]._fU16, g_U971[10]._fU20, 1 );
        }
         /* P_START_SP_CHALLENGES */ sub_48525();
         /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HANDLE_EVENTS: advancing to eCS_WaitForMax", "** **" );
        l_U1568 = 2;
        break;
        case 2:
        if ((IS_DEATH_PANEL_WIPE_ALLOWED()) || ( /* IS_MAX_VALID */ sub_20992()))
        {
            if (NOT ( /* F_IMAGEFX_FADE_IN */ sub_48698()))
            {
                DO_SCREEN_FADE_IN( 0 );
            }
            if (IS_PED_USING_MP3_COVER_TASK(  /* PLAYER_PED_ID */ sub_9350() ))
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HANDLE_EVENTS: advancing to eCS_FirstWave", "** **" );
                l_U1568 = 3;
            }
        }
        break;
        case 3:
        if ( /* ISTIMERDONE */ sub_25691( ref l_U1165 ))
        {
             /* NIS_RETURN_TO_GAMEPLAY_CAM */ sub_47610( 750, 1, 0, -69.43520000, -8.77144500, 0 );
             /* NIS_POST_SETUP */ sub_47738( 1, 1 );
        }
        if (NOT l_U790)
        {
             /* P_DEPLOY_WAVE1 */ sub_49095();
            l_U790 = 1;
             /* P_INIT_PASSOS_WARNING_DEATH */ sub_49578();
        }
        else if (NOT l_U791)
        {
             /* P_HAVE_WAVE1_ATTACK */ sub_49695();
        }
        if (NOT l_U793)
        {
            if (( /* F_GET_NUM_DEAD_PEDS_IN_ARRAY */ sub_52432( ref l_U370 )) >= 5)
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HANDLE_EVENTS: eCS_FirstWave: 1st floor enemies are DEAD!", "***" );
                 /* P_BALCONY_ATTACK */ sub_52647();
                l_U804 = 1;
                 /* CREATETIMER */ sub_1307( ref l_U1183, 1500, 1, 0 );
                 /* STARTTIMER */ sub_25298( ref l_U1183 );
                 /* P_ENABLE_POI */ sub_28160( ref l_U1212, 1 );
                 /* LOADISEQ */ sub_7364( 1381054646, 0 );
                l_U793 = 1;
            }
            else if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_52938( ref l_U1031, 0 ))
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HANDLE_EVENTS: eCS_FirstWave: Player is in tbFinalWaveVacate, new tether for piFrontDoorWave!", "***" );
                 /* P_TETHERPEDARRAY */ sub_52213( ref l_U1163, ref l_U370, 1 );
                uVar5 =  /* F_GET_FIRST_LIVING_PED_FROM_ARRAY */ sub_53206( ref l_U370 );
                 /* PED_SET_LOCKED_ON_PLAYER */ sub_53322( ref uVar5 );
            }
        }
        if ((NOT l_U793) AND (l_U790))
        {
            if ( /* F_HANDLE_PASSOS_WARNING_DEATH */ sub_53498( l_U1095, l_U1137, 1 ))
            {
                l_U1518 = 1;
            }
        }
        if ((NOT l_U798) AND (l_U793))
        {
             /* P_HANDLE_BALCONY_PED_COVER */ sub_54706();
        }
        if ( /* F_HANDLE_POI */ sub_55176( ref l_U1212 ))
        {
            l_U1323 = 1;
        }
         /* P_CHAPEL_HANDLE_PIANO_NIS */ sub_56994();
        if ( /* F_ISPLAYERINTRIGGERBOX */ sub_51581( l_U863 ))
        {
             /* P_BALCONY_ATTACKS_MAX */ sub_59441();
            l_U798 = 1;
            START_CONTEXT( "CEMETERY_CHAPEL_BALCONY" );
             /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HANDLE_EVENTS: advancing to eCS_FinalWave", "** **" );
            l_U1568 = 4;
        }
        if ( /* ISTIMERDONE */ sub_25691( ref l_U1183 ))
        {
            l_U805[l_U811] = 1;
            l_U811++;
        }
         /* UPDATE_PASSOS_CHAPEL_VIGS */ sub_40195(  /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_51643( ref l_U370 ) );
        break;
        case 4:
         /* P_CHAPEL_HANDLE_PIANO_NIS */ sub_56994();
        if (l_U260 == 3)
        {
            if (IS_PED_DEAD( l_U505 ))
            {
                l_U261 = 3;
            }
        }
        if ((NOT l_U794) AND (NOT (IS_BULLET_CAMERA_RUNNING( 0 ))))
        {
            if (( /* F_ISPLAYERINTRIGGERBOX */ sub_51581( l_U968 )) || ((IS_PED_DEAD( l_U505 )) || (( /* F_ISPLAYERINTRIGGERBOX */ sub_51581( l_U905 )) || ( /* F_ISPLAYERINTRIGGERBOX */ sub_51581( l_U884 )))))
            {
                if ( /* F_SETUP_FINAL_WAVES */ sub_60074())
                {
                    l_U811 = 4;
                    if ( /* IS_PED_VALID */ sub_21022( l_U505 ))
                    {
                        RESET_PED_TETHERING( l_U505 );
                        SET_PED_FLAG_BLOCK_LEANFIRE_IN_COVER( l_U505, 0 );
                    }
                     /* P_CREATE_AND_START_TIMER */ sub_34492( ref l_U1524, 10000 );
                    l_U794 = 1;
                }
            }
        }
        if (l_U794)
        {
            if (NOT l_U801)
            {
                if ( /* F_ISPLAYERINTRIGGERBOX */ sub_51581( l_U1010 ))
                {
                     /* P_RESET_FINAL_WAVE_COMBAT */ sub_62029( ref l_U506 );
                     /* P_RESET_FINAL_WAVE_COMBAT */ sub_62029( ref l_U544 );
                     /* P_RESET_FINAL_WAVE_COMBAT */ sub_62029( ref l_U609 );
                     /* P_RESET_FINAL_WAVE_COMBAT */ sub_62029( ref l_U658 );
                     /* P_TELEPORT_REINFORCEMENTS */ sub_62408();
                    l_U647 = 0;
                    l_U801 = 1;
                }
                else
                {
                     /* P_PROCESS_FINAL_WAVE_TARGETTING */ sub_62858();
                     /* P_HANDLE_TETHERING_REINFORCEMENTS */ sub_64430();
                }
            }
            iVar3 = (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_51643( ref l_U506 )) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_51643( ref l_U544 ))) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_51643( ref l_U609 ));
            if (iVar3 > 0)
            {
                if (NOT l_U801)
                {
                    if ( /* F_HANDLE_PASSOS_WARNING_DEATH */ sub_53498( l_U1116, l_U1137, 1 ))
                    {
                        l_U1518 = 1;
                    }
                }
                else if ( /* F_HANDLE_PASSOS_WARNING_DEATH */ sub_53498( l_U1095, l_U1137, 1 ))
                {
                    l_U1518 = 1;
                }
            }
             /* P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS */ sub_65123( iVar3 );
            iVar4 = (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_51643( ref l_U370 )) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_51643( ref l_U658 ))) + iVar3;
            if (NOT (IS_PED_DEAD( l_U505 )))
            {
                iVar4++;
            }
            if (NOT l_U800)
            {
                if ( /* F_ASSIGN_CHAPEL_BULLET_CAM */ sub_69593( iVar4 ))
                {
                     /* RESETTIMER */ sub_1457( ref l_U812 );
                    l_U804 = 1;
                    l_U800 = 1;
                }
            }
            if (( /* IS_MAX_VALID */ sub_20992()) AND (iVar4 == 0))
            {
                if ((IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED()) AND (IS_BULLET_CAMERA_RUNNING( 0 )))
                {
                     /* WRITESCRIPTLOG */ sub_812( "bsw", "ALLOW_BULLET_CAMERA_TO_GAMEPLAY set to false for mid_08", 0 );
                    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
                    BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
                }
                l_U1570 = 1;
                END_CONTEXT( "CEMETERY_CHAPEL_BALCONY" );
                END_CONTEXT( "CEMETERY_FUNERAL_TO_END" );
                 /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_9665( l_U752._fU52 );
                l_U261 = 4;
                if ((NOT (IS_PLAYER_DOING_MELEE_GRAPPLE(  /* PLAYER_ID */ sub_9388() ))) AND ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))))
                {
                     /* P_HANDLE_MUSIC */ sub_19145();
                    ISEQ_UNREGISTER_ENTITY( 457935336, "passos" );
                     /* TERMINATEISEQ */ sub_23549( 457935336, 1 );
                    SET_HIGHEST_ARCADE_LEVEL_UNLOCKED( 11 );
                    if (IS_ARCADE_MODE_ACTIVE() == 1)
                    {
                        DISPLAY_ARCADE_MODE_LEVEL_END( "s_fav2" );
                        DO_SCREEN_FADE_IN( 0 );
                        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
                         /* WRITESCRIPTLOG */ sub_812( "TEH", "P_HANDLE_EVENTS: printing arcade after action", "** **" );
                    }
                    else
                    {
                        DISABLE_FADE_BETWEEN_SP_LEVELS();
                         /* LOADSEAMLESSCUTSCENE */ sub_18774( "mid_08_cem_sh01", 1 );
                        l_U1568 = 5;
                         /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HANDLE_EVENTS: advancing to eCS_Done", "** **" );
                    }
                }
            }
        }
         /* UPDATE_PASSOS_CHAPEL_VIGS */ sub_40195( iVar4 );
        break;
        case 5:
        if ( /* PLAY_CUTSCENE_MID_08_CEM */ sub_71199( 1, 0, "mid_08_cem_sh01" ))
        {
             /* WRITESCRIPTLOG */ sub_812( "bsw", "ALLOW_BULLET_CAMERA_TO_GAMEPLAY set to TRUE after mid_08", 0 );
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U1568 = 6;
        }
        break;
        case 6: break;
    }
    return;
}

/* P_PEDARRAY_HEIGHT_SAFETY_CHECK */ void sub_29980(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_PED_HEIGHT_SAFETY_CHECK */ sub_30045( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_PED_HEIGHT_SAFETY_CHECK */ void sub_30045(unknown uParam0, float fParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( (uParam0^) )};
        if (uVar4._fU8 < fParam1)
        {
             /* MLOG */ sub_30179( "A ped has been killed by P_PED_HEIGHT_SAFETY_CHECK", 0, 0 );
            SET_PED_HEALTH( (uParam0^), 0, 0 );
        }
    }
    return;
}

/* MLOG */ void sub_30179(unknown uParam0, string sParam1, string sParam2)
{
    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "ML";
    }
    if (IS_STRING_NULL( sParam1 ))
    {
        sParam1 = "---";
    }
     /* WRITESCRIPTLOG */ sub_812( sParam2, uParam0, sParam1 );
    return;
}

/* P_HANDLE_SP_CHALLENGES */ void sub_30339()
{
    switch (l_U1569)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_812( "CCB", "eOldPainless - STATE_CHALLENGE_IDLE", 0 );
        l_U1569 = 1;
        break;
        case 1:
        if (l_U1570)
        {
            if (SCRIPT_VAR_HASH_EXISTS( 1701971384 ))
            {
                SCRIPT_VAR_HASH_SET_INT( 1701971384, 1 );
                DISPLAYF( "[CCB] ### The current OldPainless value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( 1701971384 ) );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_812( "CCB", "The OldPainless script variable is NOT valid!!!", 0 );
            }
             /* WRITESCRIPTLOG */ sub_812( "CCB", "eOldPainless - STATE_CHALLENGE_COMPLETE", 0 );
            l_U1569 = 2;
        }
        break;
        case 2: break;
    }
    return;
}

/* PLAY_CUTSCENE_08_05 */ void sub_30814(boolean bParam0)
{
    int Result;

    Result = 0;
    switch (l_U291)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_812( "RJM", "PLAY_CUTSCENE_08_05 start", 0 );
         /* LOADSEAMLESSCUTSCENE */ sub_18774( ref l_U264, 1 );
         /* NIS_PRE_SETUP */ sub_21470( 1, 0, 0, 1 );
        if (bParam0)
        {
            if ( /* IS_MAX_VALID */ sub_20992())
            {
                 /* P_PLAYER_HOLSTER_WEAPONS */ sub_30975( ref l_U272, 0, 1 );
                 /* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ sub_32333( 1 );
                l_U290 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_32481();
            }
        }
        if (NOT bParam0)
        {
             /* BLOCKLOAD_08_05_ASSETS */ sub_32781();
        }
         /* CREATE_08_05_PEDS_AND_OBJECTS */ sub_33231();
         /* REGISTER_PEDS_CUT_08_05 */ sub_33427();
        l_U291 = 2;
        break;
        case 2:
        CUTSCENE_ENABLE_SKIP( 0 );
        START_SEAMLESS_CUTSCENE();
        l_U291 = 3;
        break;
        case 3:
         /* NIS_CREATE_STATIC_CAM */ sub_22781( ref l_U292, 57.29076000, -104.27290000, 6.79730400, -8.79861900, 0.00000000, -94.59394000, 45, 500 );
         /* NIS_PLAY_STATIC_CAMERA */ sub_25437( ref l_U292 );
        l_U291 = 4;
        break;
        case 4:
        if (HAS_CUTSCENE_FINISHED())
        {
             /* CLEANUP_08_05_ASSETS */ sub_34129();
            if (NOT bParam0)
            {
                 /* UNLOAD_08_05_ASSETS */ sub_34188();
            }
            Result = 1;
             /* WRITESCRIPTLOG */ sub_812( "RJM", "PLAY_CUTSCENE_08_05 end", 0 );
            l_U291 = 5;
        }
        else if (GET_CUTSCENE_TIME_MS() > 27500)
        {
            CUTSCENE_ENABLE_SKIP( 1 );
        }
        break;
    }
    return Result;
}

/* P_PLAYER_HOLSTER_WEAPONS */ void sub_30975(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

     /* RESET_WEAPON_CONFIG */ sub_31014( iParam0 );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_9350(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_31215( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if (( /* IS_WEAPON_TWO_HANDED */ sub_31469( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_9350(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_9350(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_9350(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_9350(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_9350(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_9350(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_9350(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_9350(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_9350(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if (( /* IS_WEAPON_TWO_HANDED */ sub_31469( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_9350(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_9350(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_9350(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

/* RESET_WEAPON_CONFIG */ void sub_31014(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

/* IS_WEAPON_SINGLE_HANDED */ int sub_31215(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* IS_WEAPON_TWO_HANDED */ int sub_31469(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ void sub_32333(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_9350(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if ((( /* IS_WEAPON_SINGLE_HANDED */ sub_31215( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_32481();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_9350(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

/* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ int sub_32481()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_9350(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_31215( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_9350(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_9350(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_9350(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

/* BLOCKLOAD_08_05_ASSETS */ void sub_32781()
{
     /* BLOCKLOADMODEL */ sub_32821( g_U1332 );
    return;
}

/* BLOCKLOADMODEL */ void sub_32821(unknown uParam0)
{
    DISPLAYF( "[MSWW]### Trying to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_6954( "[SP]### ERROR! (BlockLoadModel) Trying to block load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    LOAD_ALL_OBJECTS_NOW();
    while ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        LOAD_ALL_OBJECTS_NOW();
        DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
        WAIT( 0 );
    }
    DISPLAYF( "[MSWW]### Has loaded model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
    return;
}

/* CREATE_08_05_PEDS_AND_OBJECTS */ void sub_33231()
{
     /* WRITESCRIPTLOG */ sub_812( "RJM", "CREATE_08_05_PEDS_AND_OBJECTS - start", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2668( ref l_U324, 0, 0, 0, 0.00000000, 1862331818, 26, 6, 0, 0, 0 );
    l_U323 =  /* CREATEPED */ sub_24376( ref l_U324 );
     /* WRITESCRIPTLOG */ sub_812( "RJM", "CREATE_08_05_PEDS_AND_OBJECTS - end", 0 );
    return;
}

/* REGISTER_PEDS_CUT_08_05 */ void sub_33427()
{
     /* WRITESCRIPTLOG */ sub_812( "RJM", "REGISTER_PEDS_CUT_08_05 - start", 0 );
    if ( /* IS_MAX_VALID */ sub_20992())
    {
         /* WRITESCRIPTLOG */ sub_812( "RJM", "Registering player with 08_05", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U290, "W_SB_Uzi_Aa_H", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_9350(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_9350(), g_U971[10]._fU0, g_U971[10]._fU12 );
        CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "GenCover", "847B4949_CA4D949F_Corner1", 1, 1 );
        CUTSCENE_SET_COVER_CAMERA_DIRECTION( -69.80328000, -8.75923800 );
    }
    if ( /* IS_PED_VALID */ sub_21022( l_U323 ))
    {
         /* WRITESCRIPTLOG */ sub_812( "RJM", "Registering piCut08_05Passos with 08_05_nybar_concat", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U323, "PASS_NY_H", 1 );
    }
     /* WRITESCRIPTLOG */ sub_812( "SBA", "REGISTER_PEDS_CUT_08_05 - hiding doors", 0 );
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U1690._fU0, g_U1690._fU4 );
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U1697._fU0, g_U1697._fU4 );
     /* WRITESCRIPTLOG */ sub_812( "RJM", "REGISTER_PEDS_CUT_08_05 - end", 0 );
    return;
}

/* CLEANUP_08_05_ASSETS */ void sub_34129()
{
     /* CLEANPED */ sub_24287( l_U323 );
    return;
}

/* UNLOAD_08_05_ASSETS */ void sub_34188()
{
     /* UNLOADMODEL */ sub_34225( g_U1332 );
    return;
}

/* UNLOADMODEL */ void sub_34225(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
         /* WRITE_STRING */ sub_6954( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

/* P_CREATE_AND_START_TIMER */ void sub_34492(unknown uParam0, unknown uParam1)
{
     /* CREATETIMER */ sub_1307( uParam0, uParam1, 1, 0 );
     /* STARTTIMER */ sub_25298( uParam0 );
    return;
}

/* P_SETUP_GAMEPLAY */ void sub_34632(boolean bParam0)
{
     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_SETUP_GAMEPLAY", "***" );
    if (NOT bParam0)
    {
         /* P_SETUP_MAX */ sub_34705();
    }
     /* P_CREATE_CHAPEL_PASSOS */ sub_35003();
     /* P_SETUP_CHAPEL_PEDS */ sub_35588();
     /* P_CREATE_CHAPEL_PLACEMENTS */ sub_38221();
     /* P_SETDOORMINMAXLIMIT */ sub_39667( ref g_U1718, -85.00000000, 0.00000000 );
     /* P_SETDOORMINMAXLIMIT */ sub_39667( ref g_U1725, 0.00000000, 85.00000000 );
     /* P_SETDOORAUTOCLOSE */ sub_40023( ref g_U1718, 1 );
     /* P_SETDOORAUTOCLOSE */ sub_40023( ref g_U1725, 1 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    return;
}

/* P_SETUP_MAX */ void sub_34705()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_812( "ML", "P_SETUP_MAX", "---" );
    if ( /* IS_MAX_VALID */ sub_20992())
    {
        CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_9350() );
        uVar2 = GET_INTERIOR_AT_COORDS( g_U971[10]._fU0 );
        SET_INTERIOR_ACTIVE( uVar2, 1, 0 );
        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar2, GET_HASH_KEY( ref g_U1188 ) );
         /* MAL_TELEPORTPED */ sub_34858(  /* PLAYER_PED_ID */ sub_9350(), g_U971[10]._fU0, g_U971[10]._fU12 );
        SET_ROOM_FOR_PED_BY_NAME(  /* PLAYER_PED_ID */ sub_9350(), ref g_U1188 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U971[10]._fU16, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U971[10]._fU20, 1065353216, 0 );
    }
    return;
}

/* MAL_TELEPORTPED */ void sub_34858(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_CREATE_CHAPEL_PASSOS */ void sub_35003()
{
     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_CREATE_CHAPEL_PASSOS", "***" );
     /* CLEANPED */ sub_24287( g_U824 );
    g_U824 =  /* CREATEPED */ sub_24376( ref l_U353 );
    if ( /* IS_PED_VALID */ sub_21022( g_U824 ))
    {
        SET_ROOM_FOR_PED_BY_NAME( g_U824, ref g_U1188 );
         /* P_SETUP_PASSOS_GENERAL_ATTRIBUTES */ sub_35139( ref g_U824 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U824, 1 );
         /* F_GIVEPEDWEAPON */ sub_11894( g_U824, -691403429, 25000, 0, 0 );
        SET_PED_GORE( g_U824, 1 );
        SET_PED_GORE_FROM_PLAYER( g_U824, 1 );
        SET_PED_GORE_FROM_NPC( g_U824, 0 );
    }
    l_U1520 = 1;
    return;
}

/* P_SETUP_PASSOS_GENERAL_ATTRIBUTES */ void sub_35139(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_SETUP_PASSOS_GENERAL_ATTRIBUTES", "***" );
    if ( /* IS_PED_VALID */ sub_21022( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^), 1 );
        SET_PED_VALIDATE_BULLET_CAM_HIT( (uParam0^), 0 );
        SET_AI_SHOULD_ALWAYS_MISS_PED( (uParam0^), 1 );
        SET_CAN_AI_KICK_THROUGH_CORPSES( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_AI_TEMPLATE( (uParam0^), "AIT_NORMAL" );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( (uParam0^), 1 );
        SET_PED_AS_ONE_SHOT_KILL( (uParam0^), 1 );
        SET_PED_GORE( (uParam0^), 0 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), 0 );
        SET_PED_PROOFS( (uParam0^), 0, 1, 1, 1, 1 );
        SET_PED_ALLOWED_TO_SURRENDER( (uParam0^), 0 );
        SET_PED_CAN_AVOID_DEATH_ZONES( (uParam0^), 0 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( (uParam0^), 1 );
        SET_PED_CAN_PUSH_PLAYER( (uParam0^), 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_CAN_BE_TARGETTED( (uParam0^), 0 );
        SET_PED_CONSUMING_AMMO( (uParam0^), 0 );
        SET_PED_PATH_CAN_USE_CLIMBOVERS( (uParam0^), 1 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( (uParam0^), 1 );
    }
    return;
}

/* P_SETUP_CHAPEL_PEDS */ void sub_35588()
{
    unknown uVar2;
    int I;

     /* WRITESCRIPTLOG */ sub_812( "ML", "P_SETUP_CHAPEL_PEDS", "---" );
     /* P_SETUP_AI_GROUP */ sub_35668( ref l_U442, 1.00000000, 0 );
    l_U448[0] = {86.00000000, -107.46000000, 5.00000000};
    l_U448[1] = {84.50000000, -109.45000000, 5.00000000};
    l_U448[2] = {85.50000000, -111.00000000, 5.00000000};
    l_U448[3] = {83.71011000, -104.96840000, 5.00000000};
    l_U448[4] = {85.69196000, -104.58540000, 5.00000000};
    for ( I = 0; I < 5; I++ )
    {
         /* CLEANPED */ sub_24287( l_U370[I] );
        l_U370[I] =  /* CREATEPED */ sub_24376( ref l_U376[I] );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_36239( l_U370[I], ref l_U442 );
        if ((NOT (IS_PED_DEAD( g_U1178 ))) AND (NOT (IS_PED_DEAD( l_U370[I] ))))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U370[I], 1 );
            SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U370[I], 1 );
            TASK_STAND_STILL( l_U370[I], -1 );
            if (I == 0)
            {
                SET_PED_AI_TEMPLATE( l_U370[I], ref g_U1220 );
                SET_PED_ALERTNESS( l_U370[I], 1 );
                 /* F_GIVEPEDWEAPON */ sub_11894( l_U370[I], -691403429, 25000, 0, 0 );
            }
            else if (I == 1)
            {
                SET_PED_AI_TEMPLATE( l_U370[I], ref g_U1220 );
                SET_PED_ALERTNESS( l_U370[I], 2 );
                 /* F_GIVEPEDWEAPON */ sub_11894( l_U370[I], 434544317, 25000, 0, 0 );
                 /* F_GIVEPEDWEAPONTOHOLSTER */ sub_11143( l_U370[I], -862236369, 1, 25000, 1 );
            }
            else if (I == 2)
            {
                SET_PED_AI_TEMPLATE( l_U370[I], ref g_U1220 );
                SET_PED_ALERTNESS( l_U370[I], 1 );
                 /* F_GIVEPEDWEAPON */ sub_11894( l_U370[I], -862236369, 25000, 0, 0 );
            }
            else if (I == 3)
            {
                SET_PED_AI_TEMPLATE( l_U370[I], ref g_U1220 );
                SET_PED_ALERTNESS( l_U370[I], 2 );
                 /* F_GIVEPEDWEAPON */ sub_11894( l_U370[I], -691403429, 25000, 0, 0 );
            }
            else
            {
                SET_PED_AI_TEMPLATE( l_U370[I], ref g_U1220 );
                SET_PED_ALERTNESS( l_U370[I], 3 );
                 /* F_GIVEPEDWEAPON */ sub_11894( l_U370[I], -691403429, 25000, 0, 0 );
            };;;;
        }
    }
     /* P_DEACTIVATEPED */ sub_21650( l_U370[3] );
     /* P_DEACTIVATEPED */ sub_21650( l_U370[4] );
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_37148( ref l_U370, "WAVE1-" );
     /* P_CREATE_BALCONY_SNIPER */ sub_37278();
    return;
}

/* P_SETUP_AI_GROUP */ void sub_35668(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_36239(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_6954( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_35668( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_35668( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ void sub_37148(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

/* P_CREATE_BALCONY_SNIPER */ void sub_37278()
{
     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_CREATE_BALCONY_SNIPER", "***" );
     /* LOADISEQ */ sub_7364( 1100244310, 1 );
     /* SETUPSNIPERANDWEAPON */ sub_37368();
    if ( /* IS_PED_VALID */ sub_21022( l_U505 ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U505, 1 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U505, 1 );
        SET_PED_INVINCIBLE( l_U505, 1 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U505, 1 );
        SET_PED_GORE( l_U505, 0 );
        SET_PED_IGNORE_LOS_CHECKS( l_U505, 1 );
        SET_PED_COMBAT_MOVEMENT( l_U505, 0 );
        SET_PED_CAN_BE_TARGETTED( l_U505, 0 );
        ISEQ_REGISTER_ENTITY( 1100244310, "stad_sniper", l_U505, 0 );
        ISEQ_START( 1100244310 );
         /* TELEPORTPED */ sub_37941( l_U505, l_U492._fU0, l_U492._fU12 );
        PED_ACTION_TREE_PLAY_NODE( l_U505, "/Global/SNIPER_BEHAVIOR/SNIPER3SET_SEQ/STATES/DUCK_TO_PEEK" );
        if ( /* IS_PED_VALID */ sub_21022( g_U824 ))
        {
             /* WRITESCRIPTLOG */ sub_812( "SBA", "sniper registered Passos as target", "***" );
            REGISTER_TARGET( l_U505, g_U824 );
        }
        PED_SET_ACTION_INTENTION( l_U505, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    }
    return;
}

/* SETUPSNIPERANDWEAPON */ void sub_37368()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_812( "SBA", "Setting up sniper", "***" );
     /* PED_INITIALIZE */ sub_37468( ref l_U492, ref l_U505, -184942895, ref g_U1220, 0, 25000, 3, -862236369, 25000 );
    uVar2 = GET_WEAPON_FROM_HAND( l_U505, 0, 0 );
    return;
}

/* PED_INITIALIZE */ void sub_37468(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, int iParam7, unknown uParam8)
{
    unknown uVar11;

     /* CLEANPED */ sub_24287( (uParam1^) );
    (uParam1^) =  /* CREATEPED */ sub_24376( uParam0 );
    if ( /* IS_PED_VALID */ sub_21022( (uParam1^) ))
    {
        uVar11 =  /* F_GIVEPEDWEAPON */ sub_11894( (uParam1^), uParam2, uParam5, 0, 1 );
        if (iParam7 != 0)
        {
             /* F_GIVEPEDWEAPONTOHOLSTER */ sub_11143( (uParam1^), iParam7, 0, uParam8, 0 );
        }
        SET_PED_AI_TEMPLATE( (uParam1^), uParam3 );
        SET_PED_ALERTNESS( (uParam1^), uParam6 );
        switch (uParam4)
        {
            case 0: break;
            case 1:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 13, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 13, 1 );
            break;
            case 2:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 14, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 14, 1 );
            break;
            case 3:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 12, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 12, 1 );
            break;
        }
    }
    return;
}

/* TELEPORTPED */ void sub_37941(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_CREATE_CHAPEL_PLACEMENTS */ void sub_38221()
{
     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_CREATE_CHAPEL_PLACEMENTS", "***" );
     /* P_CREATE_S_NYC_GG_6M_03 */ sub_38306();
     /* CLEANPLACEMENT */ sub_8758( l_U749 );
    l_U749 = CREATE_AMMOBAG_PLACEMENT_ROTATE( 80.61000000, -109.30000000, 8.58000000, 0.00000000, 0.00000000, 0.23000000, 0, -1.00000000, 0, 1119092736 );
     /* P_SETUP_AMMO_BAG_DEFAULTS */ sub_39195( l_U749 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U749, ref g_U1188 );
     /* CLEANPLACEMENT */ sub_8758( l_U750 );
    l_U750 =  /* CREATEPLACEMENT */ sub_8853( -2117698134, 81.00000000, -108.75000000, 8.75300000, -1.57000000, -0.39500000, 3.25000000, 0, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U750, ref g_U1188 );
    return;
}

/* P_CREATE_S_NYC_GG_6M_03 */ void sub_38306()
{
     /* WRITESCRIPTLOG */ sub_812( "CO", "P_CREATE_S_NYC_GG_6M_03", 0 );
     /* P_CREATECOLLECTIBLESTRUCT */ sub_38444( ref g_U739, g_U762, -957306817, 1020613872, 59.40000000, -107.92000000, 5.43000000, 0.00000000, 0.00000000, 0.00000000, "gtaMloRoom02" );
     /* P_CREATECOLLECTIBLE */ sub_38601( ref g_U739 );
    return;
}

/* P_CREATECOLLECTIBLESTRUCT */ void sub_38444(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_812( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* P_CREATECOLLECTIBLE */ void sub_38601(int iParam0)
{
     /* WRITESCRIPTLOG */ sub_812( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_38684( iParam0->_fU12 )) == 1)
        {
             /* WRITESCRIPTLOG */ sub_812( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_812( "CO", "has never been collected.", 0 );
        }
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_38684( iParam0->_fU12 )) == 0)
        {
             /* CLEANPLACEMENT */ sub_8758( iParam0->_fU0 );
            iParam0->_fU0 =  /* CREATEPLACEMENT */ sub_8853( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                     /* WRITESCRIPTLOG */ sub_812( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_812( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ int sub_38684(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

/* P_SETUP_AMMO_BAG_DEFAULTS */ void sub_39195(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        SET_AMMOBAG_REGEN_TIME( uParam0, 10.00000000 );
        SET_AMMOBAG_REGEN_RANGE( uParam0, 3.00000000 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1088031219, 45 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 954369040, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1138793073, 95 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1087746638, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1295933220, 30 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1383321053, 85 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1481241171, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1889644301, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -790090695, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1742569970, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1575030772, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1622373246, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 558118158, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1701914198, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1126469201, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 936600426, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 205668857, 0 );
    }
    return;
}

/* P_SETDOORMINMAXLIMIT */ void sub_39667(int iParam0, float fParam1, float fParam2)
{
    if (( /* F_DOESDOOREXIST */ sub_39702( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_39786( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        PRINTSTRING( "[SP]### Error: Door fMinLimit greater than fMaxLimit (default min:-81.0 max:81.0) ###" );
        PRINTNL();
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_39702(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_39786(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_SETDOORAUTOCLOSE */ void sub_40023(int iParam0, unknown uParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_39702( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_39786( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_AUTO_CLOSE( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

/* UPDATE_PASSOS_CHAPEL_VIGS */ void sub_40195(int iParam0)
{
    if (l_U1513 > 0)
    {
        if ( /* HAS_MAX_SHOT_NEAR_PASSOS */ sub_40245())
        {
             /* WRITESCRIPTLOG */ sub_812( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS - Max Shot near Passos", 0 );
             /* P_DIAL_PASSOS_FLINCH */ sub_40440();
            PED_SET_ACTION_INTENTION( g_U824, 58, 1000, 0, 0, 0 );
        }
    }
    switch (l_U1513)
    {
        case -1: break;
        case 0:
        if ( /* IS_PED_VALID */ sub_21022( g_U824 ))
        {
            if (NOT (ISEQ_QUERY_STATE( 457935336, 3 )))
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS: CHapel VIG not running - starting now", 0 );
                 /* TELEPORTPED */ sub_37941( g_U824, l_U366, l_U369 );
                CLEAR_PED_TASKS_IMMEDIATELY( g_U824 );
                ISEQ_REGISTER_ENTITY( 457935336, "passos", g_U824, 0 );
                ISEQ_START( 457935336 );
            }
        }
         /* WRITESCRIPTLOG */ sub_812( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS - Setup done: Going to State eCIS_PLAYING", 0 );
        l_U1513 = 2;
        break;
        case 2:
        if (l_U804)
        {
            if ( /* IS_PED_VALID */ sub_21022( g_U824 ))
            {
                PED_FINISH_ACTION_INTENTION( g_U824, 56 );
                 /* P_UNREGISTER_TARGET_FOR_PASSOS */ sub_42243( g_U824 );
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS - VIG24: Going to State eCIS_CHECKS", 0 );
                l_U1513 = 3;
                return;
            }
        }
        if ((l_U1211 < 2) AND (iParam0 == 1))
        {
             /* P_UNREGISTER_TARGET_FOR_PASSOS */ sub_42243( g_U824 );
             /* P_MOVE_LAST_CHAPEL_THUG_FOR_DEATH */ sub_42436();
            if ( /* IS_PED_VALID */ sub_21022( g_U824 ))
            {
                PED_SET_ACTION_INTENTION( g_U824, 56, -1, 0, 0, 0 );
                PED_SET_ACTION_INTENTION( g_U824, 55, -1, 0, 0, 0 );
            }
             /* CREATETIMER */ sub_1307( ref l_U1201, l_U1210, 1, 0 );
             /* STARTTIMER */ sub_25298( ref l_U1201 );
            l_U1514 = 0;
             /* WRITESCRIPTLOG */ sub_812( "SBA", "Last enemy!  Advancing to eCIS_FINISHED!", "***" );
            l_U1513 = 5;
            return;
        }
        if (NOT l_U803)
        {
            if ( /* FIND_TARGET_IN_CHAPEL */ sub_43225())
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "Chapel: Passos can fire!", "***" );
                if ( /* IS_PED_VALID */ sub_21022( g_U824 ))
                {
                    if (NOT l_U1523)
                    {
                        PED_SET_ACTION_INTENTION( g_U824, 56, -1, 0, 0, 0 );
                        PED_SET_ACTION_INTENTION( g_U824, 55, 4000, 0, 0, 0 );
                         /* P_PLAY_DIAL_PASSOS */ sub_43825( "SCMT_PCDFS", ref l_U1571 );
                        l_U1523 = 1;
                    }
                    else
                    {
                        PED_SET_ACTION_INTENTION( g_U824, 56, -1, 0, 0, 0 );
                    }
                }
                l_U803 = 1;
            }
        }
        else if (NOT ( /* FIND_TARGET_IN_CHAPEL */ sub_43225()))
        {
             /* WRITESCRIPTLOG */ sub_812( "SBA", "Chapel: Passos stops firing!", "***" );
            if ( /* IS_PED_VALID */ sub_21022( g_U824 ))
            {
                PED_FINISH_ACTION_INTENTION( g_U824, 56 );
            }
             /* P_UNREGISTER_TARGET_FOR_PASSOS */ sub_42243( g_U824 );
            l_U803 = 0;
        }
        if (l_U1211 < 2)
        {
            if ( /* ISTIMERDONE */ sub_25691( ref l_U1201 ))
            {
                if (NOT l_U802)
                {
                     /* WRITESCRIPTLOG */ sub_812( "SBA", "Chapel: Passos is deadly!", "***" );
                    l_U802 = 1;
                    if ( /* IS_PED_VALID */ sub_21022( g_U824 ))
                    {
                        PED_SET_ACTION_INTENTION( g_U824, 55, -1, 0, 0, 0 );
                    }
                }
                 /* CREATETIMER */ sub_1307( ref l_U1201, l_U1210, 1, 0 );
                 /* STARTTIMER */ sub_25298( ref l_U1201 );
            }
        }
        if (l_U802)
        {
            if ( /* IS_PED_VALID */ sub_21022( g_U824 ))
            {
                if (PED_ANIM_EVENT( g_U824, -1531652494 ))
                {
                    if ( /* IS_PED_VALID */ sub_21022( l_U734 ))
                    {
                         /* WRITESCRIPTLOG */ sub_812( "SBA", "Passos KILLING TARGET, resetting to not deadly", "***" );
                         /* PED_KILL_HEADSOUP */ sub_44431( l_U734 );
                        l_U1211++;
                         /* WRITESCRIPTLOG */ sub_812( "SBA", "Passos has killed this many:", "" );
                         /* WRITE_INT */ sub_17050( l_U1211 );
                        if ( /* IS_PED_VALID */ sub_21022( g_U824 ))
                        {
                            PED_FINISH_ACTION_INTENTION( g_U824, 55 );
                        }
                        l_U802 = 0;
                    }
                }
            }
        }
        break;
        case 3:
        if (NOT l_U804)
        {
            if ( /* IS_PED_VALID */ sub_21022( g_U824 ))
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS - VIG23: Returning to State eCIS_PLAYING", 0 );
                l_U1513 = 2;
            }
        }
        else if (l_U647)
        {
            if (l_U812._fU20 == 0)
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS - Starting speech timer", 0 );
                if (NOT l_U794)
                {
                     /* P_CREATE_AND_START_TIMER */ sub_34492( ref l_U812, GET_RANDOM_INT_IN_RANGE( 12000, 15000 ) );
                }
                else if (iParam0 > 1)
                {
                     /* P_CREATE_AND_START_TIMER */ sub_34492( ref l_U812, GET_RANDOM_INT_IN_RANGE( 15000, 20000 ) );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_812( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS - Speech timer is OFF", 0 );
                    l_U812._fU20 = 1;
                }
            }
            if ( /* ISTIMERDONE */ sub_25691( ref l_U812 ))
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS - Speech timer is done!", 0 );
                 /* WRITE_INT */ sub_17050( l_U811 );
                l_U805[l_U811] = 1;
                l_U811++;
                if (NOT l_U794)
                {
                    if (l_U811 > 3)
                    {
                        l_U811 = 0;
                    }
                }
                else if (l_U811 > 4)
                {
                    l_U811 = 2;
                }
            }
            if (l_U805[0])
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS - Playing speech 0", 0 );
                 /* P_DIAL_PAS_PINNED_DOWN */ sub_45258( "SCMT_VIG24A", ref l_U1591[0] );
                l_U805[0] = 0;
            }
            if (l_U805[1])
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS - Playing speech 1", 0 );
                 /* P_DIAL_PAS_PINNED_DOWN */ sub_45258( "SCMT_VIG24B", ref l_U1591[1] );
                l_U805[1] = 0;
            }
            if (l_U805[2])
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS - Playing speech 2", 0 );
                if (NOT l_U796)
                {
                     /* P_DIAL_PAS_PINNED_DOWN */ sub_45258( "SCMT_VIG24C", ref l_U1591[2] );
                }
                else
                {
                     /* P_PLAY_DIAL_PASSOS */ sub_43825( "SCMT_CPBA", ref l_U1591[2] );
                }
                l_U805[2] = 0;
            }
            if (l_U805[3])
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS - Playing speech 3", 0 );
                 /* P_DIAL_PAS_PINNED_DOWN */ sub_45258( "SCMT_VIG24D", ref l_U1591[3] );
                l_U805[3] = 0;
            }
            if (l_U805[4])
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS - Playing speech 4", 0 );
                 /* P_DIAL_PAS_PINNED_DOWN */ sub_45258( "SCMT_VIG24E", ref l_U1591[4] );
                l_U805[4] = 0;
            }
        }
        break;
        case 5:
        if (l_U1568 < 4)
        {
            if (l_U1514 != -1)
            {
                 /* P_PASSOS_CHAPEL_BULLETCAM */ sub_46171();
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS: Passos bulletcam done - returning to gamecam", 0 );
                 /* NIS_RETURN_TO_GAMEPLAY_CAM */ sub_47610( 0, 0, 0, -859915232, -859915232, 0 );
                 /* NIS_POST_SETUP */ sub_47738( 1, 1 );
                DESTROY_ALL_CAMS();
                l_U1513 = 2;
            }
        }
        else if (NOT l_U804)
        {
             /* WRITESCRIPTLOG */ sub_812( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS: Going from eCIS_FINISHED to eCIS_PLAYING", 0 );
            l_U1513 = 2;
        }
        if (((l_U1514 == 1) || (l_U1514 == 0)) AND (l_U804))
        {
            if ( /* IS_PED_VALID */ sub_21022( g_U824 ))
            {
                PED_FINISH_ACTION_INTENTION( g_U824, 56 );
                 /* P_UNREGISTER_TARGET_FOR_PASSOS */ sub_42243( g_U824 );
                if (l_U1514 != -1)
                {
                    l_U1514 = -1;
                }
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS - VIG24: Going from eCIS_FINISHED to eCIS_CHECKS", 0 );
                l_U1513 = 3;
            }
        }
        break;
    }
    return;
}

/* HAS_MAX_SHOT_NEAR_PASSOS */ int sub_40245()
{
    int iVar2;

    if (((IS_PED_DEAD( g_U824 )) == 0) AND ((DOES_PED_EXIST( g_U824 )) == 1))
    {
        if (HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U824 ), 4.00000000, ref iVar2 ))
        {
            if (iVar2 == ( /* PLAYER_PED_ID */ sub_9350()))
            {
                return 1;
            }
        }
    }
    return 0;
}

/* P_DIAL_PASSOS_FLINCH */ void sub_40440()
{
     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_DIAL_PASSOS_FLINCH", "---" );
    if ((NOT (IS_PED_DEAD( g_U824 ))) AND (NOT (IS_PED_DEAD( g_U1178 ))))
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_40549( ref l_U1581 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_40660( 0, g_U1178, "MAX", ref l_U1581, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_40660( 1, g_U824, "PASSOS", ref l_U1581, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_40932( "SCMT_VIG24F", ref l_U1581, 8, 1 );
    }
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_40549(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_40660(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_40932(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_40977( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_40977(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_41064( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_41064(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_41116( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_41634( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_41116(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_41634(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* P_UNREGISTER_TARGET_FOR_PASSOS */ void sub_42243(unknown uParam0)
{
    if ( /* IS_PED_VALID */ sub_21022( uParam0 ))
    {
        CLEAR_LOCKED_TARGET( uParam0 );
        CLEAR_PED_DEFAULT_AIM( uParam0 );
    }
    return;
}

/* P_MOVE_LAST_CHAPEL_THUG_FOR_DEATH */ void sub_42436()
{
    int I;
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_MOVE_LAST_CHAPEL_THUG_FOR_DEATH", "***" );
    l_U734 = nil;
    for ( I = 0; I <= 4; I++ )
    {
        if ( /* IS_PED_VALID */ sub_21022( l_U370[I] ))
        {
             /* WRITESCRIPTLOG */ sub_812( "SBA", "P_MOVE_LAST_CHAPEL_THUG_FOR_DEATH: last enemy from first wave:", "***" );
             /* WRITE_INT */ sub_17050( I );
            l_U734 = l_U370[I];
        }
    }
    if ( /* IS_PED_VALID */ sub_21022( l_U734 ))
    {
        if ( /* IS_MAX_VALID */ sub_20992())
        {
            RESET_PED_TETHERING( l_U734 );
            SET_PED_COMBAT_MOVEMENT( l_U734, 0 );
            REGISTER_TARGET( l_U734,  /* PLAYER_PED_ID */ sub_9350() );
            SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U734, 1 );
            OPEN_SEQUENCE_TASK( ref uVar3 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, l_U1334,  /* PLAYER_PED_ID */ sub_9350(), 3, 1, 0.25000000, 0, 1, 0 );
            CLOSE_SEQUENCE_TASK( uVar3 );
            CLEAR_PED_TASKS( l_U734 );
            TASK_PERFORM_SEQUENCE( l_U734, uVar3 );
            CLEAR_SEQUENCE_TASK( uVar3 );
        }
         /* P_REGISTER_TARGET_FOR_PASSOS */ sub_42867( g_U824, l_U734 );
    }
    else
    {
        SCRIPT_ASSERT( "P_MOVE_LAST_CHAPEL_THUG_FOR_DEATH: No valid target!", 0 );
    }
    return;
}

/* P_REGISTER_TARGET_FOR_PASSOS */ void sub_42867(unknown uParam0, unknown uParam1)
{
    if ( /* IS_PED_VALID */ sub_21022( uParam0 ))
    {
        if ( /* IS_PED_VALID */ sub_21022( uParam1 ))
        {
             /* P_UNREGISTER_TARGET_FOR_PASSOS */ sub_42243( uParam0 );
            REGISTER_TARGET( uParam0, uParam1 );
            SET_LOCKED_TARGET( uParam0, uParam1 );
            SET_PED_DEFAULT_AIM_AT_PED( uParam0, uParam1 );
        }
    }
    return;
}

/* FIND_TARGET_IN_CHAPEL */ int sub_43225()
{
    int I;

    if ( /* IS_PED_VALID */ sub_21022( l_U734 ))
    {
        if ((NOT ( /* F_ISPEDINTRIGGERBOX */ sub_43285( l_U734, l_U1010 ))) AND (NOT ( /* F_ISPEDINTRIGGERBOX */ sub_43285( l_U734, l_U989 ))))
        {
             /* WRITESCRIPTLOG */ sub_812( "SBA", "Passos' curent target is not in shoot boxes.", "***" );
             /* P_UNREGISTER_TARGET_FOR_PASSOS */ sub_42243( g_U824 );
            l_U734 = nil;
            return 0;
        }
    }
    for ( I = 0; I <= 4; I++ )
    {
        if ( /* IS_PED_VALID */ sub_21022( l_U370[I] ))
        {
            if ( /* IS_PED_VALID */ sub_21022( g_U824 ))
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_43285( l_U370[I], l_U1010 )) || ( /* F_ISPEDINTRIGGERBOX */ sub_43285( l_U370[I], l_U989 )))
                {
                    if (NOT ( /* IS_PED_VALID */ sub_21022( l_U734 )))
                    {
                         /* WRITESCRIPTLOG */ sub_812( "SBA", "Selecting first wave target: ", "***" );
                         /* WRITE_INT */ sub_17050( I );
                         /* P_REGISTER_TARGET_FOR_PASSOS */ sub_42867( g_U824, l_U370[I] );
                        l_U734 = l_U370[I];
                    }
                    return 1;
                }
            }
        }
    }
    return 0;
}

/* F_ISPEDINTRIGGERBOX */ int sub_43285(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* P_PLAY_DIAL_PASSOS */ void sub_43825(unknown uParam0, unknown uParam1)
{
     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_PLAY_DIAL_PASSOS", "***" );
    if ( /* IS_PED_VALID */ sub_21022( g_U824 ))
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() )))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_40549( uParam1 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_40660( 1, g_U824, "PASSOS", uParam1, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_40660( 0,  /* PLAYER_PED_ID */ sub_9350(), "MAX", uParam1, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_40932( uParam0, uParam1, 8, 1 );
        }
    }
    return;
}

/* PED_KILL_HEADSOUP */ void sub_44431(unknown uParam0)
{
    if ( /* IS_PED_VALID */ sub_21022( uParam0 ))
    {
        START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "Blood_headsoup_S_01", uParam0, 0.25000000, 0, 0, 0, 0, 0, 57704, 2 );
         /* P_KILL_PED */ sub_26118( uParam0 );
    }
    return;
}

/* P_DIAL_PAS_PINNED_DOWN */ void sub_45258(unknown uParam0, unknown uParam1)
{
     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_DIAL_PAS_PINNED_DOWN", "---" );
    if ((NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_45368( l_U1551 ))) AND ((NOT (IS_PED_DEAD( g_U824 ))) AND (NOT (IS_PED_DEAD( g_U1178 )))))
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_40549( uParam1 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_40660( 0, g_U1178, "MAX", uParam1, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_40660( 1, g_U824, "PASSOS", uParam1, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_40932( uParam0, uParam1, 8, 1 );
    }
    return;
}

/* IS_SPEECH_CURRENTLY_PLAYING */ int sub_45368(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_45411( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

/* IS_SCRIPT_SPEECH_STRUCT_VALID */ boolean sub_45411(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

/* P_PASSOS_CHAPEL_BULLETCAM */ void sub_46171()
{
    switch (l_U1514)
    {
        case 0:
        if ( /* F_ISPEDINVARIANTBOX */ sub_46271( l_U734, l_U1094 ))
        {
            if ( /* ISTIMERDONE */ sub_25691( ref l_U1201 ))
            {
                 /* P_TETHERPEDINVARIANTBOX */ sub_46373( ref l_U1094, l_U734, 1 );
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "P_PASSOS_CHAPEL_BULLETCAM: Last enemy is in position, going to eCPBC_Start!", "***" );
                l_U1514 = 1;
            }
        }
        break;
        case 1:
        if ((NOT (IS_PLAYER_DOING_MELEE_GRAPPLE(  /* PLAYER_ID */ sub_9388() ))) AND ((NOT (IS_PED_DEAD( g_U824 ))) AND (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))))
        {
            if (PED_ANIM_EVENT( g_U824, 1477325977 ))
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "P_PASSOS_CHAPEL_BULLETCAM: Passos has shot!", "***" );
                l_U1514 = 2;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_812( "SBA", "P_PASSOS_CHAPEL_BULLETCAM: State = eCPBC_ShowPassos", "***" );
         /* CREATETIMER */ sub_1307( ref l_U1192, 400, 1, 0 );
         /* STARTTIMER */ sub_25298( ref l_U1192 );
        l_U1514 = 3;
        break;
        case 3:
        if ( /* ISTIMERDONE */ sub_25691( ref l_U1192 ))
        {
             /* WRITESCRIPTLOG */ sub_812( "SBA", "P_PASSOS_CHAPEL_BULLETCAM: Passos cam shot done", "***" );
            if ( /* IS_PED_VALID */ sub_21022( g_U824 ))
            {
                PED_FINISH_ACTION_INTENTION( g_U824, 56 );
                PED_FINISH_ACTION_INTENTION( g_U824, 55 );
            }
             /* CREATETIMER */ sub_1307( ref l_U1192, 5, 1, 0 );
             /* STARTTIMER */ sub_25298( ref l_U1192 );
            l_U1514 = 4;
        }
        break;
        case 4:
        if ( /* ISTIMERDONE */ sub_25691( ref l_U1192 ))
        {
            if ( /* IS_PED_VALID */ sub_21022( l_U734 ))
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "P_PASSOS_CHAPEL_BULLETCAM: killing last thug!", "***" );
                START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "blood_headshot", l_U734, 0, 0, 0, 0, 0, 0, 65488, 2.00000000 );
                START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "blood_headshot_exit", l_U734, 0, 0, 0, 0, 0, 0, 65488, 2.00000000 );
                 /* PED_KILL_HEADSOUP_WITH_IMPACT */ sub_47190( l_U734, g_U824 );
                l_U1514 = -1;
            }
            else
            {
                l_U1514 = -1;
            }
        }
        break;
    }
    return;
}

/* F_ISPEDINVARIANTBOX */ int sub_46271(unknown uParam0, unknown uParam1)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, uParam1._fU0 );
    }
    return 0;
}

/* P_TETHERPEDINVARIANTBOX */ void sub_46373(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

/* PED_KILL_HEADSOUP_WITH_IMPACT */ void sub_47190(unknown uParam0, unknown uParam1)
{
    if (NOT ( /* IS_PED_VALID */ sub_21022( uParam0 )))
    {
        SCRIPT_ASSERT( "PED_KILL_HEADSOUP_WITH_IMPACT was passed in invalid target", 0 );
        return;
    }
    if (NOT ( /* IS_PED_VALID */ sub_21022( uParam1 )))
    {
        SCRIPT_ASSERT( "PED_KILL_HEADSOUP_WITH_IMPACT was passed in invalid shooter", 0 );
        return;
    }
    SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( uParam1, 55060, 0, 0, 0 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( uParam0, 65488, 0, 0, 0 ), 100, 1, -1074756423, 0 );
     /* PED_KILL_HEADSOUP */ sub_44431( uParam0 );
    return;
}

/* NIS_RETURN_TO_GAMEPLAY_CAM */ void sub_47610(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

/* NIS_POST_SETUP */ void sub_47738(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_9388(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_9350(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_47836();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_47836()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_9350(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_9350(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_9350(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_9350(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* P_START_SP_CHALLENGES */ void sub_48525()
{
     /* WRITESCRIPTLOG */ sub_812( "CCB", "P_START_SP_CHALLENGES", 0 );
    return;
}

/* F_IMAGEFX_FADE_IN */ int sub_48698()
{
    if (l_U258)
    {
         /* WRITESCRIPTLOG */ sub_812( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U258 = 0;
        return 1;
        break;
    }
     /* WRITESCRIPTLOG */ sub_812( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

/* P_DEPLOY_WAVE1 */ void sub_49095()
{
     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_DEPLOY_WAVE1", "***" );
     /* P_TASK_WAVE1 */ sub_49213( l_U370[0], 0, l_U448[0], "GenCover", "847B4949_3D2786E4_Corner2" );
     /* P_TASK_WAVE1 */ sub_49213( l_U370[1], 1000, l_U448[1], "GenCover", "847B4949_3D2786E4_Corner1" );
     /* P_TASK_WAVE1 */ sub_49213( l_U370[2], 1750, l_U448[2], "GenCover", "847B4949_FFEF8D71_Corner1" );
    return;
}

/* P_TASK_WAVE1 */ void sub_49213(unknown uParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    unknown uVar9;

     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_TASK_WAVE1", "***" );
    if (( /* IS_MAX_VALID */ sub_20992()) AND (NOT (IS_PED_DEAD( uParam0 ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar9 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (iParam1 != 0)
        {
            TASK_AIM_GUN_AT_COORD( 0, 87.43000000, -106.67000000, 5.99000000, iParam1, 1 );
        }
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uParam2, 3, -1, 1048576000, 0, 0 );
        TASK_SEARCH_FOR_PED_AT_COVER_POINT( 0, uParam5, uParam6, 1 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar9 );
        CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
        TASK_PERFORM_SEQUENCE( uParam0, uVar9 );
        CLEAR_SEQUENCE_TASK( uVar9 );
    }
    return;
}

/* P_INIT_PASSOS_WARNING_DEATH */ void sub_49578()
{
     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_INIT_PASSOS_WARNING_DEATH", "***" );
    l_U217 = 1;
    return;
}

/* P_HAVE_WAVE1_ATTACK */ void sub_49695()
{
    switch (l_U482)
    {
        case 0:
        if ( /* F_SHOULD_WAVE1_REACT */ sub_49779())
        {
             /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HAVE_WAVE1_ATTACK: 0 reacting", "***" );
             /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_50695( ref l_U370[l_U482], 0 );
             /* PED_SET_TETHERBOX */ sub_50798( ref l_U370[l_U482], l_U1159, 1 );
             /* P_CREATE_AND_START_TIMER */ sub_34492( ref l_U483, 300 );
            l_U482++;
        }
        break;
        case 1:
        if ( /* ISTIMERDONE */ sub_25691( ref l_U483 ))
        {
             /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HAVE_WAVE1_ATTACK: 1 reacting", "***" );
            if ( /* IS_PED_VALID */ sub_21022( l_U370[l_U482] ))
            {
                SET_PED_SUGGESTED_COVER_POINT( l_U370[l_U482], "GenCover", "847B4949_3D2786E4_Corner2" );
            }
             /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_50695( ref l_U370[l_U482], 0 );
             /* PED_SET_REGISTER_TARGET */ sub_51157( ref l_U370[l_U482], g_U824 );
             /* PED_SET_TETHERBOX */ sub_50798( ref l_U370[l_U482], l_U1159, 1 );
            TASK_COMBAT_PED( l_U370[l_U482], g_U824 );
             /* P_CREATE_AND_START_TIMER */ sub_34492( ref l_U483, 200 );
            l_U482++;
        }
        break;
        case 2:
        if ( /* ISTIMERDONE */ sub_25691( ref l_U483 ))
        {
             /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HAVE_WAVE1_ATTACK: 2 reacting", "***" );
             /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_50695( ref l_U370[l_U482], 0 );
             /* PED_SET_REGISTER_TARGET */ sub_51157( ref l_U370[l_U482], g_U824 );
             /* PED_SET_TETHERBOX */ sub_50798( ref l_U370[l_U482], l_U1159, 1 );
            TASK_COMBAT_PED( l_U370[l_U482], g_U824 );
             /* WRITESCRIPTLOG */ sub_812( "SBA", "Starting first Passos' deadly timer!", "***" );
             /* CREATETIMER */ sub_1307( ref l_U1201, 6000, 1, 0 );
             /* STARTTIMER */ sub_25298( ref l_U1201 );
             /* P_CREATE_AND_START_TIMER */ sub_34492( ref l_U483, 5000 );
            l_U482++;
        }
        break;
        case 3:
        if ((( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_51643( ref l_U370 )) < 4) || ((NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_51581( l_U821 ))) || ( /* ISTIMERDONE */ sub_25691( ref l_U483 ))))
        {
             /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HAVE_WAVE1_ATTACK: and the rest are active", "***" );
             /* P_ACTIVATEPED */ sub_51836( l_U370[3] );
             /* P_ACTIVATEPED */ sub_51836( l_U370[4] );
             /* PED_ARRAY_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_51967( ref l_U370, 0 );
             /* PED_SET_REGISTER_TARGET */ sub_51157( ref l_U370[3],  /* PLAYER_PED_ID */ sub_9350() );
             /* PED_SET_REGISTER_TARGET */ sub_51157( ref l_U370[4],  /* PLAYER_PED_ID */ sub_9350() );
             /* PED_ARRAY_SET_TETHERBOX */ sub_52118( ref l_U370, l_U1158, 1 );
             /* P_TETHERPEDARRAY */ sub_52213( ref l_U1159, ref l_U370, 1 );
             /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HAVE_WAVE1_ATTACK: Setting bWave1InCombat = TRUE", "***" );
            l_U791 = 1;
            l_U482++;
        }
        break;
        case 4: break;
    }
    return;
}

/* F_SHOULD_WAVE1_REACT */ int sub_49779()
{
    int I;
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;

    if ( /* F_HAS_PED_ARRAY_BEEN_ATTACKED_BY_PLAYER */ sub_49817( ref l_U370, ref iVar3 ))
    {
         /* WRITESCRIPTLOG */ sub_812( "SBA", "F_SHOULD_WAVE1_REACT...", "***" );
        return 1;
    }
    if ( /* IS_MAX_VALID */ sub_20992())
    {
        if (NOT (IS_PED_USING_MP3_COVER_TASK(  /* PLAYER_PED_ID */ sub_9350() )))
        {
             /* WRITESCRIPTLOG */ sub_812( "SBA", "F_SHOULD_WAVE1_REACT: Max out of cover!", "***" );
            return 1;
        }
    }
    for ( I = 0; I <= 4; I++ )
    {
        if ( /* IS_PED_VALID */ sub_21022( l_U370[I] ))
        {
            uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U370[I] )};
            if (HAS_SHOT_BEEN_FIRED_IN_AREA( uVar4, 30, 0, ref iVar3 ))
            {
                if ((iVar3 == g_U824) || (iVar3 == ( /* PLAYER_PED_ID */ sub_9350())))
                {
                     /* WRITESCRIPTLOG */ sub_812( "SBA", "F_SHOULD_WAVE1_REACT: Max or Passos shot!", "***" );
                    return 1;
                }
            }
            if (uVar4._fU0 < 76.00000000)
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "F_SHOULD_WAVE1_REACT: Enemy got too close!", "***" );
                return 1;
            }
        }
    }
    return 0;
}

/* F_HAS_PED_ARRAY_BEEN_ATTACKED_BY_PLAYER */ int sub_49817(unknown uParam0, unknown uParam1)
{
    int I;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    int iVar8;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (NOT ( /* F_ISPEDINTRIGGERBOX */ sub_43285( (uParam0^)[I], l_U1031 )))
            {
                if (HAS_PED_BEEN_DAMAGED_BY_PED( (uParam0^)[I],  /* PLAYER_PED_ID */ sub_9350(), 0 ))
                {
                    CLEAR_PED_LAST_DAMAGE_ENTITY( (uParam0^)[I] );
                     /* WRITESCRIPTLOG */ sub_812( "SBA", "F_HAS_PED_ARRAY_BEEN_ATTACKED_BY_PLAYER: YES! Ped was Shot!", "***" );
                    (uParam1^) = (uParam0^)[I];
                    return 1;
                }
                uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( (uParam0^)[I] )};
                if (HAS_BULLET_IMPACTED_IN_AREA( uVar5, 4.00000000, ref iVar8 ))
                {
                    if (iVar8 == ( /* PLAYER_PED_ID */ sub_9350()))
                    {
                         /* WRITESCRIPTLOG */ sub_812( "SBA", "F_HAS_PED_ARRAY_BEEN_ATTACKED_BY_PLAYER: YES! Bullet Impact!", "***" );
                        (uParam1^) = (uParam0^)[I];
                        return 1;
                    }
                }
            }
        }
    }
    return 0;
}

/* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ void sub_50695(unknown uParam0, unknown uParam1)
{
    if ( /* IS_PED_VALID */ sub_21022( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), uParam1 );
    }
    return;
}

/* PED_SET_TETHERBOX */ void sub_50798(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if ( /* IS_PED_VALID */ sub_21022( (uParam0^) ))
    {
        RESET_PED_TETHERING( (uParam0^) );
         /* P_TETHERPED */ sub_50857( ref uParam1, (uParam0^), uParam2 );
    }
    return;
}

/* P_TETHERPED */ void sub_50857(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

/* PED_SET_REGISTER_TARGET */ void sub_51157(unknown uParam0, unknown uParam1)
{
    if (( /* IS_PED_VALID */ sub_21022( uParam1 )) AND ( /* IS_PED_VALID */ sub_21022( (uParam0^) )))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_51581(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_43285(  /* PLAYER_PED_ID */ sub_9350(), uParam0 );
}

/* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ void sub_51643(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

/* P_ACTIVATEPED */ void sub_51836(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

/* PED_ARRAY_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ void sub_51967(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_50695( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* PED_ARRAY_SET_TETHERBOX */ void sub_52118(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* PED_SET_TETHERBOX */ sub_50798( ref (uParam0^)[I], uParam1, uParam2 );
    }
    return;
}

/* P_TETHERPEDARRAY */ void sub_52213(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam1^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam1^)[I] )))
        {
             /* P_TETHERPED */ sub_50857( uParam0, (uParam1^)[I], uParam2 );
        }
    }
    return;
}

/* F_GET_NUM_DEAD_PEDS_IN_ARRAY */ void sub_52432(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

/* P_BALCONY_ATTACK */ void sub_52647()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_BALCONY_ATTACK", "***" );
    if ((NOT (IS_PED_DEAD( g_U824 ))) AND (NOT (IS_PED_DEAD( l_U505 ))))
    {
        CLEAR_PED_TASKS( l_U505 );
        PED_SET_ACTION_INTENTION( l_U505, 48, 1200, 0.00000000, 0.00000000, 0.00000000 );
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_AIM_GUN_AT_PED( 0, g_U824, 500, 0 );
        TASK_SHOOT_AT_PED( 0, g_U824, -1, 0, 0, 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( l_U505, uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_52938(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_43285(  /* PLAYER_PED_ID */ sub_9350(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* F_GET_FIRST_LIVING_PED_FROM_ARRAY */ void sub_53206(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            return (uParam0^)[I];
        }
    }
    return nil;
}

/* PED_SET_LOCKED_ON_PLAYER */ void sub_53322(unknown uParam0)
{
    if (( /* IS_MAX_VALID */ sub_20992()) AND ( /* IS_PED_VALID */ sub_21022( (uParam0^) )))
    {
         /* PED_SET_LOCKED_ON_PED */ sub_53385( uParam0,  /* PLAYER_PED_ID */ sub_9350() );
    }
    return;
}

/* PED_SET_LOCKED_ON_PED */ void sub_53385(unknown uParam0, unknown uParam1)
{
    if (( /* IS_PED_VALID */ sub_21022( uParam1 )) AND ( /* IS_PED_VALID */ sub_21022( (uParam0^) )))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* F_HANDLE_PASSOS_WARNING_DEATH */ int sub_53498(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, boolean bParam42)
{
    switch (l_U217)
    {
        case 0: break;
        case 1: l_U217 = 2;
        case 2:
        if (bParam42)
        {
            if ( /* F_ISPLAYERINTRIGGERBOX */ sub_51581( uParam21 ))
            {
                SCRIPT_ASSERT( "F_HANDLE_PASSOS_WARNING_DEATH: How did player hit death box before warning box?", 0 );
                l_U217 = 4;
            }
            else if ( /* F_ISPLAYERINTRIGGERBOX */ sub_51581( uParam0 ))
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "F_HANDLE_PASSOS_WARNING_DEATH: Player entered Passos warning box, passos in danger", "***" );
                 /* P_DIAL_PASSOS_WARNING */ sub_53843();
                l_U217 = 3;
            }
        }
        else if (NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_51581( uParam21 )))
        {
            SCRIPT_ASSERT( "F_HANDLE_PASSOS_WARNING_DEATH: How did player hit death box before warning box?", 0 );
            l_U217 = 4;
        }
        else if (NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_51581( uParam0 )))
        {
             /* WRITESCRIPTLOG */ sub_812( "SBA", "F_HANDLE_PASSOS_WARNING_DEATH: Player exited Passos warning box, passos in danger", "***" );
             /* P_DIAL_PASSOS_WARNING */ sub_53843();
            l_U217 = 3;
        };;;
        break;
        case 3:
        if (((NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_51581( uParam21 ))) AND (NOT bParam42)) || (( /* F_ISPLAYERINTRIGGERBOX */ sub_51581( uParam21 )) AND (bParam42)))
        {
             /* WRITESCRIPTLOG */ sub_812( "SBA", "F_HANDLE_PASSOS_WARNING_DEATH: Player entered Passos death box", "***" );
            l_U217 = 4;
        }
        else if ((( /* F_ISPLAYERINTRIGGERBOX */ sub_51581( uParam0 )) AND (NOT bParam42)) || ((NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_51581( uParam0 ))) AND (bParam42)))
        {
             /* WRITESCRIPTLOG */ sub_812( "SBA", "F_HANDLE_PASSOS_WARNING_DEATH: Player returned from warning box, Passos out of danger", "***" );
            l_U217 = 2;
        }
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_812( "SBA", "F_HANDLE_PASSOS_WARNING_DEATH: returning TRUE - going to ePWDS_Idle", "***" );
        l_U217 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_DIAL_PASSOS_WARNING */ void sub_53843()
{
     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_DIAL_PASSOS_WARNING", "***" );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() )))
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_40549( ref l_U166 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_40660( 1,  /* PLAYER_PED_ID */ sub_9350(), "PASSOS", ref l_U166, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_40660( 0,  /* PLAYER_PED_ID */ sub_9350(), "MAX", ref l_U166, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_40932( "SNYC_HBPH", ref l_U166, 8, 1 );
    }
    return;
}

/* P_HANDLE_BALCONY_PED_COVER */ void sub_54706()
{
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() ))) AND ((NOT (IS_PED_DEAD( g_U824 ))) AND (NOT (IS_PED_DEAD( l_U505 )))))
    {
        if ((l_U648) || (IS_PED_IN_CROSSHAIR_CYLINDER( l_U505, 1.75000000, 200, 0, -1082130432 )))
        {
            if (NOT l_U796)
            {
                 /* WRITESCRIPTLOG */ sub_812( "ML", "P_HANDLE_BALCONY_PED_COVER  STARTS COVER", "---" );
                 /* P_STOP_BALCONY_ATTACK */ sub_54899();
                l_U796 = 1;
                 /* RESETTIMER */ sub_1457( ref l_U1174 );
                 /* STARTTIMER */ sub_25298( ref l_U1174 );
            }
        }
        else if ( /* ISTIMERDONE */ sub_25691( ref l_U1174 ))
        {
            if (NOT l_U648)
            {
                 /* WRITESCRIPTLOG */ sub_812( "ML", "P_HANDLE_BALCONY_PED_COVER  ENDS COVER", "---" );
                 /* P_BALCONY_ATTACK */ sub_52647();
                l_U796 = 0;
            }
        }
    }
    return;
}

/* P_STOP_BALCONY_ATTACK */ void sub_54899()
{
     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_STOP_BALCONY_ATTACK", "***" );
    if ( /* IS_PED_VALID */ sub_21022( l_U505 ))
    {
        CLEAR_PED_TASKS( l_U505 );
        PED_SET_ACTION_INTENTION( l_U505, 47, 1200, 0.00000000, 0.00000000, 0.00000000 );
    }
    return;
}

/* F_HANDLE_POI */ int sub_55176(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_9350() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_43285(  /* PLAYER_PED_ID */ sub_9350(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_43285(  /* PLAYER_PED_ID */ sub_9350(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_28426( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND (( /* F_ISACTIONINGAVAILABLE */ sub_28522( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (( /* F_HASACTIONBEENPRESSED */ sub_56073()) == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                             /* P_ENABLE_POI */ sub_28160( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                             /* P_ENABLEPOIGLINT */ sub_6144( iParam0, 0 );
                             /* P_ENABLEPOIINTERACTIONTEXT */ sub_28246( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                             /* P_ENABLEPOIGLINT */ sub_6144( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_9350(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                         /* P_ENABLEPOIGLINT */ sub_6144( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_ENABLEPOIINTERACTIONTEXT */ sub_28246( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED(  /* PLAYER_PED_ID */ sub_9350(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() )) == 0)
                    {
                        TASK_LOOK_AT_COORD(  /* PLAYER_PED_ID */ sub_9350(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_9350(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                     /* P_ENABLEPOIGLINT */ sub_6144( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                     /* P_ENABLEPOIINTERACTIONTEXT */ sub_28246( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_9350() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_9350(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                 /* P_ENABLEPOIINTERACTIONTEXT */ sub_28246( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

/* F_HASACTIONBEENPRESSED */ int sub_56073()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

/* P_CHAPEL_HANDLE_PIANO_NIS */ void sub_56994()
{
    int I;

    switch (l_U1323)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_812( "GA", "e_Chapel_PianoNIS = eNIS_STATE_SETUP", 0 );
         /* NIS_PRE_SETUP */ sub_21470( 1, 0, 0, 1 );
         /* LOADISEQ */ sub_7364( 1381054646, 1 );
        PLAY_SCRIPT_STREAM_FROM_COORD( 90.51000000, -111.16000000, 5.77000000, 0 );
        l_U647 = 0;
        for ( I = 0; I <= (l_U1591 - 1); I++ )
        {
            if ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_45368( l_U1591[I] ))
            {
                 /* KILL_SPEECH */ sub_57223( ref l_U1591[I], 1 );
            }
        }
        l_U648 = 1;
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() )))
        {
             /* P_PLAYER_HOLSTER_WEAPONS */ sub_30975( ref l_U1305, 1, 1 );
             /* P_SET_TWO_HANDED_WEAPON_VISIBLE */ sub_57451( l_U1305, 0 );
             /* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ sub_32333( 1 );
            CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_9350() );
            RESET_PLAYER_INPUT_GAIT( 0 );
            PED_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_9350(), "/Global/Player" );
             /* TELEPORTPED */ sub_37941(  /* PLAYER_PED_ID */ sub_9350(), l_U1301, l_U1304 );
             /* PED_CLEAR_ALL_ACTION_INTENTIONS */ sub_57665(  /* PLAYER_PED_ID */ sub_9350() );
            SET_PED_DEFAULT_AIM_AHEAD(  /* PLAYER_PED_ID */ sub_9350() );
        }
        CAMERA_PLAY_ANIMATED( "LEVEL_S_CEM_CP_10", "VIG_25_CEM_MAX_PLAY_PIANO_FWD_CAM", 1, 88.75148000, -110.74680000, 6.66706300, 65446, 0, 0 );
        ISEQ_REGISTER_ENTITY( 1381054646, "Max",  /* PLAYER_PED_ID */ sub_9350(), 0 );
        ISEQ_START( 1381054646 );
        AUDIO_MUSIC_ADJUST_VOLUME( -24.00000000 );
         /* P_ENABLE_POI */ sub_28160( ref l_U1212, 0 );
         /* WRITESCRIPTLOG */ sub_812( "GA", "e_Chapel_PianoNIS = eNIS_STATE_PLAYING", 0 );
        l_U1323 = 2;
        break;
        case 2:
         /* P_CHAPEL_HANDLE_PIANO_NIS_VO */ sub_58094();
        if ((PED_GET_ACTION_INTENTION_STATUS(  /* PLAYER_PED_ID */ sub_9350(), 47 )) == 3)
        {
             /* P_SET_TWO_HANDED_WEAPON_VISIBLE */ sub_57451( l_U1305, 1 );
            SIMULATE_PLAYER_INPUT_GAIT(  /* PLAYER_ID */ sub_9388(), 2, 500, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( -1.01848400, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( -6.90496900, 1065353216, 0 );
            CAMERA_ANIMATED_STOP( 0, 0 );
             /* WRITESCRIPTLOG */ sub_812( "GA", "e_Chapel_PianoNIS = eNIS_STATE_RETURNING_TO_PLAYER", 0 );
            l_U1323 = 4;
        }
        break;
        case 4:
         /* P_CHAPEL_HANDLE_PIANO_NIS_VO */ sub_58094();
        AUDIO_MUSIC_ADJUST_VOLUME( 0.00000000 );
        STOP_SCRIPT_STREAM( 0 );
        l_U648 = 0;
        CLEAR_PED_DEFAULT_AIM(  /* PLAYER_PED_ID */ sub_9350() );
         /* NIS_POST_SETUP */ sub_47738( 1, 1 );
         /* WRITESCRIPTLOG */ sub_812( "GA", "e_Chapel_PianoNIS = eNIS_STATE_COMPLETE", 0 );
        l_U1323 = 5;
        break;
        case 5:
         /* P_CHAPEL_HANDLE_PIANO_NIS_VO */ sub_58094();
        if (l_U1324 == 4)
        {
            l_U647 = 1;
             /* RESETTIMER */ sub_1457( ref l_U812 );
             /* WRITESCRIPTLOG */ sub_812( "GA", "e_Chapel_PianoNIS = eNIS_STATE_INACTIVE", 0 );
            l_U1323 = 0;
        }
        break;
    }
    return;
}

/* KILL_SPEECH */ void sub_57223(int iParam0, unknown uParam1)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_45411( (iParam0^) )))
    {
        ;
    }
    else
    {
        PRINTSTRING( "\n KILL SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
        {
            if (iParam0->_fU8 == g_U6[iParam0->_fU4])
            {
                STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
            }
        }
    }
    return;
}

/* P_SET_TWO_HANDED_WEAPON_VISIBLE */ void sub_57451(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;

    uVar21 = uParam0._fU24._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar21, uParam18 );
    }
    uVar22 = uParam0._fU60._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar22, uParam18 );
    }
    return;
}

/* PED_CLEAR_ALL_ACTION_INTENTIONS */ void sub_57665(unknown uParam0)
{
    if ( /* IS_PED_VALID */ sub_21022( uParam0 ))
    {
        PED_FINISH_ACTION_INTENTION( uParam0, 47 );
        PED_FINISH_ACTION_INTENTION( uParam0, 48 );
        PED_FINISH_ACTION_INTENTION( uParam0, 49 );
        PED_FINISH_ACTION_INTENTION( uParam0, 50 );
        PED_FINISH_ACTION_INTENTION( uParam0, 51 );
        PED_FINISH_ACTION_INTENTION( uParam0, 52 );
        PED_FINISH_ACTION_INTENTION( uParam0, 53 );
        PED_FINISH_ACTION_INTENTION( uParam0, 54 );
        PED_FINISH_ACTION_INTENTION( uParam0, 55 );
        PED_FINISH_ACTION_INTENTION( uParam0, 56 );
        PED_FINISH_ACTION_INTENTION( uParam0, 57 );
        PED_FINISH_ACTION_INTENTION( uParam0, 58 );
    }
    return;
}

/* P_CHAPEL_HANDLE_PIANO_NIS_VO */ void sub_58094()
{
    switch (l_U1324)
    {
        case 0:
         /* P_CREATE_AND_START_TIMER */ sub_34492( ref l_U1325, 3150 );
        l_U1324++;
        DISPLAYF( "P_CHAPEL_HANDLE_PIANO_NIS_VO: going to case {}", 1, 513, l_U1324 );
        break;
        case 1:
        if ( /* ISTIMERDONE */ sub_25691( ref l_U1325 ))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_40549( ref l_U1551 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_40660( 0,  /* PLAYER_PED_ID */ sub_9350(), "MAX", ref l_U1551, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_40660( 1,  /* PLAYER_PED_ID */ sub_9350(), "MAX", ref l_U1551, 2, 0 );
             /* PLAY_SINGLE_SPEECH_FROM_LINE */ sub_58373( "SCMT_EXPLTMA", 0, 1, ref l_U1551, 8, 1 );
             /* P_CREATE_AND_START_TIMER */ sub_34492( ref l_U1325, 7200 );
            l_U1324++;
            DISPLAYF( "P_CHAPEL_HANDLE_PIANO_NIS_VO: going to case {}", 1, 513, l_U1324 );
        }
        break;
        case 2:
        if ( /* ISTIMERDONE */ sub_25691( ref l_U1325 ))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_40549( ref l_U1551 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_40660( 0,  /* PLAYER_PED_ID */ sub_9350(), "MAX", ref l_U1551, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_40660( 1,  /* PLAYER_PED_ID */ sub_9350(), "MAX", ref l_U1551, 2, 0 );
             /* PLAY_SINGLE_SPEECH_FROM_LINE */ sub_58373( "SCMT_EXPLTMA", 1, 1, ref l_U1551, 8, 1 );
             /* P_CREATE_AND_START_TIMER */ sub_34492( ref l_U1325, 6900 );
            l_U1324++;
            DISPLAYF( "P_CHAPEL_HANDLE_PIANO_NIS_VO: going to case {}", 1, 513, l_U1324 );
        }
        break;
        case 3:
        if ( /* ISTIMERDONE */ sub_25691( ref l_U1325 ))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_40549( ref l_U1551 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_40660( 0,  /* PLAYER_PED_ID */ sub_9350(), "MAX", ref l_U1551, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_40660( 1,  /* PLAYER_PED_ID */ sub_9350(), "MAX", ref l_U1551, 2, 0 );
             /* PLAY_SINGLE_SPEECH_FROM_LINE */ sub_58373( "SCMT_EXPLTMA", 2, 1, ref l_U1551, 8, 1 );
            l_U1324++;
            DISPLAYF( "P_CHAPEL_HANDLE_PIANO_NIS_VO: going to case {}", 1, 513, l_U1324 );
        }
        break;
        case 4: break;
    }
    return;
}

/* PLAY_SINGLE_SPEECH_FROM_LINE */ void sub_58373(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_LINE_FROM_BLOCK */ sub_58432( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3, uParam4, uParam5 );
}

/* PLAY_SINGLE_SPEECH_FROM_LINE_FROM_BLOCK */ void sub_58432(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    char[16] cVar9;
    char[12] cVar13;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;

    StrCopy( ref cVar9, uParam1, 16 );
    array(ref cVar13, 2);
    StrCopy( ref cVar13[0], uParam0, 16 );
    StrCopy( ref cVar13[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_41064( ref cVar13, uParam4, uParam5, 0, 1, uParam3, uParam2, ref cVar9, uParam6 );
}

/* P_BALCONY_ATTACKS_MAX */ void sub_59441()
{
     /* WRITESCRIPTLOG */ sub_812( "ML", "P_BALCONY_ATTACKS_MAX", "---" );
    ISEQ_UNREGISTER_ENTITY( 1100244310, "stad_sniper" );
     /* TERMINATEISEQ */ sub_23549( 1100244310, 1 );
     /* SETUPSNIPERANDWEAPON */ sub_37368();
    if ((NOT (IS_PED_DEAD( l_U505 ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9350() ))))
    {
        SET_PED_HEADING( l_U505, 0 );
         /* P_PED_REGISISTER_AND_LOCK_TARGET */ sub_59612( ref l_U505,  /* PLAYER_PED_ID */ sub_9350() );
         /* P_TETHERPED */ sub_50857( ref l_U1164, l_U505, 1 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U505, 1 );
        TASK_COMBAT_PED( l_U505,  /* PLAYER_PED_ID */ sub_9350() );
        SET_PED_FLAG_BLOCK_LEANFIRE_IN_COVER( l_U505, 1 );
    }
    return;
}

/* P_PED_REGISISTER_AND_LOCK_TARGET */ void sub_59612(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( (uParam0^) ))) AND (NOT (IS_PED_DEAD( uParam1 ))))
    {
        CLEAR_LOCKED_TARGET( (uParam0^) );
        REGISTER_TARGET( (uParam0^), uParam1 );
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* F_SETUP_FINAL_WAVES */ void sub_60074()
{
    int I;
    int Result;

    Result = 0;
    switch (l_U1563)
    {
        case 0:
         /* P_SET_FINAL_WAVE_VECTORS */ sub_60161();
         /* P_SETUP_AI_GROUP */ sub_35668( ref l_U526, 1.00000000, 0 );
         /* P_SETUP_AI_GROUP */ sub_35668( ref l_U581, 1.00000000, 0 );
         /* P_SETUP_AI_GROUP */ sub_35668( ref l_U629, 1.00000000, 0 );
         /* P_SETUP_AI_GROUP */ sub_35668( ref l_U727, 1.00000000, 0 );
        for ( I = 0; I <= 0; I++ )
        {
             /* PED_INITIALIZE */ sub_37468( ref l_U508[I], ref l_U506[I], -691403429, ref g_U1212, 0, 25000, 2, 0, 25000 );
             /* P_QUICK_ADD_PED_TO_GROUP */ sub_36239( l_U506[I], ref l_U526 );
            if (I == 0)
            {
                REMOVE_ALL_PED_WEAPONS( l_U506[I] );
                 /* F_GIVEPEDWEAPON */ sub_11894( l_U506[I], 434544317, 25000, 0, 0 );
                 /* F_GIVEPEDWEAPONTOHOLSTER */ sub_11143( l_U506[I], -862236369, 1, 25000, 0 );
            }
             /* P_SET_FINAL_WAVE_COMMON_FEATURES */ sub_60563( l_U506[I] );
            if (I != 0)
            {
                 /* P_DEACTIVATEPED */ sub_21650( l_U506[I] );
            }
            l_U542[I] = 0;
        }
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U526._fU0, 0 );
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_37148( ref l_U506, "FinalWaveA-" );
         /* WRITESCRIPTLOG */ sub_812( "SBA", "F_SETUP_FINAL_WAVES: Wave A done, going to Wave B", "***" );
        l_U1563 = 1;
        break;
        case 1:
        if (l_U1564 < 2)
        {
             /* PED_INITIALIZE */ sub_37468( ref l_U547[l_U1564], ref l_U544[l_U1564], -691403429, ref g_U1212, 0, 25000, 2, 0, 25000 );
             /* P_QUICK_ADD_PED_TO_GROUP */ sub_36239( l_U544[l_U1564], ref l_U581 );
            if (l_U1564 == 1)
            {
                REMOVE_ALL_PED_WEAPONS( l_U544[l_U1564] );
                 /* F_GIVEPEDWEAPON */ sub_11894( l_U544[l_U1564], 434544317, 25000, 0, 0 );
                 /* F_GIVEPEDWEAPONTOHOLSTER */ sub_11143( l_U544[l_U1564], -862236369, 1, 25000, 0 );
            }
             /* P_SET_FINAL_WAVE_COMMON_FEATURES */ sub_60563( l_U544[l_U1564] );
            if (l_U1564 != 0)
            {
                 /* P_DEACTIVATEPED */ sub_21650( l_U544[l_U1564] );
            }
            l_U606[l_U1564] = 0;
            l_U1564++;
        }
        else
        {
             /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_37148( ref l_U544, "FinalWaveB-" );
            SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U581._fU0, 0 );
            l_U1564 = 0;
             /* WRITESCRIPTLOG */ sub_812( "SBA", "F_SETUP_FINAL_WAVES: Wave B done, going to Wave C", "***" );
            l_U1563 = 2;
        }
        break;
        case 2:
        for ( I = 0; I <= 0; I++ )
        {
             /* PED_INITIALIZE */ sub_37468( ref l_U611[I], ref l_U609[I], -691403429, ref g_U1212, 0, 25000, 2, 0, 25000 );
             /* P_QUICK_ADD_PED_TO_GROUP */ sub_36239( l_U609[I], ref l_U629 );
            if (I == 0)
            {
                REMOVE_ALL_PED_WEAPONS( l_U609[I] );
                 /* F_GIVEPEDWEAPON */ sub_11894( l_U609[I], 434544317, 25000, 0, 0 );
                 /* F_GIVEPEDWEAPONTOHOLSTER */ sub_11143( l_U609[I], -862236369, 1, 25000, 0 );
            }
             /* P_SET_FINAL_WAVE_COMMON_FEATURES */ sub_60563( l_U609[I] );
            if (I != 0)
            {
                 /* P_DEACTIVATEPED */ sub_21650( l_U609[I] );
            }
            l_U645[I] = 0;
        }
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U629._fU0, 0 );
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_37148( ref l_U609, "FinalWaveC-" );
         /* WRITESCRIPTLOG */ sub_812( "SBA", "F_SETUP_FINAL_WAVES: Wave C done, going to Reinforcements", "***" );
        l_U1563 = 3;
        break;
        case 3:
        if (l_U1564 < 4)
        {
             /* PED_INITIALIZE */ sub_37468( ref l_U663[l_U1564], ref l_U658[l_U1564], -691403429, ref g_U1212, 0, 25000, 2, 0, 25000 );
             /* PED_SET_ROOM_BY_NAME */ sub_61618( ref l_U658[l_U1564], g_U1188 );
            if ( /* IS_PED_VALID */ sub_21022( l_U658[l_U1564] ))
            {
                SET_PED_CAN_AVOID_DEATH_ZONES( l_U658[l_U1564], 0 );
                SET_PED_COMBAT_ATTRIBUTES( l_U658[l_U1564], 1, 0 );
            }
            l_U716[l_U1564] = 0;
            l_U1564++;
        }
        else
        {
             /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_37148( ref l_U658, "FinalReinforce" );
             /* P_DEACTIVATEPEDARRAY */ sub_21769( ref l_U658 );
             /* WRITESCRIPTLOG */ sub_812( "SBA", "F_SETUP_FINAL_WAVES: Reinforcements done, going to Finished", "***" );
            l_U1563 = 4;
            Result = 1;
        }
        break;
        case 4: break;
    }
    return Result;
}

/* P_SET_FINAL_WAVE_VECTORS */ void sub_60161()
{
     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_SET_FINAL_WAVE_VECTORS", "***" );
    l_U522[0] = {72.00000000, -112.75000000, 4.99000000};
    l_U574[0] = {73.00000000, -108.50000000, 4.99000000};
    l_U574[1] = {72.50000000, -107.50000000, 4.99000000};
    l_U625[0] = {72.75000000, -104.00000000, 4.99000000};
    return;
}

/* P_SET_FINAL_WAVE_COMMON_FEATURES */ void sub_60563(unknown uParam0)
{
    if ( /* IS_PED_VALID */ sub_21022( uParam0 ))
    {
        SET_ROOM_FOR_PED_BY_NAME( uParam0, ref g_U1188 );
        SET_PED_COMBAT_MOVEMENT( uParam0, 0 );
        SET_PED_IGNORE_LOS_CHECKS( uParam0, 1 );
         /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_50695( ref uParam0, 1 );
        SET_PED_CAN_AVOID_DEATH_ZONES( uParam0, 0 );
        SET_PED_COMBAT_ATTRIBUTES( uParam0, 1, 0 );
    }
    return;
}

/* PED_SET_ROOM_BY_NAME */ void sub_61618(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    if ( /* IS_PED_VALID */ sub_21022( (uParam0^) ))
    {
        SET_ROOM_FOR_PED_BY_NAME( (uParam0^), ref uParam1 );
    }
    return;
}

/* P_RESET_FINAL_WAVE_COMBAT */ void sub_62029(unknown uParam0)
{
    int I;

     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_RESET_FINAL_WAVE_COMBAT", "***" );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (( /* IS_MAX_VALID */ sub_20992()) AND ( /* IS_PED_VALID */ sub_21022( (uParam0^)[I] )))
        {
            if (IS_PED_PROCESSING_FROZEN( (uParam0^)[I] ))
            {
                 /* P_ACTIVATEPED */ sub_51836( (uParam0^)[I] );
            }
            RESET_PED_TETHERING( (uParam0^)[I] );
             /* P_TETHERPED */ sub_50857( ref l_U1160, (uParam0^)[I], 1 );
             /* P_TETHERPED */ sub_50857( ref l_U1163, (uParam0^)[I], 1 );
            CLEAR_PED_TASKS( (uParam0^)[I] );
            CLEAR_LOCKED_TARGET( (uParam0^)[I] );
            CLEAR_PED_DEFAULT_AIM( (uParam0^)[I] );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^)[I], 0 );
            SET_PED_COMBAT_MOVEMENT( (uParam0^)[I], 2 );
            SET_PED_COMBAT_ATTRIBUTES( (uParam0^)[I], 1, 1 );
            REGISTER_TARGET( (uParam0^)[I],  /* PLAYER_PED_ID */ sub_9350() );
            TASK_COMBAT_PED( (uParam0^)[I],  /* PLAYER_PED_ID */ sub_9350() );
            l_U1565 = 6;
        }
    }
    return;
}

/* P_TELEPORT_REINFORCEMENTS */ void sub_62408()
{
    int I;
    vector[4] vVar3;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;

     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_TELEPORT_REINFORCEMENTS", "***" );
    array(ref vVar3, 4);
    vVar3[0] = {87.46000000, -103.78700000, 4.99100000};
    vVar3[1] = {86.66300000, -112.23000000, 4.99100000};
    vVar3[2] = {86.06000000, -104.78700000, 4.99100000};
    vVar3[3] = {87.26300000, -111.57900000, 4.99100000};
    for ( I = 0; I <= 3; I++ )
    {
        if (( /* F_ISPEDINTRIGGERBOX */ sub_43285( l_U658[I], l_U1095 )) AND ( /* IS_PED_VALID */ sub_21022( l_U658[I] )))
        {
             /* TELEPORTPED */ sub_37941( l_U658[I], vVar3[I], l_U663[I]._fU12 );
            SET_ROOM_FOR_PED_BY_NAME( l_U658[I], ref g_U1188 );
             /* PED_TASK_ATTACK_MOVE */ sub_62740( l_U658[I], 74.19436000, -108.12830000, 4.99069400, GET_RANDOM_FLOAT_IN_RANGE( 3.00000000, 5.00000000 ), 1101004800, -1082130432, 3 );
        }
    }
    return;
}

/* PED_TASK_ATTACK_MOVE */ void sub_62740(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    if ( /* IS_PED_VALID */ sub_21022( uParam0 ))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
        TASK_ATTACK_MOVE( uParam0, uParam1, uParam4, uParam5, uParam6, uParam7 );
    }
    return;
}

/* P_PROCESS_FINAL_WAVE_TARGETTING */ void sub_62858()
{
    unknown uVar2;
    unknown uVar3;

    if ( /* F_HAS_PED_ARRAY_BEEN_ATTACKED_BY_PLAYER */ sub_49817( ref l_U506, ref uVar3 ))
    {
         /* P_SET_PEDS_ATTACK_MAX */ sub_62927( uVar3, ref l_U506, ref l_U532 );
         /* P_SET_PEDS_ATTACK_MAX */ sub_62927( uVar3, ref l_U544, ref l_U587 );
         /* P_SET_PEDS_ATTACK_MAX */ sub_62927( uVar3, ref l_U609, ref l_U635 );
    }
    else if ( /* F_HAS_PED_ARRAY_BEEN_ATTACKED_BY_PLAYER */ sub_49817( ref l_U544, ref uVar3 ))
    {
         /* P_SET_PEDS_ATTACK_MAX */ sub_62927( uVar3, ref l_U506, ref l_U532 );
         /* P_SET_PEDS_ATTACK_MAX */ sub_62927( uVar3, ref l_U544, ref l_U587 );
         /* P_SET_PEDS_ATTACK_MAX */ sub_62927( uVar3, ref l_U609, ref l_U635 );
    }
    else if ( /* F_HAS_PED_ARRAY_BEEN_ATTACKED_BY_PLAYER */ sub_49817( ref l_U609, ref uVar3 ))
    {
         /* P_SET_PEDS_ATTACK_MAX */ sub_62927( uVar3, ref l_U506, ref l_U532 );
         /* P_SET_PEDS_ATTACK_MAX */ sub_62927( uVar3, ref l_U544, ref l_U587 );
         /* P_SET_PEDS_ATTACK_MAX */ sub_62927( uVar3, ref l_U609, ref l_U635 );
    };;;
     /* P_CHECK_TIMERS_TO_REFOCUS_ON_PASSOS */ sub_63761( ref l_U506, l_U649, ref l_U532 );
     /* P_CHECK_TIMERS_TO_REFOCUS_ON_PASSOS */ sub_63761( ref l_U544, l_U652, ref l_U587 );
     /* P_CHECK_TIMERS_TO_REFOCUS_ON_PASSOS */ sub_63761( ref l_U609, l_U655, ref l_U635 );
    return;
}

/* P_SET_PEDS_ATTACK_MAX */ void sub_62927(int iParam0, unknown uParam1, unknown uParam2)
{
    int I;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (DOES_PED_EXIST( iParam0 ))
    {
         /* WRITESCRIPTLOG */ sub_812( "SBA", "P_SET_PEDS_ATTACK_MAX: Ped exists - getting coords", "***" );
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0 )};
    }
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (( /* IS_MAX_VALID */ sub_20992()) AND ( /* IS_PED_VALID */ sub_21022( (uParam1^)[I] )))
        {
            if (( /* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ sub_63106( (uParam1^)[I], uVar6 )) < 5.00000000)
            {
                if ( /* IS_MAX_VALID */ sub_20992())
                {
                     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_SET_PEDS_ATTACK_MAX: Target Player, (re)starting ReturnToPassos timer:", "***" );
                     /* WRITE_INT */ sub_17050( I );
                    CLEAR_PED_DEFAULT_AIM( (uParam1^)[I] );
                    CLEAR_PED_TASKS( (uParam1^)[I] );
                     /* P_PED_REGISISTER_AND_LOCK_TARGET */ sub_59612( ref (uParam1^)[I],  /* PLAYER_PED_ID */ sub_9350() );
                    REGISTER_TARGET( (uParam1^)[I],  /* PLAYER_PED_ID */ sub_9350() );
                    TASK_COMBAT_PED( (uParam1^)[I],  /* PLAYER_PED_ID */ sub_9350() );
                    if ((uParam1^)[I] == iParam0)
                    {
                         /* WRITESCRIPTLOG */ sub_812( "SBA", "P_SET_PEDS_ATTACK_MAX: Setting a longer timer for enemy who was attacked", "***" );
                         /* P_CREATE_AND_START_TIMER */ sub_34492( ref (uParam2^)[I], 4000 );
                    }
                    else
                    {
                         /* P_CREATE_AND_START_TIMER */ sub_34492( ref (uParam2^)[I], GET_RANDOM_INT_IN_RANGE( 2000, 3500 ) );
                    }
                }
            }
        }
    }
    return;
}

/* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ void sub_63106(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    else
    {
        return -1.00000000;
    }
    return VDIST( uVar6, uParam1 );
}

/* P_CHECK_TIMERS_TO_REFOCUS_ON_PASSOS */ void sub_63761(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ( /* ISTIMERDONE */ sub_25691( ref (uParam4^)[I] ))
        {
             /* WRITESCRIPTLOG */ sub_812( "SBA", "P_CHECK_TIMERS_TO_REFOCUS_ON_PASSOS: ReturnToPassos timer DONE...", "***" );
             /* WRITE_INT */ sub_17050( I );
             /* P_THREATEN_PASSOS */ sub_63945( (uParam0^)[I], uParam1, 3, 0 );
        }
    }
    return;
}

/* P_THREATEN_PASSOS */ void sub_63945(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    if ( /* IS_PED_VALID */ sub_21022( uParam0 ))
    {
         /* WRITESCRIPTLOG */ sub_812( "SBA", "P_THREATEN_PASSOS", "***" );
        CLEAR_PED_DEFAULT_AIM( uParam0 );
         /* P_PED_REGISISTER_AND_LOCK_TARGET */ sub_59612( ref uParam0, g_U824 );
         /* P_MOVE_AND_SHOOT_AT_PASSOS */ sub_64053( uParam0, uParam1, uParam4, uParam5 );
    }
    return;
}

/* P_MOVE_AND_SHOOT_AT_PASSOS */ void sub_64053(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, boolean bParam5)
{
    unknown uVar8;

     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_MOVE_AND_SHOOT_AT_PASSOS", "***" );
    if (( /* IS_PASSOS_VALID */ sub_64145()) AND ( /* IS_PED_VALID */ sub_21022( uParam0 )))
    {
        OPEN_SEQUENCE_TASK( ref uVar8 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (bParam5)
        {
            TASK_PAUSE( 0, 2000 );
        }
        TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, uParam1, g_U824, uParam4, 1, 1.00000000, 0.50000000, 1, 0 );
        TASK_SHOOT_AT_PED( 0, g_U824, -1, 0, 0, 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar8 );
        CLEAR_PED_TASKS( uParam0 );
        TASK_PERFORM_SEQUENCE( uParam0, uVar8 );
        CLEAR_SEQUENCE_TASK( uVar8 );
    }
    return;
}

/* IS_PASSOS_VALID */ int sub_64145()
{
    if ((NOT (IS_PED_DEAD( g_U824 ))) AND (DOES_PED_EXIST( g_U824 )))
    {
        return 1;
    }
    return 0;
}

/* P_HANDLE_TETHERING_REINFORCEMENTS */ void sub_64430()
{
    int I;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    for ( I = 0; I <= 3; I++ )
    {
        if (NOT l_U716[I])
        {
            if ( /* IS_PED_VALID */ sub_21022( l_U658[I] ))
            {
                if (IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U658[I], "TETH_REINFORCEMENTS_RIGHT" ))
                {
                     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HANDLE_TETHERING_REINFORCEMENTS: Tethering a ped RIGHT!", 0 );
                    CLEAR_PED_TASKS( l_U658[I] );
                     /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_50695( ref l_U658[I], 0 );
                     /* PED_SET_REGISTER_TARGET_PLAYER */ sub_64681( ref l_U658[I] );
                     /* P_TETHERPED */ sub_50857( ref l_U1162, l_U658[I], 1 );
                    l_U716[I] = 1;
                }
                else if (IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U658[I], "TETH_REINFORCEMENTS_LEFT" ))
                {
                     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HANDLE_TETHERING_REINFORCEMENTS: Tethering a ped LEFT!", 0 );
                    CLEAR_PED_TASKS( l_U658[I] );
                     /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_50695( ref l_U658[I], 0 );
                     /* PED_SET_REGISTER_TARGET_PLAYER */ sub_64681( ref l_U658[I] );
                     /* P_TETHERPED */ sub_50857( ref l_U1161, l_U658[I], 1 );
                    l_U716[I] = 1;
                }
            }
        }
    }
    return;
}

/* PED_SET_REGISTER_TARGET_PLAYER */ void sub_64681(unknown uParam0)
{
    if (( /* IS_MAX_VALID */ sub_20992()) AND ( /* IS_PED_VALID */ sub_21022( (uParam0^) )))
    {
         /* PED_SET_REGISTER_TARGET */ sub_51157( uParam0,  /* PLAYER_PED_ID */ sub_9350() );
    }
    return;
}

/* P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS */ void sub_65123(int iParam0)
{
    unknown uVar3;

    switch (l_U1565)
    {
        case 0:
        if ((IS_PED_DEAD( l_U505 )) || ( /* ISTIMERDONE */ sub_25691( ref l_U1524 )))
        {
            l_U1562 = iParam0;
             /* P_THREATEN_PASSOS */ sub_63945( l_U544[0], l_U652, 2, 0 );
             /* P_THREATEN_PASSOS */ sub_63945( l_U609[0], l_U655, 2, 1 );
             /* P_CREATE_AND_START_TIMER */ sub_34492( ref l_U1524, 8000 );
             /* P_DIAL_PASSOS_FINAL_WAVE */ sub_65328();
            l_U1522 = 1;
             /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: Starting first wave, going to eFW_SecondWave.", "***" );
            l_U1565 = 1;
        }
        break;
        case 1:
        if (iParam0 < l_U1562)
        {
            if ((l_U1524._fU4 - l_U1524._fU0) < (l_U1524._fU12 - 1500))
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: eFW_SecondWave: Final Wave guy dead, resetting timer.", "***" );
                 /* P_CREATE_AND_START_TIMER */ sub_34492( ref l_U1524, 1500 );
            }
             /* P_SEND_IN_FINAL_WAVE_REINFORCEMENT */ sub_65821( 2 );
            l_U1562 = iParam0;
            l_U1561 = 1;
        }
        if ( /* ISTIMERDONE */ sub_25691( ref l_U1524 ))
        {
             /* P_CREATE_AND_START_TIMER */ sub_34492( ref l_U1524, 8000 );
            if (l_U1561)
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: send runner.  Going to eFW_ThirdWave.", "***" );
                 /* P_THREATEN_PASSOS */ sub_63945( l_U506[0], l_U649, 3, 0 );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: send walker.  Going to eFW_ThirdWave.", "***" );
                 /* P_THREATEN_PASSOS */ sub_63945( l_U506[0], l_U649, 2, 0 );
            }
            l_U1561 = 0;
            l_U1565 = 2;
        }
        break;
        case 2:
        if (iParam0 < l_U1562)
        {
            if ((l_U1524._fU4 - l_U1524._fU0) < (l_U1524._fU12 - 1500))
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: eFW_ThirdWave: Final Wave guy dead, resetting timer.", "***" );
                 /* P_CREATE_AND_START_TIMER */ sub_34492( ref l_U1524, 1500 );
            }
             /* P_SEND_IN_FINAL_WAVE_REINFORCEMENT */ sub_65821( 2 );
            l_U1562 = iParam0;
            l_U1561 = 1;
        }
        if ( /* ISTIMERDONE */ sub_25691( ref l_U1524 ))
        {
             /* P_TELEPORT_PED_TO_START_LOC */ sub_67166( l_U544[1], 80.50000000, -107.90000000, 4.99000000 );
            if (l_U1561)
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: send runner.  Going to eFW_FourthWave.", "***" );
                 /* P_THREATEN_PASSOS */ sub_63945( l_U544[1], l_U652, 3, 0 );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: send walker.  Going to eFW_FourthWave.", "***" );
                 /* P_THREATEN_PASSOS */ sub_63945( l_U544[1], l_U652, 2, 0 );
            }
             /* P_CREATE_AND_START_TIMER */ sub_34492( ref l_U1524, 8000 );
            l_U1561 = 0;
            l_U1565 = 3;
        }
        break;
        case 3:
        if (iParam0 < l_U1562)
        {
            if ((l_U1524._fU4 - l_U1524._fU0) < (l_U1524._fU12 - 1500))
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: eFW_ThirdWave: Final Wave guy dead, resetting timer.", "***" );
                 /* P_CREATE_AND_START_TIMER */ sub_34492( ref l_U1524, 1500 );
            }
             /* P_SEND_IN_FINAL_WAVE_REINFORCEMENT */ sub_65821( 2 );
            l_U1562 = iParam0;
            l_U1561 = 1;
        }
        if ( /* ISTIMERDONE */ sub_25691( ref l_U1524 ))
        {
             /* P_SEND_IN_FINAL_WAVE_REINFORCEMENT */ sub_65821( 2 );
             /* P_CREATE_AND_START_TIMER */ sub_34492( ref l_U1524, 1500 );
            l_U1561 = 0;
             /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS:  Going to eFW_FifthWave.", "***" );
            l_U1565 = 4;
        }
        break;
        case 4:
        if ( /* ISTIMERDONE */ sub_25691( ref l_U1524 ))
        {
            uVar3 =  /* F_GET_UNDEPLOYED_REINFORCEMENT */ sub_67920( ref l_U658 );
             /* P_TELEPORT_PED_TO_START_LOC */ sub_67166( uVar3, 80.50000000, -104.85000000, 4.99000000 );
             /* P_THREATEN_PASSOS */ sub_63945( uVar3, l_U655, 3, 0 );
             /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: going to eFW_RepurposeReinforcement.", "***" );
            l_U1565 = 5;
        }
        break;
        case 5:
        if (iParam0 <= 1)
        {
            uVar3 =  /* F_GET_UNDEPLOYED_REINFORCEMENT */ sub_67920( ref l_U658 );
             /* P_TELEPORT_PED_TO_START_LOC */ sub_67166( uVar3, 80.50000000, -110.85000000, 4.99000000 );
             /* P_THREATEN_PASSOS */ sub_63945( uVar3, l_U649, 3, 0 );
             /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: going to eFW_Done.", "***" );
            l_U1565 = 6;
        }
        break;
        case 6: break;
    }
    if (NOT l_U801)
    {
         /* P_SET_FINAL_WAVE_TETHER */ sub_68476( ref l_U506, ref l_U542 );
         /* P_SET_FINAL_WAVE_TETHER */ sub_68476( ref l_U544, ref l_U606 );
         /* P_SET_FINAL_WAVE_TETHER */ sub_68476( ref l_U609, ref l_U645 );
        if (l_U1522)
        {
            if ((((( /* GET_NUM_PEDS_IN_TRIGGERBOX */ sub_68768( ref l_U506, l_U1073 )) + ( /* GET_NUM_PEDS_IN_TRIGGERBOX */ sub_68768( ref l_U544, l_U1073 ))) + ( /* GET_NUM_PEDS_IN_TRIGGERBOX */ sub_68768( ref l_U609, l_U1073 ))) + ( /* GET_NUM_PEDS_IN_TRIGGERBOX */ sub_68768( ref l_U658, l_U1073 ))) != 0)
            {
                if ((NOT l_U1542._fU20) AND (NOT l_U1533._fU20))
                {
                     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: STARTING tmrThreatDuration.", "***" );
                     /* P_CREATE_AND_START_TIMER */ sub_34492( ref l_U1533, 2000 );
                }
            }
            else if (l_U1533._fU20)
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: RESETING tmrThreatDuration.", "***" );
                 /* RESETTIMER */ sub_1457( ref l_U1533 );
            }
            if (l_U1542._fU20)
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: RESETING tmrPassosIsShot.", "***" );
                 /* RESETTIMER */ sub_1457( ref l_U1542 );
            }
            if ( /* ISTIMERDONE */ sub_25691( ref l_U1533 ))
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: tmrThreatDuration DONE. STARTING tmrPassosIsShot.", "***" );
                 /* P_CREATE_AND_START_TIMER */ sub_34492( ref l_U1542, 2000 );
            }
            if ( /* ISTIMERDONE */ sub_25691( ref l_U1542 ))
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: tmrPassosIsShot DONE.", "***" );
                 /* RESETTIMER */ sub_1457( ref l_U1524 );
                l_U1518 = 1;
                l_U1522 = 0;
                l_U1565 = 6;
            }
        }
    }
    return;
}

/* P_DIAL_PASSOS_FINAL_WAVE */ void sub_65328()
{
     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_DIAL_PASSOS_FINAL_WAVE", "---" );
    if ((NOT (IS_PED_DEAD( g_U824 ))) AND (NOT (IS_PED_DEAD( g_U1178 ))))
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_40549( ref l_U1642 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_40660( 0, g_U1178, "MAX", ref l_U1642, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_40660( 1, g_U824, "PASSOS", ref l_U1642, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_40932( "SCMT_PSHBA", ref l_U1642, 8, 1 );
    }
    return;
}

/* P_SEND_IN_FINAL_WAVE_REINFORCEMENT */ void sub_65821(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;

     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_SEND_IN_FINAL_WAVE_REINFORCEMENT", "***" );
    if (l_U733 < 4)
    {
        if (( /* F_GET_NUM_LIVING_DEPLOYED_REINFORCEMENTS */ sub_65938( ref l_U658 )) < iParam0)
        {
            uVar4 = l_U658[l_U733];
             /* WRITESCRIPTLOG */ sub_812( "SBA", "P_SEND_IN_FINAL_WAVE_REINFORCEMENT: sending in #:", 0 );
             /* WRITE_INT */ sub_17050( l_U733 );
            if ((l_U733 == 2) || (l_U733 == 0))
            {
                uVar5 = {l_U721};
            }
            else
            {
                uVar5 = {l_U724};
            }
            l_U733++;
            if ( /* IS_PED_VALID */ sub_21022( uVar4 ))
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "P_SEND_IN_FINAL_WAVE_REINFORCEMENT: Ped is Valid!", 0 );
                 /* P_ACTIVATEPED */ sub_51836( uVar4 );
                OPEN_SEQUENCE_TASK( ref uVar3 );
                TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
                TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uVar5, 3, -1, 1.00000000, 0, 0.50000000 );
                TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
                CLOSE_SEQUENCE_TASK( uVar3 );
                CLEAR_PED_TASKS( uVar4 );
                TASK_PERFORM_SEQUENCE( uVar4, uVar3 );
                CLEAR_SEQUENCE_TASK( uVar3 );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "P_SEND_IN_FINAL_WAVE_REINFORCEMENT: Ped is NOT Valid!", 0 );
            }
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_812( "SBA", "P_SEND_IN_FINAL_WAVE_REINFORCEMENT: Two already deployed!", 0 );
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_812( "SBA", "P_SEND_IN_FINAL_WAVE_REINFORCEMENT: Out of reinforcements!", 0 );
    }
    return;
}

/* F_GET_NUM_LIVING_DEPLOYED_REINFORCEMENTS */ void sub_65938(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            if (NOT (IS_PED_PROCESSING_FROZEN( (uParam0^)[I] )))
            {
                Result++;
            }
        }
    }
    return Result;
}

/* P_TELEPORT_PED_TO_START_LOC */ void sub_67166(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    if ( /* IS_PED_VALID */ sub_21022( uParam0 ))
    {
         /* WRITESCRIPTLOG */ sub_812( "SBA", "P_TELEPORT_PED_TO_START_LOC", "***" );
         /* P_ACTIVATEPED */ sub_51836( uParam0 );
         /* TELEPORTPED */ sub_37941( uParam0, uParam1, 90 );
        SET_ROOM_FOR_PED_BY_NAME( uParam0, ref g_U1188 );
    }
    return;
}

/* F_GET_UNDEPLOYED_REINFORCEMENT */ void sub_67920(unknown uParam0)
{
    int I;
    unknown Result;

    Result = nil;
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            if (IS_PED_PROCESSING_FROZEN( (uParam0^)[I] ))
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "F_GET_UNDEPLOYED_REINFORCEMENT: Found undeployed reinforcement!", "***" );
                l_U716[I] = 1;
                 /* P_TETHERPED */ sub_50857( ref l_U1160, (uParam0^)[I], 1 );
                Result = (uParam0^)[I];
            }
        }
    }
    return Result;
}

/* P_SET_FINAL_WAVE_TETHER */ void sub_68476(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (uParam1^)[I])
        {
            if ( /* IS_PED_VALID */ sub_21022( (uParam0^)[I] ))
            {
                if (IS_PED_IN_GAMEPLAY_HELPER_BOX( (uParam0^)[I], "TETH_MAIN_CHAPEL_C" ))
                {
                     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_SET_FINAL_WAVE_TETHER: Setting tether for final wave enemy", "***" );
                     /* P_TETHERPED */ sub_50857( ref l_U1160, (uParam0^)[I], 1 );
                    (uParam1^)[I] = 1;
                }
            }
        }
    }
    return;
}

/* GET_NUM_PEDS_IN_TRIGGERBOX */ void sub_68768(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ( /* F_ISPEDINTRIGGERBOX */ sub_43285( (uParam0^)[I], uParam1 ))
        {
            Result++;
        }
    }
    return Result;
}

/* F_ASSIGN_CHAPEL_BULLET_CAM */ int sub_69593(int iParam0)
{
    boolean bVar3;
    int iVar4;

    bVar3 = true;
    if (iParam0 == 1)
    {
         /* WRITESCRIPTLOG */ sub_812( "SBA", "P_ASSIGN_CHAPEL_BULLET_CAM: Assigning bullet cam...", "***" );
        iVar4 =  /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_69719( ref l_U370 );
        if (iVar4 == nil)
        {
            iVar4 =  /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_69719( ref l_U506 );
            bVar3 = false;
        }
        if (iVar4 == nil)
        {
            iVar4 =  /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_69719( ref l_U544 );
            bVar3 = false;
        }
        if (iVar4 == nil)
        {
            iVar4 =  /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_69719( ref l_U609 );
            bVar3 = false;
        }
        if (iVar4 == nil)
        {
            if (NOT (IS_PED_DEAD( l_U505 )))
            {
                iVar4 = l_U505;
                SET_PED_CAN_TRIGGER_BULLET_CAM( iVar4, 1 );
            }
        }
        if (iVar4 == nil)
        {
            iVar4 =  /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_69719( ref l_U658 );
        }
        if (iVar4 == nil)
        {
            SCRIPT_ASSERT( "F_ASSIGN_CHAPEL_BULLET_CAM: Can't find ped to assign bullet cam!", 0 );
        }
        else if ( /* IS_PED_VALID */ sub_21022( iVar4 ))
        {
            if (bVar3)
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "P_ASSIGN_CHAPEL_BULLET_CAM: setting lone wolf.", "***" );
                 /* P_REMOVE_PED_FROM_GROUP */ sub_70202( ref iVar4 );
                CLEAR_LOCKED_TARGET( iVar4 );
                 /* PED_SET_REGISTER_TARGET */ sub_51157( ref iVar4,  /* PLAYER_PED_ID */ sub_9350() );
                SET_PED_COMBAT_ATTRIBUTES( iVar4, 8192, 1 );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_812( "SBA", "P_ASSIGN_CHAPEL_BULLET_CAM: NOT setting lone wolf.", "***" );
                SET_PED_COMBAT_ATTRIBUTES( iVar4, 8192, 0 );
                SET_PED_COMBAT_ATTRIBUTES( iVar4, 1024, 0 );
            }
        }
        return 1;
    }
    return 0;
}

/* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ void sub_69719(unknown uParam0)
{
    int I;

    if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_51643( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

/* P_REMOVE_PED_FROM_GROUP */ void sub_70202(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_812( "MSWW", "P_REMOVE_PED_FROM_GROUP", "###" );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        if ((GET_PED_GROUP_INDEX( (uParam0^) )) != -1)
        {
             /* WRITESCRIPTLOG */ sub_812( "MSWW", "P_REMOVE_PED_FROM_GROUP: Removing ped from group.", "###" );
            REMOVE_PED_FROM_GROUP( (uParam0^) );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_812( "MSWW", "P_REMOVE_PED_FROM_GROUP: Ped is not in a group!", "###" );
        }
    }
    return;
}

/* PLAY_CUTSCENE_MID_08_CEM */ void sub_71199(boolean bParam0, boolean bParam1, unknown uParam2)
{
    int Result;
    unknown uVar6;

    Result = 0;
    if (IS_STRING_NULL( uParam2 ))
    {
        uParam2 = l_U337;
    }
    switch (l_U352)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_812( "RJM", "PLAY_CUTSCENE_MID_08_CEM start", 0 );
        DISPLAYF( "Max's position before teleport: {}", 1, 1027, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_9350() ) );
        if (NOT bParam0)
        {
             /* TELEPORTPED */ sub_37941(  /* PLAYER_PED_ID */ sub_9350(), 68.80901000, -107.72000000, 4.99079600, 0 );
            SET_ROOM_FOR_PED_BY_NAME(  /* PLAYER_PED_ID */ sub_9350(), ref g_U1188 );
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_9350(), 1 );
            uVar6 = GET_INTERIOR_AT_COORDS( 68.80901000, -107.72000000, 4.99079600 );
            SET_INTERIOR_ACTIVE( uVar6, 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( uVar6, GET_HASH_KEY( ref g_U1188 ) );
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_9350(), 0 );
        }
         /* NIS_PRE_SETUP */ sub_21470( 1, 0, 0, 1 );
        if (NOT bParam0)
        {
             /* BLOCKLOAD_MID_08_CEM_ASSETS */ sub_71551();
             /* LOADSEAMLESSCUTSCENE */ sub_18774( uParam2, 1 );
             /* CREATE_MID_08_CEM_PEDS_AND_OBJECTS */ sub_71617();
        }
         /* REGISTER_PEDS_MID_08_CEM */ sub_71830( bParam0 );
        if (bParam0)
        {
            AUD_ENABLE_PRE_BINK_SHUTDOWN( 1 );
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        if (bParam1)
        {
            START_CUTSCENE_CAPTURE( uParam2 );
        }
        START_SEAMLESS_CUTSCENE();
        l_U352 = 1;
        break;
        case 1:
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        l_U352 = 2;
        break;
        case 2:
        if (HAS_CUTSCENE_FINISHED())
        {
            STOP_CUTSCENE_CAPTURE();
             /* CLEANUP_MID_08_CEM_ASSETS */ sub_73022();
             /* UNLOAD_MID_08_CEM_ASSETS */ sub_73078();
            Result = 1;
            l_U352 = 0;
             /* WRITESCRIPTLOG */ sub_812( "RJM", "PLAY_CUTSCENE_MID_08_CEM end", 0 );
        }
        break;
    }
    return Result;
}

/* BLOCKLOAD_MID_08_CEM_ASSETS */ void sub_71551()
{
     /* BLOCKLOADMODEL */ sub_32821( g_U1332 );
    return;
}

/* CREATE_MID_08_CEM_PEDS_AND_OBJECTS */ void sub_71617()
{
     /* WRITESCRIPTLOG */ sub_812( "RJM", "CREATE_MID_08_CEM_PEDS_AND_OBJECTS - start", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2668( ref l_U339, 0, 0, 0, 0.00000000, 1862331818, 26, 6, 0, 0, 0 );
    l_U338 =  /* CREATEPED */ sub_24376( ref l_U339 );
     /* WRITESCRIPTLOG */ sub_812( "RJM", "CREATE_MID_08_CEM_PEDS_AND_OBJECTS - end", 0 );
    return;
}

/* REGISTER_PEDS_MID_08_CEM */ void sub_71830(boolean bParam0)
{
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_812( "RJM", "REGISTER_PEDS_MID_08_CEM - start", 0 );
    if ( /* IS_MAX_VALID */ sub_20992())
    {
         /* WRITESCRIPTLOG */ sub_812( "RJM", "Registering player with MID_08", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_9350(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
    }
    if (bParam0)
    {
        uVar3 = g_U824;
    }
    else
    {
        uVar3 = l_U338;
    }
    if ( /* IS_PED_VALID */ sub_21022( uVar3 ))
    {
         /* WRITESCRIPTLOG */ sub_812( "RJM", "Registering Passos with MID_08_CEM_concat", 0 );
         /* P_SET_PED_ALL_WEAPON_VISIBILITY */ sub_72129( uVar3, 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( uVar3, "PASS_NY_H", 0 );
    }
     /* WRITESCRIPTLOG */ sub_812( "RJM", "REGISTER_PEDS_MID_08_CEM - end", 0 );
    return;
}

/* P_SET_PED_ALL_WEAPON_VISIBILITY */ void sub_72129(unknown uParam0, unknown uParam1)
{
     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY", 0 );
     /* WRITE_BOOL */ sub_17751( uParam1 );
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
         /* WRITESCRIPTLOG */ sub_812( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY: WEAPONHAND_LEFT", 0 );
         /* WRITE_INT */ sub_17050( GET_WEAPON_FROM_HAND( uParam0, 1, 0 ) );
        if ((GET_WEAPON_FROM_HAND( uParam0, 1, 0 )) != 0)
        {
            SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HAND( uParam0, 1, 0 ), uParam1 );
        }
         /* WRITESCRIPTLOG */ sub_812( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY: WEAPONHAND_RIGHT", 0 );
         /* WRITE_INT */ sub_17050( GET_WEAPON_FROM_HAND( uParam0, 0, 0 ) );
        if ((GET_WEAPON_FROM_HAND( uParam0, 0, 0 )) != 0)
        {
            SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HAND( uParam0, 0, 0 ), uParam1 );
        }
         /* WRITESCRIPTLOG */ sub_812( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY: WEAPONHOLSTER_PISTOL_LEFT", 0 );
         /* WRITE_INT */ sub_17050( GET_WEAPON_FROM_HOLSTER( uParam0, 1 ) );
        if ((GET_WEAPON_FROM_HOLSTER( uParam0, 1 )) != 0)
        {
            SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HOLSTER( uParam0, 1 ), uParam1 );
        }
         /* WRITESCRIPTLOG */ sub_812( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY: WEAPONHOLSTER_PISTOL_RIGHT", 0 );
         /* WRITE_INT */ sub_17050( GET_WEAPON_FROM_HOLSTER( uParam0, 0 ) );
        if ((GET_WEAPON_FROM_HOLSTER( uParam0, 0 )) != 0)
        {
            SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HOLSTER( uParam0, 0 ), uParam1 );
        }
         /* WRITESCRIPTLOG */ sub_812( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY: WEAPONHOLSTER_RIFLE", 0 );
         /* WRITE_INT */ sub_17050( GET_WEAPON_FROM_HOLSTER( uParam0, 2 ) );
        if ((GET_WEAPON_FROM_HOLSTER( uParam0, 2 )) != 0)
        {
            SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HOLSTER( uParam0, 2 ), uParam1 );
        }
    }
    return;
}

/* CLEANUP_MID_08_CEM_ASSETS */ void sub_73022()
{
     /* CLEANPED */ sub_24287( l_U338 );
    return;
}

/* UNLOAD_MID_08_CEM_ASSETS */ void sub_73078()
{
     /* UNLOADMODEL */ sub_34225( g_U1332 );
    return;
}

/* P_UNLOAD_ASSETS_CHAPEL */ void sub_73333()
{
     /* WRITESCRIPTLOG */ sub_812( "SBA", "P_UNLOAD_ASSETS_CHAPEL", "***" );
     /* UNLOADMODEL */ sub_34225( g_U762 );
     /* UNLOADMODEL */ sub_34225( -1504197122 );
     /* UNLOADMODEL */ sub_34225( g_U1349 );
     /* UNLOADMODEL */ sub_34225( 164359972 );
     /* UNLOADMODEL */ sub_34225( g_U1332 );
     /* UNLOADANIMDICT */ sub_73480( "LEVEL_S_CEM_CP_10" );
     /* UNLOADANIMDICT */ sub_73480( "FACE_PASNYB" );
     /* UNLOADACTIONTREE */ sub_73586( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act" );
    return;
}

/* UNLOADANIMDICT */ void sub_73480(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

/* UNLOADACTIONTREE */ void sub_73586(unknown uParam0)
{
    ACTION_TREE_UNLOAD( uParam0 );
    return;
}

/* P_UNLOAD_WEAPONS */ void sub_73642(unknown uParam0)
{
    switch (uParam0)
    {
        case 0:
        case 1: break;
        case 2: break;
        case 3: break;
        case 4:
        case 5: break;
        case 6: break;
        case 7:
         /* UNLOADWEAPON */ sub_73798( 1224272620 );
        break;
        case 8: break;
        case 9:
         /* LOADWEAPON */ sub_8185( 434544317, 1 );
         /* LOADWEAPON */ sub_8185( -691403429, 1 );
        break;
        case 10:
         /* UNLOADWEAPON */ sub_73798( -184942895 );
        break;
    }
    return;
}

/* UNLOADWEAPON */ void sub_73798(unknown uParam0)
{
    SET_WEAPON_AS_NO_LONGER_NEEDED( uParam0 );
    return;
}


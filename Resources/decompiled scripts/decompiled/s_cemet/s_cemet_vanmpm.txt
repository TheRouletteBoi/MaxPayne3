void main()
{
    l_U0 = 0;
    l_U1 = 1;
    l_U2 = 0;
    l_U3 = 1.00000000;
    l_U4 = -5.00000000;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U11 = 42;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 90.00000000;
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = nil;
    l_U31 = {0.00000000, 0.00000000, 0.00000000};
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U37 = 1;
    l_U38 = 144;
    l_U59 = {0, 0, 0};
    StrCopy( ref l_U62, "DUMMY", 32 );
    l_U70 = 1;
    l_U75 = 0;
    l_U76 = 0;
    l_U77 = 0;
    l_U80 = 0;
    l_U125 = -1;
    l_U126 = {64536, 64536, 64536};
    l_U129 = "PED_DEF";
    l_U171 = 1.00000000;
    l_U183 = 0;
    l_U224 = 0;
    l_U245 = 0;
    l_U246 = 0;
    l_U247 = 1500;
    l_U276 = 0;
    l_U278 = 1;
    l_U279 = 0;
    l_U286 = {0, -8.88400000, -0.75000000};
    l_U421 = {-107.63000000, -13.31000000, 0.11000000};
    l_U424 = {-12.08000000, 0, 21.10000000};
    l_U427 = 45.00000000;
    l_U428 = 474;
    l_U469 = {-107.88210000, 2.63420800, -1.72965000};
    l_U472 = {17.56821000, 0.00002600, 121.31570000};
    l_U475 = 55.00000000;
    l_U476 = 374;
    l_U517 = {-107.77850000, 2.96934900, -1.82837800};
    l_U520 = {16.02290000, 0.00005300, 129.96160000};
    l_U523 = 50.00000000;
    l_U524 = 404;
    l_U534 = 1.00000000;
    l_U535 = 0.20000000;
    l_U545 = 0.02000000;
    l_U626 = {-110.75000000, 15.59000000, -1.55000000};
    l_U629 = {3.09000000, 2.00000000, 177.87000000};
    l_U632 = 31.36000000;
    l_U633 = 3000;
    l_U665 = {-110.73000000, 17.39000000, -1.58000000};
    l_U668 = {3.09000000, 2.00000000, 177.87000000};
    l_U671 = 31.36000000;
    l_U672 = 1.50000000;
     /* WRITE_STRING */ sub_779( "[SP]### Script s_cemet_vanMPM is starting... ###" );
    l_U276 = 0;
     /* P_LOAD_VAN_MPM_ASSETS */ sub_834();
     /* P_INITIALIZE_SCRIPT_DATA */ sub_2431();
     /* P_SET_STATIC_GAMEPLAY_DATA */ sub_3190();
     /* P_LOAD_AUDIO_ASSETS */ sub_3664();
     /* INITIALIZE_PLAYER_BY_DEBUG_MENU_CHECKPOINT */ sub_4209();
    l_U278 = 1;
    while (NOT IS_EXITFLAG_SET())
    {
         /* P_HANDLE_MUSIC */ sub_13868();
         /* P_HANDLE_CHECKPOINTS */ sub_14231();
         /* HANDLE_EVENTS */ sub_22604();
        WAIT( 0 );
    }
    CLEAR_PED_DEFAULT_AIM(  /* PLAYER_PED_ID */ sub_4431() );
     /* P_CLEANUP_ALL */ sub_21818();
     /* P_UNLOAD_VAN_MPM_ASSETS */ sub_31773();
     /* RESTORE_REAL_DOORS */ sub_32452();
    SET_CAM_SIDE_LEFT( 0 );
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_cemet_vanMPM" );
    SET_EXITFLAG_RESPONSE();
     /* WRITE_STRING */ sub_779( "[SP]### Script s_cemet_vanMPM is terminating... ###" );
    return;
}

/* WRITE_STRING */ void sub_779(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_LOAD_VAN_MPM_ASSETS */ void sub_834()
{
     /* WRITE_STRING */ sub_779( "[SP]### P_LOAD_VAN_MPM_ASSETS ###" );
     /* SETUP_SCRIPTED_SPEECH */ sub_919( "SCMTAUD" );
     /* LOADMODEL */ sub_1088( g_U1367, 1 );
     /* LOADMODEL */ sub_1088( g_U1332, 1 );
     /* LOADMODEL */ sub_1088( g_U1335, 1 );
     /* LOADMODEL */ sub_1088( g_U1352, 1 );
     /* LOADMODEL */ sub_1088( g_U1353, 1 );
     /* LOADMODEL */ sub_1088( g_U1354, 1 );
     /* LOADMODEL */ sub_1088( g_U1355, 1 );
     /* LOADMODEL */ sub_1088( g_U1356, 1 );
     /* LOADMODEL */ sub_1088( g_U1357, 1 );
     /* LOADMODEL */ sub_1088( g_U1358, 1 );
     /* LOADMODEL */ sub_1088( g_U1359, 1 );
     /* LOADMODEL */ sub_1088( g_U1360, 1 );
     /* LOADMODEL */ sub_1088( g_U1361, 1 );
     /* LOADMODEL */ sub_1088( g_U1362, 1 );
     /* LOADMODEL */ sub_1088( g_U1363, 1 );
     /* LOADMODEL */ sub_1088( -1174607443, 1 );
     /* LOADMODEL */ sub_1088( 108266138, 1 );
     /* LOADISEQ */ sub_1515( 1394393399, 1 );
     /* LOADANIMDICT */ sub_1829( "LEVEL_S_CEM_CP_02", 0, 1 );
     /* LOADACTIONTREE */ sub_2022( "Vehicle/Vehicle_Car.act", 1 );
     /* LOADANIMDICT */ sub_1829( "FACE_PASNYB", 0, 1 );
     /* LOADACTIONTREE */ sub_2022( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act", 1 );
     /* LOADVEHICLERECORDING */ sub_2251( g_U1229, 1 );
     /* LOADVEHICLERECORDING */ sub_2251( g_U1230, 1 );
    return;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_919(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_963();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_963()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* LOADMODEL */ void sub_1088(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_779( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADISEQ */ void sub_1515(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                DISPLAYF( "[SP]### Waiting for interactive sequence to be loaded: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* LOADANIMDICT */ void sub_1829(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an animation dictionary to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADACTIONTREE */ void sub_2022(unknown uParam0, int iParam1)
{
    ACTION_TREE_LOAD( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_ACTION_TREE_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an Action Tree to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADVEHICLERECORDING */ void sub_2251(unknown uParam0, int iParam1)
{
    REQUEST_VEHICLE_RECORDING( uParam0 );
    if (iParam1 == 1)
    {
        while ((HAS_VEHICLE_RECORDING_BEEN_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a recording to be loaded: Rec# {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_2431()
{
    unknown uVar2;
    unknown uVar3;

     /* WRITE_STRING */ sub_779( "[SP]### P_INITIALIZE_SCRIPT_DATA ###" );
     /* P_CLOSEDOOR */ sub_2517( ref g_U1417, 1 );
     /* P_CLOSEDOOR */ sub_2517( ref g_U1424, 1 );
     /* P_OPENDOOR */ sub_2790( ref g_U1403, 0, 1, 1065353216 );
     /* P_OPENDOOR */ sub_2790( ref g_U1410, 1, 1, 1065353216 );
    l_U376 = 0;
    l_U377 = 0;
    l_U378 = 0;
    l_U373 = 0;
    l_U374 = 0;
    l_U375 = 0;
    l_U281 = 0;
    l_U283 = 1;
    l_U284 = 0;
    l_U285 = 0;
     /* CREATETIMER */ sub_3036( ref g_U1960, g_U1969, 1, 0 );
    return;
}

/* P_CLOSEDOOR */ void sub_2517(int iParam0, int iParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_2543( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_2627( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_2543(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_2627(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_OPENDOOR */ void sub_2790(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if (( /* F_DOESDOOREXIST */ sub_2543( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_2627( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

/* CREATETIMER */ void sub_3036(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* P_SET_STATIC_GAMEPLAY_DATA */ void sub_3190()
{
     /* WRITE_STRING */ sub_779( "[SP]### P_SET_STATIC_GAMEPLAY_DATA ###" );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3300( ref l_U310, g_U1956, g_U1959, -771391030, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3300( ref l_U324, g_U779[2]._fU0, g_U779[2]._fU12, 1265654828, 26, 6, 0, 0, 0 );
     /* P_CREATETRIGGERBOX */ sub_3554( ref l_U289, "TRIGGER_BRIDGE_ENTRANCE", -110.47000000, -3.73000000, -2.47000000, 9.19000000, 3.30000000, 3.61000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_3300(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATETRIGGERBOX */ void sub_3554(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_LOAD_AUDIO_ASSETS */ void sub_3664()
{
     /* MLOG */ sub_3720( "P_LOAD_AUDIO_ASSETS", 0, 0 );
    STOP_SCRIPT_STREAM( 0 );
     /* LOADSCRIPTSTREAM */ sub_3945( "S_CEMET_BRIDGE_VAN_A", 0, 1 );
    STOP_SCRIPT_STREAM( 1 );
     /* LOADSCRIPTSTREAM */ sub_3945( "S_CEMET_BRIDGE_VAN_FAIL", 1, 1 );
    STOP_SCRIPT_STREAM( 2 );
     /* LOADSCRIPTSTREAM */ sub_3945( "S_CEMET_BRIDGE_VAN_PASS", 2, 1 );
    return;
}

/* MLOG */ void sub_3720(unknown uParam0, string sParam1, string sParam2)
{
    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "ML";
    }
    if (IS_STRING_NULL( sParam1 ))
    {
        sParam1 = "---";
    }
     /* WRITESCRIPTLOG */ sub_3786( sParam2, uParam0, sParam1 );
    return;
}

/* WRITESCRIPTLOG */ void sub_3786(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* LOADSCRIPTSTREAM */ void sub_3945(unknown uParam0, unknown uParam1, int iParam2)
{
    if (iParam2 == 0)
    {
        REQUEST_SCRIPT_STREAM( uParam0, uParam1 );
    }
    else
    {
        while ((LOAD_SCRIPT_STREAM( uParam0, uParam1 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for script stream to be loaded: {} : {} ###", 2, 1537, uParam0, 513, uParam1 );
            WAIT( 0 );
        }
    }
    return;
}

/* INITIALIZE_PLAYER_BY_DEBUG_MENU_CHECKPOINT */ void sub_4209()
{
    if (g_U825 == 2)
    {
        if (NOT ( /* HAS_SAVEFILE_LOADED */ sub_4280( ref l_U337 )))
        {
             /* F_GIVEPEDWEAPON */ sub_6975(  /* PLAYER_PED_ID */ sub_4431(),  /* GET_STARTING_WEAPON */ sub_9033( 2 ), 100, 0, 1 );
        }
        g_U826 = 2;
         /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_9151( ref l_U337, g_U826,  /* PLAYER_PED_ID */ sub_4431(), g_U971[2]._fU0, g_U971[2]._fU12, g_U971[2]._fU16, g_U971[2]._fU20, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U971[2]._fU16, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U971[2]._fU20, 1065353216, 0 );
        if (GET_ADRENALINE_AMT() < 0.10000000)
        {
            SET_ADRENALINE_AMT( 0.10000000 );
        }
        g_U1784 = 1;
        g_U1785 = 1;
    }
    return;
}

/* HAS_SAVEFILE_LOADED */ int sub_4280(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_3786( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U37 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U38 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_4525( uParam0,  /* PLAYER_PED_ID */ sub_4431() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* PLAYER_PED_ID */ int sub_4431()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_4469() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_4469()
{
    return GET_PLAYER_ID();
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_4525(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_3786( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U37)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_4746( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_5910( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_6224( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6659( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_6224( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6659( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_6224( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6659( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_6975( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6659( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_6975( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6659( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U37 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_7549( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_7751( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_4431(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U37)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U37 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_3786( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_4746(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_4808( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_4808(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_5910(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_6224(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_779( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_6659(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_6975(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_779( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_7549(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_7751(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_4808( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_7849( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_7849(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* GET_STARTING_WEAPON */ int sub_9033(unknown uParam0)
{
    return -862236369;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_9151(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_3786( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_3786( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_7751( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_9442( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_9919( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_9919( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_10179( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_9919( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_10179( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_10179( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_9919( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_10179( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_10179( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_10179( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_9919( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_10179( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_10179( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_10179( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_10179( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_11759( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U38, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_3786( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_9442(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_4808( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_3786( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_3786( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_9919(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_10179(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_11759(int iParam0)
{
     /* WRITE_STRING */ sub_779( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_11847( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_11924( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_11924( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_11924( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_12093( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_12093( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_12093( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_12093( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_12093( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_12093( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_12093( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_12093( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_12093( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_12093( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_12093( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_11924( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_12093( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_12093( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_12093( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_11924( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_12794( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_12093( iParam0->_fU52 );
     /* WRITE_STRING */ sub_779( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_12093( iParam0->_fU96 );
     /* WRITE_STRING */ sub_779( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_12093( iParam0->_fU100 );
     /* WRITE_STRING */ sub_779( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_12093( iParam0->_fU104 );
     /* WRITE_STRING */ sub_779( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_12093( iParam0->_fU108 );
     /* WRITE_STRING */ sub_779( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_12093( iParam0->_fU112 );
     /* WRITE_STRING */ sub_779( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_12093( iParam0->_fU116 );
     /* WRITE_STRING */ sub_779( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_12093( iParam0->_fU120 );
     /* WRITE_STRING */ sub_779( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_12093( iParam0->_fU124 );
     /* WRITE_STRING */ sub_779( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_12093( iParam0->_fU128 );
     /* WRITE_STRING */ sub_779( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_12093( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_12093( l_U38 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_12093( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_11847(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_11924(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_12093(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_12794(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* P_HANDLE_MUSIC */ void sub_13868()
{
    switch (l_U278)
    {
        case 1:
        AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_3", "", 0, -1, -1, -1082130432, 0 );
        l_U278 = 3;
        break;
        case 2:
        AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_3", "", 0, -1, -1, -1082130432, 0 );
        l_U278 = 3;
        break;
        case 3:
        if (l_U279 == 3)
        {
             /* WRITESCRIPTLOG */ sub_3786( "TEH", "playing music: MC_VAN_CRASH CEMETERY_SONG_03_2_3", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_2_3", "", 0, 8000, -1, -1082130432, 0 );
            l_U278 = 4;
        }
        break;
    }
    return;
}

/* P_HANDLE_CHECKPOINTS */ void sub_14231()
{
    if (g_U826 == 2)
    {
        if (l_U282 == 0)
        {
            if (NOT ( /* IS_PED_VALID */ sub_14293(  /* PLAYER_PED_ID */ sub_4431() )))
            {
                 /* WRITESCRIPTLOG */ sub_3786( "RJM", "HANDLE_CHECKPOINTS - Player's died on Rooftops, setting eFailure = STATE_FAIL_WAITING", 0 );
                l_U282 = 2;
            }
            else if ( /* RESTARTING_CHECKPOINT */ sub_14473())
            {
                 /* WRITESCRIPTLOG */ sub_3786( "SBA", "HANDLE_CHECKPOINTS - Restart", 0 );
                l_U282 = 2;
            }
            else if (l_U375)
            {
                if ((l_U373) || (NOT ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND ( /* IS_PASSOS_VALID */ sub_14995()))))
                {
                     /* WRITESCRIPTLOG */ sub_3786( "SBA", "P_HANDLE_CHECKPOINTS: Passos killed, setting eFailure = STATE_FAIL_DEATH_CAM_PASSOS", "***" );
                    SET_PED_GORE( g_U824, 1 );
                    SET_PED_GORE_FROM_PLAYER( g_U824, 1 );
                    SET_PED_GORE_FROM_NPC( g_U824, 0 );
                    l_U282 = 1;
                }
            };;;
        }
         /* P_HANDLE_FAILURE */ sub_15236();
    }
    return;
}

/* IS_PED_VALID */ int sub_14293(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (DOES_PED_EXIST( uParam0 )))
    {
        return 1;
    }
    return 0;
}

/* RESTARTING_CHECKPOINT */ int sub_14473()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U37 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4431() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_4431(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_4469(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_4469(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_4431() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_4431(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* IS_PASSOS_VALID */ int sub_14995()
{
    if ((NOT (IS_PED_DEAD( g_U824 ))) AND (DOES_PED_EXIST( g_U824 )))
    {
        return 1;
    }
    return 0;
}

/* P_HANDLE_FAILURE */ void sub_15236()
{
    switch (l_U282)
    {
        case 0: break;
        case 1:
        if ( /* IS_MAX_VALID */ sub_15338())
        {
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_4431(), 1 );
        }
        if (l_U283 == 1)
        {
            SET_PED_COLLISION( g_U824, 1 );
            l_U282 = 2;
             /* WRITESCRIPTLOG */ sub_3786( "SBA", "Disabling ALLOW_BULLET_CAMERA_TO_GAMEPLAY...", 0 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
             /* WRITESCRIPTLOG */ sub_3786( "CCB", "ePassosDeathState = PE_MOVING; eFailure - STATE_FAIL_WAITING", 0 );
        }
        else if (l_U283 == 0)
        {
            if ( /* VAN_FAILURE_MIDSCENE */ sub_15600())
            {
                l_U282 = 2;
                 /* WRITESCRIPTLOG */ sub_3786( "CCB", "eFailure - STATE_FAIL_WAITING", 0 );
            }
        }
        break;
        case 2:
        if ( /* IS_RESTART_ACTIVE */ sub_19608())
        {
            l_U282 = 3;
        }
        else if (( /* F_CHECK_QUIT_RETRY */ sub_19668( 0 )) == 1)
        {
            l_U282 = 3;
        }
        break;
        case 3:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4431() )))
        {
             /* WRITESCRIPTLOG */ sub_3786( "CCB", "Deactivating bullettime...", 0 );
            DEACTIVATE_BULLET_TIME( 1, 0 );
            l_U282 = 4;
             /* WRITESCRIPTLOG */ sub_3786( "CCB", "eFailure - STATE_FAIL_CLEANUP", 0 );
        }
        break;
        case 4:
        if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_4469() )))
        {
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4431() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_4469(), 0, 0 );
            }
        }
         /* NIS_POST_SETUP */ sub_20866( 1, 1 );
        END_POSTFX_BLENDER( 3, 1 );
         /* P_IMAGEFX_STOP_BULLETCAM */ sub_21206( "CEM_MPM_SCRIPTED_FAIL_FX" );
        DESTROY_ALL_CAMS();
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        AUDIO_MUSIC_SUSPEND( 500 );
        ISEQ_UNREGISTER_ENTITY( 1394393399, "cem_vig01_max" );
        ISEQ_UNREGISTER_ENTITY( 1394393399, "cem_vig01_pas" );
         /* TERMINATEISEQ */ sub_21427( 1394393399, 1 );
         /* CLEANPED */ sub_21733( g_U824 );
         /* P_CLEANUP_ALL */ sub_21818();
        l_U282 = 5;
         /* WRITESCRIPTLOG */ sub_3786( "CCB", "eFailure - STATE_FAIL_RESTORE", 0 );
        break;
        case 5:
        if (NOT IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED())
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        }
         /* P_SETUP_PLAYER_RELATIONSHIPS */ sub_21962();
        l_U282 = 6;
         /* WRITESCRIPTLOG */ sub_3786( "CCB", "eFailure - STATE_FAIL_RESTART", 0 );
        break;
        case 6:
        if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
        {
             /* WRITESCRIPTLOG */ sub_3786( "CCB", "eFailure - STATE_FAIL_IDLE", 0 );
            if (g_U826 == 2)
            {
                 /* WRITESCRIPTLOG */ sub_3786( "RJM", "says we're in MCE_VANBRIDGEMPM", 0 );
                 /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_4525( ref l_U337,  /* PLAYER_PED_ID */ sub_4431() );
                 /* P_INITIALIZE_SCRIPT_DATA */ sub_2431();
                 /* P_SET_STATIC_GAMEPLAY_DATA */ sub_3190();
                 /* P_LOAD_AUDIO_ASSETS */ sub_3664();
                 /* LOADISEQ */ sub_1515( 1394393399, 1 );
                 /* LOADANIMDICT */ sub_1829( "FACE_PASNYB", 0, 1 );
                 /* LOADACTIONTREE */ sub_2022( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act", 1 );
                l_U375 = 0;
            }
            if ( /* IS_MAX_VALID */ sub_15338())
            {
                SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_4431(), 0 );
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_4469(), 1, 0 );
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_4431(), 1 );
            }
            l_U282 = 0;
            l_U278 = 2;
            l_U373 = 0;
             /* WRITESCRIPTLOG */ sub_3786( "CCB", "eCheckpoint - STATE_CHECKPOINT_INIT", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_3786( "CCB", "Waiting for stream requests...", 0 );
        }
        break;
    }
    return;
}

/* IS_MAX_VALID */ int sub_15338()
{
    if ( /* IS_PED_VALID */ sub_14293(  /* PLAYER_PED_ID */ sub_4431() ))
    {
        return 1;
    }
    return 0;
}

/* VAN_FAILURE_MIDSCENE */ int sub_15600()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;

    switch (l_U284)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_3786( "RJM", "", 0 );
         /* NIS_PRE_SETUP */ sub_15712( 1, 0, 0, 0 );
         /* NIS_CREATE_STATIC_CAM */ sub_15913( ref l_U390, l_U421, l_U424, l_U427, l_U428 );
         /* NIS_CREATE_STATIC_CAM */ sub_15913( ref l_U438, l_U469, l_U472, l_U475, l_U476 );
         /* NIS_CREATE_INTERP_CAM */ sub_16214( ref l_U486, ref l_U438._fU0, l_U517, l_U520, l_U523, l_U524, l_U524, 0, 0 );
         /* P_CREATE_AND_START_TIMER */ sub_16927( ref l_U429, l_U428 );
         /* P_CREATE_AND_START_TIMER */ sub_16927( ref l_U477, l_U476 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
         /* P_CLOSEDOOR */ sub_2517( ref g_U1417, 1 );
         /* P_CLOSEDOOR */ sub_2517( ref g_U1424, 1 );
        ENABLE_CROSSHAIR( 0 );
        if (NOT (IS_VEHICLE_DEAD( g_U1955 )))
        {
            STOP_PLAYBACK_RECORDED_VEHICLE( g_U1955 );
            START_PLAYBACK_RECORDED_VEHICLE( g_U1955, 117 );
            SET_VEHICLE_CAN_BE_DAMAGED( g_U1955, 0 );
            SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE( g_U1955, g_U1972 );
            SET_PLAYBACK_SPEED( g_U1955, l_U534 );
        }
         /* WRITESCRIPTLOG */ sub_3786( "RJM", "VAN_FAILURE_MIDSCENE - going to FAILURE_FIRST_FRAME", 0 );
        l_U284 = 1;
        break;
        case 1:
        if ( /* IS_PASSOS_VALID */ sub_14995())
        {
            PED_SET_ACTION_INTENTION( g_U824, 47, 1000, 0, 0, 0 );
            uVar2 = {(vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U824 ))) + l_U286};
             /* TELEPORTPED */ sub_17402( g_U824, uVar2, 180 );
        }
        if ( /* IS_MAX_VALID */ sub_15338())
        {
            SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_4431(), 0 );
        }
         /* NIS_PLAY_STATIC_CAMERA */ sub_17500( ref l_U390 );
        PLAY_SCRIPT_STREAM_FRONTEND( 1 );
         /* WRITESCRIPTLOG */ sub_3786( "RJM", "VAN_FAILURE_MIDSCENE - going to FAILURE_SHOT1", 0 );
        l_U284 = 2;
        break;
        case 2:
        if ( /* NIS_IS_SHOT_FINISHED */ sub_17693( ref l_U390, 1 ))
        {
             /* NIS_PLAY_INTERP_WITH_STATIC_CAMS */ sub_18039( ref l_U486, ref l_U438, l_U524, 1, 1 );
             /* P_CREATE_AND_START_TIMER */ sub_16927( ref l_U525, 60 );
             /* P_CREATE_AND_START_TIMER */ sub_16927( ref l_U536, 241 );
             /* P_CREATE_AND_START_TIMER */ sub_16927( ref l_U546, 140 );
            if (DOES_OBJECT_EXIST( l_U388 ))
            {
                 /* WRITESCRIPTLOG */ sub_3786( "RJM", "Left door exists, should animate", 0 );
                PLAY_OBJECT_ANIM( l_U388, "P_DR_CVRGATE_ANIM_L", ref g_U1196, 0.00000000, 0, 1 );
                SET_OBJECT_ANIM_CURRENT_TIME( l_U388, "P_DR_CVRGATE_ANIM_L", ref g_U1196, 0.00000000 );
                SET_OBJECT_ANIM_SPEED( l_U388, "P_DR_CVRGATE_ANIM_L", ref g_U1196, 0.50000000 );
            }
            if (DOES_OBJECT_EXIST( l_U389 ))
            {
                 /* WRITESCRIPTLOG */ sub_3786( "RJM", "Right door exists, should animate", 0 );
                PLAY_OBJECT_ANIM( l_U389, "P_DR_CVRGATE_ANIM_R", ref g_U1196, 0.00000000, 0, 1 );
                SET_OBJECT_ANIM_CURRENT_TIME( l_U389, "P_DR_CVRGATE_ANIM_R", ref g_U1196, 0.00000000 );
                SET_OBJECT_ANIM_SPEED( l_U389, "P_DR_CVRGATE_ANIM_R", ref g_U1196, 0.50000000 );
            }
            START_PARTICLE_FX_NON_LOOPED_AT_COORD( "NYCem_Gate_burst_S", 65426, -2.23000000, -1, 0, 0, 0, 1065353216 );
            START_POSTFX_BLENDER( 3 );
            SHAKE_CAM( GET_RENDERING_CAM(), "WOBBLY_SHAKE", 0.05000000 );
             /* WRITESCRIPTLOG */ sub_3786( "RJM", "VAN_FAILURE_MIDSCENE - going to FAILURE_SHOT2", 0 );
            l_U284 = 3;
        }
        break;
        case 3:
        if ((l_U378) AND ((l_U377) AND ((l_U376) AND ( /* NIS_IS_SHOT_FINISHED */ sub_17693( ref l_U438, 1 )))))
        {
             /* P_CREATE_AND_START_TIMER */ sub_16927( ref l_U555, 625 );
             /* WRITESCRIPTLOG */ sub_3786( "RJM", "VAN_FAILURE_MIDSCENE - going to FAILURE_WAIT_FOR_OTHER_STUFF", 0 );
            l_U284 = 4;
        }
        if ( /* ISTIMERDONE */ sub_17754( ref l_U525 ))
        {
            ACTIVATE_BULLET_TIME( 0, l_U535, 1 );
            l_U376 = 1;
        }
        if ( /* ISTIMERDONE */ sub_17754( ref l_U546 ))
        {
            DEACTIVATE_BULLET_TIME( 0, 0 );
             /* P_IMAGEFX_START_BULLETCAM */ sub_18973( "CEM_MPM_SCRIPTED_FAIL_FX", 0 );
            l_U377 = 1;
        }
        if (NOT (IS_CAM_SHAKING( GET_RENDERING_CAM() )))
        {
            if ( /* ISTIMERDONE */ sub_17754( ref l_U536 ))
            {
                l_U378 = 1;
                SHAKE_CAM( GET_RENDERING_CAM(), "WOBBLY_SHAKE", l_U545 );
            }
        }
        break;
        case 4:
        if ( /* ISTIMERDONE */ sub_17754( ref l_U555 ))
        {
             /* WRITESCRIPTLOG */ sub_3786( "RJM", "VAN_FAILURE_MIDSCENE - going to FAILURE_DONE", 0 );
            l_U284 = 5;
        }
        break;
        case 5:
        return 1;
        break;
    }
    return 0;
}

/* NIS_PRE_SETUP */ void sub_15712(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4431() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_4469(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_4431(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_4431() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_4431(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* NIS_CREATE_STATIC_CAM */ void sub_15913(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_3036( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U763, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* NIS_CREATE_INTERP_CAM */ void sub_16214(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12)
{
    iParam0->_fU4 = {uParam5};
    iParam0->_fU16 = {uParam2};
    iParam0->_fU28 = uParam8;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam10;
    iParam0->_fU88 = uParam9;
    iParam0->_fU92 = 1;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU96 = 0;
    if (NOT ((uParam1^) == nil))
    {
        iParam0->_fU120 = (uParam1^);
    }
    else
    {
        SCRIPT_ASSERT( "Can Not Create Interpolated Camera - Source cam is not initialized.  Use NIS_CreateStaticCam to fix.", 0 );
    }
     /* CREATETIMER */ sub_3036( iParam0 + 48, uParam10, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U763, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    iParam0->_fU100 = uParam11;
    iParam0->_fU104 = uParam12;
    if (iParam0->_fU108 == 1)
    {
        if (iParam0->_fU112 == 1)
        {
            iParam0->_fU104 = 2;
        }
        else if (iParam0->_fU112 == 2)
        {
            iParam0->_fU104 = 4;
        }
        else if (iParam0->_fU112 == 3)
        {
            iParam0->_fU104 = 3;
        }
        else if (iParam0->_fU112 == 4)
        {
            iParam0->_fU104 = 0;
        }
        else if (iParam0->_fU112 == 5)
        {
            iParam0->_fU104 = 5;
        }
        else if (iParam0->_fU112 == 6)
        {
            iParam0->_fU104 = 1;
        };;;;;;
        if (iParam0->_fU116 == 1)
        {
            iParam0->_fU100 = 2;
        }
        else if (iParam0->_fU116 == 2)
        {
            iParam0->_fU100 = 4;
        }
        else if (iParam0->_fU116 == 3)
        {
            iParam0->_fU100 = 3;
        }
        else if (iParam0->_fU116 == 4)
        {
            iParam0->_fU100 = 0;
        }
        else if (iParam0->_fU116 == 5)
        {
            iParam0->_fU100 = 5;
        }
        else if (iParam0->_fU116 == 6)
        {
            iParam0->_fU100 = 1;
        };;;;;;
    }
    return;
}

/* P_CREATE_AND_START_TIMER */ void sub_16927(unknown uParam0, unknown uParam1)
{
     /* CREATETIMER */ sub_3036( uParam0, uParam1, 1, 0 );
     /* STARTTIMER */ sub_16977( uParam0 );
    return;
}

/* STARTTIMER */ void sub_16977(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* TELEPORTPED */ void sub_17402(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* NIS_PLAY_STATIC_CAMERA */ void sub_17500(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_16977( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

/* NIS_IS_SHOT_FINISHED */ int sub_17693(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || ( /* ISTIMERDONE */ sub_17754( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || ( /* ISTIMERDONE */ sub_17754( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

/* ISTIMERDONE */ int sub_17754(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* NIS_PLAY_INTERP_WITH_STATIC_CAMS */ void sub_18039(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE_WITH_INTERP( iParam1->_fU0, iParam0->_fU0, uParam2, uParam3, uParam4 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_16977( iParam1 + 48 );
    iParam1->_fU32 = 1;
    iParam1->_fU40 = 1;
    return;
}

/* P_IMAGEFX_START_BULLETCAM */ void sub_18973(unknown uParam0, boolean bParam1)
{
    PRINTSTRING( "[CO] P_IMAGEFX_START_BULLETCAM: Starting BulletCam: " );
    PRINTSTRING( uParam0 );
    PRINTNL();
     /* CLEANCAMERA */ sub_19093( ref l_U277 );
    l_U277 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
    SETUP_BULLET_CAMERA_SCENE( l_U277, uParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
    if (bParam1)
    {
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    }
    return;
}

/* CLEANCAMERA */ void sub_19093(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

/* IS_RESTART_ACTIVE */ void sub_19608()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_19668(int iParam0)
{
    iParam0 = 1;
    switch (l_U246)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_19750( ref l_U248 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4431() )))
            {
                l_U247 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_3036( ref l_U248, l_U247, 1, 1 );
             /* STARTTIMER */ sub_16977( ref l_U248 );
        }
        if ( /* ISTIMERDONE */ sub_17754( ref l_U248 ))
        {
             /* WRITESCRIPTLOG */ sub_3786( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4431() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_4469() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_4469(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U246 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U246 = 2;
            }
            else
            {
                l_U246 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_3786( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_20233();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_3786( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_20233();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_19750(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_20233()
{
     /* WRITESCRIPTLOG */ sub_3786( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_20308( ref l_U248 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_4469() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_4469(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U245 = 0;
    l_U245 = l_U245;
    l_U246 = 0;
    return;
}

/* RESETTIMER */ void sub_20308(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* NIS_POST_SETUP */ void sub_20866(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4431() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_4469(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_4431(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_20964();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_20964()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4431() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_4431(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_4431(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_4431(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_4431(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* P_IMAGEFX_STOP_BULLETCAM */ void sub_21206(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_3786( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
     /* CLEANCAMERA */ sub_19093( ref l_U277 );
    l_U276 = 1;
    return;
}

/* TERMINATEISEQ */ void sub_21427(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            DISPLAYF( "[SP]### Waiting for interactive sequence to terminate: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* CLEANPED */ void sub_21733(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* P_CLEANUP_ALL */ void sub_21818()
{
     /* WRITE_STRING */ sub_779( "[SP]### P_CLEANUP_ALL ###" );
    return;
}

/* P_SETUP_PLAYER_RELATIONSHIPS */ void sub_21962()
{
     /* WRITESCRIPTLOG */ sub_3786( "SP", "P_SETUP_PLAYER_RELATIONSHIPS", "###" );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4431() )) == 0)
    {
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_4431(), 0, 1 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_4431(), 0, 2 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_4431(), 0, 6 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_4431(), 0, 7 );
    }
    return;
}

/* HANDLE_EVENTS */ void sub_22604()
{
    if (l_U282 == 0)
    {
        switch (l_U281)
        {
            case 0:
            if (g_U1784)
            {
                SET_CAMERA_OVERRIDE( "VAN_MPM_AIM_CAMERA", "VAN_MPM_AIM_CAMERA", 0, 1, 1 );
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U971[2]._fU16, 1065353216, 0 );
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U971[2]._fU20, 1065353216, 0 );
                 /* SETUP_MAX */ sub_22826();
                SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
                 /* SETUP_PASSOS */ sub_23107();
                 /* CREATE_BRIDGE_RAYFIRE_INTACT */ sub_24412();
                 /* SETUP_VAN */ sub_25108();
                SET_CAM_SIDE_LEFT( 1 );
                DISPLAY_HUD( 0 );
                ENABLE_CROSSHAIR( 1 );
                ENABLE_MPM( 1 );
                ENABLE_ALL_ADRENALINE( 0 );
                SET_PED_MODEL_LOD_DISTANCES( 301969226, 50.00000000, 100.00000000 );
                if ((ISEQ_QUERY_STATE( 1394393399, 3 )) == 0)
                {
                     /* WRITESCRIPTLOG */ sub_3786( "RJM", "Registering peds with S_CEM_VIG_01 from respawn/checkpoint", 0 );
                    ISEQ_REGISTER_ENTITY( 1394393399, "cem_vig01_max",  /* PLAYER_PED_ID */ sub_4431(), 0 );
                    ISEQ_REGISTER_ENTITY( 1394393399, "cem_vig01_pas", g_U824, 0 );
                }
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
                 /* WRITESCRIPTLOG */ sub_3786( "RJM", "HANDLE_EVENTS - transitioning to VMS_WAIT_FOR_FADE_IN", 0 );
                l_U281 = 1;
            }
            break;
            case 1:
            if (g_U1785)
            {
                if ( /* IS_PASSOS_VALID */ sub_14995())
                {
                     /* TELEPORTPED */ sub_17402( g_U824, g_U779[2]._fU0, g_U779[2]._fU12 );
                    SET_PED_DEFAULT_AIM_AT_PED( g_U824, l_U323 );
                }
                if ( /* IS_MAX_VALID */ sub_15338())
                {
                     /* TELEPORTPED */ sub_17402(  /* PLAYER_PED_ID */ sub_4431(), g_U971[2]._fU0, g_U971[2]._fU12 );
                    SET_PED_DEFAULT_AIM_AT_PED(  /* PLAYER_PED_ID */ sub_4431(), l_U323 );
                    SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_4469(), 0, 0 );
                }
                if (NOT ( /* F_IMAGEFX_FADE_IN */ sub_26774()))
                {
                    if ((IS_SCREEN_FADING_OUT()) || (IS_SCREEN_FADED_OUT()))
                    {
                        DO_SCREEN_FADE_IN( 500 );
                    }
                }
                 /* SETUP_DOORS */ sub_27045();
                 /* ACTIVATE_VAN_MPM */ sub_27740();
                ISEQ_START( 1394393399 );
                l_U281 = 3;
            }
            break;
            case 3:
             /* HIDE_REALDOORS */ sub_27069();
            SET_CAM_SIDE_LEFT( 1 );
            if (IS_SCREEN_FADED_IN())
            {
                if (g_U826 != 2)
                {
                    g_U826 = 2;
                     /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_9151( ref l_U337, g_U826,  /* PLAYER_PED_ID */ sub_4431(), g_U971[2]._fU0, g_U971[2]._fU12, g_U971[2]._fU16, g_U971[2]._fU20, 1 );
                }
                 /* WRITESCRIPTLOG */ sub_3786( "RJM", "HANDLE_EVENTS - transitioning to VMS_WAIT_FOR_CAMERA", 0 );
                l_U281 = 4;
            }
            break;
            case 4:
             /* HIDE_REALDOORS */ sub_27069();
            SET_CAM_SIDE_LEFT( 1 );
             /* WRITESCRIPTLOG */ sub_3786( "RJM", "HANDLE_EVENTS - transitioning to VMS_FIGHT_VAN", 0 );
            START_CONTEXT( "CEMETERY_MPM" );
            g_U1234 = 1;
            l_U281 = 5;
            break;
            case 5:
            if (IS_BULLET_CAMERA_RUNNING( 0 ))
            {
                 /* P_CREATE_AND_START_TIMER */ sub_16927( ref l_U379, 250 );
                 /* LOADMODEL */ sub_1088( g_U1336, 0 );
                 /* LOADMODEL */ sub_1088( g_U1337, 0 );
                 /* WRITESCRIPTLOG */ sub_3786( "RJM", "HANDLE_EVENTS - transitioning to VMS_WAIT_TO_START_SUCCESS_SCENE", 0 );
                l_U375 = 0;
                l_U281 = 6;
                break;
            }
            if (NOT l_U374)
            {
                if ( /* IS_MAX_VALID */ sub_15338())
                {
                    if (PED_ANIM_EVENT(  /* PLAYER_PED_ID */ sub_4431(), 1477325977 ))
                    {
                         /* WRITESCRIPTLOG */ sub_3786( "RJM", "ACTIVATING BULLET TIME NOW!", 0 );
                        SET_CROSSHAIR_PULSE();
                        ACTIVATE_BULLET_TIME( 0, 1065353216, 1 );
                        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_4469(), 1, 0 );
                        l_U374 = 1;
                    }
                }
            }
            if ( /* F_ISPEDINTRIGGERBOX */ sub_28478( l_U323, l_U289 ))
            {
                l_U373 = 1;
                l_U283 = 0;
                 /* WRITESCRIPTLOG */ sub_3786( "RJM", "HANDLE_EVENTS - transitioning to VMS_FAIL", 0 );
            }
            break;
            case 6:
            if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
            {
                 /* P_KILL_PED */ sub_28647( l_U323 );
                 /* WRITESCRIPTLOG */ sub_3786( "RJM", "HANDLE_EVENTS - TIMER EXPIRED - transitioning to VMS_SUCCESS", 0 );
                l_U281 = 7;
            }
            if (IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U323, ref l_U289._fU0 ))
            {
                 /* P_KILL_PED */ sub_28647( l_U323 );
                 /* WRITESCRIPTLOG */ sub_3786( "RJM", "HANDLE_EVENTS - DEAD DUDE IN TRIGGER - transitioning to VMS_SUCCESS", 0 );
                l_U281 = 7;
            }
            break;
            case 7:
            if ( /* VAN_SUCCESS_MIDSCENE */ sub_28932())
            {
                CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 0 );
                RESET_PED_MODEL_LOD_DISTANCES( 301969226 );
                if ( /* IS_MAX_VALID */ sub_15338())
                {
                    SET_PED_CONSUMING_AMMO(  /* PLAYER_PED_ID */ sub_4431(), 1 );
                }
                ENABLE_MPM( 0 );
                ENABLE_ALL_ADRENALINE( 1 );
                END_CONTEXT( "CEMETERY_MPM" );
                g_U1235 = 1;
                 /* WRITESCRIPTLOG */ sub_3786( "RJM", "HANDLE_EVENTS - transitioning to VMS_DONE", 0 );
                l_U281 = 9;
            }
            break;
            case 9:
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            break;
        }
    }
    return;
}

/* SETUP_MAX */ void sub_22826()
{
    int iVar2;
    int iVar3;
    unknown uVar4;

     /* WRITESCRIPTLOG */ sub_3786( "RJM", "In SETUP_MAX", 0 );
    if ( /* IS_MAX_VALID */ sub_15338())
    {
        if (GET_ADRENALINE_AMT() < 0.10000000)
        {
            SET_ADRENALINE_AMT( 0.10000000 );
        }
        uVar4 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_4431(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar4 ))
        {
            GET_AMMO_IN_CLIP(  /* PLAYER_PED_ID */ sub_4431(), GET_WEAPON_TYPE( uVar4 ), ref iVar2 );
            iVar3 = (GET_WEAPON_AMMO( uVar4 )) + iVar2;
            DISPLAYF( "SETUP_MAX - Total Ammo = {}", 1, 513, iVar3 );
            if (iVar3 == 0)
            {
                ADD_AMMO_TO_PED(  /* PLAYER_PED_ID */ sub_4431(), GET_WEAPON_TYPE( uVar4 ), GET_MAX_AMMO_IN_CLIP(  /* PLAYER_PED_ID */ sub_4431(), GET_WEAPON_TYPE( uVar4 ) ), 0 );
            }
        }
        SET_PED_CONSUMING_AMMO(  /* PLAYER_PED_ID */ sub_4431(), 0 );
    }
    return;
}

/* SETUP_PASSOS */ void sub_23107()
{
    if (NOT ( /* IS_PED_VALID */ sub_14293( g_U824 )))
    {
         /* WRITESCRIPTLOG */ sub_3786( "RJM", "In SETUP_PASSOS", 0 );
         /* CLEANPED */ sub_21733( g_U824 );
        g_U824 =  /* CREATEPED */ sub_23192( ref l_U324 );
        if ( /* IS_PED_VALID */ sub_14293( g_U824 ))
        {
             /* F_GIVEPEDWEAPON */ sub_6975( g_U824, -862236369, 25000, 0, 0 );
             /* P_SETUP_PASSOS_GENERAL_ATTRIBUTES */ sub_23945( ref g_U824 );
             /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_24312( ref g_U824, 1 );
        }
    }
    l_U375 = 1;
    return;
}

/* CREATEPED */ void sub_23192(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_1088( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_23683( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_23784( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_23683(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_23784(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* P_SETUP_PASSOS_GENERAL_ATTRIBUTES */ void sub_23945(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_3786( "SBA", "P_SETUP_PASSOS_GENERAL_ATTRIBUTES", "***" );
    if ( /* IS_PED_VALID */ sub_14293( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^), 1 );
        SET_PED_VALIDATE_BULLET_CAM_HIT( (uParam0^), 0 );
        SET_AI_SHOULD_ALWAYS_MISS_PED( (uParam0^), 1 );
        SET_CAN_AI_KICK_THROUGH_CORPSES( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_AI_TEMPLATE( (uParam0^), "AIT_NORMAL" );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( (uParam0^), 1 );
        SET_PED_AS_ONE_SHOT_KILL( (uParam0^), 1 );
        SET_PED_GORE( (uParam0^), 0 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), 0 );
        SET_PED_PROOFS( (uParam0^), 0, 1, 1, 1, 1 );
        SET_PED_ALLOWED_TO_SURRENDER( (uParam0^), 0 );
        SET_PED_CAN_AVOID_DEATH_ZONES( (uParam0^), 0 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( (uParam0^), 1 );
        SET_PED_CAN_PUSH_PLAYER( (uParam0^), 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_CAN_BE_TARGETTED( (uParam0^), 0 );
        SET_PED_CONSUMING_AMMO( (uParam0^), 0 );
        SET_PED_PATH_CAN_USE_CLIMBOVERS( (uParam0^), 1 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( (uParam0^), 1 );
    }
    return;
}

/* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ void sub_24312(unknown uParam0, unknown uParam1)
{
    if ( /* IS_PED_VALID */ sub_14293( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), uParam1 );
    }
    return;
}

/* CREATE_BRIDGE_RAYFIRE_INTACT */ void sub_24412()
{
     /* WRITE_STRING */ sub_779( "[GA] CREATE_BRIDGE_RAYFIRE_INTACT start" );
     /* CLEANOBJECT */ sub_24505( g_U1796 );
     /* CLEANOBJECT */ sub_24505( g_U1786 );
     /* CLEANOBJECT */ sub_24505( g_U1787 );
     /* CLEANOBJECT */ sub_24505( g_U1788 );
     /* CLEANOBJECT */ sub_24505( g_U1789 );
     /* CLEANOBJECT */ sub_24505( g_U1790 );
     /* CLEANOBJECT */ sub_24505( g_U1791 );
     /* CLEANOBJECT */ sub_24505( g_U1792 );
     /* CLEANOBJECT */ sub_24505( g_U1793 );
     /* CLEANOBJECT */ sub_24505( g_U1794 );
     /* CLEANOBJECT */ sub_24505( g_U1795 );
     /* CLEANOBJECT */ sub_24505( g_U1797 );
     /* CLEANOBJECT */ sub_24505( g_U1798 );
     /* CLEANOBJECT */ sub_24505( g_U1799 );
    g_U1796 =  /* CREATEOBJECTNOOFFSET */ sub_24709( g_U1362, g_U1933, 0, 0, 0, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U1796 ))
    {
        FREEZE_OBJECT_POSITION( g_U1796, 1 );
    }
     /* WRITE_STRING */ sub_779( "[GA] CREATE_BRIDGE_RAYFIRE_INTACT end" );
    return;
}

/* CLEANOBJECT */ void sub_24505(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* CREATEOBJECTNOOFFSET */ void sub_24709(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_1088( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* SETUP_VAN */ void sub_25108()
{
     /* CLEANVEHICLE */ sub_25135( g_U1955 );
    g_U1955 =  /* CREATEVEHICLE */ sub_25223( g_U1367, g_U1956, g_U1959, 1, 0, 0 );
    if (DOES_VEHICLE_EXIST( g_U1955 ))
    {
        SET_VEHICLE_EXTRA( g_U1955, 1, 1 );
        SET_VEHICLE_EXTRA( g_U1955, 2, 1 );
        SET_VEHICLE_EXTRA( g_U1955, 3, 1 );
        SET_VEHICLE_EXTRA( g_U1955, 4, 1 );
        SET_VEHICLE_EXTRA( g_U1955, 5, 0 );
        SET_VEHICLE_EXTRA( g_U1955, 6, 0 );
        SET_VEHICLE_EXTRA( g_U1955, 7, 0 );
        SET_VEHICLE_EXTRA( g_U1955, 8, 0 );
        SET_VEHICLE_ON_GROUND_PROPERLY( g_U1955 );
        SET_VEHICLE_CAN_BE_DAMAGED( g_U1955, 0 );
        SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED( g_U1955, 1 );
        SET_VEHICLE_INTERIORLIGHT( g_U1955, 1 );
        SET_VEHICLE_LIGHTS( g_U1955, 2 );
        SET_VEHICLE_ENGINE_ON( g_U1955, 0, 1 );
    }
     /* CLEANPED */ sub_21733( l_U323 );
    l_U323 =  /* CREATEPED */ sub_23192( ref l_U310 );
    if (NOT (IS_PED_DEAD( l_U323 )))
    {
        SET_PED_INTO_VEHICLE( l_U323, g_U1955, -1 );
        SET_BULLET_CAM_PREF( l_U323, "PIST_CUSTOM_CEMET_01C", "PIST_CUSTOM_CEMET_01C", "PIST_CUSTOM_CEMET_01C", "", 0, 0, 0, 0, 0, 0, 0, 0 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U323, 1 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U323, 1 );
        SET_PED_COMBAT_ATTRIBUTES( l_U323, 16, 0 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U323, 1 );
        SET_PED_AS_ONE_SHOT_KILL( l_U323, 1 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U1955 )))
    {
         /* MAL_LOADANDPLAYVEHICLERECORDING */ sub_25995( ref g_U1955, 117, 0.00000000 );
        SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE( g_U1955, g_U1970 );
    }
    return;
}

/* CLEANVEHICLE */ void sub_25135(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

/* CREATEVEHICLE */ void sub_25223(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_1088( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for vehicle to exist: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

/* MAL_LOADANDPLAYVEHICLERECORDING */ void sub_25995(unknown uParam0, unknown uParam1, unknown uParam2)
{
     /* MAL_WRITESCRIPTLOG */ sub_26073( "MAL_LoadAndPlayVehicleRecording" );
    REQUEST_VEHICLE_RECORDING( uParam1 );
    while (NOT (HAS_VEHICLE_RECORDING_BEEN_LOADED( uParam1 )))
    {
        WAIT( 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( (uParam0^) )))
    {
        START_PLAYBACK_RECORDED_VEHICLE( (uParam0^), uParam1 );
    }
    while (NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( (uParam0^) )))
    {
        WAIT( 0 );
    }
    SET_PLAYBACK_SPEED( (uParam0^), uParam2 );
    return;
}

/* MAL_WRITESCRIPTLOG */ void sub_26073(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar3, 1537, "MSWW", 1537, uParam0, 1537, "###" );
    return;
}

/* F_IMAGEFX_FADE_IN */ int sub_26774()
{
    if (l_U276)
    {
         /* WRITESCRIPTLOG */ sub_3786( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U276 = 0;
        return 1;
        break;
    }
     /* WRITESCRIPTLOG */ sub_3786( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

/* SETUP_DOORS */ void sub_27045()
{
     /* HIDE_REALDOORS */ sub_27069();
     /* CLEANOBJECT */ sub_24505( l_U388 );
    l_U388 =  /* CREATEOBJECT */ sub_27284( -1174607443, -107.32430000, -2.81150000, -4.75000000, 0, 0, 180, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U388 ))
    {
        FREEZE_OBJECT_POSITION( l_U388, 1 );
        SET_OBJECT_COLLISION( l_U388, 0 );
    }
     /* CLEANOBJECT */ sub_24505( l_U389 );
    l_U389 =  /* CREATEOBJECT */ sub_27284( 108266138, -112.86720000, -2.81740000, -4.75000000, 0, 0, 180, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U389 ))
    {
        FREEZE_OBJECT_POSITION( l_U389, 1 );
        SET_OBJECT_COLLISION( l_U389, 0 );
    }
    return;
}

/* HIDE_REALDOORS */ void sub_27069()
{
    unknown uVar2;
    unknown uVar3;

    uVar2 = DOOR_FIND_CLOSEST( g_U1417._fU0, g_U1417._fU4 );
    uVar3 = DOOR_FIND_CLOSEST( g_U1424._fU0, g_U1424._fU4 );
    if (DOES_OBJECT_EXIST( uVar2 ))
    {
        DOOR_SET_IS_AFFECTED_BY_BULLETS( uVar2, 0 );
        SET_OBJECT_VISIBLE( uVar2, 0 );
        SET_OBJECT_COLLISION( uVar2, 0 );
    }
    if (DOES_OBJECT_EXIST( uVar3 ))
    {
        DOOR_SET_IS_AFFECTED_BY_BULLETS( uVar3, 0 );
        SET_OBJECT_VISIBLE( uVar3, 0 );
        SET_OBJECT_COLLISION( uVar3, 0 );
    }
    return;
}

/* CREATEOBJECT */ void sub_27284(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_1088( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* ACTIVATE_VAN_MPM */ void sub_27740()
{
     /* WRITESCRIPTLOG */ sub_3786( "RJM", "ACTIVATE_VAN_MPM", 0 );
    SET_PLAYBACK_SPEED( g_U1955, 1.00000000 );
    PLAY_SCRIPT_STREAM_FRONTEND( 0 );
     /* WRITESCRIPTLOG */ sub_3786( "RJM", "Activiating bullet time", 0 );
    DEACTIVATE_BULLET_TIME( 0, 0 );
    return;
}

/* F_ISPEDINTRIGGERBOX */ int sub_28478(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* P_KILL_PED */ void sub_28647(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

/* VAN_SUCCESS_MIDSCENE */ int sub_28932()
{
    switch (l_U285)
    {
        case 0:
         /* NIS_PRE_SETUP */ sub_15712( 1, 0, 0, 0 );
         /* NIS_CREATE_STATIC_CAM */ sub_15913( ref l_U564, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_COORD(), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_ROT(), GET_GAMEPLAY_CAM_FOV(), 1000 );
         /* NIS_CREATE_STATIC_CAM */ sub_15913( ref l_U595, l_U626, l_U629, l_U632, 0 );
         /* NIS_CREATE_STATIC_CAM */ sub_15913( ref l_U634, l_U665, l_U668, l_U671, l_U633 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        if (NOT (IS_VEHICLE_DEAD( g_U1955 )))
        {
            STOP_PLAYBACK_RECORDED_VEHICLE( g_U1955 );
            START_PLAYBACK_RECORDED_VEHICLE( g_U1955, 116 );
            SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE( g_U1955, g_U1971 );
            SET_PLAYBACK_SPEED( g_U1955, l_U672 );
        }
         /* P_CREATE_AND_START_TIMER */ sub_16927( ref g_U1960, 625 );
        ENABLE_CROSSHAIR( 0 );
        ISEQ_UNREGISTER_ENTITY( 1394393399, "cem_vig01_max" );
        ISEQ_UNREGISTER_ENTITY( 1394393399, "cem_vig01_pas" );
         /* TERMINATEISEQ */ sub_21427( 1394393399, 1 );
        SET_CAMERA_OVERRIDE( "", "", 0, 1, 1 );
         /* NIS_PLAY_INTERP_WITH_STATIC_CAMS */ sub_18039( ref l_U595, ref l_U634, l_U633, 1, 1 );
        PLAY_SCRIPT_STREAM_FRONTEND( 2 );
         /* WRITESCRIPTLOG */ sub_3786( "RJM", "VAN_SUCCESS_MIDSCENE - going to SUCCESS_SHOT1", 0 );
        l_U285 = 1;
        break;
        case 1:
        if ( /* NIS_IS_SHOT_FINISHED */ sub_17693( ref l_U634, 1 ))
        {
             /* WRITESCRIPTLOG */ sub_3786( "RJM", "VAN_SUCCESS_MIDSCENE - going to FAILURE_SHOT2", 0 );
            l_U285 = 2;
        }
        if ( /* ISTIMERDONE */ sub_17754( ref g_U1960 ))
        {
             /* WRITESCRIPTLOG */ sub_3786( "BSW", "tCollapseBridge timer finished", 0 );
            l_U279 = 3;
             /* P_VAN_MPM_CREATE_BRIDGE_RAYFIRE */ sub_29546( 1 );
            START_PARTICLE_FX_NON_LOOPED_AT_COORD( "NYCem_Bridge_Destruct_S", g_U1936, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
            SHAKE_CAM( l_U595._fU0, "MEDIUM_EXPLOSION_SHAKE", 0.40000000 );
            SET_PAD_SHAKE( 0, l_U595._fU84, 64 );
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_3786( "RJM", "VAN_SUCCESS_MIDSCENE - going to SUCCESS_DONE", 0 );
        l_U285 = 3;
        break;
        case 3:
        return 1;
        break;
    }
    return 0;
}

/* P_VAN_MPM_CREATE_BRIDGE_RAYFIRE */ void sub_29546(boolean bParam0)
{
    float fVar3;

     /* WRITE_STRING */ sub_779( "[SP]### P_VAN_MPM_CREATE_BRIDGE_RAYFIRE ###" );
    fVar3 = 0.80000000;
     /* WRITESCRIPTLOG */ sub_3786( "[MSWW]", "Cleaning objects", "###" );
    if (bParam0)
    {
         /* CLEANOBJECT */ sub_24505( g_U1796 );
    }
     /* CLEANOBJECT */ sub_24505( g_U1786 );
     /* CLEANOBJECT */ sub_24505( g_U1787 );
     /* CLEANOBJECT */ sub_24505( g_U1788 );
     /* CLEANOBJECT */ sub_24505( g_U1789 );
     /* CLEANOBJECT */ sub_24505( g_U1790 );
     /* CLEANOBJECT */ sub_24505( g_U1791 );
     /* CLEANOBJECT */ sub_24505( g_U1792 );
     /* CLEANOBJECT */ sub_24505( g_U1793 );
     /* CLEANOBJECT */ sub_24505( g_U1794 );
     /* CLEANOBJECT */ sub_24505( g_U1795 );
     /* CLEANOBJECT */ sub_24505( g_U1797 );
     /* WRITESCRIPTLOG */ sub_3786( "[MSWW]", "Creating objects", "###" );
    g_U1786 =  /* CREATEOBJECTNOOFFSET */ sub_24709( g_U1352, 65426, -6, -2, 0, 0, 0, 0, 1, 0 );
    g_U1787 =  /* CREATEOBJECTNOOFFSET */ sub_24709( g_U1353, 65426, -6, -2, 0, 0, 0, 0, 1, 0 );
    g_U1788 =  /* CREATEOBJECTNOOFFSET */ sub_24709( g_U1354, 65426, -6, -2, 0, 0, 0, 0, 1, 0 );
    g_U1789 =  /* CREATEOBJECTNOOFFSET */ sub_24709( g_U1355, 65426, -6, -2, 0, 0, 0, 0, 1, 0 );
    g_U1790 =  /* CREATEOBJECTNOOFFSET */ sub_24709( g_U1356, 65426, -6, -2, 0, 0, 0, 0, 1, 0 );
    g_U1791 =  /* CREATEOBJECTNOOFFSET */ sub_24709( g_U1357, 65426, -6, -2, 0, 0, 0, 0, 1, 0 );
    g_U1792 =  /* CREATEOBJECTNOOFFSET */ sub_24709( g_U1358, 65426, -6, -2, 0, 0, 0, 0, 1, 0 );
    g_U1793 =  /* CREATEOBJECTNOOFFSET */ sub_24709( g_U1359, 65426, -6, -2, 0, 0, 0, 0, 1, 0 );
    g_U1794 =  /* CREATEOBJECTNOOFFSET */ sub_24709( g_U1360, 65426, -6, -2, 0, 0, 0, 0, 1, 0 );
    g_U1795 =  /* CREATEOBJECTNOOFFSET */ sub_24709( g_U1361, 65426, -6, -2, 0, 0, 0, 0, 1, 0 );
     /* WRITESCRIPTLOG */ sub_3786( "[MSWW]", "Freezing objects", "###" );
    if ((DOES_OBJECT_EXIST( g_U1786 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U1786, 1 );
        PLAY_OBJECT_ANIM( g_U1786, "gate_anim_root01", ref g_U1196, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( g_U1786, "gate_anim_root01", ref g_U1196, fVar3 );
    }
    if ((DOES_OBJECT_EXIST( g_U1787 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U1787, 1 );
        PLAY_OBJECT_ANIM( g_U1787, "gate_anim_root02", ref g_U1196, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( g_U1787, "gate_anim_root02", ref g_U1196, fVar3 );
    }
    if ((DOES_OBJECT_EXIST( g_U1788 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U1788, 1 );
        PLAY_OBJECT_ANIM( g_U1788, "gate_anim_root03", ref g_U1196, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( g_U1788, "gate_anim_root03", ref g_U1196, fVar3 );
    }
    if ((DOES_OBJECT_EXIST( g_U1789 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U1789, 1 );
        PLAY_OBJECT_ANIM( g_U1789, "gate_anim_root04", ref g_U1196, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( g_U1789, "gate_anim_root04", ref g_U1196, fVar3 );
    }
    if ((DOES_OBJECT_EXIST( g_U1790 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U1790, 1 );
        PLAY_OBJECT_ANIM( g_U1790, "gate_anim_root05", ref g_U1196, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( g_U1790, "gate_anim_root05", ref g_U1196, fVar3 );
    }
    if ((DOES_OBJECT_EXIST( g_U1791 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U1791, 1 );
        PLAY_OBJECT_ANIM( g_U1791, "gate_anim_root06", ref g_U1196, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( g_U1791, "gate_anim_root06", ref g_U1196, fVar3 );
    }
    if ((DOES_OBJECT_EXIST( g_U1792 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U1792, 1 );
        PLAY_OBJECT_ANIM( g_U1792, "gate_anim_root07", ref g_U1196, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( g_U1792, "gate_anim_root07", ref g_U1196, fVar3 );
    }
    if ((DOES_OBJECT_EXIST( g_U1793 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U1793, 1 );
        PLAY_OBJECT_ANIM( g_U1793, "gate_anim_root08", ref g_U1196, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( g_U1793, "gate_anim_root08", ref g_U1196, fVar3 );
    }
    if ((DOES_OBJECT_EXIST( g_U1794 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U1794, 1 );
        PLAY_OBJECT_ANIM( g_U1794, "gate_anim_root09", ref g_U1196, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( g_U1794, "gate_anim_root09", ref g_U1196, fVar3 );
    }
    if ((DOES_OBJECT_EXIST( g_U1795 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U1795, 1 );
        PLAY_OBJECT_ANIM( g_U1795, "gate_anim_root10", ref g_U1196, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( g_U1795, "gate_anim_root10", ref g_U1196, fVar3 );
    }
    return;
}

/* P_UNLOAD_VAN_MPM_ASSETS */ void sub_31773()
{
     /* WRITE_STRING */ sub_779( "[SP]### P_UNLOAD_VAN_MPM_ASSETS ###" );
     /* UNLOADMODEL */ sub_31857( g_U1332 );
     /* UNLOADMODEL */ sub_31857( g_U1352 );
     /* UNLOADMODEL */ sub_31857( g_U1353 );
     /* UNLOADMODEL */ sub_31857( g_U1354 );
     /* UNLOADMODEL */ sub_31857( g_U1355 );
     /* UNLOADMODEL */ sub_31857( g_U1356 );
     /* UNLOADMODEL */ sub_31857( g_U1357 );
     /* UNLOADMODEL */ sub_31857( g_U1358 );
     /* UNLOADMODEL */ sub_31857( g_U1359 );
     /* UNLOADMODEL */ sub_31857( g_U1360 );
     /* UNLOADMODEL */ sub_31857( g_U1361 );
     /* UNLOADMODEL */ sub_31857( g_U1362 );
     /* UNLOADMODEL */ sub_31857( g_U1363 );
     /* UNLOADMODEL */ sub_31857( -1174607443 );
     /* UNLOADMODEL */ sub_31857( 108266138 );
    ISEQ_UNREGISTER_ENTITY( 1394393399, "cem_vig01_max" );
    ISEQ_UNREGISTER_ENTITY( 1394393399, "cem_vig01_pas" );
     /* TERMINATEISEQ */ sub_21427( 1394393399, 1 );
    STOP_SCRIPT_STREAM( 0 );
    STOP_SCRIPT_STREAM( 1 );
     /* UNLOADANIMDICT */ sub_32244( "FACE_PASNYB" );
     /* UNLOADACTIONTREE */ sub_32331( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act" );
     /* CLEANVEHICLERECORDING */ sub_32383( g_U1229 );
     /* CLEANVEHICLERECORDING */ sub_32383( g_U1230 );
    return;
}

/* UNLOADMODEL */ void sub_31857(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
         /* WRITE_STRING */ sub_779( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

/* UNLOADANIMDICT */ void sub_32244(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

/* UNLOADACTIONTREE */ void sub_32331(unknown uParam0)
{
    ACTION_TREE_UNLOAD( uParam0 );
    return;
}

/* CLEANVEHICLERECORDING */ void sub_32383(unknown uParam0)
{
    REMOVE_VEHICLE_RECORDING( uParam0 );
    return;
}

/* RESTORE_REAL_DOORS */ void sub_32452()
{
    unknown uVar2;
    unknown uVar3;

    uVar2 = DOOR_FIND_CLOSEST( g_U1417._fU0, g_U1417._fU4 );
    uVar3 = DOOR_FIND_CLOSEST( g_U1424._fU0, g_U1424._fU4 );
    if (DOES_OBJECT_EXIST( uVar2 ))
    {
        DOOR_SET_IS_AFFECTED_BY_BULLETS( uVar2, 1 );
        SET_OBJECT_VISIBLE( uVar2, 1 );
        SET_OBJECT_COLLISION( uVar2, 1 );
    }
    if (DOES_OBJECT_EXIST( uVar3 ))
    {
        DOOR_SET_IS_AFFECTED_BY_BULLETS( uVar3, 0 );
        SET_OBJECT_VISIBLE( uVar3, 1 );
        SET_OBJECT_COLLISION( uVar3, 1 );
    }
    return;
}


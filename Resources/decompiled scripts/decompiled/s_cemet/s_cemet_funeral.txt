void main()
{
    l_U0 = 0;
    l_U1 = 1;
    l_U2 = 0;
    l_U3 = 1.00000000;
    l_U4 = -5.00000000;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U11 = 42;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 90.00000000;
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = nil;
    l_U31 = {0.00000000, 0.00000000, 0.00000000};
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U37 = 1;
    l_U38 = 144;
    l_U59 = {0, 0, 0};
    StrCopy( ref l_U62, "DUMMY", 32 );
    l_U70 = 1;
    l_U75 = 0;
    l_U76 = 0;
    l_U77 = 0;
    l_U80 = 0;
    l_U125 = "PED_DEF";
    l_U167 = 1.00000000;
    l_U179 = 0;
    l_U220 = 0;
    l_U240 = -1;
    l_U241 = {64536, 64536, 64536};
    l_U263 = 0;
    l_U264 = 0;
    l_U265 = 1500;
    l_U275 = 1;
    l_U276 = 0;
    l_U277 = 6;
    l_U278 = 6;
    l_U288 = "08_02A_CEMETERY_concat";
    l_U321 = 1;
    l_U417 = 0;
    l_U678 = 0;
    l_U679 = 0;
    l_U680 = 0;
    l_U687 = 3;
    l_U688 = 10;
    l_U689 = l_U688 + 1;
     /* WRITESCRIPTLOG */ sub_501( "BSW", "s_cemet_funeral.sc script started", 0 );
    if (g_U825 <= 1)
    {
         /* P_LOAD_ASSETS_FUNERAL */ sub_631();
    }
     /* P_INITIALIZE_SCRIPT_DATA */ sub_1962();
     /* P_SET_STATIC_GAMEPLAY_DATA */ sub_2570();
     /* P_LOAD_WEAPONS */ sub_3838( 1 );
     /* INITIALIZE_PLAYER_BY_DEBUG_MENU_CHECKPOINT */ sub_4364();
    while (NOT IS_EXITFLAG_SET())
    {
         /* P_HANDLE_MUSIC */ sub_14291();
         /* HANDLE_CHECKPOINTS */ sub_15339();
         /* HANDLE_EVENTS */ sub_22193();
        WAIT( 0 );
    }
     /* P_CLEANUP_ALL */ sub_21004();
     /* P_UNLOAD_ASSETS_FUNERAL */ sub_41715();
     /* P_UNLOAD_WEAPONS */ sub_42099( 1 );
     /* WRITE_STRING */ sub_700( "[GA] s_cemet_funeral.sc script ended." );
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_cemet_funeral" );
    return;
}

/* WRITESCRIPTLOG */ void sub_501(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_LOAD_ASSETS_FUNERAL */ void sub_631()
{
     /* WRITE_STRING */ sub_700( "[GA] P_LOAD_ASSETS_FUNERAL start" );
     /* LOADMODEL */ sub_755( g_U1334, 1 );
     /* LOADMODEL */ sub_755( g_U1362, 1 );
     /* LOADMODEL */ sub_755( 466468872, 1 );
     /* LOADMODEL */ sub_755( g_U1330, 1 );
     /* LOADISEQ */ sub_1039( 2111514372, 1 );
     /* LOADISEQ */ sub_1039( 550058844, 1 );
     /* LOADISEQ */ sub_1039( -1144523979, 1 );
     /* LOADISEQ */ sub_1039( 1394393399, 1 );
     /* LOADANIMDICT */ sub_1380( "FACE_PASNYB", 0, 1 );
     /* LOADACTIONTREE */ sub_1589( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act", 1 );
     /* SETUP_SCRIPTED_SPEECH */ sub_1753( "SCMTAUD" );
     /* WRITE_STRING */ sub_700( "[GA] P_LOAD_ASSETS_FUNERAL end" );
    return;
}

/* WRITE_STRING */ void sub_700(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* LOADMODEL */ void sub_755(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_700( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADISEQ */ void sub_1039(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                DISPLAYF( "[SP]### Waiting for interactive sequence to be loaded: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* LOADANIMDICT */ void sub_1380(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an animation dictionary to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADACTIONTREE */ void sub_1589(unknown uParam0, int iParam1)
{
    ACTION_TREE_LOAD( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_ACTION_TREE_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an Action Tree to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_1753(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_1797();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_1797()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_1962()
{
     /* MLOG */ sub_2028( "P_INITIALIZE_SCRIPT_DATA", 0, 0 );
    l_U322 = 0;
    l_U417 = 1;
    l_U420 = 0;
    l_U681 = 0;
    l_U678 = 0;
    l_U679 = 0;
    l_U680 = 0;
    l_U682 = 0;
    l_U683 = 0;
     /* CREATETIMER */ sub_2170( ref l_U323, 2000, 1, 0 );
    l_U686 = 0;
    l_U418 = 0;
    l_U684 = 0;
    l_U685 = 0;
    l_U421 = 0;
     /* RESETTIMER */ sub_2350( ref l_U441 );
     /* P_INITIALIZE_SP_CHALLENGES */ sub_2474();
    return;
}

/* MLOG */ void sub_2028(unknown uParam0, string sParam1, string sParam2)
{
    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "ML";
    }
    if (IS_STRING_NULL( sParam1 ))
    {
        sParam1 = "---";
    }
     /* WRITESCRIPTLOG */ sub_501( sParam2, uParam0, sParam1 );
    return;
}

/* CREATETIMER */ void sub_2170(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* RESETTIMER */ void sub_2350(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_INITIALIZE_SP_CHALLENGES */ void sub_2474()
{
     /* WRITESCRIPTLOG */ sub_501( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    return;
}

/* P_SET_STATIC_GAMEPLAY_DATA */ void sub_2570()
{
     /* MLOG */ sub_2028( "P_SET_STATIC_GAMEPLAY_DATA", 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2680( ref l_U651, g_U779[0]._fU0, g_U779[0]._fU12, 1265654828, 26, 6, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2680( ref l_U491[0], -64.72000000, -88.49000000, 8.18000000, -166.33000000, 2046816868, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2680( ref l_U491[1], -67.32000000, -90.80000000, 8.06000000, -131.62000000, 2132016071, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2680( ref l_U491[2], -67.47000000, -95.29000000, 8.34000000, -131.62000000, 1465169239, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2680( ref l_U542[0], -115.88000000, -32.65000000, 0.64000000, 59.69820000, 130636593, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2680( ref l_U542[1], -96.80000000, -20.36000000, -1.35000000, 119.39890000, -851060128, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2680( ref l_U542[2], -115.62000000, -21.43000000, -0.48000000, 193.40360000, 1438777858, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2680( ref l_U542[3], -101.24000000, -17.97000000, -1.06000000, 180, -957390706, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2680( ref l_U605[0], -94.11000000, -23.72000000, -0.93000000, -180.00000000, 1025372559, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2680( ref l_U605[1], -87.50000000, -45.80000000, 2.56000000, 180.00000000, -293412092, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2680( ref l_U605[2], -87.55000000, -23.76000000, -0.93000000, 180.00000000, -1851501719, 7, 3, 2, 0, 0 );
     /* P_CREATETRIGGERBOX */ sub_3336( ref l_U332, "ACTIVATE_CAR_WAVE", -90.09000000, -60.59000000, 1.10000000, 70.00000000, 55.00000000, 10.00000000, 0.00000000, 0.00000000, -162.12000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_3336( ref l_U353, "ACTIVATE_CAR_WAVE2", -116.62000000, -90.34000000, 1.10000000, 40.00000000, 55.00000000, 10.00000000, 0.00000000, 0.00000000, -172.12000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_3336( ref l_U374, "ACTIVATE_PASSOS_GUYS", -107.29000000, -10.02000000, -2.50000000, 65.00000000, 55.00000000, 12.00000000, 0.00000000, 0.00000000, -172.12000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_3336( ref l_U395, "PASSOS_FUNERAL_DEATH", -84.49000000, -88.33000000, 2.56000000, 70.00000000, 55.00000000, 10.00000000, 0.00000000, 0.00000000, -157.12000000, 1 );
     /* P_CREATETETHERBOX */ sub_3755( ref l_U416, "TETHER_NEAR_BRIDGE", -88.25000000, -70.87000000, -3.18000000, 75.00000000, 115.00000000, 15.00000000, 0.00000000, 0.00000000, -167.12000000, 1 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_2680(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATETRIGGERBOX */ void sub_3336(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATETETHERBOX */ void sub_3755(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_LOAD_WEAPONS */ void sub_3838(unknown uParam0)
{
     /* LOADWEAPON */ sub_3871( -862236369, 1 );
    switch (uParam0)
    {
        case 0:
        case 1:
         /* LOADWEAPON */ sub_3871( 434544317, 1 );
         /* LOADWEAPON */ sub_3871( -691403429, 1 );
        break;
        case 2: break;
        case 3:
         /* LOADWEAPON */ sub_3871( -691403429, 1 );
         /* LOADWEAPON */ sub_3871( 930042831, 1 );
        break;
        case 4:
        case 5:
         /* LOADWEAPON */ sub_3871( 434544317, 1 );
         /* LOADWEAPON */ sub_3871( -691403429, 1 );
        break;
        case 6:
         /* LOADWEAPON */ sub_3871( 434544317, 1 );
         /* LOADWEAPON */ sub_3871( -691403429, 1 );
        break;
        case 7:
         /* LOADWEAPON */ sub_3871( 434544317, 1 );
         /* LOADWEAPON */ sub_3871( -691403429, 1 );
         /* LOADWEAPON */ sub_3871( 1224272620, 1 );
        break;
        case 8:
         /* LOADWEAPON */ sub_3871( 434544317, 1 );
         /* LOADWEAPON */ sub_3871( -691403429, 1 );
        break;
        case 9:
         /* LOADWEAPON */ sub_3871( 434544317, 1 );
         /* LOADWEAPON */ sub_3871( -691403429, 1 );
        break;
        case 10:
         /* LOADWEAPON */ sub_3871( 434544317, 1 );
         /* LOADWEAPON */ sub_3871( -184942895, 1 );
         /* LOADWEAPON */ sub_3871( -691403429, 1 );
        break;
    }
    return;
}

/* LOADWEAPON */ void sub_3871(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load weapon: {!f1} : {1} ###", 2, 1, 199730165, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* INITIALIZE_PLAYER_BY_DEBUG_MENU_CHECKPOINT */ void sub_4364()
{
    if (g_U825 == 0)
    {
         /* WRITESCRIPTLOG */ sub_501( "RJM", "INITIALIZE_PLAYER_BY_CHECKPOINT says we're in MCE_START", " " );
        g_U826 = 1;
        if (IS_SCREEN_FADED_OUT())
        {
            DO_SCREEN_FADE_IN( 250 );
        }
        l_U322 = 0;
    }
    else if (g_U825 == 1)
    {
         /* WRITESCRIPTLOG */ sub_501( "RJM", "INITIALIZE_PLAYER_BY_CHECKPOINT says we're in MCE_FUNERAL", " " );
        g_U826 = 1;
         /* SETUP_GAMEPLAY */ sub_4636();
        l_U417 = 1;
        l_U678 = 1;
        l_U322 = 3;
    }
    START_CONTEXT( "CEMETERY_WIFE_GRAVE" );
    START_CONTEXT( "CEMETERY_FUNERAL_TO_END" );
    return;
}

/* SETUP_GAMEPLAY */ void sub_4636()
{
     /* SETUP_MAX */ sub_4663();
     /* CREATE_MICHELLES_GRAVESTONE */ sub_9915();
     /* CREATE_CONFRONT_THUGS */ sub_10400();
     /* CREATE_BRIDGE_RAYFIRE_INTACT */ sub_13526();
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    return;
}

/* SETUP_MAX */ void sub_4663()
{
    if ( /* IS_MAX_VALID */ sub_4685())
    {
        if (NOT ( /* HAS_SAVEFILE_LOADED */ sub_4894( ref l_U450 )))
        {
            REMOVE_ALL_PED_WEAPONS(  /* PLAYER_PED_ID */ sub_4710() );
             /* F_GIVEPEDWEAPON */ sub_7500(  /* PLAYER_PED_ID */ sub_4710(), -862236369, 100, 0, 0 );
        }
        SET_PAYNEKILLER_AMT( 5 );
         /* SNAP_MAX_TO_INITIAL_COVER */ sub_9593();
    }
    return;
}

/* IS_MAX_VALID */ int sub_4685()
{
    if ( /* IS_PED_VALID */ sub_4804(  /* PLAYER_PED_ID */ sub_4710() ))
    {
        return 1;
    }
    return 0;
}

/* PLAYER_PED_ID */ int sub_4710()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_4748() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_4748()
{
    return GET_PLAYER_ID();
}

/* IS_PED_VALID */ int sub_4804(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (DOES_PED_EXIST( uParam0 )))
    {
        return 1;
    }
    return 0;
}

/* HAS_SAVEFILE_LOADED */ int sub_4894(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_501( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U37 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U38 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_5050( uParam0,  /* PLAYER_PED_ID */ sub_4710() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_5050(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_501( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U37)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_5271( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_6435( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_6749( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_7184( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_6749( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_7184( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_6749( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_7184( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_7500( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_7184( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_7500( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_7184( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U37 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_8074( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_8276( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_4710(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U37)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U37 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_501( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_5271(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_5333( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_5333(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_6435(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_6749(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_700( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_7184(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_7500(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_700( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_8074(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_8276(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_5333( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_8374( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_8374(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* SNAP_MAX_TO_INITIAL_COVER */ void sub_9593()
{
    if ( /* IS_MAX_VALID */ sub_4685())
    {
         /* WRITESCRIPTLOG */ sub_501( "bsw", "snapping Max to cover 25806C4F_4EF389A0_Corner1", 0 );
         /* TELEPORTPED */ sub_9729(  /* PLAYER_PED_ID */ sub_4710(), g_U971[0]._fU0, g_U971[0]._fU12 );
        SNAP_PLAYER_TO_COVERPOINT(  /* PLAYER_ID */ sub_4748(), "GenCover", "25806C4F_4EF389A0_Corner1", 1 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U971[0]._fU16, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U971[0]._fU20, 1065353216, 0 );
    }
    return;
}

/* TELEPORTPED */ void sub_9729(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* CREATE_MICHELLES_GRAVESTONE */ void sub_9915()
{
     /* WRITESCRIPTLOG */ sub_501( "BSW", "CREATE_MICHELLES_GRAVESTONE - start", 0 );
     /* CLEANOBJECT */ sub_10010( l_U486 );
    l_U486 =  /* CREATEOBJECT */ sub_10084( g_U1330, g_U1297, g_U1300, 0, 0, 0 );
    return;
}

/* CLEANOBJECT */ void sub_10010(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* CREATEOBJECT */ void sub_10084(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_755( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* CREATE_CONFRONT_THUGS */ void sub_10400()
{
     /* PED_ARRAY_INITIALIZE */ sub_10471( ref l_U491, ref l_U487, ref l_U531, -862236369, 1.00000000, ref g_U1212, 0, 0, 25000, 3, 0, 25000, 0 );
     /* PED_ARRAY_SET_COMBAT_MOVEMENT */ sub_13129( ref l_U487, 2 );
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_12986( ref l_U487, "CONFRONT_ENEMY_" );
    SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U531._fU0, 1 );
     /* PED_ARRAY_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_13330( ref l_U487, 1 );
    return;
}

/* PED_ARRAY_INITIALIZE */ void sub_10471(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5, boolean bParam6, unknown uParam7, unknown uParam8, unknown uParam9, int iParam10, unknown uParam11, unknown uParam12)
{
    int I;
    unknown uVar16;

    if ((uParam0^) != (uParam1^))
    {
        SCRIPT_ASSERT( "PED_ARRAY_INITIALIZE - Array sizes don't match!!", 0 );
        return;
    }
     /* P_SETUP_AI_GROUP */ sub_10583( uParam2, uParam4, 0 );
    if (IS_STRING_NULL( uParam12 ))
    {
        uParam12 = l_U125;
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* CLEANPED */ sub_11017( (uParam1^)[I] );
        (uParam1^)[I] =  /* CREATEPED */ sub_11109( ref (uParam0^)[I] );
        if ( /* IS_PED_VALID */ sub_4804( (uParam1^)[I] ))
        {
            SET_PED_AI_TEMPLATE( (uParam1^)[I], uParam5 );
            SET_PED_ALERTNESS( (uParam1^)[I], uParam9 );
            SET_PED_ALLOWED_TO_SURRENDER( (uParam1^)[I], 0 );
             /* P_QUICK_ADD_PED_TO_GROUP */ sub_11904( (uParam1^)[I], uParam2 );
            if (iParam3 != -1569615261)
            {
                uVar16 =  /* F_GIVEPEDWEAPON */ sub_7500( (uParam1^)[I], iParam3, uParam8, 0, 0 );
            }
            if (iParam10 != 0)
            {
                 /* F_GIVEPEDWEAPONTOHOLSTER */ sub_6749( (uParam1^)[I], iParam10, 0, uParam11, 0 );
            }
            if (bParam6)
            {
                 /* PED_SET_ENGAGEMENT_RANGES */ sub_12370( (uParam1^)[I], iParam3 );
            }
            switch (uParam7)
            {
                case 0: break;
                case 1:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 13, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 13, 1 );
                break;
                case 2:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 14, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 14, 1 );
                break;
                case 3:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 12, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 12, 1 );
                break;
            }
        }
    }
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_12986( uParam1, uParam12 );
    return;
}

/* P_SETUP_AI_GROUP */ void sub_10583(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* CLEANPED */ void sub_11017(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CREATEPED */ void sub_11109(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_755( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_11600( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_11701( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_11600(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_11701(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_11904(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_700( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_10583( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_10583( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* PED_SET_ENGAGEMENT_RANGES */ void sub_12370(unknown uParam0, unknown uParam1)
{
    switch (uParam1)
    {
        case -1569615261:
        case 406496141:
        case -862236369:
        case 456708483:
        case -1464892298:
        case 68019059:
        case -612753081:
        case -820634585:
        SET_PED_COMBAT_RANGE_MAX( uParam0, 10.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case 434544317:
        case 1845102363:
        case -168327769:
        case -184942895:
        case 514118749:
        case 1964270085:
        case -691403429:
        case 1478009203:
        case -1404433099:
        case 1194438308:
        SET_PED_COMBAT_RANGE( uParam0, 1 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 20.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case -1013714740:
        case -1074756423:
        case 1308526797:
        case 840671040:
        case 57534114:
        case 724901397:
        case 1992962408:
        SET_PED_COMBAT_RANGE( uParam0, 2 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 30.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case 1224272620:
        case 10648147:
        case 377623895:
        case 319712764:
        case -110877124:
        case -1659006841:
        SET_PED_COMBAT_RANGE( uParam0, 3 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 50.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 5.00000000 );
        break;
    }
    return;
}

/* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ void sub_12986(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

/* PED_ARRAY_SET_COMBAT_MOVEMENT */ void sub_13129(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* PED_SET_COMBAT_MOVEMENT */ sub_13195( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* PED_SET_COMBAT_MOVEMENT */ void sub_13195(unknown uParam0, unknown uParam1)
{
    if ( /* IS_PED_VALID */ sub_4804( (uParam0^) ))
    {
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam1 );
    }
    return;
}

/* PED_ARRAY_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ void sub_13330(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_13413( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ void sub_13413(unknown uParam0, unknown uParam1)
{
    if ( /* IS_PED_VALID */ sub_4804( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), uParam1 );
    }
    return;
}

/* CREATE_BRIDGE_RAYFIRE_INTACT */ void sub_13526()
{
     /* WRITE_STRING */ sub_700( "[GA] CREATE_BRIDGE_RAYFIRE_INTACT start" );
     /* CLEANOBJECT */ sub_10010( g_U1796 );
     /* CLEANOBJECT */ sub_10010( g_U1786 );
     /* CLEANOBJECT */ sub_10010( g_U1787 );
     /* CLEANOBJECT */ sub_10010( g_U1788 );
     /* CLEANOBJECT */ sub_10010( g_U1789 );
     /* CLEANOBJECT */ sub_10010( g_U1790 );
     /* CLEANOBJECT */ sub_10010( g_U1791 );
     /* CLEANOBJECT */ sub_10010( g_U1792 );
     /* CLEANOBJECT */ sub_10010( g_U1793 );
     /* CLEANOBJECT */ sub_10010( g_U1794 );
     /* CLEANOBJECT */ sub_10010( g_U1795 );
     /* CLEANOBJECT */ sub_10010( g_U1797 );
     /* CLEANOBJECT */ sub_10010( g_U1798 );
     /* CLEANOBJECT */ sub_10010( g_U1799 );
    g_U1796 =  /* CREATEOBJECTNOOFFSET */ sub_13774( g_U1362, g_U1933, 0, 0, 0, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U1796 ))
    {
        FREEZE_OBJECT_POSITION( g_U1796, 1 );
    }
     /* WRITE_STRING */ sub_700( "[GA] CREATE_BRIDGE_RAYFIRE_INTACT end" );
    return;
}

/* CREATEOBJECTNOOFFSET */ void sub_13774(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_755( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* P_HANDLE_MUSIC */ void sub_14291()
{
    if (l_U277 != l_U275)
    {
         /* WRITESCRIPTLOG */ sub_501( "TEH", "playing music:changed CUR FLAG", 0 );
         /* WRITE_INT */ sub_14384( l_U275 );
         /* WRITE_INT */ sub_14384( l_U276 );
        l_U277 = l_U275;
    }
    else if (l_U278 != l_U276)
    {
         /* WRITESCRIPTLOG */ sub_501( "TEH", "playing music:changed NEW FLAG", 0 );
         /* WRITE_INT */ sub_14384( l_U275 );
         /* WRITE_INT */ sub_14384( l_U276 );
        l_U278 = l_U276;
    }
    switch (l_U275)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_501( "TEH", "playing music:MC_Start_up SUSPEND ", 0 );
        AUDIO_MUSIC_SUSPEND( 500 );
        l_U275 = 3;
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_501( "TEH", "playing music:MC_CHECKPOINT_RESTART_FUNERAL ", 0 );
        AUDIO_MUSIC_SUSPEND( 500 );
        l_U275 = 3;
        break;
        case 3:
        if (l_U276 == 3)
        {
             /* WRITESCRIPTLOG */ sub_501( "TEH", "playing music: MC_GAMEPLAY_STARTS ", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_1_3_4", "", 0, 5000, 50000, -1082130432, 0 );
             /* CREATETIMER */ sub_2170( ref l_U279, 10000, 1, 0 );
             /* STARTTIMER */ sub_14897( ref l_U279 );
            l_U275 = 4;
        }
        break;
        case 4:
        if (l_U276 == 4)
        {
             /* WRITESCRIPTLOG */ sub_501( "TEH", "playing music: MC_THREE_GUYS_DEAD ", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_3_4_5", "", 0, 8000, 5000, -1082130432, 0 );
            l_U275 = 5;
        }
        break;
        case 5:
        if (l_U276 == 5)
        {
             /* WRITESCRIPTLOG */ sub_501( "TEH", "playing music: MC_ALL_DEAD AUDIO_MUSIC_SUSPEND 8000 ", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_3", "", 0, 6000, 5000, -1082130432, 0 );
            l_U275 = 6;
        }
        break;
    }
    return;
}

/* WRITE_INT */ void sub_14384(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* STARTTIMER */ void sub_14897(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* HANDLE_CHECKPOINTS */ void sub_15339()
{
    if (g_U826 == 1)
    {
        if (l_U419 == 0)
        {
            if (NOT ( /* IS_PED_VALID */ sub_4804(  /* PLAYER_PED_ID */ sub_4710() )))
            {
                 /* WRITESCRIPTLOG */ sub_501( "RJM", "HANDLE_CHECKPOINTS - Player died in Funeral", 0 );
                l_U419 = 1;
            }
            else if ( /* RESTARTING_CHECKPOINT */ sub_15479())
            {
                 /* WRITESCRIPTLOG */ sub_501( "SBA", "HANDLE_CHECKPOINTS - Restart", 0 );
                l_U419 = 1;
            }
            else if (l_U682)
            {
                if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (NOT ((l_U685) || ( /* IS_PED_VALID */ sub_4804( g_U824 )))))
                {
                     /* WRITESCRIPTLOG */ sub_501( "RJM", "HANDLE_CHECKPOINTS - Passos died in Funeral", 0 );
                    l_U419 = 2;
                }
            };;;
        }
         /* P_HANDLE_FAILURE */ sub_16096();
    }
    return;
}

/* RESTARTING_CHECKPOINT */ int sub_15479()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U37 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4710() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_4710(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_4748(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_4748(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_4710() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_4710(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* P_HANDLE_FAILURE */ void sub_16096()
{
    switch (l_U419)
    {
        case 0: break;
        case 2:
        if (l_U418 == 0)
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            l_U419 = 1;
        }
        else if (l_U418 == 1)
        {
            if ( /* PLAY_MIDSCENE_01_PASSOS_DEATH */ sub_16242())
            {
                l_U419 = 1;
                 /* WRITESCRIPTLOG */ sub_501( "CCB", "eFailure - STATE_FAIL_WAITING", 0 );
            }
        }
        break;
        case 1:
        if ( /* IS_RESTART_ACTIVE */ sub_19810())
        {
            l_U419 = 3;
        }
        else if (( /* F_CHECK_QUIT_RETRY */ sub_19870( 0 )) == 1)
        {
            l_U419 = 3;
        }
        break;
        case 3:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4710() )))
        {
             /* WRITESCRIPTLOG */ sub_501( "CCB", "Deactivating bullettime...", 0 );
            DEACTIVATE_BULLET_TIME( 1, 0 );
            END_POSTFX_BLENDER( 3, 0 );
            l_U419 = 4;
             /* WRITESCRIPTLOG */ sub_501( "CCB", "eFailure - STATE_FAIL_CLEANUP", 0 );
        }
        break;
        case 4:
        if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_4748() )))
        {
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4710() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_4748(), 0, 0 );
            }
        }
        DO_SCREEN_FADE_OUT( 0 );
        DESTROY_ALL_CAMS();
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        AUDIO_MUSIC_SUSPEND( 500 );
         /* CLEANPED */ sub_11017( g_U824 );
         /* P_CLEANUP_ALL */ sub_21004();
        l_U419 = 5;
         /* WRITESCRIPTLOG */ sub_501( "CCB", "eFailure - STATE_FAIL_RESTORE", 0 );
        break;
        case 5:
        if (NOT IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED())
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        }
         /* P_INITIALIZE_SCRIPT_DATA */ sub_1962();
         /* P_SET_STATIC_GAMEPLAY_DATA */ sub_2570();
         /* SETUP_GAMEPLAY */ sub_4636();
         /* P_SETUP_PLAYER_RELATIONSHIPS */ sub_21628();
        l_U419 = 6;
         /* WRITESCRIPTLOG */ sub_501( "CCB", "eFailure - STATE_FAIL_RESTART", 0 );
        break;
        case 6:
        if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
        {
             /* WRITESCRIPTLOG */ sub_501( "CCB", "eFailure - STATE_FAIL_IDLE", 0 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_5050( ref l_U450,  /* PLAYER_PED_ID */ sub_4710() );
            if ( /* IS_MAX_VALID */ sub_4685())
            {
                SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_4710(), 0 );
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_4748(), 1, 0 );
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_4710(), 1 );
            }
            l_U275 = 2;
             /* LOADANIMDICT */ sub_1380( "FACE_PASNYB", 0, 1 );
             /* LOADACTIONTREE */ sub_1589( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act", 1 );
            l_U419 = 0;
            l_U417 = 1;
            l_U678 = 1;
            l_U322 = 3;
             /* WRITESCRIPTLOG */ sub_501( "CCB", "eCheckpoint - STATE_CHECKPOINT_INIT", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_501( "CCB", "Waiting for stream requests...", 0 );
        }
        break;
    }
    return;
}

/* PLAY_MIDSCENE_01_PASSOS_DEATH */ int sub_16242()
{
    unknown uVar2;

    switch (l_U686)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_501( "CCB", "PLAY_PASSOS_TREEGARDEN_DEATH_SCENE: ePassosDeathMidsceneState - STATE_DEATHCAM_INIT", 0 );
         /* NIS_PRE_SETUP */ sub_16438( 1, 0, 0, 1 );
         /* P_DEACTIVATEPEDARRAY */ sub_16617( ref l_U487 );
         /* P_DEACTIVATEPEDARRAY */ sub_16617( ref l_U537 );
         /* P_DEACTIVATEPEDARRAY */ sub_16617( ref l_U601 );
        uVar2 =  /* GET_SCENEPED_FOR_PASSOS_DEATH */ sub_16823();
         /* NIS_CREATE_STATIC_CAM */ sub_17441( ref l_U699, -102.72390000, -7.28837000, -0.05328800, -10.01655000, 0.00002600, -170.28390000, 45, 1500 );
         /* LOADISEQ */ sub_1039( -1144523979, 1 );
        if ( /* IS_MAX_VALID */ sub_4685())
        {
            SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_4710(), 0 );
        }
        if (ISEQ_QUERY_ENTITY_STATE( 550058844, "PASSOS", 3 ))
        {
             /* WRITESCRIPTLOG */ sub_501( "RJM", "S_CEM_08_03_BLENDOUT was playing, kill it.", 0 );
            ISEQ_UNREGISTER_ENTITY( 550058844, "PASSOS" );
             /* TERMINATEISEQ */ sub_17817( 550058844, 1 );
        }
        if ( /* IS_PED_VALID */ sub_4804( g_U824 ))
        {
            CLEAR_PED_TASKS_IMMEDIATELY( g_U824 );
             /* TELEPORTPED */ sub_9729( g_U824, l_U651._fU0, l_U651._fU12 );
             /* SETUP_PASSOS_FOR_FAILURE_SCENE */ sub_18174( ref g_U824 );
            ISEQ_REGISTER_ENTITY( -1144523979, "PASSOS", g_U824, 0 );
            ISEQ_START( -1144523979 );
        }
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_2680( ref l_U664, -100.21000000, -13.14000000, -1.46000000, 30, uVar2, 7, 3, 2, 0, 0 );
         /* CLEANPED */ sub_11017( l_U677 );
        l_U677 =  /* CREATEPED */ sub_11109( ref l_U664 );
        if ( /* IS_PED_VALID */ sub_4804( l_U677 ))
        {
             /* SETUP_KILLER_FOR_FAILURE_CUTSCENES */ sub_18618( ref l_U677 );
             /* F_GIVEPEDWEAPON */ sub_7500( l_U677, -862236369, 25000, 0, 0 );
            REGISTER_TARGET( l_U677, g_U824 );
            SET_PED_DEFAULT_AIM_AT_PED( l_U677, g_U824 );
            TASK_AIM_GUN_AT_PED( l_U677, g_U824, -1, 0 );
        }
        l_U686 = 3;
         /* WRITESCRIPTLOG */ sub_501( "CCB", "ePassosDeathMidsceneState - STATE_DEATHCAM_START", 0 );
        case 3:
         /* NIS_PLAY_STATIC_CAMERA */ sub_18865( ref l_U699 );
        SHAKE_CAM( l_U699._fU0,  /* F_CAM_SHAKE_WOBBLY */ sub_18981(), 0.25000000 );
         /* CREATETIMER */ sub_2170( ref l_U690, 750, 1, 0 );
         /* STARTTIMER */ sub_14897( ref l_U690 );
        l_U686 = 1;
         /* WRITESCRIPTLOG */ sub_501( "CCB", "ePassosDeathMidsceneState - STATE_DEATHCAM_WAITING", 0 );
        break;
        case 1:
        if ( /* ISTIMERDONE */ sub_19150( ref l_U690 ))
        {
            if (( /* IS_PED_VALID */ sub_4804( g_U824 )) AND ( /* IS_PED_VALID */ sub_4804( l_U677 )))
            {
                SET_PED_SHOOTS_AT_COORD( l_U677, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U824, 65488, 0, 0, 0 ) );
                SHAKE_CAM( l_U699._fU0, "SMALL_EXPLOSION_SHAKE", 1 );
                SET_PED_DEFAULT_AIM_AT_COORD( l_U677, -10.06000000, 108.19000000, 5.24000000 );
                 /* P_KILL_PED */ sub_19464( g_U824 );
                 /* CREATETIMER */ sub_2170( ref l_U690, 50, 1, 0 );
                 /* STARTTIMER */ sub_14897( ref l_U690 );
                l_U686 = 5;
                 /* WRITESCRIPTLOG */ sub_501( "CCB", "ePassosDeathMidsceneState - STATE_DEATHCAM_PLAYING", 0 );
            }
        }
        break;
        case 5:
        if ( /* ISTIMERDONE */ sub_19150( ref l_U690 ))
        {
            l_U686 = 6;
             /* WRITESCRIPTLOG */ sub_501( "CCB", "ePassosDeathMidsceneState - STATE_DEATHCAM_FINISHED", 0 );
        }
        break;
        case 6:
        return 1;
        break;
    }
    return 0;
}

/* NIS_PRE_SETUP */ void sub_16438(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4710() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_4748(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_4710(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_4710() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_4710(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* P_DEACTIVATEPEDARRAY */ void sub_16617(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_DEACTIVATEPED */ sub_16671( (uParam0^)[I] );
    }
    return;
}

/* P_DEACTIVATEPED */ void sub_16671(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

/* GET_SCENEPED_FOR_PASSOS_DEATH */ int sub_16823()
{
    int I;

    for ( I = 0; I <= (l_U487 - 1); I++ )
    {
        if ( /* IS_PED_VALID */ sub_4804( l_U487[I] ))
        {
             /* WRITESCRIPTLOG */ sub_501( "RJM", "GET_SCENEPED_FOR_PASSOS_DEATH - Found a guy from the Confront", 0 );
            return l_U491[I]._fU20;
        }
    }
    for ( I = 0; I <= (l_U537 - 1); I++ )
    {
        if ( /* IS_PED_VALID */ sub_4804( l_U537[I] ))
        {
             /* WRITESCRIPTLOG */ sub_501( "RJM", "GET_SCENEPED_FOR_PASSOS_DEATH - Found a guy from the Car", 0 );
            return l_U542[I]._fU20;
        }
    }
    for ( I = 0; I <= (l_U601 - 1); I++ )
    {
        if ( /* IS_PED_VALID */ sub_4804( l_U601[I] ))
        {
             /* WRITESCRIPTLOG */ sub_501( "RJM", "GET_SCENEPED_FOR_PASSOS_DEATH - Found a guy from the Middle Wave", 0 );
            return l_U605[I]._fU20;
        }
    }
     /* WRITESCRIPTLOG */ sub_501( "RJM", "GET_SCENEPED_FOR_PASSOS_DEATH - Couldn't find anyone alive...that's weird, use a default", 0 );
    return -293412092;
}

/* NIS_CREATE_STATIC_CAM */ void sub_17441(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_2170( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U763, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* TERMINATEISEQ */ void sub_17817(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            DISPLAYF( "[SP]### Waiting for interactive sequence to terminate: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* SETUP_PASSOS_FOR_FAILURE_SCENE */ void sub_18174(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_501( "RJM", "P_SETUP_PASSOS_FOR_FAILURE_SCENE", "***" );
    if ( /* IS_PED_VALID */ sub_4804( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^), 0 );
        SET_PED_VALIDATE_BULLET_CAM_HIT( (uParam0^), 1 );
        SET_AI_SHOULD_ALWAYS_MISS_PED( (uParam0^), 0 );
        SET_CAN_AI_KICK_THROUGH_CORPSES( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_AI_TEMPLATE( (uParam0^), "AIT_NORMAL" );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( (uParam0^), 0 );
        SET_PED_AS_ONE_SHOT_KILL( (uParam0^), 1 );
        SET_PED_GORE( (uParam0^), 1 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), 0 );
        SET_PED_PROOFS( (uParam0^), 0, 1, 1, 1, 1 );
        SET_PED_ALLOWED_TO_SURRENDER( (uParam0^), 0 );
        SET_PED_CAN_AVOID_DEATH_ZONES( (uParam0^), 0 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( (uParam0^), 1 );
        SET_PED_CAN_PUSH_PLAYER( (uParam0^), 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( (uParam0^), 0 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_CAN_BE_TARGETTED( (uParam0^), 1 );
    }
    return;
}

/* SETUP_KILLER_FOR_FAILURE_CUTSCENES */ void sub_18618(unknown uParam0)
{
    if ( /* IS_PED_VALID */ sub_4804( (uParam0^) ))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
        SET_PED_COMBAT_MOVEMENT( (uParam0^), 0 );
    }
    return;
}

/* NIS_PLAY_STATIC_CAMERA */ void sub_18865(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_14897( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

/* F_CAM_SHAKE_WOBBLY */ string sub_18981()
{
    return "WOBBLY_SHAKE";
}

/* ISTIMERDONE */ int sub_19150(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_KILL_PED */ void sub_19464(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

/* IS_RESTART_ACTIVE */ void sub_19810()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_19870(int iParam0)
{
    iParam0 = 1;
    switch (l_U264)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_19952( ref l_U266 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4710() )))
            {
                l_U265 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_2170( ref l_U266, l_U265, 1, 1 );
             /* STARTTIMER */ sub_14897( ref l_U266 );
        }
        if ( /* ISTIMERDONE */ sub_19150( ref l_U266 ))
        {
             /* WRITESCRIPTLOG */ sub_501( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4710() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_4748() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_4748(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U264 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U264 = 2;
            }
            else
            {
                l_U264 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_501( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_20435();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_501( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_20435();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_19952(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_20435()
{
     /* WRITESCRIPTLOG */ sub_501( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_2350( ref l_U266 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_4748() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_4748(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U263 = 0;
    l_U263 = l_U263;
    l_U264 = 0;
    return;
}

/* P_CLEANUP_ALL */ void sub_21004()
{
     /* WRITE_STRING */ sub_700( "[GA] P_CLEANUP_ALL start" );
    ISEQ_UNREGISTER_ENTITY( 550058844, "passos" );
     /* TERMINATEISEQ */ sub_17817( 550058844, 0 );
    ISEQ_UNREGISTER_ENTITY( -1144523979, "passos" );
     /* TERMINATEISEQ */ sub_17817( -1144523979, 0 );
    ISEQ_UNREGISTER_ENTITY( 2111514372, "max" );
    ISEQ_UNREGISTER_ENTITY( 2111514372, "gmed" );
    ISEQ_UNREGISTER_ENTITY( 2111514372, "gmed1" );
    ISEQ_UNREGISTER_ENTITY( 2111514372, "gmed2" );
    ISEQ_UNREGISTER_ENTITY( 2111514372, "gmed3" );
     /* TERMINATEISEQ */ sub_17817( 2111514372, 0 );
     /* CLEANPED */ sub_11017( l_U677 );
     /* CLEANPEDARRAY */ sub_21248( ref l_U487 );
     /* CLEANPEDARRAY */ sub_21248( ref l_U601 );
     /* CLEANPEDARRAY */ sub_21248( ref l_U537 );
     /* CLEANOBJECT */ sub_10010( l_U486 );
     /* UNLOADANIMDICT */ sub_21364( "FACE_PASNYB" );
     /* UNLOADACTIONTREE */ sub_21451( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act" );
     /* WRITE_STRING */ sub_700( "[GA] P_CLEANUP_ALL end" );
    return;
}

/* CLEANPEDARRAY */ void sub_21248(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_11017( (uParam0^)[I] );
    }
    return;
}

/* UNLOADANIMDICT */ void sub_21364(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

/* UNLOADACTIONTREE */ void sub_21451(unknown uParam0)
{
    ACTION_TREE_UNLOAD( uParam0 );
    return;
}

/* P_SETUP_PLAYER_RELATIONSHIPS */ void sub_21628()
{
     /* WRITESCRIPTLOG */ sub_501( "SP", "P_SETUP_PLAYER_RELATIONSHIPS", "###" );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4710() )) == 0)
    {
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_4710(), 0, 1 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_4710(), 0, 2 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_4710(), 0, 6 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_4710(), 0, 7 );
    }
    return;
}

/* HANDLE_EVENTS */ void sub_22193()
{
    int iVar2;
    int I;
    int iVar4;

    if (l_U419 == 0)
    {
        switch (l_U322)
        {
            case 0:
             /* WRITESCRIPTLOG */ sub_501( "RJM", "Moving to FUNERAL_INTRO_BINK", 0 );
             /* SETUP_GAMEPLAY */ sub_4636();
            l_U322 = 1;
            case 1: if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                 /* WRITESCRIPTLOG */ sub_501( "RJM", "Moving to FUNERAL_WAIT_FOR_BINK", 0 );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                DO_SCREEN_FADE_IN( 0 );
                l_U322 = 2;
            }
            case 2:
            if (((l_U689 < l_U688) || (NOT IS_TRANSITION_MOVIE_PLAYING())) AND (NOT l_U679))
            {
                DISPLAYF( "Playing blendout cam, remaining bink frames: {}", 1, 513, GET_TRANSITION_MOVIE_FRAMES_REMAINING() );
                l_U679 = 1;
                CAMERA_PLAY_ANIMATED( "LEVEL_S_CEM_CP_01", "000750_06_GC_BLEND_OUT_08_01_CEM_ALT1", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
            }
            if ((l_U689 < l_U687) || (NOT IS_TRANSITION_MOVIE_PLAYING()))
            {
                 /* WRITESCRIPTLOG */ sub_501( "RJM", "Moving to FUNERAL_BLENDOUT", 0 );
                if (l_U689 < l_U687)
                {
                     /* WRITESCRIPTLOG */ sub_501( "RJM", "We've hit our safety frame number, just move forward now", 0 );
                }
                l_U678 = 1;
                l_U275 = 1;
                l_U322 = 3;
            }
            l_U689 = GET_TRANSITION_MOVIE_FRAMES_REMAINING();
            case 3:
            if ( /* HANDLE_08_01_BLENDOUT */ sub_22838())
            {
                 /* CREATE_PASSOS */ sub_29495();
                 /* CREATE_CAR_WAVE_THUGS */ sub_30044();
                 /* LOADSEAMLESSCUTSCENE */ sub_23480( l_U288, 0 );
                 /* LOADISEQ */ sub_1039( 1394393399, 0 );
                 /* P_GROUP_CHANGE_FIRING_DISTRIBUTION */ sub_31037( ref l_U595, 0.10000000 );
                 /* P_GROUP_CHANGE_FIRING_DISTRIBUTION */ sub_31037( ref l_U645, 0.10000000 );
                l_U682 = 1;
                 /* WRITESCRIPTLOG */ sub_501( "RJM", "Moving to FUNERAL_FIRST_FIGHT", 0 );
                l_U322 = 4;
            }
            break;
            case 4:
             /* CHECK_PASSOS_FAILURE */ sub_31324();
             /* P_UPDATE_MAX_VO */ sub_31804();
            if ( /* HASTIMERBEENACTIVATED */ sub_19952( ref l_U323 ))
            {
                if ( /* ISTIMERDONE */ sub_19150( ref l_U323 ))
                {
                     /* DISABLETIMER */ sub_34122( ref l_U323 );
                }
            }
            if ( /* HAS_MAX_SHOT_NEAR_PED */ sub_34177( g_U824, 2.00000000 ))
            {
                 /* P_DIAL_PAS_SHOT_AT */ sub_34283( g_U824 );
                 /* WRITESCRIPTLOG */ sub_501( "RJM", "Max has shot near Passos", 0 );
                PED_SET_ACTION_INTENTION( g_U824, 58, 1000, 0, 0, 0 );
            }
            if (NOT l_U680)
            {
                if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_34510( ref l_U353, 0 )) || ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_34510( ref l_U332, 0 )))
                {
                     /* ACTIVATE_CAR_WAVE_AND_LONE_WOLF_CONFRONTATION */ sub_34656();
                     /* ACTIVATE_MIDDLE_WAVE */ sub_35792();
                    l_U421 = 1;
                    if (l_U681)
                    {
                        l_U681 = 0;
                        for ( I = 0; I <= (l_U487 - 1); I++ )
                        {
                            if ( /* IS_PED_VALID */ sub_4804( l_U487[I] ))
                            {
                                SET_PED_CAN_TRIGGER_BULLET_CAM( l_U487[I], 0 );
                            }
                        }
                    }
                    l_U680 = 1;
                }
            }
            else if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_34510( ref l_U332, 0 ))
            {
                l_U421 = 1;
            }
            if (l_U683)
            {
                if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_34510( ref l_U374, 0 )) || (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_36052( ref l_U537 )) <= 2))
                {
                     /* WRITESCRIPTLOG */ sub_501( "RJM", "2 guys died, or Max got close, or bullet impacted, activate the closer guys to Passos", 0 );
                     /* ACTIVATE_CEMETERY_PED_ATTACK_MAX */ sub_34782( l_U537[1] );
                     /* ACTIVATE_CEMETERY_PED_ATTACK_MAX */ sub_34782( l_U537[3] );
                    l_U683 = 0;
                }
            }
            iVar2 =  /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_36052( ref l_U487 );
            iVar4 = 3;
            if (iVar2 == 0)
            {
                END_CONTEXT( "CEMETERY_WIFE_GRAVE" );
            }
            if (((IS_PED_AT_COORD(  /* PLAYER_PED_ID */ sub_4710(), g_U971[1]._fU0, 2.00000000, 2.00000000, 2.00000000, 0, 1 )) == 0) || ((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_4710() )) == 0))
            {
                if ((SCRIPT_VAR_EXISTS( "SP_SV_LEFT_GRAVE" )) == 0)
                {
                    SCRIPT_VAR_ADD_INT( "SP_SV_LEFT_GRAVE" );
                }
                SCRIPT_VAR_SET_INT( "SP_SV_LEFT_GRAVE", 1 );
            }
            if (l_U680)
            {
                iVar2 +=  /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_36052( ref l_U537 );
                iVar2 +=  /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_36052( ref l_U601 );
                iVar4 += 7;
            }
            if (l_U275 == 4)
            {
                if (iVar2 <= (iVar4 - 3))
                {
                     /* WRITESCRIPTLOG */ sub_501( "BSW", "3 guys died, bump the music", 0 );
                    l_U276 = 4;
                }
            }
            if (iVar2 == 1)
            {
                if (NOT l_U681)
                {
                     /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_36655( ref l_U487 );
                    if (l_U680)
                    {
                        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
                         /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_36655( ref l_U537 );
                         /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_36655( ref l_U601 );
                        FORCE_CUSTOM_WIPE_BULLET_CAMERA( 1 );
                    }
                    l_U681 = 1;
                }
            }
            else if (iVar2 == 0)
            {
                if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
                {
                    if (NOT IS_LAST_MAN_STANDING_ACTIVE())
                    {
                        if (l_U680)
                        {
                            l_U276 = 5;
                            l_U682 = 0;
                             /* WRITESCRIPTLOG */ sub_501( "RJM", "Moving to FUNERAL_MIDSCENE_02A_02B", 0 );
                            g_U1783 = 1;
                            RESET_PED_MODEL_LOD_DISTANCES( g_U1334 );
                            l_U322 = 7;
                        }
                        else
                        {
                            l_U421 = 1;
                            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
                            CAMERA_SNAP_POINT_AT_COORD( -103.00000000, -10.30000000, -0.60000000 );
                             /* WRITESCRIPTLOG */ sub_501( "RJM", "Moving to FUNERAL_PASSOS_TROUBLE_BLENDOUT", 0 );
                            l_U322 = 5;
                        }
                    }
                }
            }
            break;
            case 5:
            l_U681 = 0;
            CAMERA_CLEAR_POINT_AT_TARGET();
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
             /* WRITESCRIPTLOG */ sub_501( "RJM", "Moving to FUNERAL_SAVE_PASSOS", 0 );
            l_U322 = 6;
            break;
            case 6:
             /* P_UPDATE_MAX_VO */ sub_31804();
             /* CHECK_PASSOS_FAILURE */ sub_31324();
            if (l_U683)
            {
                if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_34510( ref l_U374, 0 )) || (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_36052( ref l_U537 )) <= 2))
                {
                     /* WRITESCRIPTLOG */ sub_501( "RJM", "2 guys died, or Max got close, or bullet impacted, activate the closer guys to Passos", 0 );
                     /* ACTIVATE_CEMETERY_PED_ATTACK_MAX */ sub_34782( l_U537[1] );
                     /* ACTIVATE_CEMETERY_PED_ATTACK_MAX */ sub_34782( l_U537[3] );
                    l_U683 = 0;
                }
            }
            if ( /* HAS_MAX_SHOT_NEAR_PED */ sub_34177( g_U824, 2.00000000 ))
            {
                 /* P_DIAL_PAS_SHOT_AT */ sub_34283( g_U824 );
                 /* WRITESCRIPTLOG */ sub_501( "RJM", "Max has shot near Passos", 0 );
                PED_SET_ACTION_INTENTION( g_U824, 58, 1000, 0, 0, 0 );
            }
            if (NOT l_U680)
            {
                if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_34510( ref l_U353, 0 )) || ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_34510( ref l_U332, 0 )))
                {
                     /* ACTIVATE_CAR_WAVE_AND_LONE_WOLF_CONFRONTATION */ sub_34656();
                     /* ACTIVATE_MIDDLE_WAVE */ sub_35792();
                    l_U680 = 1;
                }
            }
            iVar2 = ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_36052( ref l_U537 )) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_36052( ref l_U601 ));
            if (iVar2 == 1)
            {
                if (NOT l_U681)
                {
                    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
                     /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_36655( ref l_U537 );
                     /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_36655( ref l_U601 );
                    FORCE_CUSTOM_WIPE_BULLET_CAMERA( 1 );
                    l_U681 = 1;
                }
            }
            else if (iVar2 == 0)
            {
                if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
                {
                    if (NOT IS_LAST_MAN_STANDING_ACTIVE())
                    {
                        l_U276 = 5;
                        l_U682 = 0;
                         /* WRITESCRIPTLOG */ sub_501( "RJM", "Moving to FUNERAL_MIDSCENE_02A_02B", 0 );
                        g_U1783 = 1;
                        RESET_PED_MODEL_LOD_DISTANCES( g_U1334 );
                        l_U322 = 7;
                    }
                }
            }
            break;
            case 7:
            if ( /* PLAY_CUTSCENE_08_02A */ sub_37742( 1 ))
            {
                g_U1785 = 1;
                 /* WRITESCRIPTLOG */ sub_501( "RJM", "Moving to FUNERAL_PREP_FOR_MPM", 0 );
                l_U322 = 8;
            }
            if (l_U321 == 3)
            {
                g_U1784 = 1;
            }
            break;
            case 8:
             /* P_OPENDOOR */ sub_41334( ref g_U1403, 0, 1, 1065353216 );
             /* P_OPENDOOR */ sub_41334( ref g_U1410, 1, 1, 1065353216 );
             /* WRITESCRIPTLOG */ sub_501( "RJM", "Moving to FUNERAL_DONE", 0 );
            l_U322 = 9;
            break;
            case 9:
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            break;
        }
    }
    return;
}

/* HANDLE_08_01_BLENDOUT */ int sub_22838()
{
    switch (l_U417)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_501( "SP", "eBlend0801State = BLEND_SETUP", 0 );
         /* NIS_PRE_SETUP */ sub_16438( 1, 0, 0, 1 );
        SET_ADRENALINE_AMT( 0.00000000 );
         /* LOADISEQ */ sub_1039( 2111514372, 1 );
         /* SNAP_MAX_TO_INITIAL_COVER */ sub_9593();
        if ((ISEQ_QUERY_STATE( 2111514372, 3 )) == 0)
        {
             /* WRITESCRIPTLOG */ sub_501( "bsw", "starting 08_01_blendout", 0 );
             /* TELEPORTPED */ sub_9729( l_U487[0], g_U1303, g_U1306 );
             /* TELEPORTPED */ sub_9729( l_U487[1], g_U1307, g_U1310 );
             /* TELEPORTPED */ sub_9729( l_U487[2], g_U1311, g_U1314 );
            ISEQ_REGISTER_ENTITY( 2111514372, "max",  /* PLAYER_PED_ID */ sub_4710(), 0 );
            ISEQ_REGISTER_ENTITY( 2111514372, "gmed", l_U487[0], 0 );
            ISEQ_REGISTER_ENTITY( 2111514372, "gmed1", l_U487[1], 0 );
            ISEQ_REGISTER_ENTITY( 2111514372, "gmed2", l_U487[2], 0 );
            ISEQ_START( 2111514372 );
        }
        l_U417 = 2;
         /* WRITESCRIPTLOG */ sub_501( "SP", "eBlend0801State = moving to START", 0 );
        break;
        case 2:
        if (l_U678)
        {
             /* WRITESCRIPTLOG */ sub_501( "SP", "eBlend0801State = BLEND_START", 0 );
            if (NOT IS_ANIMATED_CAMERA_PLAYING())
            {
                CAMERA_PLAY_ANIMATED( "LEVEL_S_CEM_CP_01", "000750_06_GC_BLEND_OUT_08_01_CEM_ALT1", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
            }
             /* LOADSEAMLESSCUTSCENE */ sub_23480( l_U288, 0 );
             /* LOADMODEL */ sub_755( g_U1332, 0 );
            PED_SET_ACTION_INTENTION(  /* PLAYER_PED_ID */ sub_4710(), 47, 1000, 0, 0, 0 );
            PED_SET_ACTION_INTENTION( l_U487[0], 47, 1000, 0, 0, 0 );
            PED_SET_ACTION_INTENTION( l_U487[1], 47, 1000, 0, 0, 0 );
            PED_SET_ACTION_INTENTION( l_U487[2], 47, 1000, 0, 0, 0 );
            l_U276 = 3;
            l_U417 = 3;
        }
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_501( "SP", "eBlend0801State = BLEND_FIRST_FRAME", 0 );
        if ((IS_DEATH_PANEL_WIPE_ALLOWED()) || ((IS_SCREEN_FADING_OUT()) || (IS_SCREEN_FADED_OUT())))
        {
            DO_SCREEN_FADE_IN( 0 );
        }
         /* P_START_CONFRONT_PEDS */ sub_24038();
        if (NOT l_U450._fU0)
        {
             /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_24338( ref l_U450, g_U826,  /* PLAYER_PED_ID */ sub_4710(), g_U971[1]._fU0, g_U971[1]._fU12, g_U971[1]._fU16, g_U971[1]._fU20, 1 );
        }
        l_U417 = 4;
         /* WRITESCRIPTLOG */ sub_501( "SP", "eBlend0801State = BLEND_PLAYING", 0 );
        case 4:
        if ((CAMERA_ANIMATED_CURRENT_TIME() + 1) >= (CAMERA_ANIMATED_LENGTH( "LEVEL_S_CEM_CP_01", "000750_06_GC_BLEND_OUT_08_01_CEM_ALT1" )))
        {
            CAMERA_FREEZE_FRAME( 1, 500, 0, 0 );
             /* WRITESCRIPTLOG */ sub_501( "SP", "eBlend0801State = BLEND_FINISHED", 0 );
            l_U417 = 5;
        }
        break;
        case 5:
        SET_PED_MODEL_LOD_DISTANCES( g_U1334, 25.00000000, 100.00000000 );
         /* WRITESCRIPTLOG */ sub_501( "SP", "eBlend0801State = BLEND_IDLE", 0 );
         /* NIS_POST_SETUP */ sub_29168( 1, 1 );
        return 1;
        break;
    }
    return 0;
}

/* LOADSEAMLESSCUTSCENE */ void sub_23480(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* P_START_CONFRONT_PEDS */ void sub_24038()
{
    int I;

     /* WRITESCRIPTLOG */ sub_501( "RJM", "P_START_CONFRONT_PEDS", 0 );
     /* PED_ARRAY_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_13330( ref l_U487, 0 );
     /* PED_ARRAY_SET_COMBAT_MOVEMENT */ sub_13129( ref l_U537, 2 );
    for ( I = 0; I <= (l_U487 - 1); I++ )
    {
        if ((NOT (IS_PED_RAGDOLL( l_U487[I], 0 ))) AND ((NOT (IS_PED_INJURED( l_U487[I] ))) AND (( /* IS_MAX_VALID */ sub_4685()) AND ( /* IS_PED_VALID */ sub_4804( l_U487[I] )))))
        {
            REGISTER_TARGET( l_U487[I],  /* PLAYER_PED_ID */ sub_4710() );
            TASK_COMBAT_PED( l_U487[I],  /* PLAYER_PED_ID */ sub_4710() );
        }
    }
    return;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_24338(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_501( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_501( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_8276( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_24629( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_25106( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_25106( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25366( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_25106( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25366( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25366( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_25106( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25366( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25366( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25366( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_25106( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25366( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25366( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25366( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25366( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_26946( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U38, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_501( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_24629(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_5333( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_501( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_501( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_25106(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_25366(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_26946(int iParam0)
{
     /* WRITE_STRING */ sub_700( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_27034( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_27111( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_27111( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_27111( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_14384( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_14384( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_14384( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_14384( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_14384( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_14384( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_14384( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_14384( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_14384( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_14384( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_14384( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_27111( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_14384( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_14384( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_14384( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_27111( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_27940( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_14384( iParam0->_fU52 );
     /* WRITE_STRING */ sub_700( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_14384( iParam0->_fU96 );
     /* WRITE_STRING */ sub_700( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_14384( iParam0->_fU100 );
     /* WRITE_STRING */ sub_700( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_14384( iParam0->_fU104 );
     /* WRITE_STRING */ sub_700( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_14384( iParam0->_fU108 );
     /* WRITE_STRING */ sub_700( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_14384( iParam0->_fU112 );
     /* WRITE_STRING */ sub_700( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_14384( iParam0->_fU116 );
     /* WRITE_STRING */ sub_700( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_14384( iParam0->_fU120 );
     /* WRITE_STRING */ sub_700( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_14384( iParam0->_fU124 );
     /* WRITE_STRING */ sub_700( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_14384( iParam0->_fU128 );
     /* WRITE_STRING */ sub_700( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_14384( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_14384( l_U38 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_14384( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_27034(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_27111(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_27940(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* NIS_POST_SETUP */ void sub_29168(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4710() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_4748(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_4710(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_29266();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_29266()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4710() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_4710(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_4710(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_4710(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_4710(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* CREATE_PASSOS */ void sub_29495()
{
     /* LOADMODEL */ sub_755( g_U1332, 1 );
     /* CLEANPED */ sub_11017( g_U824 );
    g_U824 =  /* CREATEPED */ sub_11109( ref l_U651 );
     /* LOADISEQ */ sub_1039( 550058844, 1 );
    if ( /* IS_PED_VALID */ sub_4804( g_U824 ))
    {
         /* F_GIVEPEDWEAPON */ sub_7500( g_U824, -862236369, 25000, 0, 0 );
         /* P_SETUP_PASSOS_GENERAL_ATTRIBUTES */ sub_29607( ref g_U824 );
         /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_13413( ref g_U824, 0 );
        SET_PED_DEFAULT_AIM_AT_PED( g_U824,  /* PLAYER_PED_ID */ sub_4710() );
        ISEQ_REGISTER_ENTITY( 550058844, "passos", g_U824, 0 );
        ISEQ_START( 550058844 );
    }
    return;
}

/* P_SETUP_PASSOS_GENERAL_ATTRIBUTES */ void sub_29607(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_501( "SBA", "P_SETUP_PASSOS_GENERAL_ATTRIBUTES", "***" );
    if ( /* IS_PED_VALID */ sub_4804( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^), 1 );
        SET_PED_VALIDATE_BULLET_CAM_HIT( (uParam0^), 0 );
        SET_AI_SHOULD_ALWAYS_MISS_PED( (uParam0^), 1 );
        SET_CAN_AI_KICK_THROUGH_CORPSES( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_AI_TEMPLATE( (uParam0^), "AIT_NORMAL" );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( (uParam0^), 1 );
        SET_PED_AS_ONE_SHOT_KILL( (uParam0^), 1 );
        SET_PED_GORE( (uParam0^), 0 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), 0 );
        SET_PED_PROOFS( (uParam0^), 0, 1, 1, 1, 1 );
        SET_PED_ALLOWED_TO_SURRENDER( (uParam0^), 0 );
        SET_PED_CAN_AVOID_DEATH_ZONES( (uParam0^), 0 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( (uParam0^), 1 );
        SET_PED_CAN_PUSH_PLAYER( (uParam0^), 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_CAN_BE_TARGETTED( (uParam0^), 0 );
        SET_PED_CONSUMING_AMMO( (uParam0^), 0 );
        SET_PED_PATH_CAN_USE_CLIMBOVERS( (uParam0^), 1 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( (uParam0^), 1 );
    }
    return;
}

/* CREATE_CAR_WAVE_THUGS */ void sub_30044()
{
     /* MAL_WRITESCRIPTLOG */ sub_30102( "CREATE_CAR_WAVE_THUGS" );
     /* CLEANPEDARRAY */ sub_21248( ref l_U537 );
     /* PED_ARRAY_INITIALIZE */ sub_10471( ref l_U542, ref l_U537, ref l_U595, -691403429, 0.00000000, ref g_U1212, 0, 0, 25000, 2, 0, 25000, 0 );
     /* PED_ARRAY_SET_TETHERBOX */ sub_30272( ref l_U537, l_U416, 1 );
     /* PED_ARRAY_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_13330( ref l_U537, 1 );
    SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U595._fU0, 1 );
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_12986( ref l_U537, "CAR_THUG" );
     /* P_DEACTIVATEPEDARRAY */ sub_16617( ref l_U537 );
     /* PED_ARRAY_INITIALIZE */ sub_10471( ref l_U605, ref l_U601, ref l_U645, -691403429, 0.00000000, ref g_U1212, 0, 0, 25000, 2, 0, 25000, 0 );
     /* PED_ARRAY_SET_TETHERBOX */ sub_30272( ref l_U601, l_U416, 1 );
     /* PED_ARRAY_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_13330( ref l_U601, 1 );
    SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U645._fU0, 1 );
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_12986( ref l_U601, "MIDDLE_WAVE" );
     /* PED_TASK_COMBAT_MOVE_TO_COVER */ sub_30717( l_U601[0], "GenCover", "25806C4F_A55C7C4C_Corner1", g_U824, 1 );
     /* PED_TASK_COMBAT_MOVE_TO_COVER */ sub_30717( l_U601[1], "GenCover", "25806C4F_D615C04E_Corner2", g_U824, 1 );
     /* PED_TASK_COMBAT_MOVE_TO_COVER */ sub_30717( l_U601[2], "GenCover", "25806C4F_D0D8C702_Corner1", g_U824, 1 );
     /* P_DEACTIVATEPEDARRAY */ sub_16617( ref l_U601 );
    return;
}

/* MAL_WRITESCRIPTLOG */ void sub_30102(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar3, 1537, "MSWW", 1537, uParam0, 1537, "###" );
    return;
}

/* PED_ARRAY_SET_TETHERBOX */ void sub_30272(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* PED_SET_TETHERBOX */ sub_30334( ref (uParam0^)[I], uParam1, uParam2 );
    }
    return;
}

/* PED_SET_TETHERBOX */ void sub_30334(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if ( /* IS_PED_VALID */ sub_4804( (uParam0^) ))
    {
        RESET_PED_TETHERING( (uParam0^) );
         /* P_TETHERPED */ sub_30393( ref uParam1, (uParam0^), uParam2 );
    }
    return;
}

/* P_TETHERPED */ void sub_30393(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

/* PED_TASK_COMBAT_MOVE_TO_COVER */ void sub_30717(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if ( /* IS_PED_VALID */ sub_4804( uParam0 ))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
         /* PED_SET_LOCK_TO_COVER */ sub_30783( ref uParam0, uParam4 );
        TASK_COMBAT_MOVE_TO_COVER( uParam0, uParam1, uParam2, uParam3 );
    }
    return;
}

/* PED_SET_LOCK_TO_COVER */ void sub_30783(unknown uParam0, unknown uParam1)
{
    if ( /* IS_PED_VALID */ sub_4804( (uParam0^) ))
    {
        SET_PED_FLAG_LOCK_TO_COVER( (uParam0^), uParam1 );
    }
    return;
}

/* P_GROUP_CHANGE_FIRING_DISTRIBUTION */ void sub_31037(int iParam0, unknown uParam1)
{
    iParam0->_fU4 = uParam1;
    if (DOES_GROUP_EXIST( iParam0->_fU0 ))
    {
        SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
        SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    }
    else
    {
         /* WRITE_STRING */ sub_700( "[GA] Warning - AI Group does not exist when calling P_GROUP_CHANGE_FIRING_DISTRIBUTION" );
    }
    return;
}

/* CHECK_PASSOS_FAILURE */ void sub_31324()
{
    if (NOT l_U684)
    {
        if (( /* IS_PED_VALID */ sub_4804( g_U824 )) AND ( /* IS_MAX_VALID */ sub_4685()))
        {
            if (( /* GET_DISTANCE_BETWEEN_PEDS */ sub_31400(  /* PLAYER_PED_ID */ sub_4710(), g_U824, 1 )) <= 23.00000000)
            {
                 /* WRITESCRIPTLOG */ sub_501( "RJM", "Player got close to Passos, start checking for failure", 0 );
                l_U684 = 1;
            }
        }
    }
    else if ( /* F_ISPLAYERINTRIGGERBOX */ sub_31656( l_U395 ))
    {
        l_U685 = 1;
        l_U418 = 1;
    }
    return;
}

/* GET_DISTANCE_BETWEEN_PEDS */ void sub_31400(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    }
    if (bParam2)
    {
        return VDIST( uVar5, uVar8 );
        break;
    }
    return VDIST( uVar5._fU0, uVar5._fU4, 0, uVar8._fU0, uVar8._fU4, 0 );
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_31656(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_31699(  /* PLAYER_PED_ID */ sub_4710(), uParam0 );
}

/* F_ISPEDINTRIGGERBOX */ int sub_31699(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* P_UPDATE_MAX_VO */ void sub_31804()
{
    switch (l_U420)
    {
        case 0:
        if (l_U421)
        {
             /* P_CREATE_AND_START_TIMER */ sub_31901( ref l_U422, 1500 );
             /* WRITESCRIPTLOG */ sub_501( "RJM", "P_UPDATE_MAX_VO - eMAX_VO_START_LINE1", 0 );
            l_U420 = 1;
        }
        break;
        case 1:
        if ( /* ISTIMERDONE */ sub_19150( ref l_U422 ))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_32045( ref l_U431 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_32156( 0,  /* PLAYER_PED_ID */ sub_4710(), "MAX", ref l_U431, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_32156( 1,  /* PLAYER_PED_ID */ sub_4710(), "MAX", ref l_U431, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_32426( "SCMT_WTHSPSA", ref l_U431, 8, 1 );
             /* P_CREATE_AND_START_TIMER */ sub_31901( ref l_U422, 30000 );
             /* WRITESCRIPTLOG */ sub_501( "RJM", "P_UPDATE_MAX_VO - eMAX_VO_WAIT_FOR_LINE1_END", 0 );
            l_U420 = 2;
        }
        break;
        case 2:
        if ( /* ISTIMERDONE */ sub_19150( ref l_U422 ))
        {
             /* WRITESCRIPTLOG */ sub_501( "RJM", "P_UPDATE_MAX_VO - eMAX_VO_START_LINE2", 0 );
            l_U420 = 3;
        }
        break;
        case 3:
        if (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_33483()))
        {
            if (NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_31656( l_U374 )))
            {
                if ( /* F_HAS_ANYONE_NOT_SHOT_AROUND_PLAYER_RECENTLY */ sub_33605( 3000, 15 ))
                {
                     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_32045( ref l_U431 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_32156( 0,  /* PLAYER_PED_ID */ sub_4710(), "MAX", ref l_U431, 2, 0 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_32156( 1,  /* PLAYER_PED_ID */ sub_4710(), "MAX", ref l_U431, 2, 0 );
                     /* PLAY_SINGLE_SPEECH */ sub_32426( "SCMT_MLPALA", ref l_U431, 8, 1 );
                     /* WRITESCRIPTLOG */ sub_501( "RJM", "P_UPDATE_MAX_VO - eMAX_VO_DONE", 0 );
                    l_U420 = 4;
                }
            }
        }
        break;
        case 4: break;
    }
    return;
}

/* P_CREATE_AND_START_TIMER */ void sub_31901(unknown uParam0, unknown uParam1)
{
     /* CREATETIMER */ sub_2170( uParam0, uParam1, 1, 0 );
     /* STARTTIMER */ sub_14897( uParam0 );
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_32045(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_32156(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_32426(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_32471( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_32471(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_32558( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_32558(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_32610( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_33128( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_32610(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_33128(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* IS_ANY_SPEECH_CURRENTLY_PLAYING */ void sub_33483()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

/* F_HAS_ANYONE_NOT_SHOT_AROUND_PLAYER_RECENTLY */ int sub_33605(unknown uParam0, unknown uParam1)
{
    unknown uVar4;

    if (NOT ( /* HASTIMERBEENACTIVATED */ sub_19952( ref l_U441 )))
    {
         /* P_CREATE_AND_START_TIMER */ sub_31901( ref l_U441, uParam0 );
    }
    else if ( /* ISTIMERDONE */ sub_19150( ref l_U441 ))
    {
         /* WRITESCRIPTLOG */ sub_501( "SBA", "F_HAS_ANYONE_NOT_SHOT_AROUND_PLAYER_RECENTLY: Returning TRUE", 0 );
        return 1;
    }
    else if ( /* IS_MAX_VALID */ sub_4685())
    {
        if (HAS_SHOT_BEEN_FIRED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_4710() ), uParam1, 0, ref uVar4 ))
        {
             /* WRITESCRIPTLOG */ sub_501( "SBA", "F_HAS_ANYONE_NOT_SHOT_AROUND_PLAYER_RECENTLY: Shot fired, resetting timer", 0 );
             /* RESETTIMER */ sub_2350( ref l_U441 );
        }
    };;;
    return 0;
}

/* DISABLETIMER */ void sub_34122(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

/* HAS_MAX_SHOT_NEAR_PED */ int sub_34177(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if ( /* IS_PED_VALID */ sub_4804( uParam0 ))
    {
        if (HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 ), uParam1, ref iVar4 ))
        {
            if (iVar4 == ( /* PLAYER_PED_ID */ sub_4710()))
            {
                return 1;
            }
        }
    }
    return 0;
}

/* P_DIAL_PAS_SHOT_AT */ void sub_34283(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4710() ))))
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_32045( ref l_U49 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_32156( 1, uParam0, "PASSOS", ref l_U49, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_32156( 0,  /* PLAYER_PED_ID */ sub_4710(), "MAX", ref l_U49, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_32426( "SCMT_LPPSH", ref l_U49, 8, 1 );
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_34510(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_31699(  /* PLAYER_PED_ID */ sub_4710(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* ACTIVATE_CAR_WAVE_AND_LONE_WOLF_CONFRONTATION */ void sub_34656()
{
    int I;

     /* WRITESCRIPTLOG */ sub_501( "RJM", "ACTIVATE_CAR_WAVE_AND_LONE_WOLF_CONFRONTATION", 0 );
     /* ACTIVATE_CEMETERY_PED_ATTACK_MAX */ sub_34782( l_U537[0] );
     /* ACTIVATE_CEMETERY_PED_ATTACK_MAX */ sub_34782( l_U537[2] );
     /* ACTIVATE_CEMETERY_PED_ATTACK_PASSOS */ sub_35493( l_U537[1] );
     /* ACTIVATE_CEMETERY_PED_ATTACK_PASSOS */ sub_35493( l_U537[3] );
    for ( I = 0; I <= (l_U487 - 1); I++ )
    {
        if ( /* IS_PED_VALID */ sub_4804( l_U487[I] ))
        {
            SET_PED_COMBAT_ATTRIBUTES( l_U487[I], 8192, 1 );
        }
    }
    l_U683 = 1;
     /* P_GROUP_CHANGE_FIRING_DISTRIBUTION */ sub_31037( ref l_U595, 1.00000000 );
    return;
}

/* ACTIVATE_CEMETERY_PED_ATTACK_MAX */ void sub_34782(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if ((NOT (IS_PED_RAGDOLL( uParam0, 0 ))) AND ((NOT (IS_PED_INJURED( uParam0 ))) AND (( /* IS_MAX_VALID */ sub_4685()) AND ( /* IS_PED_VALID */ sub_4804( uParam0 )))))
    {
         /* P_ACTIVATEPED */ sub_34870( uParam0 );
        uVar3 = GET_PED_COMBAT_RANGE_MIN( uParam0 );
        fVar4 = (GET_PED_COMBAT_RANGE_MAX( uParam0 )) / 4;
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( uParam0, 0 );
        SET_PED_FLAG_LOCK_TO_COVER( uParam0, 0 );
         /* PED_SET_COMBAT_MOVEMENT */ sub_13195( ref uParam0, 2 );
         /* PED_SET_COMBAT_RANGES */ sub_35040( ref uParam0, uVar3, fVar4 );
         /* PED_SET_REGISTER_TARGET_PLAYER */ sub_35140( ref uParam0 );
         /* PED_SET_LOCKED_ON_PLAYER */ sub_35295( ref uParam0 );
        CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
        TASK_COMBAT_PED( uParam0,  /* PLAYER_PED_ID */ sub_4710() );
    }
    return;
}

/* P_ACTIVATEPED */ void sub_34870(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

/* PED_SET_COMBAT_RANGES */ void sub_35040(unknown uParam0, float fParam1, float fParam2)
{
    if ( /* IS_PED_VALID */ sub_4804( (uParam0^) ))
    {
        if (fParam1 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam1 );
        }
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam2 );
        }
    }
    return;
}

/* PED_SET_REGISTER_TARGET_PLAYER */ void sub_35140(unknown uParam0)
{
    if (( /* IS_MAX_VALID */ sub_4685()) AND ( /* IS_PED_VALID */ sub_4804( (uParam0^) )))
    {
         /* PED_SET_REGISTER_TARGET */ sub_35209( uParam0,  /* PLAYER_PED_ID */ sub_4710() );
    }
    return;
}

/* PED_SET_REGISTER_TARGET */ void sub_35209(unknown uParam0, unknown uParam1)
{
    if (( /* IS_PED_VALID */ sub_4804( uParam1 )) AND ( /* IS_PED_VALID */ sub_4804( (uParam0^) )))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* PED_SET_LOCKED_ON_PLAYER */ void sub_35295(unknown uParam0)
{
    if (( /* IS_MAX_VALID */ sub_4685()) AND ( /* IS_PED_VALID */ sub_4804( (uParam0^) )))
    {
         /* PED_SET_LOCKED_ON_PED */ sub_35358( uParam0,  /* PLAYER_PED_ID */ sub_4710() );
    }
    return;
}

/* PED_SET_LOCKED_ON_PED */ void sub_35358(unknown uParam0, unknown uParam1)
{
    if (( /* IS_PED_VALID */ sub_4804( uParam1 )) AND ( /* IS_PED_VALID */ sub_4804( (uParam0^) )))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* ACTIVATE_CEMETERY_PED_ATTACK_PASSOS */ void sub_35493(unknown uParam0)
{
    if ((NOT (IS_PED_RAGDOLL( uParam0, 0 ))) AND ((NOT (IS_PED_INJURED( uParam0 ))) AND (( /* IS_PED_VALID */ sub_4804( g_U824 )) AND ( /* IS_PED_VALID */ sub_4804( uParam0 )))))
    {
         /* P_ACTIVATEPED */ sub_34870( uParam0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( uParam0, 0 );
        SET_PED_FLAG_LOCK_TO_COVER( uParam0, 1 );
         /* PED_SET_COMBAT_MOVEMENT */ sub_13195( ref uParam0, 0 );
         /* PED_SET_REGISTER_TARGET */ sub_35209( ref uParam0, g_U824 );
         /* PED_SET_LOCKED_ON_PED */ sub_35358( ref uParam0, g_U824 );
        CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
        TASK_COMBAT_SNAP_TO_COVER_COORDS( uParam0, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 ), g_U824 );
    }
    return;
}

/* ACTIVATE_MIDDLE_WAVE */ void sub_35792()
{
    int I;

     /* WRITESCRIPTLOG */ sub_501( "RJM", "ACTIVATE_MIDDLE_WAVE", 0 );
    for ( I = 0; I <= 2; I++ )
    {
         /* ACTIVATE_CEMETERY_PED_ATTACK_MAX */ sub_34782( l_U601[I] );
    }
     /* P_GROUP_CHANGE_FIRING_DISTRIBUTION */ sub_31037( ref l_U645, 1.00000000 );
    return;
}

/* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ void sub_36052(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

/* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ void sub_36655(unknown uParam0)
{
    int I;

    if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_36052( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

/* PLAY_CUTSCENE_08_02A */ void sub_37742(boolean bParam0)
{
    int Result;

    Result = 0;
    switch (l_U321)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_501( "RJM", "PLAY_CUTSCENE_08_02a: CUTSCENE_LOADING", 0 );
         /* NIS_PRE_SETUP */ sub_16438( 1, 0, 0, 1 );
        if (NOT bParam0)
        {
             /* BLOCKLOAD_08_02A_ASSETS */ sub_37892();
             /* LOADSEAMLESSCUTSCENE */ sub_23480( l_U288, 1 );
             /* CREATE_08_02A_PEDS_AND_OBJECTS */ sub_37947();
        }
         /* REGISTER_PEDS_CUT_08_02A */ sub_38171();
        REGISTER_HIDE_ENTITY_AT_POSITION( g_U1417._fU0, g_U1417._fU4 );
        REGISTER_HIDE_ENTITY_AT_POSITION( g_U1424._fU0, g_U1424._fU4 );
        l_U321 = 2;
        break;
        case 2:
        CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        CUTSCENE_ENABLE_SKIP( 0 );
        START_SEAMLESS_CUTSCENE();
        l_U321 = 3;
        break;
        case 3:
        START_PANEL_WIPE( 300, 6 );
        if ((IS_SCREEN_FADING_OUT()) || (IS_SCREEN_FADED_OUT()))
        {
            DO_SCREEN_FADE_IN( 500 );
        }
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        l_U321 = 4;
        break;
        case 4:
        if (HAS_CUTSCENE_FINISHED())
        {
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U971[2]._fU16, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U971[2]._fU20, 1065353216, 0 );
             /* CLEANUP_08_02A_ASSETS */ sub_40912();
             /* UNLOAD_08_02A_ASSETS */ sub_40964();
             /* NIS_POST_SETUP */ sub_29168( 1, 1 );
            CUTSCENE_ENABLE_SKIP( 1 );
             /* WRITESCRIPTLOG */ sub_501( "RJM", "PLAY_CUTSCENE_08_02a end", 0 );
            l_U321 = 5;
            Result = 1;
        }
        break;
    }
    return Result;
}

/* BLOCKLOAD_08_02A_ASSETS */ void sub_37892()
{
    return;
}

/* CREATE_08_02A_PEDS_AND_OBJECTS */ void sub_37947()
{
     /* WRITESCRIPTLOG */ sub_501( "RJM", "CREATE_08_02a_PEDS_AND_OBJECTS - start", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_2680( ref l_U308, 0, 0, 0, 0.00000000, 1265654828, 26, 6, 0, 0, 0 );
    l_U307 =  /* CREATEPED */ sub_11109( ref l_U308 );
    SET_PED_NAME_DEBUG( l_U307, "SHITPASSOS" );
     /* WRITESCRIPTLOG */ sub_501( "RJM", "CREATE_08_02a_PEDS_AND_OBJECTS - end", 0 );
    return;
}

/* REGISTER_PEDS_CUT_08_02A */ void sub_38171()
{
     /* WRITESCRIPTLOG */ sub_501( "RJM", "REGISTER_PEDS_CUT_08_02a - start", 0 );
    if ( /* IS_MAX_VALID */ sub_4685())
    {
         /* WRITESCRIPTLOG */ sub_501( "RJM", "Registering player with 04_01_pt01", 0 );
         /* P_PLAYER_HOLSTER_WEAPONS */ sub_38320( ref l_U289, 1, 1 );
         /* P_SET_TWO_HANDED_WEAPON_VISIBLE */ sub_39684( l_U289, 0 );
         /* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ sub_39817( 1 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_4710(), 0, 0 ), "W_PI_Clt1911_Aa_H^1", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_4710(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_4710(), g_U971[2]._fU0, g_U971[2]._fU12 );
        ISEQ_REGISTER_ENTITY( 1394393399, "cem_vig01_max",  /* PLAYER_PED_ID */ sub_4710(), 0 );
    }
    if ( /* IS_PED_VALID */ sub_4804( g_U824 ))
    {
         /* WRITESCRIPTLOG */ sub_501( "RJM", "Registering piPassos with 08_02a_cem", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U824, "Pass_NY_H", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U824, 0, 0 ), "W_PI_Clt1911_Aa_H", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U824, ref g_U1249 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U824, g_U779[2]._fU0, g_U779[2]._fU12 );
        ISEQ_REGISTER_ENTITY( 1394393399, "cem_vig01_pas", g_U824, 0 );
    }
    CUTSCENE_REGISTER_ISEQ( 1394393399 );
     /* WRITESCRIPTLOG */ sub_501( "RJM", "REGISTER_PEDS_CUT_08_02a - end", 0 );
    return;
}

/* P_PLAYER_HOLSTER_WEAPONS */ void sub_38320(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

     /* RESET_WEAPON_CONFIG */ sub_38359( iParam0 );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4710() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_4710(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_38560( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if (( /* IS_WEAPON_TWO_HANDED */ sub_38814( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_4710(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_4710(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_4710(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_4710(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4710() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_4710(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_4710(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_4710(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_4710(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4710() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_4710(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if (( /* IS_WEAPON_TWO_HANDED */ sub_38814( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_4710(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_4710(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_4710(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

/* RESET_WEAPON_CONFIG */ void sub_38359(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

/* IS_WEAPON_SINGLE_HANDED */ int sub_38560(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* IS_WEAPON_TWO_HANDED */ int sub_38814(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* P_SET_TWO_HANDED_WEAPON_VISIBLE */ void sub_39684(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;

    uVar21 = uParam0._fU24._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar21, uParam18 );
    }
    uVar22 = uParam0._fU60._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar22, uParam18 );
    }
    return;
}

/* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ void sub_39817(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4710() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_4710(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if ((( /* IS_WEAPON_SINGLE_HANDED */ sub_38560( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_39965();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_4710(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

/* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ int sub_39965()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4710() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_4710(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_38560( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_4710(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_4710(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_4710(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

/* CLEANUP_08_02A_ASSETS */ void sub_40912()
{
     /* CLEANPED */ sub_11017( l_U307 );
    return;
}

/* UNLOAD_08_02A_ASSETS */ void sub_40964()
{
     /* UNLOADMODEL */ sub_41002( g_U1332 );
    return;
}

/* UNLOADMODEL */ void sub_41002(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
         /* WRITE_STRING */ sub_700( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

/* P_OPENDOOR */ void sub_41334(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if (( /* F_DOESDOOREXIST */ sub_41359( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_41443( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_41359(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_41443(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_UNLOAD_ASSETS_FUNERAL */ void sub_41715()
{
     /* WRITE_STRING */ sub_700( "[GA] P_UNLOAD_ASSETS_FUNERAL start" );
     /* UNLOADMODEL */ sub_41002( g_U1334 );
     /* UNLOADMODEL */ sub_41002( g_U1362 );
     /* UNLOADMODEL */ sub_41002( g_U1330 );
    ISEQ_UNREGISTER_ENTITY( 550058844, "passos" );
     /* TERMINATEISEQ */ sub_17817( 550058844, 0 );
    ISEQ_UNREGISTER_ENTITY( -1144523979, "passos" );
     /* TERMINATEISEQ */ sub_17817( -1144523979, 0 );
    ISEQ_UNREGISTER_ENTITY( 2111514372, "max" );
    ISEQ_UNREGISTER_ENTITY( 2111514372, "gmed" );
    ISEQ_UNREGISTER_ENTITY( 2111514372, "gmed1" );
    ISEQ_UNREGISTER_ENTITY( 2111514372, "gmed2" );
    ISEQ_UNREGISTER_ENTITY( 2111514372, "gmed3" );
     /* UNLOADANIMDICT */ sub_21364( "FACE_PASNYB" );
     /* UNLOADACTIONTREE */ sub_21451( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act" );
     /* WRITE_STRING */ sub_700( "[GA] P_UNLOAD_ASSETS_FUNERAL end" );
    return;
}

/* P_UNLOAD_WEAPONS */ void sub_42099(unknown uParam0)
{
    switch (uParam0)
    {
        case 0:
        case 1: break;
        case 2: break;
        case 3: break;
        case 4:
        case 5: break;
        case 6: break;
        case 7:
         /* UNLOADWEAPON */ sub_42255( 1224272620 );
        break;
        case 8: break;
        case 9:
         /* LOADWEAPON */ sub_3871( 434544317, 1 );
         /* LOADWEAPON */ sub_3871( -691403429, 1 );
        break;
        case 10:
         /* UNLOADWEAPON */ sub_42255( -184942895 );
        break;
    }
    return;
}

/* UNLOADWEAPON */ void sub_42255(unknown uParam0)
{
    SET_WEAPON_AS_NO_LONGER_NEEDED( uParam0 );
    return;
}


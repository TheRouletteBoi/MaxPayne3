void main()
{
    int iVar2;

    l_U0 = 0;
    l_U1 = 1;
    l_U2 = 0;
    l_U3 = 1.00000000;
    l_U4 = -5.00000000;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U11 = 42;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 90.00000000;
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = nil;
    l_U31 = {0.00000000, 0.00000000, 0.00000000};
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U37 = 1;
    l_U38 = 144;
    l_U39 = {0, 0, 0};
    StrCopy( ref l_U42, "DUMMY", 32 );
    l_U50 = 1;
    l_U55 = 0;
    l_U56 = 0;
    l_U57 = 0;
    l_U60 = 0;
    l_U105 = -1;
    l_U106 = {64536, 64536, 64536};
    l_U109 = "PED_DEF";
    l_U151 = 1.00000000;
    l_U163 = 0;
    l_U204 = 0;
    l_U245 = 0;
    l_U246 = 0;
    l_U247 = 1500;
    l_U276 = 0;
    l_U278 = 1;
    l_U279 = 0;
    l_U280 = 8;
    l_U281 = 8;
    l_U337 = "08_03_cemetery_concat";
    l_U1027 = 0;
    l_U1219 = {-14.38000000, 111.96000000, 5.50000000};
    l_U1222 = 0;
    l_U1223 = 65451;
    l_U1224 = 85;
    l_U1225 = "SCRIPT_MISSION\S_CEMET_RADIO";
    l_U1535 = {-14.57000000, 109.62000000, 5.46000000};
    l_U1538 = 65431;
    l_U1539 = 6.00000000;
    l_U1540 = 500;
     /* WRITE_STRING */ sub_586( "[GA] s_cemet_T_Garden script started." );
    l_U276 = 0;
     /* P_INITIALIZE_SCRIPT_DATA */ sub_641();
     /* P_SET_STATIC_GAMEPLAY_DATA */ sub_850();
     /* CREATE_SMALL_ROTUNDA_PLACEMENTS */ sub_3706();
     /* CREATE_RAG_WIDGETS */ sub_4155();
     /* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ sub_20360( ref l_U292, l_U337, 4693, 4738, 9648, 10153, 10200, 13884, 250, 0 );
    iVar2 = 0;
    if ((g_U825 == 5) || (g_U825 == 4))
    {
        iVar2 = 1;
         /* LOADMODEL */ sub_10797( -1100720042, 1 );
        l_U292._fU4 = 7;
    }
    else
    {
         /* LOADSEAMLESSCUTSCENE */ sub_20934( l_U337, 0 );
        l_U292._fU4 = 2;
        l_U292._fU104 = 0;
    }
     /* P_LOAD_ASSETS_TREE_GARDEN */ sub_21294( iVar2 );
     /* P_LOAD_WEAPONS */ sub_21884( 4 );
     /* INITIALIZE_PLAYER_BY_DEBUG_MENU_CHECKPOINT */ sub_22410();
     /* WRITE_STRING */ sub_586( "[GA] s_cemet_T_Garden.sc activated." );
    while (NOT IS_EXITFLAG_SET())
    {
        if (l_U1222)
        {
             /* P_SETDOORAUTOCLOSE */ sub_30294( ref g_U1487, 1 );
             /* P_OPENDOOR */ sub_30385( ref g_U1487, 1, 1, 1065353216 );
             /* P_SETDOORLOCKED */ sub_27060( ref g_U1487, 0 );
             /* P_SETDOORMINMAXLIMIT */ sub_30568( ref g_U1487, l_U1223, l_U1224 );
        }
        if ((g_U826 == 5) || (g_U826 == 4))
        {
             /* P_HANDLE_MUSIC */ sub_30807();
        }
         /* HANDLE_CHECKPOINTS */ sub_31974();
         /* HANDLE_EVENTS */ sub_39921();
        WAIT( 0 );
    }
    RELEASE_NAMED_SCRIPT_AUDIO_BANK( l_U1225 );
    RELEASE_SOUND_ID( l_U1147 );
     /* P_CLEANUP_ALL */ sub_38737();
     /* UNLOADMODEL */ sub_25460( g_U760 );
     /* UNLOADMODEL */ sub_25460( g_U759 );
     /* P_UNLOAD_ASSETS_TREE_GARDEN */ sub_61234();
     /* P_UNLOAD_WEAPONS */ sub_62505( 4 );
     /* WRITE_STRING */ sub_586( "[GA] s_cemet_T_Garden script ended." );
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_cemet_T_Garden" );
    SET_EXITFLAG_RESPONSE();
    return;
}

/* WRITE_STRING */ void sub_586(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_641()
{
    l_U976 = 0;
    l_U975 = 0;
    l_U338 = 0;
    l_U1199 = 0;
    l_U1200 = 0;
    l_U1201 = 0;
    l_U1027 = 0;
    l_U1202 = 0;
    l_U1203 = 0;
    l_U1204 = 0;
    l_U1205 = 0;
    l_U1206 = 0;
    l_U1208 = 0;
    l_U1207 = 0;
    l_U1209 = 0;
    l_U282 = 0;
    l_U283 = 0;
    l_U284 = 0;
    l_U285 = 0;
    l_U286 = 0;
    l_U287 = 0;
    l_U288 = 1;
    l_U291 = 0;
    l_U290 = 0;
    l_U289 = 0;
    l_U292._fU4 = 7;
    l_U1465 = 0;
    return;
}

/* P_SET_STATIC_GAMEPLAY_DATA */ void sub_850()
{
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_924( ref l_U1120, g_U779[4]._fU0, g_U779[4]._fU12, 1265654828, 26, 6, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_924( ref l_U870[0], -32.80000000, 115.14600000, 6.05193000, 246.69170000, 1579751406, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_924( ref l_U870[1], -34.27180000, 111.07300000, 6.11825000, 236.69170000, 1068086169, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_924( ref l_U903[0], -34.27400000, 115.04700000, 6.20091000, 236.69170000, 1891054408, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_924( ref l_U903[1], -31.09520000, 111.94700000, 5.99999000, 246.69170000, -691185081, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_924( ref l_U903[2], -33.47600000, 111.06400000, 6.15321000, 256.69170000, 1432608068, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_924( ref l_U903[3], -35.07590000, 110.01100000, 6.05564000, 266.69170000, -1241284884, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_924( ref l_U903[4], -31.60080000, 109.42900000, 5.83574000, 276.69170000, -1447475729, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_924( ref l_U1079, -4.02268000, 102.25460000, 6.42163000, 0, 919324660, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_924( ref l_U1093, 3.51600000, 91.70200000, 7.15000000, 90, -1546371009, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_924( ref l_U1107, -0.55900000, 89.68300000, 7.11000000, 65491, 1968476214, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_924( ref l_U1032[0], 15.49000000, 85.51000000, 6.39000000, 0, -1469343783, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_924( ref l_U1032[1], 8.75000000, 73.35000000, 6.39000000, 0, -756787123, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_924( ref l_U1032[2], -14.68000000, 79.59000000, 5.26000000, 0, -1195605660, 7, 3, 2, 0, 0 );
     /* P_CREATETRIGGERBOX */ sub_1669( ref l_U370, "SMALL_ROTUNDA_FORCE_WALK", 21.11000000, 68.10000000, 5.28000000, 20.00000000, 8.00000000, 3.00000000, 0.00000000, 0.00000000, 48.50000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_1669( ref l_U391, "SMALL_ROTUNDA_END", 21.14000000, 67.43000000, 5.28000000, 12.00000000, 6.00000000, 3.00000000, 0.00000000, 0.00000000, 48.50000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_1669( ref l_U412, "TRIGGER_HIDDEN_AREA", -44.65000000, 99.86000000, 7.75000000, 7.00000000, 8.00000000, 3.84000000, 0.00000000, 0.00000000, -45.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_1669( ref l_U559, "TRIGGER_SMALL_ROT_PEDS", -3.79000000, 102.16000000, 4.66000000, 5.00000000, 5.00000000, 4.00000000, 0.00000000, 0.00000000, -66.90000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_1669( ref l_U454, "TRIGGER_GATE_RUN_OUT", -5.93000000, 110.88000000, 5.11000000, 25.00000000, 30.00000000, 8.00000000, 0.00000000, 0.00000000, -105.10000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_1669( ref l_U475, "TRIGGER_GATE_RUN_FAILSAFE", -3.04000000, 104.02000000, 5.11000000, 12.50000000, 20.00000000, 8.00000000, 0.00000000, 0.00000000, -55.10000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_1669( ref l_U496, "TRIG_NEAR_ROTUNDA", 9.99000000, 70.87000000, 2.49000000, 48.00000000, 24.00000000, 4.00000000, 0.00000000, 0.00000000, 21.48000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_1669( ref l_U517, "TRIG_IN_ROTUNDA", -2.45000000, 99.19000000, 2.58000000, 8.00000000, 8.00000000, 9.23000000, 0.00000000, 0.00000000, 21.48000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_1669( ref l_U580, "TRIG_CLEAN_RUNNERS", -4.72000000, 104.02000000, 5.17000000, 10.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, -155.10000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_1669( ref l_U601, "TRIG_PASSOS_FAILURE", -4.72000000, 104.02000000, 5.17000000, 10.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, -155.10000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_1669( ref l_U433, "TRIG_DECIDE_VIG09B", -1.68000000, 96.33000000, 4.66000000, 15.00000000, 15.00000000, 4.00000000, 0.00000000, 0.00000000, -66.90000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_1669( ref l_U538, "VIG09B_CLOSE_GATES", -3.03000000, 100.00000000, 2.58000000, 8.00000000, 8.00000000, 9.23000000, 0.00000000, 0.00000000, 21.48000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_1669( ref l_U622, "tbImageFX_2CP05A_01", 0.34000000, 92.55000000, 4.04000000, 3.00000000, 8.00000000, 10.00000000, 0.00000000, 0.00000000, -65.10000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_1669( ref l_U643, "tbImageFX_2CP05B_01", 10.26130000, 89.18380000, 4.04000000, 4.00000000, 8.00000000, 10.00000000, 0.00000000, 0.00000000, -44.46550000, 1 );
     /* P_CREATETRIGGERBOX */ sub_1669( ref l_U664, "tbImageFX_2CP05C_01", -3.58700000, 83.02010000, 4.04000000, 4.00000000, 8.00000000, 10.00000000, 0.00000000, 0.00000000, -89.46920000, 1 );
     /* P_CREATETRIGGERBOX */ sub_1669( ref l_U685, "tbImageFX_2CP05_02", 4.65747000, 83.04330000, 4.04000000, 15.00000000, 15.00000000, 10.00000000, 0.00000000, 0.00000000, -110.91800000, 1 );
     /* P_CREATETRIGGERBOX */ sub_1669( ref l_U706, "tbImageFX_2CP05_03", 5.84000000, 80.09000000, 4.04000000, 18.00000000, 15.00000000, 10.00000000, 0.00000000, 0.00000000, -156.78000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_1669( ref l_U727, "tbImageFX_2CP05_04", 7.84591000, 75.43510000, 4.04000000, 18.00000000, 15.00000000, 10.00000000, 0.00000000, 0.00000000, -156.78000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_1669( ref l_U748, "tbImageFX_2CP05_05", 16.94850000, 71.17260000, 4.04000000, 30.00000000, 10.00000000, 10.00000000, 0.00000000, 0.00000000, -128.23700000, 1 );
     /* P_CREATETRIGGERBOX */ sub_1669( ref l_U769, "tbImageFX_2CP05_06", 18.29870000, 70.26820000, 4.97641000, 6.00000000, 6.00000000, 3.00000000, 0.00000000, 0.00000000, 46.79450000, 1 );
     /* P_CREATETETHERBOX */ sub_3322( ref l_U790, "TETH_AROUND_CARS", -25.36000000, 116.87000000, 5.09000000, 50.00000000, 25.00000000, 7.80000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_3322( ref l_U791, "TETH_SMALL_ROTUNDA", 1.60000000, 90.34000000, 5.09000000, 24.00000000, 22.00000000, 4.00000000, 0.00000000, 0.00000000, 25.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_3322( ref l_U792, "TETH_SM_ROT_LOW1", -10.28000000, 89.99000000, 5.05000000, 8.00000000, 15.00000000, 2.79000000, 0.00000000, 0.00000000, -18.04000000, 1 );
     /* P_CREATETETHERBOX */ sub_3322( ref l_U793, "TETH_SM_ROT_LOW2", -2.49000000, 98.44000000, 4.87000000, 9.00000000, 15.00000000, 2.61000000, 0.00000000, 0.00000000, -61.90000000, 1 );
     /* P_CREATETETHERBOX */ sub_3322( ref l_U794, "TETH_SM_ROT_LOW3", 11.97000000, 98.51000000, 5.05000000, 8.00000000, 18.00000000, 2.79000000, 0.00000000, 0.00000000, 71.96000000, 1 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_924(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATETRIGGERBOX */ void sub_1669(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATETETHERBOX */ void sub_3322(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* CREATE_SMALL_ROTUNDA_PLACEMENTS */ void sub_3706()
{
     /* CLEANPLACEMENTARRAY */ sub_3754( ref l_U1193 );
    l_U1193[0] =  /* CREATEPLACEMENT */ sub_3922( -4072149, 22.28700000, 74.74598000, 6.36000000, 0, 0, 0, 0, 0, 0, 1119092736 );
    l_U1193[1] =  /* CREATEPLACEMENT */ sub_3922( -4072149, 22.41900000, 74.47300000, 6.36000000, 0, 0, 0, 0, 0, 0, 1119092736 );
    return;
}

/* CLEANPLACEMENTARRAY */ void sub_3754(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* CLEANPLACEMENT */ sub_3809( (uParam0^)[I] );
    }
    return;
}

/* CLEANPLACEMENT */ void sub_3809(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

/* CREATEPLACEMENT */ void sub_3922(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a placement to exist: {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return Result;
}

/* CREATE_RAG_WIDGETS */ void sub_4155()
{
    START_WIDGET_GROUP( "VIGNETTE 01 - Max & Passos in MPM" );
    ADD_WIDGET_BOOL( "Adjust Door angle", ref l_U1222 );
    ADD_WIDGET_FLOAT_SLIDER( "Door Min Rotation", ref l_U1223, 65356, 180, 1 );
    ADD_WIDGET_FLOAT_SLIDER( "Door Max Rotation", ref l_U1224, 65176, 360, 1 );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "PASSOS DEATH" );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_4404( ref l_U1535, "Passos Death Pos", 1036831949 );
    ADD_WIDGET_FLOAT_SLIDER( "Passos Death Rot", ref l_U1538, 65356, 180, 1 );
    ADD_WIDGET_FLOAT_SLIDER( "Camera AWESOMENESS", ref l_U1539, 65356, 180, 1 );
    ADD_WIDGET_INT_SLIDER( "Time to kill Passos", ref l_U1540, 0, 10000, 10 );
    STOP_WIDGET_GROUP();
    return;
}

/* P_ADD_WIDGET_VECTOR_SLIDER */ void sub_4404(int iParam0, unknown uParam1, unknown uParam2)
{
    START_WIDGET_GROUP( uParam1 );
    ADD_WIDGET_FLOAT_SLIDER( "x", iParam0 + 0, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "y", iParam0 + 4, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "z", iParam0 + 8, 60536, 5000, uParam2 );
    STOP_WIDGET_GROUP();
    return;
}

/* CS_08_03_CUTSCENEPRESETUP */ int sub_4693()
{
    return 1;
}

/* CS_08_03_CUTSCENEREGISTER */ void sub_4738()
{
     /* P_ACTIVATEPEDARRAY */ sub_4780( ref l_U897 );
     /* P_ACTIVATEPEDARRAY */ sub_4780( ref l_U867 );
    if (NOT (IS_VEHICLE_DEAD( g_U1757 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U1757, "van_nyc", 0 );
    }
    if ( /* IS_MAX_VALID */ sub_5014())
    {
         /* WRITESCRIPTLOG */ sub_5258( "RJM", "Registering player with 08_03", 0 );
         /* P_PLAYER_HOLSTER_WEAPONS */ sub_5382( ref l_U319, 1, 1 );
         /* P_SET_TWO_HANDED_WEAPON_VISIBLE */ sub_6746( l_U319, 0 );
         /* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ sub_6879( 1 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_5039(), 0, 0 ), "W_PI_Clt1911_Aa_H^1", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_5039(), g_U971[4]._fU0, g_U971[4]._fU12 );
    }
    if ( /* IS_PED_VALID */ sub_5133( g_U824 ))
    {
         /* WRITESCRIPTLOG */ sub_5258( "RJM", "Registering piPassos with 08_03", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U824, "Pass_NY_H", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U824, 0, 0 ), "W_PI_Clt1911_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U824, -19.08100000, 110.14800000, 6.09800000, -89.16100000 );
        ISEQ_REGISTER_ENTITY( -1081549521, "PASSOS", g_U824, 0 );
    }
    if ( /* IS_PED_VALID */ sub_5133( l_U897[3] ))
    {
         /* WRITESCRIPTLOG */ sub_5258( "RJM", "Registering piTreeGardenThugs[3] with 08_03", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U897[3], "G_NY_C_Thug_A", 0 );
        SET_PED_ALERTNESS( l_U897[3], 3 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U897[3], 0, 0 ), "W_SG_BenM3_Aa_H", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U897[3], "/Global/AMED/NpcLoco_LOGIC/NpcLoco_IDLE/COMBAT/COMBAT_IDLE" );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U897[3], l_U903[3]._fU0, l_U903[3]._fU12 );
    }
    if ( /* IS_PED_VALID */ sub_5133( l_U897[4] ))
    {
         /* WRITESCRIPTLOG */ sub_5258( "RJM", "Registering piTreeGardenThugs[4] with 08_03_nybar_concat", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U897[4], "G_NY_C_Thug_B", 0 );
        SET_PED_ALERTNESS( l_U897[4], 3 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U897[4], 0, 0 ), "W_SG_BenM3_Aa_H^1", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U897[4], "/Global/AMED/NpcLoco_LOGIC/NpcLoco_IDLE/COMBAT/COMBAT_IDLE" );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U897[4], l_U903[4]._fU0, l_U903[4]._fU12 );
    }
    if ( /* IS_PED_VALID */ sub_5133( l_U897[2] ))
    {
         /* WRITESCRIPTLOG */ sub_5258( "RJM", "Registering piTreeGardenThugs[2] with 08_03_nybar_concat", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U897[2], "G_NY_C_Sold_B", 0 );
        SET_PED_ALERTNESS( l_U897[2], 3 );
        HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE( l_U897[2], 1 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U897[2], "/Global/AMED/NpcLoco_LOGIC/NpcLoco_IDLE/COMBAT/COMBAT_IDLE" );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U897[2], l_U903[2]._fU0, l_U903[2]._fU12 );
    }
    if ( /* IS_PED_VALID */ sub_5133( l_U897[1] ))
    {
         /* WRITESCRIPTLOG */ sub_5258( "RJM", "Registering piTreeGardenThugs[1] with 08_03_nybar_concat", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U897[1], "G_NY_C_Sold_B^1", 0 );
        SET_PED_ALERTNESS( l_U897[1], 3 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U897[1], "/Global/AMED/NpcLoco_LOGIC/NpcLoco_IDLE/COMBAT/COMBAT_IDLE" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U897[1], 0, 0 ), "W_SG_BenM3_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U897[1], l_U903[1]._fU0, l_U903[1]._fU12 );
    }
    if ( /* IS_PED_VALID */ sub_5133( l_U897[0] ))
    {
         /* WRITESCRIPTLOG */ sub_5258( "RJM", "Registering piTreeGardenThugs[0] with 08_03_nybar_concat", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U897[0], "G_NY_C_Sold_B^2", 0 );
        SET_PED_ALERTNESS( l_U897[0], 3 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U897[0], 0, 0 ), "W_SG_BenM3_Aa_H^4", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U897[0], "/Global/AMED/NpcLoco_LOGIC/NpcLoco_IDLE/COMBAT/COMBAT_IDLE" );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U897[0], l_U903[0]._fU0, l_U903[0]._fU12 );
    }
    if ( /* IS_PED_VALID */ sub_5133( l_U867[1] ))
    {
         /* WRITESCRIPTLOG */ sub_5258( "RJM", "Registering piRunner[1] with 08_03_nybar_concat", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U867[1], "G_NY_C_Sold_B^3", 0 );
        SET_PED_ALERTNESS( l_U867[1], 3 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U867[1], 0, 0 ), "W_SG_BenM3_Aa_H^2", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U867[1], "/Global/AMED/NpcLoco_LOGIC/NpcLoco_IDLE/COMBAT/COMBAT_IDLE" );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U867[1], l_U870[1]._fU0, l_U870[1]._fU12 );
    }
    if ( /* IS_PED_VALID */ sub_5133( l_U867[0] ))
    {
         /* WRITESCRIPTLOG */ sub_5258( "RJM", "Registering piRunner[0] with 08_03_nybar_concat", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U867[0], "G_NY_C_Sold_B^4", 0 );
        SET_PED_ALERTNESS( l_U867[0], 3 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U867[1], 0, 0 ), "W_SG_BenM3_Aa_H^3", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U867[0], "/Global/AMED/NpcLoco_LOGIC/NpcLoco_IDLE/COMBAT/COMBAT_IDLE" );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U867[0], l_U870[0]._fU0, l_U870[1]._fU12 );
    }
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U1431._fU0, g_U1431._fU4 );
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U1438._fU0, g_U1438._fU4 );
    CUTSCENE_REGISTER_ISEQ( -1081549521 );
    CUTSCENE_ENABLE_SKIP( 0 );
    return;
}

/* P_ACTIVATEPEDARRAY */ void sub_4780(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_ACTIVATEPED */ sub_4832( (uParam0^)[I] );
    }
    return;
}

/* P_ACTIVATEPED */ void sub_4832(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

/* IS_MAX_VALID */ int sub_5014()
{
    if ( /* IS_PED_VALID */ sub_5133(  /* PLAYER_PED_ID */ sub_5039() ))
    {
        return 1;
    }
    return 0;
}

/* PLAYER_PED_ID */ int sub_5039()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_5077() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_5077()
{
    return GET_PLAYER_ID();
}

/* IS_PED_VALID */ int sub_5133(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (DOES_PED_EXIST( uParam0 )))
    {
        return 1;
    }
    return 0;
}

/* WRITESCRIPTLOG */ void sub_5258(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_PLAYER_HOLSTER_WEAPONS */ void sub_5382(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

     /* RESET_WEAPON_CONFIG */ sub_5421( iParam0 );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_5039() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_5039(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_5622( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if (( /* IS_WEAPON_TWO_HANDED */ sub_5876( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_5039(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_5039(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_5039(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_5039(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_5039() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_5039(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_5039(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_5039(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_5039(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_5039() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_5039(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if (( /* IS_WEAPON_TWO_HANDED */ sub_5876( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_5039(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_5039(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_5039(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

/* RESET_WEAPON_CONFIG */ void sub_5421(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

/* IS_WEAPON_SINGLE_HANDED */ int sub_5622(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* IS_WEAPON_TWO_HANDED */ int sub_5876(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* P_SET_TWO_HANDED_WEAPON_VISIBLE */ void sub_6746(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;

    uVar21 = uParam0._fU24._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar21, uParam18 );
    }
    uVar22 = uParam0._fU60._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar22, uParam18 );
    }
    return;
}

/* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ void sub_6879(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_5039() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_5039(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if ((( /* IS_WEAPON_SINGLE_HANDED */ sub_5622( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_7027();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_5039(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

/* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ int sub_7027()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_5039() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_5039(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_5622( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_5039(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_5039(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_5039(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

/* CS_08_03_HANDLECUTSCENE */ void sub_9648()
{
    if (l_U292._fU52)
    {
         /* SETUP_WEATHER_TIMEOFDAY */ sub_9699( 4 );
    }
    return;
}

/* SETUP_WEATHER_TIMEOFDAY */ void sub_9699(unknown uParam0)
{
     /* WRITE_STRING */ sub_586( "[SP]### P_SETUP_WEATHER_TIMEOFDAY ###" );
    SET_WEATHER_TYPE_NOW_PERSIST( "SNOW_LIGHT" );
    switch (uParam0)
    {
        case 0:
        case 1:
        case 2:
        case 20:
        case 21:
        FREEZE_TIME_OF_DAY( 18, 0 );
        break;
        case 3:
        case 22:
        FREEZE_TIME_OF_DAY( 19, 0 );
        break;
        case 4:
        case 5:
        case 6:
        case 23:
        case 24:
        case 25:
        FREEZE_TIME_OF_DAY( 20, 0 );
        break;
        case 7:
        case 26:
        FREEZE_TIME_OF_DAY( 21, 0 );
        break;
        case 8:
        case 9:
        case 10:
        case 27:
        case 28:
        case 29:
        FREEZE_TIME_OF_DAY( 22, 0 );
        break;
        default:
         /* WRITESCRIPTLOG */ sub_5258( "RJM", "Setting Weather/TOD for a checkpoint that doesn't really matter", 0 );
        FREEZE_TIME_OF_DAY( 18, 0 );
        break;
    }
    return;
}

/* CUTSYS_DEFAULT_POSTCUTSCENE */ int sub_10153()
{
    return 1;
}

/* CS_08_03_PREPAREBLENDOUT */ void sub_10200()
{
    int I;

     /* P_ACTIVATEPEDARRAY */ sub_4780( ref l_U897 );
     /* P_ACTIVATEPEDARRAY */ sub_4780( ref l_U867 );
     /* WRITESCRIPTLOG */ sub_5258( "RJM", "cs_08_03_PrepareBlendout - Playing", 0 );
    if (NOT ( /* IS_PASSOS_VALID */ sub_10304()))
    {
         /* CREATE_TGARDEN_PASSOS */ sub_10382();
    }
    if (NOT (IS_PED_DEAD( l_U1146 )))
    {
        SET_PED_VISIBLE( l_U1146, 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U1757 )))
    {
        SET_VEHICLE_VISIBLE( g_U1757, 1 );
        SET_VEHICLE_COORDS( g_U1757, g_U1758 );
        SET_VEHICLE_HEADING( g_U1757, g_U1761 );
        FREEZE_VEHICLE_POSITION( g_U1757, 1 );
    }
     /* P_KILL_PED */ sub_12549( l_U867[0] );
    if (NOT (ISEQ_QUERY_STATE( -1081549521, 3 )))
    {
         /* TELEPORTPED */ sub_12673( g_U824, -19.08100000, 110.14800000, 6.09800000, -89.16100000 );
        if (NOT (IS_PED_DEAD( g_U824 )))
        {
            ISEQ_REGISTER_ENTITY( -1081549521, "PASSOS", g_U824, 0 );
            ISEQ_START( -1081549521 );
        }
    }
    if ( /* IS_MAX_VALID */ sub_5014())
    {
         /* TELEPORTPED */ sub_12673(  /* PLAYER_PED_ID */ sub_5039(), g_U971[4]._fU0, g_U971[4]._fU12 );
        CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_5039() );
        TASK_DEFAULT_AIM_AT_COORD(  /* PLAYER_PED_ID */ sub_5039(), -29.47000000, 108.89000000, 5.89000000 );
        SIMULATE_PLAYER_INPUT_GAIT(  /* PLAYER_ID */ sub_5077(), 3, 1500, 0 );
    }
    if ( /* IS_PASSOS_VALID */ sub_10304())
    {
        for ( I = 0; I < l_U897; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U897[I] )))
            {
                SET_PED_ALERTNESS( l_U897[I], 3 );
                REGISTER_TARGET( l_U897[I], g_U824 );
                SET_LOCKED_TARGET( l_U897[I], g_U824 );
                TASK_COMBAT_PED( l_U897[I], g_U824 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U897[I], 0 );
            }
        }
        for ( I = 0; I < l_U867; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U867[I] )))
            {
                SET_PED_ALERTNESS( l_U867[I], 3 );
                REGISTER_TARGET( l_U867[I], g_U824 );
                SET_LOCKED_TARGET( l_U867[I], g_U824 );
                TASK_COMBAT_PED( l_U867[I], g_U824 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U867[I], 0 );
            }
        }
         /* TASK_PASSOS_CHASER */ sub_13205( 50 );
    }
     /* P_PLAYER_UNHOLSTER_WEAPONS */ sub_13356( l_U319, 1 );
     /* P_SET_TWO_HANDED_WEAPON_VISIBLE */ sub_6746( l_U319, 1 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U971[4]._fU16, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U971[4]._fU20, 1065353216, 0 );
    STOP_ALL_IMAGEFX( 0 );
    if (NOT ( /* F_IMAGEFX_FADE_IN */ sub_13623()))
    {
        DO_SCREEN_FADE_IN( 0 );
    }
    l_U279 = 3;
    return;
}

/* IS_PASSOS_VALID */ int sub_10304()
{
    if ((NOT (IS_PED_DEAD( g_U824 ))) AND (DOES_PED_EXIST( g_U824 )))
    {
        return 1;
    }
    return 0;
}

/* CREATE_TGARDEN_PASSOS */ void sub_10382()
{
     /* MLOG */ sub_10442( "CREATE_TGARDEN_PASSOS", 0, 0 );
     /* CLEANPED */ sub_10526( g_U824 );
    g_U824 =  /* CREATEPED */ sub_10615( ref l_U1120 );
     /* P_SETUP_PASSOS_GENERAL_ATTRIBUTES */ sub_11572( ref g_U824 );
    SET_PED_PROOFS( g_U824, 0, 1, 0, 1, 1 );
     /* F_GIVEPEDWEAPON */ sub_11966( g_U824, -862236369, 25000, 0, 0 );
    if ( /* IS_PASSOS_VALID */ sub_10304())
    {
        SET_PED_GORE_AS_ALLY( g_U824 );
        SET_PED_PERFECT_ACCURACY_OVERRIDE( g_U824, 1 );
        SET_PED_NAME_DEBUG( g_U824, "Passos" );
    }
    return;
}

/* MLOG */ void sub_10442(unknown uParam0, string sParam1, string sParam2)
{
    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "ML";
    }
    if (IS_STRING_NULL( sParam1 ))
    {
        sParam1 = "---";
    }
     /* WRITESCRIPTLOG */ sub_5258( sParam2, uParam0, sParam1 );
    return;
}

/* CLEANPED */ void sub_10526(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CREATEPED */ void sub_10615(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_10797( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_11346( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_11447( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* LOADMODEL */ void sub_10797(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_586( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* SETPEDDEFAULTSTATS */ void sub_11346(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_11447(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* P_SETUP_PASSOS_GENERAL_ATTRIBUTES */ void sub_11572(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_5258( "SBA", "P_SETUP_PASSOS_GENERAL_ATTRIBUTES", "***" );
    if ( /* IS_PED_VALID */ sub_5133( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^), 1 );
        SET_PED_VALIDATE_BULLET_CAM_HIT( (uParam0^), 0 );
        SET_AI_SHOULD_ALWAYS_MISS_PED( (uParam0^), 1 );
        SET_CAN_AI_KICK_THROUGH_CORPSES( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_AI_TEMPLATE( (uParam0^), "AIT_NORMAL" );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( (uParam0^), 1 );
        SET_PED_AS_ONE_SHOT_KILL( (uParam0^), 1 );
        SET_PED_GORE( (uParam0^), 0 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), 0 );
        SET_PED_PROOFS( (uParam0^), 0, 1, 1, 1, 1 );
        SET_PED_ALLOWED_TO_SURRENDER( (uParam0^), 0 );
        SET_PED_CAN_AVOID_DEATH_ZONES( (uParam0^), 0 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( (uParam0^), 1 );
        SET_PED_CAN_PUSH_PLAYER( (uParam0^), 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_CAN_BE_TARGETTED( (uParam0^), 0 );
        SET_PED_CONSUMING_AMMO( (uParam0^), 0 );
        SET_PED_PATH_CAN_USE_CLIMBOVERS( (uParam0^), 1 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( (uParam0^), 1 );
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_11966(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_586( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* P_KILL_PED */ void sub_12549(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

/* TELEPORTPED */ void sub_12673(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* TASK_PASSOS_CHASER */ void sub_13205(unknown uParam0)
{
    unknown uVar3;

    if ( /* IS_PED_VALID */ sub_5133( l_U867[1] ))
    {
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_PAUSE( 0, uParam0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U1219, 3, 20000, 1048576000, 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( l_U867[1], uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    return;
}

/* P_PLAYER_UNHOLSTER_WEAPONS */ void sub_13356(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_5039() )) == 0)
    {
        uVar21 = uParam0._fU0._fU0;
        if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
        {
            SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_5039(), uVar21, 0, uParam18 );
        }
        uVar22 = uParam0._fU12._fU0;
        if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
        {
            SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_5039(), uVar22, 1, uParam18 );
        }
        uVar23 = uParam0._fU24._fU0;
        if ((GET_DOES_WEAPON_EXIST( uVar23 )) == 1)
        {
            SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_5039(), uVar23, 0, uParam18 );
        }
    }
    return;
}

/* F_IMAGEFX_FADE_IN */ int sub_13623()
{
    if (l_U276)
    {
         /* WRITESCRIPTLOG */ sub_5258( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U276 = 0;
        return 1;
        break;
    }
     /* WRITESCRIPTLOG */ sub_5258( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

/* CS_08_03_HANDLEBLENDOUT */ int sub_13884()
{
    if (NOT l_U795._fU0)
    {
        if (g_U826 != 4)
        {
            g_U826 = 4;
             /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_14007( ref l_U795, g_U826,  /* PLAYER_PED_ID */ sub_5039(), g_U971[4]._fU0, g_U971[4]._fU12, g_U971[4]._fU16, g_U971[4]._fU20, 1 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U1146 )))
    {
        SET_PED_VISIBLE( l_U1146, 0 );
    }
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U971[4]._fU16, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U971[4]._fU20, 1065353216, 0 );
    return 1;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_14007(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_5258( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_5258( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_14291( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_15961( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_16438( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_16438( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_16698( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_16438( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_16698( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_16698( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_16438( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_16698( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_16698( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_16698( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_16438( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_16698( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_16698( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_16698( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_16698( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_18278( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U38, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_5258( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_14291(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_14346( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_15184( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_14346(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* CLEAR_GG_CONTEXTS */ void sub_15184(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_15961(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_14346( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_5258( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_5258( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_16438(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_16698(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_18278(int iParam0)
{
     /* WRITE_STRING */ sub_586( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_18366( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_18443( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_18443( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_18443( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_18612( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_18612( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_18612( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_18612( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_18612( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_18612( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_18612( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_18612( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_18612( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_18612( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_18612( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_18443( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_18612( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_18612( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_18612( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_18443( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_19313( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_18612( iParam0->_fU52 );
     /* WRITE_STRING */ sub_586( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_18612( iParam0->_fU96 );
     /* WRITE_STRING */ sub_586( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_18612( iParam0->_fU100 );
     /* WRITE_STRING */ sub_586( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_18612( iParam0->_fU104 );
     /* WRITE_STRING */ sub_586( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_18612( iParam0->_fU108 );
     /* WRITE_STRING */ sub_586( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_18612( iParam0->_fU112 );
     /* WRITE_STRING */ sub_586( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_18612( iParam0->_fU116 );
     /* WRITE_STRING */ sub_586( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_18612( iParam0->_fU120 );
     /* WRITE_STRING */ sub_586( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_18612( iParam0->_fU124 );
     /* WRITE_STRING */ sub_586( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_18612( iParam0->_fU128 );
     /* WRITE_STRING */ sub_586( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_18612( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_18612( l_U38 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_18612( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_18366(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_18443(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_18612(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_19313(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ void sub_20360(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
     /* WRITESCRIPTLOG */ sub_5258( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return  /* CUTSYS_PRIVATE_CREATECUTSCENE */ sub_20580( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 20481, 20529, uParam8 );
}

/* CUTSYS_DEFAULT_PREPAREBLENDIN */ void sub_20481()
{
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDIN */ int sub_20529()
{
    return 1;
}

/* CUTSYS_PRIVATE_CREATECUTSCENE */ void sub_20580(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

/* LOADSEAMLESSCUTSCENE */ void sub_20934(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* P_LOAD_ASSETS_TREE_GARDEN */ void sub_21294(unknown uParam0)
{
     /* WRITE_STRING */ sub_586( "[GA] P_LOAD_ASSETS_TREE_GARDEN start" );
     /* SETUP_SCRIPTED_SPEECH */ sub_21386( "SCMTAUD" );
     /* LOADAUDIOBANK */ sub_21556( l_U1225, uParam0 );
    l_U1147 = GET_SOUND_ID();
     /* LOADMODEL */ sub_10797( g_U760, uParam0 );
     /* LOADMODEL */ sub_10797( g_U759, uParam0 );
     /* LOADMODEL */ sub_10797( g_U1367, uParam0 );
     /* LOADMODEL */ sub_10797( g_U1366, uParam0 );
     /* LOADMODEL */ sub_10797( g_U1332, uParam0 );
     /* LOADMODEL */ sub_10797( g_U1336, uParam0 );
     /* LOADMODEL */ sub_10797( -1252673304, uParam0 );
     /* LOADMODEL */ sub_10797( -1021848468, uParam0 );
     /* LOADMODEL */ sub_10797( 1878670211, uParam0 );
     /* WRITE_STRING */ sub_586( "[GA] P_LOAD_ASSETS_TREE_GARDEN end" );
    return;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_21386(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_21430();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_21430()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* LOADAUDIOBANK */ void sub_21556(unknown uParam0, int iParam1)
{
    LOAD_SCRIPT_AUDIO_BANK( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for script audio bank to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_LOAD_WEAPONS */ void sub_21884(unknown uParam0)
{
     /* LOADWEAPON */ sub_21917( -862236369, 1 );
    switch (uParam0)
    {
        case 0:
        case 1:
         /* LOADWEAPON */ sub_21917( 434544317, 1 );
         /* LOADWEAPON */ sub_21917( -691403429, 1 );
        break;
        case 2: break;
        case 3:
         /* LOADWEAPON */ sub_21917( -691403429, 1 );
         /* LOADWEAPON */ sub_21917( 930042831, 1 );
        break;
        case 4:
        case 5:
         /* LOADWEAPON */ sub_21917( 434544317, 1 );
         /* LOADWEAPON */ sub_21917( -691403429, 1 );
        break;
        case 6:
         /* LOADWEAPON */ sub_21917( 434544317, 1 );
         /* LOADWEAPON */ sub_21917( -691403429, 1 );
        break;
        case 7:
         /* LOADWEAPON */ sub_21917( 434544317, 1 );
         /* LOADWEAPON */ sub_21917( -691403429, 1 );
         /* LOADWEAPON */ sub_21917( 1224272620, 1 );
        break;
        case 8:
         /* LOADWEAPON */ sub_21917( 434544317, 1 );
         /* LOADWEAPON */ sub_21917( -691403429, 1 );
        break;
        case 9:
         /* LOADWEAPON */ sub_21917( 434544317, 1 );
         /* LOADWEAPON */ sub_21917( -691403429, 1 );
        break;
        case 10:
         /* LOADWEAPON */ sub_21917( 434544317, 1 );
         /* LOADWEAPON */ sub_21917( -184942895, 1 );
         /* LOADWEAPON */ sub_21917( -691403429, 1 );
        break;
    }
    return;
}

/* LOADWEAPON */ void sub_21917(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load weapon: {!f1} : {1} ###", 2, 1, 199730165, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* INITIALIZE_PLAYER_BY_DEBUG_MENU_CHECKPOINT */ void sub_22410()
{
    if (g_U825 == 4)
    {
         /* WRITESCRIPTLOG */ sub_5258( "RJM", "INITIALIZE_PLAYER_BY_DEBUG_MENU_CHECKPOINT - MCE_TREE_GARDEN", 0 );
        if (NOT ( /* HAS_SAVEFILE_LOADED */ sub_22556( ref l_U795 )))
        {
             /* F_GIVEPEDWEAPON */ sub_11966(  /* PLAYER_PED_ID */ sub_5039(),  /* GET_STARTING_WEAPON */ sub_25162( 4 ), 200, 0, 1 );
        }
        g_U1238 = 1;
        g_U826 = 4;
        l_U282 = 0;
        l_U278 = 1;
         /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_14007( ref l_U795, g_U826,  /* PLAYER_PED_ID */ sub_5039(), g_U971[4]._fU0, g_U971[4]._fU12, g_U971[4]._fU16, g_U971[4]._fU20, 0 );
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    }
    else if (g_U825 == 5)
    {
         /* WRITESCRIPTLOG */ sub_5258( "RJM", "INITIALIZE_PLAYER_BY_DEBUG_MENU_CHECKPOINT - MCE_SMALL_ROTUNDA", 0 );
        if (NOT ( /* HAS_SAVEFILE_LOADED */ sub_22556( ref l_U831 )))
        {
             /* F_GIVEPEDWEAPON */ sub_11966(  /* PLAYER_PED_ID */ sub_5039(),  /* GET_STARTING_WEAPON */ sub_25162( 5 ), 200, 0, 1 );
        }
        g_U826 = 5;
        l_U282 = 6;
         /* UNLOADMODEL */ sub_25460( g_U1332 );
         /* UNLOADMODEL */ sub_25460( -1252673304 );
         /* UNLOADMODEL */ sub_25460( -1021848468 );
        l_U278 = 5;
         /* P_TGARDEN_CREATE_PLACEMENTS */ sub_25636();
         /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_14007( ref l_U831, g_U826,  /* PLAYER_PED_ID */ sub_5039(), g_U971[5]._fU0, g_U971[5]._fU12, g_U971[5]._fU16, g_U971[5]._fU20, 0 );
         /* P_CLOSEDOOR */ sub_26793( ref g_U1480, 1 );
         /* P_CLOSEDOOR */ sub_26793( ref g_U1487, 1 );
         /* P_SETDOORLOCKED */ sub_27060( ref g_U1431, 1 );
         /* P_SETDOORLOCKED */ sub_27060( ref g_U1438, 1 );
         /* P_LOAD_NONPERSISTENT_ASSETS */ sub_27217( 1 );
         /* P_TGARDEN_CREATE_VEHICLES */ sub_28018();
         /* P_CREATE_RADIO_DUMMY_PED */ sub_29637();
        l_U283 = 2;
        if ((IS_DEATH_PANEL_WIPE_ALLOWED()) || (IS_SCREEN_FADED_OUT()))
        {
            DO_SCREEN_FADE_IN( 500 );
        }
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    }
    return;
}

/* HAS_SAVEFILE_LOADED */ int sub_22556(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_5258( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U37 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U38 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_22712( uParam0,  /* PLAYER_PED_ID */ sub_5039() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_22712(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_5258( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U37)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_22933( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_23302( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_23616( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_24051( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_23616( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_24051( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_23616( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_24051( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_11966( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_24051( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_11966( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_24051( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U37 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_24546( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_14291( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_5039(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U37)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U37 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_5258( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_22933(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_14346( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* LOADCOLLISIONFORPED */ void sub_23302(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_23616(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_586( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_24051(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_24546(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* GET_STARTING_WEAPON */ int sub_25162(unknown uParam0)
{
    return -862236369;
}

/* UNLOADMODEL */ void sub_25460(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
         /* WRITE_STRING */ sub_586( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

/* P_TGARDEN_CREATE_PLACEMENTS */ void sub_25636()
{
     /* WRITE_STRING */ sub_586( "[GA] P_TGARDEN_CREATE_PLACEMENTS start" );
     /* P_CREATE_S_NYC_GG_6M_01 */ sub_25722();
     /* P_CREATE_S_NYC_GG_A9_03 */ sub_26527();
     /* WRITE_STRING */ sub_586( "[GA] P_TGARDEN_CREATE_PLACEMENTS end" );
    return;
}

/* P_CREATE_S_NYC_GG_6M_01 */ void sub_25722()
{
     /* WRITESCRIPTLOG */ sub_5258( "CO", "P_CREATE_S_NYC_GG_6M_01", 0 );
     /* P_CREATECOLLECTIBLESTRUCT */ sub_25848( ref g_U703, g_U760, -341413462, 660843021, -34.57000000, 78.33000000, 6.20000000, 1.50000000, 0.00000000, 1.00000000, "" );
     /* P_CREATECOLLECTIBLE */ sub_26005( ref g_U703 );
    return;
}

/* P_CREATECOLLECTIBLESTRUCT */ void sub_25848(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_5258( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* P_CREATECOLLECTIBLE */ void sub_26005(int iParam0)
{
     /* WRITESCRIPTLOG */ sub_5258( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_26088( iParam0->_fU12 )) == 1)
        {
             /* WRITESCRIPTLOG */ sub_5258( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_5258( "CO", "has never been collected.", 0 );
        }
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_26088( iParam0->_fU12 )) == 0)
        {
             /* CLEANPLACEMENT */ sub_3809( iParam0->_fU0 );
            iParam0->_fU0 =  /* CREATEPLACEMENT */ sub_3922( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                     /* WRITESCRIPTLOG */ sub_5258( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_5258( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ int sub_26088(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

/* P_CREATE_S_NYC_GG_A9_03 */ void sub_26527()
{
     /* WRITESCRIPTLOG */ sub_5258( "CO", "P_CREATE_S_NYC_GG_A9_03", 0 );
     /* P_CREATECOLLECTIBLESTRUCT */ sub_25848( ref g_U685, g_U759, -786635469, 1303919135, -15.55000000, 77.90000000, 6.24000000, 0.00000000, 0.00000000, 1.00000000, "" );
     /* P_CREATECOLLECTIBLE */ sub_26005( ref g_U685 );
    return;
}

/* P_CLOSEDOOR */ void sub_26793(int iParam0, int iParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_26819( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_26903( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_26819(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_26903(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_SETDOORLOCKED */ void sub_27060(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if (( /* F_DOESDOOREXIST */ sub_26819( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_26903( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

/* P_LOAD_NONPERSISTENT_ASSETS */ void sub_27217(unknown uParam0)
{
     /* MLOG */ sub_10442( "P_LOAD_NONPERSISTENT_ASSETS", 0, 0 );
     /* LOADISEQ */ sub_27301( 1618183678, uParam0 );
     /* LOADISEQ */ sub_27301( -1081549521, uParam0 );
     /* LOADISEQ */ sub_27301( 1418792099, uParam0 );
     /* LOADANIMDICT */ sub_27634( "FACE_PASNYB", 0, uParam0 );
     /* LOADACTIONTREE */ sub_27844( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act", uParam0 );
     /* LOADMODEL */ sub_10797( g_U1332, uParam0 );
    return;
}

/* LOADISEQ */ void sub_27301(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                DISPLAYF( "[SP]### Waiting for interactive sequence to be loaded: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* LOADANIMDICT */ void sub_27634(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an animation dictionary to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADACTIONTREE */ void sub_27844(unknown uParam0, int iParam1)
{
    ACTION_TREE_LOAD( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_ACTION_TREE_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an Action Tree to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_TGARDEN_CREATE_VEHICLES */ void sub_28018()
{
     /* WRITE_STRING */ sub_586( "[GA] P_TGARDEN_CREATE_VEHICLES start" );
     /* LOADMODEL */ sub_10797( g_U1367, 1 );
     /* CLEANVEHICLE */ sub_28116( g_U1757 );
    g_U1757 =  /* CREATEVEHICLE */ sub_28204( g_U1367, g_U1758, g_U1761, 1, 0, 0 );
    if ( /* IS_VEHICLE_VALID */ sub_28522( g_U1757 ))
    {
        SET_VEHICLE_PROOFS( g_U1757, 0, 1, 0, 0, 0 );
         /* P_SET_STANDARD_VEHICLE_OPTIONS */ sub_28618( g_U1757, 0, 1 );
        SET_VEHICLE_LIGHTS( g_U1757, 2 );
        SET_VEHICLE_ON_GROUND_PROPERLY( g_U1757 );
        SET_VEHICLE_EXTRA( g_U1757, 1, 1 );
        SET_VEHICLE_EXTRA( g_U1757, 2, 1 );
        SET_VEHICLE_EXTRA( g_U1757, 3, 1 );
        SET_VEHICLE_EXTRA( g_U1757, 4, 1 );
        SET_VEHICLE_EXTRA( g_U1757, 5, 1 );
        SET_VEHICLE_EXTRA( g_U1757, 6, 1 );
        SET_VEHICLE_EXTRA( g_U1757, 7, 0 );
        SET_VEHICLE_EXTRA( g_U1757, 8, 0 );
    }
     /* LOADMODEL */ sub_10797( g_U1366, 1 );
     /* CLEANVEHICLE */ sub_28116( g_U1747 );
    g_U1747 =  /* CREATEVEHICLE */ sub_28204( g_U1366, g_U1748, g_U1751, 1, 0, 0 );
    if ( /* IS_VEHICLE_VALID */ sub_28522( g_U1747 ))
    {
        SET_VEHICLE_PROOFS( g_U1747, 0, 1, 0, 0, 0 );
        SET_VEHICLE_LIGHTS( g_U1747, 2 );
         /* P_SET_STANDARD_VEHICLE_OPTIONS */ sub_28618( g_U1747, 0, 1 );
        SET_VEHICLE_COLOUR_COMBINATION( g_U1747, 1 );
        SET_VEHICLE_EXTRA( g_U1747, 1, 0 );
        SET_VEHICLE_EXTRA( g_U1747, 2, 0 );
        SET_VEHICLE_EXTRA( g_U1747, 3, 1 );
        SET_VEHICLE_EXTRA( g_U1747, 4, 1 );
        SET_VEHICLE_EXTRA( g_U1747, 5, 1 );
        SET_VEHICLE_EXTRA( g_U1747, 6, 1 );
        SET_VEHICLE_EXTRA( g_U1747, 7, 1 );
        SET_VEHICLE_EXTRA( g_U1747, 8, 1 );
    }
     /* CLEANVEHICLE */ sub_28116( g_U1752 );
    g_U1752 =  /* CREATEVEHICLE */ sub_28204( g_U1366, g_U1753, g_U1756, 1, 0, 0 );
    if ( /* IS_VEHICLE_VALID */ sub_28522( g_U1752 ))
    {
        SET_VEHICLE_PROOFS( g_U1752, 0, 1, 0, 0, 0 );
         /* P_SET_STANDARD_VEHICLE_OPTIONS */ sub_28618( g_U1752, 0, 1 );
        REMOVE_VEHICLE_WINDOW( g_U1752, 0 );
        SET_VEHICLE_LIGHTS( g_U1752, 2 );
        SET_VEHICLE_COLOUR_COMBINATION( g_U1752, 2 );
        SET_VEHICLE_EXTRA( g_U1752, 1, 1 );
        SET_VEHICLE_EXTRA( g_U1752, 2, 1 );
        SET_VEHICLE_EXTRA( g_U1752, 3, 0 );
        SET_VEHICLE_EXTRA( g_U1752, 4, 0 );
        SET_VEHICLE_EXTRA( g_U1752, 5, 1 );
        SET_VEHICLE_EXTRA( g_U1752, 6, 1 );
        SET_VEHICLE_EXTRA( g_U1752, 7, 1 );
        SET_VEHICLE_EXTRA( g_U1752, 8, 1 );
    }
     /* WRITE_STRING */ sub_586( "[GA] P_TGARDEN_CREATE_VEHICLES end" );
    return;
}

/* CLEANVEHICLE */ void sub_28116(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

/* CREATEVEHICLE */ void sub_28204(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_10797( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for vehicle to exist: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

/* IS_VEHICLE_VALID */ int sub_28522(unknown uParam0)
{
    if ((NOT (IS_VEHICLE_DEAD( uParam0 ))) AND (DOES_VEHICLE_EXIST( uParam0 )))
    {
        return 1;
    }
    return 0;
}

/* P_SET_STANDARD_VEHICLE_OPTIONS */ void sub_28618(unknown uParam0, boolean bParam1, unknown uParam2)
{
     /* WRITESCRIPTLOG */ sub_5258( "SBA", "P_SET_STANDARD_VEHICLE_OPTIONS: Starting", "***" );
    if ( /* IS_VEHICLE_VALID */ sub_28522( uParam0 ))
    {
         /* WRITESCRIPTLOG */ sub_5258( "SBA", "P_SET_STANDARD_VEHICLE_OPTIONS: Car Valid - setting options", "***" );
        SET_VEHICLE_ON_GROUND_PROPERLY( uParam0 );
        SET_VEHICLE_CAN_BE_DAMAGED( uParam0, 1 );
        if (bParam1)
        {
            SET_VEHICLE_ENGINE_ON( uParam0, 1, 1 );
        }
        SET_VEHICLE_ENGINE_HEALTH( uParam0, 600.00000000 );
        SET_VEHICLE_PETROL_TANK_HEALTH( uParam0, 300.00000000 );
        SET_VEHICLE_PROOFS( uParam0, 0, 1, 1, 0, 0 );
        SET_VEHICLE_ONLY_DAMAGED_BY_PLAYER( uParam0, uParam2 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_5258( "SBA", "P_SET_STANDARD_VEHICLE_OPTIONS: CAR IS INVALID!", "***" );
    }
    return;
}

/* P_CREATE_RADIO_DUMMY_PED */ void sub_29637()
{
     /* MLOG */ sub_10442( "P_CREATE_RADIO_DUMMY_PED", 0, 0 );
    if ((g_U826 == 3) || (g_U826 == 4))
    {
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_924( ref l_U1133, g_U1753, g_U1756, 1579751406, 26, 6, 0, 0, 0 );
    }
    else if (g_U826 == 5)
    {
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_924( ref l_U1133, g_U1753, g_U1756, 919324660, 26, 6, 0, 0, 0 );
    }
    else
    {
        SCRIPT_ASSERT( "P_CREATE_RADIO_DUMMY_PED - We came from a non-existent checkpoint, WTF?!?", 0 );
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_924( ref l_U1133, g_U1753, g_U1756, 1579751406, 26, 6, 0, 0, 0 );
    }
     /* CLEANPED */ sub_10526( l_U1146 );
    l_U1146 =  /* CREATEPED */ sub_10615( ref l_U1133 );
    if ( /* IS_PED_VALID */ sub_5133( l_U1146 ))
    {
         /* P_DEACTIVATEPED */ sub_29968( l_U1146 );
        SET_PED_VISIBLE_DURING_SEQUENCE( l_U1146, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1146, 1 );
        SET_BLOCKING_OF_PED_TARGETTING( l_U1146, 1 );
        SET_PED_FREEZE_PROCESSING( l_U1146, 0 );
        SET_PED_NAME_DEBUG( l_U1146, "InvisibleGuy" );
    }
    return;
}

/* P_DEACTIVATEPED */ void sub_29968(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

/* P_SETDOORAUTOCLOSE */ void sub_30294(int iParam0, unknown uParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_26819( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_26903( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_AUTO_CLOSE( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

/* P_OPENDOOR */ void sub_30385(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if (( /* F_DOESDOOREXIST */ sub_26819( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_26903( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

/* P_SETDOORMINMAXLIMIT */ void sub_30568(int iParam0, float fParam1, float fParam2)
{
    if (( /* F_DOESDOOREXIST */ sub_26819( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_26903( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        PRINTSTRING( "[SP]### Error: Door fMinLimit greater than fMaxLimit (default min:-81.0 max:81.0) ###" );
        PRINTNL();
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

/* P_HANDLE_MUSIC */ void sub_30807()
{
    if (l_U280 != l_U278)
    {
         /* WRITESCRIPTLOG */ sub_5258( "TEH", "playing music:changed CUR FLAG", 0 );
         /* WRITE_INT */ sub_18612( l_U278 );
         /* WRITE_INT */ sub_18612( l_U279 );
        l_U280 = l_U278;
    }
    else if (l_U281 != l_U279)
    {
         /* WRITESCRIPTLOG */ sub_5258( "TEH", "playing music:changed NEW FLAG", 0 );
         /* WRITE_INT */ sub_18612( l_U278 );
         /* WRITE_INT */ sub_18612( l_U279 );
        l_U281 = l_U279;
    }
    switch (l_U278)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_5258( "TEH", "playing music:AUDIO_MUSIC_SUSPEND(3000) ", 0 );
        l_U278 = 3;
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_5258( "TEH", "playing music:AUDIO_MUSIC_SUSPEND(3000)", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_2_3", "", 0, 1000, 5000, -1082130432, 0 );
        l_U278 = 4;
        break;
        case 3:
        if (l_U279 == 3)
        {
             /* WRITESCRIPTLOG */ sub_5258( "TEH", "playing music: CEMETERY_SONG_03 CEMETERY_SONG_03_2_3, ", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_2_3", "", 0, 1000, 5000, -1082130432, 0 );
            l_U278 = 4;
        }
        break;
        case 5:
         /* WRITESCRIPTLOG */ sub_5258( "TEH", "playing music: CEMETERY_SONG_01 CEMETERY_SONG_03_2_3_6 ", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_2_3_6", "", 0, 5000, 5000, -1082130432, 0 );
        l_U278 = 6;
        break;
        case 4:
        if (l_U279 == 4)
        {
             /* WRITESCRIPTLOG */ sub_5258( "TEH", "playing music: CEMETERY_SONG_03 CEMETERY_SONG_03_2_3_6, ", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_2_3_6", "", 0, 5000, 5000, -1082130432, 0 );
            l_U278 = 6;
        }
        break;
        case 6:
        if (l_U279 == 6)
        {
             /* WRITESCRIPTLOG */ sub_5258( "TEH", "playing music: CEMETERY_SONG_03 CEMETERY_SONG_03_6, ", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_6", "", 0, 5000, 5000, -1082130432, 0 );
            l_U278 = 7;
        }
        break;
        case 7:
        if (l_U279 == 7)
        {
             /* WRITESCRIPTLOG */ sub_5258( "TEH", "suspend, ", 0 );
            AUDIO_MUSIC_SUSPEND( 5000 );
            l_U278 = 8;
        }
        break;
    }
    return;
}

/* HANDLE_CHECKPOINTS */ void sub_31974()
{
    if ((g_U826 == 5) || (g_U826 == 4))
    {
        if (l_U290 == 0)
        {
            if (NOT ( /* IS_PED_VALID */ sub_5133(  /* PLAYER_PED_ID */ sub_5039() )))
            {
                 /* WRITESCRIPTLOG */ sub_5258( "RJM", "HANDLE_CHECKPOINTS - Player died", 0 );
                g_U1233 = 0;
                l_U290 = 1;
            }
            else if ( /* RESTARTING_CHECKPOINT */ sub_32117())
            {
                 /* WRITESCRIPTLOG */ sub_5258( "SBA", "HANDLE_CHECKPOINTS - Restart", 0 );
                g_U1233 = 0;
                l_U290 = 1;
            }
            else if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (l_U1204))
            {
                g_U1233 = 0;
                 /* WRITESCRIPTLOG */ sub_5258( "RJM", "HANDLE_CHECKPOINTS - Passos died", 0 );
                l_U290 = 2;
            };;;
        }
         /* P_HANDLE_FAILURE */ sub_32713();
    }
    return;
}

/* RESTARTING_CHECKPOINT */ int sub_32117()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U37 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_5039() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_5039(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_5077(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_5077(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_5039() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_5039(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* P_HANDLE_FAILURE */ void sub_32713()
{
    switch (l_U290)
    {
        case 0: break;
        case 2:
        if ( /* IS_MAX_VALID */ sub_5014())
        {
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_5039(), 1 );
        }
        if (l_U288 == 1)
        {
            if (NOT (IS_PED_DEAD( g_U824 )))
            {
                SET_PED_COLLISION( g_U824, 1 );
            }
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            l_U290 = 1;
        }
        else if (l_U288 == 0)
        {
            if ( /* PLAY_PASSOS_TREEGARDEN_DEATH_SCENE */ sub_32913())
            {
                l_U290 = 1;
            }
        }
        break;
        case 1:
        if ( /* IS_RESTART_ACTIVE */ sub_36947())
        {
            if ((g_U1800[6]._fU40 != 4) AND (g_U1800[6]._fU40 != 0))
            {
                 /* WRITESCRIPTLOG */ sub_5258( "GA", "Shutting down script for Rotunda Hostage.", 0 );
                 /* P_RESET_CHECKPOINT_THREAD */ sub_37091( ref g_U1800[6] );
                SET_EXITFLAG_FOR_SCRIPT( g_U1800[6]._fU32 );
            }
            l_U290 = 3;
        }
        else if (( /* F_CHECK_QUIT_RETRY */ sub_37184( 0 )) == 1)
        {
            if ((g_U1800[6]._fU40 != 4) AND (g_U1800[6]._fU40 != 0))
            {
                 /* WRITESCRIPTLOG */ sub_5258( "GA", "Shutting down script for Rotunda Hostage.", 0 );
                 /* P_RESET_CHECKPOINT_THREAD */ sub_37091( ref g_U1800[6] );
                SET_EXITFLAG_FOR_SCRIPT( g_U1800[6]._fU32 );
            }
            l_U290 = 3;
        }
        break;
        case 3:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_5039() )))
        {
             /* WRITESCRIPTLOG */ sub_5258( "CCB", "Deactivating bullettime...", 0 );
            DEACTIVATE_BULLET_TIME( 1, 0 );
            END_POSTFX_BLENDER( 3, 0 );
            l_U290 = 4;
             /* WRITESCRIPTLOG */ sub_5258( "CCB", "eFailure - STATE_FAIL_CLEANUP", 0 );
        }
        break;
        case 4:
        if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_5077() )))
        {
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_5039() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_5077(), 0, 0 );
            }
        }
        DO_SCREEN_FADE_OUT( 0 );
         /* P_IMAGEFX_STOP_BULLETCAM */ sub_38548( "CEM_PASSOS2_SCRIPTED_FAIL_FX" );
        DESTROY_ALL_CAMS();
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        AUDIO_MUSIC_SUSPEND( 500 );
        ISEQ_UNREGISTER_ENTITY( 1618183678, "thug" );
         /* TERMINATEISEQ */ sub_34529( 1618183678, 1 );
         /* P_CLEANUP_ALL */ sub_38737();
         /* CLEANPED */ sub_10526( g_U824 );
        if (g_U826 == 5)
        {
            SET_HELPER_TRACKING_MODE( 1 );
        }
        l_U290 = 5;
         /* WRITESCRIPTLOG */ sub_5258( "CCB", "eFailure - STATE_FAIL_RESTORE", 0 );
        break;
        case 5:
        if (NOT IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED())
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        }
         /* P_LOAD_NONPERSISTENT_ASSETS */ sub_27217( 1 );
         /* P_INITIALIZE_SCRIPT_DATA */ sub_641();
         /* P_SETUP_PLAYER_RELATIONSHIPS */ sub_39180();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U290 = 6;
         /* WRITESCRIPTLOG */ sub_5258( "CCB", "eFailure - STATE_FAIL_RESTART", 0 );
        break;
        case 6:
        if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
        {
             /* WRITESCRIPTLOG */ sub_5258( "CCB", "eFailure - STATE_FAIL_IDLE", 0 );
             /* P_TGARDEN_CREATE_PLACEMENTS */ sub_25636();
            l_U1465 = 0;
            if (g_U826 == 4)
            {
                 /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_22712( ref l_U795,  /* PLAYER_PED_ID */ sub_5039() );
                 /* CREATE_SMALL_ROTUNDA_PLACEMENTS */ sub_3706();
                l_U278 = 2;
                l_U282 = 0;
            }
            else if (g_U826 == 5)
            {
                 /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_22712( ref l_U831,  /* PLAYER_PED_ID */ sub_5039() );
                l_U283 = 2;
                l_U282 = 6;
                 /* P_TGARDEN_CREATE_VEHICLES */ sub_28018();
                 /* P_CREATE_RADIO_DUMMY_PED */ sub_29637();
                 /* UNLOADMODEL */ sub_25460( -1801845566 );
                 /* UNLOADMODEL */ sub_25460( -1417866625 );
                l_U279 = 5;
                 /* P_SETDOORMINMAXLIMIT */ sub_30568( ref g_U1487, -85.00000000, 98.00000000 );
                 /* P_CLOSEDOOR */ sub_26793( ref g_U1480, 1 );
                 /* P_CLOSEDOOR */ sub_26793( ref g_U1487, 1 );
                 /* P_SETDOORLOCKED */ sub_27060( ref g_U1480, 1 );
                 /* P_SETDOORLOCKED */ sub_27060( ref g_U1487, 1 );
                 /* CREATE_SMALL_ROTUNDA_PLACEMENTS */ sub_3706();
                if (NOT ( /* F_IMAGEFX_FADE_IN */ sub_13623()))
                {
                    if ((IS_DEATH_PANEL_WIPE_ALLOWED()) || (IS_SCREEN_FADED_OUT()))
                    {
                        DO_SCREEN_FADE_IN( 500 );
                    }
                }
                 /* CREATETIMER */ sub_34164( ref l_U1210, 7000, 1, 0 );
                 /* STARTTIMER */ sub_35653( ref l_U1210 );
            }
            if ( /* IS_MAX_VALID */ sub_5014())
            {
                SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_5039(), 0 );
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_5077(), 1, 0 );
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_5039(), 1 );
            }
             /* P_RESET_CHECKPOINT_THREAD */ sub_37091( ref g_U1800[6] );
            l_U290 = 0;
             /* WRITESCRIPTLOG */ sub_5258( "CCB", "eCheckpoint - STATE_CHECKPOINT_INIT", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_5258( "CCB", "Waiting for stream requests...", 0 );
        }
        break;
    }
    return;
}

/* PLAY_PASSOS_TREEGARDEN_DEATH_SCENE */ int sub_32913()
{
    unknown uVar2;

    switch (l_U289)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_5258( "CCB", "PLAY_PASSOS_TREEGARDEN_DEATH_SCENE: ePassosDeathMidsceneState - STATE_DEATHCAM_INIT", 0 );
         /* NIS_PRE_SETUP */ sub_33114( 1, 0, 0, 0 );
         /* P_DEACTIVATEPEDARRAY */ sub_33293( ref l_U977 );
         /* P_DEACTIVATEPEDARRAY */ sub_33293( ref l_U897 );
         /* P_DEACTIVATEPEDARRAY */ sub_33293( ref l_U867 );
        uVar2 =  /* GET_SCENEPED_FOR_PASSOS_DEATH */ sub_33389();
         /* NIS_CREATE_STATIC_CAM */ sub_34012( ref l_U1148, -8.62323500, 105.86530000, 5.92151200, 2.78493100, l_U1539, 57.38906000, 45, 1500 );
         /* LOADISEQ */ sub_27301( 1418792099, 1 );
        if ( /* IS_MAX_VALID */ sub_5014())
        {
            SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_5039(), 0 );
        }
        if (ISEQ_QUERY_ENTITY_STATE( -1081549521, "PASSOS", 3 ))
        {
             /* WRITESCRIPTLOG */ sub_5258( "RJM", "S_CEM_08_03_BLENDOUT was playing, kill it.", 0 );
            ISEQ_UNREGISTER_ENTITY( -1081549521, "PASSOS" );
             /* TERMINATEISEQ */ sub_34529( -1081549521, 1 );
        }
        if ( /* IS_PED_VALID */ sub_5133( g_U824 ))
        {
            CLEAR_PED_TASKS_IMMEDIATELY( g_U824 );
             /* TELEPORTPED */ sub_12673( g_U824, l_U1535, l_U1538 );
             /* SETUP_PASSOS_FOR_FAILURE_SCENE */ sub_34882( ref g_U824 );
            ISEQ_REGISTER_ENTITY( 1418792099, "PASSOS", g_U824, 0 );
            ISEQ_START( 1418792099 );
        }
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_924( ref l_U1179, -20.67000000, 110.33000000, 6.00000000, 65416, uVar2, 7, 3, 2, 0, 0 );
         /* CLEANPED */ sub_10526( l_U1192 );
        l_U1192 =  /* CREATEPED */ sub_10615( ref l_U1179 );
        if ( /* IS_PED_VALID */ sub_5133( l_U1192 ))
        {
             /* SETUP_KILLER_FOR_FAILURE_CUTSCENES */ sub_35326( ref l_U1192 );
             /* F_GIVEPEDWEAPON */ sub_11966( l_U1192, -862236369, 25000, 0, 0 );
            REGISTER_TARGET( l_U1192, g_U824 );
            SET_PED_DEFAULT_AIM_AT_PED( l_U1192, g_U824 );
            TASK_AIM_GUN_AT_PED( l_U1192, g_U824, -1, 0 );
        }
        l_U289 = 3;
         /* WRITESCRIPTLOG */ sub_5258( "CCB", "ePassosDeathMidsceneState - STATE_DEATHCAM_START", 0 );
        case 3:
         /* NIS_PLAY_STATIC_CAMERA */ sub_35573( ref l_U1148 );
         /* P_IMAGEFX_START_BULLETCAM */ sub_35838( "CEM_PASSOS2_SCRIPTED_FAIL_FX", 0 );
        SHAKE_CAM( l_U1148._fU0,  /* F_CAM_SHAKE_WOBBLY */ sub_36233(), 0.25000000 );
         /* CREATETIMER */ sub_34164( ref l_U1526, l_U1540, 1, 0 );
         /* STARTTIMER */ sub_35653( ref l_U1526 );
        l_U289 = 1;
         /* WRITESCRIPTLOG */ sub_5258( "CCB", "ePassosDeathMidsceneState - STATE_DEATHCAM_WAITING", 0 );
        break;
        case 1:
        if ( /* ISTIMERDONE */ sub_36404( ref l_U1526 ))
        {
            if (( /* IS_PED_VALID */ sub_5133( g_U824 )) AND ( /* IS_PED_VALID */ sub_5133( l_U1192 )))
            {
                SET_PED_SHOOTS_AT_COORD( l_U1192, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U824, 65488, 0, 0, 0 ) );
                SHAKE_CAM( l_U1148._fU0, "SMALL_EXPLOSION_SHAKE", 1 );
                SET_PED_DEFAULT_AIM_AT_COORD( l_U1192, -10.06000000, 108.19000000, 5.24000000 );
                 /* P_KILL_PED */ sub_12549( g_U824 );
                 /* CREATETIMER */ sub_34164( ref l_U1526, 50, 1, 0 );
                 /* STARTTIMER */ sub_35653( ref l_U1526 );
                l_U289 = 5;
                 /* WRITESCRIPTLOG */ sub_5258( "CCB", "ePassosDeathMidsceneState - STATE_DEATHCAM_PLAYING", 0 );
            }
        }
        break;
        case 5:
        if ( /* ISTIMERDONE */ sub_36404( ref l_U1526 ))
        {
            l_U289 = 6;
             /* WRITESCRIPTLOG */ sub_5258( "CCB", "ePassosDeathMidsceneState - STATE_DEATHCAM_FINISHED", 0 );
        }
        break;
        case 6:
        return 1;
        break;
    }
    return 0;
}

/* NIS_PRE_SETUP */ void sub_33114(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_5039() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_5077(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_5039(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_5039() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_5039(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* P_DEACTIVATEPEDARRAY */ void sub_33293(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_DEACTIVATEPED */ sub_29968( (uParam0^)[I] );
    }
    return;
}

/* GET_SCENEPED_FOR_PASSOS_DEATH */ int sub_33389()
{
    int I;

    for ( I = 0; I <= (l_U867 - 1); I++ )
    {
        if ( /* IS_PED_VALID */ sub_5133( l_U867[I] ))
        {
             /* WRITESCRIPTLOG */ sub_5258( "RJM", "GET_SCENEPED_FOR_PASSOS_DEATH - Found a guy from the runners", 0 );
            return l_U870[I]._fU20;
        }
    }
    for ( I = 0; I <= (l_U977 - 1); I++ )
    {
        if ( /* IS_PED_VALID */ sub_5133( l_U977[I] ))
        {
             /* WRITESCRIPTLOG */ sub_5258( "RJM", "GET_SCENEPED_FOR_PASSOS_DEATH - Found a guy from the reinforcements", 0 );
            return l_U981[I]._fU20;
        }
    }
    for ( I = 0; I <= (l_U897 - 1); I++ )
    {
        if ( /* IS_PED_VALID */ sub_5133( l_U897[I] ))
        {
             /* WRITESCRIPTLOG */ sub_5258( "RJM", "GET_SCENEPED_FOR_PASSOS_DEATH - Found a guy from the main group", 0 );
            return l_U903[I]._fU20;
        }
    }
     /* WRITESCRIPTLOG */ sub_5258( "RJM", "GET_SCENEPED_FOR_PASSOS_DEATH - Couldn't find anyone alive...that's weird, use a default", 0 );
    return 1432608068;
}

/* NIS_CREATE_STATIC_CAM */ void sub_34012(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_34164( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U763, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* CREATETIMER */ void sub_34164(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* TERMINATEISEQ */ void sub_34529(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            DISPLAYF( "[SP]### Waiting for interactive sequence to terminate: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* SETUP_PASSOS_FOR_FAILURE_SCENE */ void sub_34882(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_5258( "RJM", "P_SETUP_PASSOS_FOR_FAILURE_SCENE", "***" );
    if ( /* IS_PED_VALID */ sub_5133( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^), 0 );
        SET_PED_VALIDATE_BULLET_CAM_HIT( (uParam0^), 1 );
        SET_AI_SHOULD_ALWAYS_MISS_PED( (uParam0^), 0 );
        SET_CAN_AI_KICK_THROUGH_CORPSES( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_AI_TEMPLATE( (uParam0^), "AIT_NORMAL" );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( (uParam0^), 0 );
        SET_PED_AS_ONE_SHOT_KILL( (uParam0^), 1 );
        SET_PED_GORE( (uParam0^), 1 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), 0 );
        SET_PED_PROOFS( (uParam0^), 0, 1, 1, 1, 1 );
        SET_PED_ALLOWED_TO_SURRENDER( (uParam0^), 0 );
        SET_PED_CAN_AVOID_DEATH_ZONES( (uParam0^), 0 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( (uParam0^), 1 );
        SET_PED_CAN_PUSH_PLAYER( (uParam0^), 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( (uParam0^), 0 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_CAN_BE_TARGETTED( (uParam0^), 1 );
    }
    return;
}

/* SETUP_KILLER_FOR_FAILURE_CUTSCENES */ void sub_35326(unknown uParam0)
{
    if ( /* IS_PED_VALID */ sub_5133( (uParam0^) ))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
        SET_PED_COMBAT_MOVEMENT( (uParam0^), 0 );
    }
    return;
}

/* NIS_PLAY_STATIC_CAMERA */ void sub_35573(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_35653( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

/* STARTTIMER */ void sub_35653(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* P_IMAGEFX_START_BULLETCAM */ void sub_35838(unknown uParam0, boolean bParam1)
{
    PRINTSTRING( "[CO] P_IMAGEFX_START_BULLETCAM: Starting BulletCam: " );
    PRINTSTRING( uParam0 );
    PRINTNL();
     /* CLEANCAMERA */ sub_35958( ref l_U277 );
    l_U277 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
    SETUP_BULLET_CAMERA_SCENE( l_U277, uParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
    if (bParam1)
    {
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    }
    return;
}

/* CLEANCAMERA */ void sub_35958(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

/* F_CAM_SHAKE_WOBBLY */ string sub_36233()
{
    return "WOBBLY_SHAKE";
}

/* ISTIMERDONE */ int sub_36404(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* IS_RESTART_ACTIVE */ void sub_36947()
{
    return g_U648;
}

/* P_RESET_CHECKPOINT_THREAD */ void sub_37091(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

/* F_CHECK_QUIT_RETRY */ int sub_37184(int iParam0)
{
    iParam0 = 1;
    switch (l_U246)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_37266( ref l_U248 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_5039() )))
            {
                l_U247 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_34164( ref l_U248, l_U247, 1, 1 );
             /* STARTTIMER */ sub_35653( ref l_U248 );
        }
        if ( /* ISTIMERDONE */ sub_36404( ref l_U248 ))
        {
             /* WRITESCRIPTLOG */ sub_5258( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_5039() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_5077() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_5077(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U246 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U246 = 2;
            }
            else
            {
                l_U246 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_5258( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_37749();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_5258( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_37749();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_37266(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_37749()
{
     /* WRITESCRIPTLOG */ sub_5258( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_37824( ref l_U248 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_5077() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_5077(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U245 = 0;
    l_U245 = l_U245;
    l_U246 = 0;
    return;
}

/* RESETTIMER */ void sub_37824(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_IMAGEFX_STOP_BULLETCAM */ void sub_38548(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_5258( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
     /* CLEANCAMERA */ sub_35958( ref l_U277 );
    l_U276 = 1;
    return;
}

/* P_CLEANUP_ALL */ void sub_38737()
{
     /* WRITE_STRING */ sub_586( "[GA] P_CLEANUP_ALL start" );
     /* CLEANPED */ sub_10526( l_U1192 );
     /* CLEANPEDARRAY */ sub_38809( ref l_U867 );
     /* CLEANPEDARRAY */ sub_38809( ref l_U897 );
     /* CLEANPEDARRAY */ sub_38809( ref l_U977 );
     /* CLEANPEDARRAY */ sub_38809( ref l_U1028 );
     /* CLEANVEHICLE */ sub_28116( g_U1757 );
     /* CLEANVEHICLE */ sub_28116( g_U1747 );
     /* CLEANVEHICLE */ sub_28116( g_U1752 );
     /* CLEANPLACEMENT */ sub_3809( g_U703._fU0 );
     /* CLEANPLACEMENT */ sub_3809( g_U685._fU0 );
     /* CLEANPLACEMENTARRAY */ sub_3754( ref l_U1193 );
     /* TERMINATEISEQ */ sub_34529( 1618183678, 0 );
     /* CLEANPED */ sub_10526( l_U1078 );
     /* CLEANPED */ sub_10526( l_U1092 );
     /* CLEANPED */ sub_10526( l_U1106 );
     /* CLEANPED */ sub_10526( l_U1146 );
     /* TERMINATEISEQ */ sub_34529( -1081549521, 0 );
     /* TERMINATEISEQ */ sub_34529( 1418792099, 0 );
    SET_HELPER_TRACKING_MODE( 0 );
    return;
}

/* CLEANPEDARRAY */ void sub_38809(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_10526( (uParam0^)[I] );
    }
    return;
}

/* P_SETUP_PLAYER_RELATIONSHIPS */ void sub_39180()
{
     /* WRITESCRIPTLOG */ sub_5258( "SP", "P_SETUP_PLAYER_RELATIONSHIPS", "###" );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_5039() )) == 0)
    {
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_5039(), 0, 1 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_5039(), 0, 2 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_5039(), 0, 6 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_5039(), 0, 7 );
    }
    return;
}

/* HANDLE_EVENTS */ void sub_39921()
{
    int iVar2;

    if (l_U290 == 0)
    {
        switch (l_U282)
        {
            case 0:
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                 /* SETUP_GAMEPLAY */ sub_40033();
                 /* P_TGARDEN_CREATE_PLACEMENTS */ sub_25636();
                 /* P_CLOSEDOOR */ sub_26793( ref g_U1487, 1 );
                 /* P_CLOSEDOOR */ sub_26793( ref g_U1480, 1 );
                 /* P_SETDOORLOCKED */ sub_27060( ref g_U1480, 1 );
                 /* P_SETDOORLOCKED */ sub_27060( ref g_U1487, 1 );
                if (DOES_PED_EXIST( l_U1146 ))
                {
                    SET_PED_VISIBLE( l_U1146, 0 );
                }
                 /* WRITESCRIPTLOG */ sub_5258( "AT", "eTreeGardenState = TREEGARDEN_CS_08_03_CEM", 0 );
                l_U282 = 1;
            }
            break;
            case 1:
            if (g_U1238)
            {
                if ( /* CUTSYS_HANDLECUTSCENE */ sub_42880( ref l_U292 ))
                {
                    if ( /* IS_VEHICLE_VALID */ sub_28522( g_U1757 ))
                    {
                        FREEZE_VEHICLE_POSITION( g_U1757, 0 );
                    }
                     /* WRITESCRIPTLOG */ sub_5258( "AT", "eTreeGardenState = TREEGARDEN_FIGHT", 0 );
                    l_U282 = 4;
                }
            }
            break;
            case 4:
            if (NOT l_U338)
            {
                if ((ISEQ_QUERY_ENTITY_STATE( -1081549521, "PASSOS", 6 )) || (ISEQ_QUERY_ENTITY_STATE( -1081549521, "PASSOS", 5 )))
                {
                    if (IS_PED_DEAD( g_U824 ))
                    {
                         /* WRITESCRIPTLOG */ sub_5258( "AT", "Player has shot Passos!", 0 );
                        l_U288 = 1;
                        l_U1204 = 1;
                        break;
                    }
                    else if (l_U975)
                    {
                         /* CLEANPED */ sub_10526( g_U824 );
                         /* UNLOADMODEL */ sub_25460( g_U1332 );
                        l_U338 = 1;
                    }
                    else
                    {
                         /* WRITESCRIPTLOG */ sub_5258( "AT", "Passos has died!", 0 );
                        l_U288 = 0;
                        l_U1204 = 1;
                        break;
                    }
                }
                 /* HAS_FIGHT_BEEN_STARTED_BY_MAX */ sub_45230( ref l_U975 );
            }
            if (NOT l_U1027)
            {
                if ((NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_45701( l_U412 ))) || (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_45938( ref l_U897 )) <= 4))
                {
                     /* CREATE_TREE_GARDEN_REINFORCEMENTS_FROM_ROTUNDA */ sub_46071();
                    l_U1027 = 1;
                }
            }
            else
            {
                iVar2 = ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_45938( ref l_U897 )) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_45938( ref l_U977 ));
                if (iVar2 == 1)
                {
                    if ( /* F_ISPLAYERINTRIGGERBOX */ sub_45701( l_U454 ))
                    {
                        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
                    }
                    else
                    {
                        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
                    }
                     /* LOADMODEL */ sub_10797( -1100720042, 0 );
                     /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_46988( ref l_U897 );
                     /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_46988( ref l_U977 );
                }
                else if (iVar2 == 0)
                {
                    l_U279 = 4;
                     /* P_HANDLE_MUSIC */ sub_30807();
                     /* CLEANPED */ sub_10526( g_U824 );
                     /* UNLOADMODEL */ sub_25460( g_U1332 );
                    l_U282 = 5;
                }
            }
            if ( /* IS_PED_VALID */ sub_5133( l_U1146 ))
            {
                SET_PED_VISIBLE( l_U1146, 0 );
            }
            break;
            case 5:
            if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
            {
                if (g_U826 != 5)
                {
                    g_U826 = 5;
                     /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_14007( ref l_U831, g_U826,  /* PLAYER_PED_ID */ sub_5039(), g_U971[5]._fU0, g_U971[5]._fU12, g_U971[5]._fU16, g_U971[5]._fU20, 1 );
                }
                if ( /* F_ISPLAYERINTRIGGERBOX */ sub_45701( l_U454 ))
                {
                    l_U1202 = 1;
                }
                 /* CLEANPED */ sub_10526( g_U824 );
                 /* UNLOADMODEL */ sub_25460( g_U1332 );
                l_U282 = 6;
                 /* LOADMODEL */ sub_10797( -1100720042, 1 );
                START_CONTEXT( "CEMETERY_SMALL_ROTUNDA" );
            }
            break;
            case 6:
            if (IS_SCREEN_FADED_IN())
            {
                if ( /* ISTIMERDONE */ sub_36404( ref l_U1210 ))
                {
                    SET_HELPER_TRACKING_MODE( 0 );
                }
                if ( /* UPDATE_FORCEWALK_AND_TRIGGER_PAIR */ sub_47486( l_U370, l_U391, 0 ))
                {
                     /* WRITESCRIPTLOG */ sub_5258( "RJM", "HANDLE_EVENTS - Moving to TREEGARDEN_DONE", 0 );
                    g_U1236 = 1;
                    l_U278 = 7;
                    l_U279 = 7;
                     /* P_HANDLE_MUSIC */ sub_30807();
                    l_U282 = 7;
                }
                if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_47916( ref l_U769,  /* PLAYER_PED_ID */ sub_5039(), 0 ))
                {
                     /* P_INITIALIZE_IMAGEFX_CP05_END */ sub_48045();
                     /* P_HANDLE_IMAGEFX */ sub_48449( ref l_U1275 );
                }
                if ( /* IS_PED_VALID */ sub_5133( l_U1146 ))
                {
                    if (IS_PED_VISIBLE( l_U1146 ))
                    {
                        SET_PED_VISIBLE( l_U1146, 0 );
                    }
                }
                if ((l_U279 != 6) AND ((l_U278 == 6) AND (l_U1201)))
                {
                    iVar2 =  /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_45938( ref l_U1028 );
                    if ((IS_PED_DEAD( l_U1078 )) == 0)
                    {
                        iVar2++;
                    }
                    if ((IS_PED_DEAD( l_U1092 )) == 0)
                    {
                        iVar2++;
                    }
                    if ((IS_PED_DEAD( l_U1106 )) == 0)
                    {
                        iVar2++;
                    }
                    if (iVar2 == 0)
                    {
                        l_U1208 = 1;
                        l_U1207 = 1;
                        END_CONTEXT( "CEMETERY_SMALL_ROTUNDA" );
                        l_U279 = 6;
                    }
                }
                if (l_U1208)
                {
                    if (NOT l_U1209)
                    {
                         /* UPDATE_SMROT_PILL_VO */ sub_49520();
                    }
                    else
                    {
                        l_U1208 = 1;
                    }
                }
                if (l_U1207)
                {
                    if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (NOT (IS_BULLET_CAMERA_RUNNING( 0 ))))
                    {
                         /* TAKE_PAINKILLER_ARRAY_SNAPSHOT */ sub_51186( ref l_U1193, ref l_U1196 );
                        l_U1207 = 0;
                         /* P_DIAL_MAX_WONDERING_ABOUT_PASSOS */ sub_51408();
                    }
                }
                 /* P_HANDLE_IMAGEFX_CP05 */ sub_52073();
                 /* P_HANDLE_IMAGEFX */ sub_48449( ref l_U1275 );
                 /* ASSIGN_SMALL_ROTUNDA_BULLET_CAMS */ sub_53431();
                 /* UPDATE_RADIO */ sub_53616();
                 /* UPDATE_VIG09B */ sub_55476();
                 /* UPDATE_VIG10 */ sub_58113();
                 /* UPDATE_REINFORCEMENTS */ sub_61538();
            }
            else if ( /* IS_PED_VALID */ sub_5133( l_U1146 ))
            {
                if (IS_PED_VISIBLE( l_U1146 ))
                {
                    SET_PED_VISIBLE( l_U1146, 0 );
                }
            }
            break;
            case 7:
             /* KILL_SPEECH */ sub_51502( ref l_U1516, 0 );
             /* KILL_SPEECH */ sub_51502( ref g_U1239, 0 );
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            break;
        }
    }
    return;
}

/* SETUP_GAMEPLAY */ void sub_40033()
{
     /* P_LOAD_NONPERSISTENT_ASSETS */ sub_27217( 0 );
     /* P_TGARDEN_CREATE_VEHICLES */ sub_28018();
     /* P_SETUP_TREE_GARDEN_THUGS */ sub_40071();
     /* CREATE_RUNNERS */ sub_42498();
     /* P_CREATE_RADIO_DUMMY_PED */ sub_29637();
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    return;
}

/* P_SETUP_TREE_GARDEN_THUGS */ void sub_40071()
{
     /* PED_ARRAY_INITIALIZE */ sub_40146( ref l_U903, ref l_U897, ref l_U969, 434544317, 0.80000000, ref g_U1212, 0, 0, 25000, 2, 0, 25000, 0 );
     /* PED_ARRAY_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_42021( ref l_U897, 1 );
     /* PED_ARRAY_SET_TETHERBOX */ sub_42219( ref l_U897, l_U790, 1 );
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_41878( ref l_U897, "piTreeGardenThugs" );
     /* P_DEACTIVATEPEDARRAY */ sub_33293( ref l_U897 );
    return;
}

/* PED_ARRAY_INITIALIZE */ void sub_40146(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5, boolean bParam6, unknown uParam7, unknown uParam8, unknown uParam9, int iParam10, unknown uParam11, unknown uParam12)
{
    int I;
    unknown uVar16;

    if ((uParam0^) != (uParam1^))
    {
        SCRIPT_ASSERT( "PED_ARRAY_INITIALIZE - Array sizes don't match!!", 0 );
        return;
    }
     /* P_SETUP_AI_GROUP */ sub_40258( uParam2, uParam4, 0 );
    if (IS_STRING_NULL( uParam12 ))
    {
        uParam12 = l_U109;
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* CLEANPED */ sub_10526( (uParam1^)[I] );
        (uParam1^)[I] =  /* CREATEPED */ sub_10615( ref (uParam0^)[I] );
        if ( /* IS_PED_VALID */ sub_5133( (uParam1^)[I] ))
        {
            SET_PED_AI_TEMPLATE( (uParam1^)[I], uParam5 );
            SET_PED_ALERTNESS( (uParam1^)[I], uParam9 );
            SET_PED_ALLOWED_TO_SURRENDER( (uParam1^)[I], 0 );
             /* P_QUICK_ADD_PED_TO_GROUP */ sub_40796( (uParam1^)[I], uParam2 );
            if (iParam3 != -1569615261)
            {
                uVar16 =  /* F_GIVEPEDWEAPON */ sub_11966( (uParam1^)[I], iParam3, uParam8, 0, 0 );
            }
            if (iParam10 != 0)
            {
                 /* F_GIVEPEDWEAPONTOHOLSTER */ sub_23616( (uParam1^)[I], iParam10, 0, uParam11, 0 );
            }
            if (bParam6)
            {
                 /* PED_SET_ENGAGEMENT_RANGES */ sub_41262( (uParam1^)[I], iParam3 );
            }
            switch (uParam7)
            {
                case 0: break;
                case 1:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 13, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 13, 1 );
                break;
                case 2:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 14, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 14, 1 );
                break;
                case 3:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 12, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 12, 1 );
                break;
            }
        }
    }
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_41878( uParam1, uParam12 );
    return;
}

/* P_SETUP_AI_GROUP */ void sub_40258(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_40796(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_586( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_40258( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_40258( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* PED_SET_ENGAGEMENT_RANGES */ void sub_41262(unknown uParam0, unknown uParam1)
{
    switch (uParam1)
    {
        case -1569615261:
        case 406496141:
        case -862236369:
        case 456708483:
        case -1464892298:
        case 68019059:
        case -612753081:
        case -820634585:
        SET_PED_COMBAT_RANGE_MAX( uParam0, 10.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case 434544317:
        case 1845102363:
        case -168327769:
        case -184942895:
        case 514118749:
        case 1964270085:
        case -691403429:
        case 1478009203:
        case -1404433099:
        case 1194438308:
        SET_PED_COMBAT_RANGE( uParam0, 1 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 20.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case -1013714740:
        case -1074756423:
        case 1308526797:
        case 840671040:
        case 57534114:
        case 724901397:
        case 1992962408:
        SET_PED_COMBAT_RANGE( uParam0, 2 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 30.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case 1224272620:
        case 10648147:
        case 377623895:
        case 319712764:
        case -110877124:
        case -1659006841:
        SET_PED_COMBAT_RANGE( uParam0, 3 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 50.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 5.00000000 );
        break;
    }
    return;
}

/* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ void sub_41878(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

/* PED_ARRAY_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ void sub_42021(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_42104( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ void sub_42104(unknown uParam0, unknown uParam1)
{
    if ( /* IS_PED_VALID */ sub_5133( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), uParam1 );
    }
    return;
}

/* PED_ARRAY_SET_TETHERBOX */ void sub_42219(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* PED_SET_TETHERBOX */ sub_42281( ref (uParam0^)[I], uParam1, uParam2 );
    }
    return;
}

/* PED_SET_TETHERBOX */ void sub_42281(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if ( /* IS_PED_VALID */ sub_5133( (uParam0^) ))
    {
        RESET_PED_TETHERING( (uParam0^) );
         /* P_TETHERPED */ sub_42340( ref uParam1, (uParam0^), uParam2 );
    }
    return;
}

/* P_TETHERPED */ void sub_42340(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

/* CREATE_RUNNERS */ void sub_42498()
{
    int I;

    for ( I = 0; I <= (l_U867 - 1); I++ )
    {
         /* CLEANPED */ sub_10526( l_U867[I] );
        l_U867[I] =  /* CREATEPED */ sub_10615( ref l_U870[I] );
        if ( /* IS_PED_VALID */ sub_5133( l_U867[I] ))
        {
             /* F_GIVEPEDWEAPON */ sub_11966( l_U867[I], -862236369, 25000, 0, 0 );
            SET_PED_AS_ONE_SHOT_KILL( l_U867[I], 1 );
             /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_42104( ref l_U867[I], 1 );
        }
    }
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_41878( ref l_U867, "piRunner" );
     /* P_DEACTIVATEPEDARRAY */ sub_33293( ref l_U867 );
    return;
}

/* CUTSYS_HANDLECUTSCENE */ void sub_42880(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
             /* WRITESCRIPTLOG */ sub_5258( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
             /* WRITESCRIPTLOG */ sub_5258( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                 /* WRITESCRIPTLOG */ sub_5258( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
             /* WRITESCRIPTLOG */ sub_5258( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
             /* WRITESCRIPTLOG */ sub_5258( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
             /* WRITESCRIPTLOG */ sub_5258( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
             /* LOADSEAMLESSCUTSCENE */ sub_20934( iParam0->_fU0, 0 );
             /* WRITESCRIPTLOG */ sub_5258( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
             /* NIS_PRE_SETUP */ sub_33114( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
         /* NIS_PRE_SETUP */ sub_33114( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
         /* WRITESCRIPTLOG */ sub_5258( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                 /* P_SET_PLAYER_WEAPONS_VISIBLE */ sub_44145( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
         /* NIS_PRE_SETUP */ sub_33114( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
             /* NIS_POST_SETUP */ sub_44525( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
         /* NIS_POST_SETUP */ sub_44525( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

/* P_SET_PLAYER_WEAPONS_VISIBLE */ void sub_44145(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_5039() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_5039(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_5039(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_5039(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_5039(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_5039(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

/* NIS_POST_SETUP */ void sub_44525(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_5039() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_5077(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_5039(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_44623();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_44623()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_5039() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_5039(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_5039(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_5039(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_5039(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* HAS_FIGHT_BEEN_STARTED_BY_MAX */ void sub_45230(unknown uParam0)
{
    if (NOT (uParam0^))
    {
        if ( /* IS_MAX_VALID */ sub_5014())
        {
            if (IS_BUTTON_PRESSED( 0, 7 ))
            {
                 /* WRITESCRIPTLOG */ sub_5258( "RJM", "HAS_FIGHT_BEEN_STARTED_BY_MAX - Player fired his gun", 0 );
                 /* P_ALERT_GOONS_TO_MAX */ sub_45372();
                (uParam0^) = 1;
            }
            if (NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_45701( l_U412 )))
            {
                 /* WRITESCRIPTLOG */ sub_5258( "RJM", "HAS_FIGHT_BEEN_STARTED_BY_MAX - Player left the starting area", 0 );
                 /* P_ALERT_GOONS_TO_MAX */ sub_45372();
                (uParam0^) = 1;
            }
        }
    }
    return;
}

/* P_ALERT_GOONS_TO_MAX */ void sub_45372()
{
    int I;

    for ( I = 0; I < l_U867; I++ )
    {
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_5039() ))) AND (NOT (IS_PED_DEAD( l_U867[I] ))))
        {
            SET_PED_ALERTNESS( l_U867[I], 2 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U867[I], 0 );
            REGISTER_TARGET( l_U867[I],  /* PLAYER_PED_ID */ sub_5039() );
            SET_LOCKED_TARGET( l_U867[I],  /* PLAYER_PED_ID */ sub_5039() );
        }
    }
    for ( I = 0; I < l_U897; I++ )
    {
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_5039() ))) AND (NOT (IS_PED_DEAD( l_U897[I] ))))
        {
            SET_PED_ALERTNESS( l_U897[I], 2 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U897[I], 0 );
            REGISTER_TARGET( l_U897[I],  /* PLAYER_PED_ID */ sub_5039() );
            SET_LOCKED_TARGET( l_U897[I],  /* PLAYER_PED_ID */ sub_5039() );
        }
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_45701(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_45744(  /* PLAYER_PED_ID */ sub_5039(), uParam0 );
}

/* F_ISPEDINTRIGGERBOX */ int sub_45744(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ void sub_45938(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

/* CREATE_TREE_GARDEN_REINFORCEMENTS_FROM_ROTUNDA */ void sub_46071()
{
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_924( ref l_U981[0], -9.69272200, 107.14360000, 5.02908500, 0, -826215632, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_924( ref l_U981[1], -9.63995900, 105.60890000, 5.14607900, 0, 325801350, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_924( ref l_U981[2], -9.27340600, 103.71520000, 5.16337700, 0, 1325798055, 7, 3, 2, 0, 0 );
     /* PED_ARRAY_INITIALIZE */ sub_40146( ref l_U981, ref l_U977, ref l_U1021, -862236369, 1.00000000, "AIT_EXPERT", 0, 0, 25000, 2, 0, 25000, 0 );
     /* PED_TASK_RUN_TO_LOCATION_AND_COMBAT_PLAYER */ sub_46325( ref l_U977[0], -19.52779000, 109.03900000, 5.93569600, 3 );
     /* PED_TASK_RUN_TO_LOCATION_AND_COMBAT_PLAYER */ sub_46325( ref l_U977[1], -18.42369000, 112.41220000, 5.86738000, 3 );
     /* PED_TASK_RUN_TO_LOCATION_AND_COMBAT_PLAYER */ sub_46325( ref l_U977[2], -17.57747000, 115.82030000, 6.11084800, 3 );
    return;
}

/* PED_TASK_RUN_TO_LOCATION_AND_COMBAT_PLAYER */ void sub_46325(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    unknown uVar7;

    if ( /* IS_PED_VALID */ sub_5133( (uParam0^) ))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        CLEAR_LOCKED_TARGET( (uParam0^) );
         /* PED_SET_REGISTER_TARGET_PLAYER */ sub_46415( uParam0 );
         /* PED_SET_LOCKED_ON_PLAYER */ sub_46571( uParam0 );
        OPEN_SEQUENCE_TASK( ref uVar7 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uParam1, uParam4, 20000, 1048576000, 0, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        if ( /* IS_MAX_VALID */ sub_5014())
        {
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_5039() );
        }
        CLOSE_SEQUENCE_TASK( uVar7 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar7 );
        CLEAR_SEQUENCE_TASK( uVar7 );
    }
    return;
}

/* PED_SET_REGISTER_TARGET_PLAYER */ void sub_46415(unknown uParam0)
{
    if (( /* IS_MAX_VALID */ sub_5014()) AND ( /* IS_PED_VALID */ sub_5133( (uParam0^) )))
    {
         /* PED_SET_REGISTER_TARGET */ sub_46484( uParam0,  /* PLAYER_PED_ID */ sub_5039() );
    }
    return;
}

/* PED_SET_REGISTER_TARGET */ void sub_46484(unknown uParam0, unknown uParam1)
{
    if (( /* IS_PED_VALID */ sub_5133( uParam1 )) AND ( /* IS_PED_VALID */ sub_5133( (uParam0^) )))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* PED_SET_LOCKED_ON_PLAYER */ void sub_46571(unknown uParam0)
{
    if (( /* IS_MAX_VALID */ sub_5014()) AND ( /* IS_PED_VALID */ sub_5133( (uParam0^) )))
    {
         /* PED_SET_LOCKED_ON_PED */ sub_46634( uParam0,  /* PLAYER_PED_ID */ sub_5039() );
    }
    return;
}

/* PED_SET_LOCKED_ON_PED */ void sub_46634(unknown uParam0, unknown uParam1)
{
    if (( /* IS_PED_VALID */ sub_5133( uParam1 )) AND ( /* IS_PED_VALID */ sub_5133( (uParam0^) )))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ void sub_46988(unknown uParam0)
{
    int I;

    if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_45938( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

/* UPDATE_FORCEWALK_AND_TRIGGER_PAIR */ int sub_47486(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, boolean bParam42)
{
    if ( /* IS_MAX_VALID */ sub_5014())
    {
        if ((NOT (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_5039() ))) AND ( /* F_ISPLAYERINTRIGGERBOX */ sub_45701( uParam0 )))
        {
             /* WRITESCRIPTLOG */ sub_5258( "RJM", "UPDATE_FORCEWALK_AND_TRIGGER_PAIR - Force walk enabled", 0 );
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_5039(), 1 );
        }
        else if ((GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_5039() )) AND (NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_45701( uParam0 ))))
        {
             /* WRITESCRIPTLOG */ sub_5258( "RJM", "UPDATE_FORCEWALK_AND_TRIGGER_PAIR - Force walk disabled", 0 );
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_5039(), 0 );
        }
    }
    if ( /* F_ISPLAYERINTRIGGERBOX */ sub_45701( uParam21 ))
    {
        if (bParam42)
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_5039(), 0 );
        }
        return 1;
    }
    return 0;
}

/* F_ISPEDINTRIGGERBOXFIRSTTIME */ void sub_47916(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 =  /* F_ISPEDINTRIGGERBOX */ sub_45744( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

/* P_INITIALIZE_IMAGEFX_CP05_END */ void sub_48045()
{
     /* WRITESCRIPTLOG */ sub_5258( "CO", "P_INITIALIZE_IMAGEFX_CP05_06", 0 );
     /* P_INIT_IMAGEFX */ sub_48133( ref l_U1275 );
    l_U1275[0]._fU4 = "DISTORT_INTERLACE_MIDDLE_INVRT";
    l_U1275[0]._fU12 = 0;
    l_U1275[0]._fU20 = 1;
    l_U1275[0]._fU8 = 4;
    l_U1275[1]._fU4 = "COLOR_CHANNEL_INTERLACE_FAST";
    l_U1275[1]._fU8 = 4;
    l_U1465 = 5;
    l_U275 = 0;
    return;
}

/* P_INIT_IMAGEFX */ void sub_48133(unknown uParam0)
{
    int I;

     /* WRITESCRIPTLOG */ sub_5258( "CO", "P_INIT_IMAGEFX", 0 );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU4 = "";
        (uParam0^)[I]._fU12 = 0;
        (uParam0^)[I]._fU16 = 0;
        (uParam0^)[I]._fU20 = 0;
        (uParam0^)[I]._fU24 = 0;
        (uParam0^)[I]._fU28 = 0;
        (uParam0^)[I]._fU32 = 1;
    }
    return;
}

/* P_HANDLE_IMAGEFX */ void sub_48449(unknown uParam0)
{
    int I;
    int J;

    switch (l_U275)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_5258( "CO", "P_HANDLE_IMAGEFX", 0 );
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (uParam0^)[I]._fU32)
            {
                 /* CREATETIMER */ sub_34164( ref (uParam0^)[I]._fU36, (uParam0^)[I]._fU12, 1, 0 );
                 /* STARTTIMER */ sub_35653( ref (uParam0^)[I]._fU36 );
                if ((uParam0^)[I]._fU20 > 0)
                {
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        l_U275 = 1;
        break;
        case 1:
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if ( /* ISTIMERDONE */ sub_36404( ref (uParam0^)[I]._fU36 ))
            {
                (uParam0^)[I]._fU0 = PLAY_IMAGEFX( (uParam0^)[I]._fU4, (uParam0^)[I]._fU8, (uParam0^)[I]._fU28 );
                if ((uParam0^)[I]._fU16 > 0)
                {
                     /* CREATETIMER */ sub_34164( ref (uParam0^)[I]._fU72, (uParam0^)[I]._fU16, 1, 0 );
                     /* STARTTIMER */ sub_35653( ref (uParam0^)[I]._fU72 );
                }
                if ((uParam0^)[I]._fU20 > 0)
                {
                    for ( J = I + 1; J <= (I + (uParam0^)[I]._fU20); J++ )
                    {
                        PRINTSTRING( "******* [CO] ***** STARTING CHILD FOR index : " );
                        PRINTINT( J );
                        PRINTNL();
                        (uParam0^)[J]._fU0 = PLAY_IMAGEFX( (uParam0^)[J]._fU4, (uParam0^)[J]._fU8, (uParam0^)[I]._fU28 );
                        if ((uParam0^)[J]._fU16 > 0)
                        {
                             /* CREATETIMER */ sub_34164( ref (uParam0^)[J]._fU72, (uParam0^)[J]._fU16, 1, 0 );
                             /* STARTTIMER */ sub_35653( ref (uParam0^)[J]._fU72 );
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
            if ( /* ISTIMERDONE */ sub_36404( ref (uParam0^)[I]._fU72 ))
            {
                STOP_IMAGEFX( (uParam0^)[I]._fU0, (uParam0^)[I]._fU24 );
                (uParam0^)[I]._fU32 = 1;
                if ((uParam0^)[I]._fU20 > 0)
                {
                    if ((uParam0^)[I]._fU20 == 1)
                    {
                        STOP_IMAGEFX( (uParam0^)[I + 1]._fU0, (uParam0^)[I + 1]._fU24 );
                        (uParam0^)[I + 1]._fU32 = 1;
                    }
                    else
                    {
                        for ( J = I + 1; J <= (uParam0^)[I]._fU20; J++ )
                        {
                            STOP_IMAGEFX( (uParam0^)[J]._fU0, (uParam0^)[J]._fU24 );
                            (uParam0^)[J]._fU32 = 1;
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        break;
    }
    return;
}

/* UPDATE_SMROT_PILL_VO */ void sub_49520()
{
    int I;

    for ( I = 0; I <= (l_U1193 - 1); I++ )
    {
        if (l_U1196[I])
        {
            if ((HAS_PLACEMENT_BEEN_COLLECTED( l_U1193[I] )) || (NOT (DOES_PLACEMENT_EXIST( l_U1193[I] ))))
            {
                l_U1196[I] = 0;
                 /* P_DIAL_MAX_PILL_SMROT_VO */ sub_49634();
            }
        }
    }
    return;
}

/* P_DIAL_MAX_PILL_SMROT_VO */ void sub_49634()
{
     /* WRITESCRIPTLOG */ sub_5258( "RJM", "P_DIAL_MAX_PILL_SMROT_VO", 0 );
    if ((NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_49716())) AND (NOT l_U1209))
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_49821( ref g_U1239 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49932( 0,  /* PLAYER_PED_ID */ sub_5039(), "MAX", ref g_U1239, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49932( 1,  /* PLAYER_PED_ID */ sub_5039(), "MAX", ref g_U1239, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_50203( "SCMT_MFSFKNPL", ref g_U1239, 8, 1 );
        l_U1209 = 1;
    }
    return;
}

/* IS_ANY_SPEECH_CURRENTLY_PLAYING */ void sub_49716()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_49821(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_49932(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_50203(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_50248( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_50248(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_50335( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_50335(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_50387( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_50905( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_50387(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_50905(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* TAKE_PAINKILLER_ARRAY_SNAPSHOT */ void sub_51186(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (DOES_PLACEMENT_EXIST( (uParam0^)[I] ))
        {
             /* WRITESCRIPTLOG */ sub_5258( "RJM", "DO_ANY_PAINKILLERS_STILL_EXIST - Found a pill in there, we can still play some V.O.", 0 );
            (uParam1^)[I] = 1;
        }
        else
        {
            (uParam1^)[I] = 0;
        }
    }
    return;
}

/* P_DIAL_MAX_WONDERING_ABOUT_PASSOS */ void sub_51408()
{
     /* MLOG */ sub_10442( "P_DIAL_MAX_WONDERING_ABOUT_PASSOS", 0, 0 );
     /* KILL_SPEECH */ sub_51502( ref l_U1486, 0 );
    if ( /* IS_MAX_VALID */ sub_5014())
    {
        if (l_U976)
        {
             /* WRITESCRIPTLOG */ sub_5258( "RJM", "Max hear the radio, play SCMT_MSGFPQA", 0 );
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_49821( ref l_U1516 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49932( 0,  /* PLAYER_PED_ID */ sub_5039(), "MAX", ref l_U1516, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49932( 1,  /* PLAYER_PED_ID */ sub_5039(), "MAX", ref l_U1516, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_50203( "SCMT_MSGFPQA", ref l_U1516, 8, 1 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_5258( "RJM", "Max didn't hear the radio, play SCMT_MSGFPQB", 0 );
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_49821( ref l_U1516 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49932( 0,  /* PLAYER_PED_ID */ sub_5039(), "MAX", ref l_U1516, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49932( 1,  /* PLAYER_PED_ID */ sub_5039(), "MAX", ref l_U1516, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_50203( "SCMT_MSGFPQB", ref l_U1516, 8, 1 );
        }
    }
    return;
}

/* KILL_SPEECH */ void sub_51502(int iParam0, unknown uParam1)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_51530( (iParam0^) )))
    {
        ;
    }
    else
    {
        PRINTSTRING( "\n KILL SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
        {
            if (iParam0->_fU8 == g_U6[iParam0->_fU4])
            {
                STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
            }
        }
    }
    return;
}

/* IS_SCRIPT_SPEECH_STRUCT_VALID */ boolean sub_51530(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

/* P_HANDLE_IMAGEFX_CP05 */ void sub_52073()
{
    switch (l_U1465)
    {
        case 0:
        if (( /* F_ISPEDINTRIGGERBOX */ sub_45744(  /* PLAYER_PED_ID */ sub_5039(), l_U664 )) || (( /* F_ISPEDINTRIGGERBOX */ sub_45744(  /* PLAYER_PED_ID */ sub_5039(), l_U643 )) || ( /* F_ISPEDINTRIGGERBOX */ sub_45744(  /* PLAYER_PED_ID */ sub_5039(), l_U622 ))))
        {
             /* WRITESCRIPTLOG */ sub_5258( "CO", "P_INITIALIZE_IMAGEFX_CP05_01", 0 );
             /* P_INIT_IMAGEFX */ sub_48133( ref l_U1275 );
            l_U1275[0]._fU4 = "BLUR_ZOOM_LIGHT_FAST";
            l_U1275[0]._fU12 = 0;
            l_U1275[0]._fU20 = 2;
            l_U1275[0]._fU8 = 4;
            l_U1275[0]._fU32 = 0;
            l_U1275[1]._fU4 = "INTERLACE_LIGHT";
            l_U1275[1]._fU8 = 4;
            l_U1275[1]._fU32 = 0;
            l_U1275[2]._fU4 = "DOUBLE_TINT_BLUE_FLASH_FLICKER";
            l_U1275[2]._fU16 = 2000;
            l_U1275[2]._fU8 = 4;
            l_U1275[2]._fU32 = 0;
            l_U1465 = 1;
            l_U275 = 0;
        }
        break;
        case 1:
        if ( /* F_ISPEDINTRIGGERBOX */ sub_45744(  /* PLAYER_PED_ID */ sub_5039(), l_U685 ))
        {
             /* WRITESCRIPTLOG */ sub_5258( "CO", "P_INITIALIZE_IMAGEFX_CP05_02", 0 );
             /* P_INIT_IMAGEFX */ sub_48133( ref l_U1275 );
            l_U1275[0]._fU4 = "DOUBLE_TINT_BLUE_FLASH_LONG";
            l_U1275[0]._fU12 = 0;
            l_U1275[0]._fU16 = 750;
            l_U1275[0]._fU8 = 4;
            l_U1275[0]._fU32 = 0;
            l_U1465 = 3;
            l_U275 = 0;
        }
        break;
        case 3:
        if ( /* F_ISPEDINTRIGGERBOX */ sub_45744(  /* PLAYER_PED_ID */ sub_5039(), l_U727 ))
        {
             /* WRITESCRIPTLOG */ sub_5258( "CO", "P_INITIALIZE_IMAGEFX_CP05_04", 0 );
             /* P_INIT_IMAGEFX */ sub_48133( ref l_U1275 );
            l_U1275[0]._fU4 = "FLASH_WHITE";
            l_U1275[0]._fU12 = 0;
            l_U1275[0]._fU8 = 4;
            l_U1275[0]._fU32 = 0;
            l_U1465 = 4;
            l_U275 = 0;
        }
        break;
        case 4:
        if ( /* F_ISPEDINTRIGGERBOX */ sub_45744(  /* PLAYER_PED_ID */ sub_5039(), l_U748 ))
        {
             /* WRITESCRIPTLOG */ sub_5258( "CO", "P_INITIALIZE_IMAGEFX_CP05_05", 0 );
             /* P_INIT_IMAGEFX */ sub_48133( ref l_U1275 );
            l_U1275[0]._fU4 = "INJURED_WALK_01";
            l_U1275[0]._fU12 = 0;
            l_U1275[0]._fU20 = 2;
            l_U1275[0]._fU8 = 3;
            l_U1275[0]._fU32 = 0;
            l_U1275[1]._fU4 = "INTERLACE_LIGHT";
            l_U1275[1]._fU8 = 4;
            l_U1275[1]._fU32 = 0;
            l_U1275[2]._fU4 = "GRADE_YELLOW_2";
            l_U1275[2]._fU16 = 750;
            l_U1275[2]._fU8 = 4;
            l_U1275[2]._fU32 = 0;
            l_U1275[3]._fU4 = "DOUBLE_TINT_BLUE_FLASH";
            l_U1275[3]._fU12 = 850;
            l_U1275[3]._fU16 = 1100;
            l_U1275[3]._fU20 = 1;
            l_U1275[3]._fU8 = 4;
            l_U1275[3]._fU32 = 0;
            l_U1275[4]._fU4 = "INTERLACE_LIGHT";
            l_U1275[4]._fU16 = 1100;
            l_U1275[4]._fU8 = 4;
            l_U1275[4]._fU32 = 0;
            l_U1275[5]._fU4 = "GRADE_YELLOW_2";
            l_U1275[5]._fU12 = 2150;
            l_U1275[5]._fU16 = 350;
            l_U1275[5]._fU20 = 1;
            l_U1275[5]._fU8 = 4;
            l_U1275[5]._fU32 = 0;
            l_U1275[6]._fU4 = "INTERLACE_LIGHT";
            l_U1275[6]._fU24 = 1;
            l_U1275[6]._fU8 = 4;
            l_U1275[6]._fU32 = 0;
            l_U1465 = 5;
            l_U275 = 0;
        }
        break;
        case 5: break;
    }
    return;
}

/* ASSIGN_SMALL_ROTUNDA_BULLET_CAMS */ void sub_53431()
{
    int iVar2;

    iVar2 =  /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_45938( ref l_U1028 );
    if ( /* IS_PED_VALID */ sub_5133( l_U1078 ))
    {
        iVar2++;
    }
    if ( /* IS_PED_VALID */ sub_5133( l_U1092 ))
    {
        iVar2++;
    }
    if ( /* IS_PED_VALID */ sub_5133( l_U1106 ))
    {
        iVar2++;
    }
    if (iVar2 == 1)
    {
         /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_46988( ref l_U1028 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U1078, 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U1092, 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U1106, 1 );
    }
    return;
}

/* UPDATE_RADIO */ void sub_53616()
{
    switch (l_U283)
    {
        case 0:
        if (l_U1202)
        {
            if (l_U1203)
            {
                 /* P_DIAL_MAX_SAW_PASSOS */ sub_53737();
                 /* WRITESCRIPTLOG */ sub_5258( "RJM", "UPDATE_RADIO - moving to RADIO_WAIT_FOR_MONOLOGUE_TO_END", 0 );
                l_U283 = 1;
            }
        }
        else
        {
             /* P_DIAL_MAX_SAW_PASSOS */ sub_53737();
             /* WRITESCRIPTLOG */ sub_5258( "RJM", "UPDATE_RADIO - moving to RADIO_WAIT_FOR_MONOLOGUE_TO_END", 0 );
            l_U283 = 1;
        }
        break;
        case 1:
        if (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_54077( l_U1506 )))
        {
            if ( /* IS_VEHICLE_VALID */ sub_28522( g_U1752 ))
            {
                PLAY_SOUND_FROM_VEHICLE( l_U1147, "S_CEMET_RADIO", g_U1752 );
                 /* WRITESCRIPTLOG */ sub_5258( "RJM", "UPDATE_RADIO - moving to RADIO_WAIT_TO_START_CONVERSATION", 0 );
                l_U283 = 2;
            }
        }
        break;
        case 2:
        if ( /* IS_VEHICLE_VALID */ sub_28522( g_U1752 ))
        {
            if (( /* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ sub_54370(  /* PLAYER_PED_ID */ sub_5039(), g_U1753 )) < 4.00000000)
            {
                STOP_SOUND( l_U1147, 0 );
                l_U976 = 1;
                 /* P_DIAL_RADIO_CONVERSATION */ sub_54510();
                 /* WRITESCRIPTLOG */ sub_5258( "RJM", "UPDATE_RADIO - moving to RADIO_WAIT_FOR_RADIO_CONVERSATION_END", 0 );
                l_U283 = 3;
            }
        }
        break;
        case 3:
        if (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_54077( l_U1466 )))
        {
            if (( /* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ sub_54370(  /* PLAYER_PED_ID */ sub_5039(), g_U1753 )) < 4.00000000)
            {
                if ( /* IS_MAX_VALID */ sub_5014())
                {
                     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_49821( ref l_U1486 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49932( 0,  /* PLAYER_PED_ID */ sub_5039(), "MAX", ref l_U1486, 2, 0 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49932( 1,  /* PLAYER_PED_ID */ sub_5039(), "MAX", ref l_U1486, 2, 0 );
                     /* PLAY_SINGLE_SPEECH */ sub_50203( "SCMT_MHRDPC1", ref l_U1486, 8, 1 );
                     /* WRITESCRIPTLOG */ sub_5258( "RJM", "UPDATE_RADIO - moving to RADIO_WAIT_FOR_LINE1", 0 );
                    l_U283 = 4;
                }
            }
        }
        break;
        case 4:
        if (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_54077( l_U1486 )))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_49821( ref l_U1486 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49932( 0,  /* PLAYER_PED_ID */ sub_5039(), "MAX", ref l_U1486, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49932( 1,  /* PLAYER_PED_ID */ sub_5039(), "MAX", ref l_U1486, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_50203( "SCMT_MHRDPC2", ref l_U1486, 8, 1 );
             /* WRITESCRIPTLOG */ sub_5258( "RJM", "UPDATE_RADIO - moving to RADIO_WAIT_FOR_LINE2", 0 );
            l_U283 = 5;
        }
        break;
        case 5:
        if (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_54077( l_U1486 )))
        {
            if (( /* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ sub_54370(  /* PLAYER_PED_ID */ sub_5039(), g_U1753 )) < 4.00000000)
            {
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_49821( ref l_U1486 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49932( 0,  /* PLAYER_PED_ID */ sub_5039(), "MAX", ref l_U1486, 2, 0 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49932( 1,  /* PLAYER_PED_ID */ sub_5039(), "MAX", ref l_U1486, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_50203( "SCMT_MHRDPC3", ref l_U1486, 8, 1 );
                 /* WRITESCRIPTLOG */ sub_5258( "RJM", "UPDATE_RADIO - moving to RADIO_WAIT_FOR_POST_MONOLOGUE_END", 0 );
                l_U283 = 6;
            }
        }
        break;
        case 6:
        if (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_54077( l_U1486 )))
        {
             /* WRITESCRIPTLOG */ sub_5258( "RJM", "UPDATE_RADIO - moving to RADIO_DONE", 0 );
            l_U283 = 7;
        }
        break;
        case 7: break;
    }
    return;
}

/* P_DIAL_MAX_SAW_PASSOS */ void sub_53737()
{
     /* MLOG */ sub_10442( "P_DIAL_MAX_SAW_PASSOS", 0, 0 );
    if ( /* IS_MAX_VALID */ sub_5014())
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_49821( ref l_U1506 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49932( 0,  /* PLAYER_PED_ID */ sub_5039(), "MAX", ref l_U1506, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49932( 1,  /* PLAYER_PED_ID */ sub_5039(), "MAX", ref l_U1506, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_50203( "SCMT_AEVSDED", ref l_U1506, 8, 1 );
    }
    return;
}

/* IS_SPEECH_CURRENTLY_PLAYING */ int sub_54077(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_51530( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

/* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ void sub_54370(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    else
    {
        return -1.00000000;
    }
    return VDIST( uVar6, uParam1 );
}

/* P_DIAL_RADIO_CONVERSATION */ void sub_54510()
{
     /* MLOG */ sub_10442( "P_DIAL_RADIO_CONVERSATION", 0, 0 );
    if (NOT (IS_PED_DEAD( l_U1146 )))
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_49821( ref l_U1466 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49932( 2, l_U1146, "SCMT_TG_RADIO1", ref l_U1466, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49932( 3, l_U1146, "SCMT_TG_RADIO2", ref l_U1466, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_50203( "SCMT_TGRA", ref l_U1466, 8, 1 );
    }
    return;
}

/* UPDATE_VIG09B */ void sub_55476()
{
    switch (l_U284)
    {
        case 0:
        if (l_U1202)
        {
             /* WRITESCRIPTLOG */ sub_5258( "RJM", "UPDATE_VIG09B - Going to GATE_PLAY_SCRIPTED_CAM", 0 );
            l_U284 = 2;
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_5258( "RJM", "UPDATE_VIG09B - Going to GATE_WAIT_TO_START", 0 );
            l_U284 = 1;
        }
        break;
        case 1:
        if (( /* F_ISPLAYERINTRIGGERBOX */ sub_45701( l_U475 )) || ((IS_SPHERE_VISIBLE( -4.34000000, 103.56000000, 6.96000000, 2.00000000, 1 )) AND ( /* F_ISPLAYERINTRIGGERBOX */ sub_45701( l_U454 ))))
        {
             /* WRITESCRIPTLOG */ sub_5258( "RJM", "UPDATE_VIG09B - Going to GATE_PLAY_SCRIPTED_CAM", 0 );
            l_U284 = 2;
        }
        break;
        case 2:
        if ( /* PLAY_MIDSCENE_GATE_OPENING */ sub_55837())
        {
            l_U1203 = 1;
             /* WRITESCRIPTLOG */ sub_5258( "RJM", "UPDATE_VIG09B - Going to GATE_WAIT_TO_CLEANUP", 0 );
            l_U284 = 3;
        }
        break;
        case 3:
        if ( /* IS_PED_VALID */ sub_5133( l_U1078 ))
        {
            if (ISEQ_QUERY_ENTITY_STATE( 1618183678, "thug", 6 ))
            {
                END_CONTEXT( "CEMETERY_FLEEING_THUG" );
                ISEQ_UNREGISTER_ENTITY( 1618183678, "thug" );
                 /* TERMINATEISEQ */ sub_34529( 1618183678, 1 );
                 /* PED_SET_REGISTER_TARGET_PLAYER */ sub_46415( ref l_U1078 );
                 /* PED_SET_TETHERBOX */ sub_42281( ref l_U1078, l_U791, 1 );
                if ( /* F_ISPLAYERINTRIGGERBOX */ sub_45701( l_U433 ))
                {
                     /* WRITESCRIPTLOG */ sub_5258( "RJM", "Player is inside the rotunda, task him to attack immediately", 0 );
                     /* PED_TASK_COMBAT_PLAYER */ sub_57704( l_U1078, 1 );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_5258( "RJM", "Player is outside the rotunda, task him to run up to Smalltunda", 0 );
                     /* PED_TASK_ATTACK_MOVE */ sub_57958( l_U1078, 2.84000000, 87.47000000, 7.16000000, 1092616192, 1101004800, -1082130432, 3 );
                }
                 /* WRITESCRIPTLOG */ sub_5258( "RJM", "UPDATE_VIG09B - Going to GATE_DONE", 0 );
                l_U284 = 4;
            }
        }
        break;
        case 4: break;
    }
    return;
}

/* PLAY_MIDSCENE_GATE_OPENING */ int sub_55837()
{
    switch (l_U286)
    {
        case 0:
        START_CONTEXT( "CEMETERY_FLEEING_THUG" );
         /* PED_INITIALIZE */ sub_55969( ref l_U1079, ref l_U1078, -862236369, ref g_U1212, 0, 25000, 2, 0, 25000 );
        if ( /* IS_PED_VALID */ sub_5133( l_U1078 ))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1078, 0 );
            SET_PED_ALERTNESS( l_U1078, 3 );
            SET_PED_NAME_DEBUG( l_U1078, "SM_ROT_RUN_THROUGH_GATE" );
            SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( l_U1078, 0 );
            SET_PED_CAN_AVOID_DEATH_ZONES( l_U1078, 0 );
            SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U1078, 1 );
            SET_PED_CAN_PUSH_PLAYER( l_U1078, 1 );
            SET_PED_RESIST_TO_OBJECT_COLLISION( l_U1078, 1 );
            "[doubled result, dropped if not asigned]";
            "[doubled result, dropped if not asigned]";
            SET_PED_AS_ONE_SHOT_KILL( l_U1078, 1 );
            if ( /* IS_MAX_VALID */ sub_5014())
            {
                SET_PED_DEFAULT_AIM_AT_PED( l_U1078,  /* PLAYER_PED_ID */ sub_5039() );
            }
             /* TELEPORTPED */ sub_12673( l_U1078, l_U1079._fU0, l_U1079._fU12 );
            ISEQ_REGISTER_ENTITY( 1618183678, "thug", l_U1078, 0 );
        }
         /* P_SETDOORLOCKED */ sub_27060( ref g_U1480, 0 );
         /* P_SETDOORLOCKED */ sub_27060( ref g_U1487, 0 );
        ISEQ_START( 1618183678 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        PLAY_IMAGEFX( "DOUBLE_TINT_BLUE_FLASH", 4, 0 );
        PLAY_IMAGEFX( "INTERLACE_LIGHT", 4, 0 );
         /* P_OPENDOOR */ sub_30385( ref g_U1480, 0, 0, 1065353216 );
         /* P_SETDOORLATCH */ sub_56597( ref g_U1480, 1 );
         /* P_OPENDOOR */ sub_30385( ref g_U1487, 1, 0, 1065353216 );
         /* P_SETDOORLATCH */ sub_56597( ref g_U1487, 1 );
         /* WRITESCRIPTLOG */ sub_5258( "RJM", "PLAY_MIDSCENE_GATE_OPENING - Going to GATE_MIDSCENE_SHOT1", 0 );
        l_U286 = 1;
        break;
        case 1:
        DISPLAYF( "dsTGardenExitR open ratio = {}", 1, 769,  /* F_GETDOOROPENRATIO */ sub_56823( ref g_U1487 ) );
        if (NOT l_U1206)
        {
            if (( /* F_GETDOOROPENRATIO */ sub_56823( ref g_U1487 )) >= 0.85000000)
            {
                 /* WRITESCRIPTLOG */ sub_5258( "RJM", "UPDATE_VIG09B - Latching the doors open, so the player can't ", 0 );
                FREEZE_OBJECT_POSITION( DOOR_FIND_CLOSEST( g_U1480._fU0, g_U1480._fU4 ), 1 );
                FREEZE_OBJECT_POSITION( DOOR_FIND_CLOSEST( g_U1487._fU0, g_U1487._fU4 ), 1 );
                l_U1206 = 1;
            }
        }
        if ((PED_GET_ACTION_INTENTION_STATUS( l_U1078, 47 )) == 1)
        {
             /* P_DIAL_VIG_09B_FLEES */ sub_57117();
             /* WRITESCRIPTLOG */ sub_5258( "RJM", "PLAY_MIDSCENE_GATE_OPENING - Going to GATE_MIDSCENE_DONE", 0 );
            l_U286 = 2;
        }
        break;
        case 2:
        return 1;
        break;
    }
    return 0;
}

/* PED_INITIALIZE */ void sub_55969(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, int iParam7, unknown uParam8)
{
    unknown uVar11;

     /* CLEANPED */ sub_10526( (uParam1^) );
    (uParam1^) =  /* CREATEPED */ sub_10615( uParam0 );
    if ( /* IS_PED_VALID */ sub_5133( (uParam1^) ))
    {
        uVar11 =  /* F_GIVEPEDWEAPON */ sub_11966( (uParam1^), uParam2, uParam5, 0, 1 );
        if (iParam7 != 0)
        {
             /* F_GIVEPEDWEAPONTOHOLSTER */ sub_23616( (uParam1^), iParam7, 0, uParam8, 0 );
        }
        SET_PED_AI_TEMPLATE( (uParam1^), uParam3 );
        SET_PED_ALERTNESS( (uParam1^), uParam6 );
        switch (uParam4)
        {
            case 0: break;
            case 1:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 13, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 13, 1 );
            break;
            case 2:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 14, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 14, 1 );
            break;
            case 3:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 12, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 12, 1 );
            break;
        }
    }
    return;
}

/* P_SETDOORLATCH */ void sub_56597(int iParam0, unknown uParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_26819( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_26903( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_LATCH( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

/* F_GETDOOROPENRATIO */ void sub_56823(int iParam0)
{
    int iVar3;
    float Result;

    if (( /* F_DOESDOOREXIST */ sub_26819( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_26903( iParam0 );
    }
    iVar3 = 0;
    Result = 0.00000000;
    GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar3, ref Result );
    return Result;
}

/* P_DIAL_VIG_09B_FLEES */ void sub_57117()
{
     /* MLOG */ sub_10442( "P_DIAL_VIG_09B_FLEES", 0, 0 );
    if (NOT (IS_PED_DEAD( l_U1078 )))
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_49821( ref l_U1496 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49932( 1, l_U1078, "M8_NY_28_AVG", ref l_U1496, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49932( 0, l_U1078, "piVig09B", ref l_U1496, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_50203( "SCMT_VIG09", ref l_U1496, 2, 1 );
    }
    return;
}

/* PED_TASK_COMBAT_PLAYER */ void sub_57704(unknown uParam0, boolean bParam1)
{
    if ((NOT (IS_PED_RAGDOLL( uParam0, 0 ))) AND ((NOT (IS_PED_INJURED( uParam0 ))) AND (( /* IS_MAX_VALID */ sub_5014()) AND ( /* IS_PED_VALID */ sub_5133( uParam0 )))))
    {
        if (bParam1)
        {
            CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
        }
        CLEAR_LOCKED_TARGET( uParam0 );
         /* PED_SET_REGISTER_TARGET_PLAYER */ sub_46415( ref uParam0 );
         /* PED_SET_LOCKED_ON_PLAYER */ sub_46571( ref uParam0 );
        TASK_COMBAT_PED( uParam0,  /* PLAYER_PED_ID */ sub_5039() );
    }
    return;
}

/* PED_TASK_ATTACK_MOVE */ void sub_57958(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    if ( /* IS_PED_VALID */ sub_5133( uParam0 ))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
        TASK_ATTACK_MOVE( uParam0, uParam1, uParam4, uParam5, uParam6, uParam7 );
    }
    return;
}

/* UPDATE_VIG10 */ void sub_58113()
{
    float fVar2;

    fVar2 = 15;
    switch (l_U285)
    {
        case 0:
         /* CLEANPED */ sub_10526( l_U1092 );
         /* PED_INITIALIZE */ sub_55969( ref l_U1093, ref l_U1092, -862236369, ref g_U1212, 0, 25000, 2, 0, 25000 );
         /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_42104( ref l_U1092, 0 );
        SET_PED_NAME_DEBUG( l_U1092, "SM_ROT_HIDER1" );
        if ( /* IS_PED_VALID */ sub_5133( l_U1092 ))
        {
            SET_PED_SEEING_RANGE( l_U1092, fVar2, 75 );
            SET_PED_FLAG_LOCK_TO_COVER( l_U1092, 1 );
            TASK_COMBAT_SNAP_TO_COVER( l_U1092, "GenCover", "6DD7BDFB_F02FC43B_Corner1", 0 );
        }
         /* CLEANPED */ sub_10526( l_U1106 );
         /* PED_INITIALIZE */ sub_55969( ref l_U1107, ref l_U1106, -862236369, ref g_U1212, 0, 25000, 2, 0, 25000 );
         /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_42104( ref l_U1106, 0 );
        SET_PED_NAME_DEBUG( l_U1106, "SM_ROT_HIDER2" );
        if ( /* IS_PED_VALID */ sub_5133( l_U1106 ))
        {
            SET_PED_SEEING_RANGE( l_U1106, fVar2, 75 );
            SET_PED_FLAG_LOCK_TO_COVER( l_U1106, 1 );
            TASK_COMBAT_SNAP_TO_COVER( l_U1106, "GenCover", "6DD7BDFB_C6B1D373_Corner2", 0 );
        }
         /* WRITESCRIPTLOG */ sub_5258( "RJM", "UPDATE_VIG10 - Going to VIG10_WAIT_TO_START", 0 );
        l_U285 = 1;
        break;
        case 1:
        if (l_U1203)
        {
            if (( /* F_IS_PED_AWARE_OF_PED */ sub_58649( ref l_U1106,  /* PLAYER_PED_ID */ sub_5039(), 1, 1, 1, 0, 1 )) || (( /* F_IS_PED_AWARE_OF_PED */ sub_58649( ref l_U1092,  /* PLAYER_PED_ID */ sub_5039(), 1, 1, 1, 0, 1 )) || (HAS_PED_BEEN_DAMAGED_BY_PED( l_U1078,  /* PLAYER_PED_ID */ sub_5039(), 0 ))))
            {
                 /* TERMINATE_VIG10_AND_TASK_PEDS */ sub_59067();
                l_U1200 = 1;
                l_U1201 = 1;
                 /* WRITESCRIPTLOG */ sub_5258( "RJM", "UPDATE_VIG10 - Going to VIG10_WAIT_FOR_PLAYER_TO_DITCH", 0 );
                l_U285 = 3;
            }
        }
        break;
        case 3:
         /* UPDATE_SMALL_ROTUNDA_TASKING */ sub_59388();
        if (NOT l_U1199)
        {
            if ( /* F_ISPLAYERINTRIGGERBOX */ sub_45701( l_U517 ))
            {
                 /* LOCK_ROTUNDA_AND_CLEAN_TREE_GARDEN */ sub_60978();
                l_U1199 = 1;
            }
        }
        break;
        case 4: break;
    }
    return;
}

/* F_IS_PED_AWARE_OF_PED */ int sub_58649(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, int iParam6)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        if ((uParam3) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 1 )))
        {
            if (iParam6 == 1)
            {
                 /* WRITESCRIPTLOG */ sub_5258( "MF", "ped has SEEN target ped", 0 );
            }
            return 1;
        }
        else if ((uParam4) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 8 )))
        {
            if (iParam6 == 1)
            {
                 /* WRITESCRIPTLOG */ sub_5258( "MF", "ped has BEEN SHOT AT by target ped", 0 );
            }
            return 1;
        }
        else if ((uParam2) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 2 )))
        {
            if (iParam6 == 1)
            {
                 /* WRITESCRIPTLOG */ sub_5258( "MF", "ped has HEARD target ped", 0 );
            }
            return 1;
        }
        else if ((uParam5) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 4 )))
        {
            if (iParam6 == 1)
            {
                 /* WRITESCRIPTLOG */ sub_5258( "MF", "ped has BEEN TOLD ABOUT target ped", 0 );
            }
            return 1;
        };;;;
    }
    return 0;
}

/* TERMINATE_VIG10_AND_TASK_PEDS */ void sub_59067()
{
     /* WRITESCRIPTLOG */ sub_5258( "RJM", "TERMINATE_VIG10_AND_TASK_PEDS", 0 );
    SET_PED_COLLISION( l_U1092, 1 );
     /* TRIGGER_VIG10_PED */ sub_59171( l_U1092 );
     /* TRIGGER_VIG10_PED */ sub_59171( l_U1106 );
    return;
}

/* TRIGGER_VIG10_PED */ void sub_59171(unknown uParam0)
{
    if ( /* IS_PED_VALID */ sub_5133( uParam0 ))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
        SET_PED_FLAG_LOCK_TO_COVER( uParam0, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( uParam0, 0 );
         /* PED_SET_TETHERBOX */ sub_42281( ref uParam0, l_U791, 1 );
        SET_PED_SEEING_RANGE( uParam0, 60, 75 );
    }
    return;
}

/* UPDATE_SMALL_ROTUNDA_TASKING */ void sub_59388()
{
    switch (l_U291)
    {
        case 0:
        if ( /* F_ISPLAYERINTRIGGERBOX */ sub_45701( l_U496 ))
        {
             /* PED_SET_ALERTNESS */ sub_59478( ref l_U1092, 3 );
             /* PED_SET_ALERTNESS */ sub_59478( ref l_U1106, 3 );
             /* PED_ARRAY_SET_ALERTNESS */ sub_59556( ref l_U1028, 3 );
             /* TASK_SMALL_ROTUNDA_FLEE */ sub_59685( l_U1092, "GenCover", "6DD7BDFB_2243885D_Popover1" );
             /* TASK_SMALL_ROTUNDA_FLEE */ sub_59685( l_U1106, "GenCover", "6DD7BDFB_50F9E5C9_Popover1" );
             /* TASK_SMALL_ROTUNDA_FLEE */ sub_59685( l_U1028[0], "Prerotg", "Corner_Position44" );
             /* TASK_SMALL_ROTUNDA_FLEE */ sub_59685( l_U1028[1], "Prerotg", "Corner_Position04" );
             /* TASK_SMALL_ROTUNDA_FLEE */ sub_59685( l_U1028[2], "Prerotg", "Corner_Position12" );
             /* WRITESCRIPTLOG */ sub_5258( "RJM", "UPDATE_SMALL_ROTUNDA_TASKING - Going to SMALL_ROT_WAIT_FOR_PLAYER_BACK_ON_SMALL_ROTUNDA", 0 );
            l_U291 = 1;
        }
        break;
        case 1:
        if (NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_45701( l_U496 )))
        {
             /* P_REMOVEALLTETHERSFROMPED */ sub_60188( l_U1092 );
             /* P_REMOVEALLTETHERSFROMPED */ sub_60188( l_U1106 );
             /* PED_ARRAY_RESET_TETHER */ sub_60285( ref l_U1028 );
             /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_42104( ref l_U1092, 0 );
             /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_42104( ref l_U1106, 0 );
             /* PED_ARRAY_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_42021( ref l_U1028, 0 );
             /* PED_SET_BLOCKING_OF_PED_TARGETTING */ sub_60421( ref l_U1092, 0 );
             /* PED_SET_BLOCKING_OF_PED_TARGETTING */ sub_60421( ref l_U1106, 0 );
             /* PED_ARRAY_SET_BLOCKING_OF_PED_TARGETTING */ sub_60516( ref l_U1028, 0 );
             /* PED_TASK_ATTACK_MOVE */ sub_57958( l_U1028[0], 10.45748000, 88.70904000, 7.16412800, 1092616192, 1101004800, -1082130432, 3 );
             /* PED_TASK_ATTACK_MOVE */ sub_57958( l_U1028[1], 6.89587300, 89.26626000, 7.12764100, 1092616192, 1101004800, -1082130432, 3 );
             /* PED_TASK_ATTACK_MOVE */ sub_57958( l_U1028[2], 3.81491900, 90.00289000, 7.12763900, 1092616192, 1101004800, -1082130432, 3 );
             /* PED_TASK_ATTACK_MOVE */ sub_57958( l_U1092, -0.27751400, 87.89359000, 7.12763800, 1092616192, 1101004800, -1082130432, 3 );
             /* PED_TASK_ATTACK_MOVE */ sub_57958( l_U1106, -3.22646800, 83.83783000, 7.12763800, 1092616192, 1101004800, -1082130432, 3 );
             /* WRITESCRIPTLOG */ sub_5258( "RJM", "UPDATE_SMALL_ROTUNDA_TASKING - Going to SMALL_ROT_WAIT_FOR_PLAYER_NEAR_LARGE_ROTUNDA", 0 );
            l_U291 = 0;
        }
        break;
    }
    return;
}

/* PED_SET_ALERTNESS */ void sub_59478(unknown uParam0, unknown uParam1)
{
    if ( /* IS_PED_VALID */ sub_5133( (uParam0^) ))
    {
        SET_PED_ALERTNESS( (uParam0^), uParam1 );
    }
    return;
}

/* PED_ARRAY_SET_ALERTNESS */ void sub_59556(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* PED_SET_ALERTNESS */ sub_59478( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* TASK_SMALL_ROTUNDA_FLEE */ void sub_59685(unknown uParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;

    if (( /* IS_MAX_VALID */ sub_5014()) AND ( /* IS_PED_VALID */ sub_5133( uParam0 )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
        SET_BLOCKING_OF_PED_TARGETTING( uParam0, 1 );
        OPEN_SEQUENCE_TASK( ref uVar5 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_COMBAT_MOVE_TO_COVER( 0, uParam1, uParam2,  /* PLAYER_PED_ID */ sub_5039() );
        CLOSE_SEQUENCE_TASK( uVar5 );
        TASK_PERFORM_SEQUENCE( uParam0, uVar5 );
        CLEAR_SEQUENCE_TASK( uVar5 );
        RESET_PED_TETHERING( uParam0 );
         /* P_TETHERPED */ sub_42340( ref l_U792, uParam0, 1 );
         /* P_TETHERPED */ sub_42340( ref l_U793, uParam0, 1 );
         /* P_TETHERPED */ sub_42340( ref l_U794, uParam0, 1 );
    }
    return;
}

/* P_REMOVEALLTETHERSFROMPED */ void sub_60188(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        RESET_PED_TETHERING( uParam0 );
    }
    return;
}

/* PED_ARRAY_RESET_TETHER */ void sub_60285(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ( /* IS_PED_VALID */ sub_5133( (uParam0^)[I] ))
        {
            RESET_PED_TETHERING( (uParam0^)[I] );
        }
    }
    return;
}

/* PED_SET_BLOCKING_OF_PED_TARGETTING */ void sub_60421(unknown uParam0, unknown uParam1)
{
    if ( /* IS_PED_VALID */ sub_5133( (uParam0^) ))
    {
        SET_BLOCKING_OF_PED_TARGETTING( (uParam0^), uParam1 );
    }
    return;
}

/* PED_ARRAY_SET_BLOCKING_OF_PED_TARGETTING */ void sub_60516(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* PED_SET_BLOCKING_OF_PED_TARGETTING */ sub_60421( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* LOCK_ROTUNDA_AND_CLEAN_TREE_GARDEN */ void sub_60978()
{
     /* WRITESCRIPTLOG */ sub_5258( "RJM", "LOCK_ROTUNDA_AND_CLEAN_TREE_GARDEN", 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_30568( ref g_U1487, -85.00000000, 98.00000000 );
     /* P_CLOSEDOOR */ sub_26793( ref g_U1480, 1 );
     /* P_CLOSEDOOR */ sub_26793( ref g_U1487, 1 );
     /* P_SETDOORLOCKED */ sub_27060( ref g_U1480, 1 );
     /* P_SETDOORLOCKED */ sub_27060( ref g_U1487, 1 );
     /* CLEANPED */ sub_10526( l_U1192 );
     /* CLEANPEDARRAY */ sub_38809( ref l_U867 );
     /* CLEANPEDARRAY */ sub_38809( ref l_U897 );
     /* CLEANPEDARRAY */ sub_38809( ref l_U977 );
     /* CLEANVEHICLE */ sub_28116( g_U1757 );
     /* CLEANVEHICLE */ sub_28116( g_U1747 );
     /* CLEANVEHICLE */ sub_28116( g_U1752 );
     /* TERMINATEISEQ */ sub_34529( 1618183678, 1 );
     /* CLEANPED */ sub_10526( l_U1146 );
     /* CLEANPLACEMENT */ sub_3809( g_U703._fU0 );
     /* P_UNLOAD_ASSETS_TREE_GARDEN */ sub_61234();
    g_U1233 = 1;
    return;
}

/* P_UNLOAD_ASSETS_TREE_GARDEN */ void sub_61234()
{
     /* UNLOADMODEL */ sub_25460( g_U1367 );
     /* UNLOADMODEL */ sub_25460( g_U1366 );
     /* UNLOADMODEL */ sub_25460( g_U1332 );
     /* UNLOADMODEL */ sub_25460( g_U1336 );
     /* UNLOADMODEL */ sub_25460( -1252673304 );
     /* UNLOADMODEL */ sub_25460( -1021848468 );
     /* UNLOADMODEL */ sub_25460( -1100720042 );
     /* UNLOADANIMDICT */ sub_61358( "FACE_PASNYB" );
     /* UNLOADACTIONTREE */ sub_61445( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act" );
    return;
}

/* UNLOADANIMDICT */ void sub_61358(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

/* UNLOADACTIONTREE */ void sub_61445(unknown uParam0)
{
    ACTION_TREE_UNLOAD( uParam0 );
    return;
}

/* UPDATE_REINFORCEMENTS */ void sub_61538()
{
    if (l_U1200)
    {
        switch (l_U287)
        {
            case 0:
             /* PED_ARRAY_INITIALIZE */ sub_40146( ref l_U1032, ref l_U1028, ref l_U1072, -691403429, 1.00000000, "AIT_EXPERT", 0, 0, 25000, 2, 0, 25000, 0 );
            REMOVE_ALL_PED_WEAPONS( l_U1028[2] );
             /* F_GIVEPEDWEAPON */ sub_11966( l_U1028[2], 434544317, 25000, 0, 0 );
             /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_41878( ref l_U1028, "SM_ROT_REINFORCE" );
             /* PED_ARRAY_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_42021( ref l_U1028, 1 );
             /* PED_ARRAY_SET_TETHERBOX */ sub_42219( ref l_U1028, l_U791, 1 );
             /* P_CREATE_AND_START_TIMER */ sub_61776( ref l_U1266, 2000 );
             /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_42104( ref l_U1028[2], 0 );
             /* PED_SET_REGISTER_TARGET_PLAYER */ sub_46415( ref l_U1028[2] );
             /* PED_TASK_ATTACK_MOVE */ sub_57958( l_U1028[2], -9.54000000, 97.10000000, 5.26000000, 1092616192, 1101004800, -1082130432, 3 );
             /* WRITESCRIPTLOG */ sub_5258( "RJM", "UPDATE_REINFORCEMENTS - Going to REINFORCE_TASK_GUY1", 0 );
            l_U287 = 1;
            break;
            case 1:
            if ( /* ISTIMERDONE */ sub_36404( ref l_U1266 ))
            {
                 /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_42104( ref l_U1028[0], 0 );
                 /* PED_SET_REGISTER_TARGET_PLAYER */ sub_46415( ref l_U1028[0] );
                 /* PED_TASK_ATTACK_MOVE */ sub_57958( l_U1028[0], 13.21000000, 96.92000000, 5.15000000, 1092616192, 1101004800, -1082130432, 3 );
                 /* P_CREATE_AND_START_TIMER */ sub_61776( ref l_U1266, 1000 );
                 /* WRITESCRIPTLOG */ sub_5258( "RJM", "UPDATE_REINFORCEMENTS - Going to REINFORCE_TASK_GUY2", 0 );
                l_U287 = 2;
            }
            break;
            case 2:
            if ( /* ISTIMERDONE */ sub_36404( ref l_U1266 ))
            {
                 /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_42104( ref l_U1028[1], 0 );
                 /* PED_SET_REGISTER_TARGET_PLAYER */ sub_46415( ref l_U1028[1] );
                 /* PED_TASK_ATTACK_MOVE */ sub_57958( l_U1028[1], 9.71000000, 94.03000000, 5.15000000, 1092616192, 1101004800, -1082130432, 3 );
                 /* WRITESCRIPTLOG */ sub_5258( "RJM", "UPDATE_REINFORCEMENTS - Going to REINFORCE_DONE", 0 );
                l_U287 = 4;
            }
            break;
            case 4:
            l_U1200 = 0;
            break;
        }
    }
    return;
}

/* P_CREATE_AND_START_TIMER */ void sub_61776(unknown uParam0, unknown uParam1)
{
     /* CREATETIMER */ sub_34164( uParam0, uParam1, 1, 0 );
     /* STARTTIMER */ sub_35653( uParam0 );
    return;
}

/* P_UNLOAD_WEAPONS */ void sub_62505(unknown uParam0)
{
    switch (uParam0)
    {
        case 0:
        case 1: break;
        case 2: break;
        case 3: break;
        case 4:
        case 5: break;
        case 6: break;
        case 7:
         /* UNLOADWEAPON */ sub_62661( 1224272620 );
        break;
        case 8: break;
        case 9:
         /* LOADWEAPON */ sub_21917( 434544317, 1 );
         /* LOADWEAPON */ sub_21917( -691403429, 1 );
        break;
        case 10:
         /* UNLOADWEAPON */ sub_62661( -184942895 );
        break;
    }
    return;
}

/* UNLOADWEAPON */ void sub_62661(unknown uParam0)
{
    SET_WEAPON_AS_NO_LONGER_NEEDED( uParam0 );
    return;
}


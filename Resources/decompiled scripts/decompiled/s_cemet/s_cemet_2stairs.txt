void main()
{
    l_U0 = 0;
    l_U1 = 1;
    l_U2 = 0;
    l_U3 = 1.00000000;
    l_U4 = -5.00000000;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U11 = 42;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 90.00000000;
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = nil;
    l_U31 = {0.00000000, 0.00000000, 0.00000000};
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U37 = 1;
    l_U38 = 144;
    l_U59 = {0, 0, 0};
    StrCopy( ref l_U62, "DUMMY", 32 );
    l_U70 = 1;
    l_U75 = 0;
    l_U76 = 0;
    l_U77 = 0;
    l_U80 = 0;
    l_U125 = -1;
    l_U126 = {64536, 64536, 64536};
    l_U129 = "PED_DEF";
    l_U171 = 1.00000000;
    l_U183 = 0;
    l_U224 = 0;
    l_U245 = 0;
    l_U246 = 0;
    l_U247 = 1500;
    l_U258 = 0;
    l_U1024 = 0;
    l_U1034 = {-90.66000000, 36.27000000, -2.52000000};
    l_U1037 = {0, 0, 0};
    l_U1134 = {-56.35000000, 63.35000000, 5.04000000};
    l_U1255 = 1;
    l_U1256 = 0;
    l_U1257 = 5;
    l_U1258 = 5;
    l_U1259 = "08_02_cemetery_concat";
    l_U1278 = 1;
     /* WRITE_STRING */ sub_530( "[SP]### Script s_cemet_2stairs is starting... ###" );
    l_U258 = 0;
     /* P_LOAD_2_STAIRS_ASSETS */ sub_585();
     /* P_INITIALIZE_SCRIPT_DATA */ sub_2636();
     /* P_SET_STATIC_GAMEPLAY_DATA */ sub_3072();
     /* P_LOAD_WEAPONS */ sub_5740( 3 );
     /* ADD_RAG_WIDGETS */ sub_6266();
     /* INITIALIZE_PLAYER_BY_DEBUG_MENU_CHECKPOINT */ sub_6386();
     /* P_CREATE_PLACEMENTS */ sub_16139();
    while (NOT IS_EXITFLAG_SET())
    {
        if (g_U826 == 3)
        {
             /* P_HANDLE_MUSIC */ sub_17449();
        }
         /* HANDLE_CHECKPOINTS */ sub_18261();
         /* HANDLE_EVENTS */ sub_29071();
        WAIT( 0 );
    }
     /* WRITE_STRING */ sub_530( "[SP]### Script s_cemet_2stairs is terminating... ###" );
     /* P_CLEANUP_ALL */ sub_26744();
     /* P_UNLOAD_WEAPONS */ sub_67705( 3 );
     /* P_UNLOAD_2_STAIRS_ASSETS */ sub_67963();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_cemet_2stairs" );
    SET_EXITFLAG_RESPONSE();
    return;
}

/* WRITE_STRING */ void sub_530(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_LOAD_2_STAIRS_ASSETS */ void sub_585()
{
     /* WRITE_STRING */ sub_530( "[SP]### P_LOAD_2_STAIRS_ASSETS ###" );
    if (g_U825 == 3)
    {
         /* BLOCKLOADMODEL */ sub_679( g_U1363 );
         /* BLOCKLOADMODEL */ sub_679( g_U1332 );
         /* BLOCKLOADMODEL */ sub_679( g_U1336 );
         /* BLOCKLOADMODEL */ sub_679( g_U1337 );
         /* BLOCKLOADMODEL */ sub_679( g_U757 );
    }
    else
    {
         /* LOADMODEL */ sub_1132( g_U1363, 1 );
         /* LOADMODEL */ sub_1132( g_U1332, 1 );
         /* LOADMODEL */ sub_1132( g_U1336, 1 );
         /* LOADMODEL */ sub_1132( g_U1337, 1 );
         /* LOADMODEL */ sub_1132( g_U757, 1 );
         /* LOADSEAMLESSCUTSCENE */ sub_1427( l_U1259, 1 );
    }
     /* LOADISEQ */ sub_1773( 1924315369, 1 );
     /* LOADISEQ */ sub_1773( 842704944, 1 );
     /* LOADANIMDICT */ sub_2092( "FACE_PASNYB", 0, 1 );
     /* LOADACTIONTREE */ sub_2301( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act", 1 );
     /* SETUP_SCRIPTED_SPEECH */ sub_2465( "SCMTAUD" );
    return;
}

/* BLOCKLOADMODEL */ void sub_679(unknown uParam0)
{
    DISPLAYF( "[MSWW]### Trying to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_530( "[SP]### ERROR! (BlockLoadModel) Trying to block load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    LOAD_ALL_OBJECTS_NOW();
    while ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        LOAD_ALL_OBJECTS_NOW();
        DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
        WAIT( 0 );
    }
    DISPLAYF( "[MSWW]### Has loaded model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
    return;
}

/* LOADMODEL */ void sub_1132(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_530( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADSEAMLESSCUTSCENE */ void sub_1427(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* LOADISEQ */ void sub_1773(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                DISPLAYF( "[SP]### Waiting for interactive sequence to be loaded: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* LOADANIMDICT */ void sub_2092(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an animation dictionary to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADACTIONTREE */ void sub_2301(unknown uParam0, int iParam1)
{
    ACTION_TREE_LOAD( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_ACTION_TREE_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an Action Tree to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_2465(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_2509();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_2509()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_2636()
{
     /* WRITE_STRING */ sub_530( "[SP]### P_INITIALIZE_SCRIPT_DATA ###" );
    l_U296 = 0;
    l_U1024 = 0;
    l_U929 = 0;
    l_U868 = 0;
    l_U930 = 0;
    l_U932 = 0;
    l_U931 = 0;
    l_U933 = 0;
    l_U934 = 0;
    l_U935 = 0;
    l_U936 = 0;
    l_U937 = 0;
    l_U1132 = 0;
    l_U1133 = 0;
    l_U301 = 0;
    l_U297 = 0;
    l_U298 = 0;
    l_U300 = 2;
    l_U299 = 0;
    l_U1137 = -1;
     /* CREATETIMER */ sub_2846( ref l_U1005, 10000, 1, 0 );
     /* CREATETIMER */ sub_2846( ref l_U1123, 500, 1, 0 );
     /* CREATETIMER */ sub_2846( ref l_U1025, 500, 1, 0 );
     /* CREATETIMER */ sub_2846( ref l_U1059, 5000, 1, 0 );
    l_U1037 = {0, 0, 0};
    l_U993 = 0;
    l_U994 = 0;
    l_U1014 = 0;
    return;
}

/* CREATETIMER */ void sub_2846(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* P_SET_STATIC_GAMEPLAY_DATA */ void sub_3072()
{
     /* WRITE_STRING */ sub_530( "[SP]### P_SET_STATIC_GAMEPLAY_DATA ###" );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3192( ref l_U643, g_U779[3]._fU0, g_U779[3]._fU12, 1265654828, 26, 6, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3192( ref l_U849, -84.01826000, 45.39366000, 2.64471400, 137.27510000, 1849005128, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3192( ref l_U659[0], -88.08000000, 55.07000000, 2.64000000, 141.09000000, 126258649, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3192( ref l_U659[1], -74.48000000, 41.65000000, 2.64000000, 132.27000000, 1194208593, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3192( ref l_U697[0], -75.66000000, 64.61000000, 4.42000000, 141.09000000, 354025753, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3192( ref l_U697[1], -68.83000000, 52.86000000, 4.40000000, 132.27000000, 1229046925, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3192( ref l_U697[2], -74.77000000, 64.41000000, 4.43000000, 141.09000000, 842643132, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3192( ref l_U697[3], -68.47000000, 54.13000000, 4.32000000, 141.09000000, 868323341, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3192( ref l_U763[0], -48.69000000, 82.46000000, 5.32000000, 124.98000000, 1192150664, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3192( ref l_U763[1], -49.02000000, 81.58000000, 5.32000000, 131.68000000, -83225647, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3192( ref l_U763[2], -47.87000000, 82.24000000, 5.32000000, 133.62000000, -766588547, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3192( ref l_U763[3], -48.39000000, 80.87000000, 5.32000000, 126.22000000, 685744399, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3192( ref l_U763[4], -47.34000000, 81.59000000, 5.32000000, 124.98000000, 767094485, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3192( ref l_U763[5], -61.14000000, 67.41000000, 4.99000000, 139.34000000, 1729703728, 7, 3, 2, 0, 0 );
     /* P_CREATETRIGGERBOX */ sub_3959( ref l_U302, "2STAIR_MAX_FORCE_WALK", -52.96000000, 76.43000000, 5.55000000, 5.00000000, 6.00000000, 2.73000000, 0.00000000, 0.00000000, -43.24000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_3959( ref l_U323, "2STAIR_TRIGGER_CUTSCENE", -51.50000000, 78.50000000, 5.55000000, 5.00000000, 6.00000000, 2.73000000, 0.00000000, 0.00000000, -43.24000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_3959( ref l_U344, "TRIGGER_ON_MONUMENT_LEFT", -86.95000000, 55.26000000, 0.50000000, 15.00000000, 18.00000000, 4.98000000, 0.00000000, 0.00000000, 45.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_3959( ref l_U365, "TRIGGER_ON_MONUMENT", -80.24000000, 49.35000000, 0.50000000, 15.00000000, 32.39000000, 4.98000000, 0.00000000, 0.00000000, 45.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_3959( ref l_U386, "TASK_MONUMENT_1", -83.00000000, 46.55000000, -2.65000000, 15.00000000, 16.00000000, 7.00000000, 0.00000000, 0.00000000, 45.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_3959( ref l_U407, "TASK_MONUMENT_2", -78.79000000, 50.30000000, -0.55000000, 15.00000000, 32.00000000, 7.00000000, 0.00000000, 0.00000000, 45.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_3959( ref l_U575, "TRIGGER_MONUMENT_FLANKING", -84.14000000, 45.16000000, -2.54000000, 13.00000000, 7.00000000, 5.00000000, 0.00000000, 0.00000000, -45.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_3959( ref l_U428, "TRIGGER_ON_UPPER_LEVEL", -64.63000000, 65.29000000, 3.14000000, 40.00000000, 50.00000000, 4.41000000, 0.00000000, 0.00000000, 45.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_3959( ref l_U449, "TRIGGER_MAX_COVER", -94.03000000, 26.45000000, -2.38000000, 0.76000000, 0.97000000, 2.17000000, 0.00000000, 0.00000000, 54.15000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_3959( ref l_U470, "TRIGGER_PASSOS_UPPER_TELEPORT", -55.34000000, 60.50000000, 1.77000000, 50.00000000, 35.00000000, 6.00000000, 0.00000000, 0.00000000, 110.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_3959( ref l_U491, "TRIG_03B_1", -87.09000000, 38.74000000, -4.78000000, 72.35000000, 29.99000000, 9.00000000, 0.00000000, 0.00000000, -45.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_3959( ref l_U512, "TRIG_UPPER_SPAWN_VOL", -49.87000000, 79.42000000, 5.55000000, 9.00000000, 10.00000000, 2.73000000, 0.00000000, 0.00000000, -43.24000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_3959( ref l_U533, "TRIGGER_ULEVEL_PASS_DEATH", -61.48000000, 67.64000000, 2.70000000, 40.00000000, 50.00000000, 4.41000000, 0.00000000, 0.00000000, 45.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_3959( ref l_U554, "TRIGGER_LOWER_AND_MON_TO_UPPER", -59.19000000, 69.58000000, 3.14000000, 40.00000000, 50.00000000, 4.41000000, 0.00000000, 0.00000000, 45.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_3959( ref l_U617, "tbImageFX_2CP03A", -92.28580000, 37.97720000, -5.44000000, 13.00000000, 20.00000000, 10.00000000, 0.00000000, 0.00000000, 44.97000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_3959( ref l_U596, "tbImageFX_2CP03B", -84.85470000, 44.88830000, -5.43701000, 13.00000000, 8.00000000, 10.00000000, 0.00000000, 0.00000000, 44.97000000, 1 );
     /* P_CREATETETHERBOX */ sub_5336( ref l_U638, "TETHER_LOWER_LEVEL", -84.81000000, 39.65000000, -3.48000000, 18.00000000, 25.00000000, 3.00000000, 0.00000000, 0.00000000, 45.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_5336( ref l_U639, "TETHER_MIDLEVEL_LEFT", -87.35000000, 49.49000000, -5.02000000, 13.00000000, 16.00000000, 10.00000000, 0.00000000, 0.00000000, 45.50000000, 1 );
     /* P_CREATETETHERBOX */ sub_5336( ref l_U640, "TETHER_MIDLEVEL_RIGHT", -80.14000000, 42.41000000, -5.01000000, 13.00000000, 16.00000000, 10.00000000, 0.00000000, 0.00000000, 45.50000000, 1 );
     /* P_CREATETETHERBOX */ sub_5336( ref l_U641, "TETHER_UPPERLEVEL", -60.11000000, 68.43000000, 3.78000000, 20.00000000, 40.14000000, 3.45000000, 0.00000000, 0.00000000, 45.50000000, 1 );
     /* P_CREATETETHERBOX */ sub_5336( ref l_U642, "TETHER_UPPER_FOR_MONUMENT", -59.93000000, 57.96000000, 1.77000000, 35.00000000, 25.00000000, 6.00000000, 0.00000000, 0.00000000, 45.00000000, 1 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_3192(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATETRIGGERBOX */ void sub_3959(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATETETHERBOX */ void sub_5336(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_LOAD_WEAPONS */ void sub_5740(unknown uParam0)
{
     /* LOADWEAPON */ sub_5773( -862236369, 1 );
    switch (uParam0)
    {
        case 0:
        case 1:
         /* LOADWEAPON */ sub_5773( 434544317, 1 );
         /* LOADWEAPON */ sub_5773( -691403429, 1 );
        break;
        case 2: break;
        case 3:
         /* LOADWEAPON */ sub_5773( -691403429, 1 );
         /* LOADWEAPON */ sub_5773( 930042831, 1 );
        break;
        case 4:
        case 5:
         /* LOADWEAPON */ sub_5773( 434544317, 1 );
         /* LOADWEAPON */ sub_5773( -691403429, 1 );
        break;
        case 6:
         /* LOADWEAPON */ sub_5773( 434544317, 1 );
         /* LOADWEAPON */ sub_5773( -691403429, 1 );
        break;
        case 7:
         /* LOADWEAPON */ sub_5773( 434544317, 1 );
         /* LOADWEAPON */ sub_5773( -691403429, 1 );
         /* LOADWEAPON */ sub_5773( 1224272620, 1 );
        break;
        case 8:
         /* LOADWEAPON */ sub_5773( 434544317, 1 );
         /* LOADWEAPON */ sub_5773( -691403429, 1 );
        break;
        case 9:
         /* LOADWEAPON */ sub_5773( 434544317, 1 );
         /* LOADWEAPON */ sub_5773( -691403429, 1 );
        break;
        case 10:
         /* LOADWEAPON */ sub_5773( 434544317, 1 );
         /* LOADWEAPON */ sub_5773( -184942895, 1 );
         /* LOADWEAPON */ sub_5773( -691403429, 1 );
        break;
    }
    return;
}

/* LOADWEAPON */ void sub_5773(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load weapon: {!f1} : {1} ###", 2, 1, 199730165, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* ADD_RAG_WIDGETS */ void sub_6266()
{
    START_WIDGET_GROUP( "Two Stair Hill Widgets" );
    ADD_WIDGET_BOOL( "Skip Two-Stair Hill gameplay?", ref l_U932 );
    STOP_WIDGET_GROUP();
    return;
}

/* INITIALIZE_PLAYER_BY_DEBUG_MENU_CHECKPOINT */ void sub_6386()
{
    if (g_U825 == 3)
    {
        if ( /* IS_PED_VALID */ sub_6547(  /* PLAYER_PED_ID */ sub_6453() ))
        {
            if (NOT ( /* HAS_SAVEFILE_LOADED */ sub_6619( ref l_U260 )))
            {
                 /* F_GIVEPEDWEAPON */ sub_9338(  /* PLAYER_PED_ID */ sub_6453(),  /* GET_STARTING_WEAPON */ sub_11396( 3 ), 200, 0, 1 );
            }
        }
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        g_U826 = 3;
         /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_11523( ref l_U260, g_U826,  /* PLAYER_PED_ID */ sub_6453(), g_U971[3]._fU0, g_U971[3]._fU12, g_U971[3]._fU16, g_U971[3]._fU20, 0 );
        g_U1235 = 1;
    }
    return;
}

/* PLAYER_PED_ID */ int sub_6453()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_6491() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_6491()
{
    return GET_PLAYER_ID();
}

/* IS_PED_VALID */ int sub_6547(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (DOES_PED_EXIST( uParam0 )))
    {
        return 1;
    }
    return 0;
}

/* HAS_SAVEFILE_LOADED */ int sub_6619(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_6681( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U37 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U38 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_6888( uParam0,  /* PLAYER_PED_ID */ sub_6453() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* WRITESCRIPTLOG */ void sub_6681(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_6888(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_6681( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U37)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_7109( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_8273( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_8587( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_9022( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_8587( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_9022( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_8587( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_9022( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_9338( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_9022( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_9338( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_9022( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U37 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_9912( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_10114( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_6453(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U37)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U37 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_6681( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_7109(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_7171( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_7171(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_8273(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_8587(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_530( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_9022(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_9338(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_530( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_9912(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_10114(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_7171( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_10212( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_10212(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* GET_STARTING_WEAPON */ int sub_11396(unknown uParam0)
{
    return -862236369;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_11523(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_6681( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_6681( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_10114( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_11814( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_12291( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_12291( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_12551( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_12291( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_12551( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_12551( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_12291( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_12551( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_12551( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_12551( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_12291( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_12551( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_12551( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_12551( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_12551( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_14131( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U38, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_6681( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_11814(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_7171( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_6681( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_6681( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_12291(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_12551(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_14131(int iParam0)
{
     /* WRITE_STRING */ sub_530( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_14219( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_14296( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_14296( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_14296( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_14465( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_14465( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_14465( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_14465( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_14465( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_14465( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_14465( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_14465( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_14465( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_14465( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_14465( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_14296( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_14465( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_14465( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_14465( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_14296( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_15166( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_14465( iParam0->_fU52 );
     /* WRITE_STRING */ sub_530( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_14465( iParam0->_fU96 );
     /* WRITE_STRING */ sub_530( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_14465( iParam0->_fU100 );
     /* WRITE_STRING */ sub_530( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_14465( iParam0->_fU104 );
     /* WRITE_STRING */ sub_530( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_14465( iParam0->_fU108 );
     /* WRITE_STRING */ sub_530( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_14465( iParam0->_fU112 );
     /* WRITE_STRING */ sub_530( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_14465( iParam0->_fU116 );
     /* WRITE_STRING */ sub_530( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_14465( iParam0->_fU120 );
     /* WRITE_STRING */ sub_530( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_14465( iParam0->_fU124 );
     /* WRITE_STRING */ sub_530( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_14465( iParam0->_fU128 );
     /* WRITE_STRING */ sub_530( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_14465( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_14465( l_U38 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_14465( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_14219(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_14296(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_14465(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_15166(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* P_CREATE_PLACEMENTS */ void sub_16139()
{
     /* WRITE_STRING */ sub_530( "[SP]### P_CREATE_PLACEMENTS ###" );
     /* CLEANPLACEMENTARRAY */ sub_16214( ref l_U862 );
    l_U862[0] =  /* CREATEPLACEMENT */ sub_16383( -4072149, -56.31000000, 78.44100000, 6.88000000, 0, 0, 0, 0, 0, 0, 1119092736 );
    l_U862[1] =  /* CREATEPLACEMENT */ sub_16383( -4072149, -56.35263000, 78.17174000, 6.88000000, 0, 0, 0, 0, 0, 0, 1119092736 );
     /* P_CREATE_S_NYC_GG_A9_01 */ sub_16609();
    return;
}

/* CLEANPLACEMENTARRAY */ void sub_16214(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* CLEANPLACEMENT */ sub_16269( (uParam0^)[I] );
    }
    return;
}

/* CLEANPLACEMENT */ void sub_16269(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

/* CREATEPLACEMENT */ void sub_16383(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a placement to exist: {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return Result;
}

/* P_CREATE_S_NYC_GG_A9_01 */ void sub_16609()
{
     /* WRITESCRIPTLOG */ sub_6681( "CO", "P_CREATE_S_NYC_GG_A9_01", 0 );
     /* P_CREATECOLLECTIBLESTRUCT */ sub_16737( ref g_U649, g_U757, -58541058, 915147723, -69.33000000, 31.88000000, -1.36000000, 1.50000000, 0.00000000, -10.00000000, "" );
     /* P_CREATECOLLECTIBLE */ sub_16894( ref g_U649 );
    return;
}

/* P_CREATECOLLECTIBLESTRUCT */ void sub_16737(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_6681( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* P_CREATECOLLECTIBLE */ void sub_16894(int iParam0)
{
     /* WRITESCRIPTLOG */ sub_6681( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_16977( iParam0->_fU12 )) == 1)
        {
             /* WRITESCRIPTLOG */ sub_6681( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_6681( "CO", "has never been collected.", 0 );
        }
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_16977( iParam0->_fU12 )) == 0)
        {
             /* CLEANPLACEMENT */ sub_16269( iParam0->_fU0 );
            iParam0->_fU0 =  /* CREATEPLACEMENT */ sub_16383( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                     /* WRITESCRIPTLOG */ sub_6681( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_6681( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ int sub_16977(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

/* P_HANDLE_MUSIC */ void sub_17449()
{
    if (l_U1257 != l_U1255)
    {
         /* WRITESCRIPTLOG */ sub_6681( "TEH", "playing music:changed CUR FLAG", 0 );
         /* WRITE_INT */ sub_14465( l_U1255 );
         /* WRITE_INT */ sub_14465( l_U1256 );
        l_U1257 = l_U1255;
    }
    else if (l_U1258 != l_U1256)
    {
         /* WRITESCRIPTLOG */ sub_6681( "TEH", "playing music:changed NEW FLAG", 0 );
         /* WRITE_INT */ sub_14465( l_U1255 );
         /* WRITE_INT */ sub_14465( l_U1256 );
        l_U1258 = l_U1256;
    }
    switch (l_U1255)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_6681( "TEH", "playing music:MC_Start_up CEMETERY_SONG_03 CEMETERY_SONG_03_2_3 ", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_2_3", "", 0, 5000, 5000, -1082130432, 0 );
        l_U1255 = 3;
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_6681( "TEH", "playing music:MC_CHECKPOINT CEMETERY_SONG_03 CEMETERY_SONG_03_2_3 ", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_2_3", "", 0, 5000, 5000, -1082130432, 0 );
        l_U1255 = 3;
        break;
        case 3:
        if (l_U1256 == 3)
        {
             /* WRITESCRIPTLOG */ sub_6681( "TEH", "playing music: CEMETERY_SONG_03, CEMETERY_SONG_03_1_2_3", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_1_2_3", "", 0, 4000, 12000, -1082130432, 0 );
            l_U1255 = 4;
        }
        break;
        case 4:
        if (l_U1256 == 4)
        {
             /* WRITESCRIPTLOG */ sub_6681( "TEH", "playing music: suspend ", 0 );
            AUDIO_MUSIC_SUSPEND( 12000 );
            l_U1255 = 5;
        }
        break;
    }
    return;
}

/* HANDLE_CHECKPOINTS */ void sub_18261()
{
    if ((l_U935) AND (g_U826 == 3))
    {
        if (l_U299 == 0)
        {
            if (NOT ( /* IS_PED_VALID */ sub_6547(  /* PLAYER_PED_ID */ sub_6453() )))
            {
                 /* WRITESCRIPTLOG */ sub_6681( "RJM", "HANDLE_CHECKPOINTS - Player's died on Rooftops, setting eFailure = STATE_FAIL_WAITING", 0 );
                l_U299 = 2;
            }
            else if ( /* RESTARTING_CHECKPOINT */ sub_18449())
            {
                 /* WRITESCRIPTLOG */ sub_6681( "RJM", "HANDLE_CHECKPOINTS - Restart", 0 );
                l_U299 = 2;
            }
            else if (NOT IS_LAST_MAN_STANDING_ACTIVE())
            {
                if ((l_U296) || (NOT ( /* IS_PASSOS_VALID */ sub_18974())))
                {
                     /* WRITESCRIPTLOG */ sub_6681( "RJM", "P_HANDLE_CHECKPOINTS: Passos killed, setting eFailure = STATE_FAIL_DEATH_CAM_PASSOS", "***" );
                    SET_PED_GORE( g_U824, 1 );
                    SET_PED_GORE_FROM_PLAYER( g_U824, 1 );
                    SET_PED_GORE_FROM_NPC( g_U824, 0 );
                    l_U299 = 1;
                }
            };;;
        }
         /* P_HANDLE_FAILURE */ sub_19206();
    }
    return;
}

/* RESTARTING_CHECKPOINT */ int sub_18449()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U37 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6453() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_6453(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_6491(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_6491(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_6453() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_6453(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* IS_PASSOS_VALID */ int sub_18974()
{
    if ((NOT (IS_PED_DEAD( g_U824 ))) AND (DOES_PED_EXIST( g_U824 )))
    {
        return 1;
    }
    return 0;
}

/* P_HANDLE_FAILURE */ void sub_19206()
{
    switch (l_U299)
    {
        case 0: break;
        case 1:
        if ( /* IS_MAX_VALID */ sub_19308())
        {
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_6453(), 1 );
        }
        if (l_U300 == 2)
        {
            if ( /* IS_PED_VALID */ sub_6547( g_U824 ))
            {
                SET_PED_COLLISION( g_U824, 1 );
            }
            l_U299 = 2;
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
             /* WRITESCRIPTLOG */ sub_6681( "CCB", "ePassosDeathState = PE_MOVING; eFailure - STATE_FAIL_WAITING", 0 );
        }
        else if (l_U300 == 0)
        {
            if ( /* PLAY_MIDSCENE_03B_PASSOS_DEATH */ sub_19526())
            {
                 /* WRITESCRIPTLOG */ sub_6681( "CCB", "eFailure - STATE_FAIL_WAITING", 0 );
                l_U299 = 2;
            }
        }
        else if (l_U300 == 1)
        {
            if ( /* PLAY_MIDSCENE_03D_PASSOS_DEATH */ sub_24156())
            {
                 /* WRITESCRIPTLOG */ sub_6681( "CCB", "eFailure - STATE_FAIL_WAITING", 0 );
                l_U299 = 2;
            }
        };;;
        break;
        case 2:
        if ( /* IS_RESTART_ACTIVE */ sub_25281())
        {
            l_U299 = 3;
        }
        else if (( /* F_CHECK_QUIT_RETRY */ sub_25341( 0 )) == 1)
        {
            l_U299 = 3;
        }
        break;
        case 3:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6453() )))
        {
             /* WRITESCRIPTLOG */ sub_6681( "CCB", "Deactivating bullettime...", 0 );
            DEACTIVATE_BULLET_TIME( 1, 0 );
            END_POSTFX_BLENDER( 3, 0 );
            l_U299 = 4;
             /* WRITESCRIPTLOG */ sub_6681( "CCB", "eFailure - STATE_FAIL_CLEANUP", 0 );
        }
        break;
        case 4:
        if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_6491() )))
        {
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6453() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_6491(), 0, 0 );
            }
        }
        DO_SCREEN_FADE_OUT( 0 );
         /* P_IMAGEFX_STOP_BULLETCAM */ sub_26585( "CEM_PASSOS1_SCRIPTED_FAIL_FX" );
        DESTROY_ALL_CAMS();
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        AUDIO_MUSIC_SUSPEND( 500 );
         /* P_CLEANUP_ALL */ sub_26744();
        l_U299 = 5;
         /* WRITESCRIPTLOG */ sub_6681( "CCB", "eFailure - STATE_FAIL_RESTORE", 0 );
        break;
        case 5:
        if (NOT IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED())
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        }
         /* P_SETUP_PLAYER_RELATIONSHIPS */ sub_28388();
        l_U299 = 6;
         /* WRITESCRIPTLOG */ sub_6681( "CCB", "eFailure - STATE_FAIL_RESTART", 0 );
        break;
        case 6:
        if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
        {
             /* WRITESCRIPTLOG */ sub_6681( "CCB", "eFailure - STATE_FAIL_IDLE", 0 );
            if (g_U826 == 3)
            {
                 /* WRITESCRIPTLOG */ sub_6681( "RJM", "INITIALIZE_PLAYER_BY_CHECKPOINT says we're in MCE_TWO_STAIRS", 0 );
                 /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_6888( ref l_U260,  /* PLAYER_PED_ID */ sub_6453() );
                 /* P_SET_STATIC_GAMEPLAY_DATA */ sub_3072();
                 /* P_INITIALIZE_SCRIPT_DATA */ sub_2636();
                 /* P_CREATE_PLACEMENTS */ sub_16139();
                 /* LOADISEQ */ sub_1773( 1924315369, 1 );
                 /* LOADISEQ */ sub_1773( 842704944, 1 );
                 /* LOADANIMDICT */ sub_2092( "FACE_PASNYB", 0, 1 );
                 /* LOADACTIONTREE */ sub_2301( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act", 1 );
                l_U1256 = 0;
                l_U1255 = 2;
            }
            if ( /* IS_MAX_VALID */ sub_19308())
            {
                SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_6453(), 0 );
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_6491(), 1, 0 );
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_6453(), 1 );
            }
            l_U1068 = 0;
            l_U299 = 0;
             /* WRITESCRIPTLOG */ sub_6681( "CCB", "eCheckpoint - STATE_CHECKPOINT_INIT", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_6681( "CCB", "Waiting for stream requests...", 0 );
        }
        break;
    }
    return;
}

/* IS_MAX_VALID */ int sub_19308()
{
    if ( /* IS_PED_VALID */ sub_6547(  /* PLAYER_PED_ID */ sub_6453() ))
    {
        return 1;
    }
    return 0;
}

/* PLAY_MIDSCENE_03B_PASSOS_DEATH */ int sub_19526()
{
    unknown uVar2;

    switch (l_U1068)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_6681( "CCB", "PLAY_PASSOS_TREEGARDEN_DEATH_SCENE: ePassosDeathCamState - STATE_DEATHCAM_INIT", 0 );
         /* NIS_PRE_SETUP */ sub_19718( 1, 0, 0, 0 );
         /* P_DEACTIVATEPED */ sub_19898( l_U848 );
         /* P_DEACTIVATEPEDARRAY */ sub_20017( ref l_U692 );
         /* P_DEACTIVATEPEDARRAY */ sub_20017( ref l_U756 );
         /* P_DEACTIVATEPEDARRAY */ sub_20017( ref l_U656 );
        uVar2 =  /* GET_SCENEPED_FOR_UPPER_PASSOS_DEATH */ sub_20113();
         /* NIS_CREATE_STATIC_CAM */ sub_20481( ref l_U1078, -78.75056000, 65.07931000, 6.02981700, -16.74244000, 0.32162300, 49.82052000, 45, 1500 );
         /* LOADISEQ */ sub_1773( 842704944, 1 );
        if (ISEQ_QUERY_ENTITY_STATE( 1924315369, "passos", 3 ))
        {
             /* WRITESCRIPTLOG */ sub_6681( "RJM", "S_CEM_VIG_02_TO_08 was playing, kill it.", 0 );
            ISEQ_UNREGISTER_ENTITY( 1924315369, "passos" );
             /* TERMINATEISEQ */ sub_20832( 1924315369, 1 );
        }
        if ( /* IS_PED_VALID */ sub_6547( g_U824 ))
        {
            CLEAR_PED_TASKS_IMMEDIATELY( g_U824 );
             /* SETUP_PASSOS_FOR_FAILURE_SCENE */ sub_21164( ref g_U824 );
            ISEQ_REGISTER_ENTITY( 842704944, "PASSOS", g_U824, 0 );
            ISEQ_START( 842704944 );
        }
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_3192( ref l_U1109, -77.85000000, 67.38000000, 4.50000000, 90, uVar2, 7, 3, 2, 0, 0 );
         /* CLEANPED */ sub_21570( l_U1122 );
        l_U1122 =  /* CREATEPED */ sub_21659( ref l_U1109 );
        if ( /* IS_PED_VALID */ sub_6547( l_U1122 ))
        {
             /* SETUP_KILLER_FOR_FAILURE_CUTSCENES */ sub_22391( ref l_U1122 );
             /* F_GIVEPEDWEAPON */ sub_9338( l_U1122, -862236369, 25000, 0, 0 );
            REGISTER_TARGET( l_U1122, g_U824 );
            SET_PED_DEFAULT_AIM_AT_PED( l_U1122, g_U824 );
            TASK_AIM_GUN_AT_PED( l_U1122, g_U824, -1, 0 );
        }
         /* CREATETIMER */ sub_2846( ref l_U1069, 50, 1, 0 );
         /* STARTTIMER */ sub_22583( ref l_U1069 );
        l_U1068 = 3;
         /* WRITESCRIPTLOG */ sub_6681( "CCB", "ePassosDeathCamState - STATE_DEATHCAM_START", 0 );
        case 3:
        if ( /* ISTIMERDONE */ sub_22780( ref l_U1069 ))
        {
             /* NIS_PLAY_STATIC_CAMERA */ sub_22964( ref l_U1078 );
             /* P_IMAGEFX_START_BULLETCAM */ sub_23105( "CEM_PASSOS1_SCRIPTED_FAIL_FX", 0 );
            SHAKE_CAM( l_U1078._fU0,  /* F_CAM_SHAKE_WOBBLY */ sub_23500(), 0.25000000 );
             /* CREATETIMER */ sub_2846( ref l_U1069, 750, 1, 0 );
             /* STARTTIMER */ sub_22583( ref l_U1069 );
            l_U1068 = 1;
             /* WRITESCRIPTLOG */ sub_6681( "CCB", "ePassosDeathCamState - STATE_DEATHCAM_WAITING", 0 );
        }
        break;
        case 1:
        if ( /* ISTIMERDONE */ sub_22780( ref l_U1069 ))
        {
            if (( /* IS_PED_VALID */ sub_6547( g_U824 )) AND ( /* IS_PED_VALID */ sub_6547( l_U1122 )))
            {
                SET_PED_SHOOTS_AT_COORD( l_U1122, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U824, 65488, 0, 0, 0 ) );
                SHAKE_CAM( l_U1078._fU0, "SMALL_EXPLOSION_SHAKE", 1 );
                SET_PED_DEFAULT_AIM_AT_COORD( l_U1122, -10.06000000, 108.19000000, 5.24000000 );
                 /* P_KILL_PED */ sub_23808( g_U824 );
                 /* CREATETIMER */ sub_2846( ref l_U1069, 50, 1, 0 );
                 /* STARTTIMER */ sub_22583( ref l_U1069 );
                l_U1068 = 5;
                 /* WRITESCRIPTLOG */ sub_6681( "CCB", "ePassosDeathCamState - STATE_DEATHCAM_PLAYING", 0 );
            }
        }
        break;
        case 5:
        if ( /* ISTIMERDONE */ sub_22780( ref l_U1069 ))
        {
            l_U1068 = 6;
             /* WRITESCRIPTLOG */ sub_6681( "CCB", "ePassosDeathCamState - STATE_DEATHCAM_FINISHED", 0 );
        }
        break;
        case 6:
        return 1;
        break;
    }
    return 0;
}

/* NIS_PRE_SETUP */ void sub_19718(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6453() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_6491(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_6453(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_6453() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_6453(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* P_DEACTIVATEPED */ void sub_19898(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

/* P_DEACTIVATEPEDARRAY */ void sub_20017(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_DEACTIVATEPED */ sub_19898( (uParam0^)[I] );
    }
    return;
}

/* GET_SCENEPED_FOR_UPPER_PASSOS_DEATH */ int sub_20113()
{
    int I;

    for ( I = 0; I <= (l_U756 - 1); I++ )
    {
        if ( /* IS_PED_VALID */ sub_6547( l_U756[I] ))
        {
             /* WRITESCRIPTLOG */ sub_6681( "RJM", "GET_SCENEPED_FOR_UPPER_PASSOS_DEATH - Found a guy from the Upper Level group", 0 );
            return l_U763[I]._fU20;
        }
    }
     /* WRITESCRIPTLOG */ sub_6681( "RJM", "GET_SCENEPED_FOR_UPPER_PASSOS_DEATH - Couldn't find anyone alive...that's weird, use a default", 0 );
    return -766588547;
}

/* NIS_CREATE_STATIC_CAM */ void sub_20481(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_2846( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U763, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* TERMINATEISEQ */ void sub_20832(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            DISPLAYF( "[SP]### Waiting for interactive sequence to terminate: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* SETUP_PASSOS_FOR_FAILURE_SCENE */ void sub_21164(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_6681( "RJM", "P_SETUP_PASSOS_FOR_FAILURE_SCENE", "***" );
    if ( /* IS_PED_VALID */ sub_6547( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^), 0 );
        SET_PED_VALIDATE_BULLET_CAM_HIT( (uParam0^), 1 );
        SET_AI_SHOULD_ALWAYS_MISS_PED( (uParam0^), 0 );
        SET_CAN_AI_KICK_THROUGH_CORPSES( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_AI_TEMPLATE( (uParam0^), "AIT_NORMAL" );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( (uParam0^), 0 );
        SET_PED_AS_ONE_SHOT_KILL( (uParam0^), 1 );
        SET_PED_GORE( (uParam0^), 1 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), 0 );
        SET_PED_PROOFS( (uParam0^), 0, 1, 1, 1, 1 );
        SET_PED_ALLOWED_TO_SURRENDER( (uParam0^), 0 );
        SET_PED_CAN_AVOID_DEATH_ZONES( (uParam0^), 0 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( (uParam0^), 1 );
        SET_PED_CAN_PUSH_PLAYER( (uParam0^), 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( (uParam0^), 0 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_CAN_BE_TARGETTED( (uParam0^), 1 );
    }
    return;
}

/* CLEANPED */ void sub_21570(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CREATEPED */ void sub_21659(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_1132( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_22150( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_22251( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_22150(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_22251(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* SETUP_KILLER_FOR_FAILURE_CUTSCENES */ void sub_22391(unknown uParam0)
{
    if ( /* IS_PED_VALID */ sub_6547( (uParam0^) ))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
        SET_PED_COMBAT_MOVEMENT( (uParam0^), 0 );
    }
    return;
}

/* STARTTIMER */ void sub_22583(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* ISTIMERDONE */ int sub_22780(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* NIS_PLAY_STATIC_CAMERA */ void sub_22964(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_22583( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

/* P_IMAGEFX_START_BULLETCAM */ void sub_23105(unknown uParam0, boolean bParam1)
{
    PRINTSTRING( "[CO] P_IMAGEFX_START_BULLETCAM: Starting BulletCam: " );
    PRINTSTRING( uParam0 );
    PRINTNL();
     /* CLEANCAMERA */ sub_23225( ref l_U259 );
    l_U259 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
    SETUP_BULLET_CAMERA_SCENE( l_U259, uParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
    if (bParam1)
    {
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    }
    return;
}

/* CLEANCAMERA */ void sub_23225(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

/* F_CAM_SHAKE_WOBBLY */ string sub_23500()
{
    return "WOBBLY_SHAKE";
}

/* P_KILL_PED */ void sub_23808(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

/* PLAY_MIDSCENE_03D_PASSOS_DEATH */ int sub_24156()
{
    unknown uVar2;
    vector vVar3;

    vVar3 = {-98.77000000, 26.05000000, -2.18000000};
    switch (l_U1068)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_6681( "CCB", "PLAY_PASSOS_TREEGARDEN_DEATH_SCENE: ePassosDeathCamState - STATE_DEATHCAM_INIT", 0 );
         /* NIS_PRE_SETUP */ sub_19718( 1, 0, 0, 0 );
         /* NIS_CREATE_STATIC_CAM */ sub_20481( ref l_U1078, -97.50900000, 22.52646000, 1.82012200, -26.62277000, -0.04771300, 4.68133400, 45, 1500 );
         /* P_IMAGEFX_START_BULLETCAM */ sub_23105( "CEM_PASSOS1_SCRIPTED_FAIL_FX", 0 );
        if ( /* IS_PED_VALID */ sub_6547( g_U824 ))
        {
             /* SETUP_PASSOS_FOR_FAILURE_SCENE */ sub_21164( ref g_U824 );
        }
        CLEAR_AREA_OF_FIRES_AND_EXPLOSIONS( vVar3, 5.00000000 );
        if ( /* IS_PED_VALID */ sub_6547( l_U848 ))
        {
            CLEAR_PED_TASKS_IMMEDIATELY( l_U848 );
             /* SETUP_KILLER_FOR_FAILURE_CUTSCENES */ sub_22391( ref l_U848 );
             /* TELEPORTPED */ sub_24554( l_U848, l_U849._fU0, l_U849._fU12 );
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_TURN_PED_TO_FACE_COORD( 0, vVar3, 1, 1085905306 );
            TASK_SHOOT_AT_COORD( 0, vVar3, 3000, 1566631136, 1, 0 );
            CLOSE_SEQUENCE_TASK( uVar2 );
            TASK_PERFORM_SEQUENCE( l_U848, uVar2 );
        }
         /* CREATETIMER */ sub_2846( ref l_U1069, 50, 1, 0 );
         /* STARTTIMER */ sub_22583( ref l_U1069 );
        l_U1068 = 3;
         /* WRITESCRIPTLOG */ sub_6681( "CCB", "ePassosDeathCamState - STATE_DEATHCAM_START", 0 );
        case 3:
        if ( /* ISTIMERDONE */ sub_22780( ref l_U1069 ))
        {
             /* P_DEACTIVATEPEDARRAY */ sub_20017( ref l_U692 );
             /* P_DEACTIVATEPEDARRAY */ sub_20017( ref l_U756 );
             /* P_DEACTIVATEPEDARRAY */ sub_20017( ref l_U656 );
             /* NIS_PLAY_STATIC_CAMERA */ sub_22964( ref l_U1078 );
            SHAKE_CAM( l_U1078._fU0,  /* F_CAM_SHAKE_WOBBLY */ sub_23500(), 0.12500000 );
            l_U1068 = 1;
             /* WRITESCRIPTLOG */ sub_6681( "CCB", "ePassosDeathCamState - STATE_DEATHCAM_WAITING", 0 );
        }
        break;
        case 1:
        if (IS_EXPLOSION_IN_SPHERE( 0, vVar3, 3.00000000 ))
        {
            if (( /* IS_PED_VALID */ sub_6547( g_U824 )) AND ( /* IS_PED_VALID */ sub_6547( l_U848 )))
            {
                SHAKE_CAM( l_U1078._fU0, "SMALL_EXPLOSION_SHAKE", 1 );
                 /* P_KILL_PED */ sub_23808( g_U824 );
                 /* CREATETIMER */ sub_2846( ref l_U1069, 50, 1, 0 );
                 /* STARTTIMER */ sub_22583( ref l_U1069 );
                l_U1068 = 5;
                 /* WRITESCRIPTLOG */ sub_6681( "CCB", "ePassosDeathCamState - STATE_DEATHCAM_PLAYING", 0 );
            }
        }
        break;
        case 5:
        if ( /* ISTIMERDONE */ sub_22780( ref l_U1069 ))
        {
            l_U1068 = 6;
             /* WRITESCRIPTLOG */ sub_6681( "CCB", "ePassosDeathCamState - STATE_DEATHCAM_FINISHED", 0 );
        }
        break;
        case 6:
        return 1;
        break;
    }
    return 0;
}

/* TELEPORTPED */ void sub_24554(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* IS_RESTART_ACTIVE */ void sub_25281()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_25341(int iParam0)
{
    iParam0 = 1;
    switch (l_U246)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_25423( ref l_U248 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6453() )))
            {
                l_U247 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_2846( ref l_U248, l_U247, 1, 1 );
             /* STARTTIMER */ sub_22583( ref l_U248 );
        }
        if ( /* ISTIMERDONE */ sub_22780( ref l_U248 ))
        {
             /* WRITESCRIPTLOG */ sub_6681( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6453() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_6491() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_6491(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U246 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U246 = 2;
            }
            else
            {
                l_U246 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_6681( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_25906();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_6681( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_25906();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_25423(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_25906()
{
     /* WRITESCRIPTLOG */ sub_6681( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_25981( ref l_U248 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_6491() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_6491(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U245 = 0;
    l_U245 = l_U245;
    l_U246 = 0;
    return;
}

/* RESETTIMER */ void sub_25981(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_IMAGEFX_STOP_BULLETCAM */ void sub_26585(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_6681( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
     /* CLEANCAMERA */ sub_23225( ref l_U259 );
    l_U258 = 1;
    return;
}

/* P_CLEANUP_ALL */ void sub_26744()
{
     /* WRITE_STRING */ sub_530( "[SP]### P_CLEANUP_ALL ###" );
    ISEQ_UNREGISTER_ENTITY( 1924315369, "passos" );
     /* TERMINATEISEQ */ sub_20832( 1924315369, 0 );
    ISEQ_UNREGISTER_ENTITY( 842704944, "PASSOS" );
     /* TERMINATEISEQ */ sub_20832( 842704944, 0 );
     /* UNLOADANIMDICT */ sub_26881( "FACE_PASNYB" );
     /* UNLOADACTIONTREE */ sub_26968( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act" );
     /* CLEANPED */ sub_21570( l_U1122 );
     /* CLEANPED */ sub_21570( l_U848 );
     /* CLEANPEDARRAY */ sub_27039( ref l_U692 );
     /* CLEANPEDARRAY */ sub_27039( ref l_U756 );
     /* CLEANPEDARRAY */ sub_27039( ref l_U656 );
     /* P_ENABLE_POI */ sub_27136( ref l_U1169, 0 );
     /* CLEANPLACEMENT */ sub_16269( g_U649._fU0 );
     /* P_CLEAN_IMAGEFX */ sub_28155( ref l_U938 );
     /* CLEANOBJECT */ sub_28240( g_U1797 );
     /* CLEANPLACEMENTARRAY */ sub_16214( ref l_U862 );
    return;
}

/* UNLOADANIMDICT */ void sub_26881(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

/* UNLOADACTIONTREE */ void sub_26968(unknown uParam0)
{
    ACTION_TREE_UNLOAD( uParam0 );
    return;
}

/* CLEANPEDARRAY */ void sub_27039(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_21570( (uParam0^)[I] );
    }
    return;
}

/* P_ENABLE_POI */ void sub_27136(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
             /* P_ENABLEPOIGLINT */ sub_27195( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_27195( iParam0, 0 );
         /* P_ENABLEPOIINTERACTIONTEXT */ sub_27414( iParam0, 0 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6453() )) == 0)
        {
            TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_6453() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_6453(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

/* P_ENABLEPOIGLINT */ void sub_27195(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

/* P_ENABLEPOIINTERACTIONTEXT */ void sub_27414(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_27594( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

/* P_UPDATEINTERACTIONTEXTAVAILABLE */ void sub_27594(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if (( /* F_ISACTIONINGAVAILABLE */ sub_27690( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if (( /* F_ISACTIONINGAVAILABLE */ sub_27690( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

/* F_ISACTIONINGAVAILABLE */ int sub_27690(int iParam0)
{
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6453() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_6491() )) == 0))
    {
        if (((IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_6453() )) == 1) || (((IS_PED_GETTING_UP(  /* PLAYER_PED_ID */ sub_6453() )) == 1) || (((IS_PED_PICKING_UP_PICKUP(  /* PLAYER_PED_ID */ sub_6453() )) == 1) || (((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_6453() )) == 1) || (((IS_PED_DUCKING(  /* PLAYER_PED_ID */ sub_6453() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_6453() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

/* P_CLEAN_IMAGEFX */ void sub_28155(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        STOP_IMAGEFX( (uParam0^)[I]._fU0, 0 );
    }
    return;
}

/* CLEANOBJECT */ void sub_28240(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* P_SETUP_PLAYER_RELATIONSHIPS */ void sub_28388()
{
     /* WRITESCRIPTLOG */ sub_6681( "SP", "P_SETUP_PLAYER_RELATIONSHIPS", "###" );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6453() )) == 0)
    {
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_6453(), 0, 1 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_6453(), 0, 2 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_6453(), 0, 6 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_6453(), 0, 7 );
    }
    return;
}

/* HANDLE_EVENTS */ void sub_29071()
{
    int iVar2;
    unknown uVar3;

    iVar2 = 0;
    if (l_U299 == 0)
    {
        if (l_U932)
        {
             /* CLEANPED */ sub_21570( l_U1122 );
             /* CLEANPED */ sub_21570( l_U848 );
             /* CLEANPEDARRAY */ sub_27039( ref l_U692 );
             /* CLEANPEDARRAY */ sub_27039( ref l_U756 );
             /* CLEANPEDARRAY */ sub_27039( ref l_U656 );
             /* CLEANOBJECT */ sub_28240( g_U1797 );
            g_U1237 = 1;
             /* TELEPORTPED */ sub_24554(  /* PLAYER_PED_ID */ sub_6453(), -58.74042000, 67.15484000, 4.99476200, 283.25500000 );
            l_U297 = 10;
            l_U932 = 0;
        }
        switch (l_U297)
        {
            case 9:
            l_U300 = 0;
            l_U296 = 1;
            break;
            case 0:
             /* SETUP_GAMEPLAY */ sub_29353();
             /* WRITESCRIPTLOG */ sub_6681( "RJM", "Init complete, moving to TWOSTAIR_WAIT_TO_START", 0 );
            l_U297 = 1;
            break;
            case 1:
            if (g_U1235)
            {
                if (g_U826 < 3)
                {
                     /* P_ACTIVATEPED */ sub_34452( l_U848 );
                     /* REGISTER_PEDS_CUT_08_02_GAMEPLAY */ sub_34574( l_U848, ref l_U656 );
                    l_U297 = 3;
                }
                else
                {
                    l_U297 = 2;
                }
            }
            break;
            case 3:
            if ( /* PLAY_CUTSCENE_08_02 */ sub_37691( 1 ))
            {
                l_U297 = 2;
            }
            break;
            case 2:
            if ( /* IS_MAX_VALID */ sub_19308())
            {
                if (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_6453() ))
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_6453(), 0 );
                }
                if (NOT (IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_6453() )))
                {
                     /* WRITESCRIPTLOG */ sub_6681( "BSW", "snapping Max to cover to start 2stair", 0 );
                     /* TELEPORTPED */ sub_24554(  /* PLAYER_PED_ID */ sub_6453(), g_U971[3]._fU0, g_U971[3]._fU12 );
                    SNAP_PLAYER_TO_COVERPOINT(  /* PLAYER_ID */ sub_6491(), "GenCover", "9A916A3D_A6EFF331_Corner1", 1 );
                    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U971[3]._fU16, 1065353216, 0 );
                    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U971[3]._fU20, 1065353216, 0 );
                }
            }
             /* START_GAMEPLAY */ sub_40885();
            if ( /* IS_PED_VALID */ sub_6547( l_U848 ))
            {
                 /* P_ACTIVATEPED */ sub_34452( l_U848 );
                 /* PED_SET_COMBAT_MOVEMENT */ sub_32226( ref l_U848, 0 );
                 /* PED_SET_CAN_ONLY_FIRE_WITH_CLEAR_LOS */ sub_42439( ref l_U848, 0 );
                 /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_31902( ref l_U848, 0 );
                 /* PED_SET_REGISTER_TARGET_PLAYER */ sub_42536( ref l_U848 );
                 /* PED_SET_LOCKED_ON_PLAYER */ sub_42694( ref l_U848 );
                TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U848, 1 );
                SET_PED_IGNORE_LOS_CHECKS( l_U848, 1 );
                SET_PED_PERFECT_ACCURACY_OVERRIDE( l_U848, 1 );
            }
            l_U935 = 1;
             /* P_SETDOORLOCKED */ sub_42890( ref g_U1431, 0 );
             /* P_SETDOORLOCKED */ sub_42890( ref g_U1438, 0 );
            if (NOT ( /* F_IMAGEFX_FADE_IN */ sub_43159()))
            {
                if ((IS_DEATH_PANEL_WIPE_ALLOWED()) || (IS_SCREEN_FADED_OUT()))
                {
                    DO_SCREEN_FADE_IN( 500 );
                }
            }
             /* CREATE_BRIDGE_RAYFIRE_DESTROYED */ sub_43430();
             /* UNLOADMODEL */ sub_39923( g_U1352 );
             /* UNLOADMODEL */ sub_39923( g_U1353 );
             /* UNLOADMODEL */ sub_39923( g_U1354 );
             /* UNLOADMODEL */ sub_39923( g_U1355 );
             /* UNLOADMODEL */ sub_39923( g_U1356 );
             /* UNLOADMODEL */ sub_39923( g_U1357 );
             /* UNLOADMODEL */ sub_39923( g_U1358 );
             /* UNLOADMODEL */ sub_39923( g_U1359 );
             /* UNLOADMODEL */ sub_39923( g_U1360 );
             /* UNLOADMODEL */ sub_39923( g_U1361 );
             /* UNLOADMODEL */ sub_39923( g_U1362 );
             /* WRITESCRIPTLOG */ sub_6681( "RJM", "Init complete, moving to TWOSTAIR_WAIT_FOR_FIRST_FADE_IN", 0 );
            l_U297 = 4;
            break;
            case 4:
            if (IS_SCREEN_FADED_IN())
            {
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_44296( ref l_U1358 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_44410( 1, g_U824, "PASSOS", ref l_U1358, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_44655( "SCMT_TSPAA", ref l_U1358, 8, 1 );
                 /* WRITESCRIPTLOG */ sub_6681( "RJM", "HANDLE_EVENTS - moving to TWOSTAIR_LOWER_AND_MONUMENT_LEVEL", 0 );
                g_U826 = 3;
                if (NOT l_U260._fU0)
                {
                     /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_11523( ref l_U260, g_U826,  /* PLAYER_PED_ID */ sub_6453(), g_U971[3]._fU0, g_U971[3]._fU12, g_U971[3]._fU16, g_U971[3]._fU20, 0 );
                }
                START_CONTEXT( "CEMETERY_TWO_STAIR_HILL" );
                 /* RESETTIMER */ sub_25981( ref l_U1349 );
                 /* CREATETIMER */ sub_2846( ref l_U1349, 100, 1, 0 );
                 /* STARTTIMER */ sub_22583( ref l_U1349 );
                l_U297 = 5;
            }
            break;
            case 5:
             /* UPDATE_PASSOS_TWO_STAIR_HILL */ sub_45783();
             /* UPDATE_GRENADE_LAUNCHER */ sub_49897();
             /* UPDATE_PASSOS_VULNERABILITY */ sub_53588();
             /* P_HANDLE_IMAGEFX_CP03 */ sub_53859();
            if ( /* F_ISPLAYERINTRIGGERBOX */ sub_48202( l_U428 ))
            {
                g_U1237 = 1;
                 /* TASK_UPPER_LEVEL */ sub_55843();
                 /* WRITESCRIPTLOG */ sub_6681( "RJM", "TWOSTAIR_MONUMENT_LEVEL - Player ran upstairs, going to TWOSTAIR_UPPER_LEVEL", 0 );
                l_U297 = 6;
            }
            if (NOT l_U937)
            {
                if (( /* F_ISPLAYERINTRIGGERBOX */ sub_48202( l_U386 )) || (IS_PED_DEAD( l_U848 )))
                {
                     /* TASK_FIRST_MONUMENT_LEVEL */ sub_56844();
                    l_U937 = 1;
                }
            }
            else if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_57230( ref l_U575, 0 ))
            {
                 /* TASK_MONUMENT_LEVEL_FLANKING */ sub_57365();
            }
            if (NOT l_U936)
            {
                if (( /* F_ISPLAYERINTRIGGERBOX */ sub_48202( l_U407 )) || ((NOT ( /* IS_PED_VALID */ sub_6547( l_U692[1] ))) AND (NOT ( /* IS_PED_VALID */ sub_6547( l_U692[0] )))))
                {
                     /* ACTIVATE_UPPER_LEVEL_FRONT */ sub_57604();
                     /* TASK_SECOND_MONUMENT_LEVEL */ sub_58136();
                }
            }
            break;
            case 6:
             /* HANDLE_WINTERSON_TOMBSTONE_POI */ sub_58530();
             /* UPDATE_PASSOS_TWO_STAIR_HILL */ sub_45783();
             /* UPDATE_GRENADE_LAUNCHER */ sub_49897();
             /* UPDATE_PASSOS_VULNERABILITY */ sub_53588();
            if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_57230( ref l_U575, 0 ))
            {
                 /* TASK_MONUMENT_LEVEL_FLANKING */ sub_57365();
            }
            if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_57230( ref l_U554, 0 ))
            {
                 /* TASK_MONUMENT_LEVEL_ENEMIES_TO_UPPER */ sub_62251();
                l_U1256 = 3;
            }
            if ( /* F_ISPLAYERINTRIGGERBOX */ sub_48202( l_U533 ))
            {
                if ( /* HASTIMERBEENACTIVATED */ sub_25423( ref l_U1059 ))
                {
                    if ( /* ISTIMERDONE */ sub_22780( ref l_U1059 ))
                    {
                        if (NOT l_U1024)
                        {
                             /* WRITESCRIPTLOG */ sub_6681( "RJM", "Max was on the upper floor for 5 seconds, Grenade guy kills Passos", 0 );
                            l_U300 = 1;
                            l_U296 = 1;
                        }
                    }
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_6681( "RJM", "Max entered the Grenade Guy kill trigger, start the timer.", 0 );
                     /* CREATETIMER */ sub_2846( ref l_U1059, 5000, 1, 0 );
                     /* STARTTIMER */ sub_22583( ref l_U1059 );
                }
            }
            else if ( /* HASTIMERBEENACTIVATED */ sub_25423( ref l_U1059 ))
            {
                 /* WRITESCRIPTLOG */ sub_6681( "RJM", "Max not on Upper Floor - disabling Grenade Death Scene timer", 0 );
                 /* DISABLETIMER */ sub_49754( ref l_U1059 );
            }
            if (NOT l_U933)
            {
                if (( /* F_GET_NUM_PEDS_IN_TRIGGERBOX */ sub_63311( ref l_U756, l_U512 )) == 0)
                {
                     /* P_CLOSEDOOR */ sub_63439( ref g_U1431, 1 );
                     /* P_CLOSEDOOR */ sub_63439( ref g_U1438, 1 );
                     /* WRITESCRIPTLOG */ sub_6681( "RJM", "Closing and locking the Twostair Hill Gates", 0 );
                    l_U933 = 1;
                }
            }
            else if ((( /* F_GETDOOROPENRATIO */ sub_63661( ref g_U1431 )) >= -0.10000000) AND (( /* F_GETDOOROPENRATIO */ sub_63661( ref g_U1431 )) <= 0.10000000))
            {
                 /* P_SETDOORLOCKED */ sub_42890( ref g_U1431, 1 );
            }
            if ((( /* F_GETDOOROPENRATIO */ sub_63661( ref g_U1438 )) >= -0.10000000) AND (( /* F_GETDOOROPENRATIO */ sub_63661( ref g_U1438 )) <= 0.10000000))
            {
                 /* P_SETDOORLOCKED */ sub_42890( ref g_U1438, 1 );
            }
            iVar2 = (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_46700( ref l_U656 )) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_46700( ref l_U692 ))) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_46700( ref l_U756 ));
            if ( /* IS_PED_VALID */ sub_6547( l_U848 ))
            {
                iVar2++;
            }
            if (iVar2 == 1)
            {
                l_U1004 =  /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_63903( ref l_U656 );
                if (NOT ( /* IS_PED_VALID */ sub_6547( l_U1004 )))
                {
                    l_U1004 =  /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_63903( ref l_U692 );
                }
                if (NOT ( /* IS_PED_VALID */ sub_6547( l_U1004 )))
                {
                    l_U1004 =  /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_63903( ref l_U756 );
                }
                if (NOT ( /* IS_PED_VALID */ sub_6547( l_U1004 )))
                {
                    l_U1004 = l_U848;
                }
                if ( /* IS_PED_VALID */ sub_6547( l_U1004 ))
                {
                     /* WRITESCRIPTLOG */ sub_6681( "RJM", "HANDLE EVENTS: One enemy left, moving to TWOSTAIR_ONE_ENEMY_LEFT", 0 );
                    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
                    l_U297 = 7;
                }
            }
            break;
            case 7:
             /* HANDLE_WINTERSON_TOMBSTONE_POI */ sub_58530();
             /* UPDATE_PASSOS_TWO_STAIR_HILL */ sub_45783();
             /* UPDATE_PASSOS_VULNERABILITY */ sub_53588();
            if ( /* IS_EVERYONE_DEAD */ sub_64290())
            {
                if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
                {
                    l_U1256 = 4;
                    l_U930 = 1;
                    END_CONTEXT( "CEMETERY_TWO_STAIR_HILL" );
                     /* WRITESCRIPTLOG */ sub_6681( "RJM", "HANDLE EVENTS: Everyone's dead, moving to TWOSTAIR_PLAY_PASSOS_UPPER_TRAVEL_SCENE", 0 );
                    l_U297 = 8;
                }
            }
            break;
            case 8:
            if ( /* PLAY_MIDSCENE_UPPER_FLOOR_PASSOS_TRAVEL */ sub_64564())
            {
                 /* TAKE_PAINKILLER_ARRAY_SNAPSHOT */ sub_65667( ref l_U862, ref l_U865 );
                 /* P_SET_POI_AVAILABLE */ sub_34197( ref l_U1169, 1 );
                 /* WRITESCRIPTLOG */ sub_6681( "RJM", "HANDLE EVENTS: Midscene's done, moving to TWOSTAIR_WAIT_FOR_END_TRIGGER", 0 );
                l_U297 = 10;
            }
            break;
            case 10:
            if (NOT l_U1133)
            {
                 /* UPDATE_2STAIR_PILL_VO */ sub_66001();
            }
             /* HANDLE_WINTERSON_TOMBSTONE_POI */ sub_58530();
             /* UPDATE_PASSOS_TWO_STAIR_HILL */ sub_45783();
             /* UPDATE_PASSOS_VULNERABILITY */ sub_53588();
            if (NOT l_U931)
            {
                if ((PED_GET_ACTION_INTENTION_STATUS( g_U824, 49 )) == 1)
                {
                    if ( /* F_ISPLAYERINTRIGGERBOX */ sub_48202( l_U302 ))
                    {
                        PED_SET_ACTION_INTENTION( g_U824, 51, 1000, 0, 0, 0 );
                         /* DIAL_PAS_NICE_WORK */ sub_66505();
                         /* CREATETIMER */ sub_2846( ref l_U1040, 1000, 1, 0 );
                         /* STARTTIMER */ sub_22583( ref l_U1040 );
                        l_U931 = 1;
                    }
                }
            }
            if ( /* F_ISPLAYERINTRIGGERBOX */ sub_48202( l_U302 ))
            {
                uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_6453(), 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
                {
                    if (( /* IS_WEAPON_TWO_HANDED */ sub_35242( uVar3 )) == 1)
                    {
                         /* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ sub_36245( 0 );
                    }
                }
            }
            if ( /* UPDATE_FORCEWALK_AND_TRIGGER_PAIR */ sub_66720( l_U302, l_U323, 1 ))
            {
                g_U1238 = 1;
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_6453(), 0 );
                l_U935 = 0;
                 /* KILL_SPEECH */ sub_67085( ref l_U869, 0 );
                 /* WRITESCRIPTLOG */ sub_6681( "RJM", "HANDLE EVENTS: Going to TWOSTAIR_DONE", 0 );
                l_U297 = 11;
            }
            else
            {
                 /* HANDLE_PASSOS_HURRY_UP */ sub_67323();
            }
            if ( /* ISTIMERDONE */ sub_22780( ref l_U1040 ))
            {
                PLAY_IMAGEFX( "FLASH_YELLOW_RIGHT", 4, 1 );
                PLAY_IMAGEFX( "CONTRAST_ZOOM_FAST_BLUE", 4, 1 );
            }
            break;
            case 11:
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            break;
        }
    }
    return;
}

/* SETUP_GAMEPLAY */ void sub_29353()
{
     /* WRITESCRIPTLOG */ sub_6681( "RJM", "SETUP_GAMEPLAY init", 0 );
     /* CREATE_LOWER_LEVEL */ sub_29414();
     /* CREATE_MONUMENT_LEVEL */ sub_31633();
     /* CREATE_UPPER_LEVEL */ sub_32346();
     /* CREATE_GRENADE_THOWER */ sub_32581();
     /* CREATE_WINTERSON_TOMBSTONE_POI */ sub_33045();
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    return;
}

/* CREATE_LOWER_LEVEL */ void sub_29414()
{
     /* PED_ARRAY_INITIALIZE */ sub_29482( ref l_U659, ref l_U656, ref l_U686, -691403429, 0.50000000, ref g_U1212, 0, 0, 25000, 2, 0, 25000, 0 );
     /* PED_ARRAY_SET_TETHERBOX */ sub_31362( ref l_U656, l_U638, 1 );
     /* P_DEACTIVATEPEDARRAY */ sub_20017( ref l_U656 );
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_31214( ref l_U656, "LOWER_LVL" );
    return;
}

/* PED_ARRAY_INITIALIZE */ void sub_29482(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5, boolean bParam6, unknown uParam7, unknown uParam8, unknown uParam9, int iParam10, unknown uParam11, unknown uParam12)
{
    int I;
    unknown uVar16;

    if ((uParam0^) != (uParam1^))
    {
        SCRIPT_ASSERT( "PED_ARRAY_INITIALIZE - Array sizes don't match!!", 0 );
        return;
    }
     /* P_SETUP_AI_GROUP */ sub_29594( uParam2, uParam4, 0 );
    if (IS_STRING_NULL( uParam12 ))
    {
        uParam12 = l_U129;
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* CLEANPED */ sub_21570( (uParam1^)[I] );
        (uParam1^)[I] =  /* CREATEPED */ sub_21659( ref (uParam0^)[I] );
        if ( /* IS_PED_VALID */ sub_6547( (uParam1^)[I] ))
        {
            SET_PED_AI_TEMPLATE( (uParam1^)[I], uParam5 );
            SET_PED_ALERTNESS( (uParam1^)[I], uParam9 );
            SET_PED_ALLOWED_TO_SURRENDER( (uParam1^)[I], 0 );
             /* P_QUICK_ADD_PED_TO_GROUP */ sub_30132( (uParam1^)[I], uParam2 );
            if (iParam3 != -1569615261)
            {
                uVar16 =  /* F_GIVEPEDWEAPON */ sub_9338( (uParam1^)[I], iParam3, uParam8, 0, 0 );
            }
            if (iParam10 != 0)
            {
                 /* F_GIVEPEDWEAPONTOHOLSTER */ sub_8587( (uParam1^)[I], iParam10, 0, uParam11, 0 );
            }
            if (bParam6)
            {
                 /* PED_SET_ENGAGEMENT_RANGES */ sub_30598( (uParam1^)[I], iParam3 );
            }
            switch (uParam7)
            {
                case 0: break;
                case 1:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 13, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 13, 1 );
                break;
                case 2:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 14, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 14, 1 );
                break;
                case 3:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 12, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 12, 1 );
                break;
            }
        }
    }
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_31214( uParam1, uParam12 );
    return;
}

/* P_SETUP_AI_GROUP */ void sub_29594(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_30132(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_530( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_29594( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_29594( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* PED_SET_ENGAGEMENT_RANGES */ void sub_30598(unknown uParam0, unknown uParam1)
{
    switch (uParam1)
    {
        case -1569615261:
        case 406496141:
        case -862236369:
        case 456708483:
        case -1464892298:
        case 68019059:
        case -612753081:
        case -820634585:
        SET_PED_COMBAT_RANGE_MAX( uParam0, 10.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case 434544317:
        case 1845102363:
        case -168327769:
        case -184942895:
        case 514118749:
        case 1964270085:
        case -691403429:
        case 1478009203:
        case -1404433099:
        case 1194438308:
        SET_PED_COMBAT_RANGE( uParam0, 1 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 20.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case -1013714740:
        case -1074756423:
        case 1308526797:
        case 840671040:
        case 57534114:
        case 724901397:
        case 1992962408:
        SET_PED_COMBAT_RANGE( uParam0, 2 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 30.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case 1224272620:
        case 10648147:
        case 377623895:
        case 319712764:
        case -110877124:
        case -1659006841:
        SET_PED_COMBAT_RANGE( uParam0, 3 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 50.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 5.00000000 );
        break;
    }
    return;
}

/* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ void sub_31214(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

/* PED_ARRAY_SET_TETHERBOX */ void sub_31362(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* PED_SET_TETHERBOX */ sub_31424( ref (uParam0^)[I], uParam1, uParam2 );
    }
    return;
}

/* PED_SET_TETHERBOX */ void sub_31424(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if ( /* IS_PED_VALID */ sub_6547( (uParam0^) ))
    {
        RESET_PED_TETHERING( (uParam0^) );
         /* P_TETHERPED */ sub_31483( ref uParam1, (uParam0^), uParam2 );
    }
    return;
}

/* P_TETHERPED */ void sub_31483(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

/* CREATE_MONUMENT_LEVEL */ void sub_31633()
{
     /* MLOG */ sub_31693( "CREATE_MONUMENT_LEVEL", 0, 0 );
     /* PED_ARRAY_INITIALIZE */ sub_29482( ref l_U697, ref l_U692, ref l_U750, -862236369, 1.00000000, ref g_U1220, 0, 0, 25000, 2, 0, 25000, 0 );
     /* PED_ARRAY_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_31819( ref l_U692, 1 );
     /* PED_ARRAY_SET_VISIBILITY */ sub_32012( ref l_U692, 0 );
     /* PED_ARRAY_SET_COMBAT_MOVEMENT */ sub_32160( ref l_U692, 0 );
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_31214( ref l_U692, "MONUMENT_LVL" );
    return;
}

/* MLOG */ void sub_31693(unknown uParam0, string sParam1, string sParam2)
{
    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "ML";
    }
    if (IS_STRING_NULL( sParam1 ))
    {
        sParam1 = "---";
    }
     /* WRITESCRIPTLOG */ sub_6681( sParam2, uParam0, sParam1 );
    return;
}

/* PED_ARRAY_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ void sub_31819(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_31902( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ void sub_31902(unknown uParam0, unknown uParam1)
{
    if ( /* IS_PED_VALID */ sub_6547( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), uParam1 );
    }
    return;
}

/* PED_ARRAY_SET_VISIBILITY */ void sub_32012(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* PED_SET_VISIBILITY */ sub_32074( (uParam0^)[I], uParam1 );
    }
    return;
}

/* PED_SET_VISIBILITY */ void sub_32074(unknown uParam0, unknown uParam1)
{
    if ( /* IS_PED_VALID */ sub_6547( uParam0 ))
    {
        SET_PED_VISIBLE( uParam0, uParam1 );
    }
    return;
}

/* PED_ARRAY_SET_COMBAT_MOVEMENT */ void sub_32160(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* PED_SET_COMBAT_MOVEMENT */ sub_32226( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* PED_SET_COMBAT_MOVEMENT */ void sub_32226(unknown uParam0, unknown uParam1)
{
    if ( /* IS_PED_VALID */ sub_6547( (uParam0^) ))
    {
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam1 );
    }
    return;
}

/* CREATE_UPPER_LEVEL */ void sub_32346()
{
     /* WRITESCRIPTLOG */ sub_6681( "RJM", "Starting CREATE_UPPER_LEVEL", 0 );
     /* PED_ARRAY_INITIALIZE */ sub_29482( ref l_U763, ref l_U756, ref l_U842, -862236369, 1.00000000, "AIT_NORMAL", 0, 0, 25000, 2, 0, 25000, 0 );
     /* PED_ARRAY_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_31819( ref l_U756, 1 );
     /* PED_ARRAY_SET_TETHERBOX */ sub_31362( ref l_U756, l_U641, 1 );
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_31214( ref l_U756, "UPPER_LVL" );
     /* F_GIVEPEDWEAPONTOHOLSTER */ sub_8587( l_U756[1], -862236369, 1, 25000, 0 );
     /* F_GIVEPEDWEAPONTOHOLSTER */ sub_8587( l_U756[2], -862236369, 1, 25000, 0 );
     /* P_DEACTIVATEPEDARRAY */ sub_20017( ref l_U756 );
    return;
}

/* CREATE_GRENADE_THOWER */ void sub_32581()
{
     /* WRITESCRIPTLOG */ sub_6681( "RJM", "CREATE_GRENADE_THOWER", 0 );
     /* CLEANPED */ sub_21570( l_U848 );
     /* PED_INITIALIZE */ sub_32702( ref l_U849, ref l_U848, 930042831, "AIT_CS_TANK_GREN", 0, 25000, 2, 0, 25000 );
     /* F_GIVEPEDWEAPONTOHOLSTER */ sub_8587( l_U848, -691403429, 0, 25000, 0 );
    SET_PED_FLAG_BLOCK_WOUNDED_MOVEMENT( l_U848, 1 );
     /* P_DEACTIVATEPED */ sub_19898( l_U848 );
    SET_PED_NAME_DEBUG( l_U848, "GRENADE_GUY" );
    return;
}

/* PED_INITIALIZE */ void sub_32702(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, int iParam7, unknown uParam8)
{
    unknown uVar11;

     /* CLEANPED */ sub_21570( (uParam1^) );
    (uParam1^) =  /* CREATEPED */ sub_21659( uParam0 );
    if ( /* IS_PED_VALID */ sub_6547( (uParam1^) ))
    {
        uVar11 =  /* F_GIVEPEDWEAPON */ sub_9338( (uParam1^), uParam2, uParam5, 0, 1 );
        if (iParam7 != 0)
        {
             /* F_GIVEPEDWEAPONTOHOLSTER */ sub_8587( (uParam1^), iParam7, 0, uParam8, 0 );
        }
        SET_PED_AI_TEMPLATE( (uParam1^), uParam3 );
        SET_PED_ALERTNESS( (uParam1^), uParam6 );
        switch (uParam4)
        {
            case 0: break;
            case 1:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 13, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 13, 1 );
            break;
            case 2:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 14, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 14, 1 );
            break;
            case 3:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 12, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 12, 1 );
            break;
        }
    }
    return;
}

/* CREATE_WINTERSON_TOMBSTONE_POI */ void sub_33045()
{
     /* WRITESCRIPTLOG */ sub_6681( "RJM", "CREATE_WINTERSON_TOMBSTONE_POI", 0 );
     /* P_CREATEPOISTRUCTCOORD */ sub_33168( ref l_U1169, 2, l_U1134, l_U1134, l_U1134, 1.50000000, 3.00000000, 1, 0 );
     /* P_SET_INTERACTIVE_TEXT */ sub_33932( ref l_U1169, 30, "POI_CEM_TOMB_VW" );
     /* P_SET_POI_FORCE_WALK */ sub_34142( ref l_U1169, 0 );
     /* P_SET_POI_AVAILABLE */ sub_34197( ref l_U1169, 0 );
     /* P_SET_POI_REUSABLE */ sub_34279( ref l_U1169, 1 );
    return;
}

/* P_CREATEPOISTRUCTCOORD */ void sub_33168(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
     /* P_CREATEBLANKPOISTRUCT */ sub_33208( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
     /* P_CREATEPOIGLINT */ sub_33601( iParam0 );
    return;
}

/* P_CREATEBLANKPOISTRUCT */ void sub_33208(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

/* P_CREATEPOIGLINT */ void sub_33601(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
     /* P_INITPOIGLINT */ sub_33699( iParam0 );
    return;
}

/* P_INITPOIGLINT */ void sub_33699(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                 /* P_ENABLEPOIGLINT */ sub_27195( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                 /* P_ENABLEPOIGLINT */ sub_27195( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                 /* P_ENABLEPOIGLINT */ sub_27195( iParam0, 1 );
            }
            else
            {
                 /* P_ENABLEPOIGLINT */ sub_27195( iParam0, 0 );
            };;;
        }
        else
        {
             /* P_ENABLEPOIGLINT */ sub_27195( iParam0, 0 );
        }
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_27195( iParam0, 0 );
    }
    return;
}

/* P_SET_INTERACTIVE_TEXT */ void sub_33932(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
     /* P_INITINTERACTIVETEXT */ sub_33988( iParam0 );
    return;
}

/* P_INITINTERACTIVETEXT */ void sub_33988(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

/* P_SET_POI_FORCE_WALK */ void sub_34142(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

/* P_SET_POI_AVAILABLE */ void sub_34197(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
     /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_27594( iParam0 );
    return;
}

/* P_SET_POI_REUSABLE */ void sub_34279(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

/* P_ACTIVATEPED */ void sub_34452(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

/* REGISTER_PEDS_CUT_08_02_GAMEPLAY */ void sub_34574(unknown uParam0, unknown uParam1)
{
    unknown uVar4;

     /* WRITESCRIPTLOG */ sub_6681( "RJM", "REGISTER_PEDS_CUT_08_02_CUTSCENE_GAMEPLAY - start", 0 );
    if ( /* IS_MAX_VALID */ sub_19308())
    {
         /* WRITESCRIPTLOG */ sub_6681( "RJM", "Registering player with 08_02_pt01", 0 );
         /* P_PLAYER_HOLSTER_WEAPONS */ sub_34748( ref l_U1260, 1, 1 );
         /* P_SET_TWO_HANDED_WEAPON_VISIBLE */ sub_36112( l_U1260, 0 );
         /* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ sub_36245( 1 );
        uVar4 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_6453(), 0, 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar4, "W_PI_Clt1911_Aa_H", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_6453(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_6453(), -94.25115000, 26.21845000, -2.29093600, 60.00000000 );
        CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "GenCover", "9A916A3D_A6EFF331_Corner1", 1, 1 );
        CUTSCENE_SET_COVER_CAMERA_DIRECTION( g_U971[3]._fU16, g_U971[3]._fU20 );
    }
    if ( /* IS_PED_VALID */ sub_6547( g_U824 ))
    {
         /* WRITESCRIPTLOG */ sub_6681( "RJM", "Registering piCut08_02Passos with 08_02_cem", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U824, "Pass_NY_H", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U824, 0, 0 ), "W_PI_Clt1911_Aa_H^1", 0 );
    }
    if ( /* IS_PED_VALID */ sub_6547( uParam0 ))
    {
         /* WRITESCRIPTLOG */ sub_6681( "RJM", "Registering grenadeGuy with 08_02_cem", 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( uParam0, 1 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( uParam0, "G_NY_C_Gren", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( uParam0, 0, 0 ), "W_SP_GrnLch_Aa_h", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( uParam0, ref g_U1249 );
        CUTSCENE_REGISTER_PED_TELEPORT( uParam0, -84.01826000, 45.39366000, 2.64471400, 137.27510000 );
    }
    if ( /* IS_PED_VALID */ sub_6547( (uParam1^)[0] ))
    {
         /* WRITESCRIPTLOG */ sub_6681( "RJM", "Registering otherGuys[0] with 08_02_cem", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( (uParam1^)[0], "G_NY_C_Sold_B", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( (uParam1^)[0], 0, 0 ), "W_SB_M10_Aa_H", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( (uParam1^)[0], ref g_U1249 );
        CUTSCENE_REGISTER_PED_TELEPORT( (uParam1^)[0], -88.08000000, 55.07000000, 2.64000000, 141.09000000 );
    }
    if ( /* IS_PED_VALID */ sub_6547( (uParam1^)[1] ))
    {
         /* WRITESCRIPTLOG */ sub_6681( "RJM", "Registering otherGuys[1] with 08_02_cem", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( (uParam1^)[1], "G_NY_C_Sold_B^3", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( (uParam1^)[1], 0, 0 ), "W_SB_M10_Aa_H^1", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( (uParam1^)[1], ref g_U1249 );
        CUTSCENE_REGISTER_PED_TELEPORT( (uParam1^)[1], -74.48000000, 41.65000000, 2.64000000, 132.27000000 );
    }
     /* WRITESCRIPTLOG */ sub_6681( "RJM", "REGISTER_PEDS_CUT_08_02_CUTSCENE_GAMEPLAY - end", 0 );
    return;
}

/* P_PLAYER_HOLSTER_WEAPONS */ void sub_34748(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

     /* RESET_WEAPON_CONFIG */ sub_34787( iParam0 );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6453() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_6453(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_34988( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if (( /* IS_WEAPON_TWO_HANDED */ sub_35242( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_6453(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_6453(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_6453(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_6453(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6453() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_6453(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_6453(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_6453(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_6453(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6453() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_6453(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if (( /* IS_WEAPON_TWO_HANDED */ sub_35242( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_6453(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_6453(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_6453(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

/* RESET_WEAPON_CONFIG */ void sub_34787(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

/* IS_WEAPON_SINGLE_HANDED */ int sub_34988(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* IS_WEAPON_TWO_HANDED */ int sub_35242(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* P_SET_TWO_HANDED_WEAPON_VISIBLE */ void sub_36112(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;

    uVar21 = uParam0._fU24._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar21, uParam18 );
    }
    uVar22 = uParam0._fU60._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar22, uParam18 );
    }
    return;
}

/* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ void sub_36245(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6453() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_6453(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if ((( /* IS_WEAPON_SINGLE_HANDED */ sub_34988( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_36393();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_6453(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

/* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ int sub_36393()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6453() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_6453(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_34988( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_6453(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_6453(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_6453(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

/* PLAY_CUTSCENE_08_02 */ void sub_37691(boolean bParam0)
{
    int Result;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;

    Result = 0;
    switch (l_U1278)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_6681( "BSW", "PLAY_CUTSCENE_08_02 start", 0 );
         /* NIS_PRE_SETUP */ sub_19718( 1, 0, 0, 1 );
         /* LOADSEAMLESSCUTSCENE */ sub_1427( l_U1259, 1 );
        if (NOT bParam0)
        {
             /* BLOCKLOAD_08_02_ASSETS */ sub_37830();
             /* CREATE_08_02_PEDS_AND_OBJECTS */ sub_37906();
             /* REGISTER_PEDS_CUT_08_02_CUTSCENE_ONLY */ sub_38278();
        }
        CUTSCENE_ENABLE_SKIP( 0 );
        START_SEAMLESS_CUTSCENE();
        if (IS_SCREEN_FADED_OUT())
        {
            DO_SCREEN_FADE_IN( 500 );
        }
        l_U1278 = 3;
        break;
        case 3:
         /* SETUP_WEATHER_TIMEOFDAY */ sub_39200( 3 );
         /* NIS_CREATE_STATIC_CAM */ sub_20481( ref uVar4, -96.47002000, 23.67036000, -0.52499700, -4.35877400, 0.00000000, -35.09212000, 1110704128, 1000 );
         /* NIS_PLAY_STATIC_CAMERA */ sub_22964( ref uVar4 );
        l_U1278 = 4;
        break;
        case 4:
        DISPLAYF( "CUTSCENE TIME: {}", 1, 513, GET_CUTSCENE_TIME_MS() );
        if (GET_CUTSCENE_TIME_MS() > 18000)
        {
            CUTSCENE_ENABLE_SKIP( 1 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (NOT bParam0)
            {
                 /* CLEANUP_08_02_ASSETS */ sub_39795();
                 /* UNLOAD_08_02_ASSETS */ sub_39886();
            }
            STOP_SCRIPT_STREAM( 2 );
             /* NIS_RETURN_TO_GAMEPLAY_CAM */ sub_40135( 500, 1, 1, g_U971[3]._fU16, g_U971[3]._fU20, 0 );
             /* NIS_POST_SETUP */ sub_40263( 1, 1 );
            Result = 1;
            l_U1278 = 5;
             /* WRITESCRIPTLOG */ sub_6681( "RJM", "PLAY_CUTSCENE_08_02 end", 0 );
        }
        break;
    }
    return Result;
}

/* BLOCKLOAD_08_02_ASSETS */ void sub_37830()
{
     /* LOADMODEL */ sub_1132( g_U1332, 1 );
     /* LOADMODEL */ sub_1132( g_U1336, 1 );
     /* LOADMODEL */ sub_1132( g_U1337, 1 );
    return;
}

/* CREATE_08_02_PEDS_AND_OBJECTS */ void sub_37906()
{
     /* WRITESCRIPTLOG */ sub_6681( "RJM", "CREATE_08_02_PEDS_AND_OBJECTS - start", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3192( ref l_U1280, 0, 0, 0, 0.00000000, 1265654828, 26, 6, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3192( ref l_U1294, 0, 0, 0, 0.00000000, 1849005128, 26, 6, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3192( ref l_U1308, 0, 0, 0, 0.00000000, 354025753, 26, 6, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3192( ref l_U1322, 0, 0, 0, 0.00000000, 842643132, 26, 6, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3192( ref l_U1336, 0, 0, 0, 0.00000000, 868323341, 26, 6, 0, 0, 0 );
    l_U1279 =  /* CREATEPED */ sub_21659( ref l_U1280 );
    l_U1293 =  /* CREATEPED */ sub_21659( ref l_U1294 );
    l_U1307 =  /* CREATEPED */ sub_21659( ref l_U1308 );
    l_U1321 =  /* CREATEPED */ sub_21659( ref l_U1322 );
    l_U1335 =  /* CREATEPED */ sub_21659( ref l_U1336 );
     /* WRITESCRIPTLOG */ sub_6681( "RJM", "CREATE_08_02_PEDS_AND_OBJECTS - end", 0 );
    return;
}

/* REGISTER_PEDS_CUT_08_02_CUTSCENE_ONLY */ void sub_38278()
{
     /* WRITESCRIPTLOG */ sub_6681( "RJM", "REGISTER_PEDS_CUT_08_02_CUTSCENE_ONLY - start", 0 );
    if ( /* IS_MAX_VALID */ sub_19308())
    {
         /* WRITESCRIPTLOG */ sub_6681( "RJM", "Registering player with 08_02_pt01", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_6453(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "GenCover", "9A916A3D_A6EFF331_Corner1", 1, 1 );
        CUTSCENE_SET_COVER_CAMERA_DIRECTION( g_U971[3]._fU16, g_U971[3]._fU20 );
    }
    if ( /* IS_PED_VALID */ sub_6547( l_U1279 ))
    {
         /* WRITESCRIPTLOG */ sub_6681( "RJM", "Registering piCut08_02Passos with 08_02_cem", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1279, "Pass_NY_H", 0 );
    }
    if ( /* IS_PED_VALID */ sub_6547( l_U1293 ))
    {
         /* WRITESCRIPTLOG */ sub_6681( "RJM", "Registering piCut08_02Guy1 with 08_02_cem", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1293, "G_NY_C_Gren", 0 );
    }
    if ( /* IS_PED_VALID */ sub_6547( l_U1307 ))
    {
         /* WRITESCRIPTLOG */ sub_6681( "RJM", "Registering piCut08_02Guy2 with 08_02_cem", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1307, "G_NY_C_Sold_B", 0 );
    }
    if ( /* IS_PED_VALID */ sub_6547( l_U1321 ))
    {
         /* WRITESCRIPTLOG */ sub_6681( "RJM", "Registering piCut08_02Guy3 with 08_02_cem", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1321, "G_NY_C_Sold_B^1", 0 );
    }
    if ( /* IS_PED_VALID */ sub_6547( l_U1335 ))
    {
         /* WRITESCRIPTLOG */ sub_6681( "RJM", "Registering piCut08_02Guy4 with 08_02_cem", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1335, "G_NY_C_Sold_B^3", 0 );
    }
     /* WRITESCRIPTLOG */ sub_6681( "RJM", "REGISTER_PEDS_CUT_08_02_CUTSCENE_ONLY - end", 0 );
    return;
}

/* SETUP_WEATHER_TIMEOFDAY */ void sub_39200(unknown uParam0)
{
     /* WRITE_STRING */ sub_530( "[SP]### P_SETUP_WEATHER_TIMEOFDAY ###" );
    SET_WEATHER_TYPE_NOW_PERSIST( "SNOW_LIGHT" );
    switch (uParam0)
    {
        case 0:
        case 1:
        case 2:
        case 20:
        case 21:
        FREEZE_TIME_OF_DAY( 18, 0 );
        break;
        case 3:
        case 22:
        FREEZE_TIME_OF_DAY( 19, 0 );
        break;
        case 4:
        case 5:
        case 6:
        case 23:
        case 24:
        case 25:
        FREEZE_TIME_OF_DAY( 20, 0 );
        break;
        case 7:
        case 26:
        FREEZE_TIME_OF_DAY( 21, 0 );
        break;
        case 8:
        case 9:
        case 10:
        case 27:
        case 28:
        case 29:
        FREEZE_TIME_OF_DAY( 22, 0 );
        break;
        default:
         /* WRITESCRIPTLOG */ sub_6681( "RJM", "Setting Weather/TOD for a checkpoint that doesn't really matter", 0 );
        FREEZE_TIME_OF_DAY( 18, 0 );
        break;
    }
    return;
}

/* CLEANUP_08_02_ASSETS */ void sub_39795()
{
     /* CLEANPED */ sub_21570( l_U1279 );
     /* CLEANPED */ sub_21570( l_U1293 );
     /* CLEANPED */ sub_21570( l_U1307 );
     /* CLEANPED */ sub_21570( l_U1321 );
     /* CLEANPED */ sub_21570( l_U1335 );
    return;
}

/* UNLOAD_08_02_ASSETS */ void sub_39886()
{
     /* UNLOADMODEL */ sub_39923( g_U1332 );
     /* UNLOADMODEL */ sub_39923( g_U1336 );
     /* UNLOADMODEL */ sub_39923( g_U1337 );
    return;
}

/* UNLOADMODEL */ void sub_39923(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
         /* WRITE_STRING */ sub_530( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

/* NIS_RETURN_TO_GAMEPLAY_CAM */ void sub_40135(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

/* NIS_POST_SETUP */ void sub_40263(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6453() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_6491(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_6453(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_40361();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_40361()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6453() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_6453(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_6453(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_6453(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_6453(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* START_GAMEPLAY */ void sub_40885()
{
     /* CREATE_2STAIR_PASSOS */ sub_40912();
     /* TASK_LOWER_LEVEL */ sub_41940();
    return;
}

/* CREATE_2STAIR_PASSOS */ void sub_40912()
{
     /* WRITESCRIPTLOG */ sub_6681( "RJM", "CREATE_2STAIR_PASSOS - start", 0 );
     /* CLEANPED */ sub_21570( g_U824 );
    g_U824 =  /* CREATEPED */ sub_21659( ref l_U643 );
    if ( /* IS_PASSOS_VALID */ sub_18974())
    {
         /* WRITESCRIPTLOG */ sub_6681( "RJM", "CREATE_2STAIR_PASSOS - Passos is valid", 0 );
        SET_PED_NAME_DEBUG( g_U824, "PASSOS_2STAIR" );
         /* MAL_GIVEPEDWEAPON */ sub_41118( g_U824, -862236369, 25000, 0, 0 );
         /* P_SETUP_PASSOS_GENERAL_ATTRIBUTES */ sub_41420( ref g_U824 );
        SET_PED_DEFAULT_AIM_AT_COORD( g_U824, -84.73000000, 45.27000000, -1.09000000 );
        SET_PED_COLLISION( g_U824, 1 );
        SET_PED_SYNC_POINT( g_U824, l_U643._fU0, l_U643._fU12 );
        ISEQ_REGISTER_ENTITY( 1924315369, "passos", g_U824, 0 );
        ISEQ_START( 1924315369 );
    }
     /* WRITESCRIPTLOG */ sub_6681( "RJM", "CREATE_2STAIR_PASSOS - end", 0 );
    return;
}

/* MAL_GIVEPEDWEAPON */ void sub_41118(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    unknown Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                 /* MAL_WRITESCRIPTLOG */ sub_41286( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

/* MAL_WRITESCRIPTLOG */ void sub_41286(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar3, 1537, "MSWW", 1537, uParam0, 1537, "###" );
    return;
}

/* P_SETUP_PASSOS_GENERAL_ATTRIBUTES */ void sub_41420(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_6681( "SBA", "P_SETUP_PASSOS_GENERAL_ATTRIBUTES", "***" );
    if ( /* IS_PED_VALID */ sub_6547( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^), 1 );
        SET_PED_VALIDATE_BULLET_CAM_HIT( (uParam0^), 0 );
        SET_AI_SHOULD_ALWAYS_MISS_PED( (uParam0^), 1 );
        SET_CAN_AI_KICK_THROUGH_CORPSES( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_AI_TEMPLATE( (uParam0^), "AIT_NORMAL" );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( (uParam0^), 1 );
        SET_PED_AS_ONE_SHOT_KILL( (uParam0^), 1 );
        SET_PED_GORE( (uParam0^), 0 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), 0 );
        SET_PED_PROOFS( (uParam0^), 0, 1, 1, 1, 1 );
        SET_PED_ALLOWED_TO_SURRENDER( (uParam0^), 0 );
        SET_PED_CAN_AVOID_DEATH_ZONES( (uParam0^), 0 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( (uParam0^), 1 );
        SET_PED_CAN_PUSH_PLAYER( (uParam0^), 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_CAN_BE_TARGETTED( (uParam0^), 0 );
        SET_PED_CONSUMING_AMMO( (uParam0^), 0 );
        SET_PED_PATH_CAN_USE_CLIMBOVERS( (uParam0^), 1 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( (uParam0^), 1 );
    }
    return;
}

/* TASK_LOWER_LEVEL */ void sub_41940()
{
    unknown uVar2;
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_6681( "RJM", "TASK_LOWER_LEVEL", 0 );
     /* P_ACTIVATEPEDARRAY */ sub_42004( ref l_U656 );
    if ( /* IS_PED_VALID */ sub_6547( l_U656[0] ))
    {
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -89.02000000, 43.16000000, -2.11000000,  /* PLAYER_PED_ID */ sub_6453(), 1, 0.00000000, 1101004800, -1082130432, 3 );
        TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_6453() );
        CLOSE_SEQUENCE_TASK( uVar2 );
        CLEAR_PED_TASKS_IMMEDIATELY( l_U656[0] );
        TASK_PERFORM_SEQUENCE( l_U656[0], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    if ( /* IS_PED_VALID */ sub_6547( l_U656[1] ))
    {
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -85.77000000, 40.08000000, -2.11000000,  /* PLAYER_PED_ID */ sub_6453(), 1, 0.00000000, 1101004800, -1082130432, 3 );
        TASK_COMBAT_MOVE_TO_COVER( 0, "TwoStair", "Corner_Position38",  /* PLAYER_PED_ID */ sub_6453() );
        CLOSE_SEQUENCE_TASK( uVar3 );
        CLEAR_PED_TASKS_IMMEDIATELY( l_U656[1] );
        TASK_PERFORM_SEQUENCE( l_U656[1], uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    return;
}

/* P_ACTIVATEPEDARRAY */ void sub_42004(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_ACTIVATEPED */ sub_34452( (uParam0^)[I] );
    }
    return;
}

/* PED_SET_CAN_ONLY_FIRE_WITH_CLEAR_LOS */ void sub_42439(unknown uParam0, boolean bParam1)
{
    if ( /* IS_PED_VALID */ sub_6547( (uParam0^) ))
    {
        SET_PED_IGNORE_LOS_CHECKS( (uParam0^), NOT bParam1 );
    }
    return;
}

/* PED_SET_REGISTER_TARGET_PLAYER */ void sub_42536(unknown uParam0)
{
    if (( /* IS_MAX_VALID */ sub_19308()) AND ( /* IS_PED_VALID */ sub_6547( (uParam0^) )))
    {
         /* PED_SET_REGISTER_TARGET */ sub_42605( uParam0,  /* PLAYER_PED_ID */ sub_6453() );
    }
    return;
}

/* PED_SET_REGISTER_TARGET */ void sub_42605(unknown uParam0, unknown uParam1)
{
    if (( /* IS_PED_VALID */ sub_6547( uParam1 )) AND ( /* IS_PED_VALID */ sub_6547( (uParam0^) )))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* PED_SET_LOCKED_ON_PLAYER */ void sub_42694(unknown uParam0)
{
    if (( /* IS_MAX_VALID */ sub_19308()) AND ( /* IS_PED_VALID */ sub_6547( (uParam0^) )))
    {
         /* PED_SET_LOCKED_ON_PED */ sub_42757( uParam0,  /* PLAYER_PED_ID */ sub_6453() );
    }
    return;
}

/* PED_SET_LOCKED_ON_PED */ void sub_42757(unknown uParam0, unknown uParam1)
{
    if (( /* IS_PED_VALID */ sub_6547( uParam1 )) AND ( /* IS_PED_VALID */ sub_6547( (uParam0^) )))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* P_SETDOORLOCKED */ void sub_42890(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if (( /* F_DOESDOOREXIST */ sub_42920( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_43004( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_42920(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_43004(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* F_IMAGEFX_FADE_IN */ int sub_43159()
{
    if (l_U258)
    {
         /* WRITESCRIPTLOG */ sub_6681( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U258 = 0;
        return 1;
        break;
    }
     /* WRITESCRIPTLOG */ sub_6681( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

/* CREATE_BRIDGE_RAYFIRE_DESTROYED */ void sub_43430()
{
     /* WRITE_STRING */ sub_530( "[GA] CREATE_BRIDGE_RAYFIRE_DESTROYED start" );
     /* CLEANOBJECT */ sub_28240( g_U1796 );
     /* CLEANOBJECT */ sub_28240( g_U1786 );
     /* CLEANOBJECT */ sub_28240( g_U1787 );
     /* CLEANOBJECT */ sub_28240( g_U1788 );
     /* CLEANOBJECT */ sub_28240( g_U1789 );
     /* CLEANOBJECT */ sub_28240( g_U1790 );
     /* CLEANOBJECT */ sub_28240( g_U1791 );
     /* CLEANOBJECT */ sub_28240( g_U1792 );
     /* CLEANOBJECT */ sub_28240( g_U1793 );
     /* CLEANOBJECT */ sub_28240( g_U1794 );
     /* CLEANOBJECT */ sub_28240( g_U1795 );
     /* CLEANOBJECT */ sub_28240( g_U1797 );
    g_U1797 =  /* CREATEOBJECTNOOFFSET */ sub_43666( g_U1363, 65426, -6, -2, 0, 0, 0, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U1797 ))
    {
        FREEZE_OBJECT_POSITION( g_U1797, 1 );
    }
     /* P_SETDOORLOCKED */ sub_42890( ref g_U1417, 1 );
     /* P_SETDOORLOCKED */ sub_42890( ref g_U1424, 1 );
     /* WRITE_STRING */ sub_530( "[GA] CREATE_BRIDGE_RAYFIRE_DESTROYED end" );
    return;
}

/* CREATEOBJECTNOOFFSET */ void sub_43666(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_1132( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_44296(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_44410(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_44655(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_44700( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_44700(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_44787( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_44787(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_44839( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_45357( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_44839(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_45357(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* UPDATE_PASSOS_TWO_STAIR_HILL */ void sub_45783()
{
    boolean bVar2;

    if ( /* IS_PASSOS_VALID */ sub_18974())
    {
        switch (l_U298)
        {
            case 0:
             /* UPDATE_PASSOS_MURDER_LOWER_LEVEL */ sub_45878();
            bVar2 =  /* HAS_MAX_SHOT_NEAR_PASSOS */ sub_47215();
            if ((IS_EXPLOSION_IN_SPHERE( 20, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U824 ), 5.00000000 )) || (bVar2))
            {
                if (bVar2)
                {
                     /* P_DIAL_PAS_SHOT_AT */ sub_47389( g_U824 );
                }
                 /* WRITESCRIPTLOG */ sub_6681( "RJM", "PAS_FIRST_COVER_AT_GRAVESTONE - Either player shot or explosion caused a flinch.", 0 );
                PED_SET_ACTION_INTENTION( g_U824, 54, 1000, 0, 0, 0 );
            }
            if ((IS_PED_DEAD( l_U848 )) AND (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_46700( ref l_U656 )) == 0))
            {
                 /* MOVE_PASSOS_TO_STAIR_BOTTOM */ sub_47685();
                 /* DIAL_MONO_PAS_TO_STEPS */ sub_47822();
                CLEAR_PED_DEFAULT_AIM( g_U824 );
                SET_PED_DEFAULT_AIM_AT_COORD( g_U824, -84.95000000, 50.73000000, 2.60000000 );
                 /* WRITESCRIPTLOG */ sub_6681( "RJM", "UPDATE_PASSOS_TWO_STAIR_HILL - Moving to PAS_SECOND_COVER_AT_STAIRCASE", 0 );
                l_U298 = 1;
            }
            if (l_U868)
            {
                if ( /* F_ISPLAYERINTRIGGERBOX */ sub_48202( l_U470 ))
                {
                    if (l_U1024)
                    {
                        l_U994 = 0;
                         /* MOVE_PASSOS_TO_UPPER_LEVEL */ sub_48346();
                        SET_PED_COLLISION( g_U824, 1 );
                        CLEAR_PED_DEFAULT_AIM( g_U824 );
                        SET_PED_DEFAULT_AIM_AT_COORD( g_U824, -63.57000000, 67.67000000, 6.70000000 );
                         /* WRITESCRIPTLOG */ sub_6681( "RJM", "UPDATE_PASSOS_TWO_STAIR_HILL - moving to PAS_THIRD_COVER_ON_UPPER_FLOOR", 0 );
                        l_U298 = 2;
                    }
                }
            }
            break;
            case 1:
            if ((PED_GET_ACTION_INTENTION_STATUS( g_U824, 47 )) == 1)
            {
                if ( /* HAS_MAX_SHOT_NEAR_PASSOS */ sub_47215())
                {
                     /* P_DIAL_PAS_SHOT_AT */ sub_47389( g_U824 );
                     /* WRITESCRIPTLOG */ sub_6681( "RJM", "PAS_THIRD_COVER_ON_UPPER_FLOOR - Player shot near Passos", 0 );
                    PED_SET_ACTION_INTENTION( g_U824, 54, 1000, 0, 0, 0 );
                }
                if (NOT l_U934)
                {
                    if (( /* GET_NUM_PEDS_IN_TRIGGERBOX */ sub_48797( ref l_U692, l_U344 )) == 0)
                    {
                         /* WRITESCRIPTLOG */ sub_6681( "RJM", "Setting Passos idle at the base of the stairs", 0 );
                        PED_SET_ACTION_INTENTION( g_U824, 57, 1000, 0, 0, 0 );
                        CLEAR_PED_DEFAULT_AIM( g_U824 );
                        CLEAR_PED_PRIMARY_LOOKAT( g_U824 );
                        if ( /* IS_MAX_VALID */ sub_19308())
                        {
                            SET_PED_PRIMARY_LOOKAT( g_U824,  /* PLAYER_PED_ID */ sub_6453() );
                        }
                        l_U934 = 1;
                    }
                }
                if ((l_U868) || (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_46700( ref l_U692 )) == 0))
                {
                    if ( /* F_ISPLAYERINTRIGGERBOX */ sub_48202( l_U470 ))
                    {
                        l_U994 = 0;
                         /* MOVE_PASSOS_TO_UPPER_LEVEL */ sub_48346();
                        CLEAR_PED_DEFAULT_AIM( g_U824 );
                        SET_PED_DEFAULT_AIM_AT_COORD( g_U824, -63.57000000, 67.67000000, 6.70000000 );
                         /* WRITESCRIPTLOG */ sub_6681( "RJM", "UPDATE_PASSOS_TWO_STAIR_HILL - moving to PAS_THIRD_COVER_ON_UPPER_FLOOR", 0 );
                        l_U298 = 2;
                    }
                }
            }
            break;
            case 2:
            if ((PED_GET_ACTION_INTENTION_STATUS( g_U824, 48 )) == 1)
            {
                if (NOT l_U929)
                {
                    if ( /* F_ISPLAYERINTRIGGERBOX */ sub_48202( l_U365 ))
                    {
                         /* WRITESCRIPTLOG */ sub_6681( "RJM", "Play some sort of warning here for Passos", 0 );
                        l_U929 = 1;
                    }
                }
                if ( /* HAS_MAX_SHOT_NEAR_PASSOS */ sub_47215())
                {
                     /* P_DIAL_PAS_SHOT_AT */ sub_47389( g_U824 );
                     /* WRITESCRIPTLOG */ sub_6681( "RJM", "PAS_THIRD_COVER_ON_UPPER_FLOOR - Player shot near Passos", 0 );
                    PED_SET_ACTION_INTENTION( g_U824, 54, 1000, 0, 0, 0 );
                }
                if ( /* F_ISPLAYERINTRIGGERBOX */ sub_48202( l_U491 ))
                {
                    if (NOT ( /* HASTIMERBEENACTIVATED */ sub_25423( ref l_U1005 )))
                    {
                         /* WRITESCRIPTLOG */ sub_6681( "RJM", "Starting Passos death timer", 0 );
                         /* CREATETIMER */ sub_2846( ref l_U1005, 10000, 1, 0 );
                         /* STARTTIMER */ sub_22583( ref l_U1005 );
                    }
                    else if ( /* ISTIMERDONE */ sub_22780( ref l_U1005 ))
                    {
                         /* WRITESCRIPTLOG */ sub_6681( "RJM", "HANDLE EVENTS: Player abandoned Passos, going to TWOSTAIRS_MIDSCENE_03B", 0 );
                        l_U297 = 9;
                    }
                }
                else if ( /* HASTIMERBEENACTIVATED */ sub_25423( ref l_U1005 ))
                {
                     /* WRITESCRIPTLOG */ sub_6681( "RJM", "Player rejoined Passos, stop the timer", 0 );
                     /* DISABLETIMER */ sub_49754( ref l_U1005 );
                }
                if (l_U930)
                {
                     /* WRITESCRIPTLOG */ sub_6681( "RJM", "UPDATE_PASSOS_TWO_STAIR_HILL - moving to PAS_DONE", 0 );
                    l_U298 = 3;
                }
            }
            break;
            case 3: break;
        }
    }
    return;
}

/* UPDATE_PASSOS_MURDER_LOWER_LEVEL */ void sub_45878()
{
    switch (l_U994)
    {
        case 0:
         /* P_CREATE_AND_START_TIMER */ sub_45974( ref l_U995, 10000 );
         /* WRITESCRIPTLOG */ sub_6681( "RJM", "UPDATE_PASSOS_MURDER_LOWER_LEVEL - Moving to State 1", 0 );
        l_U994 = 1;
        break;
        case 1:
        if ( /* ISTIMERDONE */ sub_22780( ref l_U995 ))
        {
            if ( /* IS_PASSOS_VALID */ sub_18974())
            {
                l_U1004 =  /* GET_CLOSEST_PED_ARRAY_MEMBER_TO_PED */ sub_46148( ref l_U656, g_U824 );
                if ( /* IS_PED_VALID */ sub_6547( l_U1004 ))
                {
                    SET_PED_DEFAULT_AIM_AT_PED( g_U824, l_U1004 );
                }
                PED_SET_ACTION_INTENTION( g_U824, 58, 1000, 0, 0, 0 );
            }
             /* WRITESCRIPTLOG */ sub_6681( "RJM", "UPDATE_PASSOS_MURDER_LOWER_LEVEL - Lower Level dead, Moving to State 2", 0 );
            l_U994 = 2;
        }
        if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_46700( ref l_U656 )) == 0)
        {
             /* WRITESCRIPTLOG */ sub_6681( "RJM", "UPDATE_PASSOS_MURDER_LOWER_LEVEL - Lower Level dead, Moving to State 10", 0 );
            l_U994 = 10;
        }
        break;
        case 2:
        if (( /* IS_PASSOS_VALID */ sub_18974()) AND ( /* IS_PED_VALID */ sub_6547( l_U1004 )))
        {
            if (PED_ANIM_EVENT( g_U824, -1531652494 ))
            {
                 /* PED_KILL_HEADSOUP */ sub_46965( l_U1004 );
                CLEAR_PED_DEFAULT_AIM( g_U824 );
                SET_PED_DEFAULT_AIM_AT_COORD( g_U824, -84.73000000, 45.27000000, -1.09000000 );
                 /* WRITESCRIPTLOG */ sub_6681( "RJM", "UPDATE_PASSOS_MURDER_LOWER_LEVEL - Done, Moving to State 10", 0 );
                l_U994 = 10;
            }
        }
        break;
        case 10: break;
    }
    return;
}

/* P_CREATE_AND_START_TIMER */ void sub_45974(unknown uParam0, unknown uParam1)
{
     /* CREATETIMER */ sub_2846( uParam0, uParam1, 1, 0 );
     /* STARTTIMER */ sub_22583( uParam0 );
    return;
}

/* GET_CLOSEST_PED_ARRAY_MEMBER_TO_PED */ void sub_46148(unknown uParam0, unknown uParam1)
{
    int I;
    float fVar5;
    float fVar6;
    unknown Result;

    fVar6 = 1000.00000000;
    Result = nil;
     /* WRITESCRIPTLOG */ sub_6681( "RJM", "GET_CLOSEST_PED_ARRAY_MEMBER_TO_PED - start", 0 );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (( /* IS_PED_VALID */ sub_6547( uParam1 )) AND ( /* IS_PED_VALID */ sub_6547( (uParam0^)[I] )))
        {
            fVar5 = VDIST( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( (uParam0^)[I] ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 ) );
            if (fVar5 < fVar6)
            {
                fVar6 = fVar5;
                DISPLAYF( "GET_CLOSEST_PED_ARRAY_MEMBER_TO_PED:  Found a closer ped, array index {}, distance {}", 2, 513, I, 769, fVar5 );
                Result = (uParam0^)[I];
            }
        }
    }
     /* WRITESCRIPTLOG */ sub_6681( "RJM", "GET_CLOSEST_PED_ARRAY_MEMBER_TO_PED - end", 0 );
    return Result;
}

/* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ void sub_46700(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

/* PED_KILL_HEADSOUP */ void sub_46965(unknown uParam0)
{
    if ( /* IS_PED_VALID */ sub_6547( uParam0 ))
    {
        START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "Blood_headsoup_S_01", uParam0, 0.25000000, 0, 0, 0, 0, 0, 57704, 2 );
         /* P_KILL_PED */ sub_23808( uParam0 );
    }
    return;
}

/* HAS_MAX_SHOT_NEAR_PASSOS */ int sub_47215()
{
    int iVar2;

    if (((IS_PED_DEAD( g_U824 )) == 0) AND ((DOES_PED_EXIST( g_U824 )) == 1))
    {
        if (HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U824 ), 4.00000000, ref iVar2 ))
        {
            if (iVar2 == ( /* PLAYER_PED_ID */ sub_6453()))
            {
                return 1;
            }
        }
    }
    return 0;
}

/* P_DIAL_PAS_SHOT_AT */ void sub_47389(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6453() ))))
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_44296( ref l_U49 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_44410( 1, uParam0, "PASSOS", ref l_U49, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_44410( 0,  /* PLAYER_PED_ID */ sub_6453(), "MAX", ref l_U49, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_44655( "SCMT_LPPSH", ref l_U49, 8, 1 );
    }
    return;
}

/* MOVE_PASSOS_TO_STAIR_BOTTOM */ void sub_47685()
{
     /* WRITESCRIPTLOG */ sub_6681( "RJM", "MOVE_PASSOS_TO_STAIR_BOTTOM", 0 );
    if ( /* IS_PASSOS_VALID */ sub_18974())
    {
        SET_PED_COLLISION( g_U824, 1 );
        PED_SET_ACTION_INTENTION( g_U824, 47, 1000, 0, 0, 0 );
    }
    return;
}

/* DIAL_MONO_PAS_TO_STEPS */ void sub_47822()
{
     /* MLOG */ sub_31693( "DIAL_MONO_PAS_TO_STEPS", 0, 0 );
     /* P_DIAL_STANDARD_CONVO */ sub_47921( "SCMT_VIG06", ref l_U889, g_U824, "PASSOS", 1 );
    return;
}

/* P_DIAL_STANDARD_CONVO */ void sub_47921(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if ((NOT (IS_PED_DEAD( uParam2 ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6453() ))))
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_44296( uParam1 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_44410( 0,  /* PLAYER_PED_ID */ sub_6453(), "MAX", uParam1, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_44410( uParam4, uParam2, uParam3, uParam1, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_44655( uParam0, uParam1, 8, 1 );
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_48202(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_48245(  /* PLAYER_PED_ID */ sub_6453(), uParam0 );
}

/* F_ISPEDINTRIGGERBOX */ int sub_48245(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* MOVE_PASSOS_TO_UPPER_LEVEL */ void sub_48346()
{
     /* WRITESCRIPTLOG */ sub_6681( "RJM", "MOVE_PASSOS_TO_UPPER_LEVEL", 0 );
    if ( /* IS_PASSOS_VALID */ sub_18974())
    {
         /* TELEPORTPED */ sub_24554( g_U824, g_U1319, g_U1322 );
        PED_SET_ACTION_INTENTION( g_U824, 48, 1000, 0, 0, 0 );
    }
    return;
}

/* GET_NUM_PEDS_IN_TRIGGERBOX */ void sub_48797(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ( /* F_ISPEDINTRIGGERBOX */ sub_48245( (uParam0^)[I], uParam1 ))
        {
            Result++;
        }
    }
    return Result;
}

/* DISABLETIMER */ void sub_49754(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

/* UPDATE_GRENADE_LAUNCHER */ void sub_49897()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (NOT l_U1024)
    {
        if (NOT ( /* IS_PED_VALID */ sub_6547( l_U848 )))
        {
             /* DISABLETIMER */ sub_49754( ref l_U1025 );
             /* P_CREATE_AND_START_TIMER */ sub_45974( ref l_U1123, 500 );
            l_U301 = 5;
        }
        else if ( /* F_ISPLAYERINTRIGGERBOX */ sub_48202( l_U407 ))
        {
            uVar4 = GET_WEAPON_FROM_HAND( l_U848, 0, 0 );
            uVar5 = GET_WEAPON_FROM_HOLSTER( l_U848, 0 );
            if (( /* IS_MAX_VALID */ sub_19308()) AND ((GET_DOES_WEAPON_EXIST( uVar5 )) AND (GET_DOES_WEAPON_EXIST( uVar4 ))))
            {
                OPEN_SEQUENCE_TASK( ref uVar3 );
                TASK_DROP_WEAPON( 0, uVar4 );
                TASK_SELECT_WEAPON_TO_HAND( 0, uVar5, 0 );
                TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_6453() );
                CLOSE_SEQUENCE_TASK( uVar3 );
                TASK_PERFORM_SEQUENCE( l_U848, uVar3 );
                CLEAR_SEQUENCE_TASK( uVar3 );
            }
            else
            {
                SCRIPT_ASSERT( "Cannot get sidearm or primary weapon from grenade thrower!", 0 );
            }
             /* PED_SET_COMBAT_MOVEMENT */ sub_32226( ref l_U848, 2 );
             /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_31902( ref l_U848, 0 );
             /* P_TETHERPED */ sub_31483( ref l_U639, l_U848, 1 );
             /* P_TETHERPED */ sub_31483( ref l_U640, l_U848, 1 );
            l_U301 = 5;
        }
        if (IS_PED_RAGDOLL( l_U848, 0 ))
        {
            return;
        }
        DRAW_DEBUG_SPHERE( l_U1034, 0.50000000, 0, 0, 255, 255 );
        DRAW_DEBUG_SPHERE( l_U1037, 0.50000000, 255, 0, 0, 255 );
        switch (l_U301)
        {
            case 0:
             /* STARTTIMER */ sub_22583( ref l_U1025 );
             /* WRITESCRIPTLOG */ sub_6681( "RJM", "UPDATE_GRENADE_LAUNCHER - going to GRENADIER_FIRE_FIRST_GRENADE", " " );
            l_U301 = 1;
            break;
            case 1:
            if ( /* ISTIMERDONE */ sub_22780( ref l_U1025 ))
            {
                if ( /* IS_PED_VALID */ sub_6547( l_U848 ))
                {
                    if (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_50542( l_U1049 )))
                    {
                         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_44296( ref l_U1049 );
                         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_44410( 1, l_U848, "THUG_BOSS2", ref l_U1049, 2, 0 );
                         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_44410( 0,  /* PLAYER_PED_ID */ sub_6453(), "MAX", ref l_U1049, 2, 0 );
                         /* PLAY_SINGLE_SPEECH */ sub_44655( "SCMT_GRND", ref l_U1049, 8, 1 );
                    }
                    ADD_AMMO_TO_PED( l_U848, 930042831, 1, 0 );
                    CLEAR_PED_TASKS_IMMEDIATELY( l_U848 );
                    OPEN_SEQUENCE_TASK( ref uVar2 );
                    TASK_TURN_PED_TO_FACE_COORD( 0, l_U1034, 0, 1085905306 );
                    TASK_SHOOT_AT_COORD( 0, l_U1034, 3000, 1566631136, 1, 0 );
                    CLOSE_SEQUENCE_TASK( uVar2 );
                    TASK_PERFORM_SEQUENCE( l_U848, uVar2 );
                    CLEAR_SEQUENCE_TASK( uVar2 );
                     /* P_CREATE_AND_START_TIMER */ sub_45974( ref l_U1025, 5000 );
                     /* WRITESCRIPTLOG */ sub_6681( "RJM", "UPDATE_GRENADE_LAUNCHER - The very first shot fired, going to GRENADIER_MAX_IN_COVER_WAIT_FOR_FIRST_SHOT", 0 );
                    l_U301 = 2;
                }
            }
            break;
            case 2:
            if ( /* IS_MAX_VALID */ sub_19308())
            {
                if (NOT (IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_6453() )))
                {
                     /* WRITESCRIPTLOG */ sub_6681( "RJM", "UPDATE_GRENADE_LAUNCHER - Player ditched cover, going to GRENADIER_HANDLE_MAX_OUT_OF_COVER", 0 );
                    l_U301 = 4;
                }
            }
            if ( /* ISTIMERDONE */ sub_22780( ref l_U1025 ))
            {
                ADD_AMMO_TO_PED( l_U848, 930042831, 1, 0 );
                l_U1037 = { /* GENERATE_INACCURATE_WARNING_SHOT */ sub_51281()};
                CLEAR_PED_TASKS_IMMEDIATELY( l_U848 );
                OPEN_SEQUENCE_TASK( ref uVar2 );
                TASK_TURN_PED_TO_FACE_COORD( 0, l_U1037, 0, 1085905306 );
                TASK_SHOOT_AT_COORD( 0, l_U1037, 3000, 1566631136, 1, 0 );
                CLOSE_SEQUENCE_TASK( uVar2 );
                TASK_PERFORM_SEQUENCE( l_U848, uVar2 );
                CLEAR_SEQUENCE_TASK( uVar2 );
                SET_PED_PROJECTILE_OVERRIDE_PARAMETERS( l_U848, 0, -1082130432, -1082130432, 0, 0 );
                 /* P_CREATE_AND_START_TIMER */ sub_45974( ref l_U1025, 5000 );
                 /* WRITESCRIPTLOG */ sub_6681( "RJM", "UPDATE_GRENADE_LAUNCHER - First cover shot fired, going to GRENADIER_MAX_IN_COVER_WAIT_FOR_SECOND_SHOT", 0 );
                l_U301 = 3;
            }
            break;
            case 3:
            if ( /* IS_MAX_VALID */ sub_19308())
            {
                if (NOT (IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_6453() )))
                {
                     /* WRITESCRIPTLOG */ sub_6681( "RJM", "UPDATE_GRENADE_LAUNCHER - Player ditched cover, going to GRENADIER_HANDLE_MAX_OUT_OF_COVER", 0 );
                    l_U301 = 4;
                }
            }
            if ( /* ISTIMERDONE */ sub_22780( ref l_U1025 ))
            {
                l_U1037 = { /* GENERATE_SUPER_ACCURATE_COVER_DEATH_SHOT */ sub_52747()};
                ADD_AMMO_TO_PED( l_U848, 930042831, 1, 0 );
                CLEAR_PED_TASKS_IMMEDIATELY( l_U848 );
                OPEN_SEQUENCE_TASK( ref uVar2 );
                TASK_TURN_PED_TO_FACE_COORD( 0, l_U1037, 0, 1085905306 );
                TASK_SHOOT_AT_COORD( 0, l_U1037, 3000, 1566631136, 1, 0 );
                CLOSE_SEQUENCE_TASK( uVar2 );
                TASK_PERFORM_SEQUENCE( l_U848, uVar2 );
                CLEAR_SEQUENCE_TASK( uVar2 );
                SET_PED_PROJECTILE_OVERRIDE_PARAMETERS( l_U848, 0, -1082130432, -1082130432, 0, 0 );
                 /* P_CREATE_AND_START_TIMER */ sub_45974( ref l_U1025, 5000 );
            }
            break;
            case 4:
            if ( /* IS_MAX_VALID */ sub_19308())
            {
                if (IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_6453() ))
                {
                     /* WRITESCRIPTLOG */ sub_6681( "RJM", "UPDATE_GRENADE_LAUNCHER - Player jumped into cover, going to GRENADIER_MAX_IN_COVER_WAIT_FOR_FIRST_SHOT", 0 );
                    l_U301 = 2;
                }
            }
            if ( /* ISTIMERDONE */ sub_22780( ref l_U1025 ))
            {
                if ( /* IS_MAX_VALID */ sub_19308())
                {
                    l_U1037 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_6453() )};
                }
                TASK_SHOOT_AT_COORD( l_U848, l_U1037, 3000, 1566631136, 1, 0 );
                 /* P_CREATE_AND_START_TIMER */ sub_45974( ref l_U1025, 5000 );
            }
            break;
            case 5:
            l_U1024 = 1;
            break;
        }
    }
    return;
}

/* IS_SPEECH_CURRENTLY_PLAYING */ int sub_50542(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_50585( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

/* IS_SCRIPT_SPEECH_STRUCT_VALID */ boolean sub_50585(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

/* GENERATE_INACCURATE_WARNING_SHOT */ void sub_51281()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    vector vVar5;
    vector vVar8;
    vector vVar11;
    unknown uVar14;
    unknown uVar15;
    float fVar16;
    float fVar17;

    DISPLAYF( "-----------------------------GENERATE_INACCURATE_WARNING_SHOT - Start ------------------------------", 0 );
    if ( /* IS_MAX_VALID */ sub_19308())
    {
        vVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_6453() )};
    }
    DISPLAYF( "vPlayerPos = <<{}>>", 1, 1027, vVar5 );
    if ( /* IS_PED_VALID */ sub_6547( l_U848 ))
    {
        vVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U848 )};
    }
    DISPLAYF( "vEnemyPos = <<{}>>", 1, 1027, vVar8 );
    vVar11 = {vVar5 - vVar8};
    DISPLAYF( "vDirectionalVector (vPlayerPos - vEnemyPos) = <<{}>>", 1, 1027, vVar11 );
    uVar15 = VDIST2( vVar5, vVar8 );
    uVar15 = SQRT( uVar15 );
    DISPLAYF( "Distance between the two = {}", 1, 769, uVar15 );
    fVar16 = uVar15 - 7;
    DISPLAYF( "Distance minus grenade radius = {}", 1, 769, fVar16 );
    fVar17 = fVar16 / uVar15;
    DISPLAYF( "Distance scalar = {}", 1, 769, fVar17 );
    vVar11 = {vVar11 * fVar17};
    DISPLAYF( "vDirectionalVector * {} = <<{}>>", 2, 769, fVar17, 1027, vVar11 );
    Result = {vVar8 + vVar11};
    DISPLAYF( "vRetVal before ground snap = <<{}>>", 1, 1027, Result );
    if (GET_GROUND_Z_FOR_3D_COORD( Result, ref uVar14 ))
    {
        DISPLAYF( "GET_GROUND_Z_FOR_3D_COORD was able to find a valid ground intersection", 0 );
        Result._fU8 = uVar14;
    }
    else
    {
        DISPLAYF( "GET_GROUND_Z_FOR_3D_COORD was unable to find a valid ground intersection", 0 );
    }
    DISPLAYF( "vRetVal after ground snap = <<{}>>", 1, 1027, Result );
    DISPLAYF( "-----------------------------GENERATE_INACCURATE_WARNING_SHOT - End ------------------------------", 0 );
    return Result;
}

/* GENERATE_SUPER_ACCURATE_COVER_DEATH_SHOT */ void sub_52747()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    vector vVar5;
    vector vVar8;

    vVar8 = {1.00000000, 1.00000000, 0};
    DISPLAYF( "-----------------------------GENERATE_SUPER_ACCURATE_COVER_DEATH_SHOT - Start ------------------------------", 0 );
    if ( /* IS_MAX_VALID */ sub_19308())
    {
        vVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_6453() )};
    }
    DISPLAYF( "vPlayerPos = <<{}>>", 1, 1027, vVar5 );
    Result = {vVar5 + vVar8};
    DISPLAYF( "vRetVal = <<{}>>", 1, 1027, Result );
    DISPLAYF( "-----------------------------GENERATE_SUPER_ACCURATE_COVER_DEATH_SHOT - End ------------------------------", 0 );
    return Result;
}

/* UPDATE_PASSOS_VULNERABILITY */ void sub_53588()
{
    unknown uVar2;

    if (NOT l_U1132)
    {
        if ( /* HASTIMERBEENACTIVATED */ sub_25423( ref l_U1123 ))
        {
            if ( /* ISTIMERDONE */ sub_22780( ref l_U1123 ))
            {
                if ( /* IS_MAX_VALID */ sub_19308())
                {
                    uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_6453(), 0, 0 );
                    if (GET_DOES_WEAPON_EXIST( uVar2 ))
                    {
                        if ((GET_WEAPON_TYPE( uVar2 )) == 930042831)
                        {
                             /* WRITESCRIPTLOG */ sub_6681( "RJM", "UPDATE_PASSOS_VULNERABILITY - Max has the launcher, make Passos vulnerable", 0 );
                            SET_PED_PROOFS( g_U824, 0, 1, 0, 1, 1 );
                            l_U1132 = 1;
                        }
                    }
                }
                 /* P_CREATE_AND_START_TIMER */ sub_45974( ref l_U1123, 500 );
            }
        }
    }
    return;
}

/* P_HANDLE_IMAGEFX_CP03 */ void sub_53859()
{
    switch (l_U993)
    {
        case 0:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6453() )))
        {
            if (IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_6453() ))
            {
                if ( /* ISTIMERDONE */ sub_22780( ref l_U1349 ))
                {
                     /* WRITESCRIPTLOG */ sub_6681( "CO", "P_HANDLE_IMAGEFX_CP03:eImageFX_Cover", 0 );
                     /* P_INIT_IMAGEFX */ sub_54040( ref l_U938 );
                    l_U938[0]._fU4 = "DOUBLE_TINT_BLUE_FLASH_LONG";
                    l_U938[0]._fU12 = 0;
                    l_U938[0]._fU16 = 1000;
                    l_U938[0]._fU24 = 1;
                    l_U938[0]._fU8 = 4;
                    l_U938[0]._fU32 = 0;
                    l_U257 = 0;
                     /* RESETTIMER */ sub_25981( ref l_U1349 );
                     /* CREATETIMER */ sub_2846( ref l_U1349, 7000, 1, 0 );
                     /* STARTTIMER */ sub_22583( ref l_U1349 );
                }
            }
            else
            {
                 /* RESETTIMER */ sub_25981( ref l_U1349 );
                l_U993 = 1;
            }
        }
        break;
        case 1:
        if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_54376( ref l_U617,  /* PLAYER_PED_ID */ sub_6453(), 0 ))
        {
             /* WRITESCRIPTLOG */ sub_6681( "CO", "P_HANDLE_IMAGEFX_CP03:eImageFX_01", 0 );
             /* P_INIT_IMAGEFX */ sub_54040( ref l_U938 );
            l_U938[0]._fU4 = "DOUBLE_TINT_BLUE_FLASH_LONG";
            l_U938[0]._fU12 = 0;
            l_U938[0]._fU24 = 1;
            l_U938[0]._fU16 = 1000;
            l_U938[0]._fU8 = 4;
            l_U938[0]._fU32 = 0;
            l_U993 = 2;
            l_U257 = 0;
        }
        break;
        case 2:
        if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_54376( ref l_U596,  /* PLAYER_PED_ID */ sub_6453(), 0 ))
        {
             /* WRITESCRIPTLOG */ sub_6681( "CO", "P_HANDLE_IMAGEFX_CP03:eImageFX_02", 0 );
             /* P_INIT_IMAGEFX */ sub_54040( ref l_U938 );
            l_U938[0]._fU4 = "DOUBLE_TINT_BLUE_FLASH_LONG";
            l_U938[0]._fU12 = 0;
            l_U938[0]._fU16 = 1500;
            l_U938[0]._fU24 = 1;
            l_U938[0]._fU8 = 4;
            l_U938[0]._fU32 = 0;
            l_U938[1]._fU4 = "DOUBLE_TINT_BLUE_FLASH_LONG";
            l_U938[1]._fU12 = 500;
            l_U938[1]._fU16 = 1500;
            l_U938[1]._fU24 = 1;
            l_U938[1]._fU8 = 4;
            l_U938[1]._fU32 = 0;
            l_U993 = 3;
            l_U257 = 0;
        }
        break;
        case 3: break;
    }
     /* P_HANDLE_IMAGEFX */ sub_54979( ref l_U938 );
    return;
}

/* P_INIT_IMAGEFX */ void sub_54040(unknown uParam0)
{
    int I;

     /* WRITESCRIPTLOG */ sub_6681( "CO", "P_INIT_IMAGEFX", 0 );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU4 = "";
        (uParam0^)[I]._fU12 = 0;
        (uParam0^)[I]._fU16 = 0;
        (uParam0^)[I]._fU20 = 0;
        (uParam0^)[I]._fU24 = 0;
        (uParam0^)[I]._fU28 = 0;
        (uParam0^)[I]._fU32 = 1;
    }
    return;
}

/* F_ISPEDINTRIGGERBOXFIRSTTIME */ void sub_54376(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 =  /* F_ISPEDINTRIGGERBOX */ sub_48245( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

/* P_HANDLE_IMAGEFX */ void sub_54979(unknown uParam0)
{
    int I;
    int J;

    switch (l_U257)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_6681( "CO", "P_HANDLE_IMAGEFX", 0 );
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (uParam0^)[I]._fU32)
            {
                 /* CREATETIMER */ sub_2846( ref (uParam0^)[I]._fU36, (uParam0^)[I]._fU12, 1, 0 );
                 /* STARTTIMER */ sub_22583( ref (uParam0^)[I]._fU36 );
                if ((uParam0^)[I]._fU20 > 0)
                {
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        l_U257 = 1;
        break;
        case 1:
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if ( /* ISTIMERDONE */ sub_22780( ref (uParam0^)[I]._fU36 ))
            {
                (uParam0^)[I]._fU0 = PLAY_IMAGEFX( (uParam0^)[I]._fU4, (uParam0^)[I]._fU8, (uParam0^)[I]._fU28 );
                if ((uParam0^)[I]._fU16 > 0)
                {
                     /* CREATETIMER */ sub_2846( ref (uParam0^)[I]._fU72, (uParam0^)[I]._fU16, 1, 0 );
                     /* STARTTIMER */ sub_22583( ref (uParam0^)[I]._fU72 );
                }
                if ((uParam0^)[I]._fU20 > 0)
                {
                    for ( J = I + 1; J <= (I + (uParam0^)[I]._fU20); J++ )
                    {
                        PRINTSTRING( "******* [CO] ***** STARTING CHILD FOR index : " );
                        PRINTINT( J );
                        PRINTNL();
                        (uParam0^)[J]._fU0 = PLAY_IMAGEFX( (uParam0^)[J]._fU4, (uParam0^)[J]._fU8, (uParam0^)[I]._fU28 );
                        if ((uParam0^)[J]._fU16 > 0)
                        {
                             /* CREATETIMER */ sub_2846( ref (uParam0^)[J]._fU72, (uParam0^)[J]._fU16, 1, 0 );
                             /* STARTTIMER */ sub_22583( ref (uParam0^)[J]._fU72 );
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
            if ( /* ISTIMERDONE */ sub_22780( ref (uParam0^)[I]._fU72 ))
            {
                STOP_IMAGEFX( (uParam0^)[I]._fU0, (uParam0^)[I]._fU24 );
                (uParam0^)[I]._fU32 = 1;
                if ((uParam0^)[I]._fU20 > 0)
                {
                    if ((uParam0^)[I]._fU20 == 1)
                    {
                        STOP_IMAGEFX( (uParam0^)[I + 1]._fU0, (uParam0^)[I + 1]._fU24 );
                        (uParam0^)[I + 1]._fU32 = 1;
                    }
                    else
                    {
                        for ( J = I + 1; J <= (uParam0^)[I]._fU20; J++ )
                        {
                            STOP_IMAGEFX( (uParam0^)[J]._fU0, (uParam0^)[J]._fU24 );
                            (uParam0^)[J]._fU32 = 1;
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        break;
    }
    return;
}

/* TASK_UPPER_LEVEL */ void sub_55843()
{
     /* MLOG */ sub_31693( "TASK_UPPER_LEVEL", 0, 0 );
     /* P_ACTIVATEPEDARRAY */ sub_42004( ref l_U756 );
     /* PED_ARRAY_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_31819( ref l_U756, 0 );
     /* PED_ARRAY_SET_REGISTER_TARGET_PLAYER */ sub_55921( ref l_U756 );
     /* PED_ARRAY_SET_LOCKED_ON_PLAYER */ sub_56096( ref l_U756 );
     /* PED_ARRAY_SET_ALERTNESS */ sub_56190( ref l_U756, 3 );
     /* PED_TASK_ATTACK_MOVE */ sub_56372( l_U756[1], -64.58546000, 72.98227000, 4.96298700, 1092616192, 1101004800, -1082130432, 3 );
     /* PED_TASK_ATTACK_MOVE */ sub_56372( l_U756[3], -57.20338000, 65.31009000, 4.98995900, 1092616192, 1101004800, -1082130432, 3 );
    if ( /* IS_PED_VALID */ sub_6547( l_U756[0] ))
    {
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( l_U756[0], 0 );
        SET_PED_FLAG_LOCK_TO_COVER( l_U756[0], 0 );
    }
    if ( /* IS_PED_VALID */ sub_6547( l_U756[2] ))
    {
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( l_U756[2], 0 );
        SET_PED_FLAG_LOCK_TO_COVER( l_U756[2], 0 );
    }
    if ( /* IS_PED_VALID */ sub_6547( l_U756[4] ))
    {
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( l_U756[4], 0 );
        SET_PED_FLAG_LOCK_TO_COVER( l_U756[4], 0 );
    }
    if ( /* IS_PED_VALID */ sub_6547( l_U756[5] ))
    {
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( l_U756[5], 0 );
        SET_PED_FLAG_LOCK_TO_COVER( l_U756[5], 0 );
    }
    return;
}

/* PED_ARRAY_SET_REGISTER_TARGET_PLAYER */ void sub_55921(unknown uParam0)
{
     /* PED_ARRAY_SET_REGISTER_TARGET */ sub_55977( uParam0,  /* PLAYER_PED_ID */ sub_6453() );
    return;
}

/* PED_ARRAY_SET_REGISTER_TARGET */ void sub_55977(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ( /* IS_PED_VALID */ sub_6547( (uParam0^)[I] ))
        {
             /* PED_SET_REGISTER_TARGET */ sub_42605( ref (uParam0^)[I], uParam1 );
        }
    }
    return;
}

/* PED_ARRAY_SET_LOCKED_ON_PLAYER */ void sub_56096(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* PED_SET_LOCKED_ON_PLAYER */ sub_42694( ref (uParam0^)[I] );
    }
    return;
}

/* PED_ARRAY_SET_ALERTNESS */ void sub_56190(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* PED_SET_ALERTNESS */ sub_56250( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* PED_SET_ALERTNESS */ void sub_56250(unknown uParam0, unknown uParam1)
{
    if ( /* IS_PED_VALID */ sub_6547( (uParam0^) ))
    {
        SET_PED_ALERTNESS( (uParam0^), uParam1 );
    }
    return;
}

/* PED_TASK_ATTACK_MOVE */ void sub_56372(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    if ( /* IS_PED_VALID */ sub_6547( uParam0 ))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
        TASK_ATTACK_MOVE( uParam0, uParam1, uParam4, uParam5, uParam6, uParam7 );
    }
    return;
}

/* TASK_FIRST_MONUMENT_LEVEL */ void sub_56844()
{
     /* WRITESCRIPTLOG */ sub_6681( "RJM", "TASK_FIRST_MONUMENT_LEVEL", 0 );
    if ( /* IS_PED_VALID */ sub_6547( l_U692[0] ))
    {
         /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_31902( ref l_U692[0], 0 );
         /* PED_SET_VISIBILITY */ sub_32074( l_U692[0], 1 );
         /* PED_SET_COMBAT_MOVEMENT */ sub_32226( ref l_U692[0], 2 );
         /* PED_SET_LOCKED_ON_PLAYER */ sub_42694( ref l_U692[0] );
         /* PED_SET_REGISTER_TARGET_PLAYER */ sub_42536( ref l_U692[0] );
         /* PED_SET_TETHERBOX */ sub_31424( ref l_U692[0], l_U639, 1 );
         /* PED_TASK_ATTACK_MOVE */ sub_56372( l_U692[0], -87.04000000, 56.19000000, 2.66000000, 2, 1101004800, -1082130432, 3 );
    }
    if ( /* IS_PED_VALID */ sub_6547( l_U692[1] ))
    {
         /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_31902( ref l_U692[1], 0 );
         /* PED_SET_VISIBILITY */ sub_32074( l_U692[1], 1 );
         /* PED_SET_COMBAT_MOVEMENT */ sub_32226( ref l_U692[1], 2 );
         /* PED_SET_LOCKED_ON_PLAYER */ sub_42694( ref l_U692[1] );
         /* PED_SET_REGISTER_TARGET_PLAYER */ sub_42536( ref l_U692[1] );
         /* PED_SET_TETHERBOX */ sub_31424( ref l_U692[1], l_U640, 1 );
         /* PED_TASK_ATTACK_MOVE */ sub_56372( l_U692[1], -73.71000000, 42.29000000, 2.64000000, 2, 1101004800, -1082130432, 3 );
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_57230(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_48245(  /* PLAYER_PED_ID */ sub_6453(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* TASK_MONUMENT_LEVEL_FLANKING */ void sub_57365()
{
     /* WRITESCRIPTLOG */ sub_6681( "RJM", "TASK_MONUMENT_LEVEL_FLANKING", 0 );
     /* PED_TASK_ATTACK_MOVE */ sub_56372( l_U692[0], -90.95000000, 49.06000000, 0.19000000, 1092616192, 1101004800, -1082130432, 3 );
     /* PED_TASK_ATTACK_MOVE */ sub_56372( l_U692[1], -80.29000000, 38.64000000, 0.32000000, 1092616192, 1101004800, -1082130432, 3 );
    return;
}

/* ACTIVATE_UPPER_LEVEL_FRONT */ void sub_57604()
{
    if (NOT (IS_PED_DEAD( l_U756[0] )))
    {
         /* P_ACTIVATEPED */ sub_34452( l_U756[0] );
        TASK_COMBAT_SNAP_TO_COVER( l_U756[0], "GenCover", "9A916A3D_50B81CAB_Popover4", 0 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( l_U756[0], 1 );
        SET_PED_FLAG_LOCK_TO_COVER( l_U756[0], 1 );
    }
    if (NOT (IS_PED_DEAD( l_U756[2] )))
    {
         /* P_ACTIVATEPED */ sub_34452( l_U756[2] );
        TASK_COMBAT_SNAP_TO_COVER( l_U756[2], "GenCover", "9A916A3D_974C296_Popover4", 0 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( l_U756[2], 1 );
        SET_PED_FLAG_LOCK_TO_COVER( l_U756[2], 1 );
    }
    if (NOT (IS_PED_DEAD( l_U756[4] )))
    {
         /* P_ACTIVATEPED */ sub_34452( l_U756[4] );
        TASK_COMBAT_SNAP_TO_COVER( l_U756[4], "GenCover", "9A916A3D_47899D9C_Corner1", 0 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( l_U756[4], 1 );
        SET_PED_FLAG_LOCK_TO_COVER( l_U756[4], 1 );
    }
    if (NOT (IS_PED_DEAD( l_U756[5] )))
    {
         /* P_ACTIVATEPED */ sub_34452( l_U756[5] );
        TASK_COMBAT_SNAP_TO_COVER( l_U756[5], "GenCover", "9A916A3D_5116CF77_Corner1", 0 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( l_U756[5], 1 );
        SET_PED_FLAG_LOCK_TO_COVER( l_U756[5], 1 );
    }
    return;
}

/* TASK_SECOND_MONUMENT_LEVEL */ void sub_58136()
{
     /* WRITESCRIPTLOG */ sub_6681( "RJM", "TASK_SECOND_MONUMENT_LEVEL", 0 );
    if (NOT l_U936)
    {
        if ( /* IS_PED_VALID */ sub_6547( l_U692[2] ))
        {
             /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_31902( ref l_U692[2], 0 );
             /* PED_SET_VISIBILITY */ sub_32074( l_U692[2], 1 );
             /* PED_SET_COMBAT_MOVEMENT */ sub_32226( ref l_U692[2], 2 );
             /* PED_SET_LOCKED_ON_PLAYER */ sub_42694( ref l_U692[2] );
             /* PED_SET_REGISTER_TARGET_PLAYER */ sub_42536( ref l_U692[2] );
             /* PED_SET_TETHERBOX */ sub_31424( ref l_U692[2], l_U639, 1 );
             /* PED_TASK_ATTACK_MOVE */ sub_56372( l_U692[2], -85.88000000, 57.29000000, 2.67000000, 2, 1101004800, -1082130432, 3 );
        }
        if ( /* IS_PED_VALID */ sub_6547( l_U692[3] ))
        {
             /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_31902( ref l_U692[3], 0 );
             /* PED_SET_VISIBILITY */ sub_32074( l_U692[3], 1 );
             /* PED_SET_COMBAT_MOVEMENT */ sub_32226( ref l_U692[3], 2 );
             /* PED_SET_LOCKED_ON_PLAYER */ sub_42694( ref l_U692[3] );
             /* PED_SET_REGISTER_TARGET_PLAYER */ sub_42536( ref l_U692[3] );
             /* PED_SET_TETHERBOX */ sub_31424( ref l_U692[3], l_U640, 1 );
             /* PED_TASK_ATTACK_MOVE */ sub_56372( l_U692[3], -71.93000000, 44.11000000, 2.65000000, 2, 1101004800, -1082130432, 3 );
        }
        l_U936 = 1;
    }
    return;
}

/* HANDLE_WINTERSON_TOMBSTONE_POI */ void sub_58530()
{
    if ( /* F_HANDLE_POI */ sub_58577( ref l_U1169 ))
    {
        l_U1137 = 0;
    }
    if (NOT ( /* F_IS_POI_AVAILABLE */ sub_60399( ref l_U1169 )))
    {
        if (( /* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ sub_60455( ref l_U1169 )) == 1)
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_44296( ref l_U879 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_44410( 0,  /* PLAYER_PED_ID */ sub_6453(), "MAX", ref l_U879, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_44410( 1,  /* PLAYER_PED_ID */ sub_6453(), "MAX", ref l_U879, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_44655( "EXPLORE_ITEM", ref l_U879, 8, 1 );
        }
    }
    if ( /* HANDLE_WINTERSON_TOMBSTONE_CAM */ sub_60768())
    {
         /* P_ENABLE_POI */ sub_27136( ref l_U1169, 1 );
         /* WRITESCRIPTLOG */ sub_6681( "RJM", "P_HANDLE_VG_TOMBSTONE_POI: POI has been used", 0 );
    }
    return;
}

/* F_HANDLE_POI */ int sub_58577(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6453() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_6453() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_48245(  /* PLAYER_PED_ID */ sub_6453(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_48245(  /* PLAYER_PED_ID */ sub_6453(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_27594( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND (( /* F_ISACTIONINGAVAILABLE */ sub_27690( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (( /* F_HASACTIONBEENPRESSED */ sub_59474()) == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                             /* P_ENABLE_POI */ sub_27136( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                             /* P_ENABLEPOIGLINT */ sub_27195( iParam0, 0 );
                             /* P_ENABLEPOIINTERACTIONTEXT */ sub_27414( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                             /* P_ENABLEPOIGLINT */ sub_27195( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6453() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_6453(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                         /* P_ENABLEPOIGLINT */ sub_27195( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_ENABLEPOIINTERACTIONTEXT */ sub_27414( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6453() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED(  /* PLAYER_PED_ID */ sub_6453(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6453() )) == 0)
                    {
                        TASK_LOOK_AT_COORD(  /* PLAYER_PED_ID */ sub_6453(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6453() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_6453(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                     /* P_ENABLEPOIGLINT */ sub_27195( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                     /* P_ENABLEPOIINTERACTIONTEXT */ sub_27414( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6453() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_6453() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6453() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_6453(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                 /* P_ENABLEPOIINTERACTIONTEXT */ sub_27414( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

/* F_HASACTIONBEENPRESSED */ int sub_59474()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

/* F_IS_POI_AVAILABLE */ void sub_60399(int iParam0)
{
    return iParam0->_fU56;
}

/* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ int sub_60455(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND (( /* F_IS_POI_AVAILABLE */ sub_60399( iParam0 )) == 0)))
    {
        if ((( /* F_HASACTIONBEENPRESSED */ sub_59474()) == 1) AND (((IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_6453() )) == 0) AND (((IS_PED_GETTING_UP(  /* PLAYER_PED_ID */ sub_6453() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP(  /* PLAYER_PED_ID */ sub_6453() )) == 0) AND (((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_6453() )) == 0) AND (((IS_PED_DUCKING(  /* PLAYER_PED_ID */ sub_6453() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

/* HANDLE_WINTERSON_TOMBSTONE_CAM */ int sub_60768()
{
    int iVar2;

    switch (l_U1137)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_6681( "RJM", "HANDLE_WINTERSON_TOMBSTONE_CAM: assWinterson = ASS_SETUP", 0 );
         /* NIS_PRE_SETUP */ sub_19718( 1, 0, 0, 1 );
        l_U1137 = 3;
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_6681( "RJM", "HANDLE_WINTERSON_TOMBSTONE_CAM: eNewsClippings = ASS_WAITING_TO_PLAY", 0 );
        if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "scem_ValTomb" )))
        {
             /* KILL_ANY_MISSION_SPEECH */ sub_61058( 0 );
             /* P_DIAL_MONOLOGUE */ sub_61276( "SCMT_EXTMVWG", ref l_U869 );
            FOUND_EXPLORATION_ITEM( "scem_ValTomb" );
             /* WRITESCRIPTLOG */ sub_6681( "RJM", "HANDLE_WINTERSON_TOMBSTONE_CAM: Setting camera length to 6000", 0 );
            iVar2 = 18000;
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_6681( "RJM", "HANDLE_WINTERSON_TOMBSTONE_CAM: Setting camera length to 3000", 0 );
            iVar2 = 3000;
        }
         /* NIS_CREATE_STATIC_CAM */ sub_20481( ref l_U1138, -56.71460000, 63.74714000, 6.69278900, -18.61841000, 0.00000600, -110.27130000, 45, iVar2 );
         /* NIS_PLAY_STATIC_CAMERA */ sub_22964( ref l_U1138 );
        SHAKE_CAM( l_U1138._fU0, "HAND_SHAKE", 0.75000000 );
        if ( /* IS_MAX_VALID */ sub_19308())
        {
            CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_6453() );
             /* TELEPORTPED */ sub_24554(  /* PLAYER_PED_ID */ sub_6453(), -58.91132000, 64.23323000, 4.80885400, 244 );
            SET_PED_DEFAULT_AIM_AHEAD(  /* PLAYER_PED_ID */ sub_6453() );
        }
        l_U1137 = 4;
        break;
        case 4:
        if ( /* NIS_IS_SHOT_FINISHED */ sub_61692( ref l_U1138, 1 ))
        {
             /* WRITESCRIPTLOG */ sub_6681( "RJM", "HANDLE_WINTERSON_TOMBSTONE_CAM: Cam cut done, going to assWinterson = ASS_FINISHED", 0 );
            l_U1137 = 5;
        }
        break;
        case 5:
         /* NIS_RETURN_TO_GAMEPLAY_CAM */ sub_40135( 1000, 0, 0, 25.15485000, -12.38086000, 0 );
         /* NIS_POST_SETUP */ sub_40263( 1, 1 );
        if ( /* IS_MAX_VALID */ sub_19308())
        {
            CLEAR_PED_DEFAULT_AIM(  /* PLAYER_PED_ID */ sub_6453() );
        }
         /* WRITESCRIPTLOG */ sub_6681( "RJM", "HANDLE_WINTERSON_TOMBSTONE_CAM: going to assWinterson = ASS_INACTIVE", 0 );
        l_U1137 = -1;
        return 1;
        break;
    }
    return 0;
}

/* KILL_ANY_MISSION_SPEECH */ void sub_61058(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        PRINTSTRING( "\n KILL_ANY_MISSION_SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

/* P_DIAL_MONOLOGUE */ void sub_61276(unknown uParam0, unknown uParam1)
{
     /* P_DIAL_STANDARD_CONVO */ sub_47921( uParam0, uParam1,  /* PLAYER_PED_ID */ sub_6453(), "MAX", 1 );
    return;
}

/* NIS_IS_SHOT_FINISHED */ int sub_61692(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || ( /* ISTIMERDONE */ sub_22780( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || ( /* ISTIMERDONE */ sub_22780( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

/* TASK_MONUMENT_LEVEL_ENEMIES_TO_UPPER */ void sub_62251()
{
     /* WRITESCRIPTLOG */ sub_6681( "RJM", "TASK_MONUMENT_LEVEL_ENEMIES_TO_UPPER - start", 0 );
     /* PED_ARRAY_RESET_TETHER */ sub_62363( ref l_U692 );
     /* PED_ARRAY_RESET_TETHER */ sub_62363( ref l_U656 );
     /* P_REMOVEALLTETHERSFROMPED */ sub_62478( l_U848 );
     /* P_TETHERPED */ sub_31483( ref l_U642, l_U848, 1 );
     /* PED_ARRAY_SET_TETHERBOX */ sub_31362( ref l_U692, l_U642, 1 );
     /* PED_ARRAY_SET_TETHERBOX */ sub_31362( ref l_U656, l_U642, 1 );
     /* PED_TASK_ATTACK_MOVE */ sub_56372( l_U692[0], -74.83755000, 61.17129000, 4.36487000, 1092616192, 1101004800, -1082130432, 3 );
     /* PED_TASK_ATTACK_MOVE */ sub_56372( l_U692[1], -74.09698000, 58.80830000, 4.31131200, 1092616192, 1101004800, -1082130432, 3 );
     /* PED_TASK_ATTACK_MOVE */ sub_56372( l_U692[2], -69.95479000, 55.76794000, 4.37299400, 1092616192, 1101004800, -1082130432, 3 );
     /* PED_TASK_ATTACK_MOVE */ sub_56372( l_U692[3], -59.91311000, 53.60521000, 4.50348600, 1092616192, 1101004800, -1082130432, 3 );
     /* PED_TASK_ATTACK_MOVE */ sub_56372( l_U656[0], -69.28039000, 55.40787000, 4.39676200, 1092616192, 1101004800, -1082130432, 3 );
     /* PED_TASK_ATTACK_MOVE */ sub_56372( l_U656[1], -73.95513000, 57.59406000, 4.31778700, 1092616192, 1101004800, -1082130432, 3 );
     /* PED_TASK_ATTACK_MOVE */ sub_56372( l_U848, -70.67000000, 58.66000000, 4.82000000, 1092616192, 1101004800, -1082130432, 3 );
    l_U868 = 1;
    return;
}

/* PED_ARRAY_RESET_TETHER */ void sub_62363(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ( /* IS_PED_VALID */ sub_6547( (uParam0^)[I] ))
        {
            RESET_PED_TETHERING( (uParam0^)[I] );
        }
    }
    return;
}

/* P_REMOVEALLTETHERSFROMPED */ void sub_62478(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        RESET_PED_TETHERING( uParam0 );
    }
    return;
}

/* F_GET_NUM_PEDS_IN_TRIGGERBOX */ void sub_63311(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    int I;
    int Result;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (( /* F_ISPEDINTRIGGERBOX */ sub_48245( (uParam0^)[I], uParam1 )) == 1)
        {
            Result++;
        }
    }
    return Result;
}

/* P_CLOSEDOOR */ void sub_63439(int iParam0, int iParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_42920( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_43004( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

/* F_GETDOOROPENRATIO */ void sub_63661(int iParam0)
{
    int iVar3;
    float Result;

    if (( /* F_DOESDOOREXIST */ sub_42920( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_43004( iParam0 );
    }
    iVar3 = 0;
    Result = 0.00000000;
    GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar3, ref Result );
    return Result;
}

/* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ void sub_63903(unknown uParam0)
{
    int I;

    if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_46700( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

/* IS_EVERYONE_DEAD */ int sub_64290()
{
    int iVar2;

    iVar2 = (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_46700( ref l_U656 )) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_46700( ref l_U692 ))) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_46700( ref l_U756 ));
    if ( /* IS_PED_VALID */ sub_6547( l_U848 ))
    {
        iVar2++;
    }
    if (iVar2 == 0)
    {
        return 1;
    }
    return 0;
}

/* PLAY_MIDSCENE_UPPER_FLOOR_PASSOS_TRAVEL */ int sub_64564()
{
    switch (l_U1014)
    {
        case 0:
         /* NIS_PRE_SETUP */ sub_19718( 1, 0, 0, 1 );
        if ( /* IS_MAX_VALID */ sub_19308())
        {
            SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_6453(), 0 );
             /* TELEPORTPED */ sub_24554(  /* PLAYER_PED_ID */ sub_6453(), -58.74042000, 67.15484000, 4.99476200, 283.25500000 );
             /* P_SET_PED_TO_FACE_POINT */ sub_64728(  /* PLAYER_PED_ID */ sub_6453(), -58.20000000, 77.02000000, 6.52000000 );
            CAMERA_POINT_AT_COORD( -58.16000000, 76.98000000, 6.58000000, 0 );
        }
         /* P_CLOSEDOOR */ sub_63439( ref g_U1431, 1 );
         /* P_CLOSEDOOR */ sub_63439( ref g_U1438, 1 );
         /* P_SETDOORLOCKED */ sub_42890( ref g_U1431, 1 );
         /* P_SETDOORLOCKED */ sub_42890( ref g_U1438, 1 );
         /* MOVE_PASSOS_TO_END_GATE */ sub_64982();
         /* DIAL_PAS_MOVE_TO_UPPER */ sub_65114();
        CAMERA_PLAY_ANIMATED( "LEVEL_S_CEM_CP_03", "VIG_08_CEM_PAS_COVER_A_TO_B_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        l_U1014 = 1;
         /* WRITESCRIPTLOG */ sub_6681( "RJM", "PLAY_MIDSCENE_UPPER_FLOOR_PASSOS_TRAVEL - Going to State 1", 0 );
        break;
        case 1:
        if ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_CEM_CP_03", "VIG_08_CEM_PAS_COVER_A_TO_B_CAM" )) <= CAMERA_ANIMATED_CURRENT_TIME())
        {
            if (( /* IS_MAX_VALID */ sub_19308()) AND ( /* IS_PASSOS_VALID */ sub_18974()))
            {
                 /* TELEPORTPED */ sub_24554( g_U824, -60.82346000, 73.10188000, 5.17726000, 281.25000000 );
                PED_SET_ACTION_INTENTION( g_U824, 54, 0, 0, 0, 0 );
                CLEAR_PED_DEFAULT_AIM( g_U824 );
                CLEAR_PED_PRIMARY_LOOKAT( g_U824 );
                SET_PED_PRIMARY_LOOKAT( g_U824,  /* PLAYER_PED_ID */ sub_6453() );
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_6453() );
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_6453(), 1 );
                CAMERA_CLEAR_POINT_AT_TARGET();
            }
            CAMERA_ANIMATED_STOP( 0, 0 );
             /* NIS_POST_SETUP */ sub_40263( 1, 1 );
            return 1;
        }
        break;
    }
    return 0;
}

/* P_SET_PED_TO_FACE_POINT */ void sub_64728(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    vector vVar6;
    vector vVar9;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        vVar6 = {uParam1};
        vVar9 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        uVar12 = {vVar6 - vVar9};
        uVar15 = GET_HEADING_FROM_VECTOR_2D( uVar12._fU0, uVar12._fU4 );
        PRINTSTRING( "P_SET_PED_TO_FACE_POINT setting heading: " );
        PRINTFLOAT( uVar15 );
        PRINTNL();
        SET_PED_HEADING( uParam0, uVar15 );
    }
    return;
}

/* MOVE_PASSOS_TO_END_GATE */ void sub_64982()
{
     /* MLOG */ sub_31693( "MOVE_PASSOS_TO_END_GATE", 0, 0 );
    if ( /* IS_PASSOS_VALID */ sub_18974())
    {
         /* TELEPORTPED */ sub_24554( g_U824, g_U1323, g_U1326 );
        PED_SET_ACTION_INTENTION( g_U824, 49, 1000, 0, 0, 0 );
    }
    return;
}

/* DIAL_PAS_MOVE_TO_UPPER */ void sub_65114()
{
     /* MLOG */ sub_31693( "DIAL_PAS_MOVE_TO_UPPER", 0, 0 );
     /* P_DIAL_STANDARD_CONVO */ sub_47921( "SCMT_VIG08A", ref l_U899, g_U824, "PASSOS", 1 );
    return;
}

/* TAKE_PAINKILLER_ARRAY_SNAPSHOT */ void sub_65667(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (DOES_PLACEMENT_EXIST( (uParam0^)[I] ))
        {
             /* WRITESCRIPTLOG */ sub_6681( "RJM", "DO_ANY_PAINKILLERS_STILL_EXIST - Found a pill in there, we can still play some V.O.", 0 );
            (uParam1^)[I] = 1;
        }
        else
        {
            (uParam1^)[I] = 0;
        }
    }
    return;
}

/* UPDATE_2STAIR_PILL_VO */ void sub_66001()
{
    int I;

    for ( I = 0; I <= (l_U862 - 1); I++ )
    {
        if (l_U865[I])
        {
            if ((HAS_PLACEMENT_BEEN_COLLECTED( l_U862[I] )) || (NOT (DOES_PLACEMENT_EXIST( l_U862[I] ))))
            {
                l_U865[I] = 0;
                 /* P_DIAL_MAX_PILL_2STAIR_VO */ sub_66116();
            }
        }
    }
    return;
}

/* P_DIAL_MAX_PILL_2STAIR_VO */ void sub_66116()
{
     /* WRITESCRIPTLOG */ sub_6681( "RJM", "P_DIAL_MAX_PILL_2STAIR_VO", 0 );
    if ((NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_66200())) AND (NOT l_U1133))
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_44296( ref g_U1239 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_44410( 0,  /* PLAYER_PED_ID */ sub_6453(), "MAX", ref g_U1239, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_44410( 1,  /* PLAYER_PED_ID */ sub_6453(), "MAX", ref g_U1239, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_44655( "SCMT_MFSFKNPL", ref g_U1239, 8, 1 );
        l_U1133 = 1;
    }
    return;
}

/* IS_ANY_SPEECH_CURRENTLY_PLAYING */ void sub_66200()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

/* DIAL_PAS_NICE_WORK */ void sub_66505()
{
     /* MLOG */ sub_31693( "DIAL_PAS_NICE_WORK", 0, 0 );
     /* P_DIAL_STANDARD_CONVO */ sub_47921( "SCMT_VIG083", ref l_U909, g_U824, "PASSOS", 1 );
    return;
}

/* UPDATE_FORCEWALK_AND_TRIGGER_PAIR */ int sub_66720(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, boolean bParam42)
{
    if ( /* IS_MAX_VALID */ sub_19308())
    {
        if ((NOT (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_6453() ))) AND ( /* F_ISPLAYERINTRIGGERBOX */ sub_48202( uParam0 )))
        {
             /* WRITESCRIPTLOG */ sub_6681( "RJM", "UPDATE_FORCEWALK_AND_TRIGGER_PAIR - Force walk enabled", 0 );
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_6453(), 1 );
        }
        else if ((GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_6453() )) AND (NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_48202( uParam0 ))))
        {
             /* WRITESCRIPTLOG */ sub_6681( "RJM", "UPDATE_FORCEWALK_AND_TRIGGER_PAIR - Force walk disabled", 0 );
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_6453(), 0 );
        }
    }
    if ( /* F_ISPLAYERINTRIGGERBOX */ sub_48202( uParam21 ))
    {
        if (bParam42)
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_6453(), 0 );
        }
        return 1;
    }
    return 0;
}

/* KILL_SPEECH */ void sub_67085(int iParam0, unknown uParam1)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_50585( (iParam0^) )))
    {
        ;
    }
    else
    {
        PRINTSTRING( "\n KILL SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
        {
            if (iParam0->_fU8 == g_U6[iParam0->_fU4])
            {
                STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
            }
        }
    }
    return;
}

/* HANDLE_PASSOS_HURRY_UP */ void sub_67323()
{
    if (l_U1015._fU20 == 0)
    {
         /* P_CREATE_AND_START_TIMER */ sub_45974( ref l_U1015, GET_RANDOM_INT_IN_RANGE( 14000, 22000 ) );
    }
    else if ( /* ISTIMERDONE */ sub_22780( ref l_U1015 ))
    {
         /* MLOG */ sub_31693( "HANDLE_PASSOS_HURRY_UP", 0, 0 );
         /* P_DIAL_STANDARD_CONVO */ sub_47921( "SCMT_VIG082", ref l_U919, g_U824, "PASSOS", 1 );
         /* P_CREATE_AND_START_TIMER */ sub_45974( ref l_U1015, GET_RANDOM_INT_IN_RANGE( 24000, 32000 ) );
    }
    return;
}

/* P_UNLOAD_WEAPONS */ void sub_67705(unknown uParam0)
{
    switch (uParam0)
    {
        case 0:
        case 1: break;
        case 2: break;
        case 3: break;
        case 4:
        case 5: break;
        case 6: break;
        case 7:
         /* UNLOADWEAPON */ sub_67861( 1224272620 );
        break;
        case 8: break;
        case 9:
         /* LOADWEAPON */ sub_5773( 434544317, 1 );
         /* LOADWEAPON */ sub_5773( -691403429, 1 );
        break;
        case 10:
         /* UNLOADWEAPON */ sub_67861( -184942895 );
        break;
    }
    return;
}

/* UNLOADWEAPON */ void sub_67861(unknown uParam0)
{
    SET_WEAPON_AS_NO_LONGER_NEEDED( uParam0 );
    return;
}

/* P_UNLOAD_2_STAIRS_ASSETS */ void sub_67963()
{
     /* WRITE_STRING */ sub_530( "[SP]### P_UNLOAD_2_STAIRS_ASSETS ###" );
     /* UNLOADWEAPON */ sub_67861( 930042831 );
     /* UNLOADMODEL */ sub_39923( g_U1363 );
     /* UNLOADMODEL */ sub_39923( g_U1336 );
     /* UNLOADMODEL */ sub_39923( g_U1337 );
     /* UNLOADMODEL */ sub_39923( g_U757 );
    return;
}


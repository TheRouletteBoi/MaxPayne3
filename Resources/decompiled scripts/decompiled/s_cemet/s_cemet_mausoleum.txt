void main()
{
    l_U0 = 0;
    l_U1 = 1;
    l_U2 = 0;
    l_U3 = 1.00000000;
    l_U4 = -5.00000000;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U11 = 42;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 90.00000000;
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = nil;
    l_U31 = {0.00000000, 0.00000000, 0.00000000};
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U37 = 1;
    l_U38 = 144;
    l_U39 = -1;
    l_U40 = {64536, 64536, 64536};
    l_U43 = "PED_DEF";
    l_U85 = 1.00000000;
    l_U97 = 0;
    l_U138 = 0;
    l_U179 = 0;
    l_U180 = 0;
    l_U181 = 1500;
    l_U191 = 1;
    l_U192 = 0;
    l_U193 = 1;
    l_U194 = 0;
    l_U195 = "MID_05b_CEM_concat";
    l_U196 = "B_OUT_MID_05B_CEM_PISTOL_MAX_CAM";
    l_U197 = "LEVEL_S_CEM_CP_07";
    l_U258 = 0;
    l_U259 = 0;
    l_U260 = 0;
    l_U265 = {74.03244000, -24.25470000, 13.40380000};
    l_U268 = {75.86367000, -24.07293000, 13.40470000};
    l_U271 = {77.11188000, -24.07834000, 13.40467000};
    l_U274 = 0;
    l_U533 = 1500;
    l_U563 = 750;
    l_U564 = {59.64539000, -41.37035000, 11.99505000};
    l_U567 = {93.05108000, -45.73995000, 10.41126000};
    l_U570 = 0;
    l_U571 = 0;
    l_U635 = 6000;
    l_U636 = 6000;
    l_U637 = 750;
    l_U638 = 1000;
    l_U652 = 0;
    l_U653 = 0;
    l_U654 = 0;
    l_U655 = 0;
    l_U656 = 0;
    l_U657 = 0;
    l_U658 = 1;
    l_U659 = 0;
    l_U660 = nil;
    l_U661 = 0;
    l_U866 = 0;
    l_U867 = 0;
    l_U868 = 0;
    l_U869 = 0;
    l_U870 = 4;
    l_U1032 = 500;
    l_U1033 = 800;
    l_U1034 = 0;
    l_U1035 = 0;
    l_U1036 = 0;
    l_U1037 = 0;
    l_U1038 = 0;
     /* WRITE_STRING */ sub_781( "[GA] s_cemet_mausoleum script started." );
    while (NOT IS_EXITFLAG_SET())
    {
        if (g_U1777)
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        }
        if (g_U826 == 7)
        {
             /* P_HANDLE_MUSIC */ sub_879();
        }
         /* P_HANDLE_CHECKPOINTS */ sub_1703();
         /* P_HANDLE_GAMEPLAY_EVENTS */ sub_17766();
         /* P_HANDLE_DEBUG_WIDGETS */ sub_47489();
        WAIT( 0 );
    }
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
     /* P_CLEANUP_ALL */ sub_4783();
     /* P_UNLOAD_ASSETS_MAUSOLEUM */ sub_47982();
     /* P_UNLOAD_WEAPONS */ sub_48323( 7 );
     /* WRITE_STRING */ sub_781( "[GA] s_cemet_mausoleum script ended." );
    RESET_PED_MODEL_LOD_DISTANCES( g_U1346 );
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_cemet_mausoleum" );
    SET_EXITFLAG_RESPONSE();
    return;
}

/* WRITE_STRING */ void sub_781(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_HANDLE_MUSIC */ void sub_879()
{
    if (l_U193 != l_U191)
    {
         /* WRITESCRIPTLOG */ sub_962( "TEH", "playing music:changed CUR FLAG", 0 );
         /* WRITE_INT */ sub_1085( l_U191 );
         /* WRITE_INT */ sub_1085( l_U192 );
        l_U193 = l_U191;
    }
    else if (l_U194 != l_U192)
    {
         /* WRITESCRIPTLOG */ sub_962( "TEH", "playing music:changed NEW FLAG", 0 );
         /* WRITE_INT */ sub_1085( l_U191 );
         /* WRITE_INT */ sub_1085( l_U192 );
        l_U194 = l_U192;
    }
    switch (l_U191)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_962( "TEH", "playing music: CEMETERY_SONG_01 CEMETERY_SONG_03_6 ", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_6", "", 0, 8000, 5000, -1082130432, 0 );
        l_U191 = 3;
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_962( "TEH", "playing music: CEMETERY_SONG_03 CEMETERY_SONG_03_6 ", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_6", "", 0, 8000, 5000, -1082130432, 0 );
        l_U191 = 3;
        break;
        case 3:
        if (l_U192 == 3)
        {
            AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_2_6", "", 0, 8000, 5000, -1082130432, 0 );
            l_U191 = 4;
        }
        break;
        case 4:
        if (l_U192 == 4)
        {
            AUDIO_MUSIC_SUSPEND( 6000 );
            l_U191 = 5;
        }
        break;
    }
    return;
}

/* WRITESCRIPTLOG */ void sub_962(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* WRITE_INT */ void sub_1085(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* P_HANDLE_CHECKPOINTS */ void sub_1703()
{
    if ((l_U866 <= 8) AND (g_U826 == 7))
    {
        if (l_U871 == 0)
        {
            if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1768() )) == 1)
            {
                 /* WRITESCRIPTLOG */ sub_962( "SBA", "P_HANDLE_CHECKPOINTS: player is dead, setting eFailure = STATE_FAIL_WAITING", "***" );
                l_U871 = 2;
            }
            else if ( /* RESTARTING_CHECKPOINT */ sub_1982())
            {
                 /* WRITESCRIPTLOG */ sub_962( "SBA", "HANDLE_CHECKPOINTS - Restart, setting eFailure = STATE_FAIL_WAITING", 0 );
                l_U871 = 2;
            }
            else if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (IS_PED_DEAD( g_U824 )))
            {
                SET_PED_GORE( g_U824, 1 );
                SET_PED_GORE_FROM_PLAYER( g_U824, 1 );
                SET_PED_GORE_FROM_NPC( g_U824, 0 );
                 /* WRITESCRIPTLOG */ sub_962( "SBA", "P_HANDLE_CHECKPOINTS: Passos killed, setting eFailure = STATE_FAIL_DEATH_CAM_PASSOS", "***" );
                l_U871 = 1;
            };;;
        }
         /* P_HANDLE_FAILURE */ sub_2707();
    }
    return;
}

/* PLAYER_PED_ID */ int sub_1768()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_1806() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_1806()
{
    return GET_PLAYER_ID();
}

/* RESTARTING_CHECKPOINT */ int sub_1982()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U37 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1768() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1768(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1806(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1806(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1768() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1768(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* P_HANDLE_FAILURE */ void sub_2707()
{
    switch (l_U871)
    {
        case 0: break;
        case 1:
        if ( /* IS_MAX_VALID */ sub_2809())
        {
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1768(), 1 );
        }
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
        l_U871 = 2;
         /* WRITESCRIPTLOG */ sub_962( "CCB", "eFailure - STATE_FAIL_WAITING", 0 );
        break;
        case 2:
        if ( /* IS_RESTART_ACTIVE */ sub_3002())
        {
            l_U871 = 3;
        }
        else if (( /* F_CHECK_QUIT_RETRY */ sub_3062( 0 )) == 1)
        {
            l_U871 = 3;
        }
        break;
        case 3:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1768() )))
        {
             /* WRITESCRIPTLOG */ sub_962( "CCB", "Deactivating bullettime...", 0 );
            DO_SCREEN_FADE_OUT( 0 );
            DEACTIVATE_BULLET_TIME( 1, 0 );
            END_POSTFX_BLENDER( 3, 0 );
            l_U871 = 4;
             /* WRITESCRIPTLOG */ sub_962( "CCB", "eFailure - STATE_FAIL_CLEANUP", 0 );
        }
        break;
        case 4:
        if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1806() )))
        {
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1768() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1806(), 0, 0 );
            }
        }
        DO_SCREEN_FADE_OUT( 0 );
        DESTROY_ALL_CAMS();
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        AUDIO_MUSIC_SUSPEND( 500 );
         /* WRITESCRIPTLOG */ sub_962( "CCB", "Destroying Passos...", 0 );
         /* P_CLEANUP_ALL */ sub_4783();
        l_U871 = 5;
         /* WRITESCRIPTLOG */ sub_962( "CCB", "eFailure - STATE_FAIL_RESTORE", 0 );
        break;
        case 5:
        if (NOT IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED())
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        }
        l_U871 = 6;
         /* WRITESCRIPTLOG */ sub_962( "CCB", "eFailure - STATE_FAIL_RESTART", 0 );
        break;
        case 6:
        if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
        {
             /* WRITESCRIPTLOG */ sub_962( "CCB", "eFailure - STATE_FAIL_IDLE", 0 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_5839( ref l_U830, g_U1178 );
            l_U866 = 3;
             /* P_LOAD_ASSETS_MAUSOLEUM */ sub_10302( 1 );
             /* P_CEMET_COMMON_SETUP */ sub_11432();
             /* SETUP_WEATHER_TIMEOFDAY */ sub_16549( 7 );
             /* P_SNIP_SETUP_PASSOS */ sub_16997();
            if ( /* IS_MAX_VALID */ sub_2809())
            {
                SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1768(), 0 );
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1806(), 1, 0 );
            }
            l_U191 = 2;
            l_U871 = 0;
             /* WRITESCRIPTLOG */ sub_962( "CCB", "eCheckpoint - STATE_CHECKPOINT_INIT", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_962( "CCB", "Waiting for stream requests...", 0 );
        }
        break;
    }
    return;
}

/* IS_MAX_VALID */ int sub_2809()
{
    if ( /* IS_PED_VALID */ sub_2839(  /* PLAYER_PED_ID */ sub_1768() ))
    {
        return 1;
    }
    return 0;
}

/* IS_PED_VALID */ int sub_2839(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (DOES_PED_EXIST( uParam0 )))
    {
        return 1;
    }
    return 0;
}

/* IS_RESTART_ACTIVE */ void sub_3002()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_3062(int iParam0)
{
    iParam0 = 1;
    switch (l_U180)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_3144( ref l_U182 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1768() )))
            {
                l_U181 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_3278( ref l_U182, l_U181, 1, 1 );
             /* STARTTIMER */ sub_3428( ref l_U182 );
        }
        if ( /* ISTIMERDONE */ sub_3561( ref l_U182 ))
        {
             /* WRITESCRIPTLOG */ sub_962( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1768() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1806() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1806(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U180 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U180 = 2;
            }
            else
            {
                l_U180 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_962( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_4062();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_962( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_4062();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_3144(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* CREATETIMER */ void sub_3278(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_3428(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* ISTIMERDONE */ int sub_3561(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_4062()
{
     /* WRITESCRIPTLOG */ sub_962( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_4137( ref l_U182 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1806() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1806(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U179 = 0;
    l_U179 = l_U179;
    l_U180 = 0;
    return;
}

/* RESETTIMER */ void sub_4137(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_CLEANUP_ALL */ void sub_4783()
{
    int I;

     /* WRITE_STRING */ sub_781( "MF]] s_cemet_mausoleum - START: P_CLEANUP_ALL" );
     /* WRITE_STRING */ sub_781( "CLEANING EDISON..." );
    ISEQ_UNREGISTER_ENTITY( 1571095687, "passos" );
     /* TERMINATEISEQ */ sub_4915( 1571095687, 0 );
    ISEQ_UNREGISTER_ENTITY( -1769846479, "vig_18_snip" );
     /* TERMINATEISEQ */ sub_4915( -1769846479, 0 );
    ISEQ_UNREGISTER_ENTITY( 856401726, "max" );
     /* TERMINATEISEQ */ sub_4915( 856401726, 0 );
     /* WRITE_STRING */ sub_781( "Cleaning Sniper..." );
     /* CLEANPED */ sub_5313( l_U534 );
     /* CLEANPED */ sub_5313( l_U549 );
     /* CLEANOBJECT */ sub_5413( l_U436 );
    for ( I = 0; I < 3; I++ )
    {
         /* CLEANPED */ sub_5313( l_U300[I] );
    }
    I = 0;
    for ( I = 0; I < 3; I++ )
    {
         /* CLEANPED */ sub_5313( l_U350[I] );
    }
    I = 0;
    for ( I = 0; I < 2; I++ )
    {
         /* CLEANPED */ sub_5313( l_U400[I] );
    }
     /* WRITE_STRING */ sub_781( "MF]] s_cemet_mausoleum - END: P_CLEANUP_ALL" );
    return;
}

/* TERMINATEISEQ */ void sub_4915(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            DISPLAYF( "[SP]### Waiting for interactive sequence to terminate: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* CLEANPED */ void sub_5313(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CLEANOBJECT */ void sub_5413(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_5839(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_962( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U37)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_6060( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_7224( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_7538( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_7973( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_7538( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_7973( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_7538( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_7973( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_8289( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_7973( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_8289( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_7973( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U37 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_8863( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_9065( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1768(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U37)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U37 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_962( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_6060(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_6122( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_6122(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_7224(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_7538(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_781( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_7973(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_8289(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_781( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_8863(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_9065(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_6122( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_9163( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_9163(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_LOAD_ASSETS_MAUSOLEUM */ void sub_10302(unknown uParam0)
{
     /* WRITE_STRING */ sub_781( "[GA] P_LOAD_ASSETS_MAUSOLEUM start" );
     /* LOADMODEL */ sub_10387( g_U1345, uParam0 );
     /* LOADMODEL */ sub_10387( g_U1343, uParam0 );
     /* LOADMODEL */ sub_10387( g_U1365, uParam0 );
     /* LOADMODEL */ sub_10387( g_U1332, uParam0 );
     /* LOADMODEL */ sub_10387( g_U1344, uParam0 );
     /* LOADISEQ */ sub_10687( 1571095687, uParam0 );
     /* LOADISEQ */ sub_10687( -1769846479, uParam0 );
     /* LOADISEQ */ sub_10687( 856401726, uParam0 );
     /* LOADANIMDICT */ sub_11020( "FACE_PASNYB", 0, uParam0 );
     /* LOADACTIONTREE */ sub_11230( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act", uParam0 );
     /* WRITE_STRING */ sub_781( "[GA] P_LOAD_ASSETS_MAUSOLEUM end" );
    return;
}

/* LOADMODEL */ void sub_10387(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_781( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADISEQ */ void sub_10687(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                DISPLAYF( "[SP]### Waiting for interactive sequence to be loaded: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* LOADANIMDICT */ void sub_11020(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an animation dictionary to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADACTIONTREE */ void sub_11230(unknown uParam0, int iParam1)
{
    ACTION_TREE_LOAD( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_ACTION_TREE_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an Action Tree to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_CEMET_COMMON_SETUP */ void sub_11432()
{
     /* P_SET_STATIC_GAMEPLAY_DATA */ sub_11465();
     /* P_INITIALIZE_SCRIPT_DATA */ sub_14001();
    SET_PED_MODEL_LOD_DISTANCES( g_U1346, 25.00000000, 60.00000000 );
     /* P_SETUP_GAMEPLAY */ sub_14529();
    return;
}

/* P_SET_STATIC_GAMEPLAY_DATA */ void sub_11465()
{
     /* WRITE_STRING */ sub_781( "MF]] s_cemet_mausoleum - START: P_SET_STATIC_GAMEPLAY_DATA" );
     /* P_CREATETRIGGERBOX */ sub_11637( ref l_U279, "TRIG_DUMMY_PASSOS", 1000, 1000, 1000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11637( ref l_U438, "TRIG_SNIP_START_SNIPER", 69.99000000, 23.55000000, 5.29000000, 17.39000000, 2.76000000, 3.00000000, 0.00000000, 0.00000000, 48.50000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11637( ref l_U788, "TRIG_INSIDE_MAUS", 75.55647000, -30.00000000, 12.00000000, 8.00000000, 8.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_11972( ref l_U437, "TETH_MAUS_REINFORCEMENTS", 75.21795000, -11.50000000, 5.93611000, 45.00000000, 40.00000000, 15.15000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_12081( ref l_U639, g_U779[7]._fU0, g_U779[7]._fU12, 1265654828, 26, 6, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_12081( ref l_U304[0], 73.74314000, -32.18577000, 14.78373000, 64.00000000, 54173644, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_12081( ref l_U304[1], 75.62276000, -32.38958000, 14.78373000, 36.00000000, -1239286651, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_12081( ref l_U304[2], 77.08444000, -31.56110000, 14.78373000, 64.00000000, -1255945465, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_12081( ref l_U354[0], 73.74314000, -32.18577000, 14.78373000, 64.00000000, -525205231, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_12081( ref l_U354[1], 75.62276000, -32.38958000, 14.78373000, 64.00000000, 315805814, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_12081( ref l_U354[2], 77.08444000, -31.56110000, 14.78373000, 64.00000000, -1255945465, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_12081( ref l_U403[0], 73.74314000, -32.18577000, 14.78373000, 64.00000000, -525205231, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_12081( ref l_U403[1], 75.62276000, -32.38958000, 14.78373000, 64.00000000, 315805814, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_12081( ref l_U535, g_U1327, 0.00000000, 1317602165, 7, 3, 2, 0, 0 );
     /* P_CREATETRIGGERBOX */ sub_11637( ref l_U809, "TRIG_STAIRS_TRIGGER_CUT", 75.42070000, -18.50000000, 9.19462500, 4.00000000, 2.00000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11637( ref l_U725, "TRIG_SNIPER_IS_BLIND", 75.49915000, -20.36987000, 9.00000000, 50.00000000, 15.00000000, 20.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11637( ref l_U767, "TRIG_MAUS_LEFT_POCKET", 93.01730000, -20.36987000, 0.00000000, 45.00000000, 15.00000000, 15.00000000, 0.00000000, 0.00000000, 50.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11637( ref l_U746, "TRIG_MAUS_RIGHT_POCKET", 58.69214000, -20.36987000, 0.00000000, 45.00000000, 15.00000000, 15.00000000, 0.00000000, 0.00000000, -50.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11637( ref l_U662, "TRIG_FIRST_REINF", 75.21795000, -7.00000000, 5.93611000, 45.00000000, 30.00000000, 15.15000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11637( ref l_U683, "TRIG_SECOND_REINF", 75.21795000, -9.00000000, 5.00000000, 55.00000000, 10.00000000, 15.15000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11637( ref l_U704, "TRIG_THIRD_REINF", 75.21795000, -14.00000000, 5.00000000, 55.00000000, 10.00000000, 15.15000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATEPEDSTRUCT */ sub_13164( ref l_U550, 0, 0, 0, 0.00000000, 1409225310, 26, 6, 0, 0, 0 );
    l_U459[0] = {75.73000000, -28.07000000, 14.47000000};
    l_U459[1] = {79.15015000, 2.25600900, 7.06740200};
    l_U459[3] = {0.00000000, 0.00000000, 0.00000000};
    l_U472[0] = {91.84882000, -4.64446800, 6.91547200};
    l_U485[0] = 90.00418000;
    l_U490[0] = 67.65453000;
    l_U495[0] = 4.90459400;
    l_U500[0] = "Mauslm";
    l_U505[0] = "Corner_Position33";
    l_U472[1] = {64.60101000, -12.76675000, 8.49071400};
    l_U485[1] = 190.68650000;
    l_U490[1] = -60.21798000;
    l_U495[1] = -0.36842100;
    l_U500[1] = "Mauslm";
    l_U505[1] = "Corner_Position65";
    l_U459[2] = {71.73480000, 2.26085000, 6.21716900};
    l_U472[2] = {80.86501000, 2.35328700, 6.23984100};
    l_U485[2] = 275.00000000;
    l_U490[2] = -90.41844000;
    l_U495[2] = 4.79855500;
    l_U500[2] = "GenCover";
    l_U505[2] = "E7C5870E_D680D911_Corner1";
    l_U472[3] = {70.08930000, 2.31896600, 6.03393800};
    l_U485[3] = 79.04593000;
    l_U490[3] = 65.32457000;
    l_U495[3] = -5.15695700;
    l_U500[3] = "GenCover";
    l_U505[3] = "E7C5870E_563BB90C_Corner2";
    l_U510[0] = {61.68470000, 4.10453400, 6.55972100};
    l_U510[1] = {71.71085000, 2.08841600, 6.22545100};
    l_U510[2] = {74.77747000, 15.77679000, 5.25821400};
    l_U510[3] = {92.24802000, -3.11759000, 6.79447300};
     /* WRITE_STRING */ sub_781( "MF]] s_cemet_mausoleum - END: P_SET_STATIC_GAMEPLAY_DATA" );
    return;
}

/* P_CREATETRIGGERBOX */ void sub_11637(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATETETHERBOX */ void sub_11972(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_12081(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATEPEDSTRUCT */ void sub_13164(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_14001()
{
     /* WRITE_STRING */ sub_781( "MF]] s_cemet_mausoleum - START: P_INITIALIZE_SCRIPT_DATA" );
    l_U867 = 0;
    l_U868 = 0;
    l_U869 = 0;
    l_U870 = 4;
    l_U274 = 0;
    l_U258 = 0;
    l_U570 = 0;
    l_U571 = 0;
    l_U652 = 0;
    l_U653 = 0;
    l_U654 = 0;
    l_U655 = 0;
    l_U656 = 0;
    l_U657 = 0;
    l_U658 = 0;
    l_U659 = 0;
    l_U661 = 0;
    l_U523 = 0;
     /* RESETTIMER */ sub_4137( ref l_U572 );
     /* RESETTIMER */ sub_4137( ref l_U581 );
     /* RESETTIMER */ sub_4137( ref l_U590 );
     /* RESETTIMER */ sub_4137( ref l_U599 );
     /* RESETTIMER */ sub_4137( ref l_U608 );
     /* RESETTIMER */ sub_4137( ref l_U617 );
     /* SETUP_SCRIPTED_SPEECH */ sub_14274( "SCMTAUD" );
     /* WRITE_STRING */ sub_781( "MF]] s_cemet_mausoleum - END: P_INITIALIZE_SCRIPT_DATA" );
    return;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_14274(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_14318();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_14318()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* P_SETUP_GAMEPLAY */ void sub_14529()
{
     /* P_SNIP_SPAWN_SNIPER */ sub_14558();
     /* P_SNIP_SPAWN_WARDEN */ sub_16121();
    l_U436 =  /* CREATEOBJECT */ sub_16224( g_U1365, 75.54100000, -27.60000000, 20.86700000, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );
    return;
}

/* P_SNIP_SPAWN_SNIPER */ void sub_14558()
{
     /* WRITESCRIPTLOG */ sub_962( "TEH", "s_cemet_mausoleum - START: P_SNIP_SPAWN_SNIPER", "***" );
     /* CLEANPED */ sub_5313( l_U534 );
    l_U534 =  /* CREATEPED */ sub_14670( ref l_U535 );
    if ( /* IS_PED_VALID */ sub_2839( l_U534 ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U534, 1 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U534, 1 );
         /* MAUS_SET_SNIPER_VULNERABLE */ sub_15425( 0 );
         /* TELEPORTPED */ sub_15577( l_U534, g_U1327, 0.00000000 );
        l_U548 =  /* F_GIVEPEDWEAPON */ sub_8289( l_U534, 1224272620, 25000, 0, 1 );
        ENABLE_WEAPON_ATTACHMENT( l_U548, 13, 1 );
        SET_LASER_SIGHT_ATTACHMENT( l_U548, -938171172 );
        TOGGLE_WEAPON_ATTACHMENT( l_U548, 13, 1 );
        SET_PED_CONSUMING_AMMO( l_U534, 0 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U534, 1 );
        SET_PED_ACCURACY( l_U534, 31186664 );
         /* P_PED_REGISISTER_AND_LOCK_TARGET */ sub_15770( ref l_U534,  /* PLAYER_PED_ID */ sub_1768() );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_962( "TEH", "s_cemet_mausoleum - P_SNIP_SPAWN_SNIPER Sniper not created correctly", "***" );
        SCRIPT_ASSERT( "s_cemet_mausoleum - P_SNIP_SPAWN_SNIPER Sniper not created correctly", 0 );
    }
     /* WRITE_STRING */ sub_781( "MF]] s_cemet_mausoleum - END: P_SNIP_SPAWN_SNIPER" );
    return;
}

/* CREATEPED */ void sub_14670(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_10387( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_15161( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_15262( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_15161(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_15262(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* MAUS_SET_SNIPER_VULNERABLE */ void sub_15425(boolean bParam0)
{
    if (NOT (IS_PED_DEAD( l_U534 )))
    {
        SET_PED_GORE( l_U534, bParam0 );
        SET_PED_INVINCIBLE( l_U534, NOT bParam0 );
        SET_PED_AS_ONE_SHOT_KILL( l_U534, bParam0 );
        SET_PED_CAN_BE_TARGETTED( l_U534, bParam0 );
        SET_PED_AIM_LOCKONABLE( l_U534, bParam0 );
    }
    return;
}

/* TELEPORTPED */ void sub_15577(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_PED_REGISISTER_AND_LOCK_TARGET */ void sub_15770(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( (uParam0^) ))) AND (NOT (IS_PED_DEAD( uParam1 ))))
    {
        CLEAR_LOCKED_TARGET( (uParam0^) );
        REGISTER_TARGET( (uParam0^), uParam1 );
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* P_SNIP_SPAWN_WARDEN */ void sub_16121()
{
     /* CLEANPED */ sub_5313( l_U549 );
    l_U549 =  /* CREATEPED */ sub_14670( ref l_U550 );
    return;
}

/* CREATEOBJECT */ void sub_16224(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_10387( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* SETUP_WEATHER_TIMEOFDAY */ void sub_16549(unknown uParam0)
{
     /* WRITE_STRING */ sub_781( "[SP]### P_SETUP_WEATHER_TIMEOFDAY ###" );
    SET_WEATHER_TYPE_NOW_PERSIST( "SNOW_LIGHT" );
    switch (uParam0)
    {
        case 0:
        case 1:
        case 2:
        case 20:
        case 21:
        FREEZE_TIME_OF_DAY( 18, 0 );
        break;
        case 3:
        case 22:
        FREEZE_TIME_OF_DAY( 19, 0 );
        break;
        case 4:
        case 5:
        case 6:
        case 23:
        case 24:
        case 25:
        FREEZE_TIME_OF_DAY( 20, 0 );
        break;
        case 7:
        case 26:
        FREEZE_TIME_OF_DAY( 21, 0 );
        break;
        case 8:
        case 9:
        case 10:
        case 27:
        case 28:
        case 29:
        FREEZE_TIME_OF_DAY( 22, 0 );
        break;
        default:
         /* WRITESCRIPTLOG */ sub_962( "RJM", "Setting Weather/TOD for a checkpoint that doesn't really matter", 0 );
        FREEZE_TIME_OF_DAY( 18, 0 );
        break;
    }
    return;
}

/* P_SNIP_SETUP_PASSOS */ void sub_16997()
{
     /* WRITESCRIPTLOG */ sub_962( "TEH", "P_SNIP_SETUP_PASSOS", "***" );
     /* CLEANPED */ sub_5313( g_U824 );
    g_U824 =  /* CREATEPED */ sub_14670( ref l_U639 );
    if ( /* IS_PED_VALID */ sub_2839( g_U824 ))
    {
         /* P_SETUP_PASSOS_GENERAL_ATTRIBUTES */ sub_17111( ref g_U824 );
        SET_PED_PROOFS( g_U824, 0, 1, 0, 1, 1 );
         /* F_GIVEPEDWEAPON */ sub_8289( g_U824, -862236369, 25000, 0, 0 );
        SET_PED_DEFAULT_AIM_AT_PED( g_U824, l_U534 );
        PED_FINISH_ACTION_INTENTION( g_U824, 47 );
        PED_FINISH_ACTION_INTENTION( g_U824, 48 );
        PED_FINISH_ACTION_INTENTION( g_U824, 49 );
        PED_FINISH_ACTION_INTENTION( g_U824, 50 );
    }
    return;
}

/* P_SETUP_PASSOS_GENERAL_ATTRIBUTES */ void sub_17111(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_962( "SBA", "P_SETUP_PASSOS_GENERAL_ATTRIBUTES", "***" );
    if ( /* IS_PED_VALID */ sub_2839( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^), 1 );
        SET_PED_VALIDATE_BULLET_CAM_HIT( (uParam0^), 0 );
        SET_AI_SHOULD_ALWAYS_MISS_PED( (uParam0^), 1 );
        SET_CAN_AI_KICK_THROUGH_CORPSES( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_AI_TEMPLATE( (uParam0^), "AIT_NORMAL" );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( (uParam0^), 1 );
        SET_PED_AS_ONE_SHOT_KILL( (uParam0^), 1 );
        SET_PED_GORE( (uParam0^), 0 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), 0 );
        SET_PED_PROOFS( (uParam0^), 0, 1, 1, 1, 1 );
        SET_PED_ALLOWED_TO_SURRENDER( (uParam0^), 0 );
        SET_PED_CAN_AVOID_DEATH_ZONES( (uParam0^), 0 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( (uParam0^), 1 );
        SET_PED_CAN_PUSH_PLAYER( (uParam0^), 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_CAN_BE_TARGETTED( (uParam0^), 0 );
        SET_PED_CONSUMING_AMMO( (uParam0^), 0 );
        SET_PED_PATH_CAN_USE_CLIMBOVERS( (uParam0^), 1 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( (uParam0^), 1 );
    }
    return;
}

/* P_HANDLE_GAMEPLAY_EVENTS */ void sub_17766()
{
    int iVar2;

    if (l_U871 == 0)
    {
        switch (l_U866)
        {
            case 0:
             /* WRITESCRIPTLOG */ sub_962( "bsw", "P_HANDLE_GAMEPLAY_EVENTS - MAUSOLEUM_REQUEST_ASSETS", 0 );
            if (g_U825 != 7)
            {
                iVar2 = 0;
                 /* LOADSEAMLESSCUTSCENE */ sub_17986( l_U195, 0 );
            }
            else
            {
                g_U1231 = 1;
                iVar2 = 1;
            }
             /* P_LOAD_WEAPONS */ sub_18341( 7 );
             /* P_LOAD_ASSETS_MAUSOLEUM */ sub_10302( iVar2 );
            l_U866 = 1;
            break;
            case 1:
            if (g_U1231)
            {
                if (g_U825 != 7)
                {
                     /* WRITESCRIPTLOG */ sub_962( "bsw", "P_HANDLE_GAMEPLAY_EVENTS -Force Loading assets ", 0 );
                     /* P_LOAD_ASSETS_MAUSOLEUM */ sub_10302( 1 );
                }
                 /* WRITESCRIPTLOG */ sub_962( "bsw", "P_HANDLE_GAMEPLAY_EVENTS - MAUSOLEUM_PRELOAD - bStartMausoleumScript triggered", 0 );
                 /* P_CEMET_COMMON_SETUP */ sub_11432();
                 /* TOGGLE_SNIPER_BLOCKER_VISIBILITY */ sub_19074( 0 );
                if (g_U825 != 7)
                {
                     /* WRITESCRIPTLOG */ sub_962( "bsw", "P_HANDLE_GAMEPLAY_EVENTS - preload going to mid_05b", 0 );
                    l_U866 = 2;
                }
                else
                {
                     /* P_SNIP_SETUP_PASSOS */ sub_16997();
                     /* SETUP_WEATHER_TIMEOFDAY */ sub_16549( 7 );
                     /* WRITESCRIPTLOG */ sub_962( "bsw", "P_HANDLE_GAMEPLAY_EVENTS - preload going straight to blendout", 0 );
                    if (NOT (IS_PED_DEAD( g_U1178 )))
                    {
                        if (NOT ( /* HAS_SAVEFILE_LOADED */ sub_19386( ref l_U830 )))
                        {
                             /* F_GIVEPEDWEAPON */ sub_8289( g_U1178,  /* GET_STARTING_WEAPON */ sub_19599( 7 ), 200, 0, 1 );
                        }
                    }
                     /* TOGGLE_SNIPER_BLOCKER_VISIBILITY */ sub_19074( 1 );
                    l_U866 = 3;
                }
                g_U1991[5] = 1;
            }
            break;
            case 2:
             /* LOADSEAMLESSCUTSCENE */ sub_17986( l_U195, 1 );
             /* REGISTER_PEDS_MID_05B_CEM */ sub_19707( g_U824, l_U534, l_U549 );
             /* PLAY_CUTSCENE_MID_05B_CEM */ sub_22675( 1, 0, 0 );
             /* TOGGLE_SNIPER_BLOCKER_VISIBILITY */ sub_19074( 1 );
            l_U866 = 3;
            case 3:
             /* WRITESCRIPTLOG */ sub_962( "bsw", "P_HANDLE_GAMEPLAY_EVENTS - MAUSOLEUM_CHECKPOINT", 0 );
            if ((ISEQ_QUERY_STATE( 1571095687, 3 )) == 0)
            {
                 /* WRITESCRIPTLOG */ sub_962( "bsw", "P_HANDLE_GAMEPLAY_EVENTS - starting passos via script", 0 );
                 /* LOADISEQ */ sub_10687( 1571095687, 1 );
                ISEQ_REGISTER_ENTITY( 1571095687, "passos", g_U824, 0 );
                ISEQ_START( 1571095687 );
            }
            SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
            g_U826 = 7;
            if (NOT l_U830._fU0)
            {
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_24349( ref l_U830, g_U826,  /* PLAYER_PED_ID */ sub_1768(), g_U971[7]._fU0, g_U971[7]._fU12, g_U971[7]._fU16, g_U971[7]._fU20, 0 );
            }
             /* CLEANPED */ sub_5313( l_U549 );
             /* UNLOADMODEL */ sub_23812( g_U1344 );
             /* LOADMODEL */ sub_10387( g_U1346, 0 );
            l_U866 = 4;
            case 4:
            if ( /* HANDLE_MID_05B_BLENDOUT */ sub_28947())
            {
                 /* WRITESCRIPTLOG */ sub_962( "bsw", "P_HANDLE_GAMEPLAY_EVENTS - going to start fight", 0 );
                l_U866 = 6;
            }
            break;
            case 6:
             /* WRITESCRIPTLOG */ sub_962( "TEH", "Time to do first thing", "---" );
            g_U1767 = 1;
            l_U191 = 1;
             /* P_SETDOORLOCKED */ sub_30132( ref g_U1536, 0 );
             /* P_SETDOORLOCKED */ sub_30132( ref g_U1543, 0 );
            l_U866 = 7;
            break;
            case 7:
             /* MAUS_SNIPER_HANDLER */ sub_30412();
             /* MAUS_HANDLE_BULLET_CAMS */ sub_45808();
            if ((l_U870 > 4) AND (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_34725( ref l_U300 )) == 2))
            {
                l_U192 = 3;
            }
            if (l_U264 == 0)
            {
                l_U192 = 4;
            }
            if ((l_U264 == 0) AND (NOT (IS_BULLET_CAMERA_RUNNING( 0 ))))
            {
                if ( /* IS_PED_VALID */ sub_2839( l_U534 ))
                {
                     /* WRITESCRIPTLOG */ sub_962( "BSW", "Sniper is still alive, but advancing script", 0 );
                     /* TOGGLE_SNIPER_HIDING */ sub_39581( 1 );
                }
                else
                {
                    DO_SCREEN_FADE_OUT( 400 );
                }
                 /* KILL_ANY_MISSION_SPEECH */ sub_46756( 0 );
                l_U866 = 8;
            }
            break;
            case 8:
            if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
            {
                l_U866 = 9;
            }
            break;
            case 9:
            g_U1991[7] = 1;
            break;
        }
         /* P_PED_HEIGHT_SAFETY_CHECK */ sub_47015( ref l_U534, 21.00000000 );
         /* P_PED_ARRAY_Z_SAFETY_CHECK */ sub_47256( ref l_U300, -10, 1, 1 );
         /* P_PED_ARRAY_Z_SAFETY_CHECK */ sub_47256( ref l_U350, -10, 1, 1 );
         /* P_PED_ARRAY_Z_SAFETY_CHECK */ sub_47256( ref l_U400, -10, 1, 1 );
    }
    return;
}

/* LOADSEAMLESSCUTSCENE */ void sub_17986(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* P_LOAD_WEAPONS */ void sub_18341(unknown uParam0)
{
     /* LOADWEAPON */ sub_18374( -862236369, 1 );
    switch (uParam0)
    {
        case 0:
        case 1:
         /* LOADWEAPON */ sub_18374( 434544317, 1 );
         /* LOADWEAPON */ sub_18374( -691403429, 1 );
        break;
        case 2: break;
        case 3:
         /* LOADWEAPON */ sub_18374( -691403429, 1 );
         /* LOADWEAPON */ sub_18374( 930042831, 1 );
        break;
        case 4:
        case 5:
         /* LOADWEAPON */ sub_18374( 434544317, 1 );
         /* LOADWEAPON */ sub_18374( -691403429, 1 );
        break;
        case 6:
         /* LOADWEAPON */ sub_18374( 434544317, 1 );
         /* LOADWEAPON */ sub_18374( -691403429, 1 );
        break;
        case 7:
         /* LOADWEAPON */ sub_18374( 434544317, 1 );
         /* LOADWEAPON */ sub_18374( -691403429, 1 );
         /* LOADWEAPON */ sub_18374( 1224272620, 1 );
        break;
        case 8:
         /* LOADWEAPON */ sub_18374( 434544317, 1 );
         /* LOADWEAPON */ sub_18374( -691403429, 1 );
        break;
        case 9:
         /* LOADWEAPON */ sub_18374( 434544317, 1 );
         /* LOADWEAPON */ sub_18374( -691403429, 1 );
        break;
        case 10:
         /* LOADWEAPON */ sub_18374( 434544317, 1 );
         /* LOADWEAPON */ sub_18374( -184942895, 1 );
         /* LOADWEAPON */ sub_18374( -691403429, 1 );
        break;
    }
    return;
}

/* LOADWEAPON */ void sub_18374(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load weapon: {!f1} : {1} ###", 2, 1, 199730165, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* TOGGLE_SNIPER_BLOCKER_VISIBILITY */ void sub_19074(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_962( "bsw", "TOGGLE_SNIPER_BLOCKER_VISIBILITY", 0 );
    SET_OBJECT_VISIBLE( l_U436, uParam0 );
    return;
}

/* HAS_SAVEFILE_LOADED */ int sub_19386(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_962( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U37 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U38 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_5839( uParam0,  /* PLAYER_PED_ID */ sub_1768() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* GET_STARTING_WEAPON */ int sub_19599(unknown uParam0)
{
    return -862236369;
}

/* REGISTER_PEDS_MID_05B_CEM */ void sub_19707(unknown uParam0, unknown uParam1, unknown uParam2)
{
     /* WRITESCRIPTLOG */ sub_962( "RJM", "REGISTER_PEDS_MID_05b_CEM - start", 0 );
    if ( /* IS_MAX_VALID */ sub_2809())
    {
         /* WRITESCRIPTLOG */ sub_962( "RJM", "Registering player with mid_05b", 0 );
         /* P_PLAYER_HOLSTER_WEAPONS */ sub_19855( ref l_U198, 1, 1 );
         /* P_SET_TWO_HANDED_WEAPON_VISIBLE */ sub_21219( l_U198, 0 );
         /* P_SET_LEFT_HAND_WEAPON_VISIBLE */ sub_21358( l_U198, 0 );
         /* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ sub_21449( 1 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE(  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_21597(), "W_PI_Clt1911_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_1768(), g_U971[7]._fU0, g_U971[7]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_1768(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "GenCover", "E7C5870E_47334F5_Corner2", 1, 0 );
        CUTSCENE_SET_COVER_CAMERA_DIRECTION( g_U971[7]._fU16, g_U971[7]._fU20 );
        ISEQ_REGISTER_ENTITY( 856401726, "max",  /* PLAYER_PED_ID */ sub_1768(), 0 );
    }
    if ( /* IS_PED_VALID */ sub_2839( uParam0 ))
    {
         /* WRITESCRIPTLOG */ sub_962( "RJM", "Registering piMID_05b_CEMPassos with MID_05b_CEM_concat", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( uParam0, "PASS_NY_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( uParam0, g_U779[7]._fU0, g_U779[7]._fU12 );
        ISEQ_REGISTER_ENTITY( 1571095687, "passos", g_U824, 0 );
    }
    if ( /* IS_PED_VALID */ sub_2839( uParam1 ))
    {
         /* WRITESCRIPTLOG */ sub_962( "RJM", "Registering piMID_05b_CEMSniper with MID_05b_CEM_concat", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( uParam1, "G_NY_C_Snip_A", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( uParam1, 0, 0 ), "W_SR_M82_Aa_h", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( uParam1, g_U1327, 0.00000000 );
        ISEQ_REGISTER_ENTITY( -1769846479, "vig_18_snip", uParam1, 0 );
    }
    if ( /* IS_PED_VALID */ sub_2839( uParam2 ))
    {
         /* WRITESCRIPTLOG */ sub_962( "RJM", "Registering piMID_05b_CEMWarden with MID_05b_CEM_concat", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( uParam2, "Fun1_civ_Ward_fat", 0 );
    }
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U1522._fU0, g_U1522._fU4 );
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U1529._fU0, g_U1529._fU4 );
     /* WRITESCRIPTLOG */ sub_962( "RJM", "REGISTER_PEDS_MID_05b_CEM - end", 0 );
    return;
}

/* P_PLAYER_HOLSTER_WEAPONS */ void sub_19855(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

     /* RESET_WEAPON_CONFIG */ sub_19894( iParam0 );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1768() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1768(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_20095( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if (( /* IS_WEAPON_TWO_HANDED */ sub_20349( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1768(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1768(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1768(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1768(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1768() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1768(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1768(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1768(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1768(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1768() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1768(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if (( /* IS_WEAPON_TWO_HANDED */ sub_20349( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1768(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1768(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1768(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

/* RESET_WEAPON_CONFIG */ void sub_19894(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

/* IS_WEAPON_SINGLE_HANDED */ int sub_20095(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* IS_WEAPON_TWO_HANDED */ int sub_20349(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* P_SET_TWO_HANDED_WEAPON_VISIBLE */ void sub_21219(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;

    uVar21 = uParam0._fU24._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar21, uParam18 );
    }
    uVar22 = uParam0._fU60._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar22, uParam18 );
    }
    return;
}

/* P_SET_LEFT_HAND_WEAPON_VISIBLE */ void sub_21358(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;

    uVar21 = uParam0._fU12._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar21, uParam18 );
    }
    return;
}

/* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ void sub_21449(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1768() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1768(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if ((( /* IS_WEAPON_SINGLE_HANDED */ sub_20095( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_21597();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1768(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

/* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ int sub_21597()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1768() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1768(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_20095( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1768(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1768(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1768(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

/* PLAY_CUTSCENE_MID_05B_CEM */ int sub_22675(boolean bParam0, int iParam1, unknown uParam2)
{
    int iVar5;

     /* WRITESCRIPTLOG */ sub_962( "RJM", "PLAY_CUTSCENE_MID_05b_CEM start", 0 );
    iVar5 = 0;
    if (IS_STRING_NULL( uParam2 ))
    {
        uParam2 = l_U195;
    }
     /* NIS_PRE_SETUP */ sub_22787( 1, 0, 0, 1 );
    if (NOT bParam0)
    {
         /* LOAD_MID_05B_CEM_ASSETS */ sub_22970();
         /* LOADSEAMLESSCUTSCENE */ sub_17986( uParam2, 1 );
         /* CREATE_MID_05B_CEM_PEDS_AND_OBJECTS */ sub_23055();
         /* REGISTER_PEDS_MID_05B_CEM */ sub_19707( l_U216, l_U230, l_U244 );
    }
    else
    {
         /* LOADISEQ */ sub_10687( -1769846479, 1 );
         /* LOADISEQ */ sub_10687( 856401726, 1 );
        CUTSCENE_REGISTER_ISEQ( 856401726 );
        CUTSCENE_REGISTER_ISEQ( 1571095687 );
        CUTSCENE_REGISTER_ISEQ( -1769846479 );
    }
    CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
    if (iParam1 == 1)
    {
        START_CUTSCENE_CAPTURE( uParam2 );
    }
    START_SEAMLESS_CUTSCENE();
    WAIT( 0 );
    if (bParam0)
    {
         /* WRITESCRIPTLOG */ sub_962( "bsw", "setting ALLOW_BULLET_CAMERA_TO_GAMEPLAY to TRUE  during mid05b", 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
         /* SETUP_WEATHER_TIMEOFDAY */ sub_16549( 7 );
    }
    while (NOT HAS_CUTSCENE_FINISHED())
    {
        WAIT( 0 );
    }
     /* P_SET_TWO_HANDED_WEAPON_VISIBLE */ sub_21219( l_U198, 1 );
     /* P_SET_LEFT_HAND_WEAPON_VISIBLE */ sub_21358( l_U198, 1 );
    if (bParam0)
    {
        CAMERA_PLAY_ANIMATED( l_U197, l_U196, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
    }
    STOP_CUTSCENE_CAPTURE();
    if (NOT bParam0)
    {
         /* CLEANUP_MID_05B_CEM_ASSETS */ sub_23692();
         /* UNLOAD_MID_05B_CEM_ASSETS */ sub_23769();
    }
    CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 0 );
     /* WRITESCRIPTLOG */ sub_962( "RJM", "PLAY_CUTSCENE_MID_05b_CEM end", 0 );
    return 1;
}

/* NIS_PRE_SETUP */ void sub_22787(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1768() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1806(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1768(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1768() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1768(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* LOAD_MID_05B_CEM_ASSETS */ void sub_22970()
{
     /* LOADMODEL */ sub_10387( g_U1332, 1 );
     /* LOADMODEL */ sub_10387( g_U1344, 1 );
     /* LOADMODEL */ sub_10387( g_U1343, 1 );
    return;
}

/* CREATE_MID_05B_CEM_PEDS_AND_OBJECTS */ void sub_23055()
{
     /* WRITESCRIPTLOG */ sub_962( "RJM", "CREATE_MID_05b_CEM_PEDS_AND_OBJECTS - start", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_12081( ref l_U217, 0, 0, 0, 0.00000000, 1265654828, 26, 6, 0, 0, 0 );
    l_U216 =  /* CREATEPED */ sub_14670( ref l_U217 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_12081( ref l_U231, 0, 0, 0, 0.00000000, -1127141388, 26, 6, 0, 0, 0 );
     /* P_CREATEPEDSTRUCT */ sub_13164( ref l_U245, 0, 0, 0, 0.00000000, 1409225310, 26, 6, 0, 0, 0 );
    l_U230 =  /* CREATEPED */ sub_14670( ref l_U231 );
    l_U244 =  /* CREATEPED */ sub_14670( ref l_U245 );
     /* WRITESCRIPTLOG */ sub_962( "RJM", "CREATE_MID_05b_CEM_PEDS_AND_OBJECTS - end", 0 );
    return;
}

/* CLEANUP_MID_05B_CEM_ASSETS */ void sub_23692()
{
     /* CLEANPED */ sub_5313( l_U216 );
     /* CLEANPED */ sub_5313( l_U230 );
     /* CLEANPED */ sub_5313( l_U244 );
    return;
}

/* UNLOAD_MID_05B_CEM_ASSETS */ void sub_23769()
{
     /* UNLOADMODEL */ sub_23812( g_U1332 );
     /* UNLOADMODEL */ sub_23812( g_U1344 );
     /* UNLOADMODEL */ sub_23812( g_U1343 );
    return;
}

/* UNLOADMODEL */ void sub_23812(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
         /* WRITE_STRING */ sub_781( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_24349(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_962( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_962( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_9065( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_24640( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_25117( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_25117( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25377( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_25117( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25377( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25377( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_25117( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25377( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25377( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25377( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_25117( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25377( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25377( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25377( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25377( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_26957( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U38, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_962( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_24640(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_6122( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_962( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_962( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_25117(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_25377(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_26957(int iParam0)
{
     /* WRITE_STRING */ sub_781( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_27045( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_27122( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_27122( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_27122( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_1085( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_1085( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_1085( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_1085( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_1085( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_1085( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_1085( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_1085( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_1085( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_1085( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_1085( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_27122( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_1085( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_1085( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_1085( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_27122( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_27951( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_1085( iParam0->_fU52 );
     /* WRITE_STRING */ sub_781( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_1085( iParam0->_fU96 );
     /* WRITE_STRING */ sub_781( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_1085( iParam0->_fU100 );
     /* WRITE_STRING */ sub_781( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_1085( iParam0->_fU104 );
     /* WRITE_STRING */ sub_781( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_1085( iParam0->_fU108 );
     /* WRITE_STRING */ sub_781( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_1085( iParam0->_fU112 );
     /* WRITE_STRING */ sub_781( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_1085( iParam0->_fU116 );
     /* WRITE_STRING */ sub_781( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_1085( iParam0->_fU120 );
     /* WRITE_STRING */ sub_781( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_1085( iParam0->_fU124 );
     /* WRITE_STRING */ sub_781( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_1085( iParam0->_fU128 );
     /* WRITE_STRING */ sub_781( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_1085( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_1085( l_U38 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_1085( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_27045(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_27122(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_27951(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* HANDLE_MID_05B_BLENDOUT */ void sub_28947()
{
    int Result;

    Result = 0;
    switch (l_U867)
    {
        case 0:
         /* NIS_PRE_SETUP */ sub_22787( 1, 0, 0, 1 );
         /* WRITESCRIPTLOG */ sub_962( "bsw", "HANDLE_MID_05B_BLENDOUT - BLENDOUT_START", 0 );
        if ((ISEQ_QUERY_STATE( 856401726, 3 )) == 0)
        {
            CAMERA_PLAY_ANIMATED( l_U197, l_U196, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
             /* WRITESCRIPTLOG */ sub_962( "bsw", "starting HANDLE_MID_05B_BLENDOUT WITHOUT the cutscene", 0 );
             /* LOADISEQ */ sub_10687( 856401726, 1 );
             /* TELEPORTPED */ sub_15577(  /* PLAYER_PED_ID */ sub_1768(), g_U971[7]._fU0, g_U971[7]._fU12 );
            ISEQ_REGISTER_ENTITY( 856401726, "max",  /* PLAYER_PED_ID */ sub_1768(), 0 );
            ISEQ_START( 856401726 );
            SNAP_PLAYER_TO_COVERPOINT(  /* PLAYER_ID */ sub_1806(), "GenCover", "E7C5870E_47334F5_Corner2", 0 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U971[7]._fU16, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U971[7]._fU20, 1065353216, 0 );
        }
        if ((ISEQ_QUERY_STATE( -1769846479, 3 )) == 0)
        {
             /* TELEPORTPED */ sub_15577( l_U534, g_U1327, 0.00000000 );
            ISEQ_REGISTER_ENTITY( -1769846479, "vig_18_snip", l_U534, 0 );
            ISEQ_START( -1769846479 );
        }
        DO_SCREEN_FADE_IN( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        l_U867 = 1;
        break;
        case 1:
        if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( l_U197, l_U196 )) - 750))
        {
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U971[7]._fU16, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U971[7]._fU20, 1065353216, 0 );
            CAMERA_FREEZE_FRAME( 1, 750, 0, 0 );
             /* WRITESCRIPTLOG */ sub_962( "bsw", "HANDLE_MID_05B_BLENDOUT - blendout cam finished", 0 );
            l_U867 = 2;
        }
        break;
        case 2:
        Result = 1;
         /* NIS_POST_SETUP */ sub_29676( 1, 1 );
        break;
    }
    return Result;
}

/* NIS_POST_SETUP */ void sub_29676(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1768() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1806(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1768(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_29774();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_29774()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1768() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1768(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1768(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1768(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1768(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* P_SETDOORLOCKED */ void sub_30132(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if (( /* F_DOESDOOREXIST */ sub_30162( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_30246( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_30162(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_30246(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* MAUS_SNIPER_HANDLER */ void sub_30412()
{
    if (l_U260)
    {
        l_U869 = 3;
    }
     /* HANDLE_PASSOS_SQUIBS */ sub_30460();
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_30846( ref l_U662, 0 ))
    {
         /* WRITESCRIPTLOG */ sub_962( "BSW", "MAUS_SNIPER_HANDLER - spawning reinforcements A", "---" );
         /* CREATE_REINFORCEMENTS_A */ sub_31115();
         /* TASK_REINFORCEMENTS_A */ sub_32587();
        l_U274 = 0;
         /* P_PLAY_DIAL_PASSOS */ sub_33140( "SCMT_PSTFG", ref l_U962 );
        if (l_U870 < 6)
        {
            l_U870 = 6;
        }
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_30846( ref l_U683, 0 ))
    {
         /* WRITESCRIPTLOG */ sub_962( "BSW", "MAUS_SNIPER_HANDLER - spawning reinforcements B", "---" );
         /* CREATE_REINFORCEMENTS_B */ sub_34615();
         /* TASK_REINFORCEMENTS_B */ sub_35276();
         /* P_PLAY_DIAL_PASSOS */ sub_33140( "SCMT_PSMFG", ref l_U972 );
        l_U274 = 0;
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_30846( ref l_U704, 0 ))
    {
         /* WRITESCRIPTLOG */ sub_962( "BSW", "MAUS_SNIPER_HANDLER - spawning reinforcements C", "---" );
         /* CREATE_REINFORCEMENTS_C */ sub_36023();
         /* TASK_REINFORCEMENTS_C */ sub_36586();
    }
    if ( /* ISTIMERDONE */ sub_3561( ref l_U626 ))
    {
         /* SAFE_TO_ADVANCE */ sub_37057();
    }
    if ( /* F_ISPLAYERINTRIGGERBOX */ sub_37629( l_U788 ))
    {
         /* WRITESCRIPTLOG */ sub_962( "BSW", "Uh oh hit safety trigger at Maus door", 0 );
         /* P_PLAY_DIAL_PASSOS */ sub_33140( "SCMT_PSNUTS", ref l_U982 );
         /* P_SETDOORLOCKED */ sub_30132( ref g_U1536, 1 );
         /* P_SETDOORLOCKED */ sub_30132( ref g_U1543, 1 );
         /* KILL_PEDS_STILL_IN_MAUSOLEUM */ sub_37785();
    }
    switch (l_U869)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_962( "TEH", "MAUS_SNIPER_HANDLER - MAUS_SNIPER_STARTUP", "---" );
         /* P_DIAL_PASSOS_MAX */ sub_38521( "SCMT_MPCVA", ref l_U892 );
         /* CREATETIMER */ sub_3278( ref l_U524, l_U533, 1, 0 );
         /* STARTTIMER */ sub_3428( ref l_U524 );
        l_U869 = 1;
        break;
        case 1:
        if (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_38735( l_U892 )))
        {
             /* WRITESCRIPTLOG */ sub_962( "SBA", "MAUS_SNIPER_HANDLER - opening dialog over", "---" );
             /* CREATETIMER */ sub_3278( ref l_U617, 750, 1, 0 );
             /* STARTTIMER */ sub_3428( ref l_U617 );
            l_U869 = 4;
        }
        break;
        case 4:
        if (( /* IS_SAFE_FOR_PASSOS_TO_FIRE */ sub_39063()) AND ( /* ISTIMERDONE */ sub_3561( ref l_U617 )))
        {
             /* MAKE_PASSOS_FIRE_AT_SNIPER */ sub_39221();
             /* TOGGLE_SNIPER_HIDING */ sub_39581( 1 );
        }
        if (NOT ( /* IS_MAX_IN_COVER_FROM_SNIPER */ sub_39823()))
        {
            if (NOT l_U570)
            {
                 /* CREATETIMER */ sub_3278( ref l_U590,  /* MAUS_SNIPER_GET_HIDING_TIME */ sub_39956(), 1, 0 );
                 /* STARTTIMER */ sub_3428( ref l_U590 );
                 /* WRITESCRIPTLOG */ sub_962( "TEH", "MAUS_SNIPER_HANDLER - MAUS_SNIPER_FIRST_COVER - Max is not safe, going to MAUS_SNIPER_AIMING", "---" );
                l_U869 = 2;
            }
            else
            {
                 /* CREATETIMER */ sub_3278( ref l_U572, l_U635, 1, 0 );
                 /* STARTTIMER */ sub_3428( ref l_U572 );
                 /* WRITESCRIPTLOG */ sub_962( "TEH", "MAUS_SNIPER_HANDLER - MAUS_SNIPER_FIRST_COVER - Passos is covering, going to MAUS_SNIPER_FIRST_RUN", "---" );
                l_U870 = 5;
                l_U869 = 5;
            }
        }
        else if ( /* TIME_FOR_SNIPER_TO_STOP_HIDING */ sub_40612())
        {
             /* WRITESCRIPTLOG */ sub_962( "TEH", "MAUS_SNIPER_HANDLER - MAUS_SNIPER_FIRST_COVER - never left cover, time to reset", "---" );
            l_U869 = 2;
        }
        break;
        case 5:
        if ((IS_PED_SHOOTING(  /* PLAYER_PED_ID */ sub_1768() )) || (( /* ISTIMERDONE */ sub_3561( ref l_U572 )) || ( /* F_ISPLAYERINTRIGGERBOX */ sub_37629( l_U662 ))))
        {
             /* CREATETIMER */ sub_3278( ref l_U590,  /* MAUS_SNIPER_GET_HIDING_TIME */ sub_39956(), 1, 0 );
             /* STARTTIMER */ sub_3428( ref l_U590 );
             /* TOGGLE_SNIPER_HIDING */ sub_39581( 0 );
             /* WRITESCRIPTLOG */ sub_962( "BSW", "MAUS_SNIPER_HANDLER - MAUS_SNIPER_FIRST_RUN - times up (or trigger volume), going to MAUS_SNIPER_AIMING", "---" );
            l_U869 = 2;
        }
        break;
        case 6:
        if ((l_U263 == 0) AND (NOT l_U274))
        {
            l_U274 = 1;
             /* P_DIAL_PASSOS_MAX */ sub_38521( "SCMT_PAFWC", ref l_U902 );
        }
        if ( /* IS_SAFE_FOR_PASSOS_TO_FIRE */ sub_39063())
        {
            if ( /* ISTIMERDONE */ sub_3561( ref l_U617 ))
            {
                 /* MAKE_PASSOS_FIRE_AT_SNIPER */ sub_39221();
                 /* TOGGLE_SNIPER_HIDING */ sub_39581( 1 );
            }
        }
        if (NOT ( /* IS_MAX_IN_COVER_FROM_SNIPER */ sub_39823()))
        {
            if (NOT l_U570)
            {
                 /* CREATETIMER */ sub_3278( ref l_U590,  /* MAUS_SNIPER_GET_HIDING_TIME */ sub_39956(), 1, 0 );
                 /* STARTTIMER */ sub_3428( ref l_U590 );
                 /* WRITESCRIPTLOG */ sub_962( "TEH", "MAUS_SNIPER_HANDLER - MAUS_SNIPER_SECOND_COVER - Max is not safe, going to MAUS_SNIPER_AIMING", "---" );
                l_U869 = 2;
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_962( "TEH", "MAUS_SNIPER_HANDLER - MAUS_SNIPER_SECOND_COVER - Passos is covering, going to MAUS_SNIPER_SECOND_RUN", "---" );
                l_U869 = 7;
            }
        }
        else if ( /* TIME_FOR_SNIPER_TO_STOP_HIDING */ sub_40612())
        {
             /* WRITESCRIPTLOG */ sub_962( "TEH", "MAUS_SNIPER_HANDLER - MAUS_SNIPER_SECOND_COVER - never left cover, time to reset", "---" );
            l_U869 = 2;
        }
        break;
        case 7:
        l_U870 = 7;
        if (( /* TIME_FOR_SNIPER_TO_STOP_HIDING */ sub_40612()) || ( /* F_ISPLAYERINTRIGGERBOX */ sub_37629( l_U683 )))
        {
             /* CREATETIMER */ sub_3278( ref l_U590,  /* MAUS_SNIPER_GET_HIDING_TIME */ sub_39956(), 1, 0 );
             /* STARTTIMER */ sub_3428( ref l_U590 );
             /* TOGGLE_SNIPER_HIDING */ sub_39581( 0 );
             /* WRITESCRIPTLOG */ sub_962( "BSW", "MAUS_SNIPER_HANDLER - MAUS_SNIPER_SECOND_RUN - times up (or trigger volume), going to MAUS_SNIPER_AIMING", "---" );
            l_U869 = 2;
        }
        break;
        case 8:
        l_U870 = 8;
        if ( /* IS_SAFE_FOR_PASSOS_TO_FIRE */ sub_39063())
        {
            if ( /* ISTIMERDONE */ sub_3561( ref l_U617 ))
            {
                 /* MAKE_PASSOS_FIRE_AT_SNIPER */ sub_39221();
                 /* TOGGLE_SNIPER_HIDING */ sub_39581( 1 );
            }
        }
        if ((l_U263 == 0) AND (NOT l_U274))
        {
            l_U274 = 1;
             /* P_DIAL_PASSOS_MAX */ sub_38521( "SCMT_PATSW", ref l_U912 );
        }
        if (NOT ( /* IS_MAX_IN_COVER_FROM_SNIPER */ sub_39823()))
        {
            if (NOT l_U570)
            {
                 /* CREATETIMER */ sub_3278( ref l_U590,  /* MAUS_SNIPER_GET_HIDING_TIME */ sub_39956(), 1, 0 );
                 /* STARTTIMER */ sub_3428( ref l_U590 );
                 /* WRITESCRIPTLOG */ sub_962( "TEH", "MAUS_SNIPER_HANDLER - MAUS_SNIPER_FINAL_COVER - Max is not safe, going to MAUS_SNIPER_AIMING", "---" );
                l_U869 = 2;
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_962( "TEH", "MAUS_SNIPER_HANDLER - MAUS_SNIPER_FINAL_COVER - Passos is covering, going to MAUS_SNIPER_FINAL_RUN", "---" );
                l_U869 = 9;
            }
        }
        else if ( /* TIME_FOR_SNIPER_TO_STOP_HIDING */ sub_40612())
        {
             /* WRITESCRIPTLOG */ sub_962( "TEH", "MAUS_SNIPER_HANDLER - MAUS_SNIPER_FINAL_COVER - never left cover, time to reset", "---" );
            l_U869 = 2;
        }
        break;
        case 9:
        if (( /* F_ISPLAYERINTRIGGERBOX */ sub_37629( l_U725 )) || ( /* TIME_FOR_SNIPER_TO_STOP_HIDING */ sub_40612()))
        {
             /* CREATETIMER */ sub_3278( ref l_U590,  /* MAUS_SNIPER_GET_HIDING_TIME */ sub_39956(), 1, 0 );
             /* STARTTIMER */ sub_3428( ref l_U590 );
            if ( /* F_ISPLAYERINTRIGGERBOX */ sub_37629( l_U725 ))
            {
                 /* HANDLE_SNIPER_SCANNING */ sub_42274( 1 );
            }
             /* TOGGLE_SNIPER_HIDING */ sub_39581( 0 );
             /* WRITESCRIPTLOG */ sub_962( "BSW", "MAUS_SNIPER_HANDLER - MAUS_SNIPER_FINAL_RUN - times up (or trigger volume), going to MAUS_SNIPER_AIMING", "---" );
            l_U869 = 2;
        }
        break;
        case 3:
        if ((NOT l_U260) AND (NOT ( /* IS_PLAYER_IN_SAFE_ZONES */ sub_42704())))
        {
             /* MAUS_SET_SNIPER_VULNERABLE */ sub_15425( 0 );
             /* DISABLETIMER */ sub_42809( ref l_U599 );
             /* PED_CLEAR_ALL_ACTION_INTENTIONS */ sub_39306( l_U534 );
            PED_SET_ACTION_INTENTION( l_U534, 49, 1000, 0.00000000, 0.00000000, 0.00000000 );
            PED_SET_ACTION_INTENTION( l_U534, 50, 1000, 0.00000000, 0.00000000, 0.00000000 );
            CLEAR_PED_DEFAULT_AIM( l_U534 );
             /* WRITESCRIPTLOG */ sub_962( "BSW", "MAUS_SNIPER_HANDLER - MAUS_SNIPER_VULNERABLE - no longer in vulnerable trigger, going back to MAUS_SNIPER_FINAL_RUN", "---" );
            l_U869 = 8;
        }
        else
        {
             /* HANDLE_SNIPER_SCANNING */ sub_42274( 0 );
        }
        if ( /* IS_PLAYER_IN_SAFE_ZONES */ sub_42704())
        {
             /* MAUS_SET_SNIPER_VULNERABLE */ sub_15425( 1 );
            if ((l_U263 == 0) AND ((NOT (IS_PED_DEAD( l_U534 ))) AND ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND ((NOT ( /* HASTIMERBEENACTIVATED */ sub_3144( ref l_U599 ))) AND (IS_PED_SHOOTING(  /* PLAYER_PED_ID */ sub_1768() ))))))
            {
                 /* PED_CLEAR_ALL_ACTION_INTENTIONS */ sub_39306( l_U534 );
                if ( /* F_ISPLAYERINTRIGGERBOX */ sub_37629( l_U746 ))
                {
                     /* WRITESCRIPTLOG */ sub_962( "BSW", "MAUS_SNIPER_HANDLER - MAUS_SNIPER_VULNERABLE - turning to the right pocket", 0 );
                    PED_SET_ACTION_INTENTION( l_U534, 48, 1000, 0.00000000, 0.00000000, 0.00000000 );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_962( "BSW", "MAUS_SNIPER_HANDLER - MAUS_SNIPER_VULNERABLE - turning to the left pocket", 0 );
                    PED_SET_ACTION_INTENTION( l_U534, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
                }
                 /* CREATETIMER */ sub_3278( ref l_U599, l_U637 + 2000, 1, 0 );
                 /* STARTTIMER */ sub_3428( ref l_U599 );
            }
        }
        else
        {
             /* MAUS_SET_SNIPER_VULNERABLE */ sub_15425( 0 );
        }
        if ((((PED_GET_ACTION_INTENTION_STATUS( l_U534, 48 )) == 1) || ((PED_GET_ACTION_INTENTION_STATUS( l_U534, 47 )) == 1)) AND ((NOT (IS_PED_DEAD( l_U534 ))) AND (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))))
        {
            l_U869 = 11;
        }
        break;
        case 2:
        if ( /* IS_PLAYER_IN_SAFE_ZONES */ sub_42704())
        {
             /* TOGGLE_SNIPER_HIDING */ sub_39581( 0 );
             /* WRITESCRIPTLOG */ sub_962( "BSW", "MAUS_SNIPER_HANDLER - MAUS_SNIPER_AIMING - in vulnerable trigger, going to MAUS_SNIPER_VULNERABLE", "---" );
            l_U869 = 3;
        }
        if (( /* DOES_MAX_NEED_PROTECTION */ sub_43703()) || ( /* IS_MAX_IN_COVER_FROM_SNIPER */ sub_39823()))
        {
             /* CREATETIMER */ sub_3278( ref l_U617,  /* MAUS_SNIPER_GET_PASSOS_COVER_FIRE_DELAY */ sub_43858(), 1, 0 );
             /* STARTTIMER */ sub_3428( ref l_U617 );
             /* TOGGLE_SNIPER_HIDING */ sub_39581( 0 );
            if (l_U870 <= 5)
            {
                l_U869 = 4;
            }
            else if ((l_U870 < 7) AND (l_U870 > 5))
            {
                l_U869 = 6;
            }
            else if ( /* F_ISPLAYERINTRIGGERBOX */ sub_37629( l_U683 ))
            {
                l_U869 = 8;
            }
            else
            {
                l_U869 = 6;
            };;;
             /* WRITESCRIPTLOG */ sub_962( "TEH", "MAUS_SNIPER_HANDLER - MAUS_SNIPER_AIMING - Max reached safety, going to: ", "---" );
             /* WRITE_INT */ sub_1085( l_U869 );
        }
        else if ( /* ISTIMERDONE */ sub_3561( ref l_U590 ))
        {
             /* WRITESCRIPTLOG */ sub_962( "TEH", "MAUS_SNIPER_HANDLER - MAUS_SNIPER_AIMING - going to MAUS_SNIPER_SHOOTING", "---" );
            l_U869 = 10;
        }
        break;
        case 10:
         /* MAUS_SNIPER_ATTACK */ sub_44401();
         /* CREATETIMER */ sub_3278( ref l_U590, 800, 1, 0 );
         /* STARTTIMER */ sub_3428( ref l_U590 );
        l_U869 = 2;
        break;
        case 11:
        if ( /* HANDLE_SNIPER_TURN_AND_KILL_NIS */ sub_44602())
        {
            l_U869 = 13;
        }
        break;
        case 13: break;
    }
    return;
}

/* HANDLE_PASSOS_SQUIBS */ void sub_30460()
{
    int iVar2;

    if (PED_ANIM_EVENT( g_U824, -1531652494 ))
    {
        iVar2 = GET_RANDOM_INT_IN_RANGE( 0, 2 );
        if (iVar2 > 0)
        {
             /* WRITESCRIPTLOG */ sub_962( "bsw", "HANDLE_PASSOS_SQUIBS firing squib", 0 );
            START_PARTICLE_FX_NON_LOOPED_AT_COORD( "Mtl_BulImp_CalLrg_PThk",  /* GET_RANDOM_SQUIB_LOCATION */ sub_30608(), 0.00000000, 0.00000000, 0.00000000, 1.30000000 );
        }
    }
    return;
}

/* GET_RANDOM_SQUIB_LOCATION */ void sub_30608()
{
    vector[3] vVar2;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;

    array(ref vVar2, 3);
    vVar2[0] = {76.00788000, -27.76487000, 21.93517000};
    vVar2[1] = {75.00833000, -27.31062000, 21.01213000};
    vVar2[2] = {75.57276000, -27.28473000, 20.67283000};
    uVar12 = GET_RANDOM_INT_IN_RANGE( 0, 2 );
    DISPLAYF( "Choosing GET_RANDOM_SQUIB_LOCATION number {}", 1, 513, uVar12 );
    return vVar2[uVar12];
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_30846(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_30922(  /* PLAYER_PED_ID */ sub_1768(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* F_ISPEDINTRIGGERBOX */ int sub_30922(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* CREATE_REINFORCEMENTS_A */ void sub_31115()
{
    unknown uVar2;
    int I;

     /* WRITESCRIPTLOG */ sub_962( "TEH", "CREATE_REINFORCEMENTS_A", "***" );
     /* P_SETUP_AI_GROUP */ sub_31204( ref l_U344, 1.00000000, 0 );
    for ( I = 0; I < 3; I++ )
    {
         /* CLEANPED */ sub_5313( l_U300[I] );
        l_U300[I] =  /* CREATEPED */ sub_14670( ref l_U304[I] );
        SET_PED_ALERTNESS( l_U300[I], 3 );
        if (NOT (IS_PED_DEAD( l_U300[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U300[I], 1 );
            SET_PED_CAN_AVOID_DEATH_ZONES( l_U300[I], 0 );
            if (I == 1)
            {
                uVar2 =  /* F_GIVEPEDWEAPON */ sub_8289( l_U300[I], -691403429, 25000, 0, 0 );
            }
            else
            {
                uVar2 =  /* F_GIVEPEDWEAPON */ sub_8289( l_U300[I], 434544317, 25000, 0, 0 );
            }
            SET_PED_AI_TEMPLATE( l_U300[I], ref g_U1220 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1768() )))
            {
                 /* P_PED_REGISISTER_AND_LOCK_TARGET */ sub_15770( ref l_U300[I], g_U1178 );
            }
            SET_PED_FLAG_BLOCK_WOUNDED_MOVEMENT( l_U300[I], 1 );
             /* P_TETHERPED */ sub_31863( ref l_U437, l_U300[I], 1 );
             /* P_QUICK_ADD_PED_TO_GROUP */ sub_31961( l_U300[I], ref l_U344 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_962( "TEH", "P_SETUP_MAUS_REINFORCEMENTS sometings gone wrong", "***" );
        }
    }
    l_U653 = 1;
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_32449( ref l_U300, "MAUS_REINA" );
    return;
}

/* P_SETUP_AI_GROUP */ void sub_31204(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* P_TETHERPED */ void sub_31863(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_31961(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_781( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_31204( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_31204( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ void sub_32449(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

/* TASK_REINFORCEMENTS_A */ void sub_32587()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_962( "BSW", "TASK_REINFORCEMENTS_A", "***" );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1768() ))) AND (NOT (IS_PED_DEAD( l_U300[0] ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U265, 3, 20000, 1048576000, 0, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1768() );
        CLOSE_SEQUENCE_TASK( uVar2 );
        CLEAR_PED_TASKS( l_U300[0] );
        TASK_PERFORM_SEQUENCE( l_U300[0], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1768() ))) AND (NOT (IS_PED_DEAD( l_U300[1] ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U268, 3, 20000, 1048576000, 0, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar2 );
        CLEAR_PED_TASKS( l_U300[1] );
        TASK_PERFORM_SEQUENCE( l_U300[1], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1768() ))) AND (NOT (IS_PED_DEAD( l_U300[2] ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U271, 3, 20000, 1048576000, 0, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar2 );
        CLEAR_PED_TASKS( l_U300[2] );
         /* WRITESCRIPTLOG */ sub_962( "BSW", "TASK_REINFORCEMENTS_a tasking reinfa-2", 0 );
        TASK_PERFORM_SEQUENCE( l_U300[2], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    return;
}

/* P_PLAY_DIAL_PASSOS */ void sub_33140(unknown uParam0, unknown uParam1)
{
     /* WRITESCRIPTLOG */ sub_962( "SBA", "P_PLAY_DIAL_PASSOS", "***" );
    if ( /* IS_PED_VALID */ sub_2839( g_U824 ))
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1768() )))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_33244( uParam1 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_33356( 1, g_U824, "PASSOS", uParam1, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_33356( 0,  /* PLAYER_PED_ID */ sub_1768(), "MAX", uParam1, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_33609( uParam0, uParam1, 8, 1 );
        }
    }
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_33244(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_33356(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_33609(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_33654( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_33654(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_33741( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_33741(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_33793( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_34311( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_33793(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_34311(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* CREATE_REINFORCEMENTS_B */ void sub_34615()
{
    unknown uVar2;
    int I;

     /* WRITESCRIPTLOG */ sub_962( "TEH", "CREATE_REINFORCEMENTS_B", "***" );
     /* P_SETUP_AI_GROUP */ sub_31204( ref l_U394, 1.00000000, 0 );
    for ( I = 0; I < 3; I++ )
    {
        if ((( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_34725( ref l_U300 )) + I) < 4)
        {
             /* CLEANPED */ sub_5313( l_U350[I] );
            l_U350[I] =  /* CREATEPED */ sub_14670( ref l_U354[I] );
            if (NOT (IS_PED_DEAD( l_U350[I] )))
            {
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U350[I], 1 );
                SET_PED_CAN_AVOID_DEATH_ZONES( l_U350[I], 0 );
                if (I == 0)
                {
                    uVar2 =  /* F_GIVEPEDWEAPON */ sub_8289( l_U350[I], -691403429, 25000, 0, 0 );
                }
                else if (I == 1)
                {
                    uVar2 =  /* F_GIVEPEDWEAPON */ sub_8289( l_U350[I], -691403429, 25000, 0, 0 );
                }
                else
                {
                    uVar2 =  /* F_GIVEPEDWEAPON */ sub_8289( l_U350[I], -862236369, 25000, 0, 0 );
                }
                SET_PED_FLAG_BLOCK_WOUNDED_MOVEMENT( l_U350[I], 1 );
                 /* P_TETHERPED */ sub_31863( ref l_U437, l_U350[I], 1 );
                SET_PED_AI_TEMPLATE( l_U350[I], ref g_U1220 );
                if (NOT (IS_PED_DEAD( g_U1178 )))
                {
                     /* P_PED_REGISISTER_AND_LOCK_TARGET */ sub_15770( ref l_U350[I], g_U1178 );
                }
                 /* P_QUICK_ADD_PED_TO_GROUP */ sub_31961( l_U350[I], ref l_U394 );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_962( "TEH", "P_SETUP_MAUS_REINFORCEMENTS sometings gone wrong", "***" );
            }
        }
    }
    l_U654 = 1;
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_32449( ref l_U350, "MAUS_REINB" );
    return;
}

/* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ void sub_34725(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

/* TASK_REINFORCEMENTS_B */ void sub_35276()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_962( "BSW", "TASK_REINFORCEMENTS_B start", 0 );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1768() ))) AND (NOT (IS_PED_DEAD( l_U350[0] ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U265, 3, 20000, 1048576000, 0, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1768() );
        CLOSE_SEQUENCE_TASK( uVar2 );
        CLEAR_PED_TASKS( l_U350[0] );
         /* WRITESCRIPTLOG */ sub_962( "BSW", "TASK_REINFORCEMENTS_B tasking reinfC-0", 0 );
        TASK_PERFORM_SEQUENCE( l_U350[0], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1768() ))) AND (NOT (IS_PED_DEAD( l_U350[1] ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U268, 3, 20000, 1048576000, 0, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar2 );
        CLEAR_PED_TASKS( l_U350[1] );
         /* WRITESCRIPTLOG */ sub_962( "BSW", "TASK_REINFORCEMENTS_B tasking reinfC-1", 0 );
        TASK_PERFORM_SEQUENCE( l_U350[1], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1768() ))) AND (NOT (IS_PED_DEAD( l_U350[2] ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U271, 3, 20000, 1048576000, 0, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar2 );
        CLEAR_PED_TASKS( l_U350[2] );
         /* WRITESCRIPTLOG */ sub_962( "BSW", "TASK_REINFORCEMENTS_B tasking reinfC-2", 0 );
        TASK_PERFORM_SEQUENCE( l_U350[2], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    return;
}

/* CREATE_REINFORCEMENTS_C */ void sub_36023()
{
    unknown uVar2;
    int I;

     /* WRITESCRIPTLOG */ sub_962( "TEH", "CREATE_REINFORCEMENTS_C", "***" );
     /* P_SETUP_AI_GROUP */ sub_31204( ref l_U430, 1.00000000, 0 );
    for ( I = 0; I < 2; I++ )
    {
        if (((( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_34725( ref l_U300 )) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_34725( ref l_U350 ))) + I) < 4)
        {
             /* CLEANPED */ sub_5313( l_U400[I] );
            l_U400[I] =  /* CREATEPED */ sub_14670( ref l_U403[I] );
            if (NOT (IS_PED_DEAD( l_U400[I] )))
            {
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U400[I], 1 );
                SET_PED_CAN_AVOID_DEATH_ZONES( l_U400[I], 0 );
                if (I == 0)
                {
                    uVar2 =  /* F_GIVEPEDWEAPON */ sub_8289( l_U400[I], -691403429, 25000, 0, 0 );
                }
                else if (I == 1)
                {
                    uVar2 =  /* F_GIVEPEDWEAPON */ sub_8289( l_U400[I], -691403429, 25000, 0, 0 );
                }
                else
                {
                    uVar2 =  /* F_GIVEPEDWEAPON */ sub_8289( l_U400[I], -862236369, 25000, 0, 0 );
                }
                SET_PED_FLAG_BLOCK_WOUNDED_MOVEMENT( l_U400[I], 1 );
                 /* P_TETHERPED */ sub_31863( ref l_U437, l_U400[I], 1 );
                SET_PED_AI_TEMPLATE( l_U400[I], ref g_U1220 );
                if (NOT (IS_PED_DEAD( g_U1178 )))
                {
                     /* P_PED_REGISISTER_AND_LOCK_TARGET */ sub_15770( ref l_U400[I], g_U1178 );
                }
                 /* P_QUICK_ADD_PED_TO_GROUP */ sub_31961( l_U400[I], ref l_U430 );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_962( "TEH", "P_SETUP_MAUS_REINFORCEMENTS sometings gone wrong", "***" );
            }
        }
    }
    l_U655 = 1;
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_32449( ref l_U400, "MAUS_REINC" );
    return;
}

/* TASK_REINFORCEMENTS_C */ void sub_36586()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_962( "BSW", "TASK_REINFORCEMENTS_C start", 0 );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1768() ))) AND (NOT (IS_PED_DEAD( l_U400[0] ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U265, 3, 20000, 1048576000, 0, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1768() );
        CLOSE_SEQUENCE_TASK( uVar2 );
        CLEAR_PED_TASKS( l_U400[0] );
         /* WRITESCRIPTLOG */ sub_962( "BSW", "TASK_REINFORCEMENTS_C tasking reinfC-0", 0 );
        TASK_PERFORM_SEQUENCE( l_U400[0], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1768() ))) AND (NOT (IS_PED_DEAD( l_U400[1] ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U268, 3, 20000, 1048576000, 0, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar2 );
        CLEAR_PED_TASKS( l_U400[1] );
         /* WRITESCRIPTLOG */ sub_962( "BSW", "TASK_REINFORCEMENTS_C tasking reinfC-1", 0 );
        TASK_PERFORM_SEQUENCE( l_U400[1], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    return;
}

/* SAFE_TO_ADVANCE */ void sub_37057()
{
    if (l_U656)
    {
         /* P_PLAY_DIAL_PASSOS */ sub_33140( "SCMT_PGMEC", ref l_U952 );
    }
    else
    {
         /* P_PLAY_COVER_FIRE_VO */ sub_37122();
    }
    if ( /* IS_PED_VALID */ sub_2839( l_U534 ))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( l_U534 );
        TASK_AIM_GUN_AT_PED( l_U534, g_U824, -1, 0 );
         /* P_PED_REGISISTER_AND_LOCK_TARGET */ sub_15770( ref l_U534, g_U824 );
    }
    return;
}

/* P_PLAY_COVER_FIRE_VO */ void sub_37122()
{
    if (l_U869 == 4)
    {
         /* WRITESCRIPTLOG */ sub_962( "SBA", "P_PLAY_COVER_FIRE_VO: First Time", "---" );
         /* P_PLAY_DIAL_PASSOS */ sub_33140( "SCMT_PSSHT", ref l_U922 );
    }
    else if (l_U869 == 6)
    {
         /* WRITESCRIPTLOG */ sub_962( "SBA", "P_PLAY_COVER_FIRE_VO: Second Time", "---" );
         /* P_PLAY_DIAL_PASSOS */ sub_33140( "SCMT_FPSST", ref l_U932 );
    }
    else if (l_U869 == 8)
    {
         /* WRITESCRIPTLOG */ sub_962( "SBA", "P_PLAY_COVER_FIRE_VO: Final Time", "---" );
         /* P_PLAY_DIAL_PASSOS */ sub_33140( "SCMT_PLDMC", ref l_U942 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_962( "SBA", "P_PLAY_COVER_FIRE_VO: ERROR! we're playing some VO, but how did we get here?", "---" );
         /* P_PLAY_DIAL_PASSOS */ sub_33140( "SCMT_PGMEC", ref l_U952 );
    };;;
    return;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_37629(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_30922(  /* PLAYER_PED_ID */ sub_1768(), uParam0 );
}

/* KILL_PEDS_STILL_IN_MAUSOLEUM */ void sub_37785()
{
    int I;

    I = 0;
    for ( I = 0; I < 3; I++ )
    {
        if ( /* IS_PED_VALID */ sub_2839( l_U300[I] ))
        {
            if ( /* F_ISPEDINTRIGGERBOX */ sub_30922( l_U300[I], l_U788 ))
            {
                 /* WRITESCRIPTLOG */ sub_962( "BSW", "Killed a A ped that was stuck in the Maus", 0 );
                 /* P_KILL_PED */ sub_37950( l_U300[I] );
            }
        }
    }
    I = 0;
    for ( I = 0; I < 3; I++ )
    {
        if ( /* IS_PED_VALID */ sub_2839( l_U350[I] ))
        {
            if ( /* F_ISPEDINTRIGGERBOX */ sub_30922( l_U350[I], l_U788 ))
            {
                 /* WRITESCRIPTLOG */ sub_962( "BSW", "Killed a B ped that was stuck in the Maus", 0 );
                 /* P_KILL_PED */ sub_37950( l_U350[I] );
            }
        }
    }
    I = 0;
    for ( I = 0; I < 2; I++ )
    {
        if ( /* IS_PED_VALID */ sub_2839( l_U400[I] ))
        {
            if ( /* F_ISPEDINTRIGGERBOX */ sub_30922( l_U400[I], l_U788 ))
            {
                 /* WRITESCRIPTLOG */ sub_962( "BSW", "Killed a C ped that was stuck in the Maus", 0 );
                 /* P_KILL_PED */ sub_37950( l_U400[I] );
            }
        }
    }
    return;
}

/* P_KILL_PED */ void sub_37950(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

/* P_DIAL_PASSOS_MAX */ void sub_38521(unknown uParam0, unknown uParam1)
{
     /* WRITESCRIPTLOG */ sub_962( "SBA", "P_DIAL_PASSOS_MAX", "***" );
    if ( /* IS_PED_VALID */ sub_2839( g_U824 ))
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1768() )))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_33244( uParam1 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_33356( 1, g_U824, "PASSOS", uParam1, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_33356( 2,  /* PLAYER_PED_ID */ sub_1768(), "MAX", uParam1, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_33609( uParam0, uParam1, 8, 1 );
        }
    }
    return;
}

/* IS_SPEECH_CURRENTLY_PLAYING */ int sub_38735(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_38778( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

/* IS_SCRIPT_SPEECH_STRUCT_VALID */ boolean sub_38778(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

/* IS_SAFE_FOR_PASSOS_TO_FIRE */ int sub_39063()
{
    if (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_39102()))
    {
        return 1;
    }
    return 0;
}

/* IS_ANY_SPEECH_CURRENTLY_PLAYING */ void sub_39102()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

/* MAKE_PASSOS_FIRE_AT_SNIPER */ void sub_39221()
{
     /* WRITESCRIPTLOG */ sub_962( "bsw", "MAKE_PASSOS_FIRE_AT_SNIPER", 0 );
     /* PED_CLEAR_ALL_ACTION_INTENTIONS */ sub_39306( g_U824 );
    PED_SET_ACTION_INTENTION( g_U824, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
     /* CREATETIMER */ sub_3278( ref l_U626, l_U638, 1, 0 );
     /* STARTTIMER */ sub_3428( ref l_U626 );
    return;
}

/* PED_CLEAR_ALL_ACTION_INTENTIONS */ void sub_39306(unknown uParam0)
{
    if ( /* IS_PED_VALID */ sub_2839( uParam0 ))
    {
        PED_FINISH_ACTION_INTENTION( uParam0, 47 );
        PED_FINISH_ACTION_INTENTION( uParam0, 48 );
        PED_FINISH_ACTION_INTENTION( uParam0, 49 );
        PED_FINISH_ACTION_INTENTION( uParam0, 50 );
        PED_FINISH_ACTION_INTENTION( uParam0, 51 );
        PED_FINISH_ACTION_INTENTION( uParam0, 52 );
        PED_FINISH_ACTION_INTENTION( uParam0, 53 );
        PED_FINISH_ACTION_INTENTION( uParam0, 54 );
        PED_FINISH_ACTION_INTENTION( uParam0, 55 );
        PED_FINISH_ACTION_INTENTION( uParam0, 56 );
        PED_FINISH_ACTION_INTENTION( uParam0, 57 );
        PED_FINISH_ACTION_INTENTION( uParam0, 58 );
    }
    return;
}

/* TOGGLE_SNIPER_HIDING */ void sub_39581(boolean bParam0)
{
    if (bParam0)
    {
         /* WRITESCRIPTLOG */ sub_962( "TEH", "TOGGLE_SNIPER_HIDING - sniper is hiding", 0 );
         /* CREATETIMER */ sub_3278( ref l_U581, l_U636, 1, 0 );
         /* STARTTIMER */ sub_3428( ref l_U581 );
    }
    else
    {
        CLEAR_PED_TASKS_IMMEDIATELY( l_U534 );
        TASK_AIM_GUN_AT_PED( l_U534,  /* PLAYER_PED_ID */ sub_1768(), -1, 0 );
         /* P_PED_REGISISTER_AND_LOCK_TARGET */ sub_15770( ref l_U534,  /* PLAYER_PED_ID */ sub_1768() );
         /* WRITESCRIPTLOG */ sub_962( "TEH", "TOGGLE_SNIPER_HIDING - sniper is NOT hiding", 0 );
    }
    l_U570 = bParam0;
    return;
}

/* IS_MAX_IN_COVER_FROM_SNIPER */ int sub_39823()
{
    if ((NOT (IS_PED_DEAD( l_U534 ))) AND ( /* IS_MAX_VALID */ sub_2809()))
    {
        if ((IS_PLAYER_DOING_MELEE_GRAPPLE(  /* PLAYER_ID */ sub_1806() )) || (IS_PED_LOS_CLEAR_TO_TARGET_PED( l_U534,  /* PLAYER_PED_ID */ sub_1768() )))
        {
            return 0;
        }
    }
    return 1;
}

/* MAUS_SNIPER_GET_HIDING_TIME */ void sub_39956()
{
    int iVar2;
    int iVar3;
    int Result;

    iVar2 = 5000;
    iVar3 = 1500;
    Result = 5500;
    if ((NOT (IS_PED_DEAD( l_U534 ))) AND ( /* IS_MAX_VALID */ sub_2809()))
    {
        if (l_U656)
        {
             /* WRITESCRIPTLOG */ sub_962( "BSW", "MAUS_SNIPER_GET_HIDING_TIME player was just protected", 0 );
            l_U656 = 0;
            return Result;
        }
        else if ((IS_TARGET_IN_VALID_COVER_FROM_PED( l_U534,  /* PLAYER_PED_ID */ sub_1768() )) AND (IS_CONTROL_PRESSED( 0, 6 )))
        {
             /* WRITESCRIPTLOG */ sub_962( "BSW", "MAUS_SNIPER_GET_HIDING_TIME player is aiming but in cover", 0 );
            return iVar2;
        }
    }
     /* WRITESCRIPTLOG */ sub_962( "BSW", "MAUS_SNIPER_GET_HIDING_TIME player is out of cover", 0 );
    return iVar3;
}

/* TIME_FOR_SNIPER_TO_STOP_HIDING */ boolean sub_40612()
{
    return (IS_PED_SHOOTING(  /* PLAYER_PED_ID */ sub_1768() )) || ( /* ISTIMERDONE */ sub_3561( ref l_U581 ));
}

/* HANDLE_SNIPER_SCANNING */ void sub_42274(unknown uParam0)
{
    int iVar3;

    if ((uParam0) || ( /* ISTIMERDONE */ sub_3561( ref l_U524 )))
    {
        iVar3 = GET_RANDOM_INT_IN_RANGE( 0, 3 );
        if (iVar3 == l_U523)
        {
            iVar3++;
            if (iVar3 >= 4)
            {
                iVar3 = 0;
            }
        }
        l_U523 = iVar3;
        PRINTSTRING( "HANDLE_SNIPER_SCANNING setting new sniper scan target: " );
        PRINTINT( l_U523 );
        PRINTNL();
        if ( /* IS_PED_VALID */ sub_2839( l_U534 ))
        {
            CLEAR_PED_TASKS_IMMEDIATELY( l_U534 );
            SET_PED_DEFAULT_AIM_AT_COORD( l_U534, l_U510[l_U523] );
            TASK_AIM_GUN_AT_COORD( l_U534, l_U510[l_U523], -1, 0 );
        }
         /* RESETTIMER */ sub_4137( ref l_U524 );
         /* STARTTIMER */ sub_3428( ref l_U524 );
    }
    return;
}

/* IS_PLAYER_IN_SAFE_ZONES */ int sub_42704()
{
    if (( /* F_ISPLAYERINTRIGGERBOX */ sub_37629( l_U767 )) || ( /* F_ISPLAYERINTRIGGERBOX */ sub_37629( l_U746 )))
    {
        return 1;
        break;
    }
    return 0;
}

/* DISABLETIMER */ void sub_42809(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

/* DOES_MAX_NEED_PROTECTION */ int sub_43703()
{
    if ( /* IS_MAX_VALID */ sub_2809())
    {
        if ((IS_PLAYER_DOING_MELEE_GRAPPLE(  /* PLAYER_ID */ sub_1806() )) || (IS_LAST_MAN_STANDING_ACTIVE()))
        {
             /* WRITESCRIPTLOG */ sub_962( "BSW", "DOES_MAX_NEED_PROTECTION - yes he does!", 0 );
            l_U656 = 1;
            return 1;
        }
    }
    return 0;
}

/* MAUS_SNIPER_GET_PASSOS_COVER_FIRE_DELAY */ void sub_43858()
{
    int iVar2;
    int Result;

    iVar2 = 6000;
    Result = 0;
    if ( /* DOES_MAX_NEED_PROTECTION */ sub_43703())
    {
         /* WRITESCRIPTLOG */ sub_962( "BSW", "MAUS_SNIPER_GET_PASSOS_COVER_FIRE_DELAY - 0", 0 );
        return Result;
        break;
    }
     /* WRITESCRIPTLOG */ sub_962( "BSW", "MAUS_SNIPER_GET_PASSOS_COVER_FIRE_DELAY - 6000", 0 );
    return iVar2;
}

/* MAUS_SNIPER_ATTACK */ void sub_44401()
{
     /* WRITESCRIPTLOG */ sub_962( "BSW", "MAUS_SNIPER_ATTACK shoot at max", 0 );
    if ((NOT (IS_PED_DEAD( l_U534 ))) AND ( /* IS_MAX_VALID */ sub_2809()))
    {
        TASK_SHOOT_AT_PED( l_U534,  /* PLAYER_PED_ID */ sub_1768(), -1, 1566631136, 1, 0, 0 );
         /* WRITESCRIPTLOG */ sub_962( "CR", "TASK_SHOOT_AT_PED(", 0 );
    }
    return;
}

/* HANDLE_SNIPER_TURN_AND_KILL_NIS */ void sub_44602()
{
    int Result;

    Result = 0;
    switch (l_U868)
    {
        case 0:
         /* NIS_PRE_SETUP */ sub_22787( 1, 0, 0, 1 );
         /* CREATETIMER */ sub_3278( ref l_U1023, l_U1032, 1, 0 );
         /* STARTTIMER */ sub_3428( ref l_U1023 );
        if (NOT (IS_PED_DEAD( l_U534 )))
        {
            CLEAR_PED_TASKS_IMMEDIATELY( l_U534 );
            SET_PED_PERFECT_ACCURACY_OVERRIDE( l_U534, 1 );
            TASK_AIM_GUN_AT_PED( l_U534,  /* PLAYER_PED_ID */ sub_1768(), -1, 1 );
        }
        if ( /* F_ISPLAYERINTRIGGERBOX */ sub_37629( l_U746 ))
        {
             /* NIS_CREATE_STATIC_CAM */ sub_44842( ref l_U992, 75.04000000, -28.30000000, 22.21000000, -32.75000000, 0.00000000, 57.24000000, 45, l_U1033 );
        }
        else
        {
             /* NIS_CREATE_STATIC_CAM */ sub_44842( ref l_U992, 76.00784000, -28.48675000, 22.80702000, -35.89833000, 0.00001300, -57.17677000, 45, l_U1033 );
        }
         /* NIS_PLAY_STATIC_CAMERA */ sub_45133( ref l_U992 );
        if (NOT (IS_PED_DEAD( l_U534 )))
        {
            if ((PED_GET_ACTION_INTENTION_STATUS( l_U534, 47 )) == 1)
            {
                 /* TELEPORTPED */ sub_15577(  /* PLAYER_PED_ID */ sub_1768(), 90.52000000, -16.66351000, 8.97345500, 135.91740000 );
                 /* WRITESCRIPTLOG */ sub_962( "BSW", "sniper finished his turn to left pocket", 0 );
            }
            else if ((PED_GET_ACTION_INTENTION_STATUS( l_U534, 48 )) == 1)
            {
                 /* TELEPORTPED */ sub_15577(  /* PLAYER_PED_ID */ sub_1768(), 57.21862000, -17.97205000, 9.47439100, 238.28530000 );
                 /* WRITESCRIPTLOG */ sub_962( "BSW", "sniper finished his turn to right pocket", 0 );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_962( "BSW", "sniper turn cam finished", 0 );
            }
        }
        l_U868 = 1;
        break;
        case 1:
        if ((NOT l_U571) AND ( /* ISTIMERDONE */ sub_3561( ref l_U1023 )))
        {
             /* MAUS_SNIPER_ATTACK */ sub_44401();
            l_U571 = 1;
        }
        if ( /* NIS_IS_SHOT_FINISHED */ sub_45572( ref l_U992, 1 ))
        {
             /* P_KILL_PED */ sub_37950(  /* PLAYER_PED_ID */ sub_1768() );
            l_U868 = 2;
        }
        break;
        case 2:
         /* NIS_POST_SETUP */ sub_29676( 1, 1 );
        Result = 1;
        break;
    }
    return Result;
}

/* NIS_CREATE_STATIC_CAM */ void sub_44842(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_3278( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U763, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* NIS_PLAY_STATIC_CAMERA */ void sub_45133(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_3428( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

/* NIS_IS_SHOT_FINISHED */ int sub_45572(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || ( /* ISTIMERDONE */ sub_3561( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || ( /* ISTIMERDONE */ sub_3561( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

/* MAUS_HANDLE_BULLET_CAMS */ void sub_45808()
{
    l_U263 = (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_34725( ref l_U300 )) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_34725( ref l_U350 ))) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_34725( ref l_U400 ));
    l_U264 = l_U263;
    if (NOT (IS_PED_DEAD( l_U534 )))
    {
        l_U264++;
    }
    if ((l_U655) AND ((l_U654) AND ((l_U653) AND ((NOT l_U658) AND (l_U264 == 1)))))
    {
         /* SET_BULLET_CAM */ sub_45955();
    }
    if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND ((l_U659) AND (IS_BULLET_CAMERA_RUNNING( 0 ))))
    {
         /* TOGGLE_SNIPER_BLOCKER_VISIBILITY */ sub_19074( 0 );
    }
    if ((l_U264 == 0) || (IS_BULLET_CAMERA_RUNNING( 0 )))
    {
        ;
    }
    return;
}

/* SET_BULLET_CAM */ void sub_45955()
{
    l_U660 =  /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_45986( ref l_U300 );
    if (l_U660 == nil)
    {
        l_U660 =  /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_45986( ref l_U350 );
        if (l_U660 == nil)
        {
            l_U660 =  /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_45986( ref l_U400 );
            if (l_U660 == nil)
            {
                if ((NOT (IS_PED_DEAD( l_U534 ))) AND ( /* IS_PED_VALID */ sub_2839( l_U534 )))
                {
                    l_U660 = l_U534;
                    SET_PED_CAN_TRIGGER_BULLET_CAM( l_U534, 1 );
                    l_U659 = 1;
                    l_U657 = 1;
                }
                else
                {
                    SCRIPT_ASSERT( "No last target found!!!!", 0 );
                }
            }
            else
            {
                SET_PED_CAN_TRIGGER_BULLET_CAM( l_U660, 1 );
                l_U657 = 1;
            }
        }
        else
        {
            SET_PED_CAN_TRIGGER_BULLET_CAM( l_U660, 1 );
            l_U657 = 1;
        }
    }
    else
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U660, 1 );
        l_U657 = 1;
    }
    if (l_U657)
    {
        l_U658 = 1;
        SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U660, 1 );
         /* WRITESCRIPTLOG */ sub_962( "bsw", "setting ALLOW_BULLET_CAMERA_TO_GAMEPLAY to FALSE for last maus ped", 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
    }
    return;
}

/* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ void sub_45986(unknown uParam0)
{
    int I;

    if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_34725( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

/* KILL_ANY_MISSION_SPEECH */ void sub_46756(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        PRINTSTRING( "\n KILL_ANY_MISSION_SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

/* P_PED_HEIGHT_SAFETY_CHECK */ void sub_47015(unknown uParam0, float fParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( (uParam0^) )};
        if (uVar4._fU8 < fParam1)
        {
             /* MLOG */ sub_47149( "A ped has been killed by P_PED_HEIGHT_SAFETY_CHECK", 0, 0 );
            SET_PED_HEALTH( (uParam0^), 0, 0 );
        }
    }
    return;
}

/* MLOG */ void sub_47149(unknown uParam0, string sParam1, string sParam2)
{
    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "ML";
    }
    if (IS_STRING_NULL( sParam1 ))
    {
        sParam1 = "---";
    }
     /* WRITESCRIPTLOG */ sub_962( sParam2, uParam0, sParam1 );
    return;
}

/* P_PED_ARRAY_Z_SAFETY_CHECK */ void sub_47256(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_PED_Z_SAFETY_CHECK */ sub_47322( (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

/* P_PED_Z_SAFETY_CHECK */ void sub_47322(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                 /* CLEANPED */ sub_5313( uParam0 );
            }
        }
    }
    return;
}

/* P_HANDLE_DEBUG_WIDGETS */ void sub_47489()
{
    if (NOT l_U1034)
    {
        START_WIDGET_GROUP( "Dialogue Test" );
        ADD_WIDGET_BOOL( "Test it", ref l_U1036 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Post FX Test" );
        ADD_WIDGET_BOOL( "On", ref l_U1037 );
        ADD_WIDGET_BOOL( "Off", ref l_U1038 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Cheat and beat this checkpoint" );
        ADD_WIDGET_BOOL( "bDebugCheatToWin", ref l_U259 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Sniper scan test" );
        ADD_WIDGET_BOOL( "Force scan on", ref l_U260 );
        STOP_WIDGET_GROUP();
        l_U1034 = 1;
    }
    if (l_U259)
    {
        l_U866 = 9;
        l_U259 = 0;
    }
    if (l_U1038)
    {
        l_U1038 = 0;
    }
    if (l_U1036)
    {
         /* SETUP_SCRIPTED_SPEECH */ sub_14274( "MAXAUD" );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_33244( ref l_U1039 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_33356( 0, g_U1178, "MAX", ref l_U1039, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_33356( 1, g_U1178, "MAX", ref l_U1039, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_33609( "HAS_PILLS", ref l_U1039, 8, 1 );
        l_U1036 = 0;
    }
    return;
}

/* P_UNLOAD_ASSETS_MAUSOLEUM */ void sub_47982()
{
     /* WRITE_STRING */ sub_781( "[GA] P_UNLOAD_ASSETS_MAUSOLEUM start" );
     /* UNLOADMODEL */ sub_23812( g_U1346 );
     /* UNLOADMODEL */ sub_23812( g_U1345 );
     /* UNLOADMODEL */ sub_23812( g_U1343 );
     /* UNLOADMODEL */ sub_23812( g_U1332 );
     /* UNLOADMODEL */ sub_23812( g_U1344 );
     /* UNLOADMODEL */ sub_23812( g_U1365 );
     /* UNLOADANIMDICT */ sub_48138( "FACE_PASNYB" );
     /* UNLOADACTIONTREE */ sub_48225( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act" );
     /* WRITE_STRING */ sub_781( "[GA] P_UNLOAD_ASSETS_MAUSOLEUM end" );
    return;
}

/* UNLOADANIMDICT */ void sub_48138(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

/* UNLOADACTIONTREE */ void sub_48225(unknown uParam0)
{
    ACTION_TREE_UNLOAD( uParam0 );
    return;
}

/* P_UNLOAD_WEAPONS */ void sub_48323(unknown uParam0)
{
    switch (uParam0)
    {
        case 0:
        case 1: break;
        case 2: break;
        case 3: break;
        case 4:
        case 5: break;
        case 6: break;
        case 7:
         /* UNLOADWEAPON */ sub_48479( 1224272620 );
        break;
        case 8: break;
        case 9:
         /* LOADWEAPON */ sub_18374( 434544317, 1 );
         /* LOADWEAPON */ sub_18374( -691403429, 1 );
        break;
        case 10:
         /* UNLOADWEAPON */ sub_48479( -184942895 );
        break;
    }
    return;
}

/* UNLOADWEAPON */ void sub_48479(unknown uParam0)
{
    SET_WEAPON_AS_NO_LONGER_NEEDED( uParam0 );
    return;
}


void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U40 = 0;
    l_U41 = 0;
    l_U42 = 1500;
    l_U70 = {0, 0, 0};
    StrCopy( ref l_U73, "DUMMY", 32 );
    l_U81 = 1;
    l_U86 = 0;
    l_U87 = 0;
    l_U88 = 0;
    l_U91 = 0;
    l_U136 = -1;
    l_U137 = {64536, 64536, 64536};
    l_U141 = 0;
    l_U197 = 0;
    l_U199 = 1;
    l_U221 = 0;
    l_U271 = -1;
    l_U272 = -1;
    l_U1230 = {-124.88000000, -29.99000000, 21.10000000};
    l_U1233 = 218.00000000;
    l_U1234 = 7500;
    l_U1302 = 0;
     /* WRITESCRIPTLOG */ sub_442( "SP", "Script s_pana_VC.sc is starting up...", 0 );
     /* P_VC_POPULATE_VARIABLE_ARRAYS */ sub_560();
    l_U197 = 1;
    if (g_U833 == 11)
    {
         /* P_TELEPORT_PLAYER */ sub_992( g_U980[11], g_U1086[11], g_U1158[11], g_U1122[11] );
    }
    while (NOT IS_EXITFLAG_SET())
    {
         /* P_HANDLE_SP_CHALLENGES */ sub_1249();
         /* P_HANDLE_FAILURE */ sub_1871();
        if (l_U221 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_13471();
        }
         /* P_VC_DEBUG_TUNING_WIDGET */ sub_75597();
        WAIT( 0 );
    }
     /* P_CLEANUP_VC */ sub_5449( 0 );
     /* P_RELEASE_VC_ASSETS */ sub_75982();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_pana_VC" );
     /* WRITESCRIPTLOG */ sub_442( "SP", "Script s_pana_VC.sc is terminating...", 0 );
    return;
}

/* WRITESCRIPTLOG */ void sub_442(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_VC_POPULATE_VARIABLE_ARRAYS */ void sub_560()
{
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_POPULATE_VARIABLE_ARRAYS start", 0 );
    l_U179[0] = 1914709263;
    l_U179[1] = 1942109258;
    l_U179[2] = -1324244056;
    l_U179[3] = -1199034430;
    l_U179[4] = -1096620032;
    l_U179[5] = 138784803;
    l_U179[6] = 1243768211;
    l_U179[7] = -2080896344;
    l_U179[8] = g_U829;
    l_U179[9] = g_U832;
    l_U179[10] = -1409914275;
    l_U191[0] = 1308526797;
    l_U191[1] = -184942895;
    l_U191[2] = 456708483;
    l_U191[3] = -612753081;
    l_U191[4] = -1404433099;
    l_U350[0] = 0;
    l_U350[1] = 0;
    l_U350[2] = 0;
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_POPULATE_VARIABLE_ARRAYS end", 0 );
    return;
}

/* P_TELEPORT_PLAYER */ void sub_992(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 =  /* PLAYER_PED_ID */ sub_1022();
     /* TELEPORTPED */ sub_1127( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

/* PLAYER_PED_ID */ int sub_1022()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_1060() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_1060()
{
    return GET_PLAYER_ID();
}

/* TELEPORTPED */ void sub_1127(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_HANDLE_SP_CHALLENGES */ void sub_1249()
{
    switch (l_U1245)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_442( "CCB", "eSPChallenge - STATE_CHALLENGE_IDLE", 0 );
        l_U1245 = 1;
        break;
        case 1:
        if (l_U197 >= 11)
        {
            if (SCRIPT_VAR_HASH_EXISTS( 1701971384 ))
            {
                SCRIPT_VAR_HASH_SET_INT( 1701971384, 1 );
                DISPLAYF( "[CCB] ### The current OldPainless value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( 1701971384 ) );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_442( "CCB", "The OldPainless script variable is NOT valid!!!", 0 );
            }
            if (SCRIPT_VAR_HASH_EXISTS( -1343685014 ))
            {
                 /* WRITESCRIPTLOG */ sub_442( "CCB", "The player completed the level...", 0 );
                SCRIPT_VAR_HASH_SET_INT( -1343685014, 1 );
                DISPLAYF( "[CCB] ### The current PanamaComplete value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( -1343685014 ) );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_442( "CCB", "The PanamaComplete script variable is NOT valid!!!", 0 );
            }
             /* WRITESCRIPTLOG */ sub_442( "CCB", "eSPChallenge - STATE_CHALLENGE_COMPLETE", 0 );
            l_U1245 = 2;
        }
        break;
        case 2: break;
    }
    return;
}

/* P_HANDLE_FAILURE */ void sub_1871()
{
    if (g_U834 == 11)
    {
        switch (l_U221)
        {
            case 0:
             /* ISMAXOVERBOARD */ sub_1973( 1 );
            if (( /* RESTARTING_CHECKPOINT */ sub_3448()) || (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )))
            {
                l_U221 = 1;
                 /* WRITESCRIPTLOG */ sub_442( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if ( /* IS_RESTART_ACTIVE */ sub_3966())
            {
                l_U221 = 3;
            }
            else if (( /* F_CHECK_QUIT_RETRY */ sub_4026( 0 )) == 1)
            {
                l_U221 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )))
            {
                l_U221 = 3;
                 /* WRITESCRIPTLOG */ sub_442( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
             /* WRITESCRIPTLOG */ sub_442( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() ))) AND (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1060() ))))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1060(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1022() ))
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1022(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
             /* P_CLEANUP_VC */ sub_5449( 1 );
            SET_INTERIOR_ACTIVE( GET_INTERIOR_FROM_NAME( "Foyer", 0 ), 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( GET_INTERIOR_FROM_NAME( "Foyer", 0 ), GET_HASH_KEY( ref g_U3408 ) );
            SET_INTERIOR_ACTIVE( GET_INTERIOR_FROM_NAME( "vc1Right", 0 ), 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( GET_INTERIOR_FROM_NAME( "vc1Right", 0 ), GET_HASH_KEY( ref g_U3400 ) );
            SET_INTERIOR_ACTIVE( GET_INTERIOR_FROM_NAME( "vc1Left", 0 ), 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( GET_INTERIOR_FROM_NAME( "vc1Left", 0 ), GET_HASH_KEY( ref g_U3416 ) );
            LOAD_SCENE( -109.45960000, -15.33696000, 9.64765600 );
            LOAD_SCENE( -108.55380000, 20.68639000, 11.62371000 );
            l_U221 = 4;
             /* WRITESCRIPTLOG */ sub_442( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
             /* WRITESCRIPTLOG */ sub_442( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            if (l_U143._fU0)
            {
                 /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_8789( ref l_U143,  /* PLAYER_PED_ID */ sub_1022() );
            }
            l_U221 = 5;
             /* WRITESCRIPTLOG */ sub_442( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
             /* WRITESCRIPTLOG */ sub_442( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U197 = 1;
            l_U199 = 0;
            l_U221 = 0;
             /* WRITESCRIPTLOG */ sub_442( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

/* ISMAXOVERBOARD */ int sub_1973(int iParam0)
{
    if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND ((NOT IS_BULLET_CAMERA_ACTIVE()) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )))))
    {
        if ((IS_PED_IN_WATER(  /* PLAYER_PED_ID */ sub_1022() )) == 1)
        {
            if (NOT g_U3626._fU32)
            {
                 /* P_GBL_QUICK_GAMEPLAY_CAM_COPY */ sub_2070();
            }
            if (iParam0 == 1)
            {
                 /* P_GLOBAL_MAX_WATER_IMPACT_DEATH */ sub_3026();
            }
             /* NIS_POST_SETUP */ sub_3118( 1, 1 );
            return 1;
        }
    }
    return 0;
}

/* P_GBL_QUICK_GAMEPLAY_CAM_COPY */ void sub_2070()
{
     /* WRITESCRIPTLOG */ sub_442( "MF", "P_GBL_QUICK_GAMEPLAY_CAM_COPY - START", 0 );
     /* NIS_CREATE_GAMEPLAY_CAM_COPY */ sub_2170( ref g_U3626, 50 );
     /* NIS_PRE_SETUP */ sub_2548( 0, 0, 0, 1 );
     /* NIS_PLAY_STATIC_CAMERA */ sub_2727( ref g_U3626 );
     /* WRITESCRIPTLOG */ sub_442( "MF", "P_GBL_QUICK_GAMEPLAY_CAM_COPY - END", 0 );
    return;
}

/* NIS_CREATE_GAMEPLAY_CAM_COPY */ void sub_2170(int iParam0, unknown uParam1)
{
    iParam0->_fU4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_ROT()};
    iParam0->_fU16 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_COORD()};
    iParam0->_fU28 = GET_GAMEPLAY_CAM_FOV();
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam1;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_2324( iParam0 + 48, uParam1, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U703, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* CREATETIMER */ void sub_2324(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* NIS_PRE_SETUP */ void sub_2548(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1060(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1022(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1022() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1022(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* NIS_PLAY_STATIC_CAMERA */ void sub_2727(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_2807( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

/* STARTTIMER */ void sub_2807(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* P_GLOBAL_MAX_WATER_IMPACT_DEATH */ void sub_3026()
{
    SET_PAD_SHAKE( 0, 100, 250 );
    WAIT( 90 );
    SET_PED_HEALTH(  /* PLAYER_PED_ID */ sub_1022(), 0, 0 );
    return;
}

/* NIS_POST_SETUP */ void sub_3118(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1060(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1022(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_3216();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_3216()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1022(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1022(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1022(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1022(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* RESTARTING_CHECKPOINT */ int sub_3448()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1022(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1060(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1060(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1022() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1022(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* IS_RESTART_ACTIVE */ void sub_3966()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_4026(int iParam0)
{
    iParam0 = 1;
    switch (l_U41)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_4108( ref l_U43 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )))
            {
                l_U42 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_2324( ref l_U43, l_U42, 1, 1 );
             /* STARTTIMER */ sub_2807( ref l_U43 );
        }
        if ( /* ISTIMERDONE */ sub_4260( ref l_U43 ))
        {
             /* WRITESCRIPTLOG */ sub_442( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1060() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1060(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U41 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U41 = 2;
            }
            else
            {
                l_U41 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_442( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_4761();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_442( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_4761();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_4108(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* ISTIMERDONE */ int sub_4260(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_4761()
{
     /* WRITESCRIPTLOG */ sub_442( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_4836( ref l_U43 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1060() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1060(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U40 = 0;
    l_U40 = l_U40;
    l_U41 = 0;
    return;
}

/* RESETTIMER */ void sub_4836(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_CLEANUP_VC */ void sub_5449(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_CLEANUP_VC start", 0 );
    ISEQ_TERMINATE( -1079385083 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_5527( -1079385083, ref g_U1878 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_6599( g_U1512, ref g_U1588 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_6599( -1710973172, ref g_U1588 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_6599( -1654523650, ref g_U1588 );
    if ((CUTSCENE_NAMED_IS_LOADING( "11_03_PANAMA_concat" )) || (CUTSCENE_IS_LOADED( "11_03_PANAMA_concat" )))
    {
        CLEAR_NAMED_CUTSCENE( "11_03_PANAMA_concat" );
    }
     /* P_SAFE_STOP_SOUND */ sub_7174( l_U271, 0 );
     /* P_SAFE_RELEASE_SOUND_ID */ sub_7357( ref l_U271 );
     /* P_SAFE_STOP_SOUND */ sub_7174( l_U272, 0 );
     /* P_SAFE_RELEASE_SOUND_ID */ sub_7357( ref l_U272 );
     /* CLEANPED */ sub_7586( l_U270 );
     /* CLEANPEDARRAY */ sub_7675( ref l_U367 );
     /* CLEANPEDARRAY */ sub_7675( ref l_U392 );
     /* CLEANPEDARRAY */ sub_7675( ref l_U506 );
     /* CLEANPEDARRAY */ sub_7675( ref l_U597 );
     /* CLEANPEDARRAY */ sub_7675( ref l_U622 );
     /* CLEANPEDARRAY */ sub_7675( ref l_U701 );
     /* CLEANPEDARRAY */ sub_7675( ref l_U1061 );
     /* CLEANOBJECTARRAY */ sub_7807( ref l_U222 );
     /* CLEANOBJECTARRAY */ sub_7807( ref g_U4160 );
     /* CLEANPLACEMENTARRAY */ sub_7945( ref g_U3517 );
     /* CLEANPLACEMENTARRAY */ sub_7945( ref l_U348 );
     /* CLEANPLACEMENT */ sub_8000( g_U809._fU0 );
     /* CLEANPLACEMENT */ sub_8000( g_U755._fU0 );
     /* P_STOP_SP_CHALLENGES */ sub_8114( uParam0 );
    if ((AUDIO_MUSIC_IS_ONESHOT_PREPARED( "PANAMA_OS_2" )) || (AUDIO_MUSIC_IS_ONESHOT_PREPARED( "PANAMA_OS_4" )))
    {
        AUDIO_MUSIC_STOP_ONESHOT();
    }
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_CLEANUP_VC end", 0 );
    return;
}

/* P_STREAMREQ_ISEQ_REMOVE */ void sub_5527(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_5665( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a ISEQ asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ int sub_5665(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if ((uParam1^)[I] == iParam0)
            {
                DISPLAYF( "[CCB] ### The THREADID index matches the asset requested for removal: {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
            else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID index is in use and is active: {} ###", 1, 513, (uParam1^)[I] );
                Result = I;
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is in use, but is no longer active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

/* P_STREAMREQ_MODELNAMES_REMOVE */ void sub_6599(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_5665( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a MODEL_NAME asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Removing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* P_SAFE_STOP_SOUND */ void sub_7174(int iParam0, unknown uParam1)
{
    if (iParam0 != -1)
    {
         /* WRITESCRIPTLOG */ sub_442( "MF", "P_SAFE_STOP_SOUND: Stopping Sound...", 0 );
        STOP_SOUND( iParam0, uParam1 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_442( "MF", "P_SAFE_STOP_SOUND: Not stopping sound (SoundID = -1)", 0 );
    }
    return;
}

/* P_SAFE_RELEASE_SOUND_ID */ void sub_7357(unknown uParam0)
{
    if ((uParam0^) != -1)
    {
         /* WRITESCRIPTLOG */ sub_442( "MF", "P_SAFE_RELEASE_SOUND_ID: Releasing Sound...", 0 );
        RELEASE_SOUND_ID( (uParam0^) );
        (uParam0^) = -1;
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_442( "MF", "P_SAFE_RELEASE_SOUND_ID: Not RELEASING sound (SoundID != -1)", 0 );
    }
    return;
}

/* CLEANPED */ void sub_7586(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CLEANPEDARRAY */ void sub_7675(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_7586( (uParam0^)[I] );
    }
    return;
}

/* CLEANOBJECTARRAY */ void sub_7807(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* CLEANOBJECT */ sub_7859( (uParam0^)[I] );
    }
    return;
}

/* CLEANOBJECT */ void sub_7859(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* CLEANPLACEMENTARRAY */ void sub_7945(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* CLEANPLACEMENT */ sub_8000( (uParam0^)[I] );
    }
    return;
}

/* CLEANPLACEMENT */ void sub_8000(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

/* P_STOP_SP_CHALLENGES */ void sub_8114(boolean bParam0)
{
     /* WRITESCRIPTLOG */ sub_442( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    if (bParam0)
    {
        ;
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_442( "CCB", "Stopping the Panama context...", 0 );
        END_CONTEXT( "Panama" );
    }
     /* WRITESCRIPTLOG */ sub_442( "CCB", "Stopping the Panama_Museum context...", 0 );
    END_CONTEXT( "Panama_Museum" );
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_8789(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_442( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_9008( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_10172( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10486( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_10965( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10486( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_10965( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10486( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_10965( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_11281( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_10965( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_11281( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_10965( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_11853( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_12055( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1022(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_442( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_9008(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_9070( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_9070(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_10172(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_10486(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_10890( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* WRITE_STRING */ void sub_10890(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_10965(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_11281(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_10890( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_11853(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_12055(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_9070( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_12153( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_12153(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_HANDLE_EVENTS */ void sub_13471()
{
    int iVar2;

    iVar2 = l_U197;
     /* P_HANDLE_IMAGEFX_POI */ sub_13506();
    switch (l_U197)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_442( "SP", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
         /* P_INITIALIZE_SCRIPT_DATA */ sub_14767();
         /* P_SET_STATIC_DATA */ sub_15052();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
         /* P_INITIALIZE_SP_CHALLENGES */ sub_20555();
        l_U197 = 2;
         /* WRITESCRIPTLOG */ sub_442( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_442( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
         /* P_REQUEST_VC_PERSISTENT_ASSETS */ sub_21770();
         /* P_REQUEST_VC_NONPERSISTENT_ASSETS */ sub_32206();
        l_U197 = 3;
         /* WRITESCRIPTLOG */ sub_442( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if (( /* F_STREAMREQ_AUDIO_BANK_IS_LOADED */ sub_36454( ref g_U3026 )) AND (( /* F_STREAMREQ_ANIM_DICT_IS_LOADED */ sub_36063( ref g_U1975 )) AND (( /* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ sub_35661( ref g_U1829 )) AND ( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_35264( ref g_U1588 )))))
        {
            if ((NOT l_U143._fU0) AND (g_U833 == 11))
            {
                l_U197 = 4;
                 /* WRITESCRIPTLOG */ sub_442( "SP", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
            }
            else
            {
                l_U197 = 6;
                 /* WRITESCRIPTLOG */ sub_442( "SP", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
            }
        }
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_442( "GA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        l_U199 = 0;
        g_U1230[11] = 1;
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )))
        {
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_1022(), 0 );
        }
        if (( /* HAS_SAVEFILE_LOADED */ sub_37095( ref l_U143 )) == 0)
        {
             /* F_GIVEPEDWEAPON */ sub_11281(  /* PLAYER_PED_ID */ sub_1022(), 1308526797, 200, 0, 0 );
             /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10486(  /* PLAYER_PED_ID */ sub_1022(), -1404433099, 1, 200, 0 );
             /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10486(  /* PLAYER_PED_ID */ sub_1022(), 456708483, 0, 200, 0 );
            l_U197 = 5;
             /* WRITESCRIPTLOG */ sub_442( "GA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U197 = 6;
             /* WRITESCRIPTLOG */ sub_442( "SP", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1022(), 1 ) )) AND ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1022(), 0 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1022(), 0, 0 ) ))))
            {
                l_U197 = 6;
                 /* WRITESCRIPTLOG */ sub_442( "GA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
            }
        }
        break;
        case 6:
        if (g_U1230[11])
        {
            l_U197 = 7;
             /* WRITESCRIPTLOG */ sub_442( "GA", "eCheckpointState = CP_NIS_GATE_OPENING", 0 );
        }
        break;
        case 7:
        if (l_U198)
        {
            if (g_U834 == 10)
            {
                 /* P_VC_DETECT_PAYNEKILLERS_ON_MAIN_FLOOR */ sub_37759();
            }
             /* P_CREATE_PLACEMENTS */ sub_38026();
             /* P_GLOBAL_CREATE_MUSEUM_GATE_OBJECTS */ sub_39609();
             /* P_VC_CREATE_ZIPLINE_OBJECTS */ sub_40896();
             /* P_GLOBAL_CREATE_LOCKS */ sub_41303( 0, 1 );
             /* P_SWAP_SECURITY_DOOR_BUTTON */ sub_41784( 0 );
            if (l_U199)
            {
                 /* NIS_PRE_SETUP */ sub_2548( 1, 0, 0, 1 );
                 /* NIS_CREATE_STATIC_CAM */ sub_42124( ref l_U226, -108.68000000, -34.31000000, 9.54000000, 12.74000000, 0.00000000, -75.64000000, 45.00000000, 5000 );
                 /* NIS_PLAY_STATIC_CAMERA */ sub_2727( ref l_U226 );
                 /* P_GLOBAL_MUSEUM_GATE_OPEN */ sub_42365( 0 );
                 /* P_INITIALIZE_IMAGE_FX_POI */ sub_42666();
                if (DOES_OBJECT_EXIST( g_U4160[0] ))
                {
                     /* WRITESCRIPTLOG */ sub_442( "CCB", "Playing the sidMuseumGate soundID...", 0 );
                    l_U271 = GET_SOUND_ID();
                    PLAY_SOUND_FROM_OBJECT( l_U271, "S_PANA_VISITOR_CENTER_GATE", g_U4160[0] );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_442( "CCB", "The oiMuseumGateObject_0 object is NOT valid!!!", 0 );
                }
                if (DOES_OBJECT_EXIST( g_U4160[1] ))
                {
                     /* WRITESCRIPTLOG */ sub_442( "CCB", "Playing the sidMuseumGateButton soundID...", 0 );
                    l_U272 = GET_SOUND_ID();
                    PLAY_SOUND_FROM_OBJECT( l_U272, "S_PANA_VISITOR_CENTER_BUTTON", g_U4160[1] );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_442( "CCB", "The oiMuseumGateObject_1 object is NOT valid!!!", 0 );
                }
                 /* TELEPORTPED */ sub_1127(  /* PLAYER_PED_ID */ sub_1022(), g_U980[11], g_U1086[11] );
                DO_SCREEN_FADE_IN( 0 );
            }
            else
            {
                 /* P_GLOBAL_MUSEUM_GATE_OPEN */ sub_42365( 1 );
            }
             /* WRITESCRIPTLOG */ sub_442( "CR", "Playing audio music one shot PANAMA_OS_4", 0 );
            AUDIO_MUSIC_PLAY_ONESHOT();
        }
        if (( /* NIS_IS_SHOT_FINISHED */ sub_43347( ref l_U226, 0 )) || (NOT l_U199))
        {
            if (NOT l_U143._fU0)
            {
                g_U834 = 11;
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_43576( ref l_U143, g_U834,  /* PLAYER_PED_ID */ sub_1022(), g_U980[11], g_U1086[11], g_U1158[11], g_U1122[11], 1 );
            }
             /* CLEANPED */ sub_7586( l_U270 );
             /* NIS_RETURN_TO_GAMEPLAY_CAM */ sub_48204( 0, 0, 0, g_U1158[11], g_U1122[11], 0 );
             /* NIS_POST_SETUP */ sub_3118( 1, 1 );
             /* P_SAFE_STOP_SOUND */ sub_7174( l_U271, 0 );
             /* P_SAFE_RELEASE_SOUND_ID */ sub_7357( ref l_U271 );
             /* P_SAFE_STOP_SOUND */ sub_7174( l_U272, 0 );
             /* P_SAFE_RELEASE_SOUND_ID */ sub_7357( ref l_U272 );
            if (NOT AUDIO_IS_MUSIC_PLAYING())
            {
                 /* WRITESCRIPTLOG */ sub_442( "MF", "Playing 7.4(Forced): PANAMA_FINAL Mood: PANAMA_FINAL_2_5_6", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_2_5_6", "PANAMA_FINAL_2_5_6", 0, 4000, -1, -1082130432, 0 );
            }
             /* P_START_SP_CHALLENGES */ sub_48538();
            DO_SCREEN_FADE_IN( 0 );
            AUDIO_MUSIC_REQUEST_ONESHOT( "PANAMA_OS_2", 0 );
            l_U197 = 8;
             /* WRITESCRIPTLOG */ sub_442( "GA", "eCheckpointState = CP_GAMEPLAY_VISITOR_CENTER", 0 );
        }
        break;
        case 8:
        if (l_U198)
        {
             /* P_VC_CREATE_1ST_FLOOR_ENEMY */ sub_48802();
             /* P_GBL_REFRESH_PAYNE_KILLER_COUNT */ sub_50215();
             /* P_CREATE_AND_START_TIMER */ sub_50393( ref l_U370, 30000 );
             /* STARTTIMER */ sub_2807( ref l_U275 );
        }
         /* P_HANDLE_PED_XYZ_SAFETY_CHECK */ sub_50469( ref l_U367 );
         /* P_HANDLE_PED_XYZ_SAFETY_CHECK */ sub_50469( ref l_U392 );
         /* P_HANDLE_PED_XYZ_SAFETY_CHECK */ sub_50469( ref l_U506 );
         /* P_HANDLE_PED_XYZ_SAFETY_CHECK */ sub_50469( ref l_U597 );
         /* P_HANDLE_PED_XYZ_SAFETY_CHECK */ sub_50469( ref l_U622 );
         /* P_HANDLE_PED_XYZ_SAFETY_CHECK */ sub_50469( ref l_U701 );
         /* P_MUSEUM_HANDLE_STOP_ENEMIES_FROM_ENTERING_CUTSCENE_TRIGGER */ sub_50687();
         /* P_HANDLE_DISPLAY_POI */ sub_51447();
         /* P_HANDLE_MAXS_PAINKILLER_DIALOGUE */ sub_55860();
        if ((NOT l_U1101) AND (( /* F_IS_PED_ARRAY_DEFEATED */ sub_51485( ref l_U622, 0 )) AND (( /* F_IS_PED_ARRAY_DEFEATED */ sub_51485( ref l_U701, 0 )) AND ( /* F_IS_PED_ARRAY_DEFEATED */ sub_51485( ref l_U506, 0 )))))
        {
             /* STARTTIMER */ sub_2807( ref l_U1092 );
            l_U1101 = 1;
        }
        if ( /* ISTIMERDONE */ sub_4260( ref l_U1092 ))
        {
             /* P_SPEECH_PLAY_MONOLOGUE */ sub_56216( "SPAN_AMGUTR2", ref g_U1246 );
             /* WRITESCRIPTLOG */ sub_442( "CR", "Playing monologue - SPAN_AMGUTR2 - I blocked out all my questions...", 0 );
        }
        if (NOT (IS_PED_DEAD( l_U367[0] )))
        {
            if ( /* ISTIMERDONE */ sub_4260( ref l_U275 ))
            {
                 /* WRITESCRIPTLOG */ sub_442( "GA", "VIG_19_GP enemy spotting player.", 0 );
                if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )))
                {
                    REGISTER_TARGET( l_U367[0],  /* PLAYER_PED_ID */ sub_1022() );
                }
            }
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_56641( ref l_U327, 0 ))
        {
             /* P_VC_START_1ST_FLOOR_ENEMY */ sub_56776();
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_56641( ref l_U404, 0 ))
        {
             /* WRITESCRIPTLOG */ sub_442( "GA", "Player has left first floor lobby, don't spawn 1st floor backup.", 0 );
            l_U394 = 1;
             /* DISABLETIMER */ sub_57553( ref l_U395 );
        }
        if (NOT l_U394)
        {
            if ((IS_PED_DEAD( l_U367[0] )) AND (DOES_PED_EXIST( l_U367[0] )))
            {
                 /* WRITESCRIPTLOG */ sub_442( "GA", "Starting 1st floor backup timer.", 0 );
                 /* STARTTIMER */ sub_2807( ref l_U395 );
                l_U394 = 1;
            }
        }
        if ( /* ISTIMERDONE */ sub_4260( ref l_U395 ))
        {
             /* WRITESCRIPTLOG */ sub_442( "GA", "Spawning 1st floor backup.", 0 );
             /* P_VC_START_1ST_FLOOR_BACKUP */ sub_57760();
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_56641( ref l_U519, 0 ))
        {
            l_U425 = 1;
        }
        if ((l_U425 != 4) AND (l_U425 != 0))
        {
             /* P_VC_START_2ND_FLOOR_ENEMIES */ sub_58320();
        }
        if (l_U425 == 4)
        {
            if (NOT l_U541)
            {
                if (NOT (IS_PED_DEAD( l_U506[1] )))
                {
                    if (IS_PED_SHOOTING( l_U506[1] ))
                    {
                         /* P_VC_2ND_FLOOR_TETHER_DOOR_ENEMIES */ sub_61496();
                        l_U541 = 1;
                    }
                }
            }
            if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_56641( ref l_U542, 0 ))
            {
                 /* P_VC_2ND_FLOOR_ENGAGE_PLAYER_ENTERED_DISPLAY_ROOM */ sub_61764();
            }
            if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_56641( ref l_U563, 0 ))
            {
                 /* P_VC_2ND_FLOOR_ENEMIES_UNTETHER */ sub_62181();
                l_U599 = 1;
                 /* DISABLETIMER */ sub_57553( ref l_U600 );
            }
            if (NOT l_U599)
            {
                if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_51659( ref l_U506 )) == 0)
                {
                     /* WRITESCRIPTLOG */ sub_442( "GA", "Starting 2nd floor backup timer.", 0 );
                     /* STARTTIMER */ sub_2807( ref l_U600 );
                    l_U599 = 1;
                }
            }
            if ( /* ISTIMERDONE */ sub_4260( ref l_U600 ))
            {
                 /* WRITESCRIPTLOG */ sub_442( "GA", "Spawning 2nd floor backup.", 0 );
                 /* P_VC_START_2ND_FLOOR_BACKUP */ sub_62610();
            }
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_56641( ref l_U624, 0 ))
        {
             /* P_VC_START_BATHROOM_ENEMY */ sub_63111();
             /* P_CREATE_WASHROOM_PAINKILLERS */ sub_63628();
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_56641( ref l_U715, 0 ))
        {
            l_U646 = 1;
        }
        if ((l_U646 != 4) AND (l_U646 != 0))
        {
             /* P_VC_START_4TH_FLOOR_ENEMIES */ sub_63896();
        }
        if (l_U646 == 4)
        {
            if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_56641( ref l_U736, 0 ))
            {
                 /* P_VC_ACTIVATE_4TH_FLOOR_BRIDGE_ENEMIES */ sub_65087();
                 /* P_REMOVE_TETHERS_FROM_PED_ARRAY */ sub_51221( ref l_U622 );
            }
            if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_56641( ref l_U757, 0 ))
            {
                 /* WRITESCRIPTLOG */ sub_442( "GA", "Disabling tethers for first 4th floor enemies.", 0 );
                 /* P_REMOVETETHERFROMPED */ sub_65641( ref l_U713, l_U701[0] );
                 /* P_REMOVETETHERFROMPED */ sub_65641( ref l_U712, l_U701[1] );
                 /* P_REMOVETETHERFROMPED */ sub_65641( ref l_U712, l_U701[2] );
            }
            if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_56641( ref l_U778, 0 ))
            {
                 /* P_VC_ACTIVATE_4TH_FLOOR_COVER_ENEMY */ sub_65774();
            }
            if ((NOT l_U967) AND (l_U778._fU64))
            {
                if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() ))) AND (NOT (IS_PED_DEAD( l_U701[3] ))))
                {
                    if (( /* GET_DISTANCE_BETWEEN_PEDS */ sub_66147( l_U701[3],  /* PLAYER_PED_ID */ sub_1022(), 1 )) < 3.00000000)
                    {
                         /* WRITESCRIPTLOG */ sub_442( "GA", "Player too close, unlocking last enemy on bridge corner from cover.", 0 );
                        SET_PED_FLAG_LOCK_TO_COVER( l_U701[3], 0 );
                        l_U967 = 1;
                    }
                }
            }
        }
        if (l_U646 == 4)
        {
            if (NOT l_U274)
            {
                if ((((((( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_51659( ref l_U367 )) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_51659( ref l_U392 ))) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_51659( ref l_U506 ))) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_51659( ref l_U597 ))) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_51659( ref l_U701 ))) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_51659( ref l_U622 ))) <= 1)
                {
                     /* WRITESCRIPTLOG */ sub_442( "GA", "Assigning bullet cam.", 0 );
                    l_U274 = 1;
                     /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_66554( ref l_U367 );
                     /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_66554( ref l_U392 );
                     /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_66554( ref l_U506 );
                     /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_66554( ref l_U597 );
                     /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_66554( ref l_U622 );
                     /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_66554( ref l_U701 );
                }
            }
            if (NOT l_U273)
            {
                if ((((((( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_51659( ref l_U367 )) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_51659( ref l_U392 ))) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_51659( ref l_U506 ))) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_51659( ref l_U597 ))) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_51659( ref l_U701 ))) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_51659( ref l_U622 ))) <= 0)
                {
                     /* WRITESCRIPTLOG */ sub_442( "CR", "MUSIC: Playing PANAMA_FINAL Mood: PANAMA_FINAL_2", 0 );
                    AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_2", "PANAMA_FINAL_2", 0.00000000, 0, 8000, -1082130432, 0 );
                     /* WRITESCRIPTLOG */ sub_442( "CR", "Playing audio music one shot PANAMA_OS_2", 0 );
                    AUDIO_MUSIC_PLAY_ONESHOT();
                    l_U273 = 1;
                }
            }
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_56641( ref l_U968, 0 ))
        {
             /* P_VC_PRELOAD_11_03_PANAMA */ sub_67064();
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_56641( ref l_U989, 0 ))
        {
            if (IS_ARCADE_MODE_ACTIVE() == 1)
            {
                DISPLAY_ARCADE_MODE_LEVEL_END( "s_hotel" );
                l_U197 = 0;
                 /* WRITESCRIPTLOG */ sub_442( "CR", "eCheckpointState = CP_IDLE", 0 );
            }
            else
            {
                 /* STARTTIMER */ sub_2807( ref l_U1010 );
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1022(), 1 );
                SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1060(), 0 );
            }
        }
        if ( /* ISTIMERDONE */ sub_4260( ref l_U1010 ))
        {
            l_U197 = 10;
             /* WRITESCRIPTLOG */ sub_442( "GA", "eCheckpointState = CP_LOAD_11_03_PANAMA", 0 );
        }
        break;
        case 9:
        if (l_U198)
        {
             /* NIS_PRE_SETUP */ sub_2548( 1, 0, 0, 0 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )))
            {
                 /* TELEPORTPED */ sub_1127(  /* PLAYER_PED_ID */ sub_1022(), -124.67050000, -29.68563000, 19.22695000, 123.58790000 );
                 /* MAL_SETPEDVISIBLE */ sub_67888(  /* PLAYER_PED_ID */ sub_1022(), 0 );
                 /* P_RESET_MAX_ACTION_TREE */ sub_68111();
                RESET_PLAYER_INPUT_GAIT( 0 );
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( 21.34741000, 1065353216, 0 );
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( -9.84487700, 1065353216, 0 );
                TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_1022() );
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1022() );
            }
            CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAM_WAL_45_F", 1, l_U1230, l_U1233, 0, 0 );
            if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "span_Display" )))
            {
                 /* KILL_ANY_MISSION_SPEECH */ sub_68598( 0 );
                 /* P_SPEECH_PLAY_MONOLOGUE */ sub_56216( "SPAN_EXPTM", ref l_U1235 );
                FOUND_EXPLORATION_ITEM( "span_Display" );
            }
        }
        if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "EXPL_CAM", "EXPL_CAM_WAL_45_F" )) - l_U1234))
        {
             /* MAL_SETPEDVISIBLE */ sub_67888(  /* PLAYER_PED_ID */ sub_1022(), 1 );
            CAMERA_ANIMATED_STOP( 0, 0 );
             /* NIS_POST_SETUP */ sub_3118( 1, 1 );
             /* P_ENABLE_POI */ sub_54557( ref l_U1102, 1 );
            l_U197 = 8;
             /* WRITESCRIPTLOG */ sub_442( "CR", "eCheckpointState = CP_GAMEPLAY_VISITOR_CENTER", 0 );
        }
        break;
        case 10:
        if (l_U198)
        {
            if (NOT l_U968._fU64)
            {
                 /* P_VC_PRELOAD_11_03_PANAMA */ sub_67064();
            }
             /* P_MUSEUM_EARLY_CLEANUP */ sub_69035();
        }
        if ( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_35264( ref g_U1588 ))
        {
            if (CUTSCENE_IS_LOADED( "11_03_PANAMA_concat" ))
            {
                l_U197 = 11;
                 /* WRITESCRIPTLOG */ sub_442( "GA", "eCheckpointState = CP_HANDLE_11_03_PANAMA", 0 );
            }
            else if (CUTSCENE_NAMED_IS_LOADING( "11_03_PANAMA_concat" ))
            {
                 /* WRITESCRIPTLOG */ sub_442( "GA", "Waiting for cutscene 11_03_PANAMA_concat to load.", 0 );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_442( "GA", "Requesting cutscene 11_03_PANAMA_concat to load.", 0 );
                PRE_STREAM_SEAMLESS_CUTSCENE( "11_03_PANAMA_concat" );
            }
        }
        break;
        case 11:
        if (l_U198)
        {
             /* CUTSYS_CREATESTANDALONECUTSCENE */ sub_73035( ref l_U1065, "11_03_PANAMA_concat", 69630, 70264, 72316, 72984, 0, 1 );
            l_U1065._fU4 = 2;
        }
        if ( /* CUTSYS_HANDLECUTSCENE */ sub_73661( ref l_U1065 ))
        {
            l_U197 = 12;
             /* WRITESCRIPTLOG */ sub_442( "GA", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 12:
         /* WRITESCRIPTLOG */ sub_442( "SP", "eCheckpointState = CP_FINISHED", 0 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U197 = 0;
         /* WRITESCRIPTLOG */ sub_442( "SP", "eCheckpointState = CP_IDLE", 0 );
        break;
    }
    if (l_U197 != iVar2)
    {
        l_U198 = 1;
    }
    else
    {
        l_U198 = 0;
    }
    return;
}

/* P_HANDLE_IMAGEFX_POI */ void sub_13506()
{
    if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_13549( ref l_U799,  /* PLAYER_PED_ID */ sub_1022(), 0 ))
    {
         /* P_INITIALIZE_IMAGE_FX_BUTTON */ sub_13745();
    }
    if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_13549( ref l_U862,  /* PLAYER_PED_ID */ sub_1022(), 0 ))
    {
         /* P_INITIALIZE_IMAGE_FX_FIGHT */ sub_13892();
    }
    if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_13549( ref l_U883,  /* PLAYER_PED_ID */ sub_1022(), 0 ))
    {
         /* P_INITIALIZE_IMAGE_FX_STARIS */ sub_14042();
    }
    if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_13549( ref l_U904,  /* PLAYER_PED_ID */ sub_1022(), 0 ))
    {
         /* WRITESCRIPTLOG */ sub_442( "CO", "P_INITIALIZE_IMAGE_FX_STARIS", 0 );
        PLAY_IMAGEFX( "FLICKER_VIBRATE_LIGHTEN", 4, 0 );
        PLAY_IMAGEFX( "FLICKER_VIBRATE_LIGHTEN", 4, 0 );
    }
    if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_13549( ref l_U925,  /* PLAYER_PED_ID */ sub_1022(), 0 ))
    {
         /* WRITESCRIPTLOG */ sub_442( "CO", "P_INITIALIZE_IMAGE_FX_STARIS", 0 );
        PLAY_IMAGEFX( "DISTORT_INTERLACE_MID_INVRT_01", 4, 0 );
    }
    if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_13549( ref l_U946,  /* PLAYER_PED_ID */ sub_1022(), 0 ))
    {
         /* WRITESCRIPTLOG */ sub_442( "CO", "P_INITIALIZE_IMAGE_FX_STARIS", 0 );
        PLAY_IMAGEFX( "FLICKER_VIBRATE_LONG", 4, 0 );
        PLAY_IMAGEFX( "FLICKER_VIBRATE_LONG", 4, 0 );
    }
    return;
}

/* F_ISPEDINTRIGGERBOXFIRSTTIME */ void sub_13549(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 =  /* F_ISPEDINTRIGGERBOX */ sub_13619( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

/* F_ISPEDINTRIGGERBOX */ int sub_13619(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* P_INITIALIZE_IMAGE_FX_BUTTON */ void sub_13745()
{
     /* WRITESCRIPTLOG */ sub_442( "CO", "P_INITIALIZE_IMAGE_FX_BUTTON", 0 );
    PLAY_IMAGEFX( "FLICKER_VIBRATE_LIGHTEN", 4, 0 );
    return;
}

/* P_INITIALIZE_IMAGE_FX_FIGHT */ void sub_13892()
{
     /* WRITESCRIPTLOG */ sub_442( "CO", "P_INITIALIZE_IMAGE_FX_FIGHT", 0 );
    PLAY_IMAGEFX( "DOUBLE_MASK_INTERLACE_TWITCH", 4, 0 );
    return;
}

/* P_INITIALIZE_IMAGE_FX_STARIS */ void sub_14042()
{
     /* WRITESCRIPTLOG */ sub_442( "CO", "P_INITIALIZE_IMAGE_FX_STARIS", 0 );
    PLAY_IMAGEFX( "FLICKER_VIBRATE_INTERLACE_M", 4, 0 );
    PLAY_IMAGEFX( "FLICKER_VIBRATE_INTERLACE_M", 4, 0 );
    return;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_14767()
{
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_INITIALIZE_SCRIPT_DATA start", 0 );
    l_U198 = 1;
    l_U274 = 0;
    l_U273 = 0;
     /* CREATETIMER */ sub_2324( ref l_U275, 500, 1, 0 );
    l_U394 = 0;
     /* CREATETIMER */ sub_2324( ref l_U395, 20000, 1, 0 );
    l_U425 = 0;
    l_U426 = 0;
    l_U541 = 0;
    l_U599 = 0;
     /* CREATETIMER */ sub_2324( ref l_U600, 20000, 1, 0 );
    l_U646 = 0;
    l_U647 = 0;
    l_U967 = 0;
     /* CREATETIMER */ sub_2324( ref l_U1010, 1500, 1, 0 );
    l_U1019 = 0;
    l_U1020 = 0;
     /* CREATETIMER */ sub_2324( ref l_U1092, 7000, 1, 0 );
    l_U1101 = 0;
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_INITIALIZE_SCRIPT_DATA end", 0 );
    return;
}

/* P_SET_STATIC_DATA */ void sub_15052()
{
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_SET_STATIC_DATA start", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15156( ref l_U257, -95.96900000, -30.17200000, 9.63800000, -135.00000000, -2146852479, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15156( ref l_U354, -95.96900000, -30.17200000, 9.63800000, -135.00000000, -2146852479, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15156( ref l_U379, -94.48000000, -29.28000000, 10.08000000, 90.00000000, 1954988170, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15156( ref l_U427[0], -108.75000000, -29.03000000, 12.85000000, -167.96000000, -1042782621, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15156( ref l_U427[1], -117.00000000, -32.05000000, 12.85000000, 0.00000000, 202055197, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15156( ref l_U427[2], -118.93000000, -32.87000000, 12.85000000, 0.00000000, 878408885, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15156( ref l_U427[3], -125.03000000, -40.42000000, 12.85000000, 0.00000000, -1736324039, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15156( ref l_U427[4], -114.90000000, -37.85000000, 12.85000000, -167.96000000, 751080381, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15156( ref l_U427[5], -104.26000000, -36.40000000, 12.85000000, -167.96000000, -552332044, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15156( ref l_U584, -103.20000000, -33.20000000, 13.17000000, -179.84000000, 1109101776, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15156( ref l_U609, -95.16000000, -30.88000000, 16.45000000, 114.30000000, -494023735, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15156( ref l_U648[0], -108.26000000, -29.50000000, 19.25000000, -87.70000000, 1181282166, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15156( ref l_U648[1], -108.86000000, -38.93000000, 19.62000000, 0.00000000, 1369736713, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15156( ref l_U648[2], -106.69000000, -39.68000000, 19.62000000, 0.00000000, -790815011, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15156( ref l_U648[3], -103.46000000, -40.59000000, 19.23000000, 114.30000000, -905651490, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15156( ref l_U1021[0], -115.82740000, -33.91691000, 22.66913000, 0.00000000, -559761207, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15156( ref l_U1021[1], -115.67540000, -30.15675000, 22.67002000, 0.00000000, 212786871, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15156( ref l_U1021[2], -121.87000000, -35.37000000, 22.96000000, -90.00000000, 434858133, 26, 0, 0, 0, 0 );
     /* P_CREATETRIGGERBOX */ sub_16120( ref l_U200, "TRIGGER_MUSEUM_CHECKPOINT_ZONE", -126.87000000, -31.99000000, -14.38000000, 164.17000000, 108.55000000, 43.62000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16120( ref l_U327, "Start Vig 19 Rebel", -101.00000000, -32.96000000, 8.06000000, 6.30000000, 2.15000000, 3.11000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16120( ref l_U404, "TRIGGER_ENTERED_HALLWAY", -99.88000000, -32.96000000, 8.06000000, 6.30000000, 2.15000000, 3.11000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16120( ref l_U519, "TRIGGER_1ST_FLOOR_STAIRS_MID", -94.98000000, -29.52000000, 9.54000000, 4.50000000, 4.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16120( ref l_U542, "TRIGGER_2NDFLOOR_DISPLAY_ENTER", -121.73000000, -36.86000000, 12.74000000, 12.00000000, 3.00000000, 3.11000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16120( ref l_U563, "TRIGGER_2NDFLOOR_DISPLAY_EXIT", -106.55000000, -38.51000000, 12.74000000, 5.00000000, 3.00000000, 3.11000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16120( ref l_U624, "tb_VC_StartBathroomEnemy", -103.29000000, -35.17000000, 12.85000000, 4.00000000, 1.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16120( ref l_U715, "TRIGGER_BAIT_REBEL", -97.91000000, -29.36000000, 15.72000000, 7.12000000, 5.00000000, 6.24000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16120( ref l_U736, "TRIGGER_3RD_FLOOR_STAIR_EXIT", -103.86000000, -29.78000000, 19.14000000, 5.55000000, 3.06000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16120( ref l_U757, "TRIGGER_JUNGLE_ROOM_REMOVE_TETHERS", -122.53000000, -32.86000000, 19.16000000, 13.24000000, 3.43000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16120( ref l_U778, "tb_VC_Start4thFloorHallwayCoverEnemy", -117.41000000, -37.80000000, 19.24000000, 2.98000000, 5.86000000, 2.48000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16120( ref l_U285, "tb_VCTopStairsMid", -95.90000000, -42.26000000, 21.26000000, 3.59000000, 7.12000000, 2.63000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16120( ref l_U306, "tb_VCTopStairsBottom", -102.75000000, -42.26000000, 19.23000000, 3.59000000, 7.12000000, 2.63000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16120( ref l_U968, "tb_VC_PreLoad1103", -95.90000000, -42.26000000, 21.26000000, 3.59000000, 7.12000000, 2.63000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16120( ref l_U989, "tb_VC_1103_Start", -109.36000000, -41.80000000, 22.59000000, 12.64000000, 7.03000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16120( ref l_U1188, "Trigger_POIDisplay_Activate", -126.00000000, -30.90000000, 19.00000000, 4.50000000, 4.50000000, 2.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16120( ref l_U1209, "Trigger_POIDisplay_Radius", -126.00000000, -30.90000000, 19.00000000, 6.00000000, 6.00000000, 2.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16120( ref l_U799, "tbImageFX_VC_01", -109.57700000, -37.46160000, 8.10295000, 3.50000000, 3.00000000, 5.00000000, 0.00000000, 0.00000000, -24.06530000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16120( ref l_U820, "tbImageFX_VC_02", -108.30900000, -33.34650000, 8.10295000, 15.00000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16120( ref l_U841, "tbImageFX_VC_03", -111.65500000, -26.01380000, 8.10295000, 7.00000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16120( ref l_U862, "tbImageFX_VC_04", -100.06900000, -32.65440000, 8.10295000, 7.00000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16120( ref l_U883, "tbImageFX_VC_05", -103.53700000, -29.00870000, 11.74870000, 7.00000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16120( ref l_U904, "tmImageFX_STAIRS01", -100.24200000, -33.20210000, 12.47020000, 2.00000000, 2.50000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16120( ref l_U925, "tmImageFX_STAIRS02", -100.96100000, -29.37700000, 17.69550000, 2.00000000, 3.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16120( ref l_U946, "tmImageFX_STAIRS03", -96.62440000, -44.32550000, 21.04400000, 2.00000000, 3.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_18256( ref l_U369, "TETHER_MUSEUM_LOBBY", -110.26000000, -38.57000000, 8.94000000, 11.08000000, 14.44000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_18256( ref l_U540, "TETHER_DISPLAY_ROOM", -121.67000000, -35.30000000, 12.80000000, 11.58000000, 14.02000000, 2.66000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_18256( ref l_U712, "TETHER_JUNGLE_BRIDGE", -110.26000000, -38.75000000, 18.95000000, 11.00000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_18256( ref l_U713, "TETHER_JUNGLE_EXHIBIT", -121.81000000, -33.18000000, 19.19000000, 13.00000000, 18.00000000, 3.85000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_18256( ref l_U714, "tether_VCTopStairsBottom", -103.09000000, -41.58000000, 19.23000000, 2.92000000, 8.44000000, 3.20000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_18256( ref l_U645, "TETHER_OUTSIDE_BATHROOM", -94.50000000, -32.75000000, 16.00000000, 3.50000000, 10.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATEPOISTRUCTTRIGGER */ sub_18771( ref l_U1102, 2, 0.00000000, 0.00000000, 0.00000000, l_U1188, l_U1209, 1, 0 );
     /* P_SET_INTERACTIVE_TEXT */ sub_19729( ref l_U1102, 30, "POI_PAN_DISPLAY" );
     /* P_SET_POI_FORCE_WALK */ sub_19939( ref l_U1102, 0 );
     /* P_SET_POI_REUSABLE */ sub_19994( ref l_U1102, 1 );
     /* P_SET_POI_AVAILABLE */ sub_20047( ref l_U1102, 0 );
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_SET_STATIC_DATA end", 0 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_15156(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATETRIGGERBOX */ void sub_16120(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATETETHERBOX */ void sub_18256(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATEPOISTRUCTTRIGGER */ void sub_18771(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47, unknown uParam48)
{
     /* P_CREATEBLANKPOISTRUCT */ sub_18815( iParam0, uParam47 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU80 = 1;
    iParam0->_fU116 = {uParam5};
    iParam0->_fU88 = 1;
    iParam0->_fU216 = {uParam26};
    iParam0->_fU320 = uParam48;
    iParam0->_fU20 = {uParam2};
     /* P_CREATEPOIGLINT */ sub_19206( iParam0 );
    return;
}

/* P_CREATEBLANKPOISTRUCT */ void sub_18815(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

/* P_CREATEPOIGLINT */ void sub_19206(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
     /* P_INITPOIGLINT */ sub_19304( iParam0 );
    return;
}

/* P_INITPOIGLINT */ void sub_19304(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                 /* P_ENABLEPOIGLINT */ sub_19380( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                 /* P_ENABLEPOIGLINT */ sub_19380( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                 /* P_ENABLEPOIGLINT */ sub_19380( iParam0, 1 );
            }
            else
            {
                 /* P_ENABLEPOIGLINT */ sub_19380( iParam0, 0 );
            };;;
        }
        else
        {
             /* P_ENABLEPOIGLINT */ sub_19380( iParam0, 0 );
        }
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_19380( iParam0, 0 );
    }
    return;
}

/* P_ENABLEPOIGLINT */ void sub_19380(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

/* P_SET_INTERACTIVE_TEXT */ void sub_19729(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
     /* P_INITINTERACTIVETEXT */ sub_19785( iParam0 );
    return;
}

/* P_INITINTERACTIVETEXT */ void sub_19785(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

/* P_SET_POI_FORCE_WALK */ void sub_19939(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

/* P_SET_POI_REUSABLE */ void sub_19994(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

/* P_SET_POI_AVAILABLE */ void sub_20047(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
     /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_20111( iParam0 );
    return;
}

/* P_UPDATEINTERACTIONTEXTAVAILABLE */ void sub_20111(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if (( /* F_ISACTIONINGAVAILABLE */ sub_20207( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if (( /* F_ISACTIONINGAVAILABLE */ sub_20207( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

/* F_ISACTIONINGAVAILABLE */ int sub_20207(int iParam0)
{
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1060() )) == 0))
    {
        if (((IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_1022() )) == 1) || (((IS_PED_GETTING_UP(  /* PLAYER_PED_ID */ sub_1022() )) == 1) || (((IS_PED_PICKING_UP_PICKUP(  /* PLAYER_PED_ID */ sub_1022() )) == 1) || (((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_1022() )) == 1) || (((IS_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1022() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1022() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

/* P_INITIALIZE_SP_CHALLENGES */ void sub_20555()
{
     /* WRITESCRIPTLOG */ sub_442( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U1245 = 0;
    l_U1246 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( -1343685014 )))
    {
         /* WRITESCRIPTLOG */ sub_442( "CCB", "Creating the PanamaComplete script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( -1343685014 );
        DISPLAYF( "[CCB] ### The current PanamaComplete value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( -1343685014 ) );
        if (SCRIPT_VAR_HASH_EXISTS( -1343685014 ))
        {
             /* WRITESCRIPTLOG */ sub_442( "CCB", "The PanamaComplete script variable was successfully created...", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_442( "CCB", "The PanamaComplete script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_442( "CCB", "The PanamaComplete script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( -1343685014, 0 );
        DISPLAYF( "[CCB] ### The current PanamaComplete value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( -1343685014 ) );
    }
    if (NOT (SCRIPT_VAR_HASH_EXISTS( 1701971384 )))
    {
         /* WRITESCRIPTLOG */ sub_442( "CCB", "Creating the OldPainless script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( 1701971384 );
        DISPLAYF( "[CCB] ### The current OldPainless value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( 1701971384 ) );
        if (SCRIPT_VAR_HASH_EXISTS( 1701971384 ))
        {
             /* WRITESCRIPTLOG */ sub_442( "CCB", "The OldPainless script variable was successfully created...", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_442( "CCB", "The OldPainless script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_442( "CCB", "The OldPainless script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( 1701971384, 0 );
        DISPLAYF( "[CCB] ### The current OldPainless value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( 1701971384 ) );
    }
    return;
}

/* P_REQUEST_VC_PERSISTENT_ASSETS */ void sub_21770()
{
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_REQUEST_VC_PERSISTENT_ASSETS start", 0 );
     /* P_GLOBAL_LOAD_PISTOL_ANIMS */ sub_21863();
     /* P_GLOBAL_LOAD_RIFLE_ANIMS */ sub_25306();
     /* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ sub_26061( ref l_U179, ref g_U1588 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT_ARRAY */ sub_28140( ref l_U191, ref g_U1829 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "LEVEL_S_PAN_CP_07", ref g_U1975 );
     /* P_STREAMREQ_AUDIO_BANK_INSERT */ sub_30236( "SCRIPT_MISSION\S_PANA_VISITORS_CENTER", ref g_U3026 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "EXPL_CAM", ref g_U1975 );
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_REQUEST_VC_PERSISTENT_ASSETS end", 0 );
    return;
}

/* P_GLOBAL_LOAD_PISTOL_ANIMS */ void sub_21863()
{
     /* WRITESCRIPTLOG */ sub_442( "CR", "P_GLOBAL_LOAD_PISTOL_ANIMS - Start", 0 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "NPC_PSTL_CORE", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "NPC_PSTL_COVER", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "NPC_PSTL_COVER_ENTER", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "NPC_PSTL_COVER_RELOAD", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "NPC_PSTL_DODGE", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "NPC_PSTL_FLAVOR", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "NPC_PSTL_FULLBODY", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "NPC_PSTL_RELOAD", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "NPC_PSTL_SEARCH", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "NPC_PSTL_STAIRS", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "NPC_PSTL_REACT", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "AMED_PSTL_PRONE", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "PLGE_PSTL_CROUCH", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "PLGE_PSTL_CORE", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "PLGE_PSTL_CORE_RELOAD", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "PLGE_PSTL_HANDSIG", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "PLGE_PSTL_ACTIONS", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "PLGE_PSTL_KNEE", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "PLGE_PSTL_COVER", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "PLGE_PSTL_REACT", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "PLGE_PSTL_COVER_EXIT", ref g_U1975 );
     /* WRITESCRIPTLOG */ sub_442( "CR", "P_GLOBAL_LOAD_PISTOL_ANIMS - End", 0 );
    return;
}

/* P_STREAMREQ_ANIM_DICT_INSERT */ void sub_21970(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ sub_22022( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ANIM_DICT asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22274( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ int sub_22022(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22274( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22274( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ANIM_DICT asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22274( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_23845( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22274( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ANIM_DICT asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ANIM_DICT: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
             /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22274( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ void sub_22274(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_22336( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ int sub_22336(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID is active: {} ###", 1, 513, (uParam1^)[I] );
                if ((uParam1^)[I] == iParam0)
                {
                    DISPLAYF( "The THREADID was already requested by this thread!!!", 0 );
                    DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                    (uParam1^)[I] = nil;
                    Result = I;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The THREADID index was requested by another thread!!! {} ###", 1, 513, I );
                }
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is NOT active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

/* P_STREAMREQ_THREADID_RESET */ void sub_23845(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

/* P_GLOBAL_LOAD_RIFLE_ANIMS */ void sub_25306()
{
     /* WRITESCRIPTLOG */ sub_442( "CR", "P_GLOBAL_LOAD_RIFLE_ANIMS - Start", 0 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "NPC_RIFLE_CORE", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "NPC_RIFLE_COVER", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "NPC_RIFLE_COVER_ENTER", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "NPC_RIFLE_COVER_RELOAD", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "NPC_RIFLE_DODGE", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "NPC_RIFLE_FLAVOR", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "NPC_RIFLE_FULLBODY", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "NPC_RIFLE_RELOAD", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "NPC_RIFLE_SEARCH", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "NPC_RIFLE_STAIRS", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "NPC_RIFLE_REACT", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "AMED_RIFL_PRONE", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "PLGE_RIFLE_CROUCH", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "PLGE_RIFLE_CORE", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "PLGE_RIFLE_CORE_RELOAD", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "PLGE_RIFLE_HANDSIG", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "PLGE_RIFLE_ACTIONS", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "PLGE_RIFLE_KNEE", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "PLGE_RIFLE_COVER", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "PLGE_RIFLE_REACT", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_21970( "PLGE_RIFLE_COVER_EXIT", ref g_U1975 );
     /* WRITESCRIPTLOG */ sub_442( "CR", "P_GLOBAL_LOAD_RIFLE_ANIMS - End", 0 );
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ void sub_26061(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_26134( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT */ void sub_26134(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 =  /* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ sub_26201( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar4 );
            PRINTNL();
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_26459( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Inserting MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ int sub_26201(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_26459( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is loading: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_26459( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                     /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_26459( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_23845( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being removed: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_26459( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_26459( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ void sub_26459(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_22336( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT_ARRAY */ void sub_28140(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_28214( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT */ void sub_28214(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ sub_28268( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_28529( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ int sub_28268(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_28529( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is loading: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_28529( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The WEAPON_TYPE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_28529( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_23845( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being removed: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_28529( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            DISPLAYF( "The WEAPON_TYPE asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_28529( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ void sub_28529(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_22336( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_AUDIO_BANK_INSERT */ void sub_30236(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_AUDIO_BANK_IS_INDEX_AVAILABLE */ sub_30289( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing AUDIO_BANK asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
         /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_30544( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_AUDIO_BANK_IS_INDEX_AVAILABLE */ int sub_30289(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_30544( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_30544( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    DISPLAYF( "[CCB] ### The AUDIO_BANK is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The AUDIO_BANK asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_30544( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The AUDIO_BANK is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_23845( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_30544( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            DISPLAYF( "[CCB] ### The AUDIO_BANK is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The AUDIO_BANK is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing AUDIO_BANK: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
             /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_30544( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ void sub_30544(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_22336( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_REQUEST_VC_NONPERSISTENT_ASSETS */ void sub_32206()
{
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_REQUEST_VC_NONPERSISTENT_ASSETS start", 0 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_32314( -1079385083, ref g_U1878 );
    AUDIO_MUSIC_REQUEST_ONESHOT( "PANAMA_OS_4", 0 );
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_REQUEST_VC_NONPERSISTENT_ASSETS end", 0 );
    return;
}

/* P_STREAMREQ_ISEQ_INSERT */ void sub_32314(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 =  /* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ sub_32375( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar12 );
            PRINTNL();
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar4 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
             /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_32625( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

/* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ int sub_32375(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_32625( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is loading: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_32625( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                        DISPLAYF( "The ISEQ asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_32625( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loading: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_32625( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### Re-requesting ISEQ: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_23845( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_23845( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being removed: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_32625( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar5 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_32625( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ISEQ_THREADID_SET_ID */ void sub_32625(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_22336( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_LOADED */ int sub_35264(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be requested: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to load: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be removed: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ int sub_35661(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be requested: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to load: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be removed: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ANIM_DICT_IS_LOADED */ int sub_36063(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be requested: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to load: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be removed: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_AUDIO_BANK_IS_LOADED */ int sub_36454(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* HAS_SAVEFILE_LOADED */ int sub_37095(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_442( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_8789( uParam0,  /* PLAYER_PED_ID */ sub_1022() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* P_VC_DETECT_PAYNEKILLERS_ON_MAIN_FLOOR */ void sub_37759()
{
    int I;

     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_DETECT_PAYNEKILLERS_ON_MAIN_FLOOR start", 0 );
    for ( I = 0; I < g_U3517; I++ )
    {
        if (DOES_PLACEMENT_EXIST( g_U3517[I] ))
        {
            if (HAS_PLACEMENT_BEEN_COLLECTED( g_U3517[I] ))
            {
                l_U350[I] = 1;
            }
        }
        else
        {
            l_U350[I] = 1;
        }
    }
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_DETECT_PAYNEKILLERS_ON_MAIN_FLOOR end", 0 );
    return;
}

/* P_CREATE_PLACEMENTS */ void sub_38026()
{
     /* WRITESCRIPTLOG */ sub_442( "CR", "P_CREATE_PLACEMENTS start", 0 );
    if ((NOT (DOES_PLACEMENT_EXIST( g_U3517[0] ))) AND (NOT l_U350[0]))
    {
        g_U3517[0] =  /* CREATEPLACEMENT */ sub_38173( -4072149, -119.10000000, -28.85000000, 9.93500000, 0.00000000, 0.00000000, 185.25000000, 0, 0, 1, 1119092736 );
        if (DOES_PLACEMENT_EXIST( g_U3517[0] ))
        {
            ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U3517[0], ref g_U3416 );
        }
    }
    if ((NOT (DOES_PLACEMENT_EXIST( g_U3517[1] ))) AND (NOT l_U350[1]))
    {
        g_U3517[1] =  /* CREATEPLACEMENT */ sub_38173( -4072149, -119.00000000, -28.90000000, 9.93500000, 0.00000000, 0.00000000, 185.25000000, 0, 0, 1, 1119092736 );
        if (DOES_PLACEMENT_EXIST( g_U3517[1] ))
        {
            ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U3517[1], ref g_U3416 );
        }
    }
    if ((NOT (DOES_PLACEMENT_EXIST( g_U3517[2] ))) AND (NOT l_U350[2]))
    {
        g_U3517[2] =  /* CREATEPLACEMENT */ sub_38173( -4072149, -108.40000000, -37.68000000, 9.71000000, 0.00000000, 0.00000000, 1.00000000, 0, 1, 1, 1119092736 );
        if (DOES_PLACEMENT_EXIST( g_U3517[2] ))
        {
            ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U3517[2], ref g_U3408 );
        }
    }
     /* P_CREATE_S_PAN_GG_SS_03 */ sub_38646();
     /* P_CREATE_S_PAN_GG_AK_03 */ sub_39452();
    return;
}

/* CREATEPLACEMENT */ void sub_38173(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a placement to exist: {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return Result;
}

/* P_CREATE_S_PAN_GG_SS_03 */ void sub_38646()
{
     /* WRITESCRIPTLOG */ sub_442( "CO", "P_CREATE_S_PAN_GG_SS_03", 0 );
     /* P_CREATECOLLECTIBLESTRUCT */ sub_38773( ref g_U755, g_U829, 1352763079, -2029934837, -128.79000000, -24.16000000, 8.04000000, 0.00000000, 0.00000000, 1.00000000, "" );
     /* P_CREATECOLLECTIBLE */ sub_38930( ref g_U755 );
    return;
}

/* P_CREATECOLLECTIBLESTRUCT */ void sub_38773(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_442( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* P_CREATECOLLECTIBLE */ void sub_38930(int iParam0)
{
     /* WRITESCRIPTLOG */ sub_442( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_39013( iParam0->_fU12 )) == 1)
        {
             /* WRITESCRIPTLOG */ sub_442( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_442( "CO", "has never been collected.", 0 );
        }
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_39013( iParam0->_fU12 )) == 0)
        {
             /* CLEANPLACEMENT */ sub_8000( iParam0->_fU0 );
            iParam0->_fU0 =  /* CREATEPLACEMENT */ sub_38173( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                     /* WRITESCRIPTLOG */ sub_442( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_442( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ int sub_39013(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

/* P_CREATE_S_PAN_GG_AK_03 */ void sub_39452()
{
     /* WRITESCRIPTLOG */ sub_442( "CO", "P_CREATE_S_PAN_GG_AK_03", 0 );
     /* P_CREATECOLLECTIBLESTRUCT */ sub_38773( ref g_U809, g_U831, 1810446104, 843757133, -107.13000000, -23.73000000, 11.07000000, 1.50000000, 0.00000000, 1.00000000, "" );
     /* P_CREATECOLLECTIBLE */ sub_38930( ref g_U809 );
    return;
}

/* P_GLOBAL_CREATE_MUSEUM_GATE_OBJECTS */ void sub_39609()
{
    int I;

     /* WRITESCRIPTLOG */ sub_442( "CCB", "P_GLOBAL_CREATE_MUSEUM_GATE_OBJECTS", 0 );
    for ( I = 0; I <= (g_U4160 - 1); I++ )
    {
        if (NOT (DOES_OBJECT_EXIST( g_U4160[I] )))
        {
             /* P_GLOBAL_SPAWN_MUSEUM_GATE_OBJECT */ sub_39753( ref g_U4160, I );
             /* P_GLOBAL_SETUP_MUSEUM_GATE_OBJECT */ sub_40639( ref g_U4160, I );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_442( "CCB", "The poiMuseumGateObject_ object was already created.", 0 );
        }
    }
    return;
}

/* P_GLOBAL_SPAWN_MUSEUM_GATE_OBJECT */ void sub_39753(unknown uParam0, int iParam1)
{
    if (NOT (DOES_OBJECT_EXIST( g_U4160[iParam1] )))
    {
         /* WRITESCRIPTLOG */ sub_442( "CCB", "Creating oiMuseumGateObject_:", 0 );
        PRINTINT( iParam1 );
        PRINTNL();
        if (iParam1 == 0)
        {
            (uParam0^)[iParam1] =  /* CREATEOBJECTNOOFFSET */ sub_39930( 1942109258, -104.74700000, -32.02020000, 10.14970000, 0.00000000, 0.00000000, 180.00000000, 0, 0, 0 );
        }
        else if (iParam1 == 1)
        {
            (uParam0^)[iParam1] =  /* CREATEOBJECTNOOFFSET */ sub_39930( -1324244056, -109.36000000, -35.89300000, 9.85600000, 0.00000000, 0.00000000, 176.05900000, 0, 0, 0 );
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_442( "CCB", "The oiMuseumGateObject_ object was already created.", 0 );
    }
    return;
}

/* CREATEOBJECTNOOFFSET */ void sub_39930(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_40063( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* LOADMODEL */ void sub_40063(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_10890( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_GLOBAL_SETUP_MUSEUM_GATE_OBJECT */ void sub_40639(unknown uParam0, unknown uParam1)
{
    if (DOES_OBJECT_EXIST( (uParam0^)[uParam1] ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( (uParam0^)[uParam1], ref g_U3424 );
        FREEZE_OBJECT_POSITION( (uParam0^)[uParam1], 1 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_442( "CCB", "The oiTempObject_ object is NOT valid!!!", 0 );
    }
    return;
}

/* P_VC_CREATE_ZIPLINE_OBJECTS */ void sub_40896()
{
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_CREATE_ZIPLINE_OBJECTS start", 0 );
    l_U222[0] =  /* CREATEOBJECTNOOFFSET */ sub_39930( -1096620032, -109.00000000, 0.00000000, 15.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U222[0] ))
    {
        FREEZE_OBJECT_POSITION( l_U222[0], 1 );
    }
    l_U222[1] =  /* CREATEOBJECTNOOFFSET */ sub_39930( 138784803, -108.03600000, -21.47000000, 11.61300000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U222[1] ))
    {
        FREEZE_OBJECT_POSITION( l_U222[1], 1 );
    }
    l_U222[2] =  /* CREATEOBJECTNOOFFSET */ sub_39930( 1243768211, -109.71700000, 20.35620000, 17.49950000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U222[2] ))
    {
        FREEZE_OBJECT_POSITION( l_U222[2], 1 );
    }
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_CREATE_ZIPLINE_OBJECTS end", 0 );
    return;
}

/* P_GLOBAL_CREATE_LOCKS */ void sub_41303(int iParam0, int iParam1)
{
     /* WRITESCRIPTLOG */ sub_442( "MF", "P_GLOBAL_CREATE_LOCKS start", "###" );
     /* CLEANOBJECT */ sub_7859( g_U4167 );
    g_U4167 =  /* CREATEOBJECTNOOFFSET */ sub_39930( g_U1583, g_U4168, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U4167 ))
    {
        FREEZE_OBJECT_POSITION( g_U4167, 1 );
        if (iParam0 == 1)
        {
            PLAY_OBJECT_ANIM( g_U4167, "P_LockGate", "pa_doors", 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U4167, "P_LockGate", "pa_doors", 1.00000000 );
        }
    }
     /* CLEANOBJECT */ sub_7859( g_U4171 );
    g_U4171 =  /* CREATEOBJECTNOOFFSET */ sub_39930( g_U1583, g_U4172, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( g_U4171 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U4171, 1 );
        if (iParam1 == 1)
        {
            PLAY_OBJECT_ANIM( g_U4171, "P_LockGate", "pa_doors", 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U4171, "P_LockGate", "pa_doors", 1.00000000 );
        }
    }
     /* WRITESCRIPTLOG */ sub_442( "MF", "P_GLOBAL_CREATE_LOCKS end", "###" );
    return;
}

/* P_SWAP_SECURITY_DOOR_BUTTON */ void sub_41784(boolean bParam0)
{
     /* WRITESCRIPTLOG */ sub_442( "CCB", "P_SWAP_SECURITY_DOOR_BUTTON", 0 );
     /* CLEANOBJECT */ sub_7859( g_U4160[1] );
    if (bParam0)
    {
        g_U4160[1] =  /* CREATEOBJECTNOOFFSET */ sub_39930( -1199034430, -109.36000000, -35.89300000, 9.85600000, 0.00000000, 0.00000000, 176.05900000, 0, 0, 0 );
    }
    else
    {
        g_U4160[1] =  /* CREATEOBJECTNOOFFSET */ sub_39930( -1324244056, -109.36000000, -35.89300000, 9.85600000, 0.00000000, 0.00000000, 176.05900000, 0, 0, 0 );
    }
    if (DOES_OBJECT_EXIST( g_U4160[1] ))
    {
        FREEZE_OBJECT_POSITION( g_U4160[1], 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U4160[1], ref g_U3408 );
    }
    return;
}

/* NIS_CREATE_STATIC_CAM */ void sub_42124(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_2324( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U703, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* P_GLOBAL_MUSEUM_GATE_OPEN */ void sub_42365(boolean bParam0)
{
     /* WRITESCRIPTLOG */ sub_442( "CCB", "P_GLOBAL_MUSEUM_GATE_OPEN", 0 );
    if (DOES_OBJECT_EXIST( g_U4160[0] ))
    {
        PLAY_OBJECT_ANIM( g_U4160[0], "P_MI_GATE_H", "PA_DOORS", 0.00000000, 0, 1 );
        if (bParam0)
        {
            SET_OBJECT_ANIM_CURRENT_TIME( g_U4160[0], "P_MI_GATE_H", "PA_DOORS", 1.00000000 );
        }
        else
        {
            SET_OBJECT_ANIM_CURRENT_TIME( g_U4160[0], "P_MI_GATE_H", "PA_DOORS", 0.00000000 );
        }
        SET_OBJECT_ANIM_SPEED( g_U4160[0], "P_MI_GATE_H", "PA_DOORS", 1.00000000 );
    }
    return;
}

/* P_INITIALIZE_IMAGE_FX_POI */ void sub_42666()
{
     /* WRITESCRIPTLOG */ sub_442( "CO", "P_INITIALIZE_IMAGE_FX_POI", 0 );
    PLAY_IMAGEFX( "FLICKER_VIBRATE_ZOOM_01", 4, 1 );
    PLAY_IMAGEFX( "FLICKER_VIBRATE_ZOOM_01", 4, 1 );
    return;
}

/* NIS_IS_SHOT_FINISHED */ int sub_43347(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || ( /* ISTIMERDONE */ sub_4260( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || ( /* ISTIMERDONE */ sub_4260( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_43576(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_442( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_442( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_12055( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_43867( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_44344( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_44344( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_44604( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_44344( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_44604( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_44604( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_44344( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_44604( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_44604( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_44604( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_44344( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_44604( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_44604( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_44604( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_44604( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_46184( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_442( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_43867(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_9070( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_442( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_442( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_44344(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_44604(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_46184(int iParam0)
{
     /* WRITE_STRING */ sub_10890( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_46272( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_46349( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_46349( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_46349( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_46518( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_46518( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_46518( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_46518( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_46518( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_46518( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_46518( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_46518( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_46518( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_46518( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_46518( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_46349( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_46518( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_46518( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_46518( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_46349( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_47219( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_46518( iParam0->_fU52 );
     /* WRITE_STRING */ sub_10890( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_46518( iParam0->_fU96 );
     /* WRITE_STRING */ sub_10890( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_46518( iParam0->_fU100 );
     /* WRITE_STRING */ sub_10890( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_46518( iParam0->_fU104 );
     /* WRITE_STRING */ sub_10890( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_46518( iParam0->_fU108 );
     /* WRITE_STRING */ sub_10890( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_46518( iParam0->_fU112 );
     /* WRITE_STRING */ sub_10890( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_46518( iParam0->_fU116 );
     /* WRITE_STRING */ sub_10890( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_46518( iParam0->_fU120 );
     /* WRITE_STRING */ sub_10890( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_46518( iParam0->_fU124 );
     /* WRITE_STRING */ sub_10890( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_46518( iParam0->_fU128 );
     /* WRITE_STRING */ sub_10890( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_46518( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_46518( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_46518( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_46272(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_46349(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_46518(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_47219(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* NIS_RETURN_TO_GAMEPLAY_CAM */ void sub_48204(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

/* P_START_SP_CHALLENGES */ void sub_48538()
{
     /* WRITESCRIPTLOG */ sub_442( "CCB", "P_START_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_442( "CCB", "Starting the Panama_Museum context...", 0 );
    START_CONTEXT( "Panama_Museum" );
    return;
}

/* P_VC_CREATE_1ST_FLOOR_ENEMY */ void sub_48802()
{
     /* WRITESCRIPTLOG */ sub_442( "CR", "P_VC_CREATE_1ST_FLOOR_ENEMY start", 0 );
    l_U367[0] =  /* CREATEPED */ sub_48893( ref l_U354 );
     /* F_GIVEPEDWEAPON */ sub_11281( l_U367[0], 1308526797, 25000, 0, 0 );
     /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_49663( ref l_U367[0], "AIT_EXPERT", 1.00000000, 40.00000000 );
     /* P_TETHERPED */ sub_49798( ref l_U369, l_U367[0], 3 );
     /* P_DEACTIVATEPED */ sub_49891( l_U367[0] );
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_50032( ref l_U367, "pi_VC_1stFloorEnemy" );
     /* WRITESCRIPTLOG */ sub_442( "CR", "P_VC_CREATE_1ST_FLOOR_ENEMY end", 0 );
    return;
}

/* CREATEPED */ void sub_48893(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_40063( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_49384( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_49485( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_49384(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_49485(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* P_SET_PED_TEMPLATE_AND_RANGES */ void sub_49663(unknown uParam0, unknown uParam1, float fParam2, float fParam3)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    return;
}

/* P_TETHERPED */ void sub_49798(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

/* P_DEACTIVATEPED */ void sub_49891(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

/* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ void sub_50032(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

/* P_GBL_REFRESH_PAYNE_KILLER_COUNT */ void sub_50215()
{
     /* WRITESCRIPTLOG */ sub_442( "CR", "P_GBL_REFRESH_PAYNE_KILLER_COUNT - START", 0 );
    g_U4062 = GET_PAYNEKILLER_AMT();
     /* WRITESCRIPTLOG */ sub_442( "CR", "P_GBL_REFRESH_PAYNE_KILLER_COUNT - END", 0 );
    return;
}

/* P_CREATE_AND_START_TIMER */ void sub_50393(unknown uParam0, unknown uParam1)
{
     /* CREATETIMER */ sub_2324( uParam0, uParam1, 1, 0 );
     /* STARTTIMER */ sub_2807( uParam0 );
    return;
}

/* P_HANDLE_PED_XYZ_SAFETY_CHECK */ void sub_50469(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            if (NOT ( /* F_ISPEDINTRIGGERBOX */ sub_13619( (uParam0^)[I], l_U200 )))
            {
                 /* WRITESCRIPTLOG */ sub_442( "CCB", "Cleaning piTempPed ped!!!", 0 );
                 /* CLEANPED */ sub_7586( (uParam0^)[I] );
            }
        }
    }
    return;
}

/* P_MUSEUM_HANDLE_STOP_ENEMIES_FROM_ENTERING_CUTSCENE_TRIGGER */ void sub_50687()
{
    if (NOT l_U284)
    {
        if ( /* F_ISPLAYERINTRIGGERBOX */ sub_50776( l_U285 ))
        {
             /* WRITESCRIPTLOG */ sub_442( "GA", "Player is going up to the cutscene trigger, stop the enemies from following.", 0 );
             /* P_ADD_TETHER_TO_PED_ARRAY */ sub_50937( ref l_U367, l_U714, 1 );
             /* P_ADD_TETHER_TO_PED_ARRAY */ sub_50937( ref l_U392, l_U714, 1 );
             /* P_ADD_TETHER_TO_PED_ARRAY */ sub_50937( ref l_U506, l_U714, 1 );
             /* P_ADD_TETHER_TO_PED_ARRAY */ sub_50937( ref l_U597, l_U714, 1 );
             /* P_ADD_TETHER_TO_PED_ARRAY */ sub_50937( ref l_U701, l_U714, 1 );
             /* P_ADD_TETHER_TO_PED_ARRAY */ sub_50937( ref l_U622, l_U714, 1 );
            l_U284 = 1;
        }
    }
    else if ( /* F_ISPLAYERINTRIGGERBOX */ sub_50776( l_U306 ))
    {
         /* WRITESCRIPTLOG */ sub_442( "GA", "Player came back down stairs, release enemies restricted from moving upstairs.", 0 );
         /* P_REMOVE_TETHERS_FROM_PED_ARRAY */ sub_51221( ref l_U367 );
         /* P_REMOVE_TETHERS_FROM_PED_ARRAY */ sub_51221( ref l_U392 );
         /* P_REMOVE_TETHERS_FROM_PED_ARRAY */ sub_51221( ref l_U506 );
         /* P_REMOVE_TETHERS_FROM_PED_ARRAY */ sub_51221( ref l_U597 );
         /* P_REMOVE_TETHERS_FROM_PED_ARRAY */ sub_51221( ref l_U701 );
         /* P_REMOVE_TETHERS_FROM_PED_ARRAY */ sub_51221( ref l_U622 );
        l_U284 = 0;
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_50776(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_13619(  /* PLAYER_PED_ID */ sub_1022(), uParam0 );
}

/* P_ADD_TETHER_TO_PED_ARRAY */ void sub_50937(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_TETHERPED */ sub_49798( ref uParam1, (uParam0^)[I], uParam2 );
    }
    return;
}

/* P_REMOVE_TETHERS_FROM_PED_ARRAY */ void sub_51221(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_REMOVEALLTETHERSFROMPED */ sub_51286( (uParam0^)[I] );
    }
    return;
}

/* P_REMOVEALLTETHERSFROMPED */ void sub_51286(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        RESET_PED_TETHERING( uParam0 );
    }
    return;
}

/* P_HANDLE_DISPLAY_POI */ void sub_51447()
{
    if (( /* F_IS_PED_ARRAY_DEFEATED */ sub_51485( ref l_U622, 0 )) AND (( /* F_IS_PED_ARRAY_DEFEATED */ sub_51485( ref l_U701, 0 )) AND ( /* F_IS_PED_ARRAY_DEFEATED */ sub_51485( ref l_U506, 0 ))))
    {
        if (NOT ( /* F_IS_POI_AVAILABLE */ sub_51974( ref l_U1102 )))
        {
             /* P_SET_POI_AVAILABLE */ sub_20047( ref l_U1102, 1 );
        }
    }
    if (( /* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ sub_52040( ref l_U1102 )) == 1)
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_52334( ref g_U1326 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52445( 0,  /* PLAYER_PED_ID */ sub_1022(), "MAX", ref g_U1326, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52445( 1,  /* PLAYER_PED_ID */ sub_1022(), "MAX", ref g_U1326, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_52715( "EXPLORE_ITEM", ref g_U1326, 8, 1 );
    }
    if (( /* F_HANDLE_POI */ sub_53617( ref l_U1102 )) == 1)
    {
        l_U197 = 9;
         /* WRITESCRIPTLOG */ sub_442( "CR", "eCheckpointState = CP_POI_DISPLAY", 0 );
    }
    return;
}

/* F_IS_PED_ARRAY_DEFEATED */ int sub_51485(unknown uParam0, boolean bParam1)
{
    if (( /* F_HAS_PED_ARRAY_SPAWNED */ sub_51524( uParam0, 0 )) == 1)
    {
        if (NOT bParam1)
        {
            if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_51659( uParam0 )) == 0)
            {
                return 1;
            }
        }
        if (bParam1)
        {
            if (( /* F_GET_NUM_DEAD_PEDS_IN_ARRAY */ sub_51792( uParam0 )) == (uParam0^))
            {
                return 1;
            }
        }
    }
    return 0;
}

/* F_HAS_PED_ARRAY_SPAWNED */ void sub_51524(unknown uParam0, boolean bParam1)
{
    int I;
    int Result;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((DOES_PED_EXIST( (uParam0^)[I] )) == 1)
        {
            Result = 1;
            if (NOT bParam1)
            {
                return 1;
            }
        }
        else
        {
            Result = 0;
        }
    }
    return Result;
}

/* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ void sub_51659(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

/* F_GET_NUM_DEAD_PEDS_IN_ARRAY */ void sub_51792(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

/* F_IS_POI_AVAILABLE */ void sub_51974(int iParam0)
{
    return iParam0->_fU56;
}

/* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ int sub_52040(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND (( /* F_IS_POI_AVAILABLE */ sub_51974( iParam0 )) == 0)))
    {
        if ((( /* F_HASACTIONBEENPRESSED */ sub_52230()) == 1) AND (((IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_1022() )) == 0) AND (((IS_PED_GETTING_UP(  /* PLAYER_PED_ID */ sub_1022() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP(  /* PLAYER_PED_ID */ sub_1022() )) == 0) AND (((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_1022() )) == 0) AND (((IS_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1022() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

/* F_HASACTIONBEENPRESSED */ int sub_52230()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_52334(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_52445(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_52715(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_52760( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_52760(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_52847( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_52847(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_52899( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_53417( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_52899(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_53417(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* F_HANDLE_POI */ int sub_53617(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1022() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_13619(  /* PLAYER_PED_ID */ sub_1022(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_13619(  /* PLAYER_PED_ID */ sub_1022(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_20111( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND (( /* F_ISACTIONINGAVAILABLE */ sub_20207( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (( /* F_HASACTIONBEENPRESSED */ sub_52230()) == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                             /* P_ENABLE_POI */ sub_54557( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                             /* P_ENABLEPOIGLINT */ sub_19380( iParam0, 0 );
                             /* P_ENABLEPOIINTERACTIONTEXT */ sub_54643( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                             /* P_ENABLEPOIGLINT */ sub_19380( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1022(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                         /* P_ENABLEPOIGLINT */ sub_19380( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_ENABLEPOIINTERACTIONTEXT */ sub_54643( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED(  /* PLAYER_PED_ID */ sub_1022(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )) == 0)
                    {
                        TASK_LOOK_AT_COORD(  /* PLAYER_PED_ID */ sub_1022(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1022(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                     /* P_ENABLEPOIGLINT */ sub_19380( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                     /* P_ENABLEPOIINTERACTIONTEXT */ sub_54643( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_1022() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1022(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                 /* P_ENABLEPOIINTERACTIONTEXT */ sub_54643( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

/* P_ENABLE_POI */ void sub_54557(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
             /* P_ENABLEPOIGLINT */ sub_19380( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_19380( iParam0, 0 );
         /* P_ENABLEPOIINTERACTIONTEXT */ sub_54643( iParam0, 0 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )) == 0)
        {
            TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_1022() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1022(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

/* P_ENABLEPOIINTERACTIONTEXT */ void sub_54643(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_20111( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

/* P_HANDLE_MAXS_PAINKILLER_DIALOGUE */ void sub_55860()
{
    if (NOT ( /* HASTIMERBEENACTIVATED */ sub_4108( ref g_U4052 )))
    {
         /* P_CREATE_AND_START_TIMER */ sub_50393( ref g_U4052, g_U4061 );
    }
    if (((g_U4052._fU16) || ( /* ISTIMERDONE */ sub_4260( ref g_U4052 ))) AND ( /* F_GBL_HAS_PLAYER_JUST_ACQUIRED_PAIN_KILLERS */ sub_55935()))
    {
         /* WRITESCRIPTLOG */ sub_442( "MF", "Playing Speech: SPAN_MXFNDS1", 0 );
         /* P_SPEECH_PLAY_MONOLOGUE */ sub_56216( ref g_U4067, ref g_U1246 );
         /* RESETTIMER */ sub_4836( ref g_U4052 );
    }
    return;
}

/* F_GBL_HAS_PLAYER_JUST_ACQUIRED_PAIN_KILLERS */ int sub_55935()
{
    if (GET_PAYNEKILLER_AMT() > g_U4062)
    {
         /* WRITESCRIPTLOG */ sub_442( "CR", "Player picked up Payne Killers!", 0 );
        PRINTSTRING( "HAD: " );
         /* WRITE_INT */ sub_46518( g_U4062 );
        PRINTSTRING( "NOW: " );
         /* WRITE_INT */ sub_46518( GET_PAYNEKILLER_AMT() );
        g_U4062 = GET_PAYNEKILLER_AMT();
        return 1;
    }
    g_U4062 = GET_PAYNEKILLER_AMT();
    return 0;
}

/* P_SPEECH_PLAY_MONOLOGUE */ void sub_56216(unknown uParam0, unknown uParam1)
{
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_52334( uParam1 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52445( 0,  /* PLAYER_PED_ID */ sub_1022(), "MAX", uParam1, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52445( 1,  /* PLAYER_PED_ID */ sub_1022(), "MAX", uParam1, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_52715( uParam0, uParam1, 8, 1 );
    return;
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_56641(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_13619(  /* PLAYER_PED_ID */ sub_1022(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* P_VC_START_1ST_FLOOR_ENEMY */ void sub_56776()
{
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_START_1ST_FLOOR_ENEMY start", 0 );
     /* P_ACTIVATEPED */ sub_56869( l_U367[0] );
    if (NOT (IS_PED_DEAD( l_U367[0] )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U367[0], ref g_U3424 );
        SET_PED_ALERTNESS( l_U367[0], 3 );
         /* MAL_SETLOCKEDANDREGISTEREDONPLAYER */ sub_57045( ref l_U367[0] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U367[0], 0 );
        ISEQ_REGISTER_ENTITY( -1079385083, "GMED_STAIRWELL_PATROL", l_U367[0], 0 );
        ISEQ_START( -1079385083 );
    }
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_START_1ST_FLOOR_ENEMY end", 0 );
    return;
}

/* P_ACTIVATEPED */ void sub_56869(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

/* MAL_SETLOCKEDANDREGISTEREDONPLAYER */ void sub_57045(unknown uParam0)
{
     /* MAL_SETLOCKEDANDREGISTEREDONPED */ sub_57099( uParam0,  /* PLAYER_PED_ID */ sub_1022() );
    return;
}

/* MAL_SETLOCKEDANDREGISTEREDONPED */ void sub_57099(unknown uParam0, unknown uParam1)
{
     /* MAL_REGISTERTARGET */ sub_57147( uParam0, uParam1 );
     /* MAL_SETLOCKEDTARGET */ sub_57229( uParam0, uParam1 );
    return;
}

/* MAL_REGISTERTARGET */ void sub_57147(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETLOCKEDTARGET */ void sub_57229(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* DISABLETIMER */ void sub_57553(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

/* P_VC_START_1ST_FLOOR_BACKUP */ void sub_57760()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_START_1ST_FLOOR_BACKUP start", 0 );
    l_U392[0] =  /* CREATEPED */ sub_48893( ref l_U379 );
     /* F_GIVEPEDWEAPON */ sub_11281( l_U392[0], -184942895, 25000, 0, 0 );
     /* P_TETHERPED */ sub_49798( ref l_U369, l_U392[0], 3 );
     /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_49663( ref l_U392[0], "AIT_EXPERT", 1.00000000, 40.00000000 );
    if (NOT (IS_PED_DEAD( l_U392[0] )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U392[0], "GtaMloRoom42" );
        SET_PED_ALERTNESS( l_U392[0], 3 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )))
        {
            REGISTER_TARGET( l_U392[0],  /* PLAYER_PED_ID */ sub_1022() );
            SET_LOCKED_TARGET( l_U392[0],  /* PLAYER_PED_ID */ sub_1022() );
        }
        OPEN_SEQUENCE_TASK( ref uVar2 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )))
        {
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, -104.00000000, -33.22000000, 9.13000000, 3, -1, 0.25000000, 64, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1022() );
        }
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( l_U392[0], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_50032( ref l_U392, "pi_VC_1stFloorBackup" );
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_START_1ST_FLOOR_BACKUP end", 0 );
    return;
}

/* P_VC_START_2ND_FLOOR_ENEMIES */ void sub_58320()
{
    switch (l_U425)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_442( "GA", "e_VC_2ndFloorEnemySpawn = ENTITY_STATE_INIT", 0 );
         /* P_SETUP_AI_GROUP */ sub_58464( ref l_U513, 1.00000000, 0 );
        l_U426 = 0;
        l_U425 = 2;
         /* WRITESCRIPTLOG */ sub_442( "GA", "e_VC_2ndFloorEnemySpawn = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U506[l_U426] =  /* CREATEPED */ sub_48893( ref l_U427[l_U426] );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_58971( l_U506[l_U426], ref l_U513 );
         /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_49663( ref l_U506[l_U426], "AIT_EXPERT", 1.00000000, 40.00000000 );
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() ))) AND (NOT (IS_PED_DEAD( l_U506[l_U426] ))))
        {
            SET_PED_ALERTNESS( l_U506[l_U426], 3 );
            REGISTER_TARGET( l_U506[l_U426],  /* PLAYER_PED_ID */ sub_1022() );
            SET_LOCKED_TARGET( l_U506[l_U426],  /* PLAYER_PED_ID */ sub_1022() );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U506[l_U426], 1 );
        }
        l_U426++;
        if (l_U426 >= 6)
        {
            l_U425 = 3;
             /* WRITESCRIPTLOG */ sub_442( "GA", "e_VC_2ndFloorEnemySpawn = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_50032( ref l_U506, "pi_VC_2ndFloorEnemy" );
        if (NOT (IS_PED_DEAD( l_U506[0] )))
        {
             /* F_GIVEPEDWEAPON */ sub_11281( l_U506[0], -1404433099, 25000, 0, 0 );
        }
        if (NOT (IS_PED_DEAD( l_U506[1] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U506[1], "ExhibitRoom" );
             /* F_GIVEPEDWEAPON */ sub_11281( l_U506[1], 1308526797, 25000, 0, 0 );
        }
        if (NOT (IS_PED_DEAD( l_U506[2] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U506[2], "ExhibitRoom" );
             /* F_GIVEPEDWEAPON */ sub_11281( l_U506[2], -184942895, 25000, 0, 0 );
        }
        if (NOT (IS_PED_DEAD( l_U506[3] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U506[3], "ExhibitRoom" );
             /* F_GIVEPEDWEAPON */ sub_11281( l_U506[3], 456708483, 25000, 0, 0 );
        }
        if (NOT (IS_PED_DEAD( l_U506[4] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U506[4], ref g_U3440 );
             /* F_GIVEPEDWEAPON */ sub_11281( l_U506[4], -612753081, 25000, 0, 0 );
        }
        if (NOT (IS_PED_DEAD( l_U506[5] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U506[5], "TheatreRoom" );
             /* F_GIVEPEDWEAPON */ sub_11281( l_U506[5], 1308526797, 25000, 0, 0 );
        }
         /* P_VC_ACTIVATE_2ND_FLOOR_ENEMIES */ sub_60059();
        l_U425 = 4;
         /* WRITESCRIPTLOG */ sub_442( "GA", "e_VC_2ndFloorEnemySpawn = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    return;
}

/* P_SETUP_AI_GROUP */ void sub_58464(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_58971(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_10890( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_58464( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_58464( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* P_VC_ACTIVATE_2ND_FLOOR_ENEMIES */ void sub_60059()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_ACTIVATE_2ND_FLOOR_ENEMIES start", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )))
    {
        if (NOT (IS_PED_DEAD( l_U506[0] )))
        {
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -120.10090000, -30.51872000, 12.85271000,  /* PLAYER_PED_ID */ sub_1022(), 1, 8.00000000, 1101004800, -1082130432, 3 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1022() );
            CLOSE_SEQUENCE_TASK( uVar2 );
            TASK_PERFORM_SEQUENCE( l_U506[0], uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
        }
        if (NOT (IS_PED_DEAD( l_U506[1] )))
        {
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )))
            {
                TASK_ATTACK_MOVE( 0, -113.54000000, -29.66000000, 13.07000000, 1092616192, 1101004800, -1082130432, 3 );
                TASK_COMBAT_MOVE_TO_COVER( 0, "GenCover", "1300BAB3_FD5C2803_Corner1",  /* PLAYER_PED_ID */ sub_1022() );
                TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            }
            CLOSE_SEQUENCE_TASK( uVar2 );
            TASK_PERFORM_SEQUENCE( l_U506[1], uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
        }
        if (NOT (IS_PED_DEAD( l_U506[2] )))
        {
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )))
            {
                TASK_ATTACK_MOVE( 0, -117.08000000, -30.39000000, 13.07000000, 1092616192, 1101004800, -1082130432, 3 );
                TASK_FOLLOW_NAV_MESH_TO_COORD( 0, -117.40000000, -34.70000000, 13.07000000, 3, 20000, 1048576000, 0, 0 );
                TASK_COMBAT_MOVE_TO_COVER( 0, "GenCover", "1300BAB3_9E84A4DD_Corner2",  /* PLAYER_PED_ID */ sub_1022() );
                TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            }
            CLOSE_SEQUENCE_TASK( uVar2 );
            TASK_PERFORM_SEQUENCE( l_U506[2], uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
             /* P_TETHERPED */ sub_49798( ref l_U540, l_U506[2], 1 );
        }
        if (NOT (IS_PED_DEAD( l_U506[3] )))
        {
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_SNAP_TO_COVER( 0, "GenCover", "1300BAB3_7B4C09BD_Corner2",  /* PLAYER_PED_ID */ sub_1022() );
            CLOSE_SEQUENCE_TASK( uVar2 );
            TASK_PERFORM_SEQUENCE( l_U506[3], uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
             /* P_TETHERPED */ sub_49798( ref l_U540, l_U506[3], 1 );
            SET_PED_FLAG_LOCK_TO_COVER( l_U506[3], 1 );
            SET_PED_FLAG_BLOCK_BLINDFIRE_IN_COVER( l_U506[3], 1 );
            SET_PED_FLAG_FIRE_UNTIL_EMPTY_IN_COVER( l_U506[3], 1 );
            SET_PED_FORCE_START_FIRING_FROM_COVER( l_U506[3] );
        }
        if (NOT (IS_PED_DEAD( l_U506[4] )))
        {
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_COMBAT_SNAP_TO_COVER( 0, "GenCover", "1300BAB3_D680D911_Corner1",  /* PLAYER_PED_ID */ sub_1022() );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1022() );
            CLOSE_SEQUENCE_TASK( uVar2 );
            TASK_PERFORM_SEQUENCE( l_U506[4], uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
            SET_PED_FLAG_LOCK_TO_COVER( l_U506[4], 1 );
        }
        if (NOT (IS_PED_DEAD( l_U506[5] )))
        {
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_SNAP_TO_COVER( 0, "GenCover", "1300BAB3_64ECDA1F_Corner1",  /* PLAYER_PED_ID */ sub_1022() );
            CLOSE_SEQUENCE_TASK( uVar2 );
            TASK_PERFORM_SEQUENCE( l_U506[5], uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
            SET_PED_FLAG_LOCK_TO_COVER( l_U506[5], 1 );
            SET_PED_FORCE_START_FIRING_FROM_COVER( l_U506[5] );
            SET_PED_FLAG_FIRE_UNTIL_EMPTY_IN_COVER( l_U506[5], 1 );
        }
    }
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_ACTIVATE_2ND_FLOOR_ENEMIES end", 0 );
    return;
}

/* P_VC_2ND_FLOOR_TETHER_DOOR_ENEMIES */ void sub_61496()
{
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_2ND_FLOOR_TETHER_DOOR_ENEMIES start", 0 );
     /* P_TETHERPED */ sub_49798( ref l_U540, l_U506[1], 1 );
    if (NOT (IS_PED_DEAD( l_U506[2] )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( l_U506[2], 1 );
        SET_PED_FORCE_START_FIRING_FROM_COVER( l_U506[2] );
        SET_PED_FLAG_FIRE_UNTIL_EMPTY_IN_COVER( l_U506[2], 1 );
    }
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_2ND_FLOOR_TETHER_DOOR_ENEMIES end", 0 );
    return;
}

/* P_VC_2ND_FLOOR_ENGAGE_PLAYER_ENTERED_DISPLAY_ROOM */ void sub_61764()
{
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_2ND_FLOOR_ENGAGE_PLAYER_ENTERED_DISPLAY_ROOM start", 0 );
    if (NOT (IS_PED_DEAD( l_U506[1] )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( l_U506[1], 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U506[1], 0 );
    }
    if (NOT (IS_PED_DEAD( l_U506[2] )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( l_U506[2], 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U506[2], 0 );
    }
    if (NOT (IS_PED_DEAD( l_U506[3] )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( l_U506[3], 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U506[3], 0 );
    }
    if (NOT (IS_PED_DEAD( l_U506[4] )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( l_U506[4], 0 );
    }
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_2ND_FLOOR_ENGAGE_PLAYER_ENTERED_DISPLAY_ROOM end", 0 );
    return;
}

/* P_VC_2ND_FLOOR_ENEMIES_UNTETHER */ void sub_62181()
{
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_2ND_FLOOR_ENEMIES_UNTETHER start", 0 );
     /* P_REMOVE_TETHERS_FROM_PED_ARRAY */ sub_51221( ref l_U506 );
    if (NOT (IS_PED_DEAD( l_U506[2] )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( l_U506[2], 0 );
    }
    if (NOT (IS_PED_DEAD( l_U506[3] )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( l_U506[3], 0 );
    }
    if (NOT (IS_PED_DEAD( l_U506[5] )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( l_U506[5], 0 );
    }
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_2ND_FLOOR_ENEMIES_UNTETHER end", 0 );
    return;
}

/* P_VC_START_2ND_FLOOR_BACKUP */ void sub_62610()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_START_2ND_FLOOR_BACKUP start", 0 );
    l_U597[0] =  /* CREATEPED */ sub_48893( ref l_U584 );
     /* F_GIVEPEDWEAPON */ sub_11281( l_U597[0], -1404433099, 25000, 0, 0 );
     /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_49663( ref l_U597[0], "AIT_EXPERT", 1, 40 );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() ))) AND (NOT (IS_PED_DEAD( l_U597[0] ))))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U597[0], "GtaMloRoom42" );
        SET_PED_ALERTNESS( l_U597[0], 3 );
        REGISTER_TARGET( l_U597[0],  /* PLAYER_PED_ID */ sub_1022() );
        SET_LOCKED_TARGET( l_U597[0],  /* PLAYER_PED_ID */ sub_1022() );
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -113.54000000, -29.66000000, 13.07000000,  /* PLAYER_PED_ID */ sub_1022(), 0, 1092616192, 1101004800, -1082130432, 3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1022() );
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( l_U597[0], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_50032( ref l_U597, "pi_VC_2ndFloorBackup" );
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_START_2ND_FLOOR_BACKUP end", 0 );
    return;
}

/* P_VC_START_BATHROOM_ENEMY */ void sub_63111()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_START_BATHROOM_ENEMY start", 0 );
    l_U622[0] =  /* CREATEPED */ sub_48893( ref l_U609 );
     /* F_GIVEPEDWEAPON */ sub_11281( l_U622[0], -1404433099, 25000, 0, 0 );
     /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_49663( ref l_U622[0], "AIT_EXPERT", 1, 15 );
     /* P_TETHERPED */ sub_49798( ref l_U645, l_U622[0], 1 );
    if (NOT (IS_PED_DEAD( l_U622[0] )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U622[0], "GtaMloRoom42" );
        SET_PED_ALERTNESS( l_U622[0], 3 );
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_COMBAT_SNAP_TO_COVER( 0, "pana_GP_Museum", "Corner Position40", 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( l_U622[0], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
        SET_PED_FORCE_START_FIRING_FROM_COVER( l_U622[0] );
        SET_PED_FLAG_FIRE_UNTIL_EMPTY_IN_COVER( l_U622[0], 1 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )))
        {
            REGISTER_TARGET( l_U622[0],  /* PLAYER_PED_ID */ sub_1022() );
            SET_LOCKED_TARGET( l_U622[0],  /* PLAYER_PED_ID */ sub_1022() );
        }
    }
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_50032( ref l_U622, "pi_VC_BathroomEnemy_" );
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_START_BATHROOM_ENEMY end", 0 );
    return;
}

/* P_CREATE_WASHROOM_PAINKILLERS */ void sub_63628()
{
     /* WRITESCRIPTLOG */ sub_442( "CR", "P_CREATE_WASHROOM_PAINKILLERS - Start", 0 );
    l_U348[0] =  /* CREATEPLACEMENT */ sub_38173( -4072149, -99.60000000, -37.55000000, 17.34000000, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0, 90.00000000 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U348[0], ref g_U3456 );
     /* WRITESCRIPTLOG */ sub_442( "CR", "P_CREATE_WASHROOM_PAINKILLERS - End", 0 );
    return;
}

/* P_VC_START_4TH_FLOOR_ENEMIES */ void sub_63896()
{
    unknown uVar2;

    switch (l_U646)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_442( "GA", "e_VC_4thFloorEnemySpawnState = ENTITY_STATE_INIT", 0 );
         /* P_SETUP_AI_GROUP */ sub_58464( ref l_U706, 1056964608, 0 );
        l_U647 = 0;
        l_U646 = 2;
         /* WRITESCRIPTLOG */ sub_442( "GA", "e_VC_4thFloorEnemySpawnState = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U701[l_U647] =  /* CREATEPED */ sub_48893( ref l_U648[l_U647] );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_58971( l_U701[l_U647], ref l_U706 );
         /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_49663( ref l_U701[l_U647], "AIT_EXPERT", 1, 40 );
        if (NOT (IS_PED_DEAD( l_U701[l_U647] )))
        {
            SET_PED_ALERTNESS( l_U701[l_U647], 3 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )))
            {
                REGISTER_TARGET( l_U701[l_U647],  /* PLAYER_PED_ID */ sub_1022() );
                SET_LOCKED_TARGET( l_U701[l_U647],  /* PLAYER_PED_ID */ sub_1022() );
            }
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U701[l_U647], 1 );
        }
        l_U647++;
        if (l_U647 >= 4)
        {
            l_U646 = 3;
             /* WRITESCRIPTLOG */ sub_442( "GA", "e_VC_4thFloorEnemySpawnState = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_50032( ref l_U701, "pi_VC_4thFloorEnemy" );
         /* F_GIVEPEDWEAPON */ sub_11281( l_U701[0], -1404433099, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_11281( l_U701[1], -184942895, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_11281( l_U701[2], -184942895, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_11281( l_U701[3], -1404433099, 25000, 0, 0 );
         /* P_TETHERPED */ sub_49798( ref l_U712, l_U701[1], 1 );
         /* P_TETHERPED */ sub_49798( ref l_U712, l_U701[2], 1 );
        if (NOT (IS_PED_DEAD( l_U701[0] )))
        {
             /* P_TETHERPED */ sub_49798( ref l_U713, l_U701[0], 1 );
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_ATTACK_MOVE( 0, -118.80810000, -29.96964000, 19.22695000, 3.00000000, 6.00000000, -1082130432, 3 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )))
            {
                TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1022() );
            }
            CLOSE_SEQUENCE_TASK( uVar2 );
            TASK_PERFORM_SEQUENCE( l_U701[0], uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
        }
        if (NOT (IS_PED_DEAD( l_U701[1] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U701[1], "Room_Lobby" );
        }
        if (NOT (IS_PED_DEAD( l_U701[2] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U701[2], "Room_Lobby" );
        }
        if (NOT (IS_PED_DEAD( l_U701[3] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U701[3], "Room_Offi_Stair" );
        }
         /* P_DEACTIVATEPED */ sub_49891( l_U701[1] );
         /* P_DEACTIVATEPED */ sub_49891( l_U701[2] );
         /* P_DEACTIVATEPED */ sub_49891( l_U701[3] );
        l_U646 = 4;
         /* WRITESCRIPTLOG */ sub_442( "GA", "e_VC_4thFloorEnemySpawnState = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    return;
}

/* P_VC_ACTIVATE_4TH_FLOOR_BRIDGE_ENEMIES */ void sub_65087()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_ACTIVATE_4TH_FLOOR_BRIDGE_ENEMIES start", 0 );
     /* P_ACTIVATEPED */ sub_56869( l_U701[1] );
     /* P_ACTIVATEPED */ sub_56869( l_U701[2] );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )))
    {
        if (NOT (IS_PED_DEAD( l_U701[1] )))
        {
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )))
            {
                TASK_SHOOT_AT_COORD( 0, -108.95000000, -29.41000000, 20.71000000, 2000, 0, 1, 1 );
                TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
                TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1022() );
            }
            CLOSE_SEQUENCE_TASK( uVar2 );
            REGISTER_TARGET( l_U701[1],  /* PLAYER_PED_ID */ sub_1022() );
            TASK_PERFORM_SEQUENCE( l_U701[1], uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
        }
        if (NOT (IS_PED_DEAD( l_U701[2] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U701[2], 0 );
            REGISTER_TARGET( l_U701[2],  /* PLAYER_PED_ID */ sub_1022() );
            TASK_COMBAT_PED( l_U701[2],  /* PLAYER_PED_ID */ sub_1022() );
        }
    }
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_ACTIVATE_4TH_FLOOR_BRIDGE_ENEMIES end", 0 );
    return;
}

/* P_REMOVETETHERFROMPED */ void sub_65641(int iParam0, unknown uParam1)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_REMOVE_BOX( uParam1, iParam0->_fU0 );
    }
    return;
}

/* P_VC_ACTIVATE_4TH_FLOOR_COVER_ENEMY */ void sub_65774()
{
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_ACTIVATE_4TH_FLOOR_COVER_ENEMY start", 0 );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() ))) AND (NOT (IS_PED_DEAD( l_U701[3] ))))
    {
         /* P_ACTIVATEPED */ sub_56869( l_U701[3] );
        SET_PED_FLAG_LOCK_TO_COVER( l_U701[3], 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U701[3], 0 );
        TASK_COMBAT_SNAP_TO_COVER( l_U701[3], "GenCover", "1300BAB3_162BD872_Corner2",  /* PLAYER_PED_ID */ sub_1022() );
    }
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_ACTIVATE_4TH_FLOOR_COVER_ENEMY end", 0 );
    return;
}

/* GET_DISTANCE_BETWEEN_PEDS */ void sub_66147(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    }
    if (bParam2)
    {
        return VDIST( uVar5, uVar8 );
        break;
    }
    return VDIST( uVar5._fU0, uVar5._fU4, 0, uVar8._fU0, uVar8._fU4, 0 );
}

/* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ void sub_66554(unknown uParam0)
{
    int I;

    if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_51659( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

/* P_VC_PRELOAD_11_03_PANAMA */ void sub_67064()
{
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_PRELOAD_11_03_PANAMA start", 0 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_26134( g_U1512, ref g_U1588 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_26134( -1710973172, ref g_U1588 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_26134( -1654523650, ref g_U1588 );
     /* LOADSEAMLESSCUTSCENE */ sub_67212( "11_03_PANAMA_concat", 0 );
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_PRELOAD_11_03_PANAMA end", 0 );
    return;
}

/* LOADSEAMLESSCUTSCENE */ void sub_67212(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* MAL_SETPEDVISIBLE */ void sub_67888(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_VISIBLE( uParam0, uParam1 );
    }
    else
    {
         /* MAL_WRITESCRIPTLOG */ sub_67994( "MAL_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

/* MAL_WRITESCRIPTLOG */ void sub_67994(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar3, 1537, "MSWW", 1537, uParam0, 1537, "###" );
    return;
}

/* P_RESET_MAX_ACTION_TREE */ void sub_68111()
{
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_RESET_MAX_ACTION_TREE start", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )))
    {
        if (IS_PLAYER_SHOOTDODGING())
        {
            SCRIPT_ASSERT( "Do not try to reset Max's action tree when he is shoot dodging.", 0 );
             /* WRITESCRIPTLOG */ sub_442( "GA", "You cannot reset Max's action tree during a shoot dodge.", 0 );
        }
        else
        {
            PED_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_1022(), "/Global/Player" );
        }
    }
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_RESET_MAX_ACTION_TREE end", 0 );
    return;
}

/* KILL_ANY_MISSION_SPEECH */ void sub_68598(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        PRINTSTRING( "\n KILL_ANY_MISSION_SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

/* P_MUSEUM_EARLY_CLEANUP */ void sub_69035()
{
     /* WRITESCRIPTLOG */ sub_442( "CCB", "P_MUSEUM_EARLY_CLEANUP", 0 );
     /* CLEANPEDARRAY */ sub_7675( ref l_U367 );
     /* CLEANPEDARRAY */ sub_7675( ref l_U392 );
     /* CLEANPEDARRAY */ sub_7675( ref l_U506 );
     /* CLEANPEDARRAY */ sub_7675( ref l_U597 );
     /* CLEANPEDARRAY */ sub_7675( ref l_U701 );
     /* CLEANPEDARRAY */ sub_7675( ref l_U622 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_6599( -2080896344, ref g_U1588 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_6599( g_U1524, ref g_U1588 );
     /* CLEANOBJECTARRAY */ sub_7807( ref g_U4163 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_6599( g_U1574, ref g_U1588 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_6599( g_U1576, ref g_U1588 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_6599( g_U1578, ref g_U1588 );
     /* CLEANOBJECT */ sub_7859( g_U4167 );
     /* CLEANOBJECT */ sub_7859( g_U4171 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_6599( 1914709263, ref g_U1588 );
    return;
}

/* F_VC_1103_PRECUTSCENESETUP */ int sub_69630()
{
    if (l_U1065._fU52)
    {
        l_U1019 = 1;
    }
    if ( /* F_VC_CREATE_1103_PEDS */ sub_69689())
    {
        return 1;
        break;
    }
    return 0;
}

/* F_VC_CREATE_1103_PEDS */ int sub_69689()
{
    switch (l_U1019)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_442( "GA", "e_VC_1103_PedSpawnState = ENTITY_STATE_INIT", 0 );
        l_U1020 = 0;
        l_U1019 = 2;
         /* WRITESCRIPTLOG */ sub_442( "GA", "e_VC_1103_PedSpawnState = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U1061[l_U1020] =  /* CREATEPED */ sub_48893( ref l_U1021[l_U1020] );
        if (NOT (IS_PED_DEAD( l_U1061[l_U1020] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1061[l_U1020], 1 );
        }
         /* P_DEACTIVATEPED */ sub_49891( l_U1061[l_U1020] );
        l_U1020++;
        if (l_U1020 >= 3)
        {
            l_U1019 = 3;
             /* WRITESCRIPTLOG */ sub_442( "GA", "e_VC_1103_PedSpawnState = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_50032( ref l_U1061, "pi_VC_1103_Ped" );
         /* F_GIVEPEDWEAPON */ sub_11281( l_U1061[2], -612753081, 25000, 0, 0 );
        l_U1019 = 4;
         /* WRITESCRIPTLOG */ sub_442( "GA", "e_VC_1103_PedSpawnState = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    if (l_U1019 == 4)
    {
        return 1;
        break;
    }
    return 0;
}

/* P_VC_1103_CUTSCENEREGISTRATION */ void sub_70264()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_1103_CutsceneRegistration start", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )))
    {
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE(  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_70375(), "W_PI_Glk18_Aa_H", 0 );
    }
     /* P_ACTIVATEPEDARRAY */ sub_70854( ref l_U1061 );
    if (NOT (IS_PED_DEAD( l_U1061[2] )))
    {
         /* WRITESCRIPTLOG */ sub_442( "CCB", "Registering the piPassos ped.", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1061[2], "Pass_Yaht", 1 );
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( l_U1061[2], 0, 0 ) ))
        {
             /* WRITESCRIPTLOG */ sub_442( "CCB", "Registering the piPassos ped's weapon.", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U1061[2], 0, 0 ), "W_PI_Glk18_Aa_H^1", 1 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_442( "CCB", "The piPassos's weapon is NOT valid!!!", 0 );
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_442( "CCB", "The piPassos ped is NOT valid!!!", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1061[0] )))
    {
         /* WRITESCRIPTLOG */ sub_442( "CCB", "Registering the piMuseum_11_03_Bodies[0] ped.", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1061[0], "M_PA_DEAD_A", 1 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_442( "CCB", "The piMuseum_11_03_Bodies[0] ped is NOT valid!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_442( "CCB", "Registering the piMuseum_11_03_Bodies[1] ped.", 0 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_PA_DEAD_A^1", 1563895224 );
    if (NOT (IS_PED_DEAD( l_U1061[1] )))
    {
         /* WRITESCRIPTLOG */ sub_442( "CCB", "Registering the piMuseum_11_03_Bodies[2] ped.", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1061[1], "FB_Daph_Dead", 1 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_442( "CCB", "The piMuseum_11_03_Bodies[2] ped is NOT valid!!!", 0 );
    }
    uVar2 = DOOR_FIND_CLOSEST( 1463538732, -113.62910000, -38.41180000, 23.76593000 );
    if (DOES_OBJECT_EXIST( uVar2 ))
    {
         /* WRITESCRIPTLOG */ sub_442( "CCB", "Registering the dsMuseumRoofDoor_0 door.", 0 );
        REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( uVar2, "P_DR_RoofDr_H", 1 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_442( "CCB", "The dsMuseumRoofDoor_0 object is NOT valid!!!", 0 );
        REGISTER_HIDE_ENTITY_AT_POSITION( 1463538732, -113.62910000, -38.41180000, 23.76593000 );
    }
    uVar2 = DOOR_FIND_CLOSEST( 1463538732, -111.22930000, -38.41180000, 23.76593000 );
    if (DOES_OBJECT_EXIST( uVar2 ))
    {
         /* WRITESCRIPTLOG */ sub_442( "CCB", "Registering the dsMuseumRoofDoor_1 door.", 0 );
        REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( uVar2, "P_DR_RoofDr_H^1", 1 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_442( "CCB", "The dsMuseumRoofDoor_1 object is NOT valid!!!", 0 );
        REGISTER_HIDE_ENTITY_AT_POSITION( 1463538732, -111.22930000, -38.41180000, 23.76593000 );
    }
    if (AUDIO_IS_MUSIC_PLAYING())
    {
         /* WRITESCRIPTLOG */ sub_442( "MF", "MUSIC: Suspending Music over 8s....", 0 );
        AUDIO_MUSIC_SUSPEND( 8000 );
    }
    SET_HIGHEST_ARCADE_LEVEL_UNLOCKED( 14 );
    CUTSCENE_REGISTER_SWITCH_TO_LEVEL_NAME( "s_hotel" );
    CUTSCENE_ENABLE_SKIP( 0 );
    AUD_ENABLE_PRE_BINK_SHUTDOWN( 1 );
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_VC_1103_CutsceneRegistration end", 0 );
    return;
}

/* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ int sub_70375()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1022(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_70479( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1022(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1022(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1022(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

/* IS_WEAPON_SINGLE_HANDED */ int sub_70479(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* P_ACTIVATEPEDARRAY */ void sub_70854(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_ACTIVATEPED */ sub_56869( (uParam0^)[I] );
    }
    return;
}

/* P_VC_1103_HANDLECUTSCENE */ void sub_72316()
{
    unknown uVar2;

    if (l_U1065._fU52)
    {
         /* WRITESCRIPTLOG */ sub_442( "CR", "P_VC_1103_HandleCutscene Start", 0 );
        DISABLE_FADE_BETWEEN_SP_LEVELS();
         /* F_HOLSTER_PLAYER_RIFLE */ sub_72419( 1 );
        uVar2 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1022(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            SET_WEAPON_VISIBLE( uVar2, 0 );
        }
         /* WRITESCRIPTLOG */ sub_442( "CCB", "Setting the weather to SUNNY...", 0 );
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
    }
    return;
}

/* F_HOLSTER_PLAYER_RIFLE */ void sub_72419(unknown uParam0)
{
    unknown Result;

    Result = nil;
    if ( /* F_IS_WEAPON_TYPE_RIFLE */ sub_72472( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1022(), 0, 0 ) ))
    {
        Result = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1022(), 0, 0 );
        SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1022(), 0, 0, uParam0 );
    }
    return Result;
}

/* F_IS_WEAPON_TYPE_RIFLE */ int sub_72472(unknown uParam0)
{
    int iVar3;
    int[25] iVar4;
    int I;

    iVar3 = GET_WEAPON_TYPE( uParam0 );
    array(ref iVar4, 25);
    iVar4[0] = 162573582;
    iVar4[1] = -1659006841;
    iVar4[2] = 879300975;
    iVar4[3] = 377623895;
    iVar4[4] = 319712764;
    iVar4[5] = 427207702;
    iVar4[6] = -110877124;
    iVar4[7] = -1013714740;
    iVar4[8] = -1074756423;
    iVar4[9] = 1308526797;
    iVar4[10] = 840671040;
    iVar4[11] = 57534114;
    iVar4[12] = 724901397;
    iVar4[13] = 1992962408;
    iVar4[14] = -1312131151;
    iVar4[15] = 434544317;
    iVar4[16] = -168327769;
    iVar4[17] = -184942895;
    iVar4[18] = 514118749;
    iVar4[19] = 1478009203;
    iVar4[20] = 1224272620;
    iVar4[21] = 10648147;
    iVar4[22] = -1787162676;
    iVar4[23] = -2075384407;
    iVar4[24] = 1001413062;
    for ( I = 0; I < iVar4; I++ )
    {
        if (iVar3 == iVar4[I])
        {
            return 1;
        }
    }
    return 0;
}

/* CUTSYS_DEFAULT_POSTCUTSCENE */ int sub_72984()
{
    return 1;
}

/* CUTSYS_CREATESTANDALONECUTSCENE */ void sub_73035(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
     /* WRITESCRIPTLOG */ sub_442( "MSWW", "CutSys_CreateStandaloneCutscene", "###" );
    return  /* CUTSYS_PRIVATE_CREATECUTSCENE */ sub_73351( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam7, 0, 73146, 73197, 0, 73249, 73299, uParam6 );
}

/* CUTSYS_DEFAULT_PREPAREBLENDOUT */ void sub_73146()
{
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDOUT */ int sub_73197()
{
    return 1;
}

/* CUTSYS_DEFAULT_PREPAREBLENDIN */ void sub_73249()
{
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDIN */ int sub_73299()
{
    return 1;
}

/* CUTSYS_PRIVATE_CREATECUTSCENE */ void sub_73351(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

/* CUTSYS_HANDLECUTSCENE */ void sub_73661(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
             /* WRITESCRIPTLOG */ sub_442( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
             /* WRITESCRIPTLOG */ sub_442( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                 /* WRITESCRIPTLOG */ sub_442( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
             /* WRITESCRIPTLOG */ sub_442( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
             /* WRITESCRIPTLOG */ sub_442( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
             /* WRITESCRIPTLOG */ sub_442( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
             /* LOADSEAMLESSCUTSCENE */ sub_67212( iParam0->_fU0, 0 );
             /* WRITESCRIPTLOG */ sub_442( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
             /* NIS_PRE_SETUP */ sub_2548( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
         /* NIS_PRE_SETUP */ sub_2548( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
         /* WRITESCRIPTLOG */ sub_442( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                 /* P_SET_PLAYER_WEAPONS_VISIBLE */ sub_74926( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
         /* NIS_PRE_SETUP */ sub_2548( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
             /* NIS_POST_SETUP */ sub_3118( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
         /* NIS_POST_SETUP */ sub_3118( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

/* P_SET_PLAYER_WEAPONS_VISIBLE */ void sub_74926(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1022() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1022(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1022(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1022(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1022(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1022(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

/* P_VC_DEBUG_TUNING_WIDGET */ void sub_75597()
{
    if (NOT l_U1302)
    {
        START_WIDGET_GROUP( "Visitor's Centre Tuning" );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_75709( ref l_U1230, "Display Cam Offset", 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Display Cam Rotation", ref l_U1233, -1E8, 1E8, 0.10000000 );
        ADD_WIDGET_INT_SLIDER( "Display Cam Trim", ref l_U1234, 0, 10000000, 100 );
        STOP_WIDGET_GROUP();
        l_U1302 = 1;
    }
    return;
}

/* P_ADD_WIDGET_VECTOR_SLIDER */ void sub_75709(int iParam0, unknown uParam1, unknown uParam2)
{
    START_WIDGET_GROUP( uParam1 );
    ADD_WIDGET_FLOAT_SLIDER( "x", iParam0 + 0, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "y", iParam0 + 4, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "z", iParam0 + 8, 60536, 5000, uParam2 );
    STOP_WIDGET_GROUP();
    return;
}

/* P_RELEASE_VC_ASSETS */ void sub_75982()
{
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_RELEASE_VC_ASSETS start", 0 );
     /* P_GLOBAL_UNLOAD_PISTOL_ANIMS */ sub_76053();
     /* P_GLOBAL_UNLOAD_RIFLE_ANIMS */ sub_77121();
     /* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ sub_77882( ref l_U179, ref g_U1588 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE_ARRAY */ sub_77987( ref l_U191, ref g_U1829 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "LEVEL_S_PAN_CP_07", ref g_U1975 );
     /* P_STREAMREQ_AUDIO_BANK_REMOVE */ sub_78479( "SCRIPT_MISSION\S_PANA_VISITORS_CENTER", ref g_U3026 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "EXPL_CAM", ref g_U1975 );
     /* WRITESCRIPTLOG */ sub_442( "GA", "P_RELEASE_VC_ASSETS end", 0 );
    return;
}

/* P_GLOBAL_UNLOAD_PISTOL_ANIMS */ void sub_76053()
{
     /* WRITESCRIPTLOG */ sub_442( "CR", "P_GLOBAL_UNLOAD_PISTOL_ANIMS - Start", 0 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "NPC_PSTL_CORE", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "NPC_PSTL_COVER", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "NPC_PSTL_COVER_ENTER", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "NPC_PSTL_COVER_RELOAD", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "NPC_PSTL_DODGE", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "NPC_PSTL_FLAVOR", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "NPC_PSTL_FULLBODY", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "NPC_PSTL_RELOAD", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "NPC_PSTL_SEARCH", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "NPC_PSTL_STAIRS", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "NPC_PSTL_REACT", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "AMED_PSTL_PRONE", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "PLGE_PSTL_CROUCH", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "PLGE_PSTL_CORE", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "PLGE_PSTL_CORE_RELOAD", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "PLGE_PSTL_HANDSIG", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "PLGE_PSTL_ACTIONS", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "PLGE_PSTL_KNEE", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "PLGE_PSTL_COVER", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "PLGE_PSTL_REACT", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "PLGE_PSTL_COVER_EXIT", ref g_U1975 );
     /* WRITESCRIPTLOG */ sub_442( "CR", "P_GLOBAL_UNLOAD_PISTOL_ANIMS - End", 0 );
    return;
}

/* P_STREAMREQ_ANIM_DICT_REMOVE */ void sub_76164(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_5665( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ANIM_DICT asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_GLOBAL_UNLOAD_RIFLE_ANIMS */ void sub_77121()
{
     /* WRITESCRIPTLOG */ sub_442( "CR", "P_GLOBAL_UNLOAD_RIFLE_ANIMS - Start", 0 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "NPC_RIFLE_CORE", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "NPC_RIFLE_COVER", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "NPC_RIFLE_COVER_ENTER", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "NPC_RIFLE_COVER_RELOAD", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "NPC_RIFLE_DODGE", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "NPC_RIFLE_FLAVOR", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "NPC_RIFLE_FULLBODY", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "NPC_RIFLE_RELOAD", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "NPC_RIFLE_SEARCH", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "NPC_RIFLE_STAIRS", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "NPC_RIFLE_REACT", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "AMED_RIFL_PRONE", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "PLGE_RIFLE_CROUCH", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "PLGE_RIFLE_CORE", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "PLGE_RIFLE_CORE_RELOAD", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "PLGE_RIFLE_HANDSIG", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "PLGE_RIFLE_ACTIONS", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "PLGE_RIFLE_KNEE", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "PLGE_RIFLE_COVER", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "PLGE_RIFLE_REACT", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_76164( "PLGE_RIFLE_COVER_EXIT", ref g_U1975 );
     /* WRITESCRIPTLOG */ sub_442( "CR", "P_GLOBAL_UNLOAD_RIFLE_ANIMS - End", 0 );
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ void sub_77882(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_6599( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE_ARRAY */ void sub_77987(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_78061( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE */ void sub_78061(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_5665( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a WEAPON_TYPE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_AUDIO_BANK_REMOVE */ void sub_78479(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_5665( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a AUDIO_BANK asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}


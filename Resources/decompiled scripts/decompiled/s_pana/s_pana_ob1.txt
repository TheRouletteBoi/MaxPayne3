void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U40 = 0;
    l_U41 = 0;
    l_U42 = 1500;
    l_U70 = -1;
    l_U71 = {64536, 64536, 64536};
    l_U74 = {0, 0, 0};
    StrCopy( ref l_U77, "DUMMY", 32 );
    l_U85 = 1;
    l_U90 = 0;
    l_U91 = 0;
    l_U92 = 0;
    l_U95 = 0;
    l_U191 = 0;
    l_U193 = 0;
    l_U194 = 1;
    l_U195 = 0;
    l_U264 = 1500;
    l_U274 = 1000;
    l_U686 = 1.00000000;
    l_U831 = 4275;
    l_U1197 = 15000;
    l_U1198 = 30000;
    l_U1199 = 0;
    l_U1200 = 0;
    l_U1201 = 0;
    l_U1202 = 0;
    l_U1203 = 0;
    l_U1204 = 0;
    l_U1205 = 0;
    l_U1206 = 0;
    l_U1207 = 0;
    l_U1208 = 0;
     /* WRITESCRIPTLOG */ sub_494( "SP", "Script s_pana_OB1.sc is starting up...", 0 );
     /* P_OB1_POPULATE_VARIABLE_ARRAYS */ sub_612();
    l_U191 = 1;
    while (NOT IS_EXITFLAG_SET())
    {
         /* P_HANDLE_FAILURE */ sub_949();
        if (l_U195 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_14901();
        }
         /* P_DEBUG_DIALOGUE */ sub_76766();
        WAIT( 0 );
    }
     /* P_CLEANUP_OB1 */ sub_7541( 1 );
     /* P_RELEASE_OB1_ASSETS */ sub_78978();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_pana_OB1" );
     /* WRITESCRIPTLOG */ sub_494( "SP", "Script s_pana_OB1.sc is terminating...", 0 );
    return;
}

/* WRITESCRIPTLOG */ void sub_494(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_OB1_POPULATE_VARIABLE_ARRAYS */ void sub_612()
{
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_POPULATE_VARIABLE_ARRAYS start", 0 );
    l_U176[0] = 1914709263;
    l_U176[1] = -1425703854;
    l_U176[2] = g_U1512;
    l_U176[3] = g_U1521;
    l_U176[4] = g_U1575;
    l_U176[5] = g_U1577;
    l_U176[6] = g_U1579;
    l_U176[7] = g_U831;
    l_U176[8] = -1409914275;
    l_U186[0] = 1478009203;
    l_U186[1] = -1404433099;
    l_U186[2] = -612753081;
    l_U186[3] = 1308526797;
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_POPULATE_VARIABLE_ARRAYS end", 0 );
    return;
}

/* P_HANDLE_FAILURE */ void sub_949()
{
    if (g_U834 == 8)
    {
        switch (l_U195)
        {
            case 0:
             /* ISMAXOVERBOARD */ sub_1059( 1 );
            if (( /* RESTARTING_CHECKPOINT */ sub_2629()) || ((l_U193) || (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() ))))
            {
                l_U195 = 2;
                 /* WRITESCRIPTLOG */ sub_494( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            if ((DOES_PED_EXIST( g_U3504 )) AND (NOT IS_LAST_MAN_STANDING_ACTIVE()))
            {
                if (IS_PED_DEAD( g_U3504 ))
                {
                    if (HAS_PED_BEEN_DAMAGED_BY_PED( g_U3504,  /* PLAYER_PED_ID */ sub_1086(), 0 ))
                    {
                        l_U768 = 1;
                        l_U195 = 1;
                         /* WRITESCRIPTLOG */ sub_494( "SP", "eFailState = FAIL_HANDLE_PLAYER_SHOT_PASSOS", 0 );
                    }
                }
            }
            break;
            case 1:
            if ( /* F_OB1_HANDLE_PASSOS_DEATH_CAM */ sub_3282())
            {
                l_U195 = 2;
                 /* WRITESCRIPTLOG */ sub_494( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 2:
            if ( /* IS_RESTART_ACTIVE */ sub_5757())
            {
                if ((g_U835[9]._fU40 != 4) AND (g_U835[9]._fU40 != 0))
                {
                     /* WRITESCRIPTLOG */ sub_494( "GA", "Shutting down script for Operations Building 2.", 0 );
                     /* P_RESET_CHECKPOINT_THREAD */ sub_5907( ref g_U835[9] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U835[9]._fU32 );
                }
                l_U195 = 3;
            }
            else if (( /* F_CHECK_QUIT_RETRY */ sub_6000( 0 )) == 1)
            {
                if ((g_U835[9]._fU40 != 4) AND (g_U835[9]._fU40 != 0))
                {
                     /* WRITESCRIPTLOG */ sub_494( "GA", "Shutting down script for Operations Building 2.", 0 );
                     /* P_RESET_CHECKPOINT_THREAD */ sub_5907( ref g_U835[9] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U835[9]._fU32 );
                }
                l_U195 = 3;
            }
            break;
            case 3:
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
            {
                l_U195 = 4;
                 /* WRITESCRIPTLOG */ sub_494( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 4:
             /* WRITESCRIPTLOG */ sub_494( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() ))) AND (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1124() ))))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1124(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1086() ))
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1086(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
             /* P_CAM_SHAKE_FORCE_DEACTIVATE_ARRAY */ sub_7264( ref l_U832, 1 );
             /* P_CLEANUP_OB1 */ sub_7541( 0 );
            l_U195 = 5;
             /* WRITESCRIPTLOG */ sub_494( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 5:
             /* WRITESCRIPTLOG */ sub_494( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            if (l_U140._fU0)
            {
                 /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_10213( ref l_U140,  /* PLAYER_PED_ID */ sub_1086() );
            }
            l_U195 = 6;
             /* WRITESCRIPTLOG */ sub_494( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 6:
             /* WRITESCRIPTLOG */ sub_494( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U191 = 1;
            l_U193 = 0;
            l_U194 = 0;
            l_U195 = 0;
             /* WRITESCRIPTLOG */ sub_494( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

/* ISMAXOVERBOARD */ int sub_1059(int iParam0)
{
    if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND ((NOT IS_BULLET_CAMERA_ACTIVE()) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))))
    {
        if ((IS_PED_IN_WATER(  /* PLAYER_PED_ID */ sub_1086() )) == 1)
        {
            if (NOT g_U3626._fU32)
            {
                 /* P_GBL_QUICK_GAMEPLAY_CAM_COPY */ sub_1245();
            }
            if (iParam0 == 1)
            {
                 /* P_GLOBAL_MAX_WATER_IMPACT_DEATH */ sub_2201();
            }
             /* NIS_POST_SETUP */ sub_2293( 1, 1 );
            return 1;
        }
    }
    return 0;
}

/* PLAYER_PED_ID */ int sub_1086()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_1124() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_1124()
{
    return GET_PLAYER_ID();
}

/* P_GBL_QUICK_GAMEPLAY_CAM_COPY */ void sub_1245()
{
     /* WRITESCRIPTLOG */ sub_494( "MF", "P_GBL_QUICK_GAMEPLAY_CAM_COPY - START", 0 );
     /* NIS_CREATE_GAMEPLAY_CAM_COPY */ sub_1345( ref g_U3626, 50 );
     /* NIS_PRE_SETUP */ sub_1723( 0, 0, 0, 1 );
     /* NIS_PLAY_STATIC_CAMERA */ sub_1902( ref g_U3626 );
     /* WRITESCRIPTLOG */ sub_494( "MF", "P_GBL_QUICK_GAMEPLAY_CAM_COPY - END", 0 );
    return;
}

/* NIS_CREATE_GAMEPLAY_CAM_COPY */ void sub_1345(int iParam0, unknown uParam1)
{
    iParam0->_fU4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_ROT()};
    iParam0->_fU16 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_COORD()};
    iParam0->_fU28 = GET_GAMEPLAY_CAM_FOV();
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam1;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_1499( iParam0 + 48, uParam1, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U703, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* CREATETIMER */ void sub_1499(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* NIS_PRE_SETUP */ void sub_1723(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1124(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1086(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1086() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1086(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* NIS_PLAY_STATIC_CAMERA */ void sub_1902(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_1982( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

/* STARTTIMER */ void sub_1982(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* P_GLOBAL_MAX_WATER_IMPACT_DEATH */ void sub_2201()
{
    SET_PAD_SHAKE( 0, 100, 250 );
    WAIT( 90 );
    SET_PED_HEALTH(  /* PLAYER_PED_ID */ sub_1086(), 0, 0 );
    return;
}

/* NIS_POST_SETUP */ void sub_2293(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1124(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1086(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_2391();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_2391()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1086(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1086(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1086(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1086(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* RESTARTING_CHECKPOINT */ int sub_2629()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1086(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1124(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1124(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1086() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1086(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* F_OB1_HANDLE_PASSOS_DEATH_CAM */ int sub_3282()
{
    switch (l_U768)
    {
        case 1:
         /* NIS_PRE_SETUP */ sub_1723( 1, 0, 0, 1 );
        if (l_U191 == 9)
        {
             /* NIS_CREATE_STATIC_CAM */ sub_3415( ref l_U769, -60.27000000, 31.99000000, 9.39000000, -7.41000000, 0.00000000, 118.68000000, 45.00000000, 0 );
             /* NIS_CREATE_STATIC_CAM */ sub_3415( ref l_U800, -63.00000000, 30.25000000, 9.02000000, -13.69000000, 0.00000000, 106.25000000, 45.00000000, l_U831 - 3500 );
        }
        else if (l_U191 == 14)
        {
             /* NIS_CREATE_STATIC_CAM */ sub_3415( ref l_U769, -83.85000000, 33.45000000, 9.28000000, -5.80000000, 0.00000000, 126.31000000, 45.00000000, 0 );
             /* NIS_CREATE_STATIC_CAM */ sub_3415( ref l_U800, -86.56000000, 31.47000000, 8.98000000, -13.15000000, 0.00000000, 130.68000000, 45.00000000, l_U831 - 3500 );
        }
         /* P_CAM_SHAKE_CREATE_STRUCT */ sub_3840( ref l_U832[0], 1, 2.00000000, 10, -1, -1, 1, 0 );
         /* P_CAM_SHAKE_CREATE_STRUCT */ sub_3840( ref l_U832[1], 4, 3.00000000, 300, -1, -1, 1, 0 );
         /* NIS_PLAY_INTERP_WITH_STATIC_CAMS */ sub_4538( ref l_U769, ref l_U800, l_U831, 1, 1 );
        AUDIO_MUSIC_SUSPEND( 4000 );
        l_U768 = 2;
        break;
        case 2:
         /* P_CAM_SHAKE_HANDLE_ARRAY */ sub_4692( ref l_U832 );
        if ( /* NIS_IS_SHOT_FINISHED */ sub_5489( ref l_U800, 1 ))
        {
            l_U768 = 5;
        }
        break;
    }
    if (l_U768 == 5)
    {
        return 1;
        break;
    }
    return 0;
}

/* NIS_CREATE_STATIC_CAM */ void sub_3415(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_1499( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U703, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* P_CAM_SHAKE_CREATE_STRUCT */ void sub_3840(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    if (iParam0->_fU168 == 0)
    {
         /* P_CAM_SHAKE_SET_SHAKE_TYPE */ sub_3896( iParam0, uParam1 );
        iParam0->_fU192 = uParam1;
        iParam0->_fU36 = uParam2;
        iParam0->_fU148 = uParam3;
        iParam0->_fU152 = uParam4;
        iParam0->_fU156 = uParam5;
        iParam0->_fU160 = uParam7;
        iParam0->_fU176 = uParam6;
    }
     /* RESETTIMER */ sub_4296( iParam0 + 40 );
     /* RESETTIMER */ sub_4296( iParam0 + 76 );
     /* RESETTIMER */ sub_4296( iParam0 + 112 );
    iParam0->_fU172 = iParam0->_fU176;
    iParam0->_fU164 = 0;
    iParam0->_fU168 = 1;
    iParam0->_fU184 = 0;
    iParam0->_fU188 = 0;
    return;
}

/* P_CAM_SHAKE_SET_SHAKE_TYPE */ void sub_3896(int iParam0, unknown uParam1)
{
    switch (uParam1)
    {
        case 1:
        StrCopy( ref iParam0->_fU4, "SMALL_EXPLOSION_SHAKE", 32 );
        break;
        case 2:
        StrCopy( ref iParam0->_fU4, "MEDIUM_EXPLOSION_SHAKE", 32 );
        break;
        case 3:
        StrCopy( ref iParam0->_fU4, "LARGE_EXPLOSION_SHAKE", 32 );
        break;
        case 4:
        StrCopy( ref iParam0->_fU4, "HAND_SHAKE", 32 );
        break;
        case 5:
        StrCopy( ref iParam0->_fU4, "JOLT_SHAKE", 32 );
        break;
        case 6:
        StrCopy( ref iParam0->_fU4, "VIBRATE_SHAKE", 32 );
        break;
        case 7:
        StrCopy( ref iParam0->_fU4, "WOBBLY_SHAKE", 32 );
        break;
    }
    iParam0->_fU0 = iParam0->_fU192;
    return;
}

/* RESETTIMER */ void sub_4296(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* NIS_PLAY_INTERP_WITH_STATIC_CAMS */ void sub_4538(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE_WITH_INTERP( iParam1->_fU0, iParam0->_fU0, uParam2, uParam3, uParam4 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_1982( iParam1 + 48 );
    iParam1->_fU32 = 1;
    iParam1->_fU40 = 1;
    return;
}

/* P_CAM_SHAKE_HANDLE_ARRAY */ void sub_4692(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_CAM_SHAKE_HANDLE */ sub_4751( ref (uParam0^)[I] );
    }
    return;
}

/* P_CAM_SHAKE_HANDLE */ void sub_4751(int iParam0)
{
    if (iParam0->_fU172 == 1)
    {
        if (iParam0->_fU164 == 0)
        {
             /* CREATETIMER */ sub_1499( iParam0 + 40, iParam0->_fU148, 1, 0 );
             /* STARTTIMER */ sub_1982( iParam0 + 40 );
            if (iParam0->_fU152 > 0)
            {
                 /* CREATETIMER */ sub_1499( iParam0 + 76, iParam0->_fU152, 1, 0 );
                 /* STARTTIMER */ sub_1982( iParam0 + 76 );
            }
            iParam0->_fU164 = 1;
        }
        if ( /* ISTIMERDONE */ sub_4900( iParam0 + 40 ))
        {
             /* WRITESCRIPTLOG */ sub_494( "ML", "P_HANDLE_CAM_SHAKE is shaking the camera", "---" );
             /* P_SHAKE_CAM */ sub_5150( iParam0 + 4, iParam0->_fU36 );
            if (iParam0->_fU156 > 0)
            {
                 /* CREATETIMER */ sub_1499( iParam0 + 112, iParam0->_fU156, 1, 0 );
                 /* STARTTIMER */ sub_1982( iParam0 + 112 );
            }
        }
        if ( /* ISTIMERDONE */ sub_4900( iParam0 + 112 ))
        {
             /* P_SHAKE_CAM */ sub_5150( iParam0 + 4, iParam0->_fU36 );
             /* CREATETIMER */ sub_1499( iParam0 + 112, iParam0->_fU156, 1, 0 );
             /* STARTTIMER */ sub_1982( iParam0 + 112 );
        }
        if ( /* ISTIMERDONE */ sub_4900( iParam0 + 76 ))
        {
             /* WRITESCRIPTLOG */ sub_494( "ML", "P_HANDLE_CAM_SHAKE is done shaking the camera", "---" );
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam0->_fU160 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam0->_fU160 );
             /* RESETTIMER */ sub_4296( iParam0 + 112 );
            iParam0->_fU172 = 0;
        }
    }
    return;
}

/* ISTIMERDONE */ int sub_4900(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_SHAKE_CAM */ void sub_5150(unknown uParam0, unknown uParam1)
{
    SHAKE_CAM( GET_RENDERING_CAM(), uParam0, uParam1 );
    SHAKE_GAMEPLAY_CAM( uParam0, uParam1 );
    return;
}

/* NIS_IS_SHOT_FINISHED */ int sub_5489(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || ( /* ISTIMERDONE */ sub_4900( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || ( /* ISTIMERDONE */ sub_4900( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

/* IS_RESTART_ACTIVE */ void sub_5757()
{
    return g_U648;
}

/* P_RESET_CHECKPOINT_THREAD */ void sub_5907(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

/* F_CHECK_QUIT_RETRY */ int sub_6000(int iParam0)
{
    iParam0 = 1;
    switch (l_U41)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_6082( ref l_U43 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
            {
                l_U42 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_1499( ref l_U43, l_U42, 1, 1 );
             /* STARTTIMER */ sub_1982( ref l_U43 );
        }
        if ( /* ISTIMERDONE */ sub_4900( ref l_U43 ))
        {
             /* WRITESCRIPTLOG */ sub_494( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1124() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1124(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U41 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U41 = 2;
            }
            else
            {
                l_U41 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_494( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_6565();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_494( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_6565();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_6082(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_6565()
{
     /* WRITESCRIPTLOG */ sub_494( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_4296( ref l_U43 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1124() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1124(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U40 = 0;
    l_U40 = l_U40;
    l_U41 = 0;
    return;
}

/* P_CAM_SHAKE_FORCE_DEACTIVATE_ARRAY */ void sub_7264(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_CAM_SHAKE_FORCE_DEACTIVATE */ sub_7335( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_CAM_SHAKE_FORCE_DEACTIVATE */ void sub_7335(int iParam0, int iParam1)
{
    if (iParam0->_fU172 == 1)
    {
        if (iParam1 == 1)
        {
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam1 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam1 );
        }
        else
        {
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam0->_fU160 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam0->_fU160 );
        }
         /* RESETTIMER */ sub_4296( iParam0 + 40 );
         /* RESETTIMER */ sub_4296( iParam0 + 76 );
         /* RESETTIMER */ sub_4296( iParam0 + 112 );
        iParam0->_fU172 = 0;
    }
    return;
}

/* P_CLEANUP_OB1 */ void sub_7541(boolean bParam0)
{
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_CLEANUP_OB1 start", 0 );
    if ((CUTSCENE_NAMED_IS_LOADING( "11_02_PANAMA_concat" )) || (CUTSCENE_IS_LOADED( "11_02_PANAMA_concat" )))
    {
        CLEAR_NAMED_CUTSCENE( "11_02_PANAMA_concat" );
    }
    if ((CUTSCENE_NAMED_IS_LOADING( "mid_05_panama_sh02" )) || (CUTSCENE_IS_LOADED( "mid_05_panama_sh02" )))
    {
        CLEAR_NAMED_CUTSCENE( "mid_05_panama_sh02" );
    }
    if ((CUTSCENE_NAMED_IS_LOADING( "MID_04_PANAMA_CONCAT" )) || (CUTSCENE_IS_LOADED( "MID_04_PANAMA_CONCAT" )))
    {
        CLEAR_NAMED_CUTSCENE( "MID_04_PANAMA_CONCAT" );
    }
    if ((CUTSCENE_NAMED_IS_LOADING( "mid_05_panama_sh02" )) || (CUTSCENE_IS_LOADED( "mid_05_panama_sh02" )))
    {
        CLEAR_NAMED_CUTSCENE( "mid_05_panama_sh02" );
    }
    ISEQ_TERMINATE( -1699440101 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7990( -1699440101, ref g_U1878 );
    ISEQ_TERMINATE( -1390854428 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7990( -1390854428, ref g_U1878 );
    ISEQ_TERMINATE( -554572542 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7990( -554572542, ref g_U1878 );
    ISEQ_TERMINATE( -1878236778 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7990( -1878236778, ref g_U1878 );
    ISEQ_TERMINATE( -2125544421 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7990( -2125544421, ref g_U1878 );
    RESET_PED_MODEL_LOD_DISTANCES( g_U1521 );
    RESET_PED_MODEL_LOD_DISTANCES( g_U1522 );
     /* CLEANPED */ sub_9186( l_U236 );
     /* CLEANPEDARRAY */ sub_9275( ref l_U986 );
     /* CLEANPEDARRAY */ sub_9275( ref g_U3505 );
     /* CLEANPEDARRAY */ sub_9275( ref l_U1170 );
     /* CLEANPLACEMENTARRAY */ sub_9371( ref l_U548 );
     /* CLEANPLACEMENT */ sub_9426( g_U773._fU0 );
    if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( "PANAMA_OS_5" ))
    {
        AUDIO_MUSIC_STOP_ONESHOT();
    }
    if (NOT bParam0)
    {
         /* CLEANPED */ sub_9186( g_U3504 );
         /* CLEANPEDARRAY */ sub_9275( ref g_U3505 );
         /* CLEANPEDARRAY */ sub_9275( ref g_U3511 );
         /* CLEANVEHICLEARRAY */ sub_9590( ref g_U4194 );
         /* CLEANOBJECTARRAY */ sub_9736( ref g_U4163 );
         /* CLEANPLACEMENT */ sub_9426( g_U791._fU0 );
    }
     /* P_STOP_SP_CHALLENGES */ sub_9873();
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_CLEANUP_OB1 end", 0 );
    return;
}

/* P_STREAMREQ_ISEQ_REMOVE */ void sub_7990(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_8128( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a ISEQ asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ int sub_8128(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if ((uParam1^)[I] == iParam0)
            {
                DISPLAYF( "[CCB] ### The THREADID index matches the asset requested for removal: {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
            else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID index is in use and is active: {} ###", 1, 513, (uParam1^)[I] );
                Result = I;
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is in use, but is no longer active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

/* CLEANPED */ void sub_9186(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CLEANPEDARRAY */ void sub_9275(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_9186( (uParam0^)[I] );
    }
    return;
}

/* CLEANPLACEMENTARRAY */ void sub_9371(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* CLEANPLACEMENT */ sub_9426( (uParam0^)[I] );
    }
    return;
}

/* CLEANPLACEMENT */ void sub_9426(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

/* CLEANVEHICLEARRAY */ void sub_9590(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANVEHICLE */ sub_9644( (uParam0^)[I] );
    }
    return;
}

/* CLEANVEHICLE */ void sub_9644(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

/* CLEANOBJECTARRAY */ void sub_9736(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* CLEANOBJECT */ sub_9788( (uParam0^)[I] );
    }
    return;
}

/* CLEANOBJECT */ void sub_9788(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* P_STOP_SP_CHALLENGES */ void sub_9873()
{
     /* WRITESCRIPTLOG */ sub_494( "CCB", "P_STOP_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_494( "CCB", "Stopping the Panama_Operations_Building context...", 0 );
    END_CONTEXT( "Panama_Operations_Building" );
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_10213(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_494( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_10432( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_11596( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_11910( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_12389( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_11910( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_12389( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_11910( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_12389( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_12705( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_12389( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_12705( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_12389( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_13277( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_13479( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1086(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_494( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_10432(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_10494( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_10494(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_11596(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_11910(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_12314( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* WRITE_STRING */ void sub_12314(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_12389(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_12705(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_12314( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_13277(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_13479(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_10494( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_13577( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_13577(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_HANDLE_EVENTS */ void sub_14901()
{
    int iVar2;

    iVar2 = l_U191;
    switch (l_U191)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_494( "SP", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
         /* P_INITIALIZE_SCRIPT_DATA */ sub_15155();
         /* P_SET_STATIC_DATA */ sub_15688();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U191 = 2;
         /* WRITESCRIPTLOG */ sub_494( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
         /* P_REQUEST_OB1_PERSISTENT_ASSETS */ sub_18812();
         /* P_REQUEST_OB1_NONPERSISTENT_ASSETS */ sub_26614();
        l_U191 = 3;
         /* WRITESCRIPTLOG */ sub_494( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if (( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_31302( ref g_U1878 )) AND (( /* F_STREAMREQ_ANIM_DICT_IS_LOADED */ sub_30911( ref g_U1975 )) AND (( /* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ sub_30509( ref g_U1829 )) AND ( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_30112( ref g_U1588 )))))
        {
            if ((NOT l_U140._fU0) AND (g_U833 == 8))
            {
                l_U191 = 4;
                 /* WRITESCRIPTLOG */ sub_494( "SP", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
            }
            else
            {
                l_U191 = 6;
                 /* WRITESCRIPTLOG */ sub_494( "SP", "eCheckpointState = CP_OB1_PRE_CREATE_PEDS", 0 );
            }
        }
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_494( "GA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        l_U194 = 0;
        g_U1230[8] = 1;
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
        {
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_1086(), 0 );
        }
        if (( /* HAS_SAVEFILE_LOADED */ sub_31983( ref l_U140 )) == 0)
        {
             /* F_GIVEPEDWEAPON */ sub_12705(  /* PLAYER_PED_ID */ sub_1086(), 1308526797, 200, 0, 0 );
             /* F_GIVEPEDWEAPONTOHOLSTER */ sub_11910(  /* PLAYER_PED_ID */ sub_1086(), -1404433099, 0, 200, 0 );
            l_U191 = 5;
             /* WRITESCRIPTLOG */ sub_494( "GA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U191 = 6;
             /* WRITESCRIPTLOG */ sub_494( "SP", "eCheckpointState = CP_OB1_PRE_CREATE_PEDS", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1086(), 0 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1086(), 0, 0 ) )))
            {
                l_U191 = 6;
                 /* WRITESCRIPTLOG */ sub_494( "GA", "eCheckpointState = CP_OB1_PRE_CREATE_PEDS", 0 );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_494( "GA", "Waiting for the player's weapons to exist.", 0 );
            }
        }
        break;
        case 6:
        if (l_U192)
        {
            l_U931 = 1;
            l_U1109 = 1;
        }
        if ( /* F_OB1_CREATE_BALCONY_COVER1_ENEMIES */ sub_32590())
        {
            if ( /* F_OB1_CREATE_PASSOS */ sub_35642())
            {
                if ( /* F_OB1_CREATE_ZIPLINE_ENEMIES */ sub_35995())
                {
                    l_U191 = 7;
                     /* WRITESCRIPTLOG */ sub_494( "GA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
                }
            }
        }
        break;
        case 7:
        if (l_U192)
        {
             /* P_CREATE_GLOBAL_BUILDING_VEHICLES_AND_PILLS */ sub_36650();
             /* P_OB1_CREATE_PLACEMENTS */ sub_38334();
        }
        if (g_U1230[8])
        {
            if (l_U194)
            {
                if (CUTSCENE_IS_LOADED( "11_02_PANAMA_concat" ))
                {
                    l_U191 = 8;
                     /* WRITESCRIPTLOG */ sub_494( "GA", "eCheckpointState = CP_HANDLE_11_02_PANAMA", 0 );
                }
                else if (CUTSCENE_NAMED_IS_LOADING( "11_02_PANAMA_concat" ))
                {
                     /* WRITESCRIPTLOG */ sub_494( "GA", "Waiting for cutscene 11_02_PANAMA_concat to load.", 0 );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_494( "GA", "Requesting cutscene 11_02_PANAMA_concat to load.", 0 );
                    PRE_STREAM_SEAMLESS_CUTSCENE( "11_02_PANAMA_concat" );
                }
            }
            else
            {
                l_U191 = 8;
                 /* WRITESCRIPTLOG */ sub_494( "GA", "eCheckpointState = CP_HANDLE_11_02_PANAMA", 0 );
            }
        }
        break;
        case 8:
        if (l_U192)
        {
             /* P_GLOBAL_CREATE_LOCKS */ sub_40404( 0, 1 );
            SET_PED_MODEL_LOD_DISTANCES( g_U1521, 10.00000000, 80.00000000 );
            SET_PED_MODEL_LOD_DISTANCES( g_U1522, 10.00000000, 80.00000000 );
             /* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ sub_49117( ref l_U196, "11_02_PANAMA_concat", 41260, 41361, 44136, 45831, 45880, 47274, 250, 0 );
            if (l_U194)
            {
                 /* CUTSYS_SETCUTSCENELOADEXTERIORONSKIP */ sub_49662( ref l_U196, g_U980[8] );
                l_U196._fU4 = 2;
            }
            else
            {
                l_U196._fU4 = 7;
            }
        }
        if ( /* CUTSYS_HANDLECUTSCENE */ sub_49777( ref l_U196 ))
        {
            if (NOT l_U140._fU0)
            {
                g_U834 = 8;
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_51578( ref l_U140, g_U834,  /* PLAYER_PED_ID */ sub_1086(), g_U980[8], g_U1086[8], g_U1158[8], g_U1122[8], 1 );
            }
            if (NOT AUDIO_IS_MUSIC_PLAYING())
            {
                 /* WRITESCRIPTLOG */ sub_494( "MF", "Playing 6.4: PANAMA_FINAL Mood: PANAMA_FINAL_1_2_4", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_1_2_4", "PANAMA_FINAL_1_2_4", 0.00000000, 8000, -1, -1082130432, 0 );
            }
             /* STARTTIMER */ sub_1982( ref l_U323 );
             /* CREATETIMER */ sub_1499( ref l_U629, 2500, 1, 0 );
             /* STARTTIMER */ sub_1982( ref l_U629 );
             /* CREATETIMER */ sub_1499( ref l_U1176, 500, 1, 0 );
             /* P_START_SP_CHALLENGES */ sub_56378();
            l_U191 = 9;
             /* WRITESCRIPTLOG */ sub_494( "GA", "eCheckpointState = CP_OB1_GAMEPLAY_1ST_COVER", 0 );
        }
        break;
        case 9:
        if (l_U192)
        {
             /* STARTTIMER */ sub_1982( ref l_U748 );
             /* STARTTIMER */ sub_1982( ref l_U638 );
        }
         /* P_HANDLE_PASSOS_LOOK_AT_PLAYER */ sub_56660( 3.50000000, -1 );
         /* P_HANDLE_PASSOS_SHOOTING_COVER_1 */ sub_57052();
         /* P_HANDLE_PASSOS_DIALOGUE */ sub_57633();
         /* P_PED_ARRAY_Z_SAFETY_CHECK */ sub_60514( ref l_U986, 7.00000000, 1, 0 );
        if (NOT l_U1173[0])
        {
            if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_57101( ref l_U986 )) <= 2)
            {
                if (IS_SPHERE_VISIBLE( -109.70000000, 20.93000000, 15.06894000, 1.00000000, 0 ))
                {
                     /* STARTTIMER */ sub_1982( ref l_U1176 );
                    l_U1173[0] = 1;
                }
            }
        }
        else if ( /* ISTIMERDONE */ sub_4900( ref l_U1176 ))
        {
             /* P_START_ZIPLINE_REBEL_1 */ sub_60814();
        }
        if (NOT l_U1194[0])
        {
            if ( /* ISPEDVALID */ sub_61754( l_U1170[0], 0 ))
            {
                if (ISEQ_QUERY_ENTITY_STATE( -1878236778, "s_pan_rebel_zipline_1", 6 ))
                {
                     /* P_ZIPLINE_REBEL_INTO_BUILDING */ sub_61925( l_U1170[0] );
                    l_U1194[0] = 1;
                }
            }
        }
        if ((NOT l_U1141) AND (IS_PED_DEAD( l_U1170[0] )))
        {
             /* P_SPEECH_PLAY_MONOLOGUE */ sub_60931( "SPAN_MHGZPR1", ref l_U1121 );
             /* WRITESCRIPTLOG */ sub_494( "CR", "Zipliner dead[0] - Playing Max's line", 0 );
            l_U1141 = 1;
        }
        if ((NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_62315( l_U254 ))) AND ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() ))) AND (NOT l_U577)))
        {
            if (IS_PED_SHOOTING(  /* PLAYER_PED_ID */ sub_1086() ))
            {
                if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1086(), 0, 0 ) ))
                {
                    if ((GET_WEAPON_TYPE( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1086(), 0, 0 ) )) != 1478009203)
                    {
                         /* P_OB1_PLAY_SPEECH_SPAN_MENTRK1 */ sub_62615();
                    }
                }
                l_U577 = 1;
            }
        }
        if ( /* F_ISPLAYERINTRIGGERBOX */ sub_62897( l_U598 ))
        {
            if ((NOT l_U619._fU20) || ( /* ISTIMERDONE */ sub_4900( ref l_U619 )))
            {
                 /* P_OB1_PLAY_SPEECH_VIG12 */ sub_63048();
                 /* RESETTIMER */ sub_4296( ref l_U619 );
                 /* STARTTIMER */ sub_1982( ref l_U619 );
            }
        }
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() ))) AND (l_U323._fU20))
        {
            if ((NOT (IS_PED_USING_MP3_COVER_TASK(  /* PLAYER_PED_ID */ sub_1086() ))) || (IS_PED_SHOOTING(  /* PLAYER_PED_ID */ sub_1086() )))
            {
                 /* WRITESCRIPTLOG */ sub_494( "GA", "Player has taken action, stopping inaction timer.", 0 );
                 /* RESETTIMER */ sub_4296( ref l_U323 );
            }
        }
        if (NOT l_U997)
        {
            if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_57101( ref l_U986 )) == 1)
            {
                 /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_63681( ref l_U986 );
                 /* P_OB1_FORCE_LAST_ENEMY_OUT_OF_COVER */ sub_63853( ref l_U986 );
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
                BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
                l_U997 = 1;
            }
        }
        if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (NOT IS_BULLET_CAMERA_ACTIVE()))
        {
            if (( /* ISTIMERDONE */ sub_4900( ref l_U323 )) || ( /* F_ISPLAYERINTRIGGERBOX */ sub_62897( l_U302 )))
            {
                l_U191 = 10;
                 /* WRITESCRIPTLOG */ sub_494( "GA", "eCheckpointState = CP_OB1_LOAD_MID_05A_PANAMA", 0 );
            }
        }
        if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_57101( ref l_U986 )) == 0)
        {
            if (NOT (IS_PED_DEAD( g_U3504 )))
            {
                l_U628 = 0;
                TASK_CLEAR_LOOK_AT( g_U3504 );
            }
            l_U767 = 1;
            l_U191 = 12;
             /* WRITESCRIPTLOG */ sub_494( "GA", "eCheckpointState = CP_LOAD_MID_04_PANAMA", 0 );
        }
        break;
        case 10:
        if (l_U192)
        {
             /* LOADSEAMLESSCUTSCENE */ sub_29616( "mid_05_panama_sh02", 0 );
        }
        if (CUTSCENE_IS_LOADED( "mid_05_panama_sh02" ))
        {
            l_U191 = 11;
             /* WRITESCRIPTLOG */ sub_494( "GA", "eCheckpointState = CP_HANDLE_MID_05A_PANAMA", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_494( "GA", "Waiting for mid_05_panama_sh02 to load.", 0 );
        }
        break;
        case 11:
        if (l_U192)
        {
             /* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ sub_49117( ref l_U275, "mid_05_panama_sh02", 64650, 64703, 64988, 45831, 65043, 65197, 0, 1 );
            AUDIO_MUSIC_SUSPEND( 4000 );
            l_U275._fU4 = 2;
        }
        if ( /* CUTSYS_HANDLECUTSCENE */ sub_49777( ref l_U275 ))
        {
            l_U193 = 1;
        }
        break;
        case 12:
        if (l_U192)
        {
             /* LOADSEAMLESSCUTSCENE */ sub_29616( "MID_04_PANAMA_CONCAT", 0 );
        }
        if (CUTSCENE_IS_LOADED( "MID_04_PANAMA_CONCAT" ))
        {
            if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (NOT (IS_BULLET_CAMERA_RUNNING( 0 ))))
            {
                l_U191 = 13;
                 /* WRITESCRIPTLOG */ sub_494( "GA", "eCheckpointState = CP_HANDLE_MID_04_PANAMA", 0 );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_494( "GA", "Waiting for Bullet Cam to end.", 0 );
            }
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_494( "GA", "Waiting for MID_04_PANAMA_CONCAT to load.", 0 );
        }
        break;
        case 13:
        if (l_U192)
        {
             /* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ sub_49117( ref l_U332, "MID_04_PANAMA_CONCAT", 65635, 67556, 70152, 45831, 70228, 65197, 250, 0 );
             /* CUTSYS_SETCUTSCENELOADEXTERIORONSKIP */ sub_49662( ref l_U332, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1086() ) );
            l_U332._fU4 = 2;
        }
        if ( /* CUTSYS_HANDLECUTSCENE */ sub_49777( ref l_U332 ))
        {
            l_U191 = 14;
             /* WRITESCRIPTLOG */ sub_494( "GA", "eCheckpointState = CP_OB1_GAMEPLAY_2ND_COVER", 0 );
        }
        break;
        case 14:
        if (l_U192)
        {
             /* CREATETIMER */ sub_1499( ref l_U629, 1500, 1, 0 );
             /* STARTTIMER */ sub_1982( ref l_U629 );
             /* RESETTIMER */ sub_4296( ref l_U619 );
             /* CREATETIMER */ sub_1499( ref l_U1185, 500, 1, 0 );
             /* STARTTIMER */ sub_1982( ref l_U729 );
             /* STARTTIMER */ sub_1982( ref l_U638 );
             /* P_OB1_WAVE2_ENEMIES_FIRE_BLANKS */ sub_71727( 1 );
             /* CREATETIMER */ sub_1499( ref l_U647, 2000, 1, 0 );
             /* STARTTIMER */ sub_1982( ref l_U647 );
        }
         /* P_HANDLE_PASSOS_LOOK_AT_PLAYER */ sub_56660( 3.50000000, -1 );
         /* P_HANDLE_PASSOS_SHOOTING_COVER_2 */ sub_72100();
         /* P_HANDLE_PASSOS_DIALOGUE */ sub_57633();
         /* P_PED_ARRAY_Z_SAFETY_CHECK */ sub_60514( ref g_U3505, 7.00000000, 1, 0 );
         /* P_PED_ARRAY_Z_SAFETY_CHECK */ sub_60514( ref g_U3511, 7.00000000, 1, 0 );
        if ((l_U647._fU20) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() ))))
        {
            if ((IS_PED_SHOOTING(  /* PLAYER_PED_ID */ sub_1086() )) || ( /* ISTIMERDONE */ sub_4900( ref l_U647 )))
            {
                 /* P_OB1_WAVE2_ENEMIES_FIRE_BLANKS */ sub_71727( 0 );
                 /* DISABLETIMER */ sub_72423( ref l_U647 );
            }
        }
        if (NOT l_U1066)
        {
            if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_57101( ref g_U3505 )) <= 4)
            {
                 /* P_OB1_BALCONY_COVER2_START_ENEMY_4 */ sub_72495();
                l_U1066 = 1;
            }
            else if (NOT (IS_PED_DEAD( g_U3505[3] )))
            {
                if (IS_PED_VISIBLE( g_U3505[3] ))
                {
                    SET_PED_VISIBLE( g_U3505[3], 0 );
                }
            }
        }
        if (NOT l_U1067)
        {
            if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_57101( ref g_U3505 )) <= 3)
            {
                 /* P_OB1_BALCONY_COVER2_START_ENEMY_5 */ sub_72972();
                l_U1067 = 1;
            }
            else if (NOT (IS_PED_DEAD( g_U3505[4] )))
            {
                if (IS_PED_VISIBLE( g_U3505[4] ))
                {
                    SET_PED_VISIBLE( g_U3505[4], 0 );
                }
            }
        }
        if (NOT l_U1173[1])
        {
            if ((( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_57101( ref g_U3505 )) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_57101( ref g_U3511 ))) <= 4)
            {
                if (IS_SPHERE_VISIBLE( -109.70000000, 20.93000000, 15.06894000, 1.00000000, 0 ))
                {
                     /* STARTTIMER */ sub_1982( ref l_U1185 );
                    l_U1173[1] = 1;
                }
            }
        }
        else if ( /* ISTIMERDONE */ sub_4900( ref l_U1185 ))
        {
             /* P_START_ZIPLINE_REBEL_2 */ sub_73533();
        }
        if (NOT l_U1194[1])
        {
            if ( /* ISPEDVALID */ sub_61754( l_U1170[1], 0 ))
            {
                if (ISEQ_QUERY_ENTITY_STATE( -2125544421, "s_pan_rebel_zipline_2", 6 ))
                {
                     /* P_ZIPLINE_REBEL_INTO_BUILDING */ sub_61925( l_U1170[1] );
                    l_U1194[1] = 1;
                }
            }
        }
        if ((NOT l_U1142) AND (IS_PED_DEAD( l_U1170[1] )))
        {
             /* P_SPEECH_PLAY_MONOLOGUE */ sub_60931( "SPAN_MHGZPR2", ref l_U1131 );
             /* WRITESCRIPTLOG */ sub_494( "CR", "Zipliner[1] dead - Playing Max's line 'Nice'", 0 );
            l_U1142 = 1;
        }
        if ( /* F_ISPLAYERINTRIGGERBOX */ sub_62897( l_U598 ))
        {
            if ((NOT l_U619._fU20) || ( /* ISTIMERDONE */ sub_4900( ref l_U619 )))
            {
                 /* P_OB1_PLAY_SPEECH_VIG13 */ sub_74601();
                 /* RESETTIMER */ sub_4296( ref l_U619 );
                 /* STARTTIMER */ sub_1982( ref l_U619 );
            }
        }
        if (NOT l_U1103)
        {
            if ((( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_57101( ref g_U3505 )) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_57101( ref g_U3511 ))) == 1)
            {
                 /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_63681( ref g_U3505 );
                 /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_63681( ref g_U3511 );
                 /* P_OB1_FORCE_LAST_ENEMY_OUT_OF_COVER */ sub_63853( ref g_U3505 );
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
                BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
                 /* P_START_CHECKPOINT_THREAD */ sub_74974( ref g_U835[9] );
                l_U1103 = 1;
            }
        }
        if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (NOT IS_BULLET_CAMERA_ACTIVE()))
        {
            if ( /* F_ISPLAYERINTRIGGERBOX */ sub_62897( l_U512 ))
            {
                l_U191 = 15;
                 /* WRITESCRIPTLOG */ sub_494( "GA", "eCheckpointState = CP_LOAD_MID_05B_PANAMA", 0 );
            }
        }
        if ((( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_57101( ref g_U3505 )) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_57101( ref g_U3511 ))) == 0)
        {
            if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (NOT (IS_BULLET_CAMERA_RUNNING( 0 ))))
            {
                if (NOT (IS_PED_DEAD( g_U3504 )))
                {
                    l_U628 = 0;
                    TASK_CLEAR_LOOK_AT( g_U3504 );
                }
                 /* TAKE_OPS_BUILDING_VEHICLE_AND_PILL_SNAPSHOT */ sub_75218();
                g_U1230[9] = 1;
                l_U191 = 17;
                 /* WRITESCRIPTLOG */ sub_494( "GA", "eCheckpointState = CP_FINISHED", 0 );
            }
        }
        break;
        case 15:
        if ( /* F_UNLOADCUTSCENEANDLOADNEWCUTSCENE */ sub_75754( "MID_06_PANAMA", "mid_05_panama_sh02" ))
        {
            l_U191 = 16;
             /* WRITESCRIPTLOG */ sub_494( "GA", "eCheckpointState = CP_HANDLE_MID_05B_PANAMA", 0 );
        }
        break;
        case 16:
        if (l_U192)
        {
             /* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ sub_49117( ref l_U485, "mid_05_panama_sh02", 64650, 76141, 64988, 45831, 76416, 65197, 0, 1 );
            l_U485._fU4 = 2;
        }
        if ( /* CUTSYS_HANDLECUTSCENE */ sub_49777( ref l_U485 ))
        {
            l_U193 = 1;
        }
        break;
        case 17:
        if ((g_U834 == 9) || (NOT HAS_CUTSCENE_FINISHED()))
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U191 = 0;
             /* WRITESCRIPTLOG */ sub_494( "SP", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
    }
    if (l_U191 != iVar2)
    {
        l_U192 = 1;
    }
    else
    {
        l_U192 = 0;
    }
    return;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_15155()
{
     /* WRITESCRIPTLOG */ sub_494( "SP", "P_INITIALIZE_SCRIPT_DATA", 0 );
    l_U192 = 1;
    l_U193 = 0;
    l_U237 = 0;
    l_U238 = 0;
    l_U239 = 0;
    l_U240 = 0;
     /* CREATETIMER */ sub_1499( ref l_U245, 1000, 1, 0 );
     /* CREATETIMER */ sub_1499( ref l_U265, l_U264, 1, 0 );
    l_U241 = 0;
    l_U242 = 0;
    l_U243 = 0;
    g_U4197[0] = 0;
    g_U4197[1] = 0;
    g_U4187 = 0;
    g_U4191[0] = 0;
    g_U4191[1] = 0;
     /* CREATETIMER */ sub_1499( ref l_U323, 30000, 1, 0 );
    l_U768 = 0;
    l_U628 = 0;
    l_U697 = 1;
    l_U708 = 0;
    l_U767 = 0;
    l_U577 = 0;
     /* CREATETIMER */ sub_1499( ref l_U619, 25000, 1, 0 );
     /* CREATETIMER */ sub_1499( ref l_U748, 4000, 1, 0 );
     /* CREATETIMER */ sub_1499( ref l_U729, 2000, 1, 0 );
     /* CREATETIMER */ sub_1499( ref l_U638, GET_RANDOM_INT_IN_RANGE( l_U1197, l_U1198 ), 1, 0 );
    l_U1141 = 0;
    l_U1142 = 0;
    l_U931 = 0;
    l_U932 = 0;
    l_U997 = 0;
    l_U1103 = 0;
    l_U998 = 0;
    l_U999 = 0;
    l_U1066 = 0;
    l_U1067 = 0;
    l_U1068 = 0;
    l_U1069 = 0;
    l_U1109 = 0;
    l_U1110 = 0;
     /* P_RESET_BOOL_ARRAY */ sub_15564( ref l_U1194 );
     /* P_RESET_BOOL_ARRAY */ sub_15564( ref l_U1173 );
    return;
}

/* P_RESET_BOOL_ARRAY */ void sub_15564(unknown uParam0)
{
    int I;

     /* WRITESCRIPTLOG */ sub_494( "CCB", "P_RESET_BOOL_ARRAY", 0 );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = 0;
    }
    return;
}

/* P_SET_STATIC_DATA */ void sub_15688()
{
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_SET_STATIC_DATA start", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15790( ref l_U223, -65.15000000, 32.89000000, 7.95000000, 0.00000000, -266727822, 26, 0, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15790( ref l_U554, -65.10000000, 30.23700000, 7.95000000, 180.00000000, -454789158, 26, 0, 0, 0, 1 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15790( ref l_U933[0], -100.94460000, 30.76588000, 15.04210000, 269.94960000, -1133377339, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15790( ref l_U933[1], -102.95000000, 26.10000000, 15.06902000, 269.37000000, -1380862096, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15790( ref l_U933[2], -102.82220000, 22.44795000, 15.06902000, 289.20770000, 1454680750, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15790( ref l_U933[3], -107.28000000, 21.19000000, 15.07000000, 289.20770000, -365193942, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15790( ref l_U1000[0], -115.29000000, 32.10000000, 15.05000000, -89.63000000, -2109614539, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15790( ref l_U1000[1], -106.95000000, 26.57000000, 15.05000000, -89.63000000, -261936161, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15790( ref l_U1000[2], -114.68000000, 21.24000000, 15.07000000, -89.63000000, -376400271, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15790( ref l_U1000[3], -115.29000000, 28.51000000, 15.05000000, -82.00000000, -1467540445, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15790( ref l_U1000[4], -116.42000000, 21.34000000, 15.05000000, -100.00000000, 1423764257, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15790( ref l_U1070[0], -108.99000000, 25.47000000, 8.07000000, -82.00000000, -1772423755, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15790( ref l_U1070[1], -109.73000000, 26.44000000, 8.15000000, -100.00000000, 941178645, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15790( ref l_U1143[0], -127.87000000, 26.46000000, 8.17000000, 180.00000000, 1050341638, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_15790( ref l_U1143[1], -129.92000000, 25.41000000, 8.17000000, 180.00000000, -2109614539, 7, 3, 2, 0, 0 );
     /* P_CREATETRIGGERBOX */ sub_16605( ref l_U598, "tb_OB1_PassosWarning", -97.48000000, 26.61000000, 7.85000000, 13.64000000, 16.86000000, 4.70000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16605( ref l_U302, "tb_OB1_TooFarFromPassosCover01", -105.87000000, 26.61000000, 7.85000000, 2.05000000, 3.00000000, 4.70000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16605( ref l_U512, "tb_OB1_TooFarFromPassosCover02", -113.46000000, 26.54000000, 7.85000000, 12.05000000, 7.82000000, 4.70000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16605( ref l_U359, "Mid04CoverA", -55.43000000, 30.36000000, 7.85000000, 1.39000000, 1.68000000, 2.73000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16605( ref l_U380, "Mid04CoverB", -65.43000000, 29.23000000, 7.85000000, 1.15000000, 2.66000000, 2.30000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16605( ref l_U401, "Mid04CoverC", -76.17000000, 23.34000000, 7.85000000, 1.15000000, 2.66000000, 2.54000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16605( ref l_U422, "Mid04CoverD", -87.59000000, 28.38000000, 7.85000000, 2.19000000, 4.66000000, 2.96000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16605( ref l_U443, "Mid04Truck1", -66.98000000, 21.36000000, 7.85000000, 2.68000000, 5.58000000, 2.54000000, 0.00000000, 0.00000000, -36.82000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16605( ref l_U464, "Mid04Truck2", -81.72000000, 23.82000000, 7.85000000, 2.25000000, 3.43000000, 2.54000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_17379( ref l_U1104, "TETHER_BALCONY_LEFT", -102.90000000, 22.53000000, 14.81000000, 1.20000000, 3.73000000, 3.75000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_17379( ref l_U1105, "TETHER_BALCONY_CENTER", -102.90000000, 27.06000000, 14.81000000, 1.20000000, 4.60000000, 3.75000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_17379( ref l_U1106, "TETHER_BALCONY_RIGHT", -101.90000000, 30.59000000, 14.93000000, 1.50000000, 1.80000000, 3.15000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_17379( ref l_U1108, "TETHER_BALCONY_CENTER_WHOLE", -102.90000000, 24.56000000, 14.81000000, 1.20000000, 6.81000000, 3.75000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_17379( ref l_U1107, "TETHER_GROUNDFLOOR", -106.31000000, 26.51000000, 7.50000000, 17.00000000, 8.55000000, 3.15000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATEDOORSTRUCT */ sub_17818( ref l_U533[0], -1513586507, -104.09660000, 25.90269000, 16.16696000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORMINMAXLIMIT */ sub_17900( ref l_U533[0], -100.00000000, 100.00000000 );
     /* P_OPENDOOR */ sub_18246( ref l_U533[0], 1, 1, 1.00000000 );
     /* P_SETDOORLATCH */ sub_18413( ref l_U533[0], 1 );
     /* P_CREATEDOORSTRUCT */ sub_17818( ref l_U533[1], 372230415, -45.48747000, 29.79249000, 9.53181000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_18545( ref l_U533[1], 1 );
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_SET_STATIC_DATA end", 0 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_15790(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATETRIGGERBOX */ void sub_16605(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATETETHERBOX */ void sub_17379(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATEDOORSTRUCT */ void sub_17818(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

/* P_SETDOORMINMAXLIMIT */ void sub_17900(int iParam0, float fParam1, float fParam2)
{
    if (( /* F_DOESDOOREXIST */ sub_17935( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_18019( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        PRINTSTRING( "[SP]### Error: Door fMinLimit greater than fMaxLimit (default min:-81.0 max:81.0) ###" );
        PRINTNL();
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_17935(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_18019(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_OPENDOOR */ void sub_18246(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if (( /* F_DOESDOOREXIST */ sub_17935( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_18019( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

/* P_SETDOORLATCH */ void sub_18413(int iParam0, unknown uParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_17935( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_18019( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_LATCH( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

/* P_SETDOORLOCKED */ void sub_18545(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if (( /* F_DOESDOOREXIST */ sub_17935( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_18019( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

/* P_REQUEST_OB1_PERSISTENT_ASSETS */ void sub_18812()
{
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_REQUEST_OB1_PERSISTENT_ASSETS start", 0 );
     /* P_GLOBAL_LOAD_RIFLE_ANIMS */ sub_18907();
     /* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ sub_22375( ref l_U176, ref g_U1588 );
    if ((l_U194) AND (g_U833 != 8))
    {
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_22448( g_U1513, ref g_U1588 );
    }
    else
    {
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_22448( g_U1522, ref g_U1588 );
    }
     /* P_STREAMREQ_WEAPON_TYPE_INSERT_ARRAY */ sub_24505( ref l_U186, ref g_U1829 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_19013( "LEVEL_S_PAN_CP_06", ref g_U1975 );
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_REQUEST_OB1_PERSISTENT_ASSETS end", 0 );
    return;
}

/* P_GLOBAL_LOAD_RIFLE_ANIMS */ void sub_18907()
{
     /* WRITESCRIPTLOG */ sub_494( "CR", "P_GLOBAL_LOAD_RIFLE_ANIMS - Start", 0 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_19013( "NPC_RIFLE_CORE", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_19013( "NPC_RIFLE_COVER", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_19013( "NPC_RIFLE_COVER_ENTER", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_19013( "NPC_RIFLE_COVER_RELOAD", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_19013( "NPC_RIFLE_DODGE", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_19013( "NPC_RIFLE_FLAVOR", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_19013( "NPC_RIFLE_FULLBODY", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_19013( "NPC_RIFLE_RELOAD", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_19013( "NPC_RIFLE_SEARCH", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_19013( "NPC_RIFLE_STAIRS", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_19013( "NPC_RIFLE_REACT", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_19013( "AMED_RIFL_PRONE", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_19013( "PLGE_RIFLE_CROUCH", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_19013( "PLGE_RIFLE_CORE", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_19013( "PLGE_RIFLE_CORE_RELOAD", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_19013( "PLGE_RIFLE_HANDSIG", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_19013( "PLGE_RIFLE_ACTIONS", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_19013( "PLGE_RIFLE_KNEE", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_19013( "PLGE_RIFLE_COVER", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_19013( "PLGE_RIFLE_REACT", ref g_U1975 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_19013( "PLGE_RIFLE_COVER_EXIT", ref g_U1975 );
     /* WRITESCRIPTLOG */ sub_494( "CR", "P_GLOBAL_LOAD_RIFLE_ANIMS - End", 0 );
    return;
}

/* P_STREAMREQ_ANIM_DICT_INSERT */ void sub_19013(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ sub_19065( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ANIM_DICT asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_19317( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ int sub_19065(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_19317( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_19317( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ANIM_DICT asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_19317( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_20888( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_19317( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ANIM_DICT asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ANIM_DICT: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
             /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_19317( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ void sub_19317(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19379( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ int sub_19379(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID is active: {} ###", 1, 513, (uParam1^)[I] );
                if ((uParam1^)[I] == iParam0)
                {
                    DISPLAYF( "The THREADID was already requested by this thread!!!", 0 );
                    DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                    (uParam1^)[I] = nil;
                    Result = I;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The THREADID index was requested by another thread!!! {} ###", 1, 513, I );
                }
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is NOT active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

/* P_STREAMREQ_THREADID_RESET */ void sub_20888(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ void sub_22375(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_22448( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT */ void sub_22448(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 =  /* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ sub_22515( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar4 );
            PRINTNL();
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_22773( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Inserting MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ int sub_22515(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_22773( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is loading: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_22773( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                     /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_22773( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_20888( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being removed: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_22773( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_22773( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ void sub_22773(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19379( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT_ARRAY */ void sub_24505(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_24579( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT */ void sub_24579(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ sub_24633( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_24894( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ int sub_24633(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_24894( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is loading: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_24894( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The WEAPON_TYPE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_24894( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_20888( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being removed: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_24894( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            DISPLAYF( "The WEAPON_TYPE asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_24894( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ void sub_24894(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19379( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_REQUEST_OB1_NONPERSISTENT_ASSETS */ void sub_26614()
{
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_REQUEST_OB1_NONPERSISTENT_ASSETS start", 0 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_26724( -1390854428, ref g_U1878 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_26724( -1699440101, ref g_U1878 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_26724( -1878236778, ref g_U1878 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_26724( -2125544421, ref g_U1878 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_26724( -554572542, ref g_U1878 );
    if ((l_U194) AND (g_U833 != 8))
    {
         /* LOADSEAMLESSCUTSCENE */ sub_29616( "11_02_PANAMA_concat", 0 );
    }
    AUDIO_MUSIC_REQUEST_ONESHOT( "PANAMA_OS_5", 0 );
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_REQUEST_OB1_NONPERSISTENT_ASSETS end", 0 );
    return;
}

/* P_STREAMREQ_ISEQ_INSERT */ void sub_26724(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 =  /* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ sub_26785( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar12 );
            PRINTNL();
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar4 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
             /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_27035( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

/* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ int sub_26785(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_27035( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is loading: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_27035( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                        DISPLAYF( "The ISEQ asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_27035( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loading: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_27035( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### Re-requesting ISEQ: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_20888( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_20888( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being removed: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_27035( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar5 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_27035( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ISEQ_THREADID_SET_ID */ void sub_27035(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19379( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* LOADSEAMLESSCUTSCENE */ void sub_29616(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_LOADED */ int sub_30112(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be requested: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to load: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be removed: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ int sub_30509(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be requested: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to load: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be removed: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ANIM_DICT_IS_LOADED */ int sub_30911(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be requested: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to load: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be removed: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ISEQ_IS_LOADED */ int sub_31302(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be requested: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to load: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be removed: {} ###", 1, 1281, ref uVar3 );
            return 0;
        };;;
    }
    return 1;
}

/* HAS_SAVEFILE_LOADED */ int sub_31983(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_494( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_10213( uParam0,  /* PLAYER_PED_ID */ sub_1086() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* F_OB1_CREATE_BALCONY_COVER1_ENEMIES */ int sub_32590()
{
    switch (l_U931)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_494( "GA", "e_OB1_SpawnBalconyW1State = ENTITY_STATE_INIT", 0 );
         /* P_SETUP_AI_GROUP */ sub_32743( ref l_U991, 0.90000000, 0 );
        l_U932 = 0;
        l_U931 = 2;
         /* WRITESCRIPTLOG */ sub_494( "GA", "e_OB1_SpawnBalconyW1State = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U986[l_U932] =  /* CREATEPED */ sub_33219( ref l_U933[l_U932] );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_34195( l_U986[l_U932], ref l_U991 );
         /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_34610( ref l_U986[l_U932], "AIT_EXPERT", 5.00000000, 75.00000000 );
         /* F_GIVEPEDWEAPON */ sub_12705( l_U986[l_U932], 1308526797, 25000, 0, 0 );
        if (NOT (IS_PED_DEAD( l_U986[l_U932] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U986[l_U932], 1 );
            SET_PED_ALERTNESS( l_U986[l_U932], 3 );
            SET_PED_PINNED_DOWN( l_U986[l_U932], 0, -1 );
            SET_PED_FLAG_BLOCK_BLINDFIRE_IN_COVER( l_U986[l_U932], 1 );
            SET_PED_FLAG_FIRE_UNTIL_EMPTY_IN_COVER( l_U986[l_U932], 1 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
            {
                REGISTER_TARGET( l_U986[l_U932],  /* PLAYER_PED_ID */ sub_1086() );
                SET_LOCKED_TARGET( l_U986[l_U932],  /* PLAYER_PED_ID */ sub_1086() );
            }
            if (l_U932 == 0)
            {
                SET_PED_ACCURACY( l_U986[l_U932], -1467320974 );
            }
        }
         /* P_DEACTIVATEPED */ sub_35001( l_U986[l_U932] );
        l_U932++;
        if (l_U932 >= 4)
        {
            l_U931 = 3;
             /* WRITESCRIPTLOG */ sub_494( "GA", "e_OB1_SpawnBalconyW1State = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_35251( ref l_U986, "pi_OB1_BalconyW1Enemy" );
         /* P_TETHERPED */ sub_35394( ref l_U1106, l_U986[0], 1 );
         /* P_TETHERPED */ sub_35394( ref l_U1105, l_U986[1], 1 );
         /* P_TETHERPED */ sub_35394( ref l_U1104, l_U986[2], 1 );
         /* P_TETHERPED */ sub_35394( ref l_U1104, l_U986[3], 1 );
        l_U931 = 4;
         /* WRITESCRIPTLOG */ sub_494( "GA", "e_OB1_SpawnBalconyW1State = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    if (l_U931 == 4)
    {
        return 1;
        break;
    }
    return 0;
}

/* P_SETUP_AI_GROUP */ void sub_32743(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* CREATEPED */ void sub_33219(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_33401( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_33950( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_34051( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* LOADMODEL */ void sub_33401(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_12314( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* SETPEDDEFAULTSTATS */ void sub_33950(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_34051(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_34195(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_12314( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_32743( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_32743( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* P_SET_PED_TEMPLATE_AND_RANGES */ void sub_34610(unknown uParam0, unknown uParam1, float fParam2, float fParam3)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    return;
}

/* P_DEACTIVATEPED */ void sub_35001(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

/* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ void sub_35251(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

/* P_TETHERPED */ void sub_35394(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

/* F_OB1_CREATE_PASSOS */ int sub_35642()
{
     /* WRITESCRIPTLOG */ sub_494( "GA", "F_OB1_CREATE_PASSOS start", 0 );
    if (NOT (DOES_PED_EXIST( g_U3504 )))
    {
        g_U3504 =  /* CREATEPED */ sub_33219( ref l_U554 );
        if (NOT (IS_PED_DEAD( g_U3504 )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U3504, 1 );
            SET_PED_NAME_DEBUG( g_U3504, "piPassos" );
            SET_PED_GORE_FROM_PLAYER( g_U3504, 1 );
            SET_PED_GORE_FROM_NPC( g_U3504, 0 );
            SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U3504, 1 );
            SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U3504, 1 );
            SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( g_U3504, 0 );
            SET_PED_CAN_PUSH_PLAYER( g_U3504, 1 );
            SET_PED_AS_ONE_SHOT_KILL( g_U3504, 1 );
            SET_PED_RELATIONSHIP( g_U3504, 2, 3 );
            SET_AI_SHOULD_ALWAYS_MISS_PED( g_U3504, 1 );
            SET_PED_CAN_BE_TARGETTED( g_U3504, 0 );
             /* F_GIVEPEDWEAPON */ sub_12705( g_U3504, -612753081, 25000, 0, 0 );
            SET_PED_CONSUMING_AMMO( g_U3504, 0 );
            SET_PED_ACCURACY( g_U3504, -1467320974 );
        }
    }
    return 1;
}

/* F_OB1_CREATE_ZIPLINE_ENEMIES */ int sub_35995()
{
    switch (l_U1109)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_494( "CR", "e_OB1_SpawnZiplineState = ENTITY_STATE_INIT", 0 );
        l_U1110 = 0;
        l_U1109 = 2;
         /* WRITESCRIPTLOG */ sub_494( "CR", "e_OB1_SpawnZiplineState = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U1170[l_U1110] =  /* CREATEPED */ sub_33219( ref l_U1143[l_U1110] );
         /* F_GIVEPEDWEAPON */ sub_12705( l_U1170[l_U1110], 1308526797, 25000, 0, 0 );
        if (DOES_PED_EXIST( l_U1170[l_U1110] ))
        {
            SET_PED_AS_ONE_SHOT_KILL( l_U1170[l_U1110], 1 );
        }
         /* P_DEACTIVATEPED */ sub_35001( l_U1170[l_U1110] );
        l_U1110++;
        if (l_U1110 >= 2)
        {
            l_U1109 = 3;
             /* WRITESCRIPTLOG */ sub_494( "CR", "e_OB1_SpawnZiplineState = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_35251( ref l_U1170, "piBuildingZiplineEnemies" );
        l_U1109 = 4;
         /* WRITESCRIPTLOG */ sub_494( "CR", "e_OB1_SpawnBalconyW1State = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    if (l_U1109 == 4)
    {
        return 1;
        break;
    }
    return 0;
}

/* P_CREATE_GLOBAL_BUILDING_VEHICLES_AND_PILLS */ void sub_36650()
{
    int I;

     /* WRITESCRIPTLOG */ sub_494( "CCB", "P_CREATE_BUILDING_VEHICLES", 0 );
    for ( I = 0; I <= (g_U4194 - 1); I++ )
    {
        if (NOT g_U4197[I])
        {
             /* P_CREATE_GLOBAL_BUILDING_VEHICLE */ sub_36786( ref g_U4194, I );
             /* P_SETUP_GLOBAL_BUILDING_VEHICLE */ sub_37602( ref g_U4194, I );
        }
    }
     /* P_CREATE_GLOBAL_OPS_BUILDING_PILLS */ sub_37887();
    return;
}

/* P_CREATE_GLOBAL_BUILDING_VEHICLE */ void sub_36786(unknown uParam0, int iParam1)
{
    if (NOT (DOES_VEHICLE_EXIST( (uParam0^)[iParam1] )))
    {
         /* WRITESCRIPTLOG */ sub_494( "CCB", "Creating viStandoffVehicles_:", 0 );
        PRINTINT( iParam1 );
        PRINTNL();
        if (iParam1 == 0)
        {
            (uParam0^)[iParam1] =  /* CREATEVEHICLE */ sub_36949( -1425703854, -68.70000000, 22.60000000, 7.92000000, 145.11000000, 0, 0, 0 );
            if (NOT (IS_VEHICLE_DEAD( (uParam0^)[iParam1] )))
            {
                SET_VEHICLE_COLOUR_COMBINATION( (uParam0^)[iParam1], 4 );
                SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 5, 0 );
                SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 6, 1 );
                SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 7, 1 );
                SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 8, 1 );
            }
        }
        else if (iParam1 == 1)
        {
            (uParam0^)[iParam1] =  /* CREATEVEHICLE */ sub_36949( -1425703854, -84.28000000, 24.61000000, 7.91000000, 70.11000000, 0, 0, 0 );
            if (NOT (IS_VEHICLE_DEAD( (uParam0^)[iParam1] )))
            {
                SET_VEHICLE_COLOUR_COMBINATION( (uParam0^)[iParam1], 5 );
                SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 5, 1 );
                SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 6, 0 );
                SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 7, 1 );
                SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 8, 1 );
            }
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_494( "CCB", "The viStandoffVehicles vehicle was already created.", 0 );
    }
    return;
}

/* CREATEVEHICLE */ void sub_36949(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_33401( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for vehicle to exist: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

/* P_SETUP_GLOBAL_BUILDING_VEHICLE */ void sub_37602(unknown uParam0, unknown uParam1)
{
     /* WRITESCRIPTLOG */ sub_494( "CCB", "P_SETUP_BUILDING_VEHICLE", 0 );
    if (NOT (IS_VEHICLE_DEAD( (uParam0^)[uParam1] )))
    {
        SET_VEHICLE_ON_GROUND_PROPERLY( (uParam0^)[uParam1] );
        FREEZE_VEHICLE_POSITION( (uParam0^)[uParam1], 1 );
        SET_VEHICLE_PROOFS( (uParam0^)[uParam1], 0, 0, 1, 0, 0 );
        SET_VEHICLE_CAN_BE_DAMAGED( (uParam0^)[uParam1], 1 );
        SET_VEHICLE_ONLY_DAMAGED_BY_PLAYER( (uParam0^)[uParam1], 1 );
        SET_VEHICLE_ENGINE_HEALTH( (uParam0^)[uParam1], 600.00000000 );
        SET_VEHICLE_PETROL_TANK_HEALTH( (uParam0^)[uParam1], 300.00000000 );
        SET_VEHICLE_DOORS_LOCKED( (uParam0^)[uParam1], 3 );
        SET_VEHICLE_DOOR_BROKEN( (uParam0^)[uParam1], 5, 1 );
        SET_VEHICLE_LIGHTS( (uParam0^)[uParam1], 1 );
    }
    return;
}

/* P_CREATE_GLOBAL_OPS_BUILDING_PILLS */ void sub_37887()
{
    if (NOT g_U4187)
    {
         /* CLEANPLACEMENT */ sub_9426( g_U4186 );
        g_U4186 =  /* CREATEPLACEMENT */ sub_37990( -4072149, -66.66200000, 24.32500000, 8.63000000, 0, 0, 0, 0, 0, 0, 1119092736 );
    }
    if (NOT g_U4191[0])
    {
         /* CLEANPLACEMENT */ sub_9426( g_U4188[0] );
        g_U4188[0] =  /* CREATEPLACEMENT */ sub_37990( -4072149, -82.28700000, 23.17500000, 8.63000000, 0, 0, 0, 0, 0, 0, 1119092736 );
    }
    if (NOT g_U4191[1])
    {
         /* CLEANPLACEMENT */ sub_9426( g_U4188[1] );
        g_U4188[1] =  /* CREATEPLACEMENT */ sub_37990( -4072149, -82.18700000, 23.42500000, 8.65500000, 1.65000000, 0, 0, 0, 0, 0, 1119092736 );
    }
    return;
}

/* CREATEPLACEMENT */ void sub_37990(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a placement to exist: {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return Result;
}

/* P_OB1_CREATE_PLACEMENTS */ void sub_38334()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_CREATE_PLACEMENTS start", 0 );
    l_U548[0] = CREATE_AMMOBAG_PLACEMENT_ROTATE( -67.42000000, 24.46000000, 8.62000000, 0.00000000, 0.00000000, 1.20000000, 10.00000000, 3.00000000, 0, 90.00000000 );
    SET_AMMOBAG_REGEN_TIME( l_U548[0], 10.00000000 );
    SET_AMMOBAG_REGEN_RANGE( l_U548[0], 3.00000000 );
    SET_AMMOBAG_AMMO_AMOUNT( l_U548[0], -1088031219, 45 );
    SET_AMMOBAG_AMMO_AMOUNT( l_U548[0], 1138793073, 95 );
    SET_AMMOBAG_AMMO_AMOUNT( l_U548[0], -1295933220, 30 );
    SET_AMMOBAG_AMMO_AMOUNT( l_U548[0], -1383321053, 85 );
    SET_AMMOBAG_ENABLED( l_U548[0], 1 );
    l_U548[1] = CREATE_AMMOBAG_PLACEMENT_ROTATE( -81.90000000, 24.00000000, 8.62000000, 0.00000000, 0.00000000, -0.50000000, 10.00000000, 3.00000000, 0, 90.00000000 );
    SET_AMMOBAG_REGEN_TIME( l_U548[1], 10.00000000 );
    SET_AMMOBAG_REGEN_RANGE( l_U548[1], 3.00000000 );
    SET_AMMOBAG_AMMO_AMOUNT( l_U548[1], -1088031219, 45 );
    SET_AMMOBAG_AMMO_AMOUNT( l_U548[1], 1138793073, 95 );
    SET_AMMOBAG_AMMO_AMOUNT( l_U548[1], -1295933220, 30 );
    SET_AMMOBAG_AMMO_AMOUNT( l_U548[1], -1383321053, 85 );
    SET_AMMOBAG_ENABLED( l_U548[1], 1 );
    l_U548[2] =  /* CREATEPLACEMENT */ sub_37990( 280965399, -67.57000000, 24.90000000, 8.65000000, 1.50000000, 0.00000000, 12.00000000, 0, 0, 0, 1119092736 );
    l_U548[3] =  /* CREATEPLACEMENT */ sub_37990( 280965399, -82.00000000, 23.25000000, 8.65000000, -1.50000000, 0.00000000, 3.75000000, 0, 0, 0, 1119092736 );
    l_U548[4] =  /* CREATEPLACEMENT */ sub_37990( -4072149, -117.25000000, 30.50000000, 9.13000000, 0.00000000, 0.00000000, 179.10000000, 1, 0, 1, 90.00000000 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U548[4], ref g_U3384 );
    uVar2 = GET_PICKUP_FROM_PLACEMENT( l_U548[2] );
    if (DOES_PICKUP_EXIST( uVar2 ))
    {
        ENABLE_PICKUP_ATTACHMENT( uVar2, 12, 1 );
        TOGGLE_PICKUP_ATTACHMENT( uVar2, 12, 1 );
        SET_PICKUP_AMMO( uVar2, 180 );
    }
    uVar2 = GET_PICKUP_FROM_PLACEMENT( l_U548[3] );
    if (DOES_PICKUP_EXIST( uVar2 ))
    {
        ENABLE_PICKUP_ATTACHMENT( uVar2, 12, 1 );
        TOGGLE_PICKUP_ATTACHMENT( uVar2, 12, 1 );
        SET_PICKUP_AMMO( uVar2, 180 );
    }
     /* P_CREATE_S_PAN_GG_AK_02 */ sub_39151();
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_CREATE_PLACEMENTS end", 0 );
    return;
}

/* P_CREATE_S_PAN_GG_AK_02 */ void sub_39151()
{
     /* WRITESCRIPTLOG */ sub_494( "CO", "P_CREATE_S_PAN_GG_40_02", 0 );
     /* P_CREATECOLLECTIBLESTRUCT */ sub_39277( ref g_U791, g_U831, -1560009395, 555422702, -47.93000000, 23.28000000, 7.98000000, 1.50000000, 0.00000000, 1.00000000, "" );
     /* P_CREATECOLLECTIBLE */ sub_39434( ref g_U791 );
    return;
}

/* P_CREATECOLLECTIBLESTRUCT */ void sub_39277(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_494( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* P_CREATECOLLECTIBLE */ void sub_39434(int iParam0)
{
     /* WRITESCRIPTLOG */ sub_494( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_39517( iParam0->_fU12 )) == 1)
        {
             /* WRITESCRIPTLOG */ sub_494( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_494( "CO", "has never been collected.", 0 );
        }
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_39517( iParam0->_fU12 )) == 0)
        {
             /* CLEANPLACEMENT */ sub_9426( iParam0->_fU0 );
            iParam0->_fU0 =  /* CREATEPLACEMENT */ sub_37990( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                     /* WRITESCRIPTLOG */ sub_494( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_494( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ int sub_39517(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

/* P_GLOBAL_CREATE_LOCKS */ void sub_40404(int iParam0, int iParam1)
{
     /* WRITESCRIPTLOG */ sub_494( "MF", "P_GLOBAL_CREATE_LOCKS start", "###" );
     /* CLEANOBJECT */ sub_9788( g_U4167 );
    g_U4167 =  /* CREATEOBJECTNOOFFSET */ sub_40523( g_U1583, g_U4168, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U4167 ))
    {
        FREEZE_OBJECT_POSITION( g_U4167, 1 );
        if (iParam0 == 1)
        {
            PLAY_OBJECT_ANIM( g_U4167, "P_LockGate", "pa_doors", 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U4167, "P_LockGate", "pa_doors", 1.00000000 );
        }
    }
     /* CLEANOBJECT */ sub_9788( g_U4171 );
    g_U4171 =  /* CREATEOBJECTNOOFFSET */ sub_40523( g_U1583, g_U4172, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( g_U4171 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U4171, 1 );
        if (iParam1 == 1)
        {
            PLAY_OBJECT_ANIM( g_U4171, "P_LockGate", "pa_doors", 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U4171, "P_LockGate", "pa_doors", 1.00000000 );
        }
    }
     /* WRITESCRIPTLOG */ sub_494( "MF", "P_GLOBAL_CREATE_LOCKS end", "###" );
    return;
}

/* CREATEOBJECTNOOFFSET */ void sub_40523(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_33401( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* F_OB1_1102_PANAMA_PRECUTSCENESETUP */ int sub_41260()
{
    l_U236 =  /* CREATEPED */ sub_33219( ref l_U223 );
    if (NOT (IS_PED_DEAD( l_U236 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U236, 1 );
    }
    return 1;
}

/* P_OB1_1102_PANAMA_CUTSCENEREGISTRATION */ void sub_41361()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_1102_PANAMA_CutsceneRegistration start", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
    {
         /* WRITESCRIPTLOG */ sub_494( "CCB", "Registering the Player ped.", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_1086(), g_U980[8], g_U1086[8] );
        CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "GenCover", "B3405219_4E6B48DC_Corner1", 1, 1 );
        CUTSCENE_SET_COVER_CAMERA_DIRECTION( g_U1158[8], g_U1122[8] );
        l_U244 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_41630();
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U244, "W_PI_608_Aa_H^1", 0 );
        ISEQ_REGISTER_ENTITY( -554572542, "player",  /* PLAYER_PED_ID */ sub_1086(), 0 );
        CUTSCENE_REGISTER_ISEQ( -554572542 );
    }
    if (NOT (IS_PED_DEAD( g_U3504 )))
    {
         /* WRITESCRIPTLOG */ sub_494( "CCB", "Registering the piPassos ped.", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U3504, "Pass_Yaht", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U3504, l_U554._fU0, l_U554._fU12 );
        uVar2 = GET_WEAPON_FROM_HAND( g_U3504, 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
             /* WRITESCRIPTLOG */ sub_494( "CCB", "Registering the piPassos ped's weapon.", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_PI_608_Aa_H", 0 );
        }
         /* WRITESCRIPTLOG */ sub_494( "CCB", "Registering the piPassos ped to the S_PAN_VIG_12 ISEQ.", 0 );
        ISEQ_REGISTER_ENTITY( -1699440101, "Passos", g_U3504, 0 );
        CUTSCENE_REGISTER_ISEQ( -1699440101 );
    }
    if (NOT (IS_PED_DEAD( l_U236 )))
    {
         /* WRITESCRIPTLOG */ sub_494( "CCB", "Registering the piMarcello ped.", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U236, "Marc_Yaht", 1 );
    }
     /* P_ACTIVATEPED */ sub_42584( l_U986[0] );
    if (NOT (IS_PED_DEAD( l_U986[0] )))
    {
         /* WRITESCRIPTLOG */ sub_494( "CCB", "Registering the pi_OB1_BalconyW1Enemy_0 ped to the cutscene.", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U986[0], "M_PA_REBL_E_1", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U986[0], l_U933[0]._fU0, l_U933[0]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U986[0], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( l_U986[0], 0, 0 ) ))
        {
             /* WRITESCRIPTLOG */ sub_494( "CCB", "Registering the pi_OB1_BalconyW1Enemy_0 ped's weapon.", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U986[0], 0, 0 ), "W_AR_FAL_Aa_H", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_494( "CCB", "The pi_OB1_BalconyW1Enemy_0's weapon is NOT valid!!!", 0 );
        }
    }
     /* P_ACTIVATEPED */ sub_42584( l_U986[1] );
    if (NOT (IS_PED_DEAD( l_U986[1] )))
    {
         /* WRITESCRIPTLOG */ sub_494( "CCB", "Registering the pi_OB1_BalconyW1Enemy_1 ped to the cutscene.", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U986[1], "M_PA_REBL_E_1^1", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U986[1], l_U933[1]._fU0, l_U933[1]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U986[1], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( l_U986[1], 0, 0 ) ))
        {
             /* WRITESCRIPTLOG */ sub_494( "CCB", "Registering the pi_OB1_BalconyW1Enemy_1 ped's weapon.", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U986[1], 0, 0 ), "W_AR_FAL_Aa_H^1", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_494( "CCB", "The pi_OB1_BalconyW1Enemy_1's weapon is NOT valid!!!", 0 );
        }
    }
     /* P_ACTIVATEPED */ sub_42584( l_U986[2] );
    if (NOT (IS_PED_DEAD( l_U986[2] )))
    {
         /* WRITESCRIPTLOG */ sub_494( "CCB", "Registering the pi_OB1_BalconyW1Enemy_2 ped to the cutscene.", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U986[2], "M_PA_REBL_E_1^2", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U986[2], l_U933[2]._fU0, l_U933[2]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U986[2], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( l_U986[2], 0, 0 ) ))
        {
             /* WRITESCRIPTLOG */ sub_494( "CCB", "Registering the pi_OB1_BalconyW1Enemy_2 ped's weapon.", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U986[2], 0, 0 ), "W_AR_FAL_Aa_H^2", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_494( "CCB", "The pi_OB1_BalconyW1Enemy_2's weapon is NOT valid!!!", 0 );
        }
    }
    REGISTER_HIDE_ENTITY_AT_POSITION( l_U533[1]._fU0, l_U533[1]._fU4 );
    CUTSCENE_ENABLE_SKIP( 0 );
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_1102_PANAMA_CutsceneRegistration end", 0 );
    return;
}

/* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ int sub_41630()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1086(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_41734( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1086(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1086(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1086(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

/* IS_WEAPON_SINGLE_HANDED */ int sub_41734(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* P_ACTIVATEPED */ void sub_42584(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

/* P_OB1_1102_PANAMA_HANDLECUTSCENE */ void sub_44136()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;

    if (l_U196._fU52)
    {
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        AUDIO_MUSIC_SUSPEND( 16000 );
        if ((NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1124() ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() ))))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1086(), 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1124(), 1 );
        }
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
        {
            iVar2 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1086(), 1 );
            if (GET_DOES_WEAPON_EXIST( iVar2 ))
            {
                if (iVar2 != l_U244)
                {
                    SET_WEAPON_VISIBLE( iVar2, 0 );
                }
            }
            iVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1086(), 0, 0 );
            if (GET_DOES_WEAPON_EXIST( iVar2 ))
            {
                if ( /* IS_WEAPON_SINGLE_HANDED */ sub_41734( iVar2 ))
                {
                    uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1086(), 1, 0 );
                    if (GET_DOES_WEAPON_EXIST( uVar3 ))
                    {
                        SET_WEAPON_VISIBLE( uVar3, 0 );
                    }
                    uVar4 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1086(), 2 );
                    if (GET_DOES_WEAPON_EXIST( uVar4 ))
                    {
                        SET_WEAPON_VISIBLE( uVar4, 0 );
                    }
                }
                else
                {
                    SET_WEAPON_VISIBLE( iVar2, 0 );
                }
            }
        }
         /* CLEANPEDARRAY */ sub_9275( ref g_U3375 );
         /* CLEANPEDARRAY */ sub_9275( ref g_U3379 );
         /* CLEANOBJECT */ sub_9788( g_U3382 );
         /* CLEANOBJECT */ sub_9788( g_U3383 );
         /* CLEANOBJECT */ sub_9788( g_U4226 );
         /* CLEANOBJECT */ sub_9788( g_U4225 );
         /* CLEANOBJECT */ sub_9788( g_U4231 );
         /* CLEANOBJECT */ sub_9788( g_U4230 );
        DO_SCREEN_FADE_IN( 0 );
    }
    if (NOT l_U238)
    {
        if (GET_CUTSCENE_TIME_MS() >= 33810)
        {
             /* WRITESCRIPTLOG */ sub_494( "CR", "MUSIC: Playing PANAMA_FINAL Mood: PANAMA_FINAL_1", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_1", "PANAMA_FINAL_1", 0.00000000, 7000, -1, -1082130432, 0 );
            l_U238 = 1;
        }
    }
    if (NOT l_U240)
    {
        if (GET_CUTSCENE_TIME_MS() >= 51000)
        {
             /* WRITESCRIPTLOG */ sub_494( "CR", "Playing audio music one shot PANAMA_OS_5", 0 );
            AUDIO_MUSIC_PLAY_ONESHOT();
            l_U240 = 1;
        }
    }
    if (NOT l_U239)
    {
        if (GET_CUTSCENE_TIME_MS() >= 54189)
        {
             /* WRITESCRIPTLOG */ sub_494( "CR", "MUSIC: Playing PANAMA_FINAL Mood: PANAMA_FINAL_1_2_4", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_1_2_4", "PANAMA_FINAL_1_2_4", 0.00000000, 7000, -1, -1082130432, 0 );
            l_U239 = 1;
        }
    }
    if ((NOT l_U241) AND (GET_CUTSCENE_TIME_MS() >= 4000))
    {
        SET_WEATHER_TYPE_NOW_PERSIST( "CLOUDY" );
         /* WRITESCRIPTLOG */ sub_494( "CR", "SET WEATHERTYPE TO CLOUDY", 0 );
        l_U241 = 1;
    }
    if ((NOT l_U242) AND (GET_CUTSCENE_TIME_MS() >= 36700))
    {
        SET_WEATHER_TYPE_NOW_PERSIST( "EXTRASUNNY" );
         /* WRITESCRIPTLOG */ sub_494( "CR", "SET WEATHERTYPE TO EXTRASUNNY", 0 );
        l_U242 = 1;
    }
    if ((NOT l_U243) AND (GET_CUTSCENE_TIME_MS() >= 49000))
    {
        CUTSCENE_ENABLE_SKIP( 1 );
         /* WRITESCRIPTLOG */ sub_494( "CR", "Player now allowed to skip cutscene", 0 );
        l_U243 = 1;
    }
    if (NOT l_U237)
    {
        if (GET_CUTSCENE_TIME_MS() >= 39700)
        {
            l_U237 = 1;
             /* WRITESCRIPTLOG */ sub_494( "CCB", "Removing Marcello...", 0 );
             /* CLEANPED */ sub_9186( l_U236 );
             /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_45363( g_U1513, ref g_U1588 );
            CUTSCENE_MODEL_NO_LONGER_NEEDED( g_U1513 );
        }
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE */ void sub_45363(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_8128( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a MODEL_NAME asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Removing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* CUTSYS_DEFAULT_POSTCUTSCENE */ int sub_45831()
{
    return 1;
}

/* P_OB1_1102_PANAMA_PREPAREBLENDOUT */ void sub_45880()
{
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_1102_PANAMA_PrepareBlendout start", 0 );
     /* CLEANPED */ sub_9186( l_U236 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_45363( g_U1513, ref g_U1588 );
     /* P_GLOBAL_HANDLE_CREATE_ZIPLINE_OBJECTS_FOR_BUILDING */ sub_46003();
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_22448( g_U1522, ref g_U1588 );
    if (ISEQ_QUERY_STATE( -554572542, 2 ))
    {
         /* P_TELEPORT_PLAYER */ sub_46413( g_U980[8], g_U1086[8], g_U1158[8], g_U1122[8] );
        SNAP_PLAYER_TO_COVERPOINT(  /* PLAYER_ID */ sub_1124(), "GenCover", "B3405219_4E6B48DC_Corner1", 1 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1158[8], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1122[8], 1065353216, 0 );
        ISEQ_REGISTER_ENTITY( -554572542, "player",  /* PLAYER_PED_ID */ sub_1086(), 0 );
        ISEQ_START( -554572542 );
    }
    CAMERA_PLAY_ANIMATED( "LEVEL_S_PAN_CP_06", "B_OUT_MID_03_PANAMA_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
     /* STARTTIMER */ sub_1982( ref l_U265 );
    if (NOT (ISEQ_QUERY_STATE( -1699440101, 3 )))
    {
         /* TELEPORTPED */ sub_46459( g_U3504, l_U554._fU0, l_U554._fU12 );
        ISEQ_REGISTER_ENTITY( -1699440101, "Passos", g_U3504, 0 );
        ISEQ_START( -1699440101 );
    }
     /* P_OB1_BALCONY_COVER1_ENEMIES_START */ sub_46872();
     /* STARTTIMER */ sub_1982( ref l_U245 );
    SET_WEATHER_TYPE_NOW_PERSIST( "EXTRASUNNY" );
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_1102_PANAMA_PrepareBlendout end", 0 );
    return;
}

/* P_GLOBAL_HANDLE_CREATE_ZIPLINE_OBJECTS_FOR_BUILDING */ void sub_46003()
{
     /* CLEANOBJECTARRAY */ sub_9736( ref g_U4163 );
    g_U4163[0] =  /* CREATEOBJECTNOOFFSET */ sub_40523( g_U1575, -109.00000000, 0.00000000, 15.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U4163[0] ))
    {
        FREEZE_OBJECT_POSITION( g_U4163[0], 1 );
    }
    g_U4163[1] =  /* CREATEOBJECTNOOFFSET */ sub_40523( g_U1577, -109.71800000, 20.33680000, 17.56990000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U4163[1] ))
    {
        FREEZE_OBJECT_POSITION( g_U4163[1], 1 );
    }
    g_U4163[2] =  /* CREATEOBJECTNOOFFSET */ sub_40523( g_U1579, -109.70000000, 20.00000000, 16.70000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U4163[2] ))
    {
        FREEZE_OBJECT_POSITION( g_U4163[2], 1 );
    }
    return;
}

/* P_TELEPORT_PLAYER */ void sub_46413(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 =  /* PLAYER_PED_ID */ sub_1086();
     /* TELEPORTPED */ sub_46459( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

/* TELEPORTPED */ void sub_46459(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_OB1_BALCONY_COVER1_ENEMIES_START */ void sub_46872()
{
    int I;

     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_BALCONY_COVER1_ENEMIES_START start", 0 );
    for ( I = 0; I <= 3; I++ )
    {
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() ))) AND (NOT (IS_PED_DEAD( l_U986[I] ))))
        {
            if (IS_PED_PROCESSING_FROZEN( l_U986[I] ))
            {
                 /* P_ACTIVATEPED */ sub_42584( l_U986[I] );
            }
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U986[I], 0 );
            REGISTER_TARGET( l_U986[I],  /* PLAYER_PED_ID */ sub_1086() );
            TASK_COMBAT_PED( l_U986[I],  /* PLAYER_PED_ID */ sub_1086() );
        }
    }
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_BALCONY_COVER1_ENEMIES_START end", 0 );
    return;
}

/* F_OB1_1102_PANAMA_HANDLEBLENDOUT */ int sub_47274()
{
    if (l_U196._fU52)
    {
        DO_SCREEN_FADE_IN( 0 );
    }
     /* P_OB1_BALCONY_COVER1_ENEMIES_MAKE_AWARE_OF_PLAYER */ sub_47341();
    if ( /* ISTIMERDONE */ sub_4900( ref l_U245 ))
    {
         /* P_OB1_PLAY_SPEECH_BO03 */ sub_47505();
    }
    if ( /* ISTIMERDONE */ sub_4900( ref l_U265 ))
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1158[8], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1122[8], 1065353216, 0 );
        CAMERA_ANIMATED_STOP( l_U274, 1 );
    }
    if ((ISEQ_QUERY_ENTITY_STATE( -554572542, "player", 5 )) || (ISEQ_QUERY_ENTITY_STATE( -554572542, "player", 6 )))
    {
        if ((NOT l_U265._fU16) AND (IS_ANIMATED_CAMERA_PLAYING()))
        {
            CAMERA_ANIMATED_STOP( 1000, 1 );
        }
        return 1;
    }
    return 0;
}

/* P_OB1_BALCONY_COVER1_ENEMIES_MAKE_AWARE_OF_PLAYER */ void sub_47341()
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() ))) AND (NOT (IS_PED_DEAD( l_U986[I] ))))
        {
            REGISTER_TARGET( l_U986[I],  /* PLAYER_PED_ID */ sub_1086() );
        }
    }
    return;
}

/* P_OB1_PLAY_SPEECH_BO03 */ void sub_47505()
{
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_PLAY_SPEECH_BO03 start", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_47586( ref l_U254 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
    {
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 0,  /* PLAYER_PED_ID */ sub_1086(), "MAX", ref l_U254, 2, 0 );
    }
    if (NOT (IS_PED_DEAD( g_U3504 )))
    {
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 1, g_U3504, "PASSOS", ref l_U254, 2, 0 );
    }
     /* PLAY_SINGLE_SPEECH */ sub_48003( "SPAN_BO03", ref l_U254, 8, 1 );
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_PLAY_SPEECH_BO03 end", 0 );
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_47586(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_47715(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_48003(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_48048( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_48048(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_48135( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_48135(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_48187( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_48705( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_48187(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_48705(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ void sub_49117(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
     /* WRITESCRIPTLOG */ sub_494( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return  /* CUTSYS_PRIVATE_CREATECUTSCENE */ sub_49341( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 49238, 49288, uParam8 );
}

/* CUTSYS_DEFAULT_PREPAREBLENDIN */ void sub_49238()
{
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDIN */ int sub_49288()
{
    return 1;
}

/* CUTSYS_PRIVATE_CREATECUTSCENE */ void sub_49341(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

/* CUTSYS_SETCUTSCENELOADEXTERIORONSKIP */ void sub_49662(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    iParam0->_fU68 = 1;
    iParam0->_fU72 = 0;
    iParam0->_fU84 = {uParam1};
    iParam0->_fU24 = 1;
    return;
}

/* CUTSYS_HANDLECUTSCENE */ void sub_49777(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
             /* WRITESCRIPTLOG */ sub_494( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
             /* WRITESCRIPTLOG */ sub_494( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                 /* WRITESCRIPTLOG */ sub_494( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
             /* WRITESCRIPTLOG */ sub_494( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
             /* WRITESCRIPTLOG */ sub_494( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
             /* WRITESCRIPTLOG */ sub_494( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
             /* LOADSEAMLESSCUTSCENE */ sub_29616( iParam0->_fU0, 0 );
             /* WRITESCRIPTLOG */ sub_494( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
             /* NIS_PRE_SETUP */ sub_1723( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
         /* NIS_PRE_SETUP */ sub_1723( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
         /* WRITESCRIPTLOG */ sub_494( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                 /* P_SET_PLAYER_WEAPONS_VISIBLE */ sub_51042( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
         /* NIS_PRE_SETUP */ sub_1723( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
             /* NIS_POST_SETUP */ sub_2293( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
         /* NIS_POST_SETUP */ sub_2293( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

/* P_SET_PLAYER_WEAPONS_VISIBLE */ void sub_51042(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1086(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1086(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1086(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1086(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1086(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_51578(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_494( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_494( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_13479( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_51869( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_52346( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_52346( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_52606( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_52346( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_52606( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_52606( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_52346( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_52606( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_52606( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_52606( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_52346( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_52606( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_52606( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_52606( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_52606( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_54186( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_494( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_51869(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_10494( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_494( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_494( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_52346(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_52606(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_54186(int iParam0)
{
     /* WRITE_STRING */ sub_12314( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_54274( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_54351( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_54351( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_54351( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_54520( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_54520( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_54520( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_54520( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_54520( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_54520( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_54520( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_54520( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_54520( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_54520( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_54520( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_54351( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_54520( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_54520( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_54520( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_54351( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_55221( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_54520( iParam0->_fU52 );
     /* WRITE_STRING */ sub_12314( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_54520( iParam0->_fU96 );
     /* WRITE_STRING */ sub_12314( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_54520( iParam0->_fU100 );
     /* WRITE_STRING */ sub_12314( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_54520( iParam0->_fU104 );
     /* WRITE_STRING */ sub_12314( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_54520( iParam0->_fU108 );
     /* WRITE_STRING */ sub_12314( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_54520( iParam0->_fU112 );
     /* WRITE_STRING */ sub_12314( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_54520( iParam0->_fU116 );
     /* WRITE_STRING */ sub_12314( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_54520( iParam0->_fU120 );
     /* WRITE_STRING */ sub_12314( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_54520( iParam0->_fU124 );
     /* WRITE_STRING */ sub_12314( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_54520( iParam0->_fU128 );
     /* WRITE_STRING */ sub_12314( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_54520( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_54520( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_54520( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_54274(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_54351(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_54520(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_55221(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* P_START_SP_CHALLENGES */ void sub_56378()
{
     /* WRITESCRIPTLOG */ sub_494( "CCB", "P_START_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_494( "CCB", "Starting the Panama_Operations_Building context...", 0 );
    START_CONTEXT( "Panama_Operations_Building" );
    return;
}

/* P_HANDLE_PASSOS_LOOK_AT_PLAYER */ void sub_56660(float fParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
    {
        if (NOT (IS_PED_DEAD( g_U3504 )))
        {
            if (NOT l_U628)
            {
                if ((NOT ((PED_GET_ACTION_INTENTION_STATUS( g_U3504, 47 )) == 3)) AND ((PED_GET_ACTION_INTENTION_STATUS( g_U3504, 47 )) == 1))
                {
                    if (( /* GET_DISTANCE_BETWEEN_PEDS */ sub_56802( g_U3504,  /* PLAYER_PED_ID */ sub_1086(), 0 )) <= fParam0)
                    {
                        l_U628 = 1;
                        TASK_LOOK_AT_PED( g_U3504,  /* PLAYER_PED_ID */ sub_1086(), uParam1, 68 );
                    }
                }
            }
            else if (( /* GET_DISTANCE_BETWEEN_PEDS */ sub_56802( g_U3504,  /* PLAYER_PED_ID */ sub_1086(), 0 )) > fParam0)
            {
                l_U628 = 0;
                TASK_CLEAR_LOOK_AT( g_U3504 );
            }
        }
    }
    return;
}

/* GET_DISTANCE_BETWEEN_PEDS */ void sub_56802(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    }
    if (bParam2)
    {
        return VDIST( uVar5, uVar8 );
        break;
    }
    return VDIST( uVar5._fU0, uVar5._fU4, 0, uVar8._fU0, uVar8._fU4, 0 );
}

/* P_HANDLE_PASSOS_SHOOTING_COVER_1 */ void sub_57052()
{
    unknown uVar2;

    if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_57101( ref l_U986 )) > 1)
    {
        if ( /* ISTIMERDONE */ sub_4900( ref l_U629 ))
        {
            uVar2 =  /* GET_NEAREST_PED_IN_ARRAY_TO_PED */ sub_57244( ref l_U986, g_U3504 );
            if (NOT (IS_PED_DEAD( uVar2 )))
            {
                l_U628 = 0;
                TASK_CLEAR_LOOK_AT( g_U3504 );
                TASK_SHOOT_AT_PED( g_U3504, uVar2, 3000, -256437761, 0, 0, 0 );
                PED_SET_ACTION_INTENTION( g_U3504, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
            }
             /* CREATETIMER */ sub_1499( ref l_U629, GET_RANDOM_INT_IN_RANGE( 3000, 8000 ), 1, 0 );
             /* STARTTIMER */ sub_1982( ref l_U629 );
        }
    }
    return;
}

/* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ void sub_57101(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

/* GET_NEAREST_PED_IN_ARRAY_TO_PED */ void sub_57244(unknown uParam0, unknown uParam1)
{
    int I;
    unknown Result;
    float fVar6;
    float fVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    fVar7 = -1.00000000;
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    }
    else
    {
        SCRIPT_ASSERT( "The piNearestToped is NOT valid!!!", 0 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            fVar6 = GET_DISTANCE_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( (uParam0^)[I] ), uVar8, 1 );
            if (fVar7 < 0.00000000)
            {
                fVar7 = fVar6;
            }
            if (fVar6 <= fVar7)
            {
                Result = (uParam0^)[I];
                fVar7 = fVar6;
            }
        }
    }
    return Result;
}

/* P_HANDLE_PASSOS_DIALOGUE */ void sub_57633()
{
    int iVar2;

    if ((NOT (IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1086() ))) AND ((NOT (IS_ANY_SPEECH_PLAYING( g_U3504 ))) AND (IS_PED_TOUCHING_PED(  /* PLAYER_PED_ID */ sub_1086(), g_U3504 ))))
    {
        if ((l_U638._fU16) AND ( /* ISTIMERDONE */ sub_4900( ref l_U638 )))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_47586( ref l_U656 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
            {
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 0,  /* PLAYER_PED_ID */ sub_1086(), "MAX", ref l_U656, 2, 0 );
            }
            if (NOT (IS_PED_DEAD( g_U3504 )))
            {
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 1, g_U3504, "PASSOS", ref l_U656, 2, 0 );
            }
             /* PLAY_SINGLE_SPEECH */ sub_48003( "SPAN_PBTP", ref l_U656, 8, 1 );
             /* CREATETIMER */ sub_1499( ref l_U638, GET_RANDOM_INT_IN_RANGE( l_U1197, l_U1198 ), 1, 0 );
             /* STARTTIMER */ sub_1982( ref l_U638 );
             /* WRITESCRIPTLOG */ sub_494( "CR", "Passos Dialogue - SPAN_PBTP - Lines from Passos if the player bumps into him", 0 );
        }
    }
    if ((NOT (IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1086() ))) AND ((NOT (IS_ANY_SPEECH_PLAYING( g_U3504 ))) AND ((IS_CONTROL_PRESSED( 0, 6 )) AND (IS_PED_IN_CROSSHAIR_CYLINDER( g_U3504, l_U686, 100.00000000, 1, -1082130432 )))))
    {
        if ((l_U638._fU16) AND ( /* ISTIMERDONE */ sub_4900( ref l_U638 )))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_47586( ref l_U666 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
            {
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 0,  /* PLAYER_PED_ID */ sub_1086(), "MAX", ref l_U666, 2, 0 );
            }
            if (NOT (IS_PED_DEAD( g_U3504 )))
            {
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 1, g_U3504, "PASSOS", ref l_U666, 2, 0 );
            }
             /* PLAY_SINGLE_SPEECH */ sub_48003( "SPAN_LPAH", ref l_U666, 8, 1 );
             /* CREATETIMER */ sub_1499( ref l_U638, GET_RANDOM_INT_IN_RANGE( l_U1197, l_U1198 ), 1, 0 );
             /* STARTTIMER */ sub_1982( ref l_U638 );
             /* WRITESCRIPTLOG */ sub_494( "CR", "Passos Dialogue - SPAN_LPAH - Lines from Passos if the player aims at him", 0 );
        }
    }
    iVar2 = nil;
    if ((NOT (IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1086() ))) AND ((NOT (IS_ANY_SPEECH_PLAYING( g_U3504 ))) AND ((iVar2 == ( /* PLAYER_PED_ID */ sub_1086())) AND (HAS_BULLET_IMPACTED_IN_AREA(  /* MAL_GETPEDCOORDS */ sub_58331( g_U3504 ), 3.00000000, ref iVar2 )))))
    {
        if ((l_U638._fU16) AND ( /* ISTIMERDONE */ sub_4900( ref l_U638 )))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_47586( ref l_U676 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
            {
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 0,  /* PLAYER_PED_ID */ sub_1086(), "MAX", ref l_U676, 2, 0 );
            }
            if (NOT (IS_PED_DEAD( g_U3504 )))
            {
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 1, g_U3504, "PASSOS", ref l_U676, 2, 0 );
            }
             /* PLAY_SINGLE_SPEECH */ sub_48003( "SPAN_LPFPS", ref l_U676, 8, 1 );
             /* CREATETIMER */ sub_1499( ref l_U638, GET_RANDOM_INT_IN_RANGE( l_U1197, l_U1198 ), 1, 0 );
             /* STARTTIMER */ sub_1982( ref l_U638 );
             /* WRITESCRIPTLOG */ sub_494( "CR", "Passos Dialogue - SPAN_LPFPS - Lines from Passos if the player shoots at him", 0 );
        }
    }
    if (IS_PED_USING_MP3_COVER_TASK(  /* PLAYER_PED_ID */ sub_1086() ))
    {
        l_U697 = 1;
    }
    if ((NOT (IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1086() ))) AND ((NOT (IS_ANY_SPEECH_PLAYING( g_U3504 ))) AND ((NOT (IS_PED_USING_MP3_COVER_TASK(  /* PLAYER_PED_ID */ sub_1086() ))) AND (l_U697))))
    {
        if ((l_U638._fU16) AND ( /* ISTIMERDONE */ sub_4900( ref l_U638 )))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_47586( ref l_U687 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
            {
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 0,  /* PLAYER_PED_ID */ sub_1086(), "MAX", ref l_U687, 2, 0 );
            }
            if (NOT (IS_PED_DEAD( g_U3504 )))
            {
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 1, g_U3504, "PASSOS", ref l_U687, 2, 0 );
            }
             /* PLAY_SINGLE_SPEECH */ sub_48003( "SPAN_LPPSC", ref l_U687, 8, 1 );
            l_U697 = 0;
             /* CREATETIMER */ sub_1499( ref l_U638, GET_RANDOM_INT_IN_RANGE( l_U1197, l_U1198 ), 1, 0 );
             /* STARTTIMER */ sub_1982( ref l_U638 );
             /* WRITESCRIPTLOG */ sub_494( "CR", "Passos Dialogue - SPAN_LPPSC - Lines from Passos if player stands out of cover", 0 );
        }
    }
    if (IS_LAST_MAN_STANDING_ACTIVE())
    {
        l_U708 = 1;
    }
    if ((NOT (IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1086() ))) AND ((NOT (IS_ANY_SPEECH_PLAYING( g_U3504 ))) AND ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (l_U708))))
    {
        if ((l_U638._fU16) AND ( /* ISTIMERDONE */ sub_4900( ref l_U638 )))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_47586( ref l_U698 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
            {
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 0,  /* PLAYER_PED_ID */ sub_1086(), "MAX", ref l_U698, 2, 0 );
            }
            if (NOT (IS_PED_DEAD( g_U3504 )))
            {
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 1, g_U3504, "PASSOS", ref l_U698, 2, 0 );
            }
             /* PLAY_SINGLE_SPEECH */ sub_48003( "SPAN_LPPFL", ref l_U698, 8, 1 );
            l_U708 = 0;
             /* CREATETIMER */ sub_1499( ref l_U638, GET_RANDOM_INT_IN_RANGE( l_U1197, l_U1198 ), 1, 0 );
             /* STARTTIMER */ sub_1982( ref l_U638 );
             /* WRITESCRIPTLOG */ sub_494( "CR", "Passos Dialogue - SPAN_LPPFL - Lines from Passos if Max pulls off a last man standing", 0 );
        }
    }
    if ((NOT (IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1086() ))) AND ((NOT (IS_ANY_SPEECH_PLAYING( g_U3504 ))) AND (IS_PED_SHOOTING( g_U3504 ))))
    {
        if ((l_U638._fU16) AND ( /* ISTIMERDONE */ sub_4900( ref l_U638 )))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_47586( ref l_U709 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
            {
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 0,  /* PLAYER_PED_ID */ sub_1086(), "MAX", ref l_U709, 2, 0 );
            }
            if (NOT (IS_PED_DEAD( g_U3504 )))
            {
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 1, g_U3504, "PASSOS", ref l_U709, 2, 0 );
            }
             /* PLAY_SINGLE_SPEECH */ sub_48003( "SPAN_LPSAE", ref l_U709, 8, 1 );
             /* CREATETIMER */ sub_1499( ref l_U638, GET_RANDOM_INT_IN_RANGE( l_U1197, l_U1198 ), 1, 0 );
             /* STARTTIMER */ sub_1982( ref l_U638 );
             /* WRITESCRIPTLOG */ sub_494( "CR", "Passos Dialogue - SPAN_LPSAE - Short lines from Passos as he shoots at the enemy", 0 );
        }
    }
    if ((NOT (IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1086() ))) AND (( /* ISTIMERDONE */ sub_4900( ref l_U729 )) AND (NOT (IS_ANY_SPEECH_PLAYING( g_U3504 )))))
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_47586( ref l_U719 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
        {
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 0,  /* PLAYER_PED_ID */ sub_1086(), "MAX", ref l_U719, 2, 0 );
        }
        if (NOT (IS_PED_DEAD( g_U3504 )))
        {
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 1, g_U3504, "PASSOS", ref l_U719, 2, 0 );
        }
         /* PLAY_SINGLE_SPEECH */ sub_48003( "SPAN_LPMTL", ref l_U719, 8, 1 );
         /* WRITESCRIPTLOG */ sub_494( "CR", "Passos Dialogue - SPAN_LPMTL - Short lines from Passos as they move through the level", 0 );
    }
    if ((NOT (IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1086() ))) AND (( /* ISTIMERDONE */ sub_4900( ref l_U748 )) AND (NOT (IS_ANY_SPEECH_PLAYING( g_U3504 )))))
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_47586( ref l_U738 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
        {
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 0,  /* PLAYER_PED_ID */ sub_1086(), "MAX", ref l_U738, 2, 0 );
        }
        if (NOT (IS_PED_DEAD( g_U3504 )))
        {
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 1, g_U3504, "PASSOS", ref l_U738, 2, 0 );
        }
         /* PLAY_SINGLE_SPEECH */ sub_48003( "SPAN_PSUTF", ref l_U738, 8, 1 );
         /* WRITESCRIPTLOG */ sub_494( "CR", "Passos Dialogue - SPAN_PSUTF - Passos points out the opponents up on the top floor", 0 );
    }
    if ((NOT (IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1086() ))) AND ((NOT (IS_ANY_SPEECH_PLAYING( g_U3504 ))) AND (l_U767)))
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_47586( ref l_U757 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
        {
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 0,  /* PLAYER_PED_ID */ sub_1086(), "MAX", ref l_U757, 2, 0 );
        }
        if (NOT (IS_PED_DEAD( g_U3504 )))
        {
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 1, g_U3504, "PASSOS", ref l_U757, 2, 0 );
        }
         /* PLAY_SINGLE_SPEECH */ sub_48003( "SPAN_PSHMM", ref l_U757, 8, 1 );
        l_U767 = 0;
         /* WRITESCRIPTLOG */ sub_494( "CR", "Passos Dialogue - SPAN_PSHMM - Passos says he's making a move", 0 );
    }
    return;
}

/* MAL_GETPEDCOORDS */ vector sub_58331(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return "[dynamic result, ret vals = 3]";
        break;
        GET_PED_COORDS( uParam0 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        break;
    }
    return vector( 0, 0, 0);
}

/* P_PED_ARRAY_Z_SAFETY_CHECK */ void sub_60514(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_PED_Z_SAFETY_CHECK */ sub_60580( (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

/* P_PED_Z_SAFETY_CHECK */ void sub_60580(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                 /* CLEANPED */ sub_9186( uParam0 );
            }
        }
    }
    return;
}

/* P_START_ZIPLINE_REBEL_1 */ void sub_60814()
{
     /* WRITESCRIPTLOG */ sub_494( "MF", "P_START_ZIPLINE_REBEL_1 - START", 0 );
    if (NOT (IS_ANY_SPEECH_PLAYING( g_U3504 )))
    {
         /* P_SPEECH_PLAY_MONOLOGUE */ sub_60931( "SPAN_MRUTSA", ref l_U1111 );
    }
     /* P_ACTIVATEPED */ sub_42584( l_U1170[0] );
    ISEQ_REGISTER_ENTITY( -1878236778, "s_pan_rebel_zipline_1", l_U1170[0], 0 );
    ISEQ_START( -1878236778 );
    if (DOES_OBJECT_EXIST( g_U4163[0] ))
    {
        PLAY_OBJECT_ANIM( g_U4163[0], "P_AN_ZIPWIRE_FAR", "PA_ZIPLINE", 1000.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U4163[0], "P_AN_ZIPWIRE_FAR", "PA_ZIPLINE", 0.00000000 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_494( "CCB", "The oiZipLineObject_0 object is NOT valid!!!", 0 );
    }
    if (DOES_OBJECT_EXIST( g_U4163[1] ))
    {
        PLAY_OBJECT_ANIM( g_U4163[1], "P_AN_ZIPHOI_BA_H", "PA_ZIPLINE", 1000.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U4163[1], "P_AN_ZIPHOI_BA_H", "PA_ZIPLINE", 0.00000000 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_494( "CCB", "The oiZipLineObject_1 object is NOT valid!!!", 0 );
    }
    if (DOES_OBJECT_EXIST( g_U4163[2] ))
    {
        PLAY_OBJECT_ANIM( g_U4163[2], "P_AN_ZIPLOW_BA_H", "PA_ZIPLINE", 1000.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U4163[2], "P_AN_ZIPLOW_BA_H", "PA_ZIPLINE", 0.00000000 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_494( "CCB", "The oiZipLineObject_2 object is NOT valid!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_494( "MF", "P_START_ZIPLINE_REBEL_1 - END", 0 );
    return;
}

/* P_SPEECH_PLAY_MONOLOGUE */ void sub_60931(unknown uParam0, unknown uParam1)
{
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_47586( uParam1 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 0,  /* PLAYER_PED_ID */ sub_1086(), "MAX", uParam1, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 1,  /* PLAYER_PED_ID */ sub_1086(), "MAX", uParam1, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_48003( uParam0, uParam1, 8, 1 );
    return;
}

/* ISPEDVALID */ void sub_61754(unknown uParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((DOES_PED_EXIST( uParam0 )) == 1)
    {
        Result = 1;
    }
    else
    {
        Result = 0;
    }
    if (Result == 1)
    {
        if ((IS_PED_DEAD( uParam0 )) == 1)
        {
            if (iParam1 == 1)
            {
                Result = 1;
            }
            else
            {
                Result = 0;
            }
        }
        else
        {
            Result = 1;
        }
    }
    return Result;
}

/* P_ZIPLINE_REBEL_INTO_BUILDING */ void sub_61925(unknown uParam0)
{
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_494( "MF", "P_ZIPLINE_REBEL_INTO_BUILDING - START", 0 );
    OPEN_SEQUENCE_TASK( ref uVar3 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
    TASK_FOLLOW_NAV_MESH_TO_COORD( 0, -108.96000000, -33.29000000, 9.48000000, 3, 20000, 1048576000, 0, 0 );
    CLOSE_SEQUENCE_TASK( uVar3 );
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        TASK_PERFORM_SEQUENCE( uParam0, uVar3 );
    }
    CLEAR_SEQUENCE_TASK( uVar3 );
     /* WRITESCRIPTLOG */ sub_494( "MF", "P_ZIPLINE_REBEL_INTO_BUILDING - END", 0 );
    return;
}

/* IS_SPEECH_CURRENTLY_PLAYING */ int sub_62315(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_62358( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

/* IS_SCRIPT_SPEECH_STRUCT_VALID */ boolean sub_62358(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

/* P_OB1_PLAY_SPEECH_SPAN_MENTRK1 */ void sub_62615()
{
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_PLAY_SPEECH_SPAN_MENTRK1 start", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_47586( ref l_U567 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
    {
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 0,  /* PLAYER_PED_ID */ sub_1086(), "MAX", ref l_U567, 2, 0 );
    }
    if (NOT (IS_PED_DEAD( g_U3504 )))
    {
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 1, g_U3504, "PASSOS", ref l_U567, 2, 0 );
    }
     /* PLAY_SINGLE_SPEECH */ sub_48003( "SPAN_MENTRK1", ref l_U567, 8, 1 );
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_PLAY_SPEECH_SPAN_MENTRK1 end", 0 );
    return;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_62897(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_62940(  /* PLAYER_PED_ID */ sub_1086(), uParam0 );
}

/* F_ISPEDINTRIGGERBOX */ int sub_62940(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* P_OB1_PLAY_SPEECH_VIG12 */ void sub_63048()
{
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_PLAY_SPEECH_VIG12 start", 0 );
     /* KILL_SPEECH */ sub_63132( ref l_U254, 0 );
     /* KILL_SPEECH */ sub_63132( ref l_U567, 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_47586( ref l_U578 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
    {
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 0,  /* PLAYER_PED_ID */ sub_1086(), "MAX", ref l_U578, 2, 0 );
    }
    if (NOT (IS_PED_DEAD( g_U3504 )))
    {
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 1, g_U3504, "PASSOS", ref l_U578, 2, 0 );
    }
    if (NOT (IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1086() )))
    {
         /* PLAY_SINGLE_SPEECH */ sub_48003( "SPAN_VIG12", ref l_U578, 8, 1 );
    }
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_PLAY_SPEECH_VIG12 end", 0 );
    return;
}

/* KILL_SPEECH */ void sub_63132(int iParam0, unknown uParam1)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_62358( (iParam0^) )))
    {
        ;
    }
    else
    {
        PRINTSTRING( "\n KILL SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
        {
            if (iParam0->_fU8 == g_U6[iParam0->_fU4])
            {
                STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
            }
        }
    }
    return;
}

/* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ void sub_63681(unknown uParam0)
{
    int I;

    if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_57101( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

/* P_OB1_FORCE_LAST_ENEMY_OUT_OF_COVER */ void sub_63853(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() ))) AND (NOT (IS_PED_DEAD( (uParam0^)[I] ))))
        {
             /* WRITESCRIPTLOG */ sub_494( "AT", "One enemy left! Forcing them to out of cover!", 0 );
            CLEAR_PED_TASKS( (uParam0^)[I] );
            SET_PED_FLAG_LOCK_TO_COVER( (uParam0^)[I], 0 );
            SET_PED_COMBAT_ATTRIBUTES( (uParam0^)[I], 1, 0 );
            REGISTER_TARGET( (uParam0^)[I],  /* PLAYER_PED_ID */ sub_1086() );
            SET_LOCKED_TARGET( (uParam0^)[I],  /* PLAYER_PED_ID */ sub_1086() );
            TASK_COMBAT_PED( (uParam0^)[I],  /* PLAYER_PED_ID */ sub_1086() );
            RESET_PED_TETHERING( (uParam0^)[I] );
             /* P_TETHERPED */ sub_35394( ref l_U1108, (uParam0^)[I], 1 );
        }
    }
    return;
}

/* CUTSYS_DEFAULT_PRECUTSCENESETUP */ int sub_64650()
{
    return 1;
}

/* P_OB1_MID_05A_CUTSCENEREGISTRATION */ void sub_64703()
{
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_MID_05A_CutsceneRegistration start", 0 );
     /* KILL_SPEECH */ sub_63132( ref l_U254, 0 );
     /* KILL_SPEECH */ sub_63132( ref l_U578, 0 );
     /* KILL_SPEECH */ sub_63132( ref l_U567, 0 );
    if (NOT (IS_PED_DEAD( g_U3504 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U3504, "Pass_Yaht", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U3504, 0, 0 ), "W_PI_PT92_Aa_H", 0 );
        TASK_CLEAR_LOOK_AT( g_U3504 );
    }
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_MID_05A_CutsceneRegistration end", 0 );
    return;
}

/* CUTSYS_DEFAULT_HANDLECUTSCENE */ void sub_64988()
{
    return;
}

/* P_OB1_MID_05A_PREPAREBLENDOUT */ void sub_65043()
{
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_MID_05A_PrepareBlendout start", 0 );
    DO_SCREEN_FADE_OUT( 0 );
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_MID_05A_PrepareBlendout end", 0 );
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDOUT */ int sub_65197()
{
    return 1;
}

/* F_OB1_MID_04_PRECUTSCENESETUP */ int sub_65635()
{
    if (l_U332._fU52)
    {
        l_U998 = 1;
        l_U1068 = 1;
    }
    if ( /* F_OB1_CREATE_BALCONY_COVER2_ENEMIES */ sub_65703())
    {
        if ( /* F_OB1_CREATE_ENTRANCE_ENEMIES */ sub_66733())
        {
            return 1;
        }
    }
    return 0;
}

/* F_OB1_CREATE_BALCONY_COVER2_ENEMIES */ int sub_65703()
{
    unknown uVar2;

    switch (l_U998)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_494( "GA", "e_OB1_SpawnBalconyW2State = ENTITY_STATE_INIT", 0 );
         /* P_SETUP_AI_GROUP */ sub_32743( ref l_U1097, 0.90000000, 0 );
        l_U999 = 0;
        l_U998 = 2;
         /* WRITESCRIPTLOG */ sub_494( "GA", "e_OB1_SpawnBalconyW2State = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        g_U3505[l_U999] =  /* CREATEPED */ sub_33219( ref l_U1000[l_U999] );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_34195( g_U3505[l_U999], ref l_U1097 );
         /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_34610( ref g_U3505[l_U999], "AIT_EXPERT", 3.00000000, 75.00000000 );
        uVar2 =  /* F_GIVEPEDWEAPON */ sub_12705( g_U3505[l_U999], 1308526797, 25000, 0, 0 );
        if (NOT (IS_PED_DEAD( g_U3505[l_U999] )))
        {
            SET_PED_PINNED_DOWN( g_U3505[l_U999], 0, -1 );
            SET_PED_FLAG_BLOCK_BLINDFIRE_IN_COVER( g_U3505[l_U999], 1 );
            SET_PED_FLAG_FIRE_UNTIL_EMPTY_IN_COVER( g_U3505[l_U999], 1 );
            SET_WEAPON_CHANCE_TO_FIRE_BLANKS( uVar2, 20 );
            SET_PED_ALERTNESS( g_U3505[l_U999], 3 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
            {
                REGISTER_TARGET( g_U3505[l_U999],  /* PLAYER_PED_ID */ sub_1086() );
                SET_LOCKED_TARGET( g_U3505[l_U999],  /* PLAYER_PED_ID */ sub_1086() );
            }
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U3505[l_U999], 1 );
            if (l_U999 == 0)
            {
                SET_PED_ACCURACY( g_U3505[l_U999], -1467320974 );
            }
        }
         /* P_DEACTIVATEPED */ sub_35001( g_U3505[l_U999] );
        l_U999++;
        if (l_U999 >= 5)
        {
            l_U998 = 3;
             /* WRITESCRIPTLOG */ sub_494( "GA", "e_OB1_SpawnBalconyW2State = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_35251( ref g_U3505, "pi_OB1_BalconyW2Enemy" );
         /* P_TETHERPED */ sub_35394( ref l_U1106, g_U3505[0], 1 );
         /* P_TETHERPED */ sub_35394( ref l_U1105, g_U3505[1], 1 );
         /* P_TETHERPED */ sub_35394( ref l_U1104, g_U3505[2], 1 );
         /* P_TETHERPED */ sub_35394( ref l_U1106, g_U3505[3], 1 );
         /* P_TETHERPED */ sub_35394( ref l_U1105, g_U3505[4], 1 );
        if (NOT (IS_PED_DEAD( g_U3505[1] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( g_U3505[1], ref g_U3392 );
        }
        if (NOT (IS_PED_DEAD( g_U3505[3] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( g_U3505[3], ref g_U3392 );
        }
        l_U998 = 4;
         /* WRITESCRIPTLOG */ sub_494( "GA", "e_OB1_SpawnBalconyW2State = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    if (l_U998 == 4)
    {
        return 1;
        break;
    }
    return 0;
}

/* F_OB1_CREATE_ENTRANCE_ENEMIES */ int sub_66733()
{
    switch (l_U1068)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_494( "GA", "e_OB1_SpawnEntranceEnemies = ENTITY_STATE_INIT", 0 );
        l_U1069 = 0;
        l_U1068 = 2;
         /* WRITESCRIPTLOG */ sub_494( "GA", "e_OB1_SpawnEntranceEnemies = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        g_U3511[l_U1069] =  /* CREATEPED */ sub_33219( ref l_U1070[l_U1069] );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_34195( g_U3511[l_U1069], ref l_U1097 );
         /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_34610( ref g_U3511[l_U1069], "AIT_EXPERT", 3.00000000, 75.00000000 );
         /* F_GIVEPEDWEAPON */ sub_12705( g_U3511[l_U1069], 1308526797, 25000, 0, 0 );
         /* P_TETHERPED */ sub_35394( ref l_U1107, g_U3511[l_U1069], 1 );
        if (NOT (IS_PED_DEAD( g_U3511[l_U1069] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( g_U3511[l_U1069], "Pana_PumpRoom" );
            SET_PED_FLAG_BLOCK_BLINDFIRE_IN_COVER( g_U3511[l_U1069], 1 );
            SET_PED_ALERTNESS( g_U3511[l_U1069], 3 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
            {
                REGISTER_TARGET( g_U3511[l_U1069],  /* PLAYER_PED_ID */ sub_1086() );
                SET_LOCKED_TARGET( g_U3511[l_U1069],  /* PLAYER_PED_ID */ sub_1086() );
            }
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U3511[l_U1069], 1 );
        }
         /* P_DEACTIVATEPED */ sub_35001( g_U3511[l_U1069] );
        l_U1069++;
        if (l_U1069 >= 2)
        {
            l_U1068 = 3;
             /* WRITESCRIPTLOG */ sub_494( "GA", "e_OB1_SpawnEntranceEnemies = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_35251( ref g_U3511, "pi_OB1_EntranceEnemy" );
        l_U1068 = 4;
         /* WRITESCRIPTLOG */ sub_494( "GA", "e_OB1_SpawnEntranceEnemies = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    if (l_U1068 == 4)
    {
        return 1;
        break;
    }
    return 0;
}

/* P_OB1_MID_04_CUTSCENEREGISTRATION */ void sub_67556()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;

     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_MID_04_CutsceneRegistration start", 0 );
     /* KILL_SPEECH */ sub_63132( ref l_U567, 0 );
     /* KILL_SPEECH */ sub_63132( ref l_U578, 0 );
     /* KILL_SPEECH */ sub_63132( ref l_U254, 0 );
    uVar2 = {(vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1086() ))) - (vector( 0.00000000, 0.00000000, 1.00000000))};
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
    {
        if ( /* F_ISPLAYERINTRIGGERBOX */ sub_62897( l_U359 ))
        {
            CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "GenCover", "B3405219_4E6B48DC_Corner2", 1, 0 );
            CUTSCENE_SET_COVER_CAMERA_DIRECTION( 114.67800000, -6.60000000 );
        }
        else if ( /* F_ISPLAYERINTRIGGERBOX */ sub_62897( l_U380 ))
        {
            CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "GenCover", "B3405219_4E6B48DC_Popover2", 1, 1 );
            CUTSCENE_SET_COVER_CAMERA_DIRECTION( -86.16734000, -6.60000000 );
        }
        else if ( /* F_ISPLAYERINTRIGGERBOX */ sub_62897( l_U401 ))
        {
            CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "GenCover", "B3405219_F237907E_Corner2", 1, 0 );
            CUTSCENE_SET_COVER_CAMERA_DIRECTION( 82.85884000, 7.47253000 );
        }
        else if ( /* F_ISPLAYERINTRIGGERBOX */ sub_62897( l_U422 ))
        {
            CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "pana_GP_Building", "GrabSpline07", 0, 1 );
            CUTSCENE_SET_COVER_CAMERA_DIRECTION( -91.50066000, 6.60000000 );
        }
        else if ( /* F_ISPLAYERINTRIGGERBOX */ sub_62897( l_U443 ))
        {
            CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "GenCover", "B3405219_EB738302_Popover3", 1, 1 );
            CUTSCENE_SET_COVER_CAMERA_DIRECTION( -57.18550000, -6.60000000 );
        }
        else if ( /* F_ISPLAYERINTRIGGERBOX */ sub_62897( l_U464 ))
        {
            CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "GenCover", "B3405219_18BD0E93_Corner1", 1, 1 );
            CUTSCENE_SET_COVER_CAMERA_DIRECTION( -69.89764000, -6.60000000 );
        }
        else
        {
            CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_1086(), uVar2, 90.00000000 );
            CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_1086(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        };;;;;;
    }
    if (NOT (IS_PED_DEAD( g_U3504 )))
    {
         /* WRITESCRIPTLOG */ sub_494( "CCB", "Registering the piPassos ped to the cutscene.", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U3504, "Pass_Yaht", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U3504, 0, 0 ), "W_PI_608_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U3504, -88.39200000, 29.48200000, 7.95000000, 45.00000000 );
        if ( /* F_STREAMREQ_ISEQ_IS_ASSET_LOADED */ sub_68521( -1699440101, ref g_U1878 ))
        {
            ISEQ_UNREGISTER_ENTITY( -1699440101, "Passos" );
            ISEQ_TERMINATE( -1699440101 );
             /* P_STREAMREQ_ISEQ_REMOVE */ sub_7990( -1699440101, ref g_U1878 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_494( "CCB", "The S_PAN_VIG_12 ISEQ is NOT loaded!!!", 0 );
        }
        if ( /* F_STREAMREQ_ISEQ_IS_ASSET_LOADED */ sub_68521( -1390854428, ref g_U1878 ))
        {
             /* WRITESCRIPTLOG */ sub_494( "CCB", "Registering the piPassos ped to the S_PAN_VIG_13 ISEQ.", 0 );
            ISEQ_REGISTER_ENTITY( -1390854428, "Passos", g_U3504, 0 );
            CUTSCENE_REGISTER_ISEQ( -1390854428 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_494( "CCB", "The S_PAN_VIG_14 ISEQ is NOT loaded!!!", 0 );
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_494( "CCB", "The piPassos ped is NOT valid!!!", 0 );
    }
    if (NOT (IS_PED_DEAD( g_U3505[0] )))
    {
         /* WRITESCRIPTLOG */ sub_494( "CCB", "Registering the pi_OB1_BalconyW2Enemy_0 ped to the cutscene.", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U3505[0], "M_PA_REBL_E_2", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U3505[0], 0, 0 ), "W_AR_FAL_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U3505[0], -101.78000000, 30.70000000, 15.04000000, -90.00000000 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U3505[0], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
    }
    if (NOT (IS_PED_DEAD( g_U3505[1] )))
    {
         /* WRITESCRIPTLOG */ sub_494( "CCB", "Registering the pi_OB1_BalconyW2Enemy_1 ped to the cutscene.", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U3505[1], "M_PA_REBL_E_2^1", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U3505[1], 0, 0 ), "W_AR_FAL_Aa_H^1", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U3505[1], -102.75000000, 27.02000000, 15.06000000, -90.00000000 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U3505[1], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
    }
    if (NOT (IS_PED_DEAD( g_U3505[2] )))
    {
         /* WRITESCRIPTLOG */ sub_494( "CCB", "Registering the pi_OB1_BalconyW2Enemy_2 ped to the cutscene.", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U3505[2], "M_PA_REBL_E_2^2", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U3505[2], 0, 0 ), "W_AR_FAL_Aa_H^2", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U3505[2], -102.59000000, 22.26000000, 15.06000000, -90.00000000 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U3505[2], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
    }
     /* WRITESCRIPTLOG */ sub_494( "CR", "MUSIC: Playing PANAMA_FINAL Mood: PANAMA_FINAL_1_2_3_4", 0 );
    AUDIO_MUSIC_FORCE_TRACK( "PANAMA_FINAL", "PANAMA_FINAL_1_2_3_4", "PANAMA_FINAL_1_2_3_4", 0.00000000, 8000, -1, -1082130432, 0 );
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_MID_04_CutsceneRegistration end", 0 );
    return;
}

/* F_STREAMREQ_ISEQ_IS_ASSET_LOADED */ int sub_68521(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int I;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if ((uParam1^)[I]._fU4 == 3)
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    ISEQ_GET_NAME( 32, ref uVar4, (uParam1^)[I]._fU0 );
                    DISPLAYF( "[CCB]### The ISEQ is loaded: {} ###", 1, 1281, ref uVar4 );
                    return 1;
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return 0;
}

/* P_OB1_MID_04_HANDLECUTSCENE */ void sub_70152()
{
    if (l_U332._fU52)
    {
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
    }
    return;
}

/* P_OB1_MID_04_PREPAREBLENDOUT */ void sub_70228()
{
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_MID_04_PrepareBlendout start", 0 );
     /* P_OB1_BALCONY_COVER2_ENEMIES_START */ sub_70317();
     /* P_OB1_ENTRANCE_ENEMIES_START */ sub_70751();
    if ((NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_62897( l_U464 ))) AND ((NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_62897( l_U443 ))) AND ((NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_62897( l_U422 ))) AND ((NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_62897( l_U401 ))) AND ((NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_62897( l_U380 ))) AND (NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_62897( l_U359 ))))))))
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 0.00000000, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( 0.00000000, 0.00000000, 0 );
    }
     /* CLEANPED */ sub_9186( l_U1170[0] );
    DO_SCREEN_FADE_IN( 0 );
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_MID_04_PrepareBlendout end", 0 );
    return;
}

/* P_OB1_BALCONY_COVER2_ENEMIES_START */ void sub_70317()
{
    vector[3] vVar2;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int I;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_BALCONY_COVER2_ENEMIES_START start", 0 );
    array(ref vVar2, 3);
    vVar2[0] = {-100.80000000, 30.19000000, 15.07000000};
    vVar2[1] = {-102.69000000, 25.42000000, 15.07000000};
    vVar2[2] = {-102.66000000, 23.78000000, 15.05000000};
    for ( I = 0; I <= 2; I++ )
    {
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() ))) AND (NOT (IS_PED_DEAD( g_U3505[I] ))))
        {
             /* P_ACTIVATEPED */ sub_42584( g_U3505[I] );
            OPEN_SEQUENCE_TASK( ref uVar13 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, vVar2[I],  /* PLAYER_PED_ID */ sub_1086(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1086() );
            CLOSE_SEQUENCE_TASK( uVar13 );
            TASK_PERFORM_SEQUENCE( g_U3505[I], uVar13 );
            CLEAR_SEQUENCE_TASK( uVar13 );
            REGISTER_TARGET( g_U3505[I],  /* PLAYER_PED_ID */ sub_1086() );
        }
    }
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_BALCONY_COVER2_ENEMIES_START end", 0 );
    return;
}

/* P_OB1_ENTRANCE_ENEMIES_START */ void sub_70751()
{
    unknown uVar2;
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_ENTRANCE_ENEMIES_START start", 0 );
     /* P_ACTIVATEPEDARRAY */ sub_70844( ref g_U3511 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
    {
        if (NOT (IS_PED_DEAD( g_U3511[0] )))
        {
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, -106.97000000, 25.61000000, 7.83000000,  /* PLAYER_PED_ID */ sub_1086(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1086() );
            CLOSE_SEQUENCE_TASK( uVar2 );
            TASK_PERFORM_SEQUENCE( g_U3511[0], uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
            REGISTER_TARGET( g_U3511[0],  /* PLAYER_PED_ID */ sub_1086() );
        }
        if (NOT (IS_PED_DEAD( g_U3511[1] )))
        {
            OPEN_SEQUENCE_TASK( ref uVar3 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_SHOOT_AT_PED( 0,  /* PLAYER_PED_ID */ sub_1086(), 3000, -256437761, 0, 0, 0 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, -107.69000000, 27.20000000, 7.90000000,  /* PLAYER_PED_ID */ sub_1086(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1086() );
            CLOSE_SEQUENCE_TASK( uVar3 );
            TASK_PERFORM_SEQUENCE( g_U3511[1], uVar3 );
            CLEAR_SEQUENCE_TASK( uVar3 );
            REGISTER_TARGET( g_U3511[1],  /* PLAYER_PED_ID */ sub_1086() );
        }
    }
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_ENTRANCE_ENEMIES_START end", 0 );
    return;
}

/* P_ACTIVATEPEDARRAY */ void sub_70844(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_ACTIVATEPED */ sub_42584( (uParam0^)[I] );
    }
    return;
}

/* P_OB1_WAVE2_ENEMIES_FIRE_BLANKS */ void sub_71727(boolean bParam0)
{
    int I;
    unknown uVar4;
    unknown uVar5;

     /* WRITESCRIPTLOG */ sub_494( "SA", "P_OB1_WAVE2_BALCONY_ENEMIES_FIRE_BLANKS", 0 );
    for ( I = 0; I < g_U3505; I++ )
    {
        if (NOT (IS_PED_DEAD( g_U3505[I] )))
        {
            uVar4 = GET_WEAPON_FROM_HAND( g_U3505[I], 0, 0 );
            if (GET_DOES_WEAPON_EXIST( uVar4 ))
            {
                if (bParam0)
                {
                    SET_WEAPON_CHANCE_TO_FIRE_BLANKS( uVar4, 100 );
                }
                else
                {
                    SET_WEAPON_CHANCE_TO_FIRE_BLANKS( uVar4, 20 );
                }
            }
        }
    }
    for ( I = 0; I < g_U3511; I++ )
    {
        if (NOT (IS_PED_DEAD( g_U3511[I] )))
        {
            uVar5 = GET_WEAPON_FROM_HAND( g_U3511[I], 0, 0 );
            if (GET_DOES_WEAPON_EXIST( uVar5 ))
            {
                if (bParam0)
                {
                    SET_WEAPON_CHANCE_TO_FIRE_BLANKS( uVar5, 100 );
                }
                else
                {
                    SET_WEAPON_CHANCE_TO_FIRE_BLANKS( uVar5, 0 );
                }
            }
        }
    }
    return;
}

/* P_HANDLE_PASSOS_SHOOTING_COVER_2 */ void sub_72100()
{
    unknown uVar2;

    if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_57101( ref g_U3505 )) > 1)
    {
        if ( /* ISTIMERDONE */ sub_4900( ref l_U629 ))
        {
            uVar2 =  /* GET_NEAREST_PED_IN_ARRAY_TO_PED */ sub_57244( ref g_U3505, g_U3504 );
            if (NOT (IS_PED_DEAD( uVar2 )))
            {
                l_U628 = 0;
                TASK_CLEAR_LOOK_AT( g_U3504 );
                TASK_SHOOT_AT_PED( g_U3504, uVar2, 3000, -256437761, 0, 0, 0 );
                PED_SET_ACTION_INTENTION( g_U3504, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
            }
             /* CREATETIMER */ sub_1499( ref l_U629, GET_RANDOM_INT_IN_RANGE( 3000, 8000 ), 1, 0 );
             /* STARTTIMER */ sub_1982( ref l_U629 );
        }
    }
    return;
}

/* DISABLETIMER */ void sub_72423(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

/* P_OB1_BALCONY_COVER2_START_ENEMY_4 */ void sub_72495()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_BALCONY_COVER2_START_ENEMY_4 start", 0 );
    if (NOT (IS_PED_DEAD( g_U3505[3] )))
    {
         /* P_ACTIVATEPED */ sub_42584( g_U3505[3] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U3505[3], 0 );
        OPEN_SEQUENCE_TASK( ref uVar2 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
        {
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, -103.17000000, 27.88000000, 15.05000000,  /* PLAYER_PED_ID */ sub_1086(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1086() );
        }
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( g_U3505[3], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
        {
            REGISTER_TARGET( g_U3505[3],  /* PLAYER_PED_ID */ sub_1086() );
            SET_LOCKED_TARGET( g_U3505[3],  /* PLAYER_PED_ID */ sub_1086() );
        }
    }
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_BALCONY_COVER2_START_ENEMY_4 end", 0 );
    return;
}

/* P_OB1_BALCONY_COVER2_START_ENEMY_5 */ void sub_72972()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_BALCONY_COVER2_START_ENEMY_5 start", 0 );
    if (NOT (IS_PED_DEAD( g_U3505[4] )))
    {
         /* P_ACTIVATEPED */ sub_42584( g_U3505[4] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U3505[4], 0 );
        OPEN_SEQUENCE_TASK( ref uVar2 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
        {
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, -103.17000000, 23.22000000, 15.05000000,  /* PLAYER_PED_ID */ sub_1086(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1086() );
        }
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( g_U3505[4], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
        {
            REGISTER_TARGET( g_U3505[4],  /* PLAYER_PED_ID */ sub_1086() );
            SET_LOCKED_TARGET( g_U3505[4],  /* PLAYER_PED_ID */ sub_1086() );
        }
    }
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_BALCONY_COVER2_START_ENEMY_5 end", 0 );
    return;
}

/* P_START_ZIPLINE_REBEL_2 */ void sub_73533()
{
     /* WRITESCRIPTLOG */ sub_494( "MF", "P_START_ZIPLINE_REBEL_2 - START", 0 );
    if (NOT (IS_ANY_SPEECH_PLAYING( g_U3504 )))
    {
         /* P_SPEECH_PLAY_MONOLOGUE */ sub_60931( "SPAN_MRUTSA", ref l_U1111 );
    }
     /* P_ACTIVATEPED */ sub_42584( l_U1170[1] );
    ISEQ_REGISTER_ENTITY( -2125544421, "s_pan_rebel_zipline_2", l_U1170[1], 0 );
    ISEQ_START( -2125544421 );
    if (DOES_OBJECT_EXIST( g_U4163[0] ))
    {
        PLAY_OBJECT_ANIM( g_U4163[0], "P_AN_ZIPWIRE_FAR", "PA_ZIPLINE", 1000.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U4163[0], "P_AN_ZIPWIRE_FAR", "PA_ZIPLINE", 0.00000000 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_494( "CCB", "The oiZipLineObject_0 object is NOT valid!!!", 0 );
    }
    if (DOES_OBJECT_EXIST( g_U4163[1] ))
    {
        PLAY_OBJECT_ANIM( g_U4163[1], "P_AN_ZIPHOI_BA_H", "PA_ZIPLINE", 1000.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U4163[1], "P_AN_ZIPHOI_BA_H", "PA_ZIPLINE", 0.00000000 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_494( "CCB", "The oiZipLineObject_1 object is NOT valid!!!", 0 );
    }
    if (DOES_OBJECT_EXIST( g_U4163[2] ))
    {
        PLAY_OBJECT_ANIM( g_U4163[2], "P_AN_ZIPLOW_BA_H", "PA_ZIPLINE", 1000.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U4163[2], "P_AN_ZIPLOW_BA_H", "PA_ZIPLINE", 0.00000000 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_494( "CCB", "The oiZipLineObject_2 object is NOT valid!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_494( "MF", "P_START_ZIPLINE_REBEL_2 - END", 0 );
    return;
}

/* P_OB1_PLAY_SPEECH_VIG13 */ void sub_74601()
{
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_PLAY_SPEECH_VIG13 start", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_47586( ref l_U588 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1086() )))
    {
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 0,  /* PLAYER_PED_ID */ sub_1086(), "MAX", ref l_U588, 2, 0 );
    }
    if (NOT (IS_PED_DEAD( g_U3504 )))
    {
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 1, g_U3504, "PASSOS", ref l_U588, 2, 0 );
    }
    if (NOT (IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1086() )))
    {
         /* PLAY_SINGLE_SPEECH */ sub_48003( "SPAN_VIG13", ref l_U588, 8, 1 );
    }
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_PLAY_SPEECH_VIG13 end", 0 );
    return;
}

/* P_START_CHECKPOINT_THREAD */ void sub_74974(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

/* TAKE_OPS_BUILDING_VEHICLE_AND_PILL_SNAPSHOT */ void sub_75218()
{
    int I;

     /* WRITESCRIPTLOG */ sub_494( "RJM", "TAKE_OPS_BUILDING_VEHICLE_AND_PILL_SNAPSHOT", 0 );
    for ( I = 0; I <= (g_U4194 - 1); I++ )
    {
        if (IS_VEHICLE_DEAD( g_U4194[I] ))
        {
            DISPLAYF( "viGlobalBuildingVehicle[{}] is dead", 1, 513, I );
            g_U4197[I] = 1;
        }
    }
    if ((HAS_PLACEMENT_BEEN_COLLECTED( g_U4186 )) || (NOT (DOES_PLACEMENT_EXIST( g_U4186 ))))
    {
         /* WRITESCRIPTLOG */ sub_494( "RJM", "Vehicle 1 pill was taken", 0 );
        g_U4187 = 1;
    }
    for ( I = 0; I <= (g_U4188 - 1); I++ )
    {
        if ((HAS_PLACEMENT_BEEN_COLLECTED( g_U4188[I] )) || (NOT (DOES_PLACEMENT_EXIST( g_U4188[I] ))))
        {
            DISPLAYF( "Vehicle 2 pill #{} was collected", 1, 513, I );
            g_U4191[I] = 1;
        }
    }
    return;
}

/* F_UNLOADCUTSCENEANDLOADNEWCUTSCENE */ int sub_75754(unknown uParam0, unknown uParam1)
{
    if (CUTSCENE_IS_LOADED( uParam1 ))
    {
        PRINTSTRING( uParam1 );
         /* WRITE_STRING */ sub_12314( " is loaded." );
        return 1;
    }
    else if ((CUTSCENE_NAMED_IS_LOADING( uParam0 )) || (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRINTSTRING( "Unloading cutscene " );
         /* WRITE_STRING */ sub_12314( uParam0 );
        CLEAR_NAMED_CUTSCENE( uParam0 );
    }
    else if (CUTSCENE_NAMED_IS_LOADING( uParam1 ))
    {
        PRINTSTRING( uParam1 );
         /* WRITE_STRING */ sub_12314( " is loading." );
    }
    else
    {
        PRINTSTRING( "Requesting cutscene " );
         /* WRITE_STRING */ sub_12314( uParam1 );
         /* LOADSEAMLESSCUTSCENE */ sub_29616( uParam1, 0 );
    };;;
    return 0;
}

/* P_OB1_MID_05B_CUTSCENEREGISTRATION */ void sub_76141()
{
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_MID_05B_CutsceneRegistration start", 0 );
     /* KILL_SPEECH */ sub_63132( ref l_U588, 0 );
    if (NOT (IS_PED_DEAD( g_U3504 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U3504, "Pass_Yaht", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U3504, 0, 0 ), "W_PI_PT92_Aa_H", 0 );
        TASK_CLEAR_LOOK_AT( g_U3504 );
    }
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_MID_05B_CutsceneRegistration end", 0 );
    return;
}

/* P_OB1_MID_05B_PREPAREBLENDOUT */ void sub_76416()
{
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_MID_05B_PrepareBlendout start", 0 );
    DO_SCREEN_FADE_OUT( 0 );
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_OB1_MID_05B_PrepareBlendout end", 0 );
    return;
}

/* P_DEBUG_DIALOGUE */ void sub_76766()
{
    if (l_U1199 == 0)
    {
        START_WIDGET_GROUP( "Dialogue Widget" );
        ADD_WIDGET_BOOL( "Play - Lines from Passos if the player bumps into him", ref l_U1200 );
        ADD_WIDGET_BOOL( "Play - Lines from Passos if the player aims at him", ref l_U1201 );
        ADD_WIDGET_BOOL( "Play - Lines from Passos if the player shoots at him", ref l_U1202 );
        ADD_WIDGET_BOOL( "Play - Lines from Passos if player stands out of cover", ref l_U1203 );
        ADD_WIDGET_BOOL( "Play - Lines from Passos if Max pulls off a last man standing", ref l_U1204 );
        ADD_WIDGET_BOOL( "Play - Short lines from Passos as he shoots at the enemy", ref l_U1205 );
        ADD_WIDGET_BOOL( "Play - Short lines from Passos as they move through the level", ref l_U1206 );
        ADD_WIDGET_BOOL( "Play - Passos points out the opponents up on the top floor", ref l_U1207 );
        ADD_WIDGET_BOOL( "Play - Passos says he’s making a move", ref l_U1208 );
        ADD_WIDGET_FLOAT_SLIDER( "Aim At Passos Radius", ref l_U686, 0.00000000, 1E12, 0.10000000 );
        l_U1199 = 1;
        STOP_WIDGET_GROUP();
    }
    if (l_U1200)
    {
         /* WRITESCRIPTLOG */ sub_494( "CR", "Lines from Passos if the player bumps into him", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_47586( ref l_U656 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 0,  /* PLAYER_PED_ID */ sub_1086(), "MAX", ref l_U656, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 1, g_U3504, "PASSOS", ref l_U656, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_48003( "SPAN_PBTP", ref l_U656, 8, 1 );
        l_U1200 = 0;
    }
    if (l_U1201)
    {
         /* WRITESCRIPTLOG */ sub_494( "CR", "Lines from Passos if the player aims at him", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_47586( ref l_U666 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 0,  /* PLAYER_PED_ID */ sub_1086(), "MAX", ref l_U666, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 1, g_U3504, "PASSOS", ref l_U666, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_48003( "SPAN_LPAH", ref l_U666, 8, 1 );
        l_U1201 = 0;
    }
    if (l_U1202)
    {
         /* WRITESCRIPTLOG */ sub_494( "CR", "Lines from Passos if the player shoots at him", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_47586( ref l_U676 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 0,  /* PLAYER_PED_ID */ sub_1086(), "MAX", ref l_U676, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 1, g_U3504, "PASSOS", ref l_U676, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_48003( "SPAN_LPFPS", ref l_U676, 8, 1 );
        l_U1202 = 0;
    }
    if (l_U1203)
    {
         /* WRITESCRIPTLOG */ sub_494( "CR", "Lines from Passos if player stands out of cover", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_47586( ref l_U687 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 0,  /* PLAYER_PED_ID */ sub_1086(), "MAX", ref l_U687, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 1, g_U3504, "PASSOS", ref l_U687, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_48003( "SPAN_LPPSC", ref l_U687, 8, 1 );
        l_U1203 = 0;
    }
    if (l_U1204)
    {
         /* WRITESCRIPTLOG */ sub_494( "CR", "Lines from Passos if Max pulls off a last man standing", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_47586( ref l_U698 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 0,  /* PLAYER_PED_ID */ sub_1086(), "MAX", ref l_U698, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 1, g_U3504, "PASSOS", ref l_U698, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_48003( "SPAN_LPPFL", ref l_U698, 8, 1 );
        l_U1204 = 0;
    }
    if (l_U1205)
    {
         /* WRITESCRIPTLOG */ sub_494( "CR", "Short lines from Passos as he shoots at the enemy", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_47586( ref l_U709 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 0,  /* PLAYER_PED_ID */ sub_1086(), "MAX", ref l_U709, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 1, g_U3504, "PASSOS", ref l_U709, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_48003( "SPAN_LPSAE", ref l_U709, 8, 1 );
        l_U1205 = 0;
    }
    if (l_U1206)
    {
         /* WRITESCRIPTLOG */ sub_494( "CR", "Short lines from Passos as they move through the level", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_47586( ref l_U719 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 0,  /* PLAYER_PED_ID */ sub_1086(), "MAX", ref l_U719, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 1, g_U3504, "PASSOS", ref l_U719, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_48003( "SPAN_LPMTL", ref l_U719, 8, 1 );
        l_U1206 = 0;
    }
    if (l_U1207)
    {
         /* WRITESCRIPTLOG */ sub_494( "CR", "Passos points out the opponents up on the top floor", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_47586( ref l_U738 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 0,  /* PLAYER_PED_ID */ sub_1086(), "MAX", ref l_U738, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 1, g_U3504, "PASSOS", ref l_U738, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_48003( "SPAN_PSUTF", ref l_U738, 8, 1 );
        l_U1207 = 0;
    }
    if (l_U1208)
    {
         /* WRITESCRIPTLOG */ sub_494( "CR", "Passos says he’s making a move", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_47586( ref l_U757 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 0,  /* PLAYER_PED_ID */ sub_1086(), "MAX", ref l_U757, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_47715( 1, g_U3504, "PASSOS", ref l_U757, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_48003( "SPAN_PSHMM", ref l_U757, 8, 1 );
        l_U1208 = 0;
    }
    return;
}

/* P_RELEASE_OB1_ASSETS */ void sub_78978()
{
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_RELEASE_OB1_ASSETS start", 0 );
     /* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ sub_79059( ref l_U176, ref g_U1588 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_45363( g_U1513, ref g_U1588 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_45363( g_U1522, ref g_U1588 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE_ARRAY */ sub_79192( ref l_U186, ref g_U1829 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_79635( "LEVEL_S_PAN_CP_06", ref g_U1975 );
     /* WRITESCRIPTLOG */ sub_494( "GA", "P_RELEASE_OB1_ASSETS end", 0 );
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ void sub_79059(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_45363( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE_ARRAY */ void sub_79192(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_79266( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE */ void sub_79266(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_8128( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a WEAPON_TYPE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_REMOVE */ void sub_79635(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_8128( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ANIM_DICT asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}


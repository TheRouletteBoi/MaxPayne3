void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U58 = 0;
    l_U59 = 0;
    l_U60 = 1500;
    l_U70 = {0, 0, 0};
    StrCopy( ref l_U73, "DUMMY", 32 );
    l_U81 = 1;
    l_U86 = 0;
    l_U87 = 0;
    l_U88 = 0;
    l_U91 = 0;
    l_U137 = 0;
    l_U183 = 0;
    l_U185 = 1;
    l_U186 = 0;
    l_U187 = 0;
    l_U348 = 1200;
    l_U385 = 2750;
    l_U395 = 3060;
    l_U405 = 3410;
    sub_395( "SP", "Script s_fashion_roofMPM.sc is starting up...", 0 );
    sub_444();
    l_U183 = 1;
    l_U137 = 0;
    while (NOT IS_EXITFLAG_SET())
    {
        sub_663();
        if (l_U187 == 0)
        {
            sub_9451();
        }
        WAIT( 0 );
    }
    sub_3474( 0 );
    sub_39415();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_fashion_roofMPM" );
    sub_395( "SP", "Script s_fashion_roofMPM.sc is terminating...", 0 );
    return;
}

void sub_395(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_444()
{
    sub_395( "GA", "P_MPM_POPULATE_VARIABLE_ARRAYS start", 0 );
    l_U175[0] = 379318398;
    l_U175[1] = -1800098183;
    l_U175[2] = 78822328;
    l_U175[3] = 1953103640;
    l_U175[4] = 591762127;
    l_U181[0] = 68019059;
    sub_395( "GA", "P_MPM_POPULATE_VARIABLE_ARRAYS end", 0 );
    return;
}

void sub_663()
{
    if (g_U723 == 2)
    {
        switch (l_U187)
        {
            case 0:
            if ((l_U186) || ((sub_818()) || (IS_PED_DEAD( sub_745() ))))
            {
                l_U187 = 1;
                sub_395( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_1318())
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_745() );
                sub_1363( sub_745() );
                l_U187 = 2;
            }
            else if ((sub_1505( 0 )) == 1)
            {
                l_U187 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_745() )))
            {
                if ((g_U724[3]._fU40 != 4) AND (g_U724[3]._fU40 != 0))
                {
                    sub_395( "GA", "Shutting down script for Lobby checkpoint.", 0 );
                    sub_2954( ref g_U724[3] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U724[3]._fU32 );
                    g_U1264[3] = 0;
                }
                l_U187 = 3;
                sub_395( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_395( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_745() ))) AND (NOT (IS_PLAYER_DEAD( sub_767() ))))
            {
                SET_PLAYER_CONTROL( sub_767(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_745() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_745(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            sub_3225( "ROOF_MPM_SCRIPTED_FAIL_FX" );
            sub_3225( "ROOF_MPM_SHOOT_FAB_SCRIPTED_FAIL_FX" );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            sub_3474( 1 );
            l_U187 = 4;
            sub_395( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_395( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            if (l_U139._fU0)
            {
                sub_5223( ref l_U139, sub_745() );
            }
            l_U187 = 5;
            sub_395( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_395( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U183 = 1;
            l_U185 = 0;
            l_U186 = 0;
            l_U187 = 0;
            sub_395( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_745()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_767() );
    }
    return 0;
}

void sub_767()
{
    return GET_PLAYER_ID();
}

int sub_818()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_745() )))
        {
            SET_PED_FORCED_TO_WALK( sub_745(), 0 );
            SET_PLAYER_FORCED_AIM( sub_767(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_767(), 1 );
            if ((IS_PED_VISIBLE( sub_745() )) == 0)
            {
                SET_PED_VISIBLE( sub_745(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_1318()
{
    return g_U648;
}

void sub_1363(int iParam0)
{
    if (NOT (IS_PED_DEAD( iParam0 )))
    {
        CLEAR_PED_TASKS( iParam0 );
        if (iParam0 == sub_745())
        {
            PED_ACTION_TREE_PLAY_NODE( iParam0, "/Global/Player/PlayerLoco" );
        }
        else
        {
            PED_ACTION_TREE_PLAY_NODE( iParam0, "/Global/NPC/NpcLoco" );
        }
    }
    return;
}

int sub_1505(int iParam0)
{
    iParam0 = 1;
    switch (l_U59)
    {
        case 0:
        if (NOT (sub_1566( ref l_U61 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_745() )))
            {
                l_U60 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_1676( ref l_U61, l_U60, 1, 1 );
            sub_1812( ref l_U61 );
        }
        if (sub_1932( ref l_U61 ))
        {
            sub_395( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_745() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_767() )))
            {
                SET_PLAYER_CONTROL( sub_767(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U59 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U59 = 2;
            }
            else
            {
                l_U59 = 3;
            }
        }
        break;
        case 2:
        sub_395( "NS", "Player will QUIT", 0 );
        sub_2419();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_395( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_2419();
        return 1;
        break;
    }
    return 0;
}

int sub_1566(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_1676(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_1812(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_1932(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_2419()
{
    sub_395( "NS", "P_PostFailRetryCleanup", 0 );
    sub_2469( ref l_U61 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_767() )))
    {
        SET_PLAYER_CONTROL( sub_767(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U58 = 0;
    l_U58 = l_U58;
    l_U59 = 0;
    return;
}

void sub_2469(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_2954(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_3225(unknown uParam0)
{
    sub_395( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    sub_3308( ref l_U138 );
    l_U137 = 1;
    return;
}

void sub_3308(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

void sub_3474(unknown uParam0)
{
    sub_395( "GA", "P_CLEANUP_MPM start", 0 );
    ALLOW_BULLET_CAMERA_SLOWDOWN( 1 );
    ISEQ_TERMINATE( -699657448 );
    sub_3546( -699657448, ref g_U967 );
    ISEQ_TERMINATE( 1284439964 );
    sub_3546( 1284439964, ref g_U967 );
    ISEQ_TERMINATE( 1809216056 );
    sub_3546( 1809216056, ref g_U967 );
    if ((CUTSCENE_NAMED_IS_LOADING( "MID_04_RP_concat" )) || (CUTSCENE_IS_LOADED( "MID_04_RP_concat" )))
    {
        CLEAR_NAMED_CUTSCENE( "MID_04_RP_concat" );
    }
    sub_4070( "S_FASHION_MPM", ref g_U1168 );
    sub_4395( "S_FASHION_MPM", ref g_U1168 );
    sub_4569( ref l_U295, 0 );
    if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( "BRAZIL_ONESHOT_15" ))
    {
        AUDIO_MUSIC_STOP_ONESHOT();
    }
    sub_4760( ref l_U232 );
    sub_4760( ref l_U290 );
    sub_4794( l_U338 );
    sub_4908( uParam0 );
    sub_395( "GA", "P_CLEANUP_MPM start", 0 );
    return;
}

void sub_3546(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_3658( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

int sub_3658(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_4070(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if (sub_4087( uParam0, uParam1 ))
    {
        iVar4 = sub_4186( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            STOP_SCRIPT_STREAM( iVar4 );
        }
        else
        {
            SCRIPT_ASSERT( "Attempting to stop a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    return;
}

int sub_4087(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                return 1;
            }
        }
    }
    return 0;
}

int sub_4186(unknown uParam0, unknown uParam1)
{
    int Result;

    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
        {
            return Result;
        }
    }
    return -1;
}

void sub_4395(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_3658( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_4569(int iParam0, unknown uParam1)
{
    if (NOT (sub_4583( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

boolean sub_4583(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_4760(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_4794( (uParam0^)[I] );
    }
    return;
}

void sub_4794(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_4908(unknown uParam0)
{
    sub_395( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    sub_395( "CCB", "Stopping the Rooftop_Party_Rooftop_MPM context.", 0 );
    END_CONTEXT( "Rooftop_Party_Rooftop_MPM" );
    return;
}

void sub_5223(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_395( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_5407( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_6484( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_6776( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_7136( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_6776( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_7136( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_6776( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_7136( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_7421( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_7136( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_7421( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_7136( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_7914( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_8075( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_745(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_395( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_5407(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_5439( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_5439(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_6484(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_6776(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_7092( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_7092(unknown uParam0)
{
    return;
}

void sub_7136(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_7421(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_7092( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_7914(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_8075(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_5439( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_8147( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_8147(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_9451()
{
    int iVar2;

    iVar2 = l_U183;
    if (g_U723 == 2)
    {
        sub_9480();
    }
    switch (l_U183)
    {
        case 0: break;
        case 1:
        sub_395( "SP", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
        sub_9778();
        sub_9990();
        sub_10870();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U183 = 2;
        sub_395( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_395( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        sub_11065();
        sub_14614();
        l_U183 = 3;
        sub_395( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if ((sub_18722( ref g_U1168 )) AND ((sub_18531( ref g_U967 )) AND ((sub_18404( ref g_U1028 )) AND ((sub_18283( ref g_U918 )) AND (sub_18163( ref g_U821 ))))))
        {
            if ((NOT l_U139._fU0) AND (g_U722 == 2))
            {
                l_U183 = 4;
                sub_395( "SP", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
            }
            else
            {
                l_U183 = 6;
                sub_395( "SP", "eCheckpointState = CP_MPM_PRE_CREATE_ASSETS", 0 );
            }
        }
        break;
        case 4:
        sub_395( "GA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        l_U185 = 0;
        g_U1264[2] = 1;
        if (NOT (IS_PED_DEAD( sub_745() )))
        {
            FREEZE_PED_POSITION( sub_745(), 0 );
        }
        if ((sub_19118( ref l_U139 )) == 0)
        {
            sub_7421( sub_745(), 68019059, 200, 0, 0 );
            sub_6776( sub_745(), 68019059, 0, 200, 0 );
            l_U183 = 5;
            sub_395( "GA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U183 = 6;
            sub_395( "SP", "eCheckpointState = CP_MPM_PRE_CREATE_ASSETS", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD( sub_745() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_745(), 0 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_745(), 0, 0 ) )))
            {
                l_U183 = 6;
                sub_395( "GA", "eCheckpointState = CP_MPM_PRE_CREATE_ASSETS", 0 );
            }
        }
        break;
        case 6:
        if (l_U184)
        {
            l_U203 = 1;
            l_U235 = 1;
        }
        if (sub_19646())
        {
            if (sub_21309())
            {
                if (sub_21878())
                {
                    l_U183 = 7;
                    sub_395( "GA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
                }
            }
        }
        break;
        case 7:
        if (g_U1264[2])
        {
            if (l_U185)
            {
                if (CUTSCENE_IS_LOADED( "MID_04_RP_concat" ))
                {
                    l_U183 = 8;
                    sub_395( "GA", "eCheckpointState = CP_MPM_HANDLE_MID_04_RP", 0 );
                }
                else if (CUTSCENE_NAMED_IS_LOADING( "MID_04_RP_concat" ))
                {
                    sub_395( "GA", "Waiting for cutscene MID_04_RP_concat to load.", 0 );
                }
                else
                {
                    sub_395( "GA", "Requesting cutscene MID_04_RP_concat to load.", 0 );
                    PRE_STREAM_SEAMLESS_CUTSCENE( "MID_04_RP_concat" );
                }
            }
            else
            {
                l_U183 = 8;
                sub_395( "GA", "eCheckpointState = CP_MPM_HANDLE_MID_04_RP", 0 );
            }
        }
        break;
        case 8:
        if (l_U184)
        {
            PLAY_IMAGEFX( "GAMMA_SATURATION_COLOR_ZOOM", 4, 1 );
            sub_28959( ref l_U358, "MID_04_RP_concat", 22497, 22514, 23951, 25847, 25864, 28446, 250, 0 );
            if (l_U185)
            {
                sub_1676( ref l_U415, 250, 1, 0 );
                sub_1812( ref l_U415 );
                l_U358._fU104 = 0;
            }
            else
            {
                l_U358._fU4 = 7;
            }
        }
        if (sub_1932( ref l_U415 ))
        {
            l_U358._fU4 = 2;
        }
        if (sub_29428( ref l_U358 ))
        {
            if (NOT l_U139._fU0)
            {
                g_U723 = 2;
                sub_31354( ref l_U139, g_U723, sub_745(), g_U1333[2], g_U1450[2], g_U1486[2], g_U1522[2], 1 );
            }
            sub_34968();
            sub_35029( ref g_U724[3] );
            sub_35055();
            sub_35235();
            sub_1812( ref l_U349 );
            l_U183 = 9;
            sub_395( "GA", "eCheckpointState = CP_MPM_GAMEPLAY_MPM", 0 );
        }
        break;
        case 9:
        if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
        {
            if (sub_1932( ref l_U349 ))
            {
                sub_35492();
                sub_35645();
                l_U183 = 10;
                sub_395( "GA", "eCheckpointState = CP_MPM_FAIL_TIMEOUT", 0 );
                return;
            }
            if (IS_PED_DEAD( l_U232[1] ))
            {
                sub_35492();
                sub_36296();
                l_U183 = 11;
                sub_395( "GA", "eCheckpointState = CP_MPM_FAIL_SHOT_FABIANA", 0 );
                return;
            }
            else if (NOT (IS_PED_DEAD( sub_745() )))
            {
                if (HAS_PED_BEEN_DAMAGED_BY_PED( l_U232[1], sub_745(), 0 ))
                {
                    sub_35492();
                    sub_36296();
                    l_U183 = 11;
                    sub_395( "GA", "eCheckpointState = CP_MPM_FAIL_SHOT_FABIANA", 0 );
                    return;
                }
            }
        }
        if (IS_PED_DEAD( l_U232[0] ))
        {
            sub_36887();
            sub_35492();
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
            l_U183 = 12;
            sub_395( "GA", "eCheckpointState = CP_MPM_SUCCESS", 0 );
            return;
        }
        break;
        case 10:
        if (l_U184)
        {
            ;
        }
        if ((NOT (IS_PED_DEAD( l_U232[1] ))) AND (NOT (IS_PED_DEAD( l_U232[0] ))))
        {
            if ((PED_GET_ACTION_INTENTION_STATUS( l_U232[0], 51 )) == 3)
            {
                sub_395( "GA", "CS Shooting Fabiana", 0 );
                SET_PED_SHOOTS_AT_COORD( l_U232[0], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U232[1], 65488, 0, 0, 0 ) );
                PED_FINISH_ACTION_INTENTION( l_U232[0], 51 );
            }
        }
        if (NOT IS_ANIMATED_CAMERA_PLAYING())
        {
            l_U186 = 1;
        }
        else if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_ROOFTOP_CP_03", "MID_05_RP_CAM" )) - 3750))
        {
            l_U186 = 1;
        }
        break;
        case 11:
        if (l_U184)
        {
            ;
        }
        if (NOT IS_ANIMATED_CAMERA_PLAYING())
        {
            l_U186 = 1;
        }
        else if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_ROOFTOP_CP_03", "MID_05_RP_ALT1_cam" )) - 3750))
        {
            l_U186 = 1;
        }
        break;
        case 12:
        if (l_U184)
        {
            ;
        }
        if (sub_1932( ref l_U339 ))
        {
            sub_395( "GA", "Playing splash effect as Max hits the water.", 0 );
            START_PARTICLE_FX_NON_LOOPED_AT_COORD( "CS_water_splash_RTMPM", -1.00000000, -34.50000000, -15.48000000, 0, 0, 0, 1065353216 );
        }
        if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
        {
            g_U1264[3] = 1;
            l_U183 = 13;
            sub_395( "GA", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 13:
        if ((g_U723 == 3) || (NOT HAS_CUTSCENE_FINISHED()))
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U183 = 0;
            sub_395( "SP", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
    }
    if (l_U183 != iVar2)
    {
        l_U184 = 1;
    }
    else
    {
        l_U184 = 0;
    }
    return;
}

void sub_9480()
{
    sub_9490();
    return;
}

void sub_9490()
{
    switch (g_U1646)
    {
        case 0:
        g_U1646 = 1;
        break;
        case 1:
        if (IS_HUD_PREFERENCE_SWITCHED_ON())
        {
            g_U1646 = 2;
        }
        break;
        case 2: break;
    }
    return;
}

void sub_9778()
{
    sub_395( "GA", "P_INITIALIZE_SCRIPT_DATA start", 0 );
    l_U184 = 1;
    l_U203 = 0;
    l_U204 = 0;
    l_U235 = 0;
    l_U236 = 0;
    sub_1676( ref l_U349, l_U348, 1, 0 );
    sub_1676( ref l_U339, 600, 1, 0 );
    sub_1676( ref l_U386, l_U385, 1, 0 );
    sub_1676( ref l_U396, l_U395, 1, 0 );
    sub_1676( ref l_U406, l_U405, 1, 0 );
    sub_395( "GA", "P_INITIALIZE_SCRIPT_DATA end", 0 );
    return;
}

void sub_9990()
{
    sub_395( "GA", "P_SET_STATIC_DATA start", 0 );
    sub_10077( ref l_U205[1], -4.83000000, -39.33000000, -15.27130000, 7.12000000, 1593054399, 26, 0, 0, 0, 0 );
    sub_10077( ref l_U205[0], -4.74000000, -39.68000000, -15.27130000, 28.09000000, 1104808079, 7, 3, 2, 0, 0 );
    sub_10077( ref l_U237[0], -7.27400000, -32.83200000, -15.27500000, -180.00000000, -557207819, 26, 0, 0, 0, 0 );
    sub_10077( ref l_U237[1], -7.49900000, -34.34600000, -15.26700000, -180.00000000, 743405782, 26, 0, 0, 0, 0 );
    sub_10077( ref l_U237[2], -9.42500000, -34.93300000, -15.30700000, -180.00000000, 553092933, 26, 0, 0, 0, 0 );
    sub_10077( ref l_U237[3], -5.56200000, -33.10000000, -15.27300000, -205.00000000, 1704169279, 26, 0, 0, 0, 0 );
    sub_10077( ref l_U325, -6.77000000, -40.28000000, -15.20000000, 20.00000000, -1475394673, 7, 3, 2, 0, 0 );
    sub_10491( ref l_U188[0], 1423639588, -9.11101000, -31.20805000, -13.59038000, 0, 0, 0 );
    sub_10548( ref l_U188[0], 0, 1, 1065353216 );
    sub_10491( ref l_U188[1], 1423639588, -6.08724000, -30.64884000, -13.59038000, 0, 0, 0 );
    sub_10548( ref l_U188[1], 1, 1, 1065353216 );
    sub_395( "GA", "P_SET_STATIC_DATA end", 0 );
    return;
}

void sub_10077(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_10491(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

void sub_10548(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_10560( iParam0 )) == 0)
    {
        sub_10626( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

int sub_10560(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_10626(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_10870()
{
    sub_395( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    return;
}

void sub_11065()
{
    sub_395( "GA", "P_REQUEST_MPM_PERSISTENT_ASSETS start", 0 );
    sub_11134( ref l_U175, ref g_U821 );
    sub_12542( ref l_U181, ref g_U918 );
    sub_13562( "LEVEL_S_ROOFTOP_CP_03", ref g_U1028 );
    sub_13562( "DAM_DEAD", ref g_U1028 );
    sub_395( "GA", "P_REQUEST_MPM_PERSISTENT_ASSETS end", 0 );
    return;
}

void sub_11134(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_11169( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_11169(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_11204( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_11335( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_11204(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_11335( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_11335( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_11335( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_11983( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_11335( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_11335( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_11335(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_11355( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_11355(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_11983(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_12542(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_12577( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_12577(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_12598( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_12730( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_12598(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_12730( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_12730( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_12730( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_11983( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_12730( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_12730( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_12730(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_11355( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_13562(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_13583( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_13720( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_13583(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_13720( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_13720( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_13720( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_11983( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_13720( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_13720( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_13720(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_11355( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_14614()
{
    sub_395( "GA", "P_REQUEST_MPM_NONPERSISTENT_ASSETS start", 0 );
    sub_14687( -699657448, ref g_U967 );
    sub_14687( 1284439964, ref g_U967 );
    sub_14687( 1809216056, ref g_U967 );
    sub_16657( "S_FASHION_MPM", ref g_U1168 );
    if ((l_U185) AND (g_U722 != 2))
    {
        sub_17748( "MID_04_RP_concat", 0 );
    }
    else
    {
        AUDIO_MUSIC_REQUEST_ONESHOT( "BRAZIL_ONESHOT_15", 0 );
    }
    sub_395( "GA", "P_REQUEST_MPM_NONPERSISTENT_ASSETS end", 0 );
    return;
}

void sub_14687(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_14722( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_14874( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_14722(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_14874( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_14874( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_14874( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_14874( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_11983( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_11983( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_14874( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_14874( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_14874(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_11355( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_16657(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_16678( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_16819( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_16678(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being requested!!!", 0 );
                sub_16819( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is already loading!!!", 0 );
                sub_16819( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (Result <= 2)
                {
                    if ((GET_SCRIPT_STREAM_STATE( uParam0, Result )) == 2)
                    {
                        sub_16819( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else
                    {
                        SCRIPT_ASSERT( "The SCRIPT_STREAM asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                        (uParam1^)[Result]._fU32 = 0;
                        sub_11983( ref (uParam1^)[Result]._fU36 );
                        return Result;
                    }
                }
                else
                {
                    sub_16819( Result, uParam1, uParam2 );
                    return -1;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being removed!!!", 0 );
                sub_16819( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (Result <= 2)
        {
            if ((GET_SCRIPT_STREAM_STATE( uParam0, iVar6 )) == 2)
            {
                StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
                (uParam1^)[iVar6]._fU32 = 3;
                sub_16819( iVar6, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar6;
            }
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The SCRIPT_STREAM - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_16819(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_11355( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The SCRIPT_STREAM asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_17748(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

int sub_18163(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_18283(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_18404(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_18531(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

int sub_18722(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_19118(unknown uParam0)
{
    sub_395( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_5223( uParam0, sub_745() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

int sub_19646()
{
    switch (l_U203)
    {
        case 1:
        sub_395( "GA", "e_MPM_V3_SpawnState = ENTITY_STATE_INIT", 0 );
        l_U204 = 0;
        sub_395( "GA", "e_MPM_V3_SpawnState = ENTITY_STATE_CREATING", 0 );
        l_U203 = 2;
        break;
        case 2:
        l_U232[l_U204] = sub_19830( ref l_U205[l_U204] );
        if (NOT (IS_PED_DEAD( l_U232[l_U204] )))
        {
            SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U232[l_U204], 1 );
            SET_PED_AS_ONE_SHOT_KILL( l_U232[l_U204], 1 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U232[l_U204], 1 );
        }
        sub_20750( l_U232[l_U204] );
        l_U204++;
        if (l_U204 >= 2)
        {
            sub_395( "GA", "e_MPM_V3_SpawnState = ENTITY_STATE_POST_CREATE_SETUP", 0 );
            l_U203 = 3;
        }
        break;
        case 3:
        sub_20968( ref l_U232, "pi_MPM_V3_Ped" );
        sub_21092( ref l_U232[0], "AIT_NOVICE", -1082130432, -1082130432 );
        sub_7421( l_U232[0], 68019059, 25000, 0, 0 );
        sub_395( "GA", "e_MPM_V3_SpawnState = ENTITY_STATE_COMPLETE", 0 );
        l_U203 = 4;
        break;
    }
    if (l_U203 == 4)
    {
        return 1;
        break;
    }
    return 0;
}

void sub_19830(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_20000( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_20469( iParam0->_fU40 );
    sub_20549( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_20000(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_7092( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_20469(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_20549(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_20750(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_20968(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_21092(unknown uParam0, unknown uParam1, float fParam2, float fParam3)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    return;
}

int sub_21309()
{
    switch (l_U235)
    {
        case 1:
        sub_395( "GA", "e_MPM_V3B_SpawnState = ENTITY_STATE_INIT", 0 );
        l_U236 = 0;
        sub_395( "GA", "e_MPM_V3B_SpawnState = ENTITY_STATE_CREATING", 0 );
        l_U235 = 2;
        break;
        case 2:
        l_U290[l_U236] = sub_19830( ref l_U237[l_U236] );
        sub_7421( l_U290[l_U236], 68019059, 25000, 0, 0 );
        if (NOT (IS_PED_DEAD( l_U290[l_U236] )))
        {
            SET_PED_GORE( l_U290[l_U236], 0 );
            SET_PED_PROOFS( l_U290[l_U236], 1, 1, 1, 1, 1 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U290[l_U236], 1 );
        }
        sub_20750( l_U290[l_U236] );
        l_U236++;
        if (l_U236 >= 4)
        {
            sub_395( "GA", "e_MPM_V3B_SpawnState = ENTITY_STATE_POST_CREATE_SETUP", 0 );
            l_U235 = 3;
        }
        break;
        case 3:
        sub_20968( ref l_U290, "pi_MPM_V3B_Ped" );
        sub_395( "GA", "e_MPM_V3B_SpawnState = ENTITY_STATE_COMPLETE", 0 );
        l_U235 = 4;
        break;
    }
    if (l_U235 == 4)
    {
        return 1;
        break;
    }
    return 0;
}

int sub_21878()
{
    if (NOT (DOES_PED_EXIST( l_U338 )))
    {
        l_U338 = sub_19830( ref l_U325 );
        if (NOT (IS_PED_DEAD( l_U338 )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U338, 1 );
        }
        sub_20750( l_U338 );
        return 0;
        break;
    }
    return 1;
}

int sub_22497()
{
    return 1;
}

void sub_22514()
{
    sub_395( "GA", "P_MPM_MID04_CutsceneRegistration start", 0 );
    if (NOT (IS_PED_DEAD( sub_745() )))
    {
        CUTSCENE_REGISTER_PED_TELEPORT( sub_745(), g_U1333[2], g_U1450[2] );
        ISEQ_REGISTER_ENTITY( -699657448, "player", sub_745(), 0 );
        CUTSCENE_REGISTER_ISEQ( -699657448 );
    }
    if (NOT (IS_PED_DEAD( l_U232[1] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U232[1], "Fabi_Roof", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U232[1], l_U205[1]._fU0, l_U205[1]._fU12 );
        ISEQ_REGISTER_ENTITY( 1284439964, "fabiana", l_U232[1], 0 );
    }
    if (NOT (IS_PED_DEAD( l_U232[0] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U232[0], "G_CS_Sold_X", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U232[0], l_U205[0]._fU0, l_U205[0]._fU12 );
        ISEQ_REGISTER_ENTITY( 1284439964, "cs_enemy", l_U232[0], 0 );
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( l_U232[0], 0, 0 ) ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U232[0], 0, 0 ), "W_PI_PT92_Aa_H", 0 );
        }
    }
    CUTSCENE_REGISTER_ISEQ( 1284439964 );
    if (NOT (IS_PED_DEAD( l_U338 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U338, "G_CS_Sold_X^1", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U338, l_U325._fU0, l_U325._fU12 );
    }
    if (NOT (IS_PED_DEAD( l_U290[0] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U290[0], "Pass_Suit", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U290[0], l_U237[0]._fU0, l_U237[0]._fU12 );
        ISEQ_REGISTER_ENTITY( 1809216056, "PASSOS", l_U290[0], 0 );
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( l_U290[0], 0, 0 ) ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U290[0], 0, 0 ), "W_PI_PT92_Aa_H^1", 0 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U290[1] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U290[1], "Armo_Suit", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U290[1], l_U237[1]._fU0, l_U237[1]._fU12 );
        ISEQ_REGISTER_ENTITY( 1809216056, "BECKER", l_U290[1], 0 );
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( l_U290[1], 0, 0 ) ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U290[1], 0, 0 ), "W_PI_PT92_Aa_H^2", 0 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U290[2] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U290[2], "P_RT_SecG_M", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U290[2], l_U237[2]._fU0, l_U237[2]._fU12 );
        ISEQ_REGISTER_ENTITY( 1809216056, "security_a", l_U290[2], 0 );
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( l_U290[2], 0, 0 ) ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U290[2], 0, 0 ), "W_PI_PT92_Aa_H^3", 0 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U290[3] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U290[3], "P_RT_SecG_M^1", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U290[3], l_U237[3]._fU0, l_U237[3]._fU12 );
        ISEQ_REGISTER_ENTITY( 1809216056, "security_b", l_U290[3], 0 );
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( l_U290[3], 0, 0 ) ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U290[3], 0, 0 ), "W_PI_PT92_Aa_H^4", 0 );
        }
    }
    CUTSCENE_REGISTER_ISEQ( 1809216056 );
    REGISTER_HIDE_ENTITY_AT_POSITION( l_U188[0]._fU0, l_U188[0]._fU4 );
    REGISTER_HIDE_ENTITY_AT_POSITION( l_U188[1]._fU0, l_U188[1]._fU4 );
    sub_395( "GA", "P_MPM_MID04_CutsceneRegistration end", 0 );
    return;
}

void sub_23951()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    if (l_U358._fU52)
    {
        sub_23979( ref l_U232 );
        sub_23979( ref l_U290 );
        sub_24010( l_U338 );
        sub_24148( ref uVar2, 1, 1 );
        sub_25408( 0 );
        sub_395( "CCB", "Starting ROOFTOP_SONG_03 music track with ROOFTOP_SONG_03_4_5 mood. Fade out 5 seconds", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "ROOFTOP_SONG_03", "ROOFTOP_SONG_03_4_5", "", 0.00000000, 5000, -1, -1082130432, 0 );
        AUDIO_MUSIC_REQUEST_ONESHOT( "BRAZIL_ONESHOT_15", 0 );
    }
    return;
}

void sub_23979(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_24010( (uParam0^)[I] );
    }
    return;
}

void sub_24010(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_24148(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

    sub_24160( iParam0 );
    if ((IS_PED_DEAD( sub_745() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND( sub_745(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if ((sub_24339( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if ((sub_24567( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND( sub_745(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER( sub_745(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER( sub_745(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER( sub_745(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD( sub_745() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND( sub_745(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_745(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND( sub_745(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_745(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD( sub_745() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND( sub_745(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if ((sub_24567( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND( sub_745(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND( sub_745(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_745(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

void sub_24160(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

int sub_24339(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_24567(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_25408(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_745() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_745(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_745(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_745(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_745(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_745(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

int sub_25847()
{
    return 1;
}

void sub_25864()
{
    sub_395( "GA", "P_MPM_MID04_PrepareBlendout start", 0 );
    if (NOT (ISEQ_QUERY_STATE( 1284439964, 3 )))
    {
        sub_23979( ref l_U232 );
        if (NOT (IS_PED_DEAD( l_U232[1] )))
        {
            sub_25999( l_U232[1], l_U205[1]._fU0, l_U205[1]._fU12 );
            ISEQ_REGISTER_ENTITY( 1284439964, "fabiana", l_U232[1], 0 );
        }
        if (NOT (IS_PED_DEAD( l_U232[0] )))
        {
            sub_25999( l_U232[0], l_U205[0]._fU0, l_U205[0]._fU12 );
            ISEQ_REGISTER_ENTITY( 1284439964, "cs_enemy", l_U232[0], 0 );
        }
        ISEQ_START( 1284439964 );
    }
    if ((NOT (IS_PED_DEAD( sub_745() ))) AND (NOT (ISEQ_QUERY_STATE( -699657448, 3 ))))
    {
        sub_25999( sub_745(), g_U1333[2], g_U1450[2] );
        ISEQ_REGISTER_ENTITY( -699657448, "player", sub_745(), 0 );
        ISEQ_START( -699657448 );
    }
    if (NOT (ISEQ_QUERY_STATE( 1809216056, 3 )))
    {
        sub_23979( ref l_U290 );
        sub_26324( ref l_U290, ref l_U237 );
        if (NOT (IS_PED_DEAD( l_U290[0] )))
        {
            ISEQ_REGISTER_ENTITY( 1809216056, "passos", l_U290[0], 0 );
        }
        if (NOT (IS_PED_DEAD( l_U290[1] )))
        {
            ISEQ_REGISTER_ENTITY( 1809216056, "becker", l_U290[1], 0 );
        }
        if (NOT (IS_PED_DEAD( l_U290[2] )))
        {
            ISEQ_REGISTER_ENTITY( 1809216056, "security_a", l_U290[2], 0 );
        }
        if (NOT (IS_PED_DEAD( l_U290[3] )))
        {
            ISEQ_REGISTER_ENTITY( 1809216056, "security_b", l_U290[3], 0 );
        }
        ISEQ_START( 1809216056 );
    }
    sub_24010( l_U338 );
    sub_26696( l_U338, 4 );
    if (NOT (IS_PED_DEAD( l_U232[1] )))
    {
        SET_PED_USES_ANIMATED_DEATH( l_U232[1], 1 );
    }
    if ((NOT (IS_PED_DEAD( l_U232[0] ))) AND (NOT (IS_PED_DEAD( l_U232[1] ))))
    {
        SET_NO_COLLISION_TO_PED( l_U232[1], l_U232[0], 0, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U232[0] )))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U232[0], 1 );
        SET_BULLET_CAM_PREF( l_U232[0], "PIST_CUSTOM_ROOF_SLIDE_01C", "PIST_CUSTOM_ROOF_SLIDE_01C", "PIST_CUSTOM_ROOF_SLIDE_01C", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        ALLOW_BULLET_CAMERA_SLOWDOWN( 0 );
    }
    CAMERA_PLAY_ANIMATED( "LEVEL_S_ROOFTOP_CP_03", "VIG_02_RP_MPM_FWD_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
    sub_27972( "S_FASHION_MPM", ref g_U1168 );
    if (NOT AUDIO_IS_MUSIC_PLAYING())
    {
        sub_395( "CCB", "Starting ROOFTOP_SONG_03 music track with ROOFTOP_SONG_03_4_5 mood. Fade out 5 seconds", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "ROOFTOP_SONG_03", "ROOFTOP_SONG_03_4_5", 0, 0, -1, -1, -1082130432, 0 );
    }
    sub_1812( ref l_U386 );
    sub_1812( ref l_U406 );
    sub_1812( ref l_U396 );
    sub_395( "GA", "P_MPM_MID04_PrepareBlendout end", 0 );
    return;
}

void sub_25999(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_26324(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_26376( (uParam0^)[I], (uParam1^)[I]._fU0, (uParam1^)[I]._fU12 );
    }
    return;
}

void sub_26376(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_26696(unknown uParam0, unknown uParam1)
{
    char[32] cVar4;
    char[32] cVar12;

    StrCopy( ref cVar4, "DAM_DEAD", 32 );
    switch (uParam1)
    {
        case 0:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
        case 1:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_02", 32 );
        break;
        case 2:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_03", 32 );
        break;
        case 3:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_01", 32 );
        break;
        case 4:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_02", 32 );
        break;
        case 5:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_03", 32 );
        break;
        case 6:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_04", 32 );
        break;
        case 7:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_01", 32 );
        break;
        case 8:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_02", 32 );
        break;
        case 9:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_03", 32 );
        break;
        case 10:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_04", 32 );
        break;
        case 11:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_01", 32 );
        break;
        case 12:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_02", 32 );
        break;
        case 13:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_03", 32 );
        break;
        case 14:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_04", 32 );
        break;
        case 15:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_01", 32 );
        break;
        case 16:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_02", 32 );
        break;
        default:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
    }
    REQUEST_ANIM_DICT( ref cVar4, 0 );
    "[doubled result, dropped if not asigned]";
    while (NOT (HAS_ANIM_DICT_LOADED( ref cVar4, 0 )))
    {
        WAIT( 0 );
        sub_7092( "Waiting for anim dict to load..." );
    }
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        ENABLE_PED_PAIN( uParam0, 0 );
        OVERRIDE_MOVER_PHYSICS_ON_RAGDOLL_SLEEP( uParam0, 1 );
        SET_PED_CORPSE_FROM_ANIM( uParam0, ref cVar4, ref cVar12, 1.00000000, 1 );
    }
    return;
}

void sub_27972(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if (sub_4087( uParam0, uParam1 ))
    {
        iVar4 = sub_4186( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            PLAY_SCRIPT_STREAM_FRONTEND( iVar4 );
        }
        else
        {
            SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

int sub_28446()
{
    if (l_U358._fU52)
    {
        if (NOT sub_28470())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
    }
    if (sub_1932( ref l_U386 ))
    {
        sub_395( "GA", "Playing oneshot BRAZIL_ONESHOT_15", 0 );
        AUDIO_MUSIC_PLAY_ONESHOT();
    }
    if (sub_1932( ref l_U396 ))
    {
        if (NOT (IS_PED_DEAD( sub_745() )))
        {
            SET_PLAYER_FORCED_AIM( sub_767(), 1, 0 );
        }
        SET_CAMERA_OVERRIDE( "ROOFTOP_MPM_CAMERA", "ROOFTOP_MPM_AIM_CAMERA", 0, 0, 0 );
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 250, 1 );
        }
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( -4.50000000, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( -31.50000000, 1065353216, 0 );
    }
    if (sub_1932( ref l_U406 ))
    {
        return 1;
    }
    return 0;
}

int sub_28470()
{
    if (l_U137)
    {
        sub_395( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U137 = 0;
        return 1;
        break;
    }
    sub_395( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

void sub_28959(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_395( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return sub_29080( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 29044, 29060, uParam8 );
}

void sub_29044()
{
    return;
}

int sub_29060()
{
    return 1;
}

void sub_29080(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_29428(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_395( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_395( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_395( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_395( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_395( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_395( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_17748( iParam0->_fU0, 0 );
            sub_395( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_30295( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_30295( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_395( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_25408( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_30295( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_30939( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_30939( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_30295(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_745() )))
        {
            SET_PLAYER_CONTROL( sub_767(), 0, uParam2 );
            SET_PED_DUCKING( sub_745(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_745() );
            }
            SET_PED_INVINCIBLE( sub_745(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_30939(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_745() )))
    {
        SET_PLAYER_CONTROL( sub_767(), 1, 0 );
        SET_PED_INVINCIBLE( sub_745(), 0 );
        if (bParam0)
        {
            sub_31020();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_31020()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_745() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_745(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_745(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_745(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_745(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_31354(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_395( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_395( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_8075( iParam1 );
        sub_31613( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_32064( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_32064( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_32296( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_32064( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_32296( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_32296( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_32064( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_32296( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_32296( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_32296( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_32064( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_32296( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_32296( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_32296( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_32296( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_33854( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_395( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_31613(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_5439( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_395( "TEH", "Ending context", 0 );
        sub_395( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_32064(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_32296(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_33854(int iParam0)
{
    sub_7092( "CHECKPOINT DATA" );
    sub_33893( iParam0->_fU4 );
    sub_33916( iParam0->_fU16 );
    sub_33916( iParam0->_fU20 );
    sub_33916( iParam0->_fU24 );
    sub_33959( iParam0->_fU28 );
    sub_33959( iParam0->_fU56 );
    sub_33959( iParam0->_fU60 );
    sub_33959( iParam0->_fU64 );
    sub_33959( iParam0->_fU68 );
    sub_33959( iParam0->_fU72 );
    sub_33959( iParam0->_fU76 );
    sub_33959( iParam0->_fU80 );
    sub_33959( iParam0->_fU84 );
    sub_33959( iParam0->_fU88 );
    sub_33959( iParam0->_fU92 );
    sub_33916( iParam0->_fU32 );
    sub_33959( iParam0->_fU36 );
    sub_33959( iParam0->_fU40 );
    sub_33959( iParam0->_fU44 );
    sub_33916( iParam0->_fU136 );
    sub_34164( iParam0->_fU140 );
    sub_33959( iParam0->_fU52 );
    sub_7092( "---nRightHolsterAttachmentEnabled: " );
    sub_33959( iParam0->_fU96 );
    sub_7092( "---nRightHolsterAttachmentToggled: " );
    sub_33959( iParam0->_fU100 );
    sub_7092( "---nLeftHolsterAttachmentEnabled: " );
    sub_33959( iParam0->_fU104 );
    sub_7092( "---nLeftHolsterAttachmentToggled: " );
    sub_33959( iParam0->_fU108 );
    sub_7092( "---nRifleHolsterAttachmentEnabled: " );
    sub_33959( iParam0->_fU112 );
    sub_7092( "---nRifleHolsterAttachmentToggled: " );
    sub_33959( iParam0->_fU116 );
    sub_7092( "---nRightHandAttachmentEnabled: " );
    sub_33959( iParam0->_fU120 );
    sub_7092( "---nRightHandAttachmentToggled: " );
    sub_33959( iParam0->_fU124 );
    sub_7092( "---nLeftHandAttachmentEnabled: " );
    sub_33959( iParam0->_fU128 );
    sub_7092( "---nLeftHandAttachmentToggled: " );
    sub_33959( iParam0->_fU132 );
    sub_33959( l_U1 );
    sub_33959( 144 );
    return;
}

void sub_33893(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_33916(unknown uParam0)
{
    return;
}

void sub_33959(unknown uParam0)
{
    return;
}

void sub_34164(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_34968()
{
    sub_395( "CCB", "P_START_SP_CHALLENGES", 0 );
    return;
}

void sub_35029(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

void sub_35055()
{
    sub_395( "CCB", "P_START_ROOFTOP_MPM", 0 );
    if (GET_ADRENALINE_AMT() < 0.10000000)
    {
        SET_ADRENALINE_AMT( 0.10000000 );
    }
    ACTIVATE_BULLET_TIME( 0, 0.40000000, 1 );
    DISPLAY_HUD( 0 );
    ENABLE_CROSSHAIR( 1 );
    SET_CROSSHAIR_PULSE();
    ENABLE_MPM( 1 );
    ENABLE_ALL_ADRENALINE( 0 );
    if (NOT (IS_PED_DEAD( sub_745() )))
    {
        SET_PED_CONSUMING_AMMO( sub_745(), 0 );
        SET_PLAYER_FORCED_AIM( sub_767(), 1, 1 );
    }
    return;
}

void sub_35235()
{
    sub_395( "CCB", "P_START_SP_CHALLENGES_MPM", 0 );
    sub_395( "CCB", "Starting the Rooftop_Party_Rooftop_MPM context...", 0 );
    START_CONTEXT( "Rooftop_Party_Rooftop_MPM" );
    return;
}

void sub_35492()
{
    sub_395( "CCB", "P_STOP_ROOFTOP_MPM", 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    SET_CAMERA_OVERRIDE( "", "", 0, 1, 1 );
    DISPLAY_HUD( 0 );
    ENABLE_CROSSHAIR( 0 );
    ENABLE_MPM( 0 );
    ENABLE_ALL_ADRENALINE( 1 );
    if (NOT (IS_PED_DEAD( sub_745() )))
    {
        SET_PED_CONSUMING_AMMO( sub_745(), 1 );
        SET_PLAYER_FORCED_AIM( sub_767(), 0, 0 );
    }
    return;
}

void sub_35645()
{
    sub_395( "GA", "P_MPM_START_FAIL_FROM_TIMEOUT start", 0 );
    AUDIO_MUSIC_SUSPEND( 5000 );
    sub_4569( ref l_U295, 1 );
    if (NOT (IS_PED_DEAD( l_U232[1] )))
    {
        PED_SET_ACTION_INTENTION( l_U232[1], 48, 1000, 0.00000000, 0.00000000, 0.00000000 );
    }
    if (NOT (IS_PED_DEAD( l_U232[0] )))
    {
        PED_SET_ACTION_INTENTION( l_U232[0], 48, 1000, 0.00000000, 0.00000000, 0.00000000 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U232[0], 0 );
    }
    sub_30295( 1, 0, 0, 0 );
    CAMERA_PLAY_ANIMATED( "LEVEL_S_ROOFTOP_CP_03", "MID_05_RP_CAM", 0, 0, 0, 0, 0, 0, 0 );
    sub_35960( "ROOF_MPM_SHOOT_FAB_SCRIPTED_FAIL_FX", 0 );
    sub_395( "GA", "P_MPM_START_FAIL_FROM_TIMEOUT end", 0 );
    return;
}

void sub_35960(unknown uParam0, boolean bParam1)
{
    sub_3308( ref l_U138 );
    l_U138 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
    SETUP_BULLET_CAMERA_SCENE( l_U138, uParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
    if (bParam1)
    {
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    }
    return;
}

void sub_36296()
{
    sub_395( "GA", "P_MPM_START_FAIL_SHOT_FABIANA start", 0 );
    AUDIO_MUSIC_SUSPEND( 5000 );
    sub_4569( ref l_U295, 1 );
    if (NOT (IS_PED_DEAD( l_U232[1] )))
    {
        PED_SET_ACTION_INTENTION( l_U232[1], 49, 1000, 0.00000000, 0.00000000, 0.00000000 );
    }
    if (NOT (IS_PED_DEAD( l_U232[0] )))
    {
        PED_SET_ACTION_INTENTION( l_U232[0], 49, 1000, 0.00000000, 0.00000000, 0.00000000 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U232[0], 0 );
    }
    sub_30295( 1, 0, 0, 0 );
    CAMERA_PLAY_ANIMATED( "LEVEL_S_ROOFTOP_CP_03", "MID_05_RP_ALT1_cam", 0, 0, 0, 0, 0, 0, 0 );
    sub_35960( "ROOF_MPM_SHOOT_FAB_SCRIPTED_FAIL_FX", 0 );
    sub_395( "GA", "P_MPM_START_FAIL_SHOT_FABIANA end", 0 );
    return;
}

void sub_36887()
{
    int I;

    sub_395( "GA", "P_MPM_SUCCESS_SHOT_CS start", 0 );
    sub_4569( ref l_U295, 1 );
    if (NOT (IS_PED_DEAD( sub_745() )))
    {
        sub_25999( sub_745(), -1.25400000, -32.87500000, -11.53400000, -180.00000000 );
        PED_SET_ACTION_INTENTION( sub_745(), 47, 1000, 0, 0, 0 );
    }
    sub_37043( "SRTP_MD04RPA", ref l_U315 );
    if (NOT (IS_PED_DEAD( l_U232[1] )))
    {
        PED_SET_ACTION_INTENTION( l_U232[1], 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    }
    for ( I = 0; I <= 3; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U290[I] )))
        {
            PED_SET_ACTION_INTENTION( l_U290[I], 47, 1000, 0, 0, 0 );
        }
    }
    SET_PED_HEADING( l_U290[0], 180.00000000 );
    SET_PED_HEADING( l_U290[1], -135.00000000 );
    SET_PED_HEADING( l_U290[2], -135.00000000 );
    SET_PED_HEADING( l_U290[3], 180.00000000 );
    sub_395( "GA", "Starting ROOFTOP_SONG_03 music track with ROOFTOP_SONG_03_1 mood. Fade in 7 seconds", 0 );
    AUDIO_MUSIC_FORCE_TRACK( "ROOFTOP_SONG_03", "ROOFTOP_SONG_03_1", "ROOFTOP_SONG_03_1", 0, 7000, -1, -1082130432, 0 );
    sub_1812( ref l_U339 );
    sub_395( "GA", "P_MPM_SUCCESS_SHOT_CS end", 0 );
    return;
}

void sub_37043(unknown uParam0, unknown uParam1)
{
    sub_37055( uParam1 );
    sub_37135( 0, sub_745(), "MAX", uParam1, 2, 0 );
    sub_37135( 1, sub_745(), "MAX", uParam1, 2, 0 );
    sub_37360( uParam0, uParam1, 8, 1 );
    return;
}

void sub_37055(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_37135(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_37360(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_37384( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_37384(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_37439( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_37439(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_37474( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_37968( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_37474(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_37968(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_39415()
{
    sub_395( "GA", "P_RELEASE_MPM_ASSETS start", 0 );
    sub_39473( ref l_U175, ref g_U821 );
    sub_39751( ref l_U181, ref g_U918 );
    sub_39987( "LEVEL_S_ROOFTOP_CP_03", ref g_U1028 );
    sub_39987( "DAM_DEAD", ref g_U1028 );
    sub_395( "GA", "P_RELEASE_MPM_ASSETS end", 0 );
    return;
}

void sub_39473(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_39508( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_39508(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_3658( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

void sub_39751(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_39786( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_39786(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_3658( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_39987(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_3658( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


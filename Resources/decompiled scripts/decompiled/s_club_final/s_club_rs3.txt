void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = -1;
    l_U3 = {64536, 64536, 64536};
    l_U15 = 150;
    l_U16 = 0.02000000;
    l_U24 = 0;
    l_U54 = 0;
    l_U236 = {0, 2, -0.50000000};
    l_U239 = 45;
    l_U259 = 0;
    l_U260 = 0;
    l_U261 = 1500;
    l_U272 = 0;
    l_U310 = 0;
    l_U312 = 1;
    l_U313 = 0;
    l_U497 = 0;
    l_U498 = 0;
    l_U499 = 0;
    l_U626 = {-26.12000000, -1.50000000, 86.94000000};
    sub_215( "Script s_club_RS3.sc is starting up..." );
    l_U310 = 1;
    l_U272 = 0;
    while (NOT IS_EXITFLAG_SET())
    {
        sub_267();
        if (l_U313 == 0)
        {
            sub_8496();
        }
        WAIT( 0 );
    }
    sub_2882( 0 );
    sub_46989();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_club_RS3" );
    g_U1098 = 1;
    sub_215( "Script s_club_RS3.sc is terminating..." );
    return;
}

void sub_215(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    return;
}

void sub_267()
{
    if (g_U892 == 10)
    {
        switch (l_U313)
        {
            case 0:
            if (IS_PED_DEAD( sub_349() ))
            {
                AUDIO_MUSIC_SUSPEND( 5000 );
                l_U313 = 1;
                sub_215( "eFailState = FAIL_WAITING_FOR_PLAYER" );
            }
            else if (sub_492())
            {
                AUDIO_MUSIC_SUSPEND( 5000 );
                l_U313 = 3;
                sub_215( "eFailState = FAIL_CLEANUP_ALL" );
            }
            break;
            case 1:
            STOP_SCRIPT_STREAM( g_U2867 );
            if (sub_994())
            {
                l_U313 = 3;
            }
            else if ((sub_1034( 0 )) == 1)
            {
                l_U313 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_349() )))
            {
                l_U313 = 3;
                sub_215( "eFailState = FAIL_CLEANUP_ALL" );
            }
            break;
            case 3:
            sub_215( "eFailState = FAIL_CLEANUP_ALL" );
            if ((NOT (IS_PED_DEAD( sub_349() ))) AND (NOT (IS_PLAYER_DEAD( sub_371() ))))
            {
                SET_PLAYER_CONTROL( sub_371(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_349() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_349(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            sub_2632( "CLUB_RS_GIOV3_SCRIPTED_FAIL_FX" );
            sub_2632( "CLUB_RS_GIOV4_SCRIPTED_FAIL_FX" );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            l_U312 = 0;
            sub_2882( 1 );
            if (g_U893[11]._fU36 == 1)
            {
                g_U1103 = 1;
                SET_EXITFLAG_FOR_SCRIPT( g_U893[11]._fU32 );
                sub_4118( ref g_U893[11] );
                g_U1074[11] = 0;
            }
            REQUEST_SCRIPT_STREAM( "S_CLUB_HELI_RS_STREAM", g_U2867 );
            l_U313 = 4;
            sub_215( "eFailState = FAIL_RESTORE_PLAYER" );
            break;
            case 4:
            sub_215( "eFailState = FAIL_RESTORE_PLAYER" );
            sub_4298( ref l_U274, sub_349() );
            l_U313 = 5;
            sub_215( "eFailState = FAIL_RESTART_CHECKPOINT" );
            break;
            case 5:
            sub_215( "eFailState = FAIL_RESTART_CHECKPOINT" );
            l_U310 = 1;
            l_U313 = 0;
            sub_215( "eFailState = FAIL_IDLE" );
            break;
        }
    }
    return;
}

int sub_349()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_371() );
    }
    return 0;
}

void sub_371()
{
    return GET_PLAYER_ID();
}

int sub_492()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_349() )))
        {
            SET_PED_FORCED_TO_WALK( sub_349(), 0 );
            SET_PLAYER_FORCED_AIM( sub_371(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_371(), 1 );
            if ((IS_PED_VISIBLE( sub_349() )) == 0)
            {
                SET_PED_VISIBLE( sub_349(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_994()
{
    return g_U648;
}

int sub_1034(int iParam0)
{
    iParam0 = 1;
    switch (l_U260)
    {
        case 0:
        if (NOT (sub_1095( ref l_U262 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_349() )))
            {
                l_U261 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_1205( ref l_U262, l_U261, 1, 1 );
            sub_1341( ref l_U262 );
        }
        if (sub_1461( ref l_U262 ))
        {
            sub_1657( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_349() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_371() )))
            {
                SET_PLAYER_CONTROL( sub_371(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U260 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U260 = 2;
            }
            else
            {
                l_U260 = 3;
            }
        }
        break;
        case 2:
        sub_1657( "NS", "Player will QUIT", 0 );
        sub_1992();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_1657( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_1992();
        return 1;
        break;
    }
    return 0;
}

int sub_1095(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_1205(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_1341(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_1461(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_1657(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_1992()
{
    sub_1657( "NS", "P_PostFailRetryCleanup", 0 );
    sub_2042( ref l_U262 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_371() )))
    {
        SET_PLAYER_CONTROL( sub_371(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U259 = 0;
    l_U259 = l_U259;
    l_U260 = 0;
    return;
}

void sub_2042(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_2632(unknown uParam0)
{
    sub_1657( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    sub_2715( ref l_U273 );
    l_U272 = 1;
    return;
}

void sub_2715(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

void sub_2882(int iParam0)
{
    sub_215( "P_CLEANUP_RS3" );
    sub_2933( "S_CLUB_VIG_16_NC", 1 );
    sub_3018( ref l_U314 );
    if (iParam0 == 1)
    {
        sub_3183();
        STOP_SCRIPT_STREAM( g_U2867 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    }
    SET_INSTANT_FIRE_FORCED( 1 );
    sub_3931();
    return;
}

void sub_2933(unknown uParam0, int iParam1)
{
    if ((I_SEQUENCE_IS_LOADED( uParam0 )) == 1)
    {
        I_SEQUENCE_TERMINATE( uParam0 );
    }
    if (iParam1 == 1)
    {
        while ((I_SEQUENCE_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_3018(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_3050( ref (uParam0^)[I] );
    }
    return;
}

void sub_3050(int iParam0)
{
    sub_3065( iParam0->_fU0 );
    iParam0->_fU172 = 0;
    return;
}

void sub_3065(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_3183()
{
    sub_215( "P_RS_GlobalCleanup" );
    DETACH_PED( g_U2763, 1 );
    DETACH_PED( g_U2749, 1 );
    DETACH_PED( sub_349(), 1 );
    sub_3065( g_U2763 );
    sub_3065( g_U2749 );
    sub_3065( g_U2777 );
    sub_3293( g_U2866 );
    sub_3353( -1313172978, 1 );
    sub_3353( -931023773, 1 );
    sub_3353( 1476011597, 1 );
    sub_3630( sub_349(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
    ENABLE_HIT_DETECTION( 1 );
    ENABLE_LAST_MAN_STANDING( 1 );
    SET_SILHOUETTE_ACTIVE( 1 );
    SET_PLAYER_COMBAT_TIMER_MODE( 0 );
    PLAYER_SET_AIM_MODE( 0 );
    ENABLE_CROSSHAIR( 1 );
    SET_PED_INVINCIBLE( sub_349(), 0 );
    SET_PED_PROOFS( sub_349(), 0, 0, 0, 0, 0 );
    SET_PLAYER_FORCED_AIM( sub_371(), 0, 0 );
    SET_PED_CONSUMING_AMMO( sub_349(), 1 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    SET_PED_CAN_RAGDOLL( sub_349(), 1 );
    AUDIO_SET_PED_FOOTSTEPS_ON( 1 );
    SET_INSTANT_FIRE_FORCED( 0 );
    RELEASE_PED_ENTITY_SYNC_POINT( sub_349() );
    SET_PED_USES_ANIMATED_DEATH( sub_349(), 0 );
    ALLOW_BULLET_CAMERA_CHEAT( 1 );
    sub_3854( l_U23 );
    return;
}

void sub_3293(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

void sub_3353(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_3630(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_ACTION_TREE_PLAY_NODE( uParam0, uParam1 );
    }
    return;
}

void sub_3854(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_3931()
{
    sub_1657( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    sub_1657( "CCB", "Stopping the Nightclub_RS3 context...", 0 );
    END_CONTEXT( "Nightclub_RS3" );
    return;
}

void sub_4118(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_4298(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_1657( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_4482( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_5559( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_5851( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_6211( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_5851( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_6211( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_5851( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_6211( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_6496( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_6211( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_6496( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_6211( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_6989( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_7150( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_349(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_1657( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_4482(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_4514( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_4514(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_5559(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_5851(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_6167( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_6167(unknown uParam0)
{
    return;
}

void sub_6211(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_6496(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_6167( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_6989(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_7150(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_4514( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_7222( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_7222(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_8496()
{
    int iVar2;
    int I;

    iVar2 = l_U310;
    sub_8513();
    switch (l_U310)
    {
        case 0: break;
        case 1:
        sub_215( "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA" );
        sub_13514();
        sub_13766();
        sub_13809();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U310 = 2;
        sub_215( "eCheckpointState = CP_INITIAL_REQUEST_ASSETS" );
        break;
        case 2:
        sub_215( "eCheckpointState = CP_INITIAL_REQUEST_ASSETS" );
        sub_14395();
        sub_18254();
        l_U310 = 3;
        sub_215( "eCheckpointState = CP_INITIAL_LOADING_ASSETS" );
        break;
        case 3:
        if ((sub_21944( ref g_U1350 )) AND ((sub_21817( ref g_U1447 )) AND ((sub_21696( ref g_U1301 )) AND (sub_21576( ref g_U1108 )))))
        {
            if ((NOT l_U274._fU0) AND (g_U891 == 10))
            {
                sub_22157();
                l_U312 = 0;
                g_U1074[10] = 1;
                l_U310 = 4;
                sub_215( "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP" );
            }
            else
            {
                l_U310 = 6;
                sub_215( "eCheckpointState = CP_WAITING_TO_ACTIVATE" );
            }
        }
        break;
        case 4:
        sub_215( "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP" );
        REQUEST_SCRIPT_STREAM( "S_CLUB_HELI_RS_STREAM", g_U2867 );
        if (NOT (sub_22478( ref l_U274 )))
        {
            sub_6496( sub_349(), 354276007, 25000, 0, 0 );
            l_U310 = 5;
            sub_215( "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS" );
        }
        else
        {
            l_U310 = 6;
            sub_215( "eCheckpointState = CP_WAITING_TO_ACTIVATE" );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD( sub_349() )))
        {
            if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_349(), 0, 0 ) ))
            {
                g_U892 = 10;
                if (NOT l_U274._fU0)
                {
                    sub_22926( ref l_U274, g_U892, sub_349(), g_U2216[10], g_U2331[10], g_U2370[10], g_U2409[10], 0 );
                }
                l_U310 = 6;
                sub_215( "eCheckpointState = CP_WAITING_TO_ACTIVATE" );
            }
        }
        break;
        case 6:
        if (g_U1074[10] == 1)
        {
            sub_26615();
            l_U310 = 7;
            sub_215( "eCheckpointState = CP_INTRO" );
        }
        break;
        case 7:
        if (l_U311)
        {
            if (l_U312 == 1)
            {
                sub_35205( ref l_U599, "mid_10_nc_concat", 33422, 33441, 34770, 35136, 250, 0 );
                l_U599._fU64 = 0;
                l_U599._fU4 = 2;
            }
            else
            {
                l_U599._fU4 = 10;
                CAMERA_SNAP_POINT_AT_COORD( l_U626 );
            }
        }
        if (sub_35673( ref l_U599 ))
        {
            l_U310 = 8;
        }
        break;
        case 8:
        if (l_U311)
        {
            sub_37786();
            if (NOT sub_38617())
            {
                DO_SCREEN_FADE_IN( 0 );
            }
            if (g_U892 != 10)
            {
                g_U892 = 10;
                if (NOT l_U274._fU0)
                {
                    sub_22926( ref l_U274, g_U892, sub_349(), g_U2216[10], g_U2331[10], g_U2370[10], g_U2409[10], 1 );
                }
            }
            if ((PED_GET_ACTION_INTENTION_STATUS( g_U2777, 47 )) == 3)
            {
                PED_FINISH_ACTION_INTENTION( g_U2777, 47 );
            }
            if (NOT g_U893[11]._fU36)
            {
                sub_38992( ref g_U893[11] );
            }
            CAMERA_CLEAR_POINT_AT_TARGET();
            sub_1341( ref l_U638 );
        }
        sub_34922();
        sub_39039();
        if (sub_1461( ref l_U638 ))
        {
            if (NOT (IS_BULLET_TIME_ACTIVE( 1 )))
            {
                sub_39271();
            }
        }
        if (sub_42644( ref l_U314[3], 37, 1 ))
        {
            sub_42793();
            l_U74 = 1;
            sub_39162( ref l_U500, 1000 );
        }
        if (sub_1461( ref l_U500 ))
        {
            if (NOT (IS_PED_DEAD( l_U314[3]._fU0 )))
            {
                if (NOT (IS_BULLET_TIME_ACTIVE( 1 )))
                {
                    sub_43046();
                }
            }
        }
        if (NOT sub_43168())
        {
            sub_43234();
            sub_43559();
        }
        sub_43800();
        if ((GET_SCRIPT_STREAM_STATE( "S_CLUB_HELI_RS_STREAM", g_U2867 )) == 2)
        {
            sub_1657( "MF", "STARTING HELICOPTER AUDIO", 0 );
            PLAY_SCRIPT_STREAM_FROM_VEHICLE( g_U2866, g_U2867 );
        }
        if (NOT l_U497)
        {
            if (IS_PED_DEAD( l_U314[3]._fU0 ))
            {
                l_U497 = 1;
                sub_44057( ref l_U314, 47, 1000 );
            }
        }
        if (NOT l_U498)
        {
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                if ((GET_TIME_POSITION_IN_RECORDING( g_U2866 )) >= 8734.00000000)
                {
                    l_U498 = 1;
                    PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
                }
            }
        }
        if (IS_PED_DEAD( g_U2777 ))
        {
            l_U310 = 12;
            sub_215( "eCheckpointState = CP_SHOT_GIOVANNA" );
            break;
        }
        if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
        {
            if ((sub_42661( g_U2777, 47 )) == 3)
            {
                sub_36540( 1, 0, 0, 1 );
                sub_42729( ref g_U2777, 47 );
                sub_44370( ref l_U314, 1, 0, -1 );
                if (NOT (IS_PED_DEAD( l_U314[3]._fU0 )))
                {
                    l_U310 = 9;
                    sub_215( "eCheckpointState = CP_FAIL1" );
                }
                else
                {
                    l_U310 = 10;
                    sub_215( "eCheckpointState = CP_FAIL2" );
                }
                break;
            }
        }
        if ((sub_44610( ref l_U314 )) < 1)
        {
            l_U310 = 11;
            sub_215( "eCheckpointState = CP_OUTRO" );
            break;
        }
        break;
        case 12:
        if (l_U311)
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
            }
        }
        if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
        {
            l_U310 = 0;
            l_U313 = 1;
        }
        break;
        case 9:
        if (l_U311)
        {
            sub_36540( 1, 0, 0, 1 );
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
            }
            sub_44920( ref l_U509, -26.34593000, 49.89520000, 86.85177000, -25.43642000, 0.00000000, -178.94890000, 1110704128, 1000 );
            sub_45131( ref l_U509 );
            sub_45308( "CLUB_RS_GIOV3_SCRIPTED_FAIL_FX", 0 );
            SET_PED_GORE( g_U2777, 1 );
            SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2777, 0 );
            SET_PED_AS_ONE_SHOT_KILL( g_U2777, 1 );
            SHAKE_CAM( l_U509._fU0, sub_45549(), 0.25000000 );
            TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND( sub_349(), 0, 0 ), 13, 0 );
        }
        if (sub_42644( ref l_U314[3], 47, 1 ))
        {
            SET_PED_SHOOTS_AT_COORD( l_U314[3]._fU0, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U2777, 65488, 0, 0, 0 ) );
            sub_39162( ref l_U540, 1000 );
            SHAKE_CAM( l_U509._fU0, "SMALL_EXPLOSION_SHAKE", 1 );
        }
        if (sub_1461( ref l_U540 ))
        {
            l_U310 = 0;
            l_U313 = 1;
            AUDIO_MUSIC_SUSPEND( 5000 );
        }
        break;
        case 10:
        if (l_U311)
        {
            sub_36540( 1, 0, 0, 1 );
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
            }
            l_U589 = sub_45828( ref l_U314 );
            sub_3630( g_U2777, "/Global/S_CLUB_VIG_16_NC/SEQ_START/MURDER/MURDER_GIO" );
            sub_3630( l_U589, "/Global/S_CLUB_VIG_16_NC/SEQ_START/MURDER/MURDER_GMED" );
            WAIT( 0 );
            sub_44920( ref l_U549, -28.77369000, 45.57099000, 87.31011000, -23.74745000, -0.00000500, -63.16171000, 1110704128, 1000 );
            sub_45131( ref l_U549 );
            sub_45308( "CLUB_RS_GIOV4_SCRIPTED_FAIL_FX", 0 );
            SHAKE_CAM( l_U549._fU0, sub_45549(), 0.25000000 );
            SET_PED_GORE( g_U2777, 1 );
            SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2777, 0 );
            SET_PED_AS_ONE_SHOT_KILL( g_U2777, 1 );
            for ( I = 0; I < l_U314; I++ )
            {
                if (l_U314[I]._fU0 != l_U589)
                {
                    sub_3050( ref l_U314[I] );
                }
            }
            sub_46307( l_U589, -26.49039000, 46.19036000, 85.03713000, 0 );
            TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND( sub_349(), 0, 0 ), 13, 0 );
            DO_SCREEN_FADE_IN( 100 );
        }
        if (sub_46405( ref l_U589, 47, 1 ))
        {
            SET_PED_SHOOTS_AT_COORD( l_U589, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U2777, 65488, 0, 0, 0 ) );
            sub_39162( ref l_U580, 3000 );
            SHAKE_CAM( l_U549._fU0, "SMALL_EXPLOSION_SHAKE", 1 );
            l_U313 = 1;
            AUDIO_MUSIC_SUSPEND( 5000 );
        }
        if (sub_1461( ref l_U580 ))
        {
            SHAKE_CAM( l_U549._fU0, sub_45549(), 0.03000000 );
            l_U310 = 0;
        }
        break;
        case 11:
        if (l_U311)
        {
            sub_36540( 1, 0, 0, 1 );
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
            }
            sub_39162( ref l_U590, 1000 );
        }
        if (sub_1461( ref l_U590 ))
        {
            g_U1074[11] = 1;
        }
        if (g_U1097)
        {
            l_U310 = 13;
        }
        break;
        case 13:
        sub_215( "eCheckpointState = CP_FINISHED" );
        sub_46765( ref l_U314 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U310 = 0;
        sub_215( "eCheckpointState = CP_IDLE" );
        break;
    }
    if (l_U310 != iVar2)
    {
        l_U311 = 1;
    }
    else
    {
        l_U311 = 0;
    }
    return;
}

void sub_8513()
{
    switch (l_U647)
    {
        case 0:
        sub_1657( "CCB", "eNoLogo - STATE_CHALLENGE_IDLE", 0 );
        l_U647 = 1;
        break;
        case 1:
        sub_8615();
        if (l_U310 >= 8)
        {
            if ((l_U654 >= 4) AND ((l_U653 >= 4) AND ((l_U652 >= 4) AND ((l_U651 >= 4) AND ((l_U650 >= 4) AND ((l_U649 >= 4) AND (l_U648 >= 4)))))))
            {
                if ((sub_12991( ref l_U682, sub_349() )) AND ((sub_12991( ref l_U679, sub_349() )) AND ((sub_12991( ref l_U674, sub_349() )) AND ((sub_12991( ref l_U671, sub_349() )) AND ((sub_12991( ref l_U669, sub_349() )) AND ((sub_12991( ref l_U664, sub_349() )) AND (sub_12991( ref l_U655, sub_349() ))))))))
                {
                    sub_1657( "CCB", "All the objects have been damaged...", 0 );
                    SCRIPT_VAR_HASH_SET_INT( -1589865431, 1 );
                    sub_1657( "CCB", "eNoLogo - STATE_CHALLENGE_COMPLETE", 0 );
                    l_U647 = 2;
                }
            }
        }
        break;
        case 2: break;
    }
    return;
}

void sub_8615()
{
    switch (l_U648)
    {
        case 1:
        sub_1657( "CCB", "eBillboardLetterB - ENTITY_STATE_CREATING", 0 );
        l_U648 = 2;
        break;
        case 2:
        if (l_U310 >= 7)
        {
            if (l_U687 < l_U655)
            {
                if (NOT (DOES_OBJECT_EXIST( l_U655[l_U687] )))
                {
                    if (l_U687 == 0)
                    {
                        l_U655[l_U687] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsA", -25.19800000, 51.71200000, 94.15900000, 1.00000000 );
                    }
                    else if (l_U687 == 1)
                    {
                        l_U655[l_U687] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsB", -25.19800000, 51.71200000, 91.59100000, 1.00000000 );
                    }
                    else if (l_U687 == 2)
                    {
                        l_U655[l_U687] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsC", -25.19800000, 51.71200000, 89.79100000, 1.00000000 );
                    }
                    else if (l_U687 == 3)
                    {
                        l_U655[l_U687] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsD", -25.19800000, 51.72000000, 87.22300000, 1.00000000 );
                    }
                    else if (l_U687 == 4)
                    {
                        l_U655[l_U687] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsE", -25.18600000, 51.72000000, 85.43600000, 1.00000000 );
                    }
                    else if (l_U687 == 5)
                    {
                        l_U655[l_U687] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsF", -25.18600000, 48.06800000, 87.22300000, 1.00000000 );
                    }
                    else if (l_U687 == 6)
                    {
                        l_U655[l_U687] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsG", -25.18600000, 48.06000000, 91.59100000, 1.00000000 );
                    }
                    else if (l_U687 == 7)
                    {
                        l_U655[l_U687] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsBrk", -25.18700000, 46.17600000, 90.69100000, 1.00000000 );
                    };;;;;;;;
                }
                l_U687++;
            }
            else if (sub_9380( ref l_U655 ))
            {
                sub_1657( "CCB", "eBillboardLetterB - ENTITY_STATE_COMPLETE", 0 );
                l_U648 = 4;
            }
            else
            {
                sub_1657( "CCB", "All the oiBillboardLetterB objects are not created!!!", 0 );
            }
        }
        break;
        case 4: break;
    }
    switch (l_U649)
    {
        case 1:
        if (l_U648 >= 4)
        {
            sub_1657( "CCB", "eBillboardLetterO - ENTITY_STATE_CREATING", 0 );
            l_U649 = 2;
        }
        break;
        case 2:
        if (l_U310 >= 7)
        {
            if (l_U688 < l_U664)
            {
                if (NOT (DOES_OBJECT_EXIST( l_U664[l_U688] )))
                {
                    if (l_U688 == 0)
                    {
                        l_U664[l_U688] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsH", -25.11200000, 42.74600000, 94.19800000, 1.00000000 );
                    }
                    else if (l_U688 == 1)
                    {
                        l_U664[l_U688] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsP", -25.11200000, 42.74600000, 87.26300000, 1.00000000 );
                    }
                    else if (l_U688 == 2)
                    {
                        l_U664[l_U688] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsQ", -25.11200000, 42.74600000, 85.47500000, 1.00000000 );
                    }
                    else if (l_U688 == 3)
                    {
                        l_U664[l_U688] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsR", -25.11200000, 39.09400000, 87.26300000, 1.00000000 );
                    };;;;
                }
                l_U688++;
            }
            else if (sub_9380( ref l_U664 ))
            {
                sub_1657( "CCB", "eBillboardLetterO - ENTITY_STATE_COMPLETE", 0 );
                l_U649 = 4;
            }
            else
            {
                sub_1657( "CCB", "All the oiBillboardLetterO objects are not created!!!", 0 );
            }
        }
        break;
        case 4: break;
    }
    switch (l_U650)
    {
        case 1:
        if (l_U649 >= 4)
        {
            sub_1657( "CCB", "eBillboardLetterI - ENTITY_STATE_CREATING", 0 );
            l_U650 = 2;
        }
        break;
        case 2:
        if (l_U310 >= 7)
        {
            if (l_U689 < l_U669)
            {
                if (NOT (DOES_OBJECT_EXIST( l_U669[l_U689] )))
                {
                    if (l_U689 == 0)
                    {
                        l_U669[l_U689] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsI", -25.06400000, 33.93400000, 85.47500000, 1.00000000 );
                    }
                }
                l_U689++;
            }
            else if (sub_9380( ref l_U669 ))
            {
                sub_1657( "CCB", "eBillboardLetterI - ENTITY_STATE_COMPLETE", 0 );
                l_U650 = 4;
            }
            else
            {
                sub_1657( "CCB", "All the oiBillboardLetterI objects are not created!!!", 0 );
            }
        }
        break;
        case 4: break;
    }
    switch (l_U651)
    {
        case 1:
        if (l_U650 >= 4)
        {
            sub_1657( "CCB", "eBillboardLetterT - ENTITY_STATE_CREATING", 0 );
            l_U651 = 2;
        }
        break;
        case 2:
        if (l_U310 >= 7)
        {
            if (l_U690 < l_U671)
            {
                if (NOT (DOES_OBJECT_EXIST( l_U671[l_U690] )))
                {
                    if (l_U690 == 0)
                    {
                        l_U671[l_U690] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsK", -25.07900000, 28.76300000, 94.04000000, 1.00000000 );
                    }
                    else if (l_U690 == 1)
                    {
                        l_U671[l_U690] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsJ", -25.07900000, 26.49000000, 85.47500000, 1.00000000 );
                    }
                }
                l_U690++;
            }
            else if (sub_9380( ref l_U671 ))
            {
                sub_1657( "CCB", "eBillboardLetterT - ENTITY_STATE_COMPLETE", 0 );
                l_U651 = 4;
            }
            else
            {
                sub_1657( "CCB", "All the oiBillboardLetterT objects are not created!!!", 0 );
            }
        }
        break;
        case 4: break;
    }
    switch (l_U652)
    {
        case 1:
        if (l_U651 >= 4)
        {
            sub_1657( "CCB", "eBillboardLetterA - ENTITY_STATE_CREATING", 0 );
            l_U652 = 2;
        }
        break;
        case 2:
        if (l_U310 >= 7)
        {
            if (l_U691 < l_U674)
            {
                if (NOT (DOES_OBJECT_EXIST( l_U674[l_U691] )))
                {
                    if (l_U691 == 0)
                    {
                        l_U674[l_U691] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsM", -25.06400000, 18.77900000, 85.47500000, 1.00000000 );
                    }
                    else if (l_U691 == 1)
                    {
                        l_U674[l_U691] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsL", -25.06400000, 18.77900000, 94.19800000, 1.00000000 );
                    }
                    else if (l_U691 == 2)
                    {
                        l_U674[l_U691] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsO", -25.06400000, 16.40300000, 89.83600000, 1.00000000 );
                    }
                    else if (l_U691 == 3)
                    {
                        l_U674[l_U691] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsN", -25.06400000, 15.12700000, 85.47500000, 1.00000000 );
                    };;;;
                }
                l_U691++;
            }
            else if (sub_9380( ref l_U674 ))
            {
                sub_1657( "CCB", "eBillboardLetterA - ENTITY_STATE_COMPLETE", 0 );
                l_U652 = 4;
            }
            else
            {
                sub_1657( "CCB", "All the oiBillboardLetterA objects are not created!!!", 0 );
            }
        }
        break;
        case 4: break;
    }
    switch (l_U653)
    {
        case 1:
        if (l_U652 >= 4)
        {
            sub_1657( "CCB", "eBillboardLetterT2 - ENTITY_STATE_CREATING", 0 );
            l_U653 = 2;
        }
        break;
        case 2:
        if (l_U310 >= 7)
        {
            if (l_U692 < l_U679)
            {
                if (NOT (DOES_OBJECT_EXIST( l_U679[l_U692] )))
                {
                    if (l_U692 == 0)
                    {
                        l_U679[l_U692] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsJa", -25.07900000, 7.62000000, 85.47500000, 1.00000000 );
                    }
                    else if (l_U692 == 1)
                    {
                        l_U679[l_U692] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsKa", -25.07900000, 9.89300000, 94.04000000, 1.00000000 );
                    }
                }
                l_U692++;
            }
            else if (sub_9380( ref l_U679 ))
            {
                sub_1657( "CCB", "eBillboardLetterT2 - ENTITY_STATE_COMPLETE", 0 );
                l_U653 = 4;
            }
            else
            {
                sub_1657( "CCB", "All the oiBillboardLetterT2 objects are not created!!!", 0 );
            }
        }
        break;
        case 4: break;
    }
    switch (l_U654)
    {
        case 1:
        if (l_U653 >= 4)
        {
            sub_1657( "CCB", "eBillboardLetterA2 - ENTITY_STATE_CREATING", 0 );
            l_U654 = 2;
        }
        break;
        case 2:
        if (l_U310 >= 7)
        {
            if (l_U693 < l_U682)
            {
                if (NOT (DOES_OBJECT_EXIST( l_U682[l_U693] )))
                {
                    if (l_U693 == 0)
                    {
                        l_U682[l_U693] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsLa", -25.06400000, 0.83600000, 94.19800000, 1.00000000 );
                    }
                    else if (l_U693 == 1)
                    {
                        l_U682[l_U693] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsMa", -25.06400000, 0.83600000, 85.47500000, 1.00000000 );
                    }
                    else if (l_U693 == 2)
                    {
                        l_U682[l_U693] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsNa", -25.06400000, -2.81600000, 85.47500000, 1.00000000 );
                    }
                    else if (l_U693 == 3)
                    {
                        l_U682[l_U693] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsOa", -25.06400000, -1.54000000, 89.83600000, 1.00000000 );
                    };;;;
                }
                l_U693++;
            }
            else if (sub_9380( ref l_U682 ))
            {
                sub_1657( "CCB", "eBillboardLetterA2 - ENTITY_STATE_COMPLETE", 0 );
                l_U654 = 4;
            }
            else
            {
                sub_1657( "CCB", "All the oiBillboardLetterA2 objects are not created!!!", 0 );
            }
        }
        break;
        case 4: break;
    }
    return;
}

int sub_9380(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (DOES_OBJECT_EXIST( (uParam0^)[I] )))
        {
            return 0;
        }
    }
    return 1;
}

int sub_12991(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (DOES_OBJECT_EXIST( (uParam0^)[I] ))
        {
            if (NOT (IS_PED_DEAD( uParam1 )))
            {
                if (HAS_OBJECT_BEEN_DAMAGED_BY_PED( (uParam0^)[I], uParam1 ))
                {
                    return 1;
                }
            }
        }
    }
    return 0;
}

void sub_13514()
{
    sub_215( "P_INITIALIZE_SCRIPT_DATA" );
    l_U311 = 1;
    l_U498 = 0;
    l_U497 = 0;
    l_U499 = 0;
    sub_1205( ref l_U540, 666, 1, 0 );
    sub_1205( ref l_U580, 666, 1, 0 );
    sub_1205( ref l_U500, 1500, 1, 0 );
    sub_1205( ref l_U638, 3000, 1, 0 );
    sub_13646( "SCLBAUD" );
    return;
}

void sub_13646(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_13666();
    return;
}

void sub_13666()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_13766()
{
    sub_215( "P_SET_STATIC_DATA" );
    return;
}

void sub_13809()
{
    sub_1657( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U647 = 0;
    l_U648 = 1;
    l_U687 = 0;
    l_U649 = 1;
    l_U688 = 0;
    l_U650 = 1;
    l_U689 = 0;
    l_U651 = 1;
    l_U690 = 0;
    l_U652 = 1;
    l_U691 = 0;
    l_U653 = 1;
    l_U692 = 0;
    l_U654 = 1;
    l_U693 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( -1589865431 )))
    {
        sub_1657( "CCB", "Creating the NoLogo script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( -1589865431 );
        if (SCRIPT_VAR_HASH_EXISTS( -1589865431 ))
        {
            sub_1657( "CCB", "The NoLogo script variable was successfully created...", 0 );
        }
        else
        {
            sub_1657( "CCB", "The NoLogo script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
        sub_1657( "CCB", "The NoLogo script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( -1589865431, 0 );
    }
    return;
}

void sub_14395()
{
    sub_215( "P_REQUEST_RS3_PERSISTENT_ASSETS start" );
    sub_14459( 1037546172, ref g_U1108 );
    sub_14459( g_U2453, ref g_U1108 );
    sub_14459( 1049690760, ref g_U1108 );
    sub_14459( 2145666447, ref g_U1108 );
    sub_14459( 123419661, ref g_U1108 );
    sub_14459( 230799837, ref g_U1108 );
    sub_15884( -1787162676, ref g_U1301 );
    sub_15884( 1194438308, ref g_U1301 );
    sub_16861( "LEVEL_S_CLUB_CP_06", ref g_U1447 );
    sub_16861( "LEVEL_S_CLUB_CP_09", ref g_U1447 );
    if ((g_U891 != 10) AND (l_U312 == 1))
    {
        sub_17906( "mid_10_nc_concat", 0 );
    }
    if (g_U892 > 10)
    {
        REQUEST_SCRIPT_STREAM( "S_CLUB_HELI_RS_STREAM", g_U2867 );
    }
    sub_215( "P_REQUEST_RS3_PERSISTENT_ASSETS end" );
    return;
}

void sub_14459(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_14494( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_14625( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_14494(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_14625( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_14625( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_14625( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_15273( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_14625( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_14625( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_14625(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_14645( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_14645(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_15273(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_15884(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_15905( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_16037( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_15905(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_16037( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_16037( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_16037( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_15273( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_16037( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_16037( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_16037(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_14645( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_16861(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_16882( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_17019( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_16882(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_17019( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_17019( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_17019( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_15273( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_17019( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_17019( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_17019(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_14645( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_17906(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_18254()
{
    sub_215( "P_REQUEST_RS3_NONPERSISTENT_ASSETS start" );
    sub_18321( -1313172978, ref g_U1350 );
    sub_18321( -931023773, ref g_U1350 );
    sub_18321( 1476011597, ref g_U1350 );
    sub_20278( 73, ref g_U1903 );
    sub_21367( "S_CLUB_VIG_16_NC", "LEVEL_S_CLUB_CP_09", "/LEVEL/S_CLUB/S_CLUB_VIG_16_NC.act", "/Global/S_CLUB_VIG_16_NC/SEQ_START", 1 );
    sub_215( "P_REQUEST_RS3_NONPERSISTENT_ASSETS end" );
    return;
}

void sub_18321(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_18356( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_18508( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_18356(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_18508( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_18508( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_18508( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_18508( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_15273( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_15273( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_18508( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_18508( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_18508(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_14645( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_20278(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_20299( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_20437( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_20299(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being requested!!!", 0 );
                sub_20437( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is already loading!!!", 0 );
                sub_20437( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
                {
                    sub_20437( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The VEHICLE_RECORDING asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = -1;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_15273( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being removed!!!", 0 );
                sub_20437( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_20437( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The VEHICLE_RECORDING - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_20437(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_14645( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The VEHICLE_RECORDING asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_21367(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    if ((I_SEQUENCE_IS_LOADED( uParam0 )) == 0)
    {
        I_SEQUENCE_SETUP( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            while ((I_SEQUENCE_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

int sub_21576(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_21696(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_21817(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_21944(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

void sub_22157()
{
    sub_215( "P_SETUP_RS_WEATHER_AND_TOD" );
    RELEASE_TIME_OF_DAY();
    SET_WEATHER_TYPE_NOW_PERSIST( "EXTRASUNNY" );
    FREEZE_TIME_OF_DAY( 22, 0 );
    return;
}

int sub_22478(unknown uParam0)
{
    sub_1657( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_4298( uParam0, sub_349() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_22926(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_1657( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_1657( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_7150( iParam1 );
        sub_23185( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_23636( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_23636( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_23868( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_23636( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_23868( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_23868( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_23636( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_23868( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_23868( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_23868( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_23636( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_23868( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_23868( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_23868( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_23868( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_25426( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_1657( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_23185(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_4514( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_1657( "TEH", "Ending context", 0 );
        sub_1657( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_23636(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_23868(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_25426(int iParam0)
{
    sub_6167( "CHECKPOINT DATA" );
    sub_25465( iParam0->_fU4 );
    sub_25488( iParam0->_fU16 );
    sub_25488( iParam0->_fU20 );
    sub_25488( iParam0->_fU24 );
    sub_25531( iParam0->_fU28 );
    sub_25531( iParam0->_fU56 );
    sub_25531( iParam0->_fU60 );
    sub_25531( iParam0->_fU64 );
    sub_25531( iParam0->_fU68 );
    sub_25531( iParam0->_fU72 );
    sub_25531( iParam0->_fU76 );
    sub_25531( iParam0->_fU80 );
    sub_25531( iParam0->_fU84 );
    sub_25531( iParam0->_fU88 );
    sub_25531( iParam0->_fU92 );
    sub_25488( iParam0->_fU32 );
    sub_25531( iParam0->_fU36 );
    sub_25531( iParam0->_fU40 );
    sub_25531( iParam0->_fU44 );
    sub_25488( iParam0->_fU136 );
    sub_25736( iParam0->_fU140 );
    sub_25531( iParam0->_fU52 );
    sub_6167( "---nRightHolsterAttachmentEnabled: " );
    sub_25531( iParam0->_fU96 );
    sub_6167( "---nRightHolsterAttachmentToggled: " );
    sub_25531( iParam0->_fU100 );
    sub_6167( "---nLeftHolsterAttachmentEnabled: " );
    sub_25531( iParam0->_fU104 );
    sub_6167( "---nLeftHolsterAttachmentToggled: " );
    sub_25531( iParam0->_fU108 );
    sub_6167( "---nRifleHolsterAttachmentEnabled: " );
    sub_25531( iParam0->_fU112 );
    sub_6167( "---nRifleHolsterAttachmentToggled: " );
    sub_25531( iParam0->_fU116 );
    sub_6167( "---nRightHandAttachmentEnabled: " );
    sub_25531( iParam0->_fU120 );
    sub_6167( "---nRightHandAttachmentToggled: " );
    sub_25531( iParam0->_fU124 );
    sub_6167( "---nLeftHandAttachmentEnabled: " );
    sub_25531( iParam0->_fU128 );
    sub_6167( "---nLeftHandAttachmentToggled: " );
    sub_25531( iParam0->_fU132 );
    sub_25531( l_U1 );
    sub_25531( 144 );
    return;
}

void sub_25465(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_25488(unknown uParam0)
{
    return;
}

void sub_25531(unknown uParam0)
{
    return;
}

void sub_25736(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_26615()
{
    if (NOT l_U312)
    {
        sub_26649( 73, 0.40000000, 500.00000000 );
        sub_27803( -1313172978, "heli_max" );
        sub_28418();
        sub_29924( -26.24500000, 1.65000000, 85.03600000, 0, "S_CLUB_VIG_16_NC", "giovanna", 0 );
    }
    sub_30268();
    return;
}

void sub_26649(unknown uParam0, unknown uParam1, unknown uParam2)
{
    sub_215( "P_SETUP_HELI" );
    if (NOT (DOES_VEHICLE_EXIST( g_U2866 )))
    {
        g_U2866 = sub_26721( 1049690760, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME( uParam0, uParam2 ), 0.00000000, 1, 0, 1 );
    }
    else if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
    {
        SET_VEHICLE_COORDS( g_U2866, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME( uParam0, uParam2 ) );
    }
    if ((NOT (IS_VEHICLE_DEAD( g_U2866 ))) AND (DOES_VEHICLE_EXIST( g_U2866 )))
    {
        SET_VEHICLE_ENGINE_ON( g_U2866, 1, 1 );
        SET_HELI_BLADES_FULL_SPEED( g_U2866 );
        SILENCE_VEHICLE( g_U2866, 1 );
        SET_VEHICLE_AS_MISSION_VEHICLE( g_U2866 );
        SET_VEHICLE_EXTRA( g_U2866, 5, 1 );
        SET_VEHICLE_INTERIORLIGHT( g_U2866, 1 );
        SET_VEHICLE_DOOR_OPEN( g_U2866, 3 );
        SET_VEHICLE_HEALTH( g_U2866, 600 );
        SET_VEHICLE_ENGINE_HEALTH( g_U2866, 600.00000000 );
        SET_VEHICLE_PETROL_TANK_HEALTH( g_U2866, 300.00000000 );
        SET_VEHICLE_CAN_BE_DAMAGED( g_U2866, 0 );
        SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED( g_U2866, 1 );
        SET_VEHICLE_PROOFS( g_U2866, 0, 1, 1, 1, 1 );
        sub_27375( g_U2866, uParam0, uParam1, uParam2, 0 );
        PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
        if (NOT (DOES_OBJECT_EXIST( l_U23 )))
        {
            l_U23 = CREATE_OBJECT( 230799837, 0.00000000, 1.00000000, 0.00000000, 0, 0 );
            ATTACH_OBJECT_TO_VEHICLE( l_U23, g_U2866, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        }
    }
    ALLOW_BULLET_CAMERA_CHEAT( 0 );
    return;
}

void sub_26721(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
        sub_26832( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

void sub_26832(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_6167( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_27375(unknown uParam0, unknown uParam1, unknown uParam2, float fParam3, boolean bParam4)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
            STOP_PLAYBACK_RECORDED_VEHICLE( uParam0 );
        }
    }
    sub_27426( uParam1, 1 );
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        START_PLAYBACK_RECORDED_VEHICLE( uParam0, uParam1 );
        SET_PLAYBACK_SPEED( uParam0, uParam2 );
        if (fParam3 > 0.00000000)
        {
            SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE( uParam0, fParam3 );
        }
    }
    if (bParam4)
    {
        while ((NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))) AND (NOT (IS_VEHICLE_DEAD( uParam0 ))))
        {
            sub_6167( "Waiting for vehicle to start playing recorded path." );
            WAIT( 0 );
        }
    }
    return;
}

void sub_27426(unknown uParam0, int iParam1)
{
    REQUEST_VEHICLE_RECORDING( uParam0 );
    if (iParam1 == 1)
    {
        while ((HAS_VEHICLE_RECORDING_BEEN_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_27803(unknown uParam0, unknown uParam1)
{
    sub_215( "P_SETUP_PLAYER" );
    if (NOT (IS_PED_DEAD( sub_349() )))
    {
        SET_PED_DUCKING( sub_349(), 0 );
        SET_PED_INVINCIBLE( sub_349(), 1 );
        SET_ADRENALINE_AMT( 0.75000000 );
        CLEAR_PED_TASKS( sub_349() );
        SET_PED_HEALTH( sub_349(), GET_PED_MAX_HEALTH( sub_349() ), 0 );
        if (NOT (IS_PED_ATTACHED_TO_ANY_VEHICLE( sub_349() )))
        {
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                ATTACH_PED_TO_VEHICLE( sub_349(), g_U2866, 0, 0.56600000, 0.00000000, 0.80400000, -90.00000000, 0.00000000, 1, 0, 0, 1 );
                SET_VEHICLE_AS_ENTITY_SYNC_POINT( g_U2866, sub_349() );
            }
        }
        SET_PED_CAN_RAGDOLL( sub_349(), 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        ENABLE_HIT_DETECTION( 0 );
        ENABLE_LAST_MAN_STANDING( 0 );
        SET_SILHOUETTE_ACTIVE( 0 );
        SET_RAIL_RELATIVE_DIR( 2, 0 );
        SET_PLAYER_COMBAT_TIMER_MODE( 1 );
        PLAYER_SET_AIM_MODE( 2 );
        AUDIO_SET_PED_FOOTSTEPS_ON( 0 );
        SET_HOLSTER_VISIBLE( sub_349(), 0, 0 );
        SET_HOLSTER_VISIBLE( sub_349(), 1, 0 );
        SET_INSTANT_FIRE_FORCED( 1 );
        SET_PED_USES_ANIMATED_DEATH( sub_349(), 1 );
        if (NOT (ISEQ_QUERY_STATE( uParam0, 3 )))
        {
            sub_1657( "MF", "Starting Player Helicopter Interactive Sequence", 0 );
            PED_ACTION_TREE_PLAY_NODE( sub_349(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
            ISEQ_REGISTER_ENTITY( uParam0, uParam1, sub_349(), 0 );
            ISEQ_START( uParam0 );
        }
        REMOVE_ALL_PED_WEAPONS( sub_349() );
        sub_6496( sub_349(), 354276007, 25000, 0, 0 );
        SET_CAMERA_OVERRIDE( "RAIL_HELI_CAMERA", "RAIL_HELI_CAMERA_AIM", 0, 1, 1 );
    }
    return;
}

void sub_28418()
{
    sub_28463( ref g_U2736, 55.11000000, -24.06000000, 94.27000000, 0.00000000, 817667075, 26, 6, 0, 0, 1 );
    sub_28463( ref g_U2750, 54.04000000, -24.06000000, 94.27000000, 0.00000000, -383356854, 26, 6, 0, 0, 1 );
    if (NOT (ISEQ_IS_LOADED( -931023773 )))
    {
        ISEQ_REQUEST( -931023773 );
    }
    if (NOT (ISEQ_IS_LOADED( 1476011597 )))
    {
        ISEQ_REQUEST( 1476011597 );
    }
    if (NOT (DOES_PED_EXIST( g_U2763 )))
    {
        g_U2763 = sub_28692( ref g_U2750 );
    }
    if (NOT (IS_PED_DEAD( g_U2763 )))
    {
        sub_29370( ref g_U2763 );
        SET_PED_INVINCIBLE( g_U2763, 1 );
        DETACH_PED( g_U2763, 1 );
        if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
        {
            ATTACH_PED_TO_VEHICLE( g_U2763, g_U2866, 0, 0.67600000, 1.52300000, 1.50300000, 0.00000000, 0.00000000, 1, 0, 0, 1 );
        }
    }
    if (NOT (DOES_PED_EXIST( g_U2749 )))
    {
        g_U2749 = sub_28692( ref g_U2736 );
    }
    if (NOT (IS_PED_DEAD( g_U2749 )))
    {
        sub_29370( ref g_U2749 );
        SET_PED_INVINCIBLE( g_U2749, 1 );
        DETACH_PED( g_U2749, 1 );
        if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
        {
            ATTACH_PED_TO_VEHICLE( g_U2749, g_U2866, 0, -0.61500000, 1.48000000, 1.55500000, 0.00000000, 0.00000000, 1, 0, 0, 1 );
        }
    }
    if (NOT (ISEQ_QUERY_STATE( -931023773, 3 )))
    {
        sub_29752( g_U2763, -931023773, "marcello" );
        ISEQ_START( -931023773 );
    }
    if (NOT (ISEQ_QUERY_STATE( 1476011597, 3 )))
    {
        sub_29752( g_U2749, 1476011597, "passos" );
        ISEQ_START( 1476011597 );
    }
    return;
}

void sub_28463(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_28692(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_26832( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_29171( iParam0->_fU40 );
    sub_29251( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_29171(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_29251(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_29370(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_STAND_STILL( 0, -1 );
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    return;
}

void sub_29752(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        ISEQ_REGISTER_ENTITY( uParam1, uParam2, uParam0, 0 );
    }
    return;
}

void sub_29924(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, boolean bParam6)
{
    sub_28463( ref g_U2764, uParam0, uParam3, 1421546599, 5, 2, 0, 0, 0 );
    g_U2777 = sub_28692( ref g_U2764 );
    if (NOT (IS_PED_DEAD( g_U2777 )))
    {
        sub_215( "Setting Giovanna crap" );
        sub_29370( ref g_U2777 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2777, 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( g_U2777, 1 );
        SET_BULLET_CAM_PREF( g_U2777, "ALL_F_06_FAILSAFE", "ALL_F_06_FAILSAFE", "ALL_F_06_FAILSAFE", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        SET_PED_AS_ONE_SHOT_KILL( g_U2777, 1 );
        SET_PED_GORE( g_U2777, 0 );
        RESET_PED_GORE( g_U2777 );
        SET_COLLISION_BETWEEN_PEDS( g_U2777, 0 );
        sub_30196( uParam4, uParam5, g_U2777 );
        if (bParam6)
        {
            I_SEQUENCE_START( uParam4 );
        }
    }
    return;
}

void sub_30196(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam2 )))
    {
        I_SEQUENCE_REGISTER_ENTITY( uParam0, uParam1, uParam2, 0 );
    }
    return;
}

void sub_30268()
{
    sub_30324( ref l_U314[0], -24.51500000, -6.40500000, 85.03600000, 0.00000000, 603230254, 2145666447, 1194438308 );
    sub_30324( ref l_U314[1], -21.57000000, 13.68100000, 85.03600000, 90.00000000, -166179041, 2145666447, 1194438308 );
    sub_30324( ref l_U314[2], -23.45900000, 30.25800000, 85.03600000, 90.00000000, -1417346710, 2145666447, 1194438308 );
    sub_30324( ref l_U314[3], -21.55700000, 51.33800000, 85.03600000, 0.00000000, -1540100678, 2145666447, 1194438308 );
    sub_30701( ref l_U314, "RS3", ref l_U491, 1.00000000, 0, 0 );
    sub_33078( ref l_U314, 1, 0, -1 );
    sub_33207( ref l_U314, 0 );
    return;
}

void sub_30324(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    sub_30373( uParam0, uParam1, uParam4, uParam7, 1194438308, 2, g_U3107, 5, 500, uParam6, 0, 0, uParam5, g_U668 );
    return;
}

void sub_30373(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29)
{
    iParam0->_fU56 = {uParam1};
    iParam0->_fU68 = uParam4;
    iParam0->_fU72 = uParam5;
    iParam0->_fU76 = uParam6;
    iParam0->_fU80 = uParam7;
    iParam0->_fU84 = {uParam8};
    iParam0->_fU116 = uParam16;
    iParam0->_fU120 = uParam17;
    iParam0->_fU124 = uParam18;
    iParam0->_fU128 = uParam19;
    iParam0->_fU132 = uParam20;
    iParam0->_fU136 = uParam21;
    iParam0->_fU140 = {uParam22};
    return;
}

int sub_30701(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4, boolean bParam5)
{
    int I;

    sub_6167( uParam1 );
    if (NOT bParam4)
    {
        sub_30731( uParam2, uParam3, 1 );
        for ( I = 0; I < (uParam0^); I++ )
        {
            sub_30928( ref (uParam0^)[I] );
            sub_32398( (uParam0^)[I]._fU0, uParam2 );
        }
        sub_32676( uParam0, uParam1 );
    }
    else if ((uParam0^)[0]._fU172 == 0)
    {
        sub_30731( uParam2, uParam3, 1 );
    }
    if ((uParam0^)[0]._fU172 < (uParam0^))
    {
        sub_30928( ref (uParam0^)[(uParam0^)[0]._fU172] );
        sub_32398( (uParam0^)[(uParam0^)[0]._fU172]._fU0, uParam2 );
        (uParam0^)[0]._fU172++;
    }
    else
    {
        sub_32676( uParam0, uParam1 );
        return 1;
    }
    if (bParam5)
    {
        sub_32942( uParam0, 1, 0, -1 );
    }
    return 0;
}

void sub_30731(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_30928(int iParam0)
{
    unknown uVar3;

    sub_215( "MAL_EnemyStructCreate starting" );
    sub_31043( iParam0 + 0, iParam0 + 4, iParam0->_fU56, iParam0->_fU68, iParam0->_fU72, iParam0->_fU80, iParam0->_fU84, iParam0->_fU116, iParam0->_fU120, iParam0->_fU124, 1 );
    if (NOT (ARE_STRINGS_EQUAL( iParam0 + 140, ref g_U668 )))
    {
        sub_6167( iParam0 + 140 );
        sub_31872( iParam0 + 0, iParam0 + 140 );
    }
    if (iParam0->_fU128)
    {
        sub_215( "MAL_EnemyStructCreate giving ped backup weapon" );
        sub_32001( iParam0->_fU0, iParam0->_fU76, 25000, 1, 0 );
    }
    if (iParam0->_fU132)
    {
        uVar3 = GET_WEAPON_FROM_HAND( iParam0->_fU0, 0, 0 );
        sub_32198( ref uVar3, 14, 1 );
    }
    if (iParam0->_fU136 != 0)
    {
        sub_32324( iParam0 + 0, iParam0->_fU136 );
    }
    return iParam0->_fU0;
}

void sub_31043(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19)
{
    sub_31068( uParam1, uParam2, uParam5, uParam18, 7, 3, 2, 0, 0 );
    (uParam0^) = sub_31170( uParam0, uParam1, 1, 1, uParam19 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
    }
    sub_31421( (uParam0^), uParam6, 25000, 0, 0 );
    sub_31606( uParam0, ref uParam8, uParam16, uParam17, 1 );
    sub_31770( uParam0, uParam7 );
    return (uParam0^);
}

void sub_31068(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

void sub_31170(unknown uParam0, unknown uParam1, boolean bParam2, boolean bParam3, unknown uParam4)
{
    sub_3065( (uParam0^) );
    (uParam0^) = sub_28692( uParam1 );
    if (bParam3)
    {
        while (NOT (DOES_PED_EXIST( (uParam0^) )))
        {
            WAIT( 0 );
            sub_215( "MAL_CreatePed waiting for ped to exist" );
        }
    }
    SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), uParam4 );
    sub_31298( uParam0, 32, 0 );
    SET_PED_IGNORE_LOS_CHECKS( (uParam0^), NOT bParam2 );
    SET_PED_EMOTION_STATE( (uParam0^), 1 );
    return (uParam0^);
}

void sub_31298(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_ATTRIBUTES( (uParam0^), uParam1, uParam2 );
    }
    return;
}

void sub_31421(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    unknown Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                sub_215( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

void sub_31606(unknown uParam0, unknown uParam1, float fParam2, float fParam3, boolean bParam4)
{
    sub_215( "MAL_SetTemplateAndRanges" );
    sub_6167( uParam1 );
    sub_25488( fParam2 );
    sub_25488( fParam3 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    if (NOT bParam4)
    {
        sub_31298( uParam0, 1, 0 );
    }
    return;
}

void sub_31770(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam1 );
    }
    return;
}

void sub_31872(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_ROOM_FOR_PED_BY_NAME( (uParam0^), uParam1 );
    }
    return;
}

void sub_32001(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    int Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
            while (Result == 0)
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
                sub_215( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

void sub_32198(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (GET_DOES_WEAPON_EXIST( (uParam0^) ))
    {
        if (bParam2)
        {
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
        else
        {
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
    }
    return;
}

void sub_32324(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PERSISTENT_PED_VARIATION_ENUM( (uParam0^), uParam1 );
    }
    return;
}

void sub_32398(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_6167( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_30731( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_30731( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_32676(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I]._fU0, ref cVar5 );
        }
    }
    return;
}

void sub_32942(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
        sub_32992( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_32992(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_FREEZE_PROCESSING( iParam0->_fU0, uParam1 );
    }
    return;
}

void sub_33078(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
        sub_33132( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_33132(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44)
{
    if (NOT (IS_PED_DEAD( uParam0._fU0 )))
    {
        SET_PED_AS_ONE_SHOT_KILL( uParam0._fU0, uParam44 );
    }
    return;
}

void sub_33207(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_33245( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_33245(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44)
{
    if (NOT (IS_PED_DEAD( uParam0._fU0 )))
    {
        SET_PED_VALIDATE_BULLET_CAM_HIT( uParam0._fU0, uParam44 );
    }
    return;
}

int sub_33422()
{
    return 1;
}

void sub_33441()
{
    sub_1657( "MF", "P_MID10_Register - START", 0 );
    CUTSCENE_REGISTER_INTERACTIVE_SEQUENCE( "S_CLUB_VIG_16_NC" );
    sub_33555( "S_CLUB_VIG_16_NC", "gmed1", l_U314[0] );
    sub_33555( "S_CLUB_VIG_16_NC", "gmed2", l_U314[1] );
    sub_33555( "S_CLUB_VIG_16_NC", "gmed3", l_U314[2] );
    sub_33555( "S_CLUB_VIG_16_NC", "gmed4", l_U314[3] );
    sub_30196( "S_CLUB_VIG_16_NC", "giovanna", g_U2777 );
    if (NOT (IS_PED_DEAD( g_U2777 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2777, "Giov_Club_B", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U2777, -26.24500000, 1.65000000, 85.03600000, 0.00000000 );
    }
    if (NOT (IS_PED_DEAD( g_U2749 )))
    {
        DETACH_PED( g_U2749, 1 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2749, "Pass_Club_H", 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE( g_U2749, g_U2866, 0, -0.61500000, 1.48000000, 1.55500000, 0.00000000, 0.00000000, 1, 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U2749, "/Global/S_CLUB_VIG_11_PAS/SEQ_START/PASSOS/IDLE" );
    }
    if (NOT (IS_PED_DEAD( g_U2763 )))
    {
        DETACH_PED( g_U2763, 1 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2763, "Marc_Casu", 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE( g_U2763, g_U2866, 0, 0.67600000, 1.52300000, 1.50300000, 0.00000000, 0.00000000, 1, 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U2763, "/Global/S_CLUB_VIG_11_MAR/SEQ_START/MARCELLO/IDLE" );
    }
    if (NOT (IS_PED_DEAD( l_U314[0]._fU0 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U314[0]._fU0, "G_CS_NCSM_D", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U314[0]._fU0, l_U314[0]._fU56, l_U314[0]._fU68 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U314[0]._fU0, 0, 0 ), "W_SB_Uzi_Aa_H", 0 );
    }
    if (NOT (IS_PED_DEAD( sub_349() )))
    {
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( sub_349(), 0, 0 ), "W_AR_Rug30_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE( sub_349(), g_U2866, 0, 0.56600000, 0.00000000, 0.80400000, -90.00000000, 0.00000000, 1, 0 );
        SET_VEHICLE_AS_ENTITY_SYNC_POINT( g_U2866, sub_349() );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_349(), "/Global/S_CLUB_VIG_10_NC/SEQ_START/MAX/INITIALIZE" );
        if (IS_WEAPON_ATTACHMENT_TOGGLED( GET_WEAPON_FROM_HAND( sub_349(), 0, 0 ), 13 ))
        {
            TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND( sub_349(), 0, 0 ), 13, 0 );
            l_U24 = 0;
        }
        else
        {
            l_U24 = 1;
        }
    }
    if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U2866, "heli_luxury", 0 );
        FREEZE_VEHICLE_POSITION( g_U2866, 1 );
    }
    if (DOES_OBJECT_EXIST( DOOR_FIND_CLOSEST( g_U3276._fU0, g_U3276._fU4 ) ))
    {
        REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U3276._fU0, g_U3276._fU4 ), "p_clb_door_ext_aa", 0 );
    }
    CUTSCENE_FORCE_GAMEPLAY_HEADING_PITCH_UPDATE();
    REGISTER_DETACH_PLAYER_FOR_CUTSCENE();
    sub_1657( "MF", "P_MID10_Register - END", 0 );
    return;
}

void sub_33555(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45)
{
    sub_30196( uParam0, uParam1, uParam2._fU0 );
    return;
}

void sub_34770()
{
    if (l_U599._fU52)
    {
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        SET_CAMERA_OVERRIDE( "RAIL_HELI_CAMERA", "RAIL_HELI_CAMERA_AIM", 0, 1, 1 );
        sub_27375( g_U2866, 73, 0.40000000, 500.00000000, 0 );
        PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
        CLEAR_PED_TASKS_IMMEDIATELY( sub_349() );
        CAMERA_SNAP_POINT_AT_COORD( l_U626 );
        g_U1095 = 1;
    }
    sub_34922();
    if (l_U499 == 0)
    {
        if (GET_CUTSCENE_TIME_MS() >= 7500)
        {
            sub_1657( "MF", "Music Cue: 6.6", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_1_2_4", "NIGHTCLUB_01_1_2_4", 0, 3000, 0, -1082130432, 0 );
            l_U499 = 1;
        }
    }
    return;
}

void sub_34922()
{
    if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
    {
        SET_VEHICLE_ENGINE_ON( g_U2866, 1, 1 );
        SET_HELI_BLADES_FULL_SPEED( g_U2866 );
    }
    return;
}

int sub_35136()
{
    sub_3050( ref g_U2778 );
    FREEZE_VEHICLE_POSITION( g_U2866, 0 );
    UNPAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
    CLEAR_PED_TASKS_IMMEDIATELY( sub_349() );
    return 1;
}

void sub_35205(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    sub_1657( "MSWW", "CutSys_CreateStandaloneCutscene", "###" );
    return sub_35359( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam7, 0, 35282, 35300, 0, 35320, 35338, uParam6 );
}

void sub_35282()
{
    return;
}

int sub_35300()
{
    return 1;
}

void sub_35320()
{
    return;
}

int sub_35338()
{
    return 1;
}

void sub_35359(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_35673(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_1657( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_1657( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_1657( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_1657( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_1657( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_1657( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_17906( iParam0->_fU0, 0 );
            sub_1657( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_36540( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_36540( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_1657( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_37068( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_36540( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_37417( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_37417( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_36540(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_349() )))
        {
            SET_PLAYER_CONTROL( sub_371(), 0, uParam2 );
            SET_PED_DUCKING( sub_349(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_349() );
            }
            SET_PED_INVINCIBLE( sub_349(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_37068(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_349() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_349(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_349(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_349(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_349(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_349(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_37417(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_349() )))
    {
        SET_PLAYER_CONTROL( sub_371(), 1, 0 );
        SET_PED_INVINCIBLE( sub_349(), 0 );
        if (bParam0)
        {
            sub_37498();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_37498()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_349() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_349(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_349(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_349(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_349(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_37786()
{
    if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_349(), 0, 0 ) ))
    {
        ENABLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND( sub_349(), 0, 0 ), 13, 1 );
        if (NOT l_U24)
        {
            TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND( sub_349(), 0, 0 ), 13, 1 );
        }
        else
        {
            TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND( sub_349(), 0, 0 ), 13, 0 );
        }
        SET_LASER_SIGHT_ATTACHMENT( GET_WEAPON_FROM_HAND( sub_349(), 0, 0 ), -1363960247 );
    }
    UNPAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
    if (NOT (I_SEQUENCE_QUERY_STATE( "S_CLUB_VIG_16_NC", 3 )))
    {
        sub_33555( "S_CLUB_VIG_16_NC", "gmed1", l_U314[0] );
        sub_33555( "S_CLUB_VIG_16_NC", "gmed2", l_U314[1] );
        sub_33555( "S_CLUB_VIG_16_NC", "gmed3", l_U314[2] );
        sub_33555( "S_CLUB_VIG_16_NC", "gmed4", l_U314[3] );
        sub_30196( "S_CLUB_VIG_16_NC", "giovanna", g_U2777 );
        I_SEQUENCE_START( "S_CLUB_VIG_16_NC" );
    }
    sub_1657( "MF", "Music Cue: 6.7", 0 );
    sub_1657( "MF", "Music Cue: 6.8", 0 );
    AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_1_2_4", "NIGHTCLUB_01_1_2_4", 0, -1, 0, -1082130432, 0 );
    sub_38358();
    SET_INSTANT_FIRE_FORCED( 0 );
    sub_38480();
    return;
}

void sub_38358()
{
    SET_PLAYER_CONTROL( sub_371(), 0, 256 );
    REENABLE_PLAYER_INPUT( 17 );
    REENABLE_PLAYER_INPUT( 16 );
    REENABLE_PLAYER_INPUT( 15 );
    REENABLE_PLAYER_INPUT( 14 );
    REENABLE_PLAYER_INPUT( 6 );
    REENABLE_PLAYER_INPUT( 28 );
    REENABLE_PLAYER_INPUT( 29 );
    REENABLE_PLAYER_INPUT( 4 );
    REENABLE_PLAYER_INPUT( 19 );
    REENABLE_PLAYER_INPUT( 20 );
    return;
}

void sub_38480()
{
    sub_1657( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_1657( "CCB", "Starting the Nightclub_RS3 context...", 0 );
    START_CONTEXT( "Nightclub_RS3" );
    return;
}

int sub_38617()
{
    if (l_U272)
    {
        sub_1657( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U272 = 0;
        return 1;
        break;
    }
    sub_1657( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

void sub_38992(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

void sub_39039()
{
    if (NOT l_U6._fU20)
    {
        sub_1657( "MF", "INITIAL HELI RAIL CAM SHAKE...", 0 );
        SHAKE_GAMEPLAY_CAM( sub_39104(), l_U16 );
        sub_39162( ref l_U6, l_U15 );
    }
    if (sub_1461( ref l_U6 ))
    {
        SHAKE_GAMEPLAY_CAM( sub_39104(), l_U16 );
        sub_39162( ref l_U6, l_U15 );
    }
    return;
}

string sub_39104()
{
    return "MEDIUM_EXPLOSION_SHAKE";
}

void sub_39162(unknown uParam0, unknown uParam1)
{
    sub_1205( uParam0, uParam1, 1, 0 );
    sub_1341( uParam0 );
    return;
}

void sub_39271()
{
    int iVar2;
    int I;
    int iVar4;
    int iVar5;

    sub_1657( "MF", "P_RS3_SPEECH_SCLB_EX_PLAY_LINE - START", 0 );
    iVar2 = 1;
    for ( I = 0; I < l_U629; I++ )
    {
        if (l_U629[I] == 0)
        {
            iVar2 = 0;
        }
    }
    if (iVar2 == 1)
    {
        sub_1657( "MF", "RESETTING BOOLEAN ARRAY", 0 );
        sub_39433( ref l_U629, 0 );
    }
    SET_RANDOM_SEED( TIMERA() );
    iVar4 = GET_RANDOM_INT_IN_RANGE( 0, 8 );
    iVar5 = 0;
    while (l_U629[iVar4] == 1)
    {
        iVar4 = GET_RANDOM_INT_IN_RANGE( 0, 8 );
        sub_1657( "MF", "Searching for correct value....", 0 );
        if (iVar4 >= l_U629)
        {
            sub_1657( "MF", "INVALID VALUE, Clamping...", 0 );
            iVar4 = l_U629 - 1;
        }
        iVar5++;
        if (iVar5 > 200)
        {
            sub_1657( "MF", "FUCK IT, Search failed, just use this value!", 0 );
            l_U629[iVar4] = 0;
        }
    }
    if (iVar4 == 0)
    {
        sub_39746();
    }
    else if (iVar4 == 1)
    {
        sub_40997();
    }
    else if (iVar4 == 2)
    {
        sub_41222();
    }
    else if (iVar4 == 3)
    {
        sub_41447();
    }
    else if (iVar4 == 4)
    {
        sub_41675();
    }
    else if (iVar4 == 5)
    {
        sub_41903();
    }
    else if (iVar4 == 6)
    {
        sub_42131();
    }
    else
    {
        iVar4 = 7;
        sub_42349();
    };;;;;;;
    l_U629[iVar4] = 1;
    sub_1657( "MF", "P_RS3_SPEECH_SCLB_EX_PLAY_LINE - END", 0 );
    return;
}

void sub_39433(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        (uParam0^)[I] = uParam1;
    }
    return;
}

void sub_39746()
{
    sub_1657( "MF", "P_RS_SPEECH_EXV1A - START", 0 );
    sub_39799( ref l_U125 );
    sub_39885( 2, g_U2763, "MARCELO", ref l_U125, 2, 0 );
    sub_39885( 1, sub_349(), "MAX", ref l_U125, 2, 0 );
    sub_40125( "SCLB_EXV1A", ref l_U125, 8, 1 );
    PED_SET_ACTION_INTENTION( g_U2763, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    sub_1657( "MF", "P_RS_SPEECH_EXV1A - END", 0 );
    return;
}

void sub_39799(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_39885(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_40125(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_40149( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_40149(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_40204( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_40204(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_40239( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_40733( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_40239(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_40733(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_40997()
{
    sub_1657( "MF", "P_RS_SPEECH_EXV1B - START", 0 );
    sub_39799( ref l_U135 );
    sub_39885( 2, g_U2763, "MARCELO", ref l_U135, 2, 0 );
    sub_39885( 1, sub_349(), "MAX", ref l_U135, 2, 0 );
    sub_40125( "SCLB_EXV1B", ref l_U135, 8, 1 );
    PED_SET_ACTION_INTENTION( sub_349(), 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    sub_1657( "MF", "P_RS_SPEECH_EXV1B - END", 0 );
    return;
}

void sub_41222()
{
    sub_1657( "MF", "P_RS_SPEECH_EXV1C - START", 0 );
    sub_39799( ref l_U145 );
    sub_39885( 2, g_U2763, "MARCELO", ref l_U145, 2, 0 );
    sub_39885( 1, sub_349(), "MAX", ref l_U145, 2, 0 );
    sub_40125( "SCLB_EXV1C", ref l_U145, 8, 1 );
    PED_SET_ACTION_INTENTION( g_U2763, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    sub_1657( "MF", "P_RS_SPEECH_EXV1C - END", 0 );
    return;
}

void sub_41447()
{
    sub_1657( "MF", "P_RS_SPEECH_EXV1D - START", 0 );
    sub_39799( ref l_U155 );
    sub_39885( 1, g_U2763, "MARCELO", ref l_U155, 2, 0 );
    sub_39885( 0, g_U2749, "PASSOS", ref l_U155, 2, 0 );
    sub_40125( "SCLB_EXV1D", ref l_U155, 8, 1 );
    PED_SET_ACTION_INTENTION( g_U2763, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    sub_1657( "MF", "P_RS_SPEECH_EXV1D - END", 0 );
    return;
}

void sub_41675()
{
    sub_1657( "MF", "P_RS_SPEECH_EXV1E - START", 0 );
    sub_39799( ref l_U165 );
    sub_39885( 1, g_U2763, "MARCELO", ref l_U165, 2, 0 );
    sub_39885( 0, g_U2749, "PASSOS", ref l_U165, 2, 0 );
    sub_40125( "SCLB_EXV1E", ref l_U165, 8, 1 );
    PED_SET_ACTION_INTENTION( g_U2763, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    sub_1657( "MF", "P_RS_SPEECH_EXV1E - END", 0 );
    return;
}

void sub_41903()
{
    sub_1657( "MF", "P_RS_SPEECH_EXV1F - START", 0 );
    sub_39799( ref l_U175 );
    sub_39885( 1, g_U2763, "MARCELO", ref l_U175, 2, 0 );
    sub_39885( 0, g_U2749, "PASSOS", ref l_U175, 2, 0 );
    sub_40125( "SCLB_EXV1F", ref l_U175, 8, 1 );
    PED_SET_ACTION_INTENTION( g_U2763, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    sub_1657( "MF", "P_RS_SPEECH_EXV1F - END", 0 );
    return;
}

void sub_42131()
{
    sub_1657( "MF", "P_RS_SPEECH_EXV1G - START", 0 );
    sub_39799( ref l_U185 );
    sub_39885( 1, g_U2749, "PASSOS", ref l_U185, 2, 0 );
    sub_39885( 0, sub_349(), "MAX", ref l_U185, 2, 0 );
    sub_40125( "SCLB_EXV1G", ref l_U185, 8, 1 );
    PED_SET_ACTION_INTENTION( g_U2749, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    sub_1657( "MF", "P_RS_SPEECH_EXV1G - END", 0 );
    return;
}

void sub_42349()
{
    sub_1657( "MF", "P_RS_SPEECH_EXV1H - START", 0 );
    sub_39799( ref l_U195 );
    sub_39885( 1, g_U2763, "MARCELO", ref l_U195, 2, 0 );
    sub_39885( 0, g_U2749, "PASSOS", ref l_U195, 2, 0 );
    sub_40125( "SCLB_EXV1H", ref l_U195, 8, 1 );
    PED_SET_ACTION_INTENTION( g_U2763, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    sub_1657( "MF", "P_RS_SPEECH_EXV1H - END", 0 );
    return;
}

int sub_42644(int iParam0, unknown uParam1, boolean bParam2)
{
    if ((sub_42661( iParam0->_fU0, uParam1 )) == 1)
    {
        if (bParam2)
        {
            sub_42729( iParam0 + 0, uParam1 );
        }
        return 1;
    }
    return 0;
}

int sub_42661(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 );
    }
    return 0;
}

void sub_42729(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

void sub_42793()
{
    sub_1657( "MF", "P_RS_SPEECH_GVNSC1 - START", 0 );
    sub_39799( ref l_U105 );
    sub_39885( 1, g_U2777, "GIOVANNA", ref l_U105, 2, 0 );
    sub_39885( 0, sub_349(), "MAX", ref l_U105, 2, 0 );
    sub_40125( "SCLB_GVNSC1", ref l_U105, 8, 1 );
    sub_1657( "MF", "P_RS_SPEECH_GVNSC1 - END", 0 );
    return;
}

void sub_43046()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    sub_39799( ref uVar2 );
    sub_39885( 0, sub_349(), "MAX", ref uVar2, 2, 0 );
    sub_39885( 1, g_U2749, "PASSOS", ref uVar2, 2, 0 );
    sub_40125( "SCLB_HRPGC", ref uVar2, 8, 1 );
    PED_SET_ACTION_INTENTION( g_U2749, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    return;
}

void sub_43168()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

void sub_43234()
{
    if (NOT (IS_PED_DEAD( sub_349() )))
    {
        if (NOT l_U54)
        {
            if (NOT (IS_ANY_SPEECH_PLAYING( sub_349() )))
            {
                if (TIME_SINCE_LAST_MONOLOGUE() > 500)
                {
                    if (IS_PED_RELOADING( sub_349() ))
                    {
                        l_U54 = 1;
                        if ((l_U74 == 1) || ((GET_WEAPON_AMMO_IN_CLIP( GET_WEAPON_FROM_HAND( sub_349(), 0, 0 ) )) < 2))
                        {
                            sub_39162( ref l_U65, 400 );
                        }
                        else if ((GET_RANDOM_INT_IN_RANGE( 0, 100 )) < 45)
                        {
                            sub_39162( ref l_U65, 400 );
                        }
                    }
                }
            }
        }
        if (sub_1461( ref l_U65 ))
        {
            sub_39799( ref l_U55 );
            sub_39885( 0, sub_349(), "MAX", ref l_U55, 2, 0 );
            sub_39885( 1, sub_349(), "MAX", ref l_U55, 2, 0 );
            sub_40125( "SCLB_MCHWR", ref l_U55, 5, 1 );
            l_U74 = 0;
        }
        if (l_U54 == 1)
        {
            if (NOT (IS_PED_RELOADING( sub_349() )))
            {
                l_U54 = 0;
            }
        }
    }
    return;
}

void sub_43559()
{
    if (sub_1461( ref l_U45 ))
    {
        sub_43583();
    }
    return;
}

void sub_43583()
{
    sub_1657( "MF", "P_RS_SPEECH_VIG_10 - START", 0 );
    sub_39799( ref l_U115 );
    sub_39885( 1, sub_349(), "MAX", ref l_U115, 2, 0 );
    sub_39885( 0, sub_349(), "MAX", ref l_U115, 2, 0 );
    sub_40125( "SCLB_VIG10", ref l_U115, 8, 1 );
    PED_SET_ACTION_INTENTION( sub_349(), 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    sub_1657( "MF", "P_RS_SPEECH_VIG_10 - END", 0 );
    return;
}

void sub_43800()
{
    unknown uVar2;

    if (NOT (IS_PED_DEAD( g_U2777 )))
    {
        if (NOT (IS_ANY_SPEECH_PLAYING( g_U2777 )))
        {
            if (HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2777 ), 1.90000000, ref uVar2 ))
            {
                if ((GET_RANDOM_INT_IN_RANGE( 0, 100 )) > 30)
                {
                    sub_42793();
                }
            }
        }
    }
    return;
}

void sub_44057(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_44096( (uParam0^)[I]._fU0, uParam1, uParam2 );
    }
    return;
}

void sub_44096(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_SET_ACTION_INTENTION( uParam0, uParam1, uParam2, g_U665 );
    }
    return;
}

void sub_44370(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
        sub_44420( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_44420(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_INVINCIBLE( iParam0->_fU0, uParam1 );
    }
    return;
}

void sub_44610(unknown uParam0)
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_44920(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_1205( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U649, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_45131(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    if (iParam0->_fU92 == 1)
    {
        SET_CAM_ACTIVE_WITH_INTERP( iParam0->_fU0, iParam0->_fU120, iParam0->_fU88, iParam0->_fU100, iParam0->_fU104 );
    }
    else
    {
        SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    }
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_1341( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

void sub_45308(unknown uParam0, boolean bParam1)
{
    sub_2715( ref l_U273 );
    l_U273 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
    SETUP_BULLET_CAMERA_SCENE( l_U273, uParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
    if (bParam1)
    {
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    }
    return;
}

string sub_45549()
{
    return "WOBBLY_SHAKE";
}

void sub_45828(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            return (uParam0^)[I]._fU0;
        }
    }
    return nil;
}

void sub_46307(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

int sub_46405(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if ((sub_42661( (uParam0^), uParam1 )) == 1)
    {
        if (bParam2)
        {
            sub_42729( uParam0, uParam1 );
        }
        return 1;
    }
    return 0;
}

void sub_46765(unknown uParam0)
{
    if (DOES_PED_EXIST( (uParam0^)[0]._fU0 ))
    {
        sub_28463( ref g_U3451[0], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( (uParam0^)[0]._fU0 ), (GET_PED_HEADING( (uParam0^)[0]._fU0 )) + 180.00000000, -1044326283, 7, 3, 2, 0, 0 );
    }
    g_U3450 = 1;
    return;
}

void sub_46989()
{
    sub_215( "P_RELEASE_RS3_ASSETS" );
    sub_2933( "S_CLUB_VIG_16_NC", 1 );
    sub_47061( 1037546172, ref g_U1108 );
    sub_47061( g_U2453, ref g_U1108 );
    sub_47061( 1049690760, ref g_U1108 );
    sub_47061( 2145666447, ref g_U1108 );
    sub_47061( 123419661, ref g_U1108 );
    sub_47061( 230799837, ref g_U1108 );
    sub_47501( 724901397, ref g_U1301 );
    sub_47680( "LEVEL_S_CLUB_CP_06", ref g_U1447 );
    sub_47680( "LEVEL_S_CLUB_CP_09", ref g_U1447 );
    sub_47888( -1313172978, ref g_U1350 );
    sub_47888( -931023773, ref g_U1350 );
    sub_47888( 1476011597, ref g_U1350 );
    sub_47501( -1787162676, ref g_U1301 );
    sub_47501( 1194438308, ref g_U1301 );
    sub_48174( 73, ref g_U1903 );
    return;
}

void sub_47061(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_47173( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_47173(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_47501(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_47173( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_47680(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_47173( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_47888(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_47173( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

void sub_48174(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_47173( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


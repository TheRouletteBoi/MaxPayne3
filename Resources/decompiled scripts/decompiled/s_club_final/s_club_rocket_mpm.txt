void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = -1;
    l_U3 = {64536, 64536, 64536};
    l_U15 = 150;
    l_U16 = 0.02000000;
    l_U24 = 0;
    l_U54 = 0;
    l_U236 = {0, 2, -0.50000000};
    l_U239 = 45;
    l_U241 = 0;
    l_U242 = 0;
    l_U243 = 1500;
    l_U272 = 0;
    l_U310 = 0;
    l_U312 = 1;
    l_U313 = 0;
    l_U349 = 900;
    l_U350 = 270;
    l_U352 = 800;
    l_U371 = 600;
    l_U372 = 150;
    l_U471 = 1;
    l_U482 = 0;
    l_U483 = 0;
    l_U484 = 10261.00000000;
    l_U485 = 0;
    l_U486 = 0;
    l_U560 = 1;
    sub_269( "Script s_club_rocket_mpm.sc is starting up..." );
    l_U310 = 1;
    while (NOT IS_EXITFLAG_SET())
    {
        sub_315();
        sub_8529();
        if (l_U313 == 0)
        {
            sub_8728();
        }
        WAIT( 0 );
    }
    if (g_U892 == 12)
    {
        sub_3000( 1, 0, 1 );
    }
    else
    {
        sub_3000( 0, 0, 0 );
    }
    sub_42392();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_club_rocket_mpm" );
    sub_269( "Script s_club_rocket_mpm.sc is terminating..." );
    return;
}

void sub_269(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    return;
}

void sub_315()
{
    if (g_U892 == 12)
    {
        switch (l_U313)
        {
            case 0:
            if (IS_PED_DEAD( sub_397() ))
            {
                AUDIO_MUSIC_SUSPEND( 5000 );
                l_U313 = 1;
                sub_269( "eFailState = FAIL_WAITING_FOR_PLAYER" );
            }
            else if (sub_540())
            {
                AUDIO_MUSIC_SUSPEND( 5000 );
                l_U313 = 3;
                sub_269( "eFailState = FAIL_CLEANUP_ALL" );
            }
            break;
            case 1:
            if (NOT l_U314)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    STOP_SCRIPT_STREAM( g_U2867 );
                    SET_PLAYBACK_SPEED( g_U2866, 0.00000000 );
                    l_U314 = 1;
                }
            }
            if (((sub_1112( 0 )) == 1) || (sub_1088()))
            {
                l_U313 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_397() )))
            {
                l_U313 = 3;
                sub_269( "eFailState = FAIL_CLEANUP_ALL" );
            }
            break;
            case 3:
            sub_269( "eFailState = FAIL_CLEANUP_ALL" );
            if (NOT l_U314)
            {
                STOP_SCRIPT_STREAM( g_U2867 );
                SET_PLAYBACK_SPEED( g_U2866, 0.00000000 );
                l_U314 = 1;
            }
            if ((NOT (IS_PED_DEAD( sub_397() ))) AND (NOT (IS_PLAYER_DEAD( sub_419() ))))
            {
                SET_PLAYER_CONTROL( sub_419(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_397() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_397(), 0 );
                }
            }
            RESET_ALL_PTFX();
            sub_2755( "CLUB_ROCKET1_SCRIPTED_FAIL_FX" );
            sub_2755( "CLUB_ROCKET3_SCRIPTED_FAIL_FX" );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            sub_3000( 1, 1, 0 );
            REQUEST_SCRIPT_STREAM( "S_CLUB_HELI_RS_STREAM", g_U2867 );
            if (g_U893[13]._fU36 == 1)
            {
                SET_EXITFLAG_FOR_SCRIPT( g_U893[13]._fU32 );
                sub_4203( ref g_U893[13] );
                g_U1101 = 0;
            }
            l_U313 = 4;
            sub_269( "eFailState = FAIL_RESTORE_PLAYER" );
            break;
            case 4:
            sub_269( "eFailState = FAIL_RESTORE_PLAYER" );
            sub_4343( ref l_U274, sub_397() );
            l_U313 = 5;
            sub_269( "eFailState = FAIL_RESTART_CHECKPOINT" );
            break;
            case 5:
            sub_269( "eFailState = FAIL_RESTART_CHECKPOINT" );
            l_U310 = 1;
            l_U313 = 0;
            sub_269( "eFailState = FAIL_IDLE" );
            break;
        }
    }
    return;
}

int sub_397()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_419() );
    }
    return 0;
}

void sub_419()
{
    return GET_PLAYER_ID();
}

int sub_540()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_397() )))
        {
            SET_PED_FORCED_TO_WALK( sub_397(), 0 );
            SET_PLAYER_FORCED_AIM( sub_419(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_419(), 1 );
            if ((IS_PED_VISIBLE( sub_397() )) == 0)
            {
                SET_PED_VISIBLE( sub_397(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_1088()
{
    return g_U648;
}

int sub_1112(int iParam0)
{
    iParam0 = 1;
    switch (l_U242)
    {
        case 0:
        if (NOT (sub_1173( ref l_U244 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_397() )))
            {
                l_U243 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_1283( ref l_U244, l_U243, 1, 1 );
            sub_1419( ref l_U244 );
        }
        if (sub_1539( ref l_U244 ))
        {
            sub_1735( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_397() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_419() )))
            {
                SET_PLAYER_CONTROL( sub_419(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U242 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U242 = 2;
            }
            else
            {
                l_U242 = 3;
            }
        }
        break;
        case 2:
        sub_1735( "NS", "Player will QUIT", 0 );
        sub_2070();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_1735( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_2070();
        return 1;
        break;
    }
    return 0;
}

int sub_1173(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_1283(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_1419(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_1539(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_1735(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_2070()
{
    sub_1735( "NS", "P_PostFailRetryCleanup", 0 );
    sub_2120( ref l_U244 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_419() )))
    {
        SET_PLAYER_CONTROL( sub_419(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U241 = 0;
    l_U241 = l_U241;
    l_U242 = 0;
    return;
}

void sub_2120(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_2755(unknown uParam0)
{
    sub_1735( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    sub_2838( ref l_U273 );
    l_U272 = 1;
    return;
}

void sub_2838(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

void sub_3000(boolean bParam0, unknown uParam1, boolean bParam2)
{
    sub_269( "P_ROCKET_MPM_TEMPLATE" );
    if (bParam0)
    {
        DETACH_PED( g_U2763, 1 );
        DETACH_PED( g_U2749, 1 );
        DETACH_PED( sub_397(), 1 );
        sub_3090( g_U2763 );
        sub_3090( g_U2749 );
        sub_3179( g_U2866 );
        sub_3239( -931023773, 1 );
        sub_3239( 1476011597, 1 );
        sub_3239( 94722883, 1 );
        sub_3462( uParam1 );
        SET_PED_USES_ANIMATED_DEATH( sub_397(), 0 );
        RELEASE_PED_ENTITY_SYNC_POINT( sub_397() );
        if (NOT bParam2)
        {
            sub_3718( ref g_U2868 );
        }
    }
    REMOVE_ALL_PICKUPS_AND_PLACEMENTS_OF_TYPE( 1295434569 );
    ENABLE_HIT_DETECTION( 1 );
    ENABLE_LAST_MAN_STANDING( 1 );
    SET_SILHOUETTE_ACTIVE( 1 );
    SET_PLAYER_COMBAT_TIMER_MODE( 0 );
    PLAYER_SET_AIM_MODE( 0 );
    SET_PED_INVINCIBLE( sub_397(), 0 );
    SET_PED_CONSUMING_AMMO( sub_397(), 1 );
    SET_PED_PROOFS( sub_397(), 0, 0, 0, 0, 0 );
    RESET_PED_MODEL_LOD_DISTANCES( -1311484676 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    SET_PLAYER_FORCED_AIM( sub_419(), 0, 0 );
    STOP_SCRIPT_STREAM( g_U2867 );
    ENABLE_INVENTORY( 1 );
    ALLOW_BULLET_CAMERA_CHEAT( 1 );
    sub_3968( l_U342 );
    sub_4014( sub_397(), 1 );
    return;
}

void sub_3090(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_3179(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

void sub_3239(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_3462(boolean bParam0)
{
    sub_1735( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    if (bParam0)
    {
        ;
    }
    else
    {
        sub_1735( "CCB", "Stopping the Nightclub_RS context...", 0 );
        END_CONTEXT( "Nightclub_RS" );
    }
    sub_1735( "CCB", "Stopping the Nightclub_RS_MPM context...", 0 );
    END_CONTEXT( "Nightclub_RS_MPM" );
    return;
}

void sub_3718(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_3750( ref (uParam0^)[I] );
    }
    return;
}

void sub_3750(int iParam0)
{
    sub_3090( iParam0->_fU0 );
    iParam0->_fU172 = 0;
    return;
}

void sub_3968(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_4014(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_VISIBLE( uParam0, uParam1 );
    }
    else
    {
        sub_269( "MAL_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

void sub_4203(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_4343(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_1735( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_4527( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_5604( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_5896( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_6256( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_5896( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_6256( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_5896( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_6256( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_6541( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_6256( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_6541( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_6256( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_7034( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_7195( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_397(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_1735( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_4527(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_4559( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_4559(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_5604(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_5896(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_6212( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_6212(unknown uParam0)
{
    return;
}

void sub_6256(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_6541(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_6212( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_7034(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_7195(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_4559( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_7267( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_7267(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_8529()
{
    if (l_U560)
    {
        START_WIDGET_GROUP( "FAAAAAAAIL" );
        ADD_WIDGET_INT_SLIDER( "iFailTime", ref l_U349, 0, 3000, 10 );
        ADD_WIDGET_INT_SLIDER( "iHeliExplode2", ref l_U350, 0, 3000, 10 );
        ADD_WIDGET_INT_SLIDER( "iFailTime2", ref l_U371, 0, 3000, 10 );
        ADD_WIDGET_INT_SLIDER( "iHeliExplode2", ref l_U372, 0, 3000, 10 );
        STOP_WIDGET_GROUP();
        l_U560 = 0;
    }
    return;
}

void sub_8728()
{
    int iVar2;
    int I;

    iVar2 = l_U310;
    sub_8745();
    sub_8807();
    sub_9011();
    switch (l_U310)
    {
        case 0: break;
        case 1:
        sub_269( "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA" );
        sub_9898();
        sub_10018();
        sub_10763();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U310 = 2;
        sub_269( "eCheckpointState = CP_INITIAL_REQUEST_ASSETS" );
        break;
        case 2:
        sub_269( "eCheckpointState = CP_INITIAL_REQUEST_ASSETS" );
        sub_10930();
        sub_14740();
        l_U310 = 3;
        sub_269( "eCheckpointState = CP_INITIAL_LOADING_ASSETS" );
        break;
        case 3:
        if ((sub_18459( ref g_U1350 )) AND ((sub_18332( ref g_U1447 )) AND ((sub_18211( ref g_U1301 )) AND (sub_18091( ref g_U1108 )))))
        {
            if ((NOT l_U274._fU0) AND (g_U891 == 12))
            {
                sub_18672();
                l_U312 = 0;
                g_U1074[12] = 1;
                l_U310 = 4;
                sub_269( "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP" );
            }
            else
            {
                l_U310 = 6;
                sub_269( "eCheckpointState = CP_WAITING_TO_ACTIVATE" );
            }
        }
        break;
        case 4:
        sub_269( "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP" );
        REQUEST_SCRIPT_STREAM( "S_CLUB_HELI_RS_STREAM", g_U2867 );
        if (NOT (sub_18993( ref l_U274 )))
        {
            sub_6541( sub_397(), 1194438308, 25000, 0, 0 );
            l_U310 = 5;
            sub_269( "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS" );
        }
        else
        {
            l_U310 = 6;
            sub_269( "eCheckpointState = CP_WAITING_TO_ACTIVATE" );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD( sub_397() )))
        {
            if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_397(), 0, 0 ) ))
            {
                g_U892 = 12;
                if (NOT l_U274._fU0)
                {
                    sub_19441( ref l_U274, g_U892, sub_397(), g_U2216[12], g_U2331[12], g_U2370[12], g_U2409[12], 0 );
                }
                l_U310 = 6;
                sub_269( "eCheckpointState = CP_WAITING_TO_ACTIVATE" );
            }
        }
        break;
        case 6:
        if (g_U1074[12] == 1)
        {
            l_U310 = 7;
            sub_269( "eCheckpointState = CP_INTRO" );
        }
        break;
        case 7:
        if (l_U311)
        {
            sub_23186();
            sub_33754( ref l_U315, "MID_14_NC_concat", 28232, 28249, 29230, 29985, 30002, 32868, 250, 0 );
            if (l_U312 == 1)
            {
                l_U315._fU64 = 0;
                l_U315._fU4 = 2;
            }
            else
            {
                l_U315._fU4 = 7;
            }
        }
        if (sub_34192( ref l_U315 ))
        {
            l_U310 = 8;
            DISPLAY_HUD( 0 );
            sub_269( "eCheckpointState = CP_INTRO" );
        }
        break;
        case 8:
        if (l_U312)
        {
            l_U312 = 0;
        }
        sub_36354();
        sub_36916();
        if (g_U892 != 12)
        {
            g_U892 = 12;
            sub_19441( ref l_U274, g_U892, sub_397(), g_U2216[12], g_U2331[12], g_U2370[12], g_U2409[12], 1 );
        }
        l_U310 = 9;
        sub_269( "eCheckpointState = CP_MPM" );
        break;
        case 9:
        if (l_U311)
        {
            SET_PED_DROPS_WEAPON( g_U2868[0]._fU0, GET_WEAPON_FROM_HAND( g_U2868[0]._fU0, 0, 0 ) );
            sub_8930( ref l_U391, 250 );
            if (IS_DEATH_PANEL_WIPE_ALLOWED())
            {
                DO_SCREEN_FADE_IN( 0 );
            }
            CAMERA_CLEAR_POINT_AT_TARGET();
            sub_37236( 0 );
        }
        if (NOT (IS_PED_DEAD( g_U2868[0]._fU0 )))
        {
            if (sub_1539( ref l_U391 ))
            {
                SELECT_WEAPON_TO_HAND( g_U2868[0]._fU0, GET_WEAPON_FROM_HOLSTER( g_U2868[0]._fU0, 1 ), 0, 1 );
                sub_37545( ref g_U2868[0]._fU0, sub_397(), 54.92492000, -23.04851000, 94.25648000, 2, -256437761, 0, 3 );
            }
        }
        if (sub_1539( ref l_U353 ))
        {
            SET_ADRENALINE_AMT( 1 );
            ACTIVATE_BULLET_TIME( 0, 0.40000000, 1 );
            SET_PLAYER_CONTROL( sub_419(), 1, 0 );
            ENABLE_CROSSHAIR( 1 );
            sub_8930( ref l_U362, l_U349 );
        }
        if (sub_1539( ref l_U362 ))
        {
            l_U310 = 13;
            sub_269( "eCheckpointState = CP_FAIL" );
            break;
        }
        if (IS_EXPLOSION_IN_SPHERE( 2, 71.70867000, 8.00020300, 108.84540000, 60.00000000 ))
        {
            sub_1283( ref l_U362, l_U349, 1, 0 );
            DEACTIVATE_BULLET_TIME( 1, 0 );
            ENABLE_BULLETTIMEMETER( 1 );
            SHAKE_GAMEPLAY_CAM( sub_37897(), 0.15000000 );
            l_U310 = 10;
            sub_269( "eCheckpointState = CP_GAMEPLAY" );
            break;
        }
        break;
        case 10:
        if (l_U311)
        {
            sub_38022( ref g_U893[13] );
            DISPLAY_HUD( 1 );
            SET_INSTANT_FIRE_FORCED( 0 );
            sub_27955( ref g_U2868[3], 0 );
            sub_27837( ref g_U2868[3], 1 );
            sub_37545( ref g_U2868[3]._fU0, sub_397(), 55.43046000, -21.19598000, 94.20029000, 2, -256437761, 0, 3 );
            l_U471 = 0;
            l_U486 = GET_TIME_POSITION_IN_RECORDING( g_U2866 );
            sub_38190( "fHealthDrainLastTime", l_U486 );
            l_U485 = (l_U484 - l_U486) / 250;
            sub_38190( "fHealthDrainIterator", l_U485 );
            sub_36916();
            sub_38285( g_U2868[0]._fU0, 48, 1000 );
            sub_37236( 1 );
        }
        if ((sub_38347( ref g_U2868 )) > 1)
        {
            if (((GET_PED_HEALTH( sub_397() )) > 101) AND ((GET_TIME_POSITION_IN_RECORDING( g_U2866 )) >= (l_U486 + l_U485)))
            {
                sub_269( "Decrementing Health" );
                l_U486 = (GET_TIME_POSITION_IN_RECORDING( g_U2866 )) + l_U485;
                SET_PED_HEALTH( sub_397(), (GET_PED_HEALTH( sub_397() )) - 2, 0 );
            }
        }
        if (NOT l_U483)
        {
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                if ((GET_TIME_POSITION_IN_RECORDING( g_U2866 )) >= l_U484)
                {
                    l_U483 = 1;
                    sub_1735( "MF", "Slowing the helicopter recording so it's still moving when player dies", 0 );
                    SET_PLAYBACK_SPEED( g_U2866, 0.25000000 );
                }
            }
        }
        if ((GET_TIME_POSITION_IN_RECORDING( g_U2866 )) >= l_U484)
        {
            if ((sub_38347( ref g_U2868 )) > 1)
            {
                SET_PED_HEALTH( sub_397(), 0, 0 );
                break;
            }
        }
        if ((NOT l_U549._fU20) AND (NOT l_U549._fU16))
        {
            if ((sub_38347( ref g_U2868 )) == 1)
            {
                sub_8930( ref l_U549, 1000 );
            }
        }
        if (sub_1539( ref l_U549 ))
        {
            PLAY_IMAGEFX( "GAMMA_SATURATION_COLOR_ZOOM", 4, 1 );
            l_U310 = 11;
            sub_269( "eCheckpointState = CP_MPM2_SETUP_ROCKET_CS" );
            break;
        }
        break;
        case 11:
        sub_32501( g_U2868[4], "gmed", "S_CLUB_RS_ROCKET", "LEVEL_S_CLUB_CP_10", "s_club_RS_rocket.act", "/Global/S_CLUB_RS_ROCKET/ROCKET_SEQ" );
        sub_29379( g_U2866, 96, 0, l_U484, 1 );
        l_U310 = 12;
        break;
        case 12:
        if (l_U311)
        {
            CAMERA_USE_HANDY_CAM( 0, 1065353216, 0 );
            sub_39168( ref l_U487, 49.07547000, -32.52962000, 95.75166000, -2.03374500, 0.00000000, 10.77506000, 1110704128, 1000 );
            sub_39168( ref l_U518, 48.99992000, -29.46828000, 95.15492000, 12.21450000, -0.00000100, 7.91928000, 45, 2000 );
            sub_39436( ref l_U487, ref l_U518, 1750, 1, 1 );
            SHAKE_CAM( l_U518._fU0, "LARGE_EXPLOSION_SHAKE", 1 );
            sub_35059( 1, 0, 0, 0 );
            sub_27955( ref g_U2868[4], 0 );
            sub_37236( 0 );
            SET_PED_DROPS_WEAPONS_WHEN_DEAD( g_U2868[4]._fU0, 0 );
            sub_8930( ref l_U400, 67 );
            sub_27186( g_U2868[4], 48.41555000, -31.55784000, 94.20026000, 0.00000000 );
        }
        if (sub_1539( ref l_U400 ))
        {
            sub_27837( ref g_U2868[4], 1 );
        }
        if (sub_39713( ref g_U2868[4], 47, 1 ))
        {
            SET_PED_SHOOTS_AT_COORD( g_U2868[4]._fU0, 54.32319000, -9.11061000, 99.91270000 );
            SHAKE_CAM( l_U518._fU0, "LARGE_EXPLOSION_SHAKE", 1 );
            SET_ADRENALINE_AMT( 1 );
            ACTIVATE_BULLET_TIME( 0, 0.40000000, 1 );
        }
        if (sub_39922( ref l_U518, 1 ))
        {
            SET_PLAYBACK_SPEED( g_U2866, 0.30000000 );
            sub_40091( 0, 0, 0, 8.46051400, 11.49076000, 0 );
            sub_35936( 1, 1 );
            sub_36916();
            sub_8930( ref l_U362, l_U371 );
            SET_PED_PROOFS( sub_397(), 1, 1, 1, 1, 1 );
        }
        if (IS_EXPLOSION_IN_SPHERE( 2, 53.43975000, -11.49051000, 102.88390000, 60.00000000 ))
        {
            sub_1283( ref l_U362, l_U371, 1, 0 );
            AUDIO_MUSIC_SUSPEND( 1000 );
            DISPLAY_HUD( 0 );
            sub_40305( ref g_U2868, 0, -1 );
            if (DOES_PED_EXIST( g_U2868[4]._fU0 ))
            {
                APPLY_FORCE_TO_PED( g_U2868[4]._fU0, 0, 0.00000000, -100.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 7, 1, 1, 1 );
                REMOVE_ALL_PED_WEAPONS( g_U2868[4]._fU0 );
            }
            l_U310 = 14;
            sub_269( "eCheckpointState = CP_OUTRO_REACTION" );
            break;
        }
        if (NOT l_U482)
        {
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                if ((GET_TIME_POSITION_IN_RECORDING( g_U2866 )) >= 14022.00000000)
                {
                    l_U482 = 1;
                    sub_269( "Pausing the vehicle recording." );
                    PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
                }
            }
        }
        if (NOT IS_BULLET_CAMERA_ACTIVE())
        {
            if (sub_1539( ref l_U362 ))
            {
                l_U310 = 13;
                sub_269( "eCheckpointState = CP_FAIL" );
                break;
            }
        }
        break;
        case 13:
        if (l_U311)
        {
            ENABLE_CROSSHAIR( 0 );
            sub_35059( 1, 0, 0, 1 );
            SET_ADRENALINE_AMT( 1 );
            if (l_U471)
            {
                sub_39168( ref l_U409, 67.19000000, 8.05000000, 103.29000000, 35.84000000, 0.00001600, -83.70000000, 45, 470 );
                sub_39168( ref l_U440, 46.77000000, -27.14000000, 95.11000000, 9.32000000, 0.00000000, -49.40000000, 45, 50 );
                sub_8930( ref l_U382, l_U350 );
                sub_40961( ref l_U409 );
                sub_41078( "CLUB_ROCKET1_SCRIPTED_FAIL_FX", 0 );
            }
            else
            {
                sub_39168( ref l_U409, 44.96000000, -9.64000000, 99.34000000, 8.12000000, -0.00000900, -84.37000000, 45, 370 );
                sub_39168( ref l_U440, 48.57216000, -30.89046000, 95.05080000, 8.08954800, 0.00000200, -12.88468000, 45, 150 );
                sub_8930( ref l_U382, l_U372 );
                sub_40961( ref l_U409 );
                sub_41078( "CLUB_ROCKET3_SCRIPTED_FAIL_FX", 0 );
            }
            AUDIO_MUSIC_SUSPEND( 500 );
        }
        if (sub_1539( ref l_U382 ))
        {
            sub_38285( sub_397(), 48, 1000 );
            DETACH_PED( sub_397(), 1 );
            ACTIVATE_BULLET_TIME( 0, 0.40000000, 1 );
            SET_VEHICLE_CAN_BE_DAMAGED( g_U2866, 1 );
            SET_VEHICLE_PROOFS( g_U2866, 0, 0, 0, 0, 0 );
            EXPLODE_VEHICLE( g_U2866, 1, 0 );
            sub_41557( sub_37897(), 0.85000000 );
            for ( I = 0; I < g_U2868; I++ )
            {
                if (NOT (IS_PED_DEAD( g_U2868[I]._fU0 )))
                {
                    CLEAR_PED_TASKS( g_U2868[I]._fU0 );
                    TASK_STAND_STILL( g_U2868[I]._fU0, -1 );
                    SET_BLOCKING_OF_PED_TARGETTING( g_U2868[I]._fU0, 1 );
                }
            }
        }
        if (NOT l_U440._fU32)
        {
            if ((ISEQ_QUERY_ENTITY_STATE( 94722883, "player", 6 )) || (ISEQ_QUERY_ENTITY_STATE( 94722883, "player", 5 )))
            {
                APPLY_FORCE_TO_PED( sub_397(), 1, 0.00000000, 0.00000000, -200.00000000, 0.00000000, 0.00000000, 0.10000000, 8, 1, 1, 0 );
                sub_40961( ref l_U440 );
                WAIT( 0 );
                sub_41557( sub_41838(), 1.70000000 );
                SET_PED_TO_RAGDOLL( sub_397(), 1000, 10000, 0, 0, 0, 1, -1056964608 );
                sub_4014( g_U2763, 0 );
                sub_4014( g_U2749, 0 );
                sub_4014( sub_397(), 0 );
            }
        }
        if (sub_39922( ref l_U440, 1 ))
        {
            l_U313 = 1;
            l_U310 = 0;
        }
        break;
        case 14:
        if (l_U311)
        {
            sub_35059( 1, 0, 0, 1 );
            DEACTIVATE_BULLET_TIME( 1, 0 );
            ENABLE_CROSSHAIR( 0 );
            SHAKE_GAMEPLAY_CAM( "MEDIUM_EXPLOSION_SHAKE", 0.80000000 );
            sub_38285( sub_397(), 47, 1000 );
            sub_8930( ref l_U373, 2500 );
            sub_8930( ref l_U472, 500 );
        }
        if (sub_1539( ref l_U472 ))
        {
            sub_8930( ref l_U472, 500 );
            SHAKE_GAMEPLAY_CAM( "MEDIUM_EXPLOSION_SHAKE", 0.40000000 );
        }
        if (sub_1539( ref l_U373 ))
        {
            l_U310 = 0;
            g_U1101 = 1;
            l_U310 = 15;
            sub_269( "eCheckpointState = CP_FINISHED" );
        }
        break;
        case 15:
        if (g_U1100)
        {
            sub_38285( sub_397(), 58, 1000 );
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U310 = 0;
            sub_269( "eCheckpointState = CP_IDLE" );
        }
        break;
    }
    if (l_U310 != iVar2)
    {
        l_U311 = 1;
    }
    else
    {
        l_U311 = 0;
    }
    return;
}

void sub_8745()
{
    if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
    {
        SET_VEHICLE_ENGINE_ON( g_U2866, 1, 1 );
        SET_HELI_BLADES_FULL_SPEED( g_U2866 );
    }
    return;
}

void sub_8807()
{
    if (NOT l_U6._fU20)
    {
        sub_1735( "MF", "INITIAL HELI RAIL CAM SHAKE...", 0 );
        SHAKE_GAMEPLAY_CAM( sub_8872(), l_U16 );
        sub_8930( ref l_U6, l_U15 );
    }
    if (sub_1539( ref l_U6 ))
    {
        SHAKE_GAMEPLAY_CAM( sub_8872(), l_U16 );
        sub_8930( ref l_U6, l_U15 );
    }
    return;
}

string sub_8872()
{
    return "MEDIUM_EXPLOSION_SHAKE";
}

void sub_8930(unknown uParam0, unknown uParam1)
{
    sub_1283( uParam0, uParam1, 1, 0 );
    sub_1419( uParam0 );
    return;
}

void sub_9011()
{
    switch (l_U558)
    {
        case 0:
        sub_1735( "CCB", "eDueProcess - STATE_CHALLENGE_IDLE", 0 );
        l_U558 = 1;
        break;
        case 1:
        if (l_U310 >= 9)
        {
            if (IS_PED_DEAD( g_U2868[0]._fU0 ))
            {
                if (l_U310 >= 10)
                {
                    sub_1735( "CCB", "The player killed the rocket ped...", 0 );
                    SCRIPT_VAR_HASH_SET_INT( -693262624, 1 );
                    sub_1735( "CCB", "eDueProcess - STATE_CHALLENGE_COMPLETE", 0 );
                    l_U558 = 2;
                }
            }
            else if (l_U310 >= 10)
            {
                sub_1735( "CCB", "The RS MPM is finished...", 0 );
                sub_1735( "CCB", "eDueProcess - STATE_CHALLENGE_COMPLETE", 0 );
                l_U558 = 2;
            }
        }
        break;
        case 2: break;
    }
    switch (l_U559)
    {
        case 0:
        sub_1735( "CCB", "eNoTimeLikeThePresent - STATE_CHALLENGE_IDLE", 0 );
        l_U559 = 1;
        break;
        case 1:
        if (l_U310 >= 9)
        {
            if (l_U310 >= 14)
            {
                sub_1735( "CCB", "The helicopter railshooter was completed...", 0 );
                SCRIPT_VAR_HASH_SET_INT( 743206640, 1 );
                sub_1735( "CCB", "eNoTimeLikeThePresent - STATE_CHALLENGE_COMPLETE", 0 );
                l_U559 = 2;
            }
        }
        break;
        case 2: break;
    }
    return;
}

void sub_9898()
{
    sub_269( "P_INITIALIZE_SCRIPT_DATA" );
    l_U482 = 0;
    l_U483 = 0;
    l_U314 = 0;
    l_U471 = 1;
    l_U485 = 0;
    l_U486 = 0;
    sub_1283( ref l_U549, 666, 1, 0 );
    l_U481 = 0;
    l_U351 = 0;
    l_U311 = 1;
    return;
}

void sub_10018()
{
    sub_1735( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U558 = 0;
    l_U559 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( -693262624 )))
    {
        sub_1735( "CCB", "Creating the DueProcess script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( -693262624 );
        if (SCRIPT_VAR_HASH_EXISTS( -693262624 ))
        {
            sub_1735( "CCB", "The DueProcess script variable was successfully created...", 0 );
        }
        else
        {
            sub_1735( "CCB", "The DueProcess script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
        sub_1735( "CCB", "The DueProcess script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( -693262624, 0 );
    }
    if (NOT (SCRIPT_VAR_HASH_EXISTS( 743206640 )))
    {
        sub_1735( "CCB", "Creating the HeliRSComplete script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( 743206640 );
        if (SCRIPT_VAR_HASH_EXISTS( 743206640 ))
        {
            sub_1735( "CCB", "The HeliRSComplete script variable was successfully created...", 0 );
        }
        else
        {
            sub_1735( "CCB", "The HeliRSComplete script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
        sub_1735( "CCB", "The HeliRSComplete script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( 743206640, 0 );
    }
    return;
}

void sub_10763()
{
    sub_269( "P_SET_STATIC_DATA" );
    return;
}

void sub_10930()
{
    sub_269( "P_REQUEST_ROCKET_MPM_PERSISTENT_ASSETS start" );
    sub_11001( 1037546172, ref g_U1108 );
    sub_11001( g_U2453, ref g_U1108 );
    sub_11001( 1049690760, ref g_U1108 );
    sub_11001( -1311484676, ref g_U1108 );
    sub_12398( 1194438308, ref g_U1301 );
    sub_12398( 1001413062, ref g_U1301 );
    sub_11001( -784774327, ref g_U1108 );
    sub_13389( "LEVEL_S_CLUB_CP_06", ref g_U1447 );
    sub_13389( "LEVEL_S_CLUB_CP_10", ref g_U1447 );
    if ((g_U891 != 12) AND (l_U312 == 1))
    {
        sub_14434( "mid_14_nc_concat", 0 );
    }
    sub_269( "P_REQUEST_ROCKET_MPM_PERSISTENT_ASSETS end" );
    return;
}

void sub_11001(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_11036( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_11167( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_11036(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_11167( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_11167( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_11167( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_11815( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_11167( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_11167( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_11167(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_11187( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_11187(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_11815(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_12398(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_12419( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_12551( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_12419(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_12551( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_12551( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_12551( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_11815( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_12551( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_12551( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_12551(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_11187( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_13389(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_13410( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_13547( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_13410(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_13547( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_13547( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_13547( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_11815( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_13547( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_13547( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_13547(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_11187( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_14434(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_14740()
{
    sub_269( "P_REQUEST_ROCKET_MPM_NONPERSISTENT_ASSETS start" );
    sub_14814( -1313172978, ref g_U1350 );
    sub_14814( -931023773, ref g_U1350 );
    sub_14814( 1476011597, ref g_U1350 );
    sub_14814( 94722883, ref g_U1350 );
    sub_16894( "S_CLUB_RS_ROCKET", "LEVEL_S_CLUB_CP_10", "/LEVEL/S_CLUB/s_club_RS_rocket.act", "/Global/S_CLUB_RS_ROCKET/ROCKET_SEQ", 0 );
    sub_16989( 96, ref g_U1903 );
    sub_269( "P_REQUEST_ROCKET_MPM_NONPERSISTENT_ASSETS end" );
    return;
}

void sub_14814(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_14849( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_15001( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_14849(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_15001( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_15001( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_15001( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_15001( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_11815( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_11815( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_15001( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_15001( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_15001(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_11187( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_16894(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    if ((I_SEQUENCE_IS_LOADED( uParam0 )) == 0)
    {
        I_SEQUENCE_SETUP( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            while ((I_SEQUENCE_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_16989(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_17010( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_17148( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_17010(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being requested!!!", 0 );
                sub_17148( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is already loading!!!", 0 );
                sub_17148( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
                {
                    sub_17148( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The VEHICLE_RECORDING asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = -1;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_11815( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being removed!!!", 0 );
                sub_17148( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_17148( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The VEHICLE_RECORDING - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_17148(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_11187( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The VEHICLE_RECORDING asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_18091(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_18211(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_18332(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_18459(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

void sub_18672()
{
    sub_269( "P_SETUP_RS_WEATHER_AND_TOD" );
    RELEASE_TIME_OF_DAY();
    SET_WEATHER_TYPE_NOW_PERSIST( "EXTRASUNNY" );
    FREEZE_TIME_OF_DAY( 22, 0 );
    return;
}

int sub_18993(unknown uParam0)
{
    sub_1735( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_4343( uParam0, sub_397() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_19441(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_1735( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_1735( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_7195( iParam1 );
        sub_19700( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_20151( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_20151( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_20383( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_20151( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_20383( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_20383( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_20151( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_20383( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_20383( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_20383( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_20151( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_20383( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_20383( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_20383( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_20383( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_21941( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_1735( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_19700(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_4559( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_1735( "TEH", "Ending context", 0 );
        sub_1735( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_20151(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_20383(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_21941(int iParam0)
{
    sub_6212( "CHECKPOINT DATA" );
    sub_21980( iParam0->_fU4 );
    sub_22003( iParam0->_fU16 );
    sub_22003( iParam0->_fU20 );
    sub_22003( iParam0->_fU24 );
    sub_22046( iParam0->_fU28 );
    sub_22046( iParam0->_fU56 );
    sub_22046( iParam0->_fU60 );
    sub_22046( iParam0->_fU64 );
    sub_22046( iParam0->_fU68 );
    sub_22046( iParam0->_fU72 );
    sub_22046( iParam0->_fU76 );
    sub_22046( iParam0->_fU80 );
    sub_22046( iParam0->_fU84 );
    sub_22046( iParam0->_fU88 );
    sub_22046( iParam0->_fU92 );
    sub_22003( iParam0->_fU32 );
    sub_22046( iParam0->_fU36 );
    sub_22046( iParam0->_fU40 );
    sub_22046( iParam0->_fU44 );
    sub_22003( iParam0->_fU136 );
    sub_22251( iParam0->_fU140 );
    sub_22046( iParam0->_fU52 );
    sub_6212( "---nRightHolsterAttachmentEnabled: " );
    sub_22046( iParam0->_fU96 );
    sub_6212( "---nRightHolsterAttachmentToggled: " );
    sub_22046( iParam0->_fU100 );
    sub_6212( "---nLeftHolsterAttachmentEnabled: " );
    sub_22046( iParam0->_fU104 );
    sub_6212( "---nLeftHolsterAttachmentToggled: " );
    sub_22046( iParam0->_fU108 );
    sub_6212( "---nRifleHolsterAttachmentEnabled: " );
    sub_22046( iParam0->_fU112 );
    sub_6212( "---nRifleHolsterAttachmentToggled: " );
    sub_22046( iParam0->_fU116 );
    sub_6212( "---nRightHandAttachmentEnabled: " );
    sub_22046( iParam0->_fU120 );
    sub_6212( "---nRightHandAttachmentToggled: " );
    sub_22046( iParam0->_fU124 );
    sub_6212( "---nLeftHandAttachmentEnabled: " );
    sub_22046( iParam0->_fU128 );
    sub_6212( "---nLeftHandAttachmentToggled: " );
    sub_22046( iParam0->_fU132 );
    sub_22046( l_U1 );
    sub_22046( 144 );
    return;
}

void sub_21980(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_22003(unknown uParam0)
{
    return;
}

void sub_22046(unknown uParam0)
{
    return;
}

void sub_22251(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_23186()
{
    char[32] cVar2;
    int I;

    StrCopy( ref cVar2, "AIT_EXPERT", 32 );
    sub_23285( ref g_U2868[0], 48.43000000, -26.53000000, 94.26138000, -45.00000000, 1001413062, 1194438308, 0, cVar2, 3.00000000, 300.00000000, -1311484676, 1, 0, -1493878932, g_U668 );
    sub_23285( ref g_U2868[1], 54.52388000, -28.18151000, 94.20029000, 270.00000000, 1194438308, 1194438308, 2, cVar2, 3, 300, -1311484676, 0, 0, 1701904222, g_U668 );
    sub_23285( ref g_U2868[2], 51.91277000, -18.36278000, 94.25648000, 270.00000000, 1194438308, 1194438308, 2, cVar2, 3, 300, -1311484676, 0, 0, -2068017889, g_U668 );
    sub_23285( ref g_U2868[3], 41.25328000, -34.63369000, 92.21139000, 180.00000000, 1194438308, 1194438308, 2, cVar2, 3, 300, -1311484676, 0, 0, 1741079978, g_U668 );
    sub_23285( ref g_U2868[4], 41.22491000, -33.56966000, 91.51040000, 180.00000000, 1001413062, 1194438308, 0, cVar2, 3.00000000, 300.00000000, -1311484676, 1, 0, -1792084335, g_U668 );
    for ( I = 0; I < g_U2868; I++ )
    {
        g_U2868[I]._fU4._fU48 = 1;
    }
    sub_23798( ref g_U2868, "MPM", ref l_U343, 1, 0, 0 );
    sub_26981( ref g_U2868, 1, 0, -1 );
    sub_27106( ref g_U2868, 0, -1 );
    sub_27289( ref g_U2868, 1, 0, -1 );
    sub_27419( ref g_U2868, 0, -1 );
    sub_27628( ref g_U2868, 3, 1 );
    sub_27837( ref g_U2868[3], 0 );
    sub_27955( ref g_U2868[3], 1 );
    sub_27837( ref g_U2868[4], 0 );
    sub_27955( ref g_U2868[4], 1 );
    for ( I = 0; I < g_U2868; I++ )
    {
        if (NOT (IS_PED_DEAD( g_U2868[I]._fU0 )))
        {
            if ((I == 4) || (I == 0))
            {
                SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HOLSTER( g_U2868[I]._fU0, 1 ), 80 );
            }
            else
            {
                SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( g_U2868[I]._fU0, 0, 0 ), 80 );
            }
        }
    }
    SET_PED_MODEL_LOD_DISTANCES( -1311484676, 10.00000000, 80.00000000 );
    return;
}

void sub_23285(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29)
{
    iParam0->_fU56 = {uParam1};
    iParam0->_fU68 = uParam4;
    iParam0->_fU72 = uParam5;
    iParam0->_fU76 = uParam6;
    iParam0->_fU80 = uParam7;
    iParam0->_fU84 = {uParam8};
    iParam0->_fU116 = uParam16;
    iParam0->_fU120 = uParam17;
    iParam0->_fU124 = uParam18;
    iParam0->_fU128 = uParam19;
    iParam0->_fU132 = uParam20;
    iParam0->_fU136 = uParam21;
    iParam0->_fU140 = {uParam22};
    return;
}

int sub_23798(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4, boolean bParam5)
{
    int I;

    sub_6212( uParam1 );
    if (NOT bParam4)
    {
        sub_23828( uParam2, uParam3, 1 );
        for ( I = 0; I < (uParam0^); I++ )
        {
            sub_24025( ref (uParam0^)[I] );
            sub_26301( (uParam0^)[I]._fU0, uParam2 );
        }
        sub_26579( uParam0, uParam1 );
    }
    else if ((uParam0^)[0]._fU172 == 0)
    {
        sub_23828( uParam2, uParam3, 1 );
    }
    if ((uParam0^)[0]._fU172 < (uParam0^))
    {
        sub_24025( ref (uParam0^)[(uParam0^)[0]._fU172] );
        sub_26301( (uParam0^)[(uParam0^)[0]._fU172]._fU0, uParam2 );
        (uParam0^)[0]._fU172++;
    }
    else
    {
        sub_26579( uParam0, uParam1 );
        return 1;
    }
    if (bParam5)
    {
        sub_26845( uParam0, 1, 0, -1 );
    }
    return 0;
}

void sub_23828(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_24025(int iParam0)
{
    unknown uVar3;

    sub_269( "MAL_EnemyStructCreate starting" );
    sub_24140( iParam0 + 0, iParam0 + 4, iParam0->_fU56, iParam0->_fU68, iParam0->_fU72, iParam0->_fU80, iParam0->_fU84, iParam0->_fU116, iParam0->_fU120, iParam0->_fU124, 1 );
    if (NOT (ARE_STRINGS_EQUAL( iParam0 + 140, ref g_U668 )))
    {
        sub_6212( iParam0 + 140 );
        sub_25775( iParam0 + 0, iParam0 + 140 );
    }
    if (iParam0->_fU128)
    {
        sub_269( "MAL_EnemyStructCreate giving ped backup weapon" );
        sub_25904( iParam0->_fU0, iParam0->_fU76, 25000, 1, 0 );
    }
    if (iParam0->_fU132)
    {
        uVar3 = GET_WEAPON_FROM_HAND( iParam0->_fU0, 0, 0 );
        sub_26101( ref uVar3, 14, 1 );
    }
    if (iParam0->_fU136 != 0)
    {
        sub_26227( iParam0 + 0, iParam0->_fU136 );
    }
    return iParam0->_fU0;
}

void sub_24140(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19)
{
    sub_24165( uParam1, uParam2, uParam5, uParam18, 7, 3, 2, 0, 0 );
    (uParam0^) = sub_24267( uParam0, uParam1, 1, 1, uParam19 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
    }
    sub_25324( (uParam0^), uParam6, 25000, 0, 0 );
    sub_25509( uParam0, ref uParam8, uParam16, uParam17, 1 );
    sub_25673( uParam0, uParam7 );
    return (uParam0^);
}

void sub_24165(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

void sub_24267(unknown uParam0, unknown uParam1, boolean bParam2, boolean bParam3, unknown uParam4)
{
    sub_3090( (uParam0^) );
    (uParam0^) = sub_24287( uParam1 );
    if (bParam3)
    {
        while (NOT (DOES_PED_EXIST( (uParam0^) )))
        {
            WAIT( 0 );
            sub_269( "MAL_CreatePed waiting for ped to exist" );
        }
    }
    SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), uParam4 );
    sub_25201( uParam0, 32, 0 );
    SET_PED_IGNORE_LOS_CHECKS( (uParam0^), NOT bParam2 );
    SET_PED_EMOTION_STATE( (uParam0^), 1 );
    return (uParam0^);
}

void sub_24287(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_24457( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_24926( iParam0->_fU40 );
    sub_25006( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_24457(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_6212( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_24926(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_25006(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_25201(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_ATTRIBUTES( (uParam0^), uParam1, uParam2 );
    }
    return;
}

void sub_25324(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    unknown Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                sub_269( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

void sub_25509(unknown uParam0, unknown uParam1, float fParam2, float fParam3, boolean bParam4)
{
    sub_269( "MAL_SetTemplateAndRanges" );
    sub_6212( uParam1 );
    sub_22003( fParam2 );
    sub_22003( fParam3 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    if (NOT bParam4)
    {
        sub_25201( uParam0, 1, 0 );
    }
    return;
}

void sub_25673(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam1 );
    }
    return;
}

void sub_25775(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_ROOM_FOR_PED_BY_NAME( (uParam0^), uParam1 );
    }
    return;
}

void sub_25904(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    int Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
            while (Result == 0)
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
                sub_269( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

void sub_26101(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (GET_DOES_WEAPON_EXIST( (uParam0^) ))
    {
        if (bParam2)
        {
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
        else
        {
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
    }
    return;
}

void sub_26227(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PERSISTENT_PED_VARIATION_ENUM( (uParam0^), uParam1 );
    }
    return;
}

void sub_26301(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_6212( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_23828( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_23828( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_26579(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I]._fU0, ref cVar5 );
        }
    }
    return;
}

void sub_26845(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
        sub_26895( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_26895(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_FREEZE_PROCESSING( iParam0->_fU0, uParam1 );
    }
    return;
}

void sub_26981(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
        sub_27031( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_27031(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        FREEZE_PED_POSITION( iParam0->_fU0, uParam1 );
    }
    return;
}

void sub_27106(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
        sub_27158( (uParam0^)[I] );
    }
    return;
}

void sub_27158(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43)
{
    sub_27186( uParam0, uParam0._fU56, uParam0._fU68 );
    return;
}

void sub_27186(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47)
{
    if (NOT (IS_PED_DEAD( uParam0._fU0 )))
    {
        SET_PED_COORDS( uParam0._fU0, uParam44, 1 );
        SET_PED_HEADING( uParam0._fU0, uParam47 );
    }
    return;
}

void sub_27289(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
        sub_27343( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_27343(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44)
{
    if (NOT (IS_PED_DEAD( uParam0._fU0 )))
    {
        SET_PED_AS_ONE_SHOT_KILL( uParam0._fU0, uParam44 );
    }
    return;
}

void sub_27419(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
        sub_27474( ref (uParam0^)[I]._fU0, sub_397() );
        sub_27546( ref (uParam0^)[I]._fU0, sub_397() );
    }
    return;
}

void sub_27474(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_27546(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_27628(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_27664( ref (uParam0^)[I], uParam1, uParam2 );
    }
    return;
}

void sub_27664(int iParam0, unknown uParam1, unknown uParam2)
{
    sub_27682( iParam0 + 0, uParam1, uParam2 );
    return;
}

void sub_27682(unknown uParam0, unknown uParam1, unknown uParam2)
{
    sub_27696( uParam0, uParam1 );
    sub_27746( uParam0, uParam2 );
    return;
}

void sub_27696(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_ALERTNESS( (uParam0^), uParam1 );
    }
    return;
}

void sub_27746(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_EMOTION_STATE( (uParam0^), uParam1 );
    }
    return;
}

void sub_27837(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_VISIBLE( iParam0->_fU0, uParam1 );
    }
    else
    {
        sub_269( "MAL_ES_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

void sub_27955(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_INVINCIBLE( iParam0->_fU0, uParam1 );
    }
    return;
}

int sub_28232()
{
    return 1;
}

void sub_28249()
{
    I_SEQUENCE_UNREGISTER_ENTITY( "S_CLUB_VIG_10_NC", "heli_max" );
    REMOVE_ALL_PED_WEAPONS( sub_397() );
    CUTSCENE_REGISTER_ISEQ( 94722883 );
    CAMERA_POINT_AT_COORD( 50.00000000, -24.60000000, 94.51000000, 0 );
    if (NOT (IS_PED_DEAD( g_U2777 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2777, "Giov_Club_B", 0 );
    }
    if (DOES_OBJECT_EXIST( l_U342 ))
    {
        REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( l_U342, "W_GR_RPG7_Aa_H", 1 );
    }
    if (NOT (IS_PED_DEAD( g_U2749 )))
    {
        DETACH_PED( g_U2749, 1 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2749, "Pass_Club_H", 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE( g_U2749, g_U2866, 0, -0.61500000, 1.48000000, 1.55500000, 0.00000000, 0.00000000, 1, 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U2749, "/Global/S_CLUB_VIG_11_PAS/SEQ_START/PASSOS/IDLE" );
    }
    if (NOT (IS_PED_DEAD( g_U2763 )))
    {
        DETACH_PED( g_U2763, 1 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2763, "Marc_Casu", 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE( g_U2763, g_U2866, 0, 0.67600000, 1.52300000, 1.50300000, 0.00000000, 0.00000000, 1, 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U2763, "/Global/S_CLUB_VIG_11_MAR/SEQ_START/MARCELLO/IDLE" );
    }
    if (NOT (IS_PED_DEAD( sub_397() )))
    {
        ISEQ_REGISTER_ENTITY( 94722883, "player", sub_397(), 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE( sub_397(), g_U2866, 0, 1.15000000, -0.50000000, -1.22000000, -90.00000000, 0.00000000, 1, 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
    {
        FREEZE_VEHICLE_POSITION( g_U2866, 1 );
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U2866, "heli_luxury", 0 );
    }
    if (NOT (IS_PED_DEAD( g_U2868[0]._fU0 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2868[0]._fU0, "G_CS_NCSM_E1", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U2868[0]._fU0, 0, 0 ), "W_SP_RPG7_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U2868[0]._fU0, g_U2868[0]._fU56, g_U2868[0]._fU68 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U2868[0]._fU0, "/Global/AMED/AMED_Root/AMED_INITIALIZE_IDLE" );
    }
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U3269._fU0, g_U3269._fU4 ), "p_clb_door_ext_aa", 0 );
    CUTSCENE_FORCE_GAMEPLAY_HEADING_PITCH_UPDATE();
    SET_WEATHER_TYPE_NOW_PERSIST( "EXTRASUNNY" );
    FREEZE_TIME_OF_DAY( 22, 0 );
    return;
}

void sub_29230()
{
    if (l_U315._fU52)
    {
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        DETACH_PED( sub_397(), 1 );
        sub_1735( "MF", "Music Cue: 6.10", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_4", "", 0, 0, 0, -1082130432, 0 );
        sub_29379( g_U2866, 96, 0.00000000, 0, 0 );
        SET_CAMERA_OVERRIDE( "S_CLUB_HELI_HANG_CAM_AIM", "S_CLUB_HELI_HANG_CAM_AIM", 0, 1, 1 );
    }
    if (NOT l_U481)
    {
        if (GET_CUTSCENE_TIME_MS() > 5270)
        {
            sub_1735( "MF", "Music Cue: 6.11 ", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_1_2_4", "NIGHTCLUB_01_1_2_4", 0, 5000, -1, -1082130432, 0 );
            l_U481 = 1;
        }
    }
    if (NOT g_U3089)
    {
        if (GET_CUTSCENE_TIME_MS() > 12800)
        {
            sub_1735( "MF", "Swapping Max's Coat to heli-hang variant.", 0 );
            APPLY_PLAYER_PRELOAD_VARIATION( sub_397(), 1 );
            g_U3089 = 1;
        }
    }
    return;
}

void sub_29379(unknown uParam0, unknown uParam1, unknown uParam2, float fParam3, boolean bParam4)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
            STOP_PLAYBACK_RECORDED_VEHICLE( uParam0 );
        }
    }
    sub_29430( uParam1, 1 );
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        START_PLAYBACK_RECORDED_VEHICLE( uParam0, uParam1 );
        SET_PLAYBACK_SPEED( uParam0, uParam2 );
        if (fParam3 > 0.00000000)
        {
            SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE( uParam0, fParam3 );
        }
    }
    if (bParam4)
    {
        while ((NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))) AND (NOT (IS_VEHICLE_DEAD( uParam0 ))))
        {
            sub_6212( "Waiting for vehicle to start playing recorded path." );
            WAIT( 0 );
        }
    }
    return;
}

void sub_29430(unknown uParam0, int iParam1)
{
    REQUEST_VEHICLE_RECORDING( uParam0 );
    if (iParam1 == 1)
    {
        while ((HAS_VEHICLE_RECORDING_BEEN_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

int sub_29985()
{
    return 1;
}

void sub_30002()
{
    sub_1735( "MF", "Music Cue: 7.1 ", 0 );
    AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_1_2_4", "NIGHTCLUB_01_1_2_4", 0, 0, -1, -1082130432, 0 );
    sub_30121();
    SET_WEATHER_TYPE_NOW_PERSIST( "EXTRASUNNY" );
    FREEZE_TIME_OF_DAY( 22, 0 );
    if (NOT (I_SEQUENCE_QUERY_STATE( "S_CLUB_RS_ROCKET", 3 )))
    {
        sub_32501( g_U2868[0], "gmed", "S_CLUB_RS_ROCKET", "LEVEL_S_CLUB_CP_10", "s_club_RS_rocket.act", "/Global/S_CLUB_RS_ROCKET/ROCKET_SEQ" );
    }
    sub_26981( ref g_U2868, 0, 0, -1 );
    CAMERA_SNAP_POINT_AT_COORD( 53.00000000, -24.60000000, 94.51000000 );
    PLAY_SCRIPT_STREAM_FROM_VEHICLE( g_U2866, g_U2867 );
    if (NOT g_U3089)
    {
        APPLY_PLAYER_PRELOAD_VARIATION( sub_397(), 1 );
        g_U3089 = 1;
    }
    g_U1103 = 1;
    FREEZE_VEHICLE_POSITION( g_U2866, 0 );
    CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_CP_10", "B_OUT_MID_14_NC_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
    return;
}

void sub_30121()
{
    sub_1735( "MF", "P_SETUP_GAMEPLAY - START", 0 );
    if (NOT l_U312)
    {
        sub_30190( 96, 0.00000000, 0 );
        sub_30883();
    }
    sub_31694();
    sub_1735( "MF", "P_SETUP_GAMEPLAY - END", 0 );
    return;
}

void sub_30190(unknown uParam0, unknown uParam1, unknown uParam2)
{
    sub_269( "P_SETUP_HELI" );
    if (NOT (DOES_VEHICLE_EXIST( g_U2866 )))
    {
        g_U2866 = sub_30262( 1049690760, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME( uParam0, uParam2 ), 0.00000000, 1, 0, 1 );
    }
    else if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
    {
        SET_VEHICLE_COORDS( g_U2866, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME( uParam0, uParam2 ) );
    }
    if ((NOT (IS_VEHICLE_DEAD( g_U2866 ))) AND (DOES_VEHICLE_EXIST( g_U2866 )))
    {
        SET_VEHICLE_ENGINE_ON( g_U2866, 1, 1 );
        SET_HELI_BLADES_FULL_SPEED( g_U2866 );
        SILENCE_VEHICLE( g_U2866, 1 );
        SET_VEHICLE_AS_MISSION_VEHICLE( g_U2866 );
        SET_VEHICLE_EXTRA( g_U2866, 5, 1 );
        SET_VEHICLE_INTERIORLIGHT( g_U2866, 1 );
        SET_VEHICLE_DOOR_OPEN( g_U2866, 3 );
        SET_VEHICLE_HEALTH( g_U2866, 600 );
        SET_VEHICLE_ENGINE_HEALTH( g_U2866, 600.00000000 );
        SET_VEHICLE_PETROL_TANK_HEALTH( g_U2866, 300.00000000 );
        SET_VEHICLE_CAN_BE_DAMAGED( g_U2866, 0 );
        SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED( g_U2866, 1 );
        SET_VEHICLE_PROOFS( g_U2866, 0, 1, 1, 1, 1 );
        sub_29379( g_U2866, uParam0, uParam1, uParam2, 0 );
        PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
        if (NOT (DOES_OBJECT_EXIST( l_U23 )))
        {
            l_U23 = CREATE_OBJECT( 230799837, 0.00000000, 1.00000000, 0.00000000, 0, 0 );
            ATTACH_OBJECT_TO_VEHICLE( l_U23, g_U2866, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        }
    }
    ALLOW_BULLET_CAMERA_CHEAT( 0 );
    return;
}

void sub_30262(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
        sub_24457( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

void sub_30883()
{
    sub_30928( ref g_U2736, 55.11000000, -24.06000000, 94.27000000, 0.00000000, 817667075, 26, 6, 0, 0, 1 );
    sub_30928( ref g_U2750, 54.04000000, -24.06000000, 94.27000000, 0.00000000, -383356854, 26, 6, 0, 0, 1 );
    if (NOT (ISEQ_IS_LOADED( -931023773 )))
    {
        ISEQ_REQUEST( -931023773 );
    }
    if (NOT (ISEQ_IS_LOADED( 1476011597 )))
    {
        ISEQ_REQUEST( 1476011597 );
    }
    if (NOT (DOES_PED_EXIST( g_U2763 )))
    {
        g_U2763 = sub_24287( ref g_U2750 );
    }
    if (NOT (IS_PED_DEAD( g_U2763 )))
    {
        sub_31189( ref g_U2763 );
        SET_PED_INVINCIBLE( g_U2763, 1 );
        DETACH_PED( g_U2763, 1 );
        if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
        {
            ATTACH_PED_TO_VEHICLE( g_U2763, g_U2866, 0, 0.67600000, 1.52300000, 1.50300000, 0.00000000, 0.00000000, 1, 0, 0, 1 );
        }
    }
    if (NOT (DOES_PED_EXIST( g_U2749 )))
    {
        g_U2749 = sub_24287( ref g_U2736 );
    }
    if (NOT (IS_PED_DEAD( g_U2749 )))
    {
        sub_31189( ref g_U2749 );
        SET_PED_INVINCIBLE( g_U2749, 1 );
        DETACH_PED( g_U2749, 1 );
        if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
        {
            ATTACH_PED_TO_VEHICLE( g_U2749, g_U2866, 0, -0.61500000, 1.48000000, 1.55500000, 0.00000000, 0.00000000, 1, 0, 0, 1 );
        }
    }
    if (NOT (ISEQ_QUERY_STATE( -931023773, 3 )))
    {
        sub_31571( g_U2763, -931023773, "marcello" );
        ISEQ_START( -931023773 );
    }
    if (NOT (ISEQ_QUERY_STATE( 1476011597, 3 )))
    {
        sub_31571( g_U2749, 1476011597, "passos" );
        ISEQ_START( 1476011597 );
    }
    return;
}

void sub_30928(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_31189(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_STAND_STILL( 0, -1 );
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    return;
}

void sub_31571(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        ISEQ_REGISTER_ENTITY( uParam1, uParam2, uParam0, 0 );
    }
    return;
}

void sub_31694()
{
    sub_269( "P_SETUP_MPM_PLAYER" );
    if (NOT (IS_PED_DEAD( sub_397() )))
    {
        if (NOT g_U3089)
        {
            APPLY_PLAYER_PRELOAD_VARIATION( sub_397(), 1 );
            g_U3089 = 1;
        }
        SET_PED_DUCKING( sub_397(), 0 );
        SET_PED_PROOFS( sub_397(), 1, 1, 1, 1, 1 );
        SET_ADRENALINE_AMT( 0.75000000 );
        REMOVE_ALL_PED_WEAPONS( sub_397() );
        sub_5896( sub_397(), 1194438308, 1, 200, 0 );
        if (NOT (IS_PED_ATTACHED_TO_ANY_VEHICLE( sub_397() )))
        {
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                ATTACH_PED_TO_VEHICLE( sub_397(), g_U2866, 0, 1.15000000, -0.50000000, -1.22000000, -90.00000000, 0.00000000, 0, 0, 0, 1 );
            }
        }
        SET_VEHICLE_AS_ENTITY_SYNC_POINT( g_U2866, sub_397() );
        if (NOT (ISEQ_QUERY_STATE( 94722883, 3 )))
        {
            PED_ACTION_TREE_PLAY_NODE( sub_397(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
            ISEQ_REGISTER_ENTITY( 94722883, "player", sub_397(), 0 );
            ISEQ_START( 94722883 );
        }
        DEACTIVATE_BULLET_TIME( 1, 0 );
        ENABLE_HIT_DETECTION( 0 );
        ENABLE_LAST_MAN_STANDING( 0 );
        SET_SILHOUETTE_ACTIVE( 0 );
        SET_CAMERA_OVERRIDE( "S_CLUB_HELI_HANG_CAM_AIM", "S_CLUB_HELI_HANG_CAM_AIM", 0, 1, 1 );
        SET_RAIL_RELATIVE_DIR( 2, 0 );
        SET_PLAYER_COMBAT_TIMER_MODE( 1 );
        PLAYER_SET_AIM_MODE( 2 );
        SET_PED_CONSUMING_AMMO( sub_397(), 0 );
        SET_PED_HEALTH( sub_397(), GET_PED_MAX_HEALTH( sub_397() ), 0 );
        SET_PLAYER_FORCED_AIM( sub_419(), 1, 0 );
        SET_PED_USES_ANIMATED_DEATH( sub_397(), 1 );
    }
    return;
}

void sub_32501(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47, unknown uParam48)
{
    sub_269( "MAL_SetupRegisterAndStartISequence" );
    sub_16894( uParam45, uParam46, uParam47, uParam48, 1 );
    sub_32594( uParam45, uParam44, uParam0 );
    I_SEQUENCE_START( uParam45 );
    return;
}

void sub_32594(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45)
{
    sub_32612( uParam0, uParam1, uParam2._fU0 );
    return;
}

void sub_32612(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam2 )))
    {
        I_SEQUENCE_REGISTER_ENTITY( uParam0, uParam1, uParam2, 0 );
    }
    return;
}

int sub_32868()
{
    if (l_U315._fU52)
    {
        DO_SCREEN_FADE_IN( 100 );
    }
    sub_8745();
    sub_8807();
    if (NOT l_U351)
    {
        if (CAMERA_ANIMATED_CURRENT_TIME() > ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_CLUB_CP_10", "B_OUT_MID_14_NC_CAM" )) - l_U352))
        {
            CAMERA_ANIMATED_STOP( l_U352, 1 );
            sub_1735( "MF", "Returning to Gameplay Camera", 0 );
            l_U351 = 1;
        }
    }
    if ((sub_33061( sub_397(), 50 )) == 3)
    {
        sub_1735( "MF", "Unholstering player weapon", 0 );
        sub_33157( 1 );
        PED_FINISH_ACTION_INTENTION( sub_397(), 50 );
    }
    if ((sub_33061( sub_397(), 49 )) == 3)
    {
        PED_FINISH_ACTION_INTENTION( sub_397(), 49 );
        return 1;
    }
    return 0;
}

int sub_33061(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 );
    }
    return 0;
}

void sub_33157(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_397() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND( sub_397(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if (((sub_33237( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 = sub_33446();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_397(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

int sub_33237(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_33446()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_397() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_397(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_33237( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_397(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_397(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_397(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

void sub_33754(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_1735( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return sub_33879( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 33839, 33857, uParam8 );
}

void sub_33839()
{
    return;
}

int sub_33857()
{
    return 1;
}

void sub_33879(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_34192(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_1735( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_1735( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_1735( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_1735( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_1735( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_1735( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_14434( iParam0->_fU0, 0 );
            sub_1735( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_35059( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_35059( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_1735( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_35587( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_35059( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_35936( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_35936( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_35059(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_397() )))
        {
            SET_PLAYER_CONTROL( sub_419(), 0, uParam2 );
            SET_PED_DUCKING( sub_397(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_397() );
            }
            SET_PED_INVINCIBLE( sub_397(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_35587(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_397() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_397(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_397(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_397(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_397(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_397(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_35936(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_397() )))
    {
        SET_PLAYER_CONTROL( sub_419(), 1, 0 );
        SET_PED_INVINCIBLE( sub_397(), 0 );
        if (bParam0)
        {
            sub_36017();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_36017()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_397() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_397(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_397(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_397(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_397(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_36354()
{
    sub_1735( "MF", "P_START_GAMEPLAY - start", 0 );
    SET_PLAYER_CONTROL( sub_419(), 0, 0 );
    SET_ADRENALINE_AMT( 1 );
    g_U3090 = GET_PAYNEKILLER_AMT();
    SET_PAYNEKILLER_AMT( 0 );
    ENABLE_INVENTORY( 0 );
    sub_4014( sub_397(), 1 );
    sub_4014( g_U2763, 1 );
    sub_4014( g_U2749, 1 );
    sub_8930( ref l_U353, 550 );
    sub_1283( ref l_U362, l_U349, 1, 0 );
    SET_PED_SHOOTS_AT_COORD( g_U2868[0]._fU0, 71.70867000, 8.00020300, 108.84540000 );
    sub_36565( ref g_U2868[1], -256437761, 1, 0, 0 );
    sub_36565( ref g_U2868[2], -256437761, 1, 0, 0 );
    sub_29379( g_U2866, 96, 0.90000000, 0, 1 );
    sub_36720();
    PLAY_SCRIPT_STREAM_FROM_VEHICLE( g_U2866, g_U2867 );
    sub_1735( "MF", "P_START_GAMEPLAY - end", 0 );
    return;
}

void sub_36565(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    unknown uVar7;

    if ((NOT (IS_PED_DEAD( sub_397() ))) AND (NOT (IS_PED_DEAD( iParam0->_fU0 ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar7 );
        TASK_SHOOT_AT_PED( 0, sub_397(), -1, uParam1, uParam2, uParam4, uParam3 );
        CLOSE_SEQUENCE_TASK( uVar7 );
        TASK_PERFORM_SEQUENCE( iParam0->_fU0, uVar7 );
        CLEAR_SEQUENCE_TASK( uVar7 );
    }
    return;
}

void sub_36720()
{
    sub_1735( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_1735( "CCB", "Starting the Nightclub_RS_MPM context...", 0 );
    START_CONTEXT( "Nightclub_RS_MPM" );
    return;
}

void sub_36916()
{
    SET_PLAYER_CONTROL( sub_419(), 0, 256 );
    REENABLE_PLAYER_INPUT( 17 );
    REENABLE_PLAYER_INPUT( 16 );
    REENABLE_PLAYER_INPUT( 15 );
    REENABLE_PLAYER_INPUT( 14 );
    REENABLE_PLAYER_INPUT( 6 );
    REENABLE_PLAYER_INPUT( 28 );
    REENABLE_PLAYER_INPUT( 29 );
    REENABLE_PLAYER_INPUT( 4 );
    REENABLE_PLAYER_INPUT( 19 );
    REENABLE_PLAYER_INPUT( 20 );
    return;
}

void sub_37236(unknown uParam0)
{
    int I;

    sub_1735( "MF", "P_MAKE_PED_ARRAY_TARGETABLE - START", 0 );
    for ( I = 0; I < g_U2868; I++ )
    {
        if (NOT (IS_PED_DEAD( g_U2868[I]._fU0 )))
        {
            SET_PED_CAN_BE_TARGETTED( g_U2868[I]._fU0, uParam0 );
        }
    }
    sub_1735( "MF", "P_MAKE_PED_ARRAY_TARGETABLE - END", 0 );
    return;
}

void sub_37545(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    unknown uVar11;

    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam5 );
        OPEN_SEQUENCE_TASK( ref uVar11 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uParam2, uParam8, 20000, 1048576000, 0, 0 );
        TASK_SHOOT_AT_PED( 0, uParam1, 9999999, uParam6, uParam7, 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar11 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar11 );
        CLEAR_SEQUENCE_TASK( uVar11 );
    }
    return;
}

string sub_37897()
{
    return "LARGE_EXPLOSION_SHAKE";
}

void sub_38022(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

void sub_38190(unknown uParam0, unknown uParam1)
{
    return;
}

void sub_38285(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_SET_ACTION_INTENTION( uParam0, uParam1, uParam2, g_U665 );
    }
    return;
}

void sub_38347(unknown uParam0)
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_39168(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_1283( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U649, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_39436(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE_WITH_INTERP( iParam1->_fU0, iParam0->_fU0, uParam2, uParam3, uParam4 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_1419( iParam1 + 48 );
    iParam1->_fU32 = 1;
    iParam1->_fU40 = 1;
    return;
}

int sub_39713(int iParam0, unknown uParam1, boolean bParam2)
{
    if ((sub_33061( iParam0->_fU0, uParam1 )) == 1)
    {
        if (bParam2)
        {
            sub_39755( iParam0 + 0, uParam1 );
        }
        return 1;
    }
    return 0;
}

void sub_39755(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

int sub_39922(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || (sub_1539( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || (sub_1539( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_40091(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

void sub_40305(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            sub_40380( (uParam0^)[I]._fU0 );
        }
    }
    return;
}

void sub_40380(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

void sub_40961(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_1419( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

void sub_41078(unknown uParam0, boolean bParam1)
{
    sub_2838( ref l_U273 );
    l_U273 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
    SETUP_BULLET_CAMERA_SCENE( l_U273, uParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
    if (bParam1)
    {
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    }
    return;
}

void sub_41557(unknown uParam0, unknown uParam1)
{
    SHAKE_CAM( GET_RENDERING_CAM(), uParam0, uParam1 );
    return;
}

string sub_41838()
{
    return "HAND_SHAKE";
}

void sub_42392()
{
    sub_269( "P_RELEASE_ROCKET_MPM_ASSETS" );
    sub_42446( 1037546172, ref g_U1108 );
    sub_42446( g_U2453, ref g_U1108 );
    sub_42446( 1049690760, ref g_U1108 );
    sub_42446( -1311484676, ref g_U1108 );
    sub_42446( -784774327, ref g_U1108 );
    sub_42872( 1194438308, ref g_U1301 );
    sub_42872( 1001413062, ref g_U1301 );
    sub_43065( "LEVEL_S_CLUB_CP_06", ref g_U1447 );
    sub_43065( "LEVEL_S_CLUB_CP_10", ref g_U1447 );
    sub_43273( -1313172978, ref g_U1350 );
    sub_43273( -931023773, ref g_U1350 );
    sub_43273( 1476011597, ref g_U1350 );
    sub_43273( 94722883, ref g_U1350 );
    sub_43545( 96, ref g_U1903 );
    return;
}

void sub_42446(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_42558( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_42558(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_42872(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_42558( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_43065(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_42558( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_43273(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_42558( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

void sub_43545(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_42558( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


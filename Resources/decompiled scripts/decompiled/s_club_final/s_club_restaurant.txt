void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U21 = 0;
    l_U22 = 0;
    l_U23 = 1500;
    l_U34 = 0;
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = 0;
    l_U40 = 0;
    l_U41 = 0;
    l_U42 = 0;
    l_U43 = 0;
    l_U44 = 0;
    l_U45 = 0;
    l_U807 = -1;
    l_U808 = {64536, 64536, 64536};
    l_U847 = 1;
    StrCopy( ref l_U875, "MID_05_NC_concat", 32 );
    l_U883 = 400;
    l_U1280 = 0;
    l_U1304 = 0;
    l_U1399 = {-34.00000000, 110.09000000, 2.18000000};
    l_U1402 = {0.00000000, 0.00000000, 26.05000000};
    l_U1405 = 0.50000000;
    l_U1418 = 0;
    l_U1420 = 0;
    sub_294( "SP", "Script s_club_restaurant.sc is starting up...", 0 );
    l_U1418 = 1;
    l_U34 = 0;
    while (IS_EXITFLAG_SET() == 0)
    {
        sub_369();
        if (l_U1420 == 0)
        {
            sub_8407();
        }
        WAIT( 0 );
    }
    sub_2871( 0 );
    sub_43790();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( ref g_U893[5]._fU0 );
    sub_294( "SP", "Script s_club_restaurant.sc is terminating...", 0 );
    return;
}

void sub_294(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_369()
{
    if (g_U892 == 5)
    {
        switch (l_U1420)
        {
            case 0:
            if ((g_U3360 == 1) || (IS_PED_DEAD( sub_451() )))
            {
                l_U1420 = 1;
                sub_294( "MF", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            if (sub_593())
            {
                l_U1420 = 3;
                sub_294( "MF", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 1:
            if ((sub_1080( 0 )) == 1)
            {
                l_U1420 = 2;
                sub_294( "MF", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_451() )))
            {
                l_U1420 = 3;
                sub_294( "MF", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_294( "MF", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_451() ))) AND (NOT (IS_PLAYER_DEAD( sub_473() ))))
            {
                SET_PLAYER_CONTROL( sub_473(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_451() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_451(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            sub_2665( "CLUB_TIMEOUT_SCRIPTED_FAIL_FX" );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            sub_2871( 1 );
            if (g_U893[6]._fU36 == 1)
            {
                SET_EXITFLAG_FOR_SCRIPT( g_U893[6]._fU32 );
                sub_3972( ref g_U893[6] );
                g_U1091 = 0;
                g_U1074[6] = 0;
            }
            l_U1420 = 4;
            sub_294( "MF", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_294( "MF", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_4133( ref l_U811, sub_451() );
            SET_INTERIOR_ACTIVE( GET_INTERIOR_FROM_NAME( ref g_U2504, 0 ), 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( GET_INTERIOR_FROM_NAME( ref g_U2504, 0 ), GET_HASH_KEY( ref g_U2576 ) );
            l_U1420 = 5;
            sub_294( "MF", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_294( "MF", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U1418 = 1;
            l_U847 = 0;
            SET_PLAYER_CONTROL( sub_473(), 1, 0 );
            l_U1420 = 0;
            sub_294( "MF", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_451()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_473() );
    }
    return 0;
}

void sub_473()
{
    return GET_PLAYER_ID();
}

int sub_593()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_451() )))
        {
            SET_PED_FORCED_TO_WALK( sub_451(), 0 );
            SET_PLAYER_FORCED_AIM( sub_473(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_473(), 1 );
            if ((IS_PED_VISIBLE( sub_451() )) == 0)
            {
                SET_PED_VISIBLE( sub_451(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

int sub_1080(int iParam0)
{
    iParam0 = 1;
    switch (l_U22)
    {
        case 0:
        if (NOT (sub_1137( ref l_U24 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_451() )))
            {
                l_U23 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_1241( ref l_U24, l_U23, 1, 1 );
            sub_1375( ref l_U24 );
        }
        if (sub_1493( ref l_U24 ))
        {
            sub_294( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_451() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_473() )))
            {
                SET_PLAYER_CONTROL( sub_473(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U22 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U22 = 2;
            }
            else
            {
                l_U22 = 3;
            }
        }
        break;
        case 2:
        sub_294( "NS", "Player will QUIT", 0 );
        sub_1974();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_294( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_1974();
        return 1;
        break;
    }
    return 0;
}

int sub_1137(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_1241(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_1375(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_1493(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_1974()
{
    sub_294( "NS", "P_PostFailRetryCleanup", 0 );
    sub_2022( ref l_U24 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_473() )))
    {
        SET_PLAYER_CONTROL( sub_473(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U21 = 0;
    l_U21 = l_U21;
    l_U22 = 0;
    return;
}

void sub_2022(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_2665(unknown uParam0)
{
    sub_294( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    sub_2748( ref l_U35 );
    l_U34 = 1;
    return;
}

void sub_2748(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

void sub_2871(unknown uParam0)
{
    sub_294( "MF", "P_CLEANUP_RESTAURANT", 0 );
    ISEQ_UNREGISTER_ENTITY( -1139091117, "elev_male1" );
    ISEQ_UNREGISTER_ENTITY( -1139091117, "elev_male2" );
    ISEQ_UNREGISTER_ENTITY( -1139091117, "elev_male3" );
    ISEQ_UNREGISTER_ENTITY( -1139091117, "elev_female1" );
    ISEQ_UNREGISTER_ENTITY( -1139091117, "elev_female2" );
    ISEQ_TERMINATE( -1139091117 );
    ISEQ_UNREGISTER_ENTITY( 1917829108, "Max" );
    ISEQ_UNREGISTER_ENTITY( 1917829108, "SERANO" );
    ISEQ_TERMINATE( 1917829108 );
    ISEQ_UNREGISTER_ENTITY( -609394341, "player" );
    ISEQ_TERMINATE( -609394341 );
    sub_3144( ref g_U2648 );
    sub_3144( ref g_U2650 );
    sub_3144( ref g_U2645 );
    sub_3144( ref g_U2653 );
    sub_3144( ref l_U1305 );
    sub_3315( g_U2656 );
    sub_3479( g_U795._fU0 );
    sub_3479( l_U1416 );
    if (NOT (IS_PED_DEAD( sub_451() )))
    {
        SET_PED_FORCED_TO_WALK( sub_451(), 0 );
        SET_PLAYER_CAN_USE_SHOOTDODGE( sub_473(), 1 );
    }
    sub_3580( ref g_U3340 );
    sub_3580( ref g_U3350 );
    if ((CUTSCENE_NAMED_IS_LOADING( ref l_U875 )) || (CUTSCENE_IS_LOADED( ref l_U875 )))
    {
        CLEAR_NAMED_CUTSCENE( ref l_U875 );
    }
    sub_3660( uParam0 );
    sub_3380( l_U1282 );
    return;
}

void sub_3144(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_3178( (uParam0^)[I] );
    }
    return;
}

void sub_3178(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_3315(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47, unknown uParam48, unknown uParam49, unknown uParam50, unknown uParam51, unknown uParam52, unknown uParam53, unknown uParam54, unknown uParam55, unknown uParam56, unknown uParam57, unknown uParam58, unknown uParam59, unknown uParam60, unknown uParam61, unknown uParam62, unknown uParam63, unknown uParam64, unknown uParam65, unknown uParam66, unknown uParam67, unknown uParam68, unknown uParam69, unknown uParam70, unknown uParam71, unknown uParam72, unknown uParam73, unknown uParam74, unknown uParam75, unknown uParam76, unknown uParam77, unknown uParam78, unknown uParam79)
{
    sub_3356( "[SP]### P_CLEAN_ELEVATOR ###" );
    sub_3380( uParam0._fU232 );
    sub_3380( uParam0._fU236 );
    sub_3380( uParam0._fU240 );
    sub_3380( uParam0._fU244 );
    sub_3380( uParam0._fU248 );
    return;
}

void sub_3356(unknown uParam0)
{
    return;
}

void sub_3380(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_3479(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_3580(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

void sub_3660(boolean bParam0)
{
    sub_294( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    if (bParam0)
    {
        ;
    }
    else
    {
        sub_294( "CCB", "Stopping the Nightclub_Dance_To_Heli context...", 0 );
        END_CONTEXT( "Nightclub_Dance_To_Heli" );
    }
    sub_294( "CCB", "Stopping the Nightclub_Restaurant context...", 0 );
    END_CONTEXT( "Nightclub_Restaurant" );
    return;
}

void sub_3972(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_4133(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_294( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_4317( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_5394( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_5686( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_6033( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_5686( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_6033( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_5686( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_6033( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_6318( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_6033( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_6318( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_6033( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_6811( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_6972( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_451(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_294( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_4317(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_4349( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_4349(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_5394(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_5686(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_3356( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_6033(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_6318(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_3356( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_6811(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_6972(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_4349( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_7044( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_7044(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_8407()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;

    iVar2 = l_U1418;
    if (l_U1418 != 15)
    {
        if (l_U1304 == 1)
        {
            sub_8452( ref g_U2656 );
        }
        if (l_U1304 == 0)
        {
            if ((sub_10523( l_U1283 )) == 1)
            {
                PLAY_IMAGEFX( "GAMMA_ZOOM_1", 4, 1 );
                sub_10631();
                sub_10954();
                sub_12455( l_U1305[0], l_U1377[0], l_U1393[0] );
                sub_12455( l_U1305[1], l_U1377[1], l_U1393[1] );
                sub_12455( l_U1305[2], l_U1377[2], l_U1393[2] );
                sub_12455( l_U1305[3], l_U1377[3], l_U1393[3] );
                sub_12455( l_U1305[4], l_U1377[4], l_U1393[4] );
                l_U1304 = 1;
            }
        }
    }
    if (g_U1102 == 0)
    {
        sub_12650();
    }
    sub_13412();
    sub_13707();
    switch (l_U1418)
    {
        case 0: break;
        case 1:
        sub_294( "MF", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
        sub_14178();
        sub_14554();
        sub_16575();
        sub_16987( "SCLBAUD" );
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U1418 = 2;
        sub_294( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_294( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        if ((NOT (CUTSCENE_NAMED_IS_LOADING( "02_NC_RANDOM1_concat" ))) AND (NOT (CUTSCENE_IS_LOADED( "02_NC_RANDOM1_concat" ))))
        {
            sub_17303();
            l_U1418 = 3;
            sub_294( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
            break;
        }
        CLEAR_NAMED_CUTSCENE( "02_NC_RANDOM1_concat" );
        case 3:
        if (sub_18051() == 1)
        {
            l_U1418 = 4;
            sub_294( "SP", "eCheckpointState = CP_SETUP_START_POINT", 0 );
        }
        break;
        case 4:
        sub_294( "SP", "eCheckpointState = CP_SETUP_START_POINT", 0 );
        if ((NOT l_U811._fU0) AND (g_U891 == 5))
        {
            l_U1418 = 5;
            sub_294( "MF", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        }
        else
        {
            l_U1418 = 9;
            sub_294( "MF", "eCheckpointState = CP_RST_SPAWNING_PEDS", 0 );
        }
        break;
        case 5:
        sub_294( "MF", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        l_U847 = 0;
        sub_18555( g_U2216[g_U891], g_U2331[g_U891], g_U2370[g_U891], g_U2409[g_U891] );
        if (NOT (sub_18628( ref l_U811 )))
        {
            sub_6318( sub_451(), 1194438308, 200, 0, 0 );
            l_U1418 = 6;
            g_U2644 = 1;
            sub_294( "MF", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
            break;
        }
        l_U1418 = 9;
        sub_294( "MF", "eCheckpointState = CP_RST_SPAWNING_PEDS", 0 );
        case 6:
        if ((IS_PED_DEAD( sub_451() )) == 0)
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_451(), 0, 0 ) )) == 1)
            {
                l_U1418 = 9;
                sub_294( "MF", "eCheckpointState = CP_RST_SPAWNING_PEDS", 0 );
            }
        }
        break;
        case 9:
        if (sub_19087() == 1)
        {
            sub_20832();
            l_U1418 = 7;
            sub_294( "MF", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 7:
        if ((g_U892 == 5) || (g_U2644))
        {
            if (sub_23010( ref l_U956, 0 ))
            {
                PLAY_IMAGEFX( "GAMMA_SATURATION_COLOR_ZOOM", 4, 1 );
            }
            if (sub_23010( ref l_U935, 0 ))
            {
                l_U1418 = 8;
                sub_294( "MF", "eCheckpointState = CP_RST_MID_05", 0 );
            }
        }
        break;
        case 8:
        if (l_U1419 == 1)
        {
            FLUSH_DISCARDABLE_MEMORY( 12500 );
            sub_26263( ref l_U848, ref l_U875, 23253, 23270, 24342, 24423, 24440, 25718, 250, 0 );
            l_U848._fU64 = 0;
            if (l_U847 == 1)
            {
                l_U848._fU4 = 2;
                l_U848._fU104 = 0;
            }
            else
            {
                l_U848._fU4 = 7;
            }
        }
        if ((sub_26707( ref l_U848 )) == 1)
        {
            sub_294( "MF", "eCheckpointState = CP_RST_COMBAT_GAMEPLAY", 0 );
            l_U1418 = 10;
            l_U847 = 0;
        }
        break;
        case 10:
        if (l_U1419 == 1)
        {
            if (NOT l_U811._fU0)
            {
                sub_29185( ref l_U811, 5, sub_451(), g_U2216[5], g_U2331[5], g_U2370[5], g_U2409[5], 0 );
                g_U892 = 5;
            }
            sub_32792();
            sub_34539( ref g_U3311, 1 );
            sub_34539( ref g_U3318, 1 );
            sub_34539( ref g_U3297, 1 );
            sub_34539( ref g_U3304, 1 );
            sub_34770();
            sub_35063();
            if (NOT (IS_PED_DEAD( g_U2650[1] )))
            {
                SET_PED_VISIBLE( g_U2650[1], 1 );
                FREEZE_PED_POSITION( g_U2650[1], 0 );
            }
        }
        sub_35269( ref g_U2648, l_U1019 );
        sub_35269( ref g_U2650, l_U1019 );
        sub_35269( ref g_U2645, l_U1019 );
        sub_35269( ref g_U2653, l_U1019 );
        if (DOOR_GET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U3297._fU0, g_U3297._fU4 ) ))
        {
            sub_35561( ref g_U3297, 0 );
            sub_35633( ref g_U3297, 1, 1 );
        }
        if (DOOR_GET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U3304._fU0, g_U3304._fU4 ) ))
        {
            sub_35561( ref g_U3304, 0 );
            sub_35633( ref g_U3304, 1, 1 );
            sub_35760( ref g_U3304, 0, 1, 0.05000000 );
        }
        if (NOT l_U1280)
        {
            if ((sub_35939( sub_451(), -27.61642000, 97.29785000, -0.99003800 )) < 4)
            {
                sub_34539( ref g_U3297, 0 );
                sub_34539( ref g_U3304, 0 );
            }
        }
        if (NOT l_U1417)
        {
            if (sub_36050() == 1)
            {
                if (sub_19110( ref l_U1305, ref l_U1311, -1, 1, 1, 0, 1 ))
                {
                    sub_36267();
                    sub_36610();
                    l_U1417 = 1;
                }
            }
        }
        if (NOT l_U1130)
        {
            if ((sub_23010( ref l_U1109, 0 )) || (sub_23010( ref l_U1088, 0 )))
            {
                sub_37953( ref g_U893[6] );
                sub_37979();
                l_U1130 = 1;
            }
        }
        if (NOT l_U1281)
        {
            if (NOT (IS_PED_DEAD( g_U2650[0] )))
            {
                if ((IS_SPHERE_VISIBLE( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2650[0] ), 0.20000000, 1 )) || (sub_23010( ref l_U1172, 0 )))
                {
                    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2650[0], 0 );
                    SET_BLOCKING_OF_PED_TARGETTING( g_U2650[0], 0 );
                    if (NOT (IS_PED_DEAD( sub_451() )))
                    {
                        TASK_COMBAT_PED( g_U2650[0], sub_451() );
                    }
                    l_U1281 = 1;
                }
            }
        }
        if (NOT l_U1235)
        {
            if ((sub_23010( ref l_U1214, 0 )) || (sub_23010( ref l_U1193, 0 )))
            {
                sub_38426();
                l_U1235 = 1;
            }
        }
        if (sub_23010( ref l_U1236, 0 ))
        {
            sub_38598();
            sub_38738();
            sub_38983( 0 );
            sub_39721( ref g_U3297, 0 );
            sub_39721( ref g_U3304, 0 );
            sub_39795( ref g_U3297, 1 );
            sub_39795( ref g_U3304, 1 );
            l_U1279 = 1;
        }
        if (l_U1279 == 1)
        {
            if (sub_39882() == 1)
            {
                sub_35269( ref g_U2648, l_U998 );
                sub_35269( ref g_U2650, l_U998 );
                sub_35269( ref g_U2645, l_U998 );
                sub_35269( ref g_U2653, l_U998 );
            }
        }
        if (l_U1279 == 1)
        {
            if (sub_10523( l_U998 ))
            {
                sub_38983( 1 );
                l_U1279 = 0;
            }
        }
        if (NOT l_U1279)
        {
            if ((sub_10523( l_U1236 )) == 1)
            {
                sub_38983( 0 );
                l_U1279 = 1;
            }
        }
        if (sub_40195())
        {
            if (sub_13470() == 0)
            {
                if (TIME_SINCE_LAST_MONOLOGUE() > 1500)
                {
                    sub_294( "MF", "Playing Speech: SSTD_MFSP", 0 );
                    sub_13210( ref g_U3540, ref uVar3 );
                }
            }
        }
        if (sub_13470() == 0)
        {
            if (NOT g_U893[6]._fU36)
            {
                sub_37953( ref g_U893[6] );
            }
            if (sub_10523( l_U914 ))
            {
                BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            if ((g_U2656._fU0._fU8 > 5.50000000) AND (NOT (IS_BULLET_CAMERA_RUNNING( 0 ))))
            {
                if ((NOT IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED()) || (sub_10523( l_U914 )))
                {
                    sub_40553( l_U1305[0], 47, 1000 );
                    sub_40553( l_U1305[1], 47, 1000 );
                    sub_40553( l_U1305[2], 47, 1000 );
                    sub_40553( l_U1305[3], 47, 1000 );
                    sub_40553( l_U1305[4], 47, 1000 );
                    WAIT( 0 );
                    ISEQ_UNREGISTER_ENTITY( -1139091117, "elev_male1" );
                    ISEQ_UNREGISTER_ENTITY( -1139091117, "elev_male2" );
                    ISEQ_UNREGISTER_ENTITY( -1139091117, "elev_male3" );
                    ISEQ_UNREGISTER_ENTITY( -1139091117, "elev_female1" );
                    ISEQ_UNREGISTER_ENTITY( -1139091117, "elev_female2" );
                    ISEQ_TERMINATE( -1139091117 );
                    sub_294( "MF", "Setting state to: CP_RST_PLAYING_02_02_NC", 0 );
                    l_U1418 = 13;
                }
            }
        }
        if (sub_23010( ref l_U1257, 0 ))
        {
            l_U1418 = 13;
            if (NOT g_U893[6]._fU36)
            {
                sub_37953( ref g_U893[6] );
            }
        }
        break;
        case 12:
        sub_294( "SP", "eCheckpointState = CP_HANDLE_MID_02_FAIL10", 0 );
        if (TIME_SINCE_LAST_MONOLOGUE() > 1500)
        {
            if (sub_41019() == 1)
            {
                g_U3360 = 1;
                l_U1418 = 0;
                sub_294( "SP", "eCheckpointState = CP_IDLE", 0 );
            }
        }
        break;
        case 13:
        sub_294( "SP", "eCheckpointState = CP_RST_PLAYING_02_02_NC", 0 );
        sub_42828( ref g_U2648 );
        sub_42828( ref g_U2650 );
        sub_42828( ref g_U2645 );
        sub_42828( ref g_U2653 );
        sub_43073( ref l_U1406, 1 );
        g_U1074[6] = 1;
        if (g_U2655)
        {
            l_U1418 = 14;
            sub_294( "SP", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 14:
        sub_294( "SP", "eCheckpointState = CP_FINISHED", 0 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U1418 = 0;
        sub_294( "SP", "eCheckpointState = CP_IDLE", 0 );
        break;
        case 15:
        sub_294( "MF", "CP_DEBUG_ELEVATOR", 0 );
        if (sub_19110( ref l_U1305, ref l_U1311, -1, 1, 1, 0, 1 ))
        {
            sub_32792();
            sub_36267();
            sub_10631();
        }
        if (NOT (IS_PED_DEAD( l_U1305[0] )))
        {
            sub_12455( l_U1305[0], l_U1377[0], l_U1393[0] );
        }
        if (NOT (IS_PED_DEAD( l_U1305[1] )))
        {
            sub_12455( l_U1305[1], l_U1377[1], l_U1393[1] );
        }
        if (NOT (IS_PED_DEAD( l_U1305[2] )))
        {
            sub_12455( l_U1305[2], l_U1377[2], l_U1393[2] );
        }
        if (NOT (IS_PED_DEAD( l_U1305[3] )))
        {
            sub_12455( l_U1305[3], l_U1377[3], l_U1393[3] );
        }
        if (NOT (IS_PED_DEAD( l_U1305[4] )))
        {
            sub_12455( l_U1305[4], l_U1377[4], l_U1393[4] );
        }
        break;
    }
    if (l_U1418 != iVar2)
    {
        l_U1419 = 1;
    }
    else
    {
        l_U1419 = 0;
    }
    return;
}

void sub_8452(int iParam0)
{
    int I;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    float fVar8;
    float fVar9;
    float fVar10;
    vector vVar11;
    vector vVar14;

    if (iParam0->_fU316 == 2)
    {
        iParam0->_fU204 = -1;
        I = 0;
        for ( I = 0; I <= 9; I++ )
        {
            if (iParam0->_fU160[I] >= 0)
            {
                iParam0->_fU204 = iParam0->_fU160[I];
                iParam0->_fU160[I] = -1;
                uVar4 = {iParam0->_fU24[iParam0->_fU204] - iParam0->_fU0};
                uVar7 = ABSF( (uVar4._fU0 + uVar4._fU4) + uVar4._fU8 );
                fVar8 = (TIMESTEP() * iParam0->_fU208) * (uVar4._fU0 / uVar7);
                fVar9 = (TIMESTEP() * iParam0->_fU208) * (uVar4._fU4 / uVar7);
                fVar10 = (TIMESTEP() * iParam0->_fU208) * (uVar4._fU8 / uVar7);
                iParam0->_fU148 = {fVar8, fVar9, fVar10};
                iParam0->_fU316 = 1;
                I = 9;
            }
        }
        if (iParam0->_fU204 == -1)
        {
            sub_3356( "[ML] --- ELEVATOR DONE MOVING ---" );
            iParam0->_fU316 = 3;
        }
    }
    if (iParam0->_fU316 == 1)
    {
        iParam0->_fU0 = {iParam0->_fU0 + iParam0->_fU148};
        if ((((ref iParam0->_fU0->_fU8) <= iParam0->_fU24[iParam0->_fU204]._fU8) AND ((ref iParam0->_fU148->_fU8) < 0)) || ((((ref iParam0->_fU0->_fU8) >= iParam0->_fU24[iParam0->_fU204]._fU8) AND ((ref iParam0->_fU148->_fU8) > 0)) || ((((ref iParam0->_fU0->_fU4) <= iParam0->_fU24[iParam0->_fU204]._fU4) AND ((ref iParam0->_fU148->_fU4) < 0)) || ((((ref iParam0->_fU0->_fU4) >= iParam0->_fU24[iParam0->_fU204]._fU4) AND ((ref iParam0->_fU148->_fU4) > 0)) || ((((ref iParam0->_fU0->_fU0) <= iParam0->_fU24[iParam0->_fU204]._fU0) AND ((ref iParam0->_fU148->_fU0) < 0)) || (((ref iParam0->_fU0->_fU0) >= iParam0->_fU24[iParam0->_fU204]._fU0) AND ((ref iParam0->_fU148->_fU0) > 0)))))))
        {
            iParam0->_fU316 = 2;
        }
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU232 )) == 1)
    {
        SET_OBJECT_COORDS( iParam0->_fU232, iParam0->_fU0 );
    }
    if (iParam0->_fU308 == 2)
    {
        iParam0->_fU300 = iParam0->_fU292;
        iParam0->_fU308 = 2;
    }
    else if (iParam0->_fU308 == 0)
    {
        iParam0->_fU300 = 0.00000000;
        iParam0->_fU308 = 0;
    }
    if (iParam0->_fU308 == 1)
    {
        if (iParam0->_fU300 < iParam0->_fU292)
        {
            iParam0->_fU300 += iParam0->_fU296;
        }
        if (iParam0->_fU300 >= iParam0->_fU292)
        {
            iParam0->_fU300 = iParam0->_fU292;
            iParam0->_fU308 = 2;
        }
    }
    else if (iParam0->_fU308 == 3)
    {
        if (iParam0->_fU300 > 0.00000000)
        {
            iParam0->_fU300 -= iParam0->_fU296;
        }
        if (iParam0->_fU300 <= 0.00000000)
        {
            iParam0->_fU300 = 0.00000000;
            iParam0->_fU308 = 0;
        }
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU232 )) == 1)
    {
        vVar11 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU232 )};
    }
    if (iParam0->_fU288 == 0)
    {
        if ((ref iParam0->_fU12->_fU8) == 0.00000000)
        {
            vVar14 = {-iParam0->_fU300, 0.00000000, 0.00000000};
        }
        else if (((ref iParam0->_fU12->_fU8) == -270.00000000) || ((ref iParam0->_fU12->_fU8) == 90.00000000))
        {
            vVar14 = {0.00000000, -iParam0->_fU300, 0.00000000};
        }
        else if (((ref iParam0->_fU12->_fU8) == -180.00000000) || ((ref iParam0->_fU12->_fU8) == 180.00000000))
        {
            vVar14 = {iParam0->_fU300, 0.00000000, 0.00000000};
        }
        else if (((ref iParam0->_fU12->_fU8) == -90.00000000) || ((ref iParam0->_fU12->_fU8) == 270.00000000))
        {
            vVar14 = {0.00000000, iParam0->_fU300, 0.00000000};
        };;;;
    }
    else
    {
        vVar14 = {0.00000000, 0.00000000, iParam0->_fU300};
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU236 )) == 1)
    {
        FREEZE_OBJECT_POSITION( iParam0->_fU236, 0 );
        SET_OBJECT_COORDS( iParam0->_fU236, vVar11 + vVar14 );
        FREEZE_OBJECT_POSITION( iParam0->_fU236, 1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU240 )) == 1)
    {
        FREEZE_OBJECT_POSITION( iParam0->_fU240, 0 );
        SET_OBJECT_COORDS( iParam0->_fU240, vVar11 - vVar14 );
        FREEZE_OBJECT_POSITION( iParam0->_fU240, 1 );
    }
    if (iParam0->_fU284 == 1)
    {
        if (iParam0->_fU312 == 2)
        {
            iParam0->_fU304 = iParam0->_fU292;
            iParam0->_fU312 = 2;
        }
        else if (iParam0->_fU312 == 0)
        {
            iParam0->_fU304 = 0.00000000;
            iParam0->_fU312 = 0;
        }
        if (iParam0->_fU312 == 1)
        {
            if (iParam0->_fU304 < iParam0->_fU292)
            {
                iParam0->_fU304 += iParam0->_fU296;
            }
            if (iParam0->_fU304 >= iParam0->_fU292)
            {
                iParam0->_fU304 = iParam0->_fU292;
                iParam0->_fU312 = 2;
            }
        }
        else if (iParam0->_fU312 == 3)
        {
            if (iParam0->_fU304 > 0.00000000)
            {
                iParam0->_fU304 -= iParam0->_fU296;
            }
            if (iParam0->_fU304 <= 0.00000000)
            {
                iParam0->_fU304 = 0.00000000;
                iParam0->_fU312 = 0;
            }
        }
        if (iParam0->_fU288 == 0)
        {
            if ((ref iParam0->_fU12->_fU8) == 0.00000000)
            {
                vVar14 = {-iParam0->_fU304, 0.00000000, 0.00000000};
            }
            else if (((ref iParam0->_fU12->_fU8) == -270.00000000) || ((ref iParam0->_fU12->_fU8) == 90.00000000))
            {
                vVar14 = {0.00000000, -iParam0->_fU304, 0.00000000};
            }
            else if (((ref iParam0->_fU12->_fU8) == -180.00000000) || ((ref iParam0->_fU12->_fU8) == 180.00000000))
            {
                vVar14 = {iParam0->_fU304, 0.00000000, 0.00000000};
            }
            else if (((ref iParam0->_fU12->_fU8) == -90.00000000) || ((ref iParam0->_fU12->_fU8) == 270.00000000))
            {
                vVar14 = {0.00000000, iParam0->_fU304, 0.00000000};
            };;;;
        }
        else
        {
            vVar14 = {0.00000000, 0.00000000, -iParam0->_fU304};
        }
        if ((DOES_OBJECT_EXIST( iParam0->_fU244 )) == 1)
        {
            FREEZE_OBJECT_POSITION( iParam0->_fU244, 0 );
            SET_OBJECT_COORDS( iParam0->_fU244, vVar11 - vVar14 );
            FREEZE_OBJECT_POSITION( iParam0->_fU244, 1 );
        }
        if ((DOES_OBJECT_EXIST( iParam0->_fU248 )) == 1)
        {
            FREEZE_OBJECT_POSITION( iParam0->_fU248, 0 );
            SET_OBJECT_COORDS( iParam0->_fU248, vVar11 + vVar14 );
            FREEZE_OBJECT_POSITION( iParam0->_fU248, 1 );
        }
    }
    return;
}

void sub_10523(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_10541( sub_451(), uParam0 );
}

int sub_10541(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_10631()
{
    sub_294( "MF", "P_RST_START_ELEVATOR_ISS - START", 0 );
    sub_6318( l_U1305[2], -612753081, 200, 0, 1 );
    ISEQ_REGISTER_ENTITY( -1139091117, "elev_male1", l_U1305[0], 0 );
    ISEQ_REGISTER_ENTITY( -1139091117, "elev_male2", l_U1305[1], 0 );
    ISEQ_REGISTER_ENTITY( -1139091117, "elev_male3", l_U1305[2], 0 );
    ISEQ_REGISTER_ENTITY( -1139091117, "elev_female1", l_U1305[3], 0 );
    ISEQ_REGISTER_ENTITY( -1139091117, "elev_female2", l_U1305[4], 0 );
    ISEQ_START( -1139091117 );
    sub_294( "MF", "P_RST_START_ELEVATOR_ISS - END", 0 );
    return;
}

void sub_10954()
{
    sub_294( "MF", "P_RST_DIALOGUE_ELEVATOR - START", 0 );
    sub_11013( ref l_U1406 );
    if (NOT (IS_PED_DEAD( sub_451() )))
    {
        sub_11113( 0, sub_451(), "MAX", ref l_U1406, 2, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1305[0] )))
    {
        sub_11113( 1, l_U1305[0], "SERRANO", ref l_U1406, 2, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1305[1] )))
    {
        sub_11113( 2, l_U1305[1], "M2_CS_05M_AVG", ref l_U1406, 2, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1305[2] )))
    {
        sub_11113( 3, l_U1305[2], "M2_CS_07M_MUS", ref l_U1406, 2, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1305[3] )))
    {
        sub_11113( 4, l_U1305[3], "FABIANA", ref l_U1406, 2, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1305[4] )))
    {
        sub_11113( 5, l_U1305[4], "GIOVANNA", ref l_U1406, 2, 0 );
    }
    sub_11599( "SCLB_VIG07A", ref l_U1406, 8, 1 );
    sub_294( "MF", "P_RST_DIALOGUE_ELEVATOR - END", 0 );
    return;
}

void sub_11013(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_11113(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_11599(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_11623( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_11623(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_11678( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_11678(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_11713( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_12207( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_11713(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_12207(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_12455(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_12650()
{
    if (NOT (sub_1137( ref g_U3340 )))
    {
        if (NOT l_U1236._fU64)
        {
            if ((sub_12695( ref g_U2653, 0 )) AND ((sub_12695( ref g_U2645, 0 )) AND ((sub_12695( ref g_U2650, 0 )) AND (sub_12695( ref g_U2648, 0 )))))
            {
                sub_294( "MF", "Starting mission fail timer...", 0 );
                sub_1375( ref g_U3340 );
                sub_1375( ref g_U3350 );
            }
        }
    }
    if (sub_1493( ref g_U3350 ))
    {
        sub_294( "MF", "Playing warning monologue...", 0 );
        sub_13210( "SCLB_MDRSA", ref g_U3361 );
    }
    if ((sub_1493( ref g_U3340 )) == 1)
    {
        sub_294( "MF", "Mission Failed...", 0 );
        l_U45 = 2;
        l_U1418 = 12;
        sub_294( "SP", "eCheckpointState = CP_HANDLE_MID_02_FAIL10", 0 );
    }
    return;
}

int sub_12695(unknown uParam0, boolean bParam1)
{
    if ((sub_12708( uParam0, 0 )) == 1)
    {
        if (NOT bParam1)
        {
            if ((sub_12817( uParam0 )) == 0)
            {
                return 1;
            }
        }
        if (bParam1)
        {
            if ((sub_12917( uParam0 )) == (uParam0^))
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_12708(unknown uParam0, boolean bParam1)
{
    int I;
    int Result;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((DOES_PED_EXIST( (uParam0^)[I] )) == 1)
        {
            Result = 1;
            if (NOT bParam1)
            {
                return 1;
            }
        }
        else
        {
            Result = 0;
        }
    }
    return Result;
}

void sub_12817(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_12917(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

void sub_13210(unknown uParam0, unknown uParam1)
{
    sub_11013( uParam1 );
    sub_11113( 0, sub_451(), "MAX", uParam1, 2, 0 );
    sub_11113( 1, sub_451(), "MAX", uParam1, 2, 0 );
    sub_11599( uParam0, uParam1, 8, 1 );
    return;
}

void sub_13412()
{
    if ((sub_12708( ref g_U2653, 0 )) AND ((sub_12708( ref g_U2645, 0 )) AND ((sub_12708( ref g_U2650, 0 )) AND (sub_12708( ref g_U2648, 0 )))))
    {
        if (sub_13470() == 1)
        {
            sub_13542( ref g_U2648 );
            sub_13542( ref g_U2650 );
            sub_13542( ref g_U2645 );
            sub_13542( ref g_U2653 );
        }
    }
    return;
}

void sub_13470()
{
    int Result;

    Result = (((sub_12817( ref g_U2648 )) + (sub_12817( ref g_U2650 ))) + (sub_12817( ref g_U2645 ))) + (sub_12817( ref g_U2653 ));
    return Result;
}

void sub_13542(unknown uParam0)
{
    int I;

    if ((sub_12817( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_13707()
{
    switch (l_U1421)
    {
        case 0:
        sub_294( "CCB", "eSPChallenge - STATE_CHALLENGE_IDLE", 0 );
        l_U1421 = 1;
        break;
        case 1:
        if (l_U1418 >= 10)
        {
            if (l_U1418 >= 13)
            {
                sub_294( "CCB", "The player made it to the helicopter...", 0 );
                SCRIPT_VAR_HASH_SET_INT( -1869674323, 1 );
                sub_294( "CCB", "eSPChallenge - STATE_CHALLENGE_COMPLETE", 0 );
                l_U1421 = 2;
            }
        }
        break;
        case 2: break;
    }
    return;
}

void sub_14178()
{
    sub_294( "SP", "P_INIT_SCRIPT_VARIABLES", 0 );
    l_U1377[0] = {-33.15000000, 111.29000000, 0.50000000};
    l_U1393[0] = -155.19000000;
    l_U1377[1] = {-34.73000000, 110.19000000, 0.50000000};
    l_U1393[1] = -155.19000000;
    l_U1377[2] = {-33.58000000, 109.25000000, 0.50000000};
    l_U1393[2] = -155.19000000;
    l_U1377[3] = {-32.69000000, 110.12000000, 0.50000000};
    l_U1393[3] = -155.19000000;
    l_U1377[4] = {-34.25000000, 108.98000000, 0.50000000};
    l_U1393[4] = -155.19000000;
    l_U1419 = 1;
    l_U884 = 0;
    l_U1235 = 0;
    l_U1130 = 0;
    l_U1304 = 0;
    sub_1241( ref l_U895, 2500, 1, 0 );
    l_U904 = 0;
    sub_1241( ref l_U905, 1500, 1, 0 );
    sub_1241( ref g_U3340, g_U3349, 1, 0 );
    sub_1241( ref g_U3350, g_U3359, 1, 0 );
    g_U3360 = 0;
    l_U1279 = 0;
    l_U1281 = 0;
    l_U1280 = 0;
    l_U1417 = 0;
    return;
}

void sub_14554()
{
    sub_294( "SP", "P_INIT_GAMEPLAY_STRUCTS", 0 );
    sub_14641( ref l_U1047[0], -26.01000000, 95.26000000, -1.22000000, -77.99000000, 1880307581, 7, 3, 2, 0, 0 );
    sub_14641( ref l_U1047[1], -23.41000000, 96.43000000, -1.22000000, -85.31000000, -184133461, 7, 3, 2, 0, 0 );
    sub_14641( ref l_U1074[0], -13.26000000, 82.59000000, -1.22000000, 159.00000000, 310941647, 7, 3, 2, 0, 0 );
    sub_14641( ref l_U1131[0], -15.31000000, 94.69000000, -1.22000000, 0.00000000, 506281684, 7, 3, 2, 0, 0 );
    sub_14641( ref l_U1145[0], -28.23000000, 93.12000000, -1.22000000, -76.00000000, -1999359771, 7, 3, 2, 0, 0 );
    sub_14641( ref l_U1145[1], -25.13000000, 97.05000000, -1.22000000, 42.00000000, -1777418184, 7, 3, 2, 0, 0 );
    sub_14641( ref l_U1311[0], l_U1377[0], l_U1393[0], 360058256, 4, 1, 0, 0, 0 );
    sub_14641( ref l_U1311[1], l_U1377[1], l_U1393[1], -1363541453, 4, 1, 0, 0, 0 );
    sub_14641( ref l_U1311[2], l_U1377[2], l_U1393[2], 590685641, 4, 1, 0, 0, 0 );
    sub_14641( ref l_U1311[3], l_U1377[3], l_U1393[3], -1126566516, 5, 2, 0, 0, 0 );
    sub_14641( ref l_U1311[4], l_U1377[4], l_U1393[4], -2074806926, 5, 2, 0, 0, 0 );
    sub_15238( ref l_U935, "START_RST_GAMEPLAY", -19.35000000, 72.50000000, -2.30000000, 6.38000000, 6.32000000, 6.00000000, 0.00000000, 0.00000000, 0.54000000, 1 );
    sub_15238( ref l_U956, "tbRST_START_IMAGEFX", -19.35000000, 70.12930000, -2.30000000, 6.38000000, 6.32000000, 6.00000000, 0.00000000, 0.00000000, 0.54000000, 1 );
    sub_15238( ref l_U1236, "TRIG_ELEV_GUARD_START", -32.28000000, 105.98000000, -2.30000000, 17.93000000, 10.62000000, 6.00000000, 0.00000000, 0.00000000, -64.46000000, 1 );
    sub_15238( ref l_U1088, "RUNNER_ACTIVATE_A", -8.64000000, 77.87000000, -2.30000000, 11.08000000, 3.61000000, 6.00000000, 0.00000000, 0.00000000, -54.46000000, 1 );
    sub_15238( ref l_U1109, "RUNNER_ACTIVATE_B", -15.13000000, 85.34000000, -2.30000000, 8.59000000, 8.92000000, 6.00000000, 0.00000000, 0.00000000, -54.46000000, 1 );
    sub_15238( ref l_U1172, "TRIG_CS_LEAVE_COVER_A", -15.25000000, 85.12000000, -2.30000000, 3.20000000, 30.24000000, 6.00000000, 0.00000000, 0.00000000, -59.46000000, 1 );
    sub_15238( ref l_U1193, "TRIG_CS_LEAVE_COVER_B1", -3.48000000, 84.11000000, -2.30000000, 8.59000000, 3.61000000, 6.00000000, 0.00000000, 0.00000000, -49.46000000, 1 );
    sub_15238( ref l_U1214, "TRIG_CS_LEAVE_COVER_B2", -15.72000000, 84.37000000, -2.30000000, 20.22000000, 6.39000000, 6.00000000, 0.00000000, 0.00000000, -144.46000000, 1 );
    sub_15238( ref l_U1283, "RESTAURANT_START_ELEVATOR", -29.77000000, 101.71000000, -2.30000000, 9.98000000, 3.76000000, 6.00000000, 0.00000000, 0.00000000, -64.46000000, 1 );
    sub_15238( ref l_U914, "RESTAURANT_02_02_START", -31.77000000, 106.16000000, -2.30000000, 7.48000000, 10.32000000, 6.00000000, 0.00000000, 0.00000000, -64.46000000, 1 );
    sub_15238( ref l_U977, "CS RETREAT FRONT", -25.27000000, 96.27000000, -2.30000000, 30.77000000, 35.08000000, 6.00000000, 0.00000000, 0.00000000, -49.46000000, 1 );
    sub_15238( ref l_U998, "CS RETREAT REAR", -10.06000000, 78.51000000, -2.30000000, 16.62000000, 35.08000000, 6.00000000, 0.00000000, 0.00000000, -49.46000000, 1 );
    sub_15238( ref l_U1019, "CS RETREAT CLEANUP", -20.20000000, 67.99000000, -2.30000000, 4.00000000, 4.00000000, 6.00000000, 0.00000000, 0.00000000, 0.54000000, 1 );
    sub_15238( ref l_U1257, "Force 02_02 Start", -35.81000000, 102.66000000, -2.30000000, 2.46000000, 3.84000000, 6.00000000, 0.00000000, 0.00000000, -64.46000000, 1 );
    sub_16438( ref l_U1278, "Teth_RST_CenterFront", -10.73000000, 83.03000000, -1.33000000, 3.52000000, 9.10000000, 4.57000000, 0.00000000, 0.00000000, -35.00000000, 1 );
    sub_16438( ref l_U1046, "RESTAURANT_AREA", -15.77000000, 85.01000000, -1.82000000, 38.90000000, 32.61000000, 6.03000000, 0.00000000, 0.00000000, 25.00000000, 1 );
    return;
}

void sub_14641(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_15238(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_16438(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_16575()
{
    sub_294( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U1421 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( -1869674323 )))
    {
        sub_294( "CCB", "Creating the MadeItToHeli script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( -1869674323 );
        if (SCRIPT_VAR_HASH_EXISTS( -1869674323 ))
        {
            sub_294( "CCB", "The MadeItToHeli script variable was successfully created...", 0 );
        }
        else
        {
            sub_294( "CCB", "The MadeItToHeli script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
        sub_294( "CCB", "The MadeItToHeli script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( -1869674323, 0 );
    }
    return;
}

void sub_16987(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_17007();
    return;
}

void sub_17007()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_17303()
{
    sub_294( "SP", "P_REQUEST_ASSETS", 0 );
    if (g_U892 < 5)
    {
        if (((CUTSCENE_NAMED_IS_LOADING( ref l_U875 )) == 0) AND ((CUTSCENE_IS_LOADED( ref l_U875 )) == 0))
        {
            PRE_STREAM_SEAMLESS_CUTSCENE( ref l_U875 );
        }
    }
    sub_17404( g_U2462, 0 );
    sub_17592( "LEVEL_S_CLUB_CP_05", 0, 0 );
    sub_17669( 1917829108, 0 );
    sub_17870( 1194438308, 0 );
    sub_17870( 406496141, 0 );
    return;
}

void sub_17404(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_3356( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_17592(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_17669(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_17870(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

int sub_18051()
{
    if (((ISEQ_IS_LOADED( 1917829108 )) == 1) AND (HAS_ANIM_DICT_LOADED( "LEVEL_S_CLUB_CP_05", 0 )))
    {
        if (g_U892 < 5)
        {
            if ((CUTSCENE_IS_LOADED( ref l_U875 )) == 1)
            {
                return 1;
            }
        }
        else
        {
            return 1;
        }
    }
    return 0;
}

void sub_18555(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 = sub_451();
    sub_12455( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

int sub_18628(unknown uParam0)
{
    sub_294( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_4133( uParam0, sub_451() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

int sub_19087()
{
    if (NOT (sub_19110( ref g_U2645, ref l_U1047, -1, 0, 1, 1, 1 )))
    {
        sub_294( "MF", "Spawning: piRST_CS_FIRST", 0 );
        return 0;
    }
    if (NOT (sub_19110( ref g_U2648, ref l_U1074, -1, 0, 1, 1, 1 )))
    {
        sub_294( "MF", "Spawning: piRST_CS_CENTER", 0 );
        return 0;
    }
    if (NOT (sub_19110( ref g_U2650, ref l_U1145, -1, 0, 1, 1, 1 )))
    {
        sub_294( "MF", "Spawning: piRST_CS_ELEV_COVER", 0 );
        return 0;
    }
    if (NOT (sub_19110( ref g_U2653, ref l_U1131, -1, 0, 1, 1, 1 )))
    {
        sub_294( "MF", "Spawning: piRST_CS_RUNNER", 0 );
        return 0;
    }
    return 1;
}

int sub_19110(unknown uParam0, unknown uParam1, int iParam2, boolean bParam3, boolean bParam4, int iParam5, unknown uParam6)
{
    int iVar9;
    int iVar10;
    int Result;

    iVar9 = sub_19124( uParam0, uParam1 );
    if (iParam2 == -1)
    {
        iVar10 = (uParam0^);
    }
    else
    {
        iVar10 = iParam2;
    }
    if (iVar9 < iVar10)
    {
        if ((uParam1^)[iVar9]._fU16 == 0)
        {
            SCRIPT_ASSERT( "Invalid Ped Struct!  No Model Defined! Aborting Ped Spawn", 0 );
            sub_294( "MF", "Invalid Ped Struct!  No Model Defined! Aborting Ped Spawn", 0 );
            sub_19423( iVar9 );
            return 0;
        }
        if (NOT (DOES_PED_EXIST( (uParam0^)[iVar9] )))
        {
            sub_17404( (uParam1^)[iVar9]._fU16, uParam6 );
            (uParam0^)[iVar9] = sub_19490( ref (uParam1^)[iVar9] );
            if (NOT bParam4)
            {
                SET_PED_VISIBLE( (uParam0^)[iVar9], bParam4 );
                sub_3356( "SPAWNING INVISIBLE PED!!!" );
            }
            if (iParam5 == 1)
            {
                sub_20224( (uParam0^)[iVar9] );
                sub_3356( "Deactivating Ped..." );
            }
        }
    }
    if (bParam3)
    {
        if (iVar9 == (iVar10 - 1))
        {
            sub_294( "MF", "F_HANDLE_PED_ARRAY_SPAWN: Returning true Once.  If you see this looping, you likely have unitialized ped model data in your pedstruct array.", 0 );
            Result = 1;
        }
        return Result;
    }
    else if (iVar9 >= iVar10)
    {
        return 1;
    }
    return 0;
}

void sub_19124(unknown uParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = (uParam1^);
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (DOES_PED_EXIST( (uParam0^)[I] )))
        {
            if ((uParam1^)[I]._fU16 != 0)
            {
                if (I < Result)
                {
                    Result = I;
                }
            }
        }
    }
    return Result;
}

void sub_19423(unknown uParam0)
{
    return;
}

void sub_19490(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_17404( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_19969( iParam0->_fU40 );
    sub_20049( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_19969(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_20049(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_20224(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_20832()
{
    sub_294( "MF", "P_RST_SETUP_CS - START", 0 );
    sub_20901( ref g_U2648, "piRST_CS_CENTER_" );
    sub_20901( ref g_U2650, "piRST_CS_ELEV_COVER_" );
    sub_20901( ref g_U2645, "piRST_CS_FIRST_" );
    sub_20901( ref l_U1305, "piRST_ELEVATOR_PEDS_" );
    sub_20901( ref g_U2653, "piRST_CS_RUNNER_" );
    sub_21124( ref l_U1040, 0.60000000, 0 );
    sub_21306( ref g_U2648, l_U1046, 1 );
    sub_21306( ref g_U2650, l_U1046, 1 );
    sub_21306( ref g_U2645, l_U1046, 1 );
    sub_21306( ref g_U2653, l_U1046, 1 );
    sub_21481( ref g_U2648, 0, 0 );
    sub_21481( ref g_U2650, 0, 0 );
    sub_21481( ref g_U2645, 0, 0 );
    sub_21481( ref g_U2653, 0, 0 );
    if (NOT (IS_PED_DEAD( g_U2645[0] )))
    {
        sub_6318( g_U2645[0], 1194438308, 25000, 0, 0 );
        sub_21666( g_U2645[0], ref l_U1040 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2645[0], 1 );
        SET_ROOM_FOR_PED_BY_NAME( g_U2645[0], ref g_U2576 );
        sub_21983( ref g_U2645[0], ref g_U3091, 4.00000000, 15.00000000 );
        SET_PED_ALERTNESS( g_U2645[0], 3 );
    }
    if (NOT (IS_PED_DEAD( g_U2645[1] )))
    {
        sub_6318( g_U2645[1], 406496141, 25000, 0, 0 );
        sub_21666( g_U2645[1], ref l_U1040 );
        sub_21983( ref g_U2645[1], ref g_U3091, 4.00000000, 17.00000000 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2645[1], 1 );
        SET_ROOM_FOR_PED_BY_NAME( g_U2645[1], ref g_U2576 );
        SET_PED_ALERTNESS( g_U2645[1], 3 );
    }
    if (NOT (IS_PED_DEAD( g_U2648[0] )))
    {
        sub_6318( g_U2648[0], 406496141, 25000, 0, 0 );
        sub_21666( g_U2648[0], ref l_U1040 );
        sub_21983( ref g_U2648[0], ref g_U3091, 4.00000000, 17.00000000 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2648[0], 1 );
        SET_ROOM_FOR_PED_BY_NAME( g_U2648[0], ref g_U2576 );
    }
    if (NOT (IS_PED_DEAD( g_U2653[0] )))
    {
        sub_6318( g_U2653[0], 406496141, 25000, 0, 0 );
        sub_21666( g_U2653[0], ref l_U1040 );
        sub_21983( ref g_U2648[0], ref g_U3091, 4.00000000, 12.00000000 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2653[0], 1 );
        SET_ROOM_FOR_PED_BY_NAME( g_U2653[0], ref g_U2576 );
    }
    if (NOT (IS_PED_DEAD( g_U2650[0] )))
    {
        sub_6318( g_U2650[0], 406496141, 25000, 0, 0 );
        sub_21666( g_U2650[0], ref l_U1040 );
        sub_21983( ref g_U2650[0], ref g_U3091, 4.00000000, 12.00000000 );
        SET_ROOM_FOR_PED_BY_NAME( g_U2650[0], ref g_U2576 );
        SET_PED_ALERTNESS( g_U2650[0], 3 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2650[0], 1 );
        SET_BLOCKING_OF_PED_TARGETTING( g_U2650[0], 1 );
    }
    if (NOT (IS_PED_DEAD( g_U2650[1] )))
    {
        sub_6318( g_U2650[1], 1194438308, 25000, 0, 0 );
        sub_21666( g_U2650[1], ref l_U1040 );
        sub_21983( ref g_U2650[1], ref g_U3107, 4.00000000, 37.00000000 );
        SET_ROOM_FOR_PED_BY_NAME( g_U2650[1], ref g_U2576 );
        SET_PED_ALERTNESS( g_U2650[1], 3 );
        SET_PED_FLAG_LOCK_TO_COVER( g_U2650[1], 1 );
        TASK_COMBAT_SNAP_TO_COVER( g_U2650[1], "GenCover", "B57451C1_47334F5_Corner2", sub_451() );
        SET_PED_SUGGESTED_COVER_POINT( g_U2650[1], "GenCover", "B57451C1_47334F5_Corner2" );
    }
    sub_294( "MF", "P_RST_SETUP_CS - END", 0 );
    return;
}

void sub_20901(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_21124(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_21306(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_21340( ref uParam1, (uParam0^)[I], uParam2 );
    }
    return;
}

void sub_21340(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_21481(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            SET_PED_PATH_CAN_USE_CLIMBOVERS( (uParam0^)[I], uParam1 );
            SET_PED_PATH_CAN_DROP_FROM_HEIGHT( (uParam0^)[I], uParam2 );
        }
    }
    return;
}

void sub_21666(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_3356( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_21124( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_21124( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_21983(unknown uParam0, unknown uParam1, float fParam2, float fParam3)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    return;
}

void sub_23010(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_10541( sub_451(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

int sub_23253()
{
    return 1;
}

void sub_23270()
{
    sub_294( "MF", "P_RST_MID_05_REGISTER - START", 0 );
    CUTSCENE_REGISTER_ISEQ( 1917829108 );
    if (NOT (IS_PED_DEAD( sub_451() )))
    {
        ISEQ_REGISTER_ENTITY( 1917829108, "Max", sub_451(), 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( sub_451(), 0, 0 ), "W_PI_38_Ba_H^3", 0 );
    }
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "G_CS_NCSM_B1^1", l_U1311[0]._fU20 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "G_CS_NCSM_D^1", l_U1311[1]._fU20 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "Sero_Club", l_U1311[2]._fU20 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "Fabi_Club", l_U1311[3]._fU20 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "Giov_Club_Low", 2102978950 );
    if (NOT (IS_PED_DEAD( g_U2648[0] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2648[0], "G_CS_NCSM_B1^2", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U2648[0], "/Global/AMED/AMED_Root/AMED_INITIALIZE_IDLE" );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U2648[0], l_U1074[0]._fU0, l_U1074[0]._fU12 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U2648[0], 0, 0 ), "W_SB_Uzi_Aa_H", 0 );
    }
    if (NOT (IS_PED_DEAD( g_U2645[0] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2645[0], "G_CS_NCSM_B1", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U2645[0], l_U1047[0]._fU0, l_U1047[0]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U2645[0], "/Global/AMED/AMED_Root/AMED_INITIALIZE_LOCO" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U2645[0], 0, 0 ), "W_PI_38_Ba_H", 0 );
    }
    if (NOT (IS_PED_DEAD( g_U2645[1] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2645[1], "G_CS_NCSM_D", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U2645[1], l_U1047[1]._fU0, l_U1047[1]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U2645[1], "/Global/AMED/AMED_Root/AMED_INITIALIZE_LOCO" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U2645[1], 0, 0 ), "W_PI_38_Ba_H^1", 0 );
    }
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U3318._fU0, g_U3318._fU4 ), "p_clb_door_int_da", 0 );
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U3297._fU0, g_U3297._fU4 ), "p_clb_door_int_res", 0 );
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U3304._fU0, g_U3304._fU4 ), "p_clb_door_int_res^1", 0 );
    sub_294( "MF", "P_RST_MID_05_REGISTER - END", 0 );
    return;
}

void sub_24342()
{
    if (NOT l_U904)
    {
        if (IS_SCREEN_FADING_OUT() == 1)
        {
            sub_294( "MF", "Cutscene was skipped", 0 );
            l_U904 = 1;
        }
    }
    return;
}

int sub_24423()
{
    return 1;
}

void sub_24440()
{
    sub_294( "MF", "P_RST_MID_05_BLEND_OUT_SETUP - START", 0 );
    if (IS_SCREEN_FADED_OUT())
    {
        DO_SCREEN_FADE_IN( 100 );
    }
    if (NOT (ISEQ_QUERY_ENTITY_STATE( 1917829108, "Max", 3 )))
    {
        if (NOT (IS_PED_DEAD( sub_451() )))
        {
            ISEQ_REGISTER_ENTITY( 1917829108, "Max", sub_451(), 0 );
        }
        if (NOT (IS_PED_DEAD( l_U1305[2] )))
        {
            sub_24619( l_U1305[2] );
            ISEQ_REGISTER_ENTITY( 1917829108, "SERANO", l_U1305[2], 0 );
        }
        ISEQ_START( 1917829108 );
    }
    CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_CP_05", "B_OUT_MID_05_NC_FWD_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
    sub_24840( ref g_U2645 );
    sub_24840( ref g_U2648 );
    sub_24840( ref g_U2650 );
    sub_24840( ref g_U2653 );
    sub_24922();
    if (NOT (IS_PED_DEAD( g_U2650[1] )))
    {
        sub_24619( g_U2650[1] );
        FREEZE_PED_POSITION( g_U2650[1], 1 );
        SET_PED_VISIBLE( g_U2650[1], 0 );
    }
    if (NOT l_U904)
    {
        sub_1375( ref l_U895 );
    }
    SET_FREEZE_HEADING_BLEND( 4000 );
    sub_25423();
    sub_294( "MF", "P_RST_MID_05_BLEND_OUT_SETUP - END", 0 );
    return;
}

void sub_24619(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_24840(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_24619( (uParam0^)[I] );
    }
    return;
}

void sub_24922()
{
    unknown uVar2;
    unknown uVar3;

    sub_294( "MF", "P_RST_CS_FIRST_ACTIVATE - START", 0 );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_ATTACK_MOVE( 0, -10.53469000, 78.43863000, -1.22095000, 1092616192, 1101004800, -1082130432, 3 );
    if (NOT (IS_PED_DEAD( sub_451() )))
    {
        TASK_COMBAT_PED( 0, sub_451() );
    }
    CLOSE_SEQUENCE_TASK( uVar2 );
    if (NOT (IS_PED_DEAD( g_U2645[0] )))
    {
        TASK_PERFORM_SEQUENCE( g_U2645[0], uVar2 );
    }
    OPEN_SEQUENCE_TASK( ref uVar3 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
    TASK_ATTACK_MOVE( 0, -3.57000000, 80.86000000, -0.82000000, 1092616192, 1101004800, -1082130432, 3 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    if (NOT (IS_PED_DEAD( sub_451() )))
    {
        TASK_COMBAT_PED( 0, sub_451() );
    }
    CLOSE_SEQUENCE_TASK( uVar3 );
    if (NOT (IS_PED_DEAD( g_U2645[1] )))
    {
        TASK_PERFORM_SEQUENCE( g_U2645[1], uVar3 );
    }
    CLEAR_SEQUENCE_TASK( uVar2 );
    CLEAR_SEQUENCE_TASK( uVar3 );
    sub_294( "MF", "P_RST_CS_FIRST_ACTIVATE - END", 0 );
    return;
}

void sub_25423()
{
    sub_294( "MF", "P_REQUEST_2ND_ASSET - START", 0 );
    sub_17404( g_U2450, 0 );
    sub_17404( g_U2448, 0 );
    sub_17404( g_U2452, 0 );
    sub_17404( g_U2463, 0 );
    sub_17404( g_U889, 0 );
    sub_17404( 691364849, 0 );
    sub_17404( -935043754, 0 );
    sub_17404( -1409914275, 0 );
    sub_17404( g_U2479, 0 );
    sub_17404( 118119071, 0 );
    sub_17669( -609394341, 0 );
    sub_17669( -1139091117, 0 );
    sub_17870( -612753081, 0 );
    sub_294( "MF", "P_REQUEST_2ND_ASSET - END", 0 );
    return;
}

int sub_25718()
{
    int iVar2;

    if (l_U848._fU52)
    {
        if (NOT sub_25742())
        {
            if (IS_DEATH_PANEL_WIPE_ALLOWED())
            {
                DO_SCREEN_FADE_IN( 0 );
            }
        }
    }
    if (l_U847)
    {
        if (sub_1493( ref l_U895 ))
        {
            sub_13210( "SCLB_MID05NC1", ref l_U885 );
        }
    }
    if (NOT l_U884)
    {
        if (CAMERA_ANIMATED_CURRENT_TIME() > ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_CLUB_CP_05", "B_OUT_MID_05_NC_FWD_CAM" )) - l_U883))
        {
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2370[5], 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2409[5], 1065353216, 0 );
            CAMERA_ANIMATED_STOP( l_U883, 1 );
            iVar2 = l_U883 + 100;
            SIMULATE_PLAYER_INPUT_GAIT( sub_473(), 2, iVar2, 0 );
            l_U884 = 1;
        }
    }
    if ((ISEQ_QUERY_ENTITY_STATE( 1917829108, "Max", 6 )) || (ISEQ_QUERY_ENTITY_STATE( 1917829108, "Max", 5 )))
    {
        return 1;
    }
    return 0;
}

int sub_25742()
{
    if (l_U34)
    {
        sub_294( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U34 = 0;
        return 1;
        break;
    }
    sub_294( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

void sub_26263(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_294( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return sub_26384( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 26348, 26364, uParam8 );
}

void sub_26348()
{
    return;
}

int sub_26364()
{
    return 1;
}

void sub_26384(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_26707(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_294( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_294( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_294( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_294( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_294( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_294( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_27485( iParam0->_fU0, 0 );
            sub_294( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_27817( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_27817( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_294( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_28345( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_27817( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_28694( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_28694( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_27485(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_27817(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_451() )))
        {
            SET_PLAYER_CONTROL( sub_473(), 0, uParam2 );
            SET_PED_DUCKING( sub_451(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_451() );
            }
            SET_PED_INVINCIBLE( sub_451(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_28345(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_451() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_451(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_451(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_451(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_451(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_451(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_28694(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_451() )))
    {
        SET_PLAYER_CONTROL( sub_473(), 1, 0 );
        SET_PED_INVINCIBLE( sub_451(), 0 );
        if (bParam0)
        {
            sub_28775();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_28775()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_451() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_451(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_451(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_451(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_451(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_29185(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_294( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_294( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_6972( iParam1 );
        sub_29444( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_29895( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_29895( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_30127( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_29895( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_30127( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_30127( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_29895( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_30127( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_30127( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_30127( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_29895( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_30127( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_30127( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_30127( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_30127( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_31685( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_294( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_29444(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_4349( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_294( "TEH", "Ending context", 0 );
        sub_294( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_29895(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_30127(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_31685(int iParam0)
{
    sub_3356( "CHECKPOINT DATA" );
    sub_31724( iParam0->_fU4 );
    sub_31747( iParam0->_fU16 );
    sub_31747( iParam0->_fU20 );
    sub_31747( iParam0->_fU24 );
    sub_19423( iParam0->_fU28 );
    sub_19423( iParam0->_fU56 );
    sub_19423( iParam0->_fU60 );
    sub_19423( iParam0->_fU64 );
    sub_19423( iParam0->_fU68 );
    sub_19423( iParam0->_fU72 );
    sub_19423( iParam0->_fU76 );
    sub_19423( iParam0->_fU80 );
    sub_19423( iParam0->_fU84 );
    sub_19423( iParam0->_fU88 );
    sub_19423( iParam0->_fU92 );
    sub_31747( iParam0->_fU32 );
    sub_19423( iParam0->_fU36 );
    sub_19423( iParam0->_fU40 );
    sub_19423( iParam0->_fU44 );
    sub_31747( iParam0->_fU136 );
    sub_31982( iParam0->_fU140 );
    sub_19423( iParam0->_fU52 );
    sub_3356( "---nRightHolsterAttachmentEnabled: " );
    sub_19423( iParam0->_fU96 );
    sub_3356( "---nRightHolsterAttachmentToggled: " );
    sub_19423( iParam0->_fU100 );
    sub_3356( "---nLeftHolsterAttachmentEnabled: " );
    sub_19423( iParam0->_fU104 );
    sub_3356( "---nLeftHolsterAttachmentToggled: " );
    sub_19423( iParam0->_fU108 );
    sub_3356( "---nRifleHolsterAttachmentEnabled: " );
    sub_19423( iParam0->_fU112 );
    sub_3356( "---nRifleHolsterAttachmentToggled: " );
    sub_19423( iParam0->_fU116 );
    sub_3356( "---nRightHandAttachmentEnabled: " );
    sub_19423( iParam0->_fU120 );
    sub_3356( "---nRightHandAttachmentToggled: " );
    sub_19423( iParam0->_fU124 );
    sub_3356( "---nLeftHandAttachmentEnabled: " );
    sub_19423( iParam0->_fU128 );
    sub_3356( "---nLeftHandAttachmentToggled: " );
    sub_19423( iParam0->_fU132 );
    sub_19423( l_U1 );
    sub_19423( 144 );
    return;
}

void sub_31724(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_31747(unknown uParam0)
{
    return;
}

void sub_31982(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_32792()
{
    unknown[5] uVar2;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;

    sub_294( "MF", "P_RST_CREATE_ELEVATOR - START", 0 );
    array(ref uVar2, 5);
    uVar2[0] = {l_U1399};
    uVar2[1] = {l_U1399 + (vector( 0.00000000, 0.00000000, 5.00000000))};
    uVar2[2] = {l_U1399 + (vector( 0.00000000, 0.00000000, 10.00000000))};
    uVar2[3] = {l_U1399 + (vector( 0.00000000, 0.00000000, 15.00000000))};
    uVar2[4] = {l_U1399 + (vector( 0.00000000, 0.00000000, 20.00000000))};
    sub_3315( g_U2656 );
    sub_33017( ref g_U2656, ref uVar2, l_U1402, -935043754, 691364849, 691364849, 1.00000000 );
    sub_33256( ref g_U2656, 0, 1 );
    sub_34003( ref g_U2656, ref g_U2584 );
    sub_8452( ref g_U2656 );
    sub_34277( ref g_U2656, l_U1405, 1, 2, 3, 4, -1, -1, -1, -1, -1, -1 );
    sub_294( "MF", "P_RST_CREATE_ELEVATOR - END", 0 );
    return;
}

void sub_33017(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;

    sub_3356( "[SP]### P_CreateElevatorStruct ###" );
    I = 0;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        iParam0->_fU24[I] = {(uParam1^)[I]};
    }
    iParam0->_fU316 = 0;
    iParam0->_fU12 = {uParam2};
    iParam0->_fU212 = uParam5;
    iParam0->_fU216 = uParam6;
    iParam0->_fU220 = uParam7;
    iParam0->_fU284 = 0;
    iParam0->_fU288 = 0;
    iParam0->_fU292 = 0.88000000;
    iParam0->_fU296 = 0.02500000;
    iParam0->_fU300 = 0.00000000;
    iParam0->_fU304 = 0.00000000;
    iParam0->_fU208 = uParam8;
    return;
}

void sub_33256(int iParam0, unknown uParam1, unknown uParam2)
{
    sub_3356( "[SP]### P_CreateElevator ###" );
    iParam0->_fU0 = {iParam0->_fU24[uParam1]};
    sub_3380( iParam0->_fU232 );
    iParam0->_fU232 = sub_33353( iParam0->_fU212, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
    if ((DOES_OBJECT_EXIST( iParam0->_fU232 )) == 1)
    {
        FREEZE_OBJECT_POSITION( iParam0->_fU232, 1 );
    }
    sub_3380( iParam0->_fU236 );
    iParam0->_fU236 = sub_33353( iParam0->_fU216, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
    if ((DOES_OBJECT_EXIST( iParam0->_fU236 )) == 1)
    {
        FREEZE_OBJECT_POSITION( iParam0->_fU236, 1 );
    }
    if (iParam0->_fU288 == 0)
    {
        sub_3380( iParam0->_fU240 );
        iParam0->_fU240 = sub_33353( iParam0->_fU220, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
        if ((DOES_OBJECT_EXIST( iParam0->_fU240 )) == 1)
        {
            FREEZE_OBJECT_POSITION( iParam0->_fU240, 1 );
        }
    }
    if (iParam0->_fU284 == 1)
    {
        sub_3380( iParam0->_fU244 );
        iParam0->_fU244 = sub_33353( iParam0->_fU224, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
        if ((DOES_OBJECT_EXIST( iParam0->_fU244 )) == 1)
        {
            FREEZE_OBJECT_POSITION( iParam0->_fU244, 1 );
        }
        if (iParam0->_fU288 == 0)
        {
            sub_3380( iParam0->_fU248 );
            iParam0->_fU248 = sub_33353( iParam0->_fU228, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
            if ((DOES_OBJECT_EXIST( iParam0->_fU248 )) == 1)
            {
                FREEZE_OBJECT_POSITION( iParam0->_fU248, 1 );
            }
        }
    }
    return;
}

void sub_33353(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_17404( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_34003(int iParam0, unknown uParam1)
{
    sub_3356( "[SP]### P_AddElevatorToInterior ###" );
    if ((DOES_OBJECT_EXIST( iParam0->_fU232 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU232, uParam1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU236 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU236, uParam1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU240 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU240, uParam1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU244 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU244, uParam1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU248 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU248, uParam1 );
    }
    return;
}

void sub_34277(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    sub_3356( "[SP]### P_MOVE_ELEVATOR ###" );
    iParam0->_fU160[0] = uParam2;
    iParam0->_fU160[1] = uParam3;
    iParam0->_fU160[2] = uParam4;
    iParam0->_fU160[3] = uParam5;
    iParam0->_fU160[4] = uParam6;
    iParam0->_fU160[5] = uParam7;
    iParam0->_fU160[6] = uParam8;
    iParam0->_fU160[7] = uParam9;
    iParam0->_fU160[8] = uParam10;
    iParam0->_fU160[9] = uParam11;
    iParam0->_fU208 = uParam1;
    iParam0->_fU316 = 2;
    if (iParam0->_fU288 == 1)
    {
        ;
    }
    return;
}

void sub_34539(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_34551( iParam0 )) == 0)
    {
        sub_34617( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

int sub_34551(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_34617(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_34770()
{
    unknown uVar2;

    sub_294( "MF", "P_RST_RST_CENTER_ACTIVATE - START", 0 );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
    TASK_PAUSE( 0, 500 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_ATTACK_MOVE( 0, -14.11000000, 80.10000000, -0.82000000, 1092616192, 1101004800, -1082130432, 3 );
    if (NOT (IS_PED_DEAD( sub_451() )))
    {
        TASK_COMBAT_PED( 0, sub_451() );
    }
    CLOSE_SEQUENCE_TASK( uVar2 );
    if (NOT (IS_PED_DEAD( g_U2648[0] )))
    {
        sub_21340( ref l_U1278, g_U2648[0], 3 );
        TASK_PERFORM_SEQUENCE( g_U2648[0], uVar2 );
    }
    CLEAR_SEQUENCE_TASK( uVar2 );
    sub_294( "MF", "P_RST_RST_CENTER_ACTIVATE - END", 0 );
    return;
}

void sub_35063()
{
    sub_294( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_294( "CCB", "Starting the Nightclub_Restaurant context...", 0 );
    START_CONTEXT( "Nightclub_Restaurant" );
    return;
}

void sub_35269(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (sub_35304( (uParam0^)[I], 1 ))
        {
            if ((sub_10541( (uParam0^)[I], uParam1 )) == 1)
            {
                sub_3178( (uParam0^)[I] );
                sub_19423( I );
            }
        }
    }
    return;
}

void sub_35304(unknown uParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((DOES_PED_EXIST( uParam0 )) == 1)
    {
        Result = 1;
    }
    else
    {
        Result = 0;
    }
    if (Result == 1)
    {
        if ((IS_PED_DEAD( uParam0 )) == 1)
        {
            if (iParam1 == 1)
            {
                Result = 1;
            }
            else
            {
                Result = 0;
            }
        }
        else
        {
            Result = 1;
        }
    }
    return Result;
}

void sub_35561(int iParam0, unknown uParam1)
{
    if ((sub_34551( iParam0 )) == 0)
    {
        sub_34617( iParam0 );
    }
    DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( iParam0->_fU0, iParam0->_fU4 ), uParam1 );
    return;
}

void sub_35633(int iParam0, unknown uParam1, unknown uParam2)
{
    if ((sub_34551( iParam0 )) == 0)
    {
        sub_34617( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_FORCE_CLOSE( iParam0->_fU0, iParam0->_fU4, uParam1, uParam2 );
    return;
}

void sub_35760(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_34551( iParam0 )) == 0)
    {
        sub_34617( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

void sub_35939(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    else
    {
        return -1.00000000;
    }
    return VDIST( uVar6, uParam1 );
}

int sub_36050()
{
    if ((HAS_WEAPON_LOADED( -612753081 )) AND (((ISEQ_IS_LOADED( -609394341 )) == 1) AND (((ISEQ_IS_LOADED( -1139091117 )) == 1) AND ((HAS_MODEL_LOADED( 118119071 )) AND ((HAS_MODEL_LOADED( -1409914275 )) AND ((HAS_MODEL_LOADED( g_U889 )) AND ((HAS_MODEL_LOADED( 691364849 )) AND ((HAS_MODEL_LOADED( -935043754 )) AND ((HAS_MODEL_LOADED( g_U2463 )) AND ((HAS_MODEL_LOADED( g_U2452 )) AND ((HAS_MODEL_LOADED( g_U2448 )) AND (HAS_MODEL_LOADED( g_U2450 )))))))))))))
    {
        return 1;
    }
    return 0;
}

void sub_36267()
{
    sub_294( "MF", "P_RST_SETUP_ELEVATOR_PEDS - START", 0 );
    if (NOT (IS_PED_DEAD( l_U1305[0] )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1305[0], 1 );
        sub_6318( l_U1305[0], 406496141, 25000, 0, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1305[1] )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1305[1], 1 );
        sub_6318( l_U1305[1], 406496141, 25000, 0, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1305[2] )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1305[2], 1 );
    }
    if (NOT (IS_PED_DEAD( l_U1305[3] )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1305[3], 1 );
    }
    if (NOT (IS_PED_DEAD( l_U1305[4] )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1305[4], 1 );
    }
    sub_294( "MF", "P_RST_SETUP_ELEVATOR_PEDS - END", 0 );
    return;
}

void sub_36610()
{
    sub_294( "SA", "P_RST_CREATE_PLACEMENTS - START", 0 );
    sub_36665();
    sub_3479( l_U1416 );
    l_U1416 = sub_37208( -4072149, -29.53000000, 93.55000000, -0.17000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0, 1119092736 );
    if ((DOES_PLACEMENT_EXIST( l_U1416 )) == 1)
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1416, ref g_U2576 );
    }
    l_U1282 = sub_37600( 118119071, -42.86700000, 107.76400000, -3.06000000, 0.00000000, 0.00000000, 26.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U1282 ))
    {
        FREEZE_OBJECT_POSITION( l_U1282, 1 );
    }
    sub_294( "SA", "P_RST_CREATE_PLACEMENTS - END", 0 );
    return;
}

void sub_36665()
{
    sub_294( "CO", "P_CREATE_S_CLB_GG_M3_02", 0 );
    sub_36783( ref g_U849, g_U889, -206653150, 662406930, -18.82000000, 82.31000000, 0.15000000, 1.50000000, 0.00000000, g_U776, "GtaMILO_clb_Int_04" );
    sub_36912( ref g_U849 );
    return;
}

void sub_36783(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_294( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_36912(int iParam0)
{
    sub_294( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_36973( iParam0->_fU12 )) == 1)
        {
            sub_294( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_294( "CO", "has never been collected.", 0 );
        }
        if ((sub_36973( iParam0->_fU12 )) == 0)
        {
            sub_3479( iParam0->_fU0 );
            iParam0->_fU0 = sub_37208( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_294( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_294( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_36973(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_37208(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_37600(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_17404( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_37953(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

void sub_37979()
{
    unknown uVar2;

    sub_294( "MF", "P_RST_RST_RUNNER_ATTACKS - START", 0 );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, -8.06000000, 89.03000000, -1.22000000, sub_451(), 3, 1, 1056964608, 0, 1, 0 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    if (NOT (IS_PED_DEAD( sub_451() )))
    {
        TASK_COMBAT_PED( 0, sub_451() );
    }
    CLOSE_SEQUENCE_TASK( uVar2 );
    if (NOT (IS_PED_DEAD( g_U2653[0] )))
    {
        TASK_PERFORM_SEQUENCE( g_U2653[0], uVar2 );
    }
    CLEAR_SEQUENCE_TASK( uVar2 );
    sub_294( "MF", "P_RST_RST_RUNNER_ATTACKS - END", 0 );
    return;
}

void sub_38426()
{
    sub_294( "MF", "P_RST_RELEASE_CS_FROM_COVER - START", 0 );
    if (NOT (IS_PED_DEAD( g_U2650[1] )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( g_U2650[1], 0 );
    }
    sub_294( "MF", "P_RST_RELEASE_CS_FROM_COVER - END", 0 );
    return;
}

void sub_38598()
{
    sub_294( "MF", "P_RST_RESET_MISSION_FAIL_TIMERS - START", 0 );
    sub_2022( ref g_U3340 );
    sub_2022( ref g_U3350 );
    sub_294( "MF", "P_RST_RESET_MISSION_FAIL_TIMERS - END", 0 );
    return;
}

void sub_38738()
{
    sub_294( "MF", "P_RST_CS_RELEASE_TETHERS - START", 0 );
    sub_38798( ref g_U2648 );
    sub_38798( ref g_U2650 );
    sub_38798( ref g_U2645 );
    sub_38798( ref g_U2653 );
    sub_294( "MF", "P_RST_CS_RELEASE_TETHERS - END", 0 );
    return;
}

void sub_38798(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_38829( (uParam0^)[I] );
    }
    return;
}

void sub_38829(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        RESET_PED_TETHERING( uParam0 );
    }
    return;
}

void sub_38983(unknown uParam0)
{
    sub_294( "MF", "P_RST_SET_RETREAT_STATE - START", 0 );
    sub_34539( ref g_U3311, uParam0 );
    sub_34539( ref g_U3318, uParam0 );
    sub_39066( ref g_U2648, uParam0 );
    sub_39066( ref g_U2650, uParam0 );
    sub_39066( ref g_U2645, uParam0 );
    sub_39066( ref g_U2648, uParam0 );
    sub_294( "MF", "P_RST_SET_RETREAT_STATE - END", 0 );
    return;
}

void sub_39066(unknown uParam0, int iParam1)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            if ((iParam1 == 1) || (sub_10541( (uParam0^)[I], l_U977 )))
            {
                sub_39145( (uParam0^)[I] );
            }
            else
            {
                sub_39402( (uParam0^)[I] );
            }
        }
    }
    return;
}

void sub_39145(unknown uParam0)
{
    sub_294( "MF", "P_RST_MAKE_PED_AGRESSIVE - START", 0 );
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        sub_21983( ref uParam0, ref g_U3107, 3.00000000, 8.00000000 );
        REGISTER_TARGET( uParam0, sub_451() );
        SET_LOCKED_TARGET( uParam0, sub_451() );
        SET_PED_COMBAT_ATTRIBUTES( uParam0, 1, 0 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( uParam0, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_451() ), sub_451(), 1, 8.00000000, 50.00000000, -1082130432, 3 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( uParam0, 0 );
        SET_BLOCKING_OF_PED_TARGETTING( uParam0, 0 );
    }
    sub_294( "MF", "P_RST_MAKE_PED_AGRESSIVE - END", 0 );
    return;
}

void sub_39402(unknown uParam0)
{
    unknown uVar3;

    sub_294( "MF", "P_RST_MAKE_PED_RETREAT - START", 0 );
    OPEN_SEQUENCE_TASK( ref uVar3 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
    TASK_FOLLOW_NAV_MESH_TO_COORD( 0, -20.29474000, 67.54578000, -1.21416900, 3, 20000, 1048576000, 0, 0 );
    CLOSE_SEQUENCE_TASK( uVar3 );
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
        SET_BLOCKING_OF_PED_TARGETTING( uParam0, 1 );
        TASK_PERFORM_SEQUENCE( uParam0, uVar3 );
    }
    sub_294( "MF", "P_RST_MAKE_PED_RETREAT - END", 0 );
    return;
}

void sub_39721(int iParam0, unknown uParam1)
{
    if ((sub_34551( iParam0 )) == 0)
    {
        sub_34617( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_AUTO_CLOSE( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

void sub_39795(int iParam0, unknown uParam1)
{
    if ((sub_34551( iParam0 )) == 0)
    {
        sub_34617( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_LATCH( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

void sub_39882()
{
    int Result;

    Result = (((sub_39902( ref g_U2648, l_U977 )) + (sub_39902( ref g_U2650, l_U977 ))) + (sub_39902( ref g_U2645, l_U977 ))) + (sub_39902( ref g_U2653, l_U977 ));
    return Result;
}

void sub_39902(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    int I;
    int Result;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((sub_10541( (uParam0^)[I], uParam1 )) == 1)
        {
            Result++;
        }
    }
    return Result;
}

int sub_40195()
{
    if (GET_PAYNEKILLER_AMT() > g_U3539)
    {
        sub_294( "MF", "Player picked up Payne Killers!", 0 );
        sub_19423( g_U3539 );
        sub_19423( GET_PAYNEKILLER_AMT() );
        g_U3539 = GET_PAYNEKILLER_AMT();
        return 1;
    }
    g_U3539 = GET_PAYNEKILLER_AMT();
    return 0;
}

void sub_40553(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_SET_ACTION_INTENTION( uParam0, uParam1, uParam2, g_U665 );
    }
    return;
}

int sub_41019()
{
    vector vVar2;
    float fVar5;
    vector vVar6;
    vector vVar9;
    vector vVar12;
    vector vVar15;

    vVar2 = {-6.52900000, 90.66800000, -1.22500000};
    fVar5 = -180.00000000;
    vVar6 = {-0.47300000, 55.73700000, -1.21169500};
    vVar9 = {0.00000000, 0.00000000, 0.00000000};
    vVar12 = {0.09100000, 0.03900000, -0.03400000};
    vVar15 = {1.60000000, -2.50000000, -3.10000000};
    switch (l_U45)
    {
        case 0: break;
        case 2:
        sub_294( "SP", "eMid02Fail10State = MIDSCENE_SETUP", 0 );
        sub_27817( 1, 0, 0, 1 );
        DO_SCREEN_FADE_OUT( 500 );
        l_U45 = 1;
        sub_294( "SP", "eMid02Fail10State = MIDSCENE_START_FADE", 0 );
        break;
        case 1:
        if (IS_SCREEN_FADED_OUT())
        {
            sub_12455( sub_451(), vVar2, fVar5 );
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_451(), 1, 0 ) )) AND (NOT (IS_PED_DEAD( sub_451() ))))
            {
                REMOVE_PED_WEAPON( sub_451(), GET_WEAPON_FROM_HAND( sub_451(), 1, 0 ) );
            }
            ISEQ_REGISTER_ENTITY( -609394341, "player", sub_451(), 0 );
            ISEQ_START( -609394341 );
            l_U45 = 3;
        }
        break;
        case 3:
        sub_294( "SP", "eMid02Fail10State = MIDSCENE_FIRST_FRAME", 0 );
        sub_3380( l_U806 );
        l_U806 = sub_37600( g_U2479, vVar6, vVar9, 0, 0, 1 );
        if ((DOES_OBJECT_EXIST( l_U806 )) == 1)
        {
            if ((IS_PED_DEAD( sub_451() )) == 0)
            {
                ATTACH_OBJECT_TO_PED( l_U806, sub_451(), 25310, vVar12, vVar15, 0 );
            }
        }
        CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_FAIL", "MID_02_NC_FAIL_RESTAURANT_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        DO_SCREEN_FADE_IN( 500 );
        sub_41725();
        l_U45 = 4;
        sub_294( "SP", "eMid02Fail10State = MIDSCENE_PLAYING", 0 );
        break;
        case 4:
        if (NOT (sub_1137( ref l_U797 )))
        {
            if (NOT sub_42039())
            {
                sub_294( "MF", "Max is finished talking, starting fade delay timer...", 0 );
                sub_1241( ref l_U797, 800, 1, 0 );
                sub_1375( ref l_U797 );
            }
        }
        if ((CAMERA_ANIMATED_CURRENT_TIME() > ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_CLUB_FAIL", "MID_02_NC_FAIL_RESTAURANT_CAM" )) - 100)) || (sub_1493( ref l_U797 )))
        {
            sub_42309( "MISS_DEATH_FAIL_FAST_01A", 0 );
            l_U45 = 5;
            sub_294( "SP", "eMid02Fail10State = MIDSCENE_END_FADE", 0 );
        }
        break;
        case 5:
        CAMERA_ANIMATED_STOP( 3000, 0 );
        ISEQ_UNREGISTER_ENTITY( -609394341, "player" );
        ISEQ_TERMINATE( -609394341 );
        SET_OBJECT_VISIBLE( l_U806, 0 );
        sub_3380( l_U806 );
        l_U45 = 0;
        sub_294( "SP", "eMid02Fail10State = MIDSCENE_IDLE", 0 );
        return 1;
        break;
    }
    return 0;
}

void sub_41725()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;
    string sVar13;

    sub_294( "MF", "P_FAIL_PLAY_PHONE_DIALOGUE_POST_MID_04 - START", 0 );
    iVar12 = GET_RANDOM_INT_IN_RANGE( 0, 3 );
    if (iVar12 == 0)
    {
        sVar13 = "SCLB_MID02C";
    }
    else if (iVar12 == 1)
    {
        sVar13 = "SCLB_MID02F";
    }
    else
    {
        sVar13 = "SCLB_MID02J";
    }
    sub_13210( sVar13, ref uVar2 );
    sub_294( "MF", "P_FAIL_PLAY_PHONE_DIALOGUE_POST_MID_04 - END", 0 );
    return;
}

void sub_42039()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

void sub_42309(unknown uParam0, boolean bParam1)
{
    sub_2748( ref l_U35 );
    l_U35 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
    SETUP_BULLET_CAMERA_SCENE( l_U35, uParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
    if (bParam1)
    {
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    }
    return;
}

void sub_42828(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            CLEAR_PED_TASKS( (uParam0^)[I] );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^)[I], 1 );
            SET_BLOCKING_OF_PED_TARGETTING( (uParam0^)[I], 1 );
            sub_42922( ref (uParam0^)[I] );
        }
    }
    return;
}

void sub_42922(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_STAND_STILL( 0, -1 );
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    return;
}

void sub_43073(int iParam0, unknown uParam1)
{
    if (NOT (sub_43087( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

boolean sub_43087(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_43790()
{
    sub_294( "MF", "P_RELEASE_RESTAURANT_ASSETS", 0 );
    sub_43846( g_U2462 );
    sub_43846( g_U2448 );
    sub_43846( g_U2449 );
    sub_43846( 123419661 );
    sub_43846( g_U2452 );
    sub_43846( g_U2463 );
    sub_43846( -935043754 );
    sub_43846( 691364849 );
    sub_43846( g_U889 );
    sub_43846( -1409914275 );
    sub_43846( g_U2479 );
    sub_43846( 118119071 );
    sub_44097( 406496141 );
    sub_44097( -612753081 );
    sub_44097( 1194438308 );
    return;
}

void sub_43846(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_3356( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_44097(unknown uParam0)
{
    SET_WEAPON_AS_NO_LONGER_NEEDED( uParam0 );
    return;
}


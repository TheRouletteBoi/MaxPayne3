void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = -1;
    l_U3 = {64536, 64536, 64536};
    l_U15 = 150;
    l_U16 = 0.02000000;
    l_U24 = 0;
    l_U54 = 0;
    l_U236 = {0, 2, -0.50000000};
    l_U239 = 45;
    l_U259 = 0;
    l_U260 = 0;
    l_U261 = 1500;
    l_U272 = 0;
    l_U310 = 0;
    l_U312 = 1;
    l_U313 = 0;
    l_U314 = 0;
    l_U315 = {-10.30000000, -18.21000000, 86.23000000};
    l_U318 = {-10.30000000, -22.14000000, 86.23000000};
    l_U321 = {-7.69000000, -21.94000000, 86.23000000};
    l_U324 = {-10.36000000, -21.94000000, 86.23000000};
    l_U327 = {-7.87000000, -26.38000000, 86.50000000};
    l_U330 = {-10.49000000, -26.38000000, 86.50000000};
    l_U333 = 0;
    l_U334 = 4000;
    l_U335 = -1;
    l_U1204 = 0;
    l_U1205 = 0;
    l_U1206 = 0;
    l_U1207 = 0;
    l_U1392 = 0;
    l_U1467 = 0.00000000;
    sub_379( "Script s_club_RS2A.sc is starting up..." );
    l_U310 = 1;
    l_U272 = 0;
    while (NOT IS_EXITFLAG_SET())
    {
        sub_431();
        if (l_U314 == 0)
        {
            sub_9511();
        }
        WAIT( 0 );
    }
    SET_EXITFLAG_RESPONSE();
    sub_3560( 0 );
    sub_53339();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_club_RS2A" );
    g_U1096 = 1;
    sub_379( "Script s_club_RS2A.sc is terminating..." );
    return;
}

void sub_379(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    return;
}

void sub_431()
{
    if ((g_U892 == 9) || ((g_U892 == 8) || (g_U892 == 7)))
    {
        switch (l_U314)
        {
            case 0:
            if (IS_PED_DEAD( sub_529() ))
            {
                if (IS_PED_DEAD( sub_529() ))
                {
                    sub_624();
                }
                AUDIO_MUSIC_SUSPEND( 5000 );
                l_U314 = 1;
                sub_379( "eFailState = FAIL_WAITING_FOR_PLAYER" );
            }
            else if (sub_1375())
            {
                AUDIO_MUSIC_SUSPEND( 5000 );
                l_U314 = 3;
                sub_379( "eFailState = FAIL_WAITING_FOR_PLAYER" );
            }
            break;
            case 1:
            STOP_SCRIPT_STREAM( g_U2867 );
            if (sub_1884())
            {
                l_U314 = 3;
            }
            else if ((sub_1924( 0 )) == 1)
            {
                l_U314 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_529() )))
            {
                l_U314 = 3;
                sub_379( "eFailState = FAIL_CLEANUP_ALL" );
            }
            break;
            case 3:
            sub_379( "eFailState = FAIL_CLEANUP_ALL" );
            if ((NOT (IS_PED_DEAD( sub_529() ))) AND (NOT (IS_PLAYER_DEAD( sub_551() ))))
            {
                SET_PLAYER_CONTROL( sub_551(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_529() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_529(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            sub_3284( "CLUB_RS_GIOV2_SCRIPTED_FAIL_FX" );
            sub_3284( "CLUB_RS_GIOV3_SCRIPTED_FAIL_FX" );
            sub_3284( "MISS_DEATH_FAIL_FAST_01A" );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            sub_3560( 1 );
            sub_4357();
            sub_4833();
            if (g_U893[10]._fU36 == 1)
            {
                SET_EXITFLAG_FOR_SCRIPT( g_U893[10]._fU32 );
                sub_5133( ref g_U893[10] );
                g_U1074[10] = 0;
            }
            REQUEST_SCRIPT_STREAM( "S_CLUB_HELI_RS_STREAM", g_U2867 );
            l_U314 = 4;
            sub_379( "eFailState = FAIL_RESTORE_PLAYER" );
            break;
            case 4:
            sub_379( "eFailState = FAIL_RESTORE_PLAYER" );
            sub_5313( ref l_U274, sub_529() );
            l_U314 = 5;
            sub_379( "eFailState = FAIL_RESTART_CHECKPOINT" );
            break;
            case 5:
            sub_379( "eFailState = FAIL_RESTART_CHECKPOINT" );
            l_U310 = 1;
            l_U314 = 0;
            sub_379( "eFailState = FAIL_IDLE" );
            break;
        }
    }
    return;
}

int sub_529()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_551() );
    }
    return 0;
}

void sub_551()
{
    return GET_PLAYER_ID();
}

void sub_624()
{
    sub_658( ref l_U205, g_U665, g_U665, l_U239, 5000 );
    sub_996( ref l_U205 );
    ATTACH_CAM_TO_PED( l_U205._fU0, sub_529(), l_U236, 1 );
    POINT_CAM_AT_PED( l_U205._fU0, sub_529(), g_U665, 1 );
    return;
}

void sub_658(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_786( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U649, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_786(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_996(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    if (iParam0->_fU92 == 1)
    {
        SET_CAM_ACTIVE_WITH_INTERP( iParam0->_fU0, iParam0->_fU120, iParam0->_fU88, iParam0->_fU100, iParam0->_fU104 );
    }
    else
    {
        SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    }
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_1110( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

void sub_1110(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_1375()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_529() )))
        {
            SET_PED_FORCED_TO_WALK( sub_529(), 0 );
            SET_PLAYER_FORCED_AIM( sub_551(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_551(), 1 );
            if ((IS_PED_VISIBLE( sub_529() )) == 0)
            {
                SET_PED_VISIBLE( sub_529(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_1884()
{
    return g_U648;
}

int sub_1924(int iParam0)
{
    iParam0 = 1;
    switch (l_U260)
    {
        case 0:
        if (NOT (sub_1985( ref l_U262 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_529() )))
            {
                l_U261 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_786( ref l_U262, l_U261, 1, 1 );
            sub_1110( ref l_U262 );
        }
        if (sub_2113( ref l_U262 ))
        {
            sub_2309( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_529() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_551() )))
            {
                SET_PLAYER_CONTROL( sub_551(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U260 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U260 = 2;
            }
            else
            {
                l_U260 = 3;
            }
        }
        break;
        case 2:
        sub_2309( "NS", "Player will QUIT", 0 );
        sub_2644();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_2309( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_2644();
        return 1;
        break;
    }
    return 0;
}

int sub_1985(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

int sub_2113(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_2309(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_2644()
{
    sub_2309( "NS", "P_PostFailRetryCleanup", 0 );
    sub_2694( ref l_U262 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_551() )))
    {
        SET_PLAYER_CONTROL( sub_551(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U259 = 0;
    l_U259 = l_U259;
    l_U260 = 0;
    return;
}

void sub_2694(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_3284(unknown uParam0)
{
    sub_2309( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    sub_3367( ref l_U273 );
    l_U272 = 1;
    return;
}

void sub_3367(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

void sub_3560(boolean bParam0)
{
    sub_379( "P_CLEANUP_RS2A" );
    if (bParam0)
    {
        sub_3605( -1313172978, 1 );
        sub_3605( 1476011597, 1 );
        sub_3605( -931023773, 1 );
        sub_3830( ref g_U2822 );
        sub_3940( g_U2866 );
        sub_3830( ref g_U2778 );
        STOP_SCRIPT_STREAM( g_U2867 );
        SET_PLAYER_COMBAT_TIMER_MODE( 1 );
    }
    sub_3605( 1996590434, 1 );
    sub_3605( -247122877, 1 );
    sub_3605( 739943046, 1 );
    sub_3830( ref l_U800 );
    sub_4069( ref l_U844 );
    RESET_PED_MODEL_LOD_DISTANCES( 2145666447 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    sub_4151( ref l_U1460, 1 );
    return;
}

void sub_3605(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_3830(int iParam0)
{
    sub_3845( iParam0->_fU0 );
    iParam0->_fU172 = 0;
    return;
}

void sub_3845(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_3940(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

void sub_4069(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_3830( ref (uParam0^)[I] );
    }
    return;
}

void sub_4151(int iParam0, int iParam1)
{
    if ((sub_4163( iParam0 )) == 0)
    {
        sub_4229( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

int sub_4163(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_4229(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_4357()
{
    sub_379( "P_RS_GlobalCleanup" );
    DETACH_PED( g_U2763, 1 );
    DETACH_PED( g_U2749, 1 );
    DETACH_PED( sub_529(), 1 );
    sub_3845( g_U2763 );
    sub_3845( g_U2749 );
    sub_3845( g_U2777 );
    sub_3940( g_U2866 );
    sub_3605( -1313172978, 1 );
    sub_3605( -931023773, 1 );
    sub_3605( 1476011597, 1 );
    sub_4561( sub_529(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
    ENABLE_HIT_DETECTION( 1 );
    ENABLE_LAST_MAN_STANDING( 1 );
    SET_SILHOUETTE_ACTIVE( 1 );
    SET_PLAYER_COMBAT_TIMER_MODE( 0 );
    PLAYER_SET_AIM_MODE( 0 );
    ENABLE_CROSSHAIR( 1 );
    SET_PED_INVINCIBLE( sub_529(), 0 );
    SET_PED_PROOFS( sub_529(), 0, 0, 0, 0, 0 );
    SET_PLAYER_FORCED_AIM( sub_551(), 0, 0 );
    SET_PED_CONSUMING_AMMO( sub_529(), 1 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    SET_PED_CAN_RAGDOLL( sub_529(), 1 );
    AUDIO_SET_PED_FOOTSTEPS_ON( 1 );
    SET_INSTANT_FIRE_FORCED( 0 );
    RELEASE_PED_ENTITY_SYNC_POINT( sub_529() );
    SET_PED_USES_ANIMATED_DEATH( sub_529(), 0 );
    ALLOW_BULLET_CAMERA_CHEAT( 1 );
    sub_4785( l_U23 );
    return;
}

void sub_4561(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_ACTION_TREE_PLAY_NODE( uParam0, uParam1 );
    }
    return;
}

void sub_4785(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_4833()
{
    sub_2309( "MF", "P_RESET_AMBIENT_SPEECH_VARIABLES - START", 0 );
    sub_4901( ref l_U65 );
    sub_4901( ref l_U45 );
    l_U43 = STAT_GET_INT( "SP_BULLETS_FIRED_RH" );
    l_U44 = STAT_GET_INT( "SP_BULLETS_HIT_RH" );
    sub_4901( ref l_U25 );
    sub_4901( ref l_U34 );
    l_U74 = 0;
    sub_2309( "MF", "P_RESET_AMBIENT_SPEECH_VARIABLES - END", 0 );
    return;
}

void sub_4901(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

void sub_5133(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_5313(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_2309( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_5497( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_6574( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_6866( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_7226( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_6866( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_7226( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_6866( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_7226( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_7511( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_7226( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_7511( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_7226( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_8004( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_8165( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_529(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_2309( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_5497(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_5529( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_5529(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_6574(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_6866(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_7182( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_7182(unknown uParam0)
{
    return;
}

void sub_7226(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_7511(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_7182( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_8004(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_8165(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_5529( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_8237( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_8237(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_9511()
{
    int iVar2;
    unknown uVar3;

    iVar2 = l_U310;
    switch (l_U310)
    {
        case 0: break;
        case 1:
        sub_379( "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA" );
        sub_9757();
        sub_10068();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U310 = 2;
        sub_379( "eCheckpointState = CP_INITIAL_REQUEST_ASSETS" );
        break;
        case 2:
        sub_379( "eCheckpointState = CP_INITIAL_REQUEST_ASSETS" );
        sub_11477();
        sub_17282();
        l_U310 = 3;
        sub_379( "eCheckpointState = CP_INITIAL_LOADING_ASSETS" );
        break;
        case 3:
        if ((sub_20269( ref g_U1903 )) AND ((sub_20078( ref g_U1350 )) AND ((sub_19951( ref g_U1447 )) AND ((sub_19830( ref g_U1301 )) AND (sub_19710( ref g_U1108 ))))))
        {
            if ((NOT l_U274._fU0) AND (g_U891 > 6))
            {
                sub_20412();
                l_U312 = 0;
                g_U1094 = 1;
                l_U310 = 4;
                sub_379( "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP" );
            }
            else
            {
                l_U310 = 6;
                sub_379( "eCheckpointState = CP_WAITING_TO_ACTIVATE" );
            }
        }
        break;
        case 4:
        sub_379( "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP" );
        sub_20693( 1, 0, 0, 1 );
        REQUEST_SCRIPT_STREAM( "S_CLUB_HELI_RS_STREAM", g_U2867 );
        if (NOT (sub_20893( ref l_U274 )))
        {
            sub_7511( sub_529(), 354276007, 25000, 0, 0 );
            l_U310 = 5;
            sub_379( "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS" );
        }
        else
        {
            l_U310 = 6;
            sub_379( "eCheckpointState = CP_WAITING_TO_ACTIVATE" );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD( sub_529() )))
        {
            if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_529(), 0, 0 ) ))
            {
                if (g_U891 == 7)
                {
                    g_U892 = 7;
                    sub_21340( ref l_U274, g_U892, sub_529(), g_U2216[7], g_U2331[7], g_U2370[7], g_U2409[7], 0 );
                }
                else if (g_U891 == 8)
                {
                    g_U892 = 8;
                    sub_21340( ref l_U274, g_U892, sub_529(), g_U2216[7], g_U2331[7], g_U2370[7], g_U2409[7], 0 );
                }
                else if (g_U891 == 9)
                {
                    g_U892 = 9;
                    sub_21340( ref l_U274, g_U892, sub_529(), g_U2216[7], g_U2331[7], g_U2370[7], g_U2409[7], 0 );
                };;;
                l_U310 = 6;
                sub_379( "eCheckpointState = CP_WAITING_TO_ACTIVATE" );
            }
        }
        break;
        case 6:
        if (l_U311 == 1)
        {
            l_U1203 = 1;
        }
        if (g_U1094)
        {
            if (sub_25194())
            {
                sub_31149( ref l_U791, 500 );
                if (g_U892 < 7)
                {
                    g_U892 = 7;
                }
                if (NOT l_U312)
                {
                    if (g_U892 == 7)
                    {
                        sub_31236( 69, 0, 7169.00000000 );
                        sub_32252( 24.57800000, -25.48600000, 86.65900000, 94.25100000, 1996590434, "giovanna", 0 );
                    }
                    else if (g_U892 == 8)
                    {
                        sub_31236( 156, 1065353216, 0 );
                        sub_32252( 19.63835000, -25.15502000, 86.22796000, 85.58800000, -247122877, "giovanna", 0 );
                    }
                    else if (g_U892 == 9)
                    {
                        sub_31236( 72, 1065353216, 0 );
                        sub_32252( -9.37000000, -23.97800000, 86.26500000, 177.00000000, 739943046, "giovanna", 0 );
                        l_U1467 = 3.00000000;
                    };;;
                    sub_32998( -1313172978, "heli_max" );
                    sub_33613();
                }
                if (l_U312)
                {
                    l_U312 = 0;
                    l_U313 = 1;
                    l_U310 = 7;
                    sub_379( "eCheckpointState = CP_MID09" );
                }
                else
                {
                    WAIT( 20 );
                    l_U310 = 8;
                    sub_379( "eCheckpointState = CP_INTRO" );
                }
            }
        }
        break;
        case 7:
        if (l_U311)
        {
            sub_35498( ref l_U1208, "MID_09_NC_concat", 34339, 34358, 35254, 35456, 250, 1 );
            l_U1208._fU64 = 0;
            l_U1208._fU4 = 2;
        }
        if (sub_35940( ref l_U1208 ))
        {
            l_U310 = 8;
            sub_379( "eCheckpointState = CP_INTRO" );
        }
        break;
        case 8:
        if (g_U892 == 7)
        {
            if (NOT l_U274._fU0)
            {
                sub_21340( ref l_U274, g_U892, sub_529(), g_U2216[7], g_U2331[7], g_U2370[7], g_U2409[7], l_U313 );
            }
            l_U313 = 0;
            l_U310 = 9;
            sub_379( "eCheckpointState = CP_GAMEPLAY_2A" );
        }
        else if (g_U892 == 8)
        {
            l_U310 = 11;
            sub_379( "eCheckpointState = CP_GAMEPLAY_2B" );
        }
        else if (g_U892 == 9)
        {
            l_U310 = 13;
            sub_379( "eCheckpointState = CP_GAMEPLAY_2C" );
        };;;
        sub_38187();
        sub_37530( 1, 1 );
        if (NOT sub_38653())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        break;
        case 9:
        if (l_U311)
        {
            sub_28804( ref l_U844, 0, 0, -1 );
            UNPAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
            SET_PLAYBACK_SPEED( g_U2866, 1.00000000 );
            sub_1110( ref l_U1244 );
            sub_38947();
            CAMERA_CLEAR_POINT_AT_TARGET();
            if (l_U312)
            {
                sub_2309( "MF", "Playing Music Cue: 6.3", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_2_4", "NIGHTCLUB_01_2_4", 0, 0, 15000, -1082130432, 0 );
            }
            else
            {
                sub_2309( "MF", "Playing Music Cue: 6.4", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_2_4", "NIGHTCLUB_01_2_4", 0, 0, 0, -1082130432, 0 );
            }
        }
        sub_35386();
        sub_39314();
        sub_39487();
        if (sub_2113( ref l_U1244 ))
        {
            sub_39581();
            l_U74 = 1;
            sub_31149( ref l_U1235, 1000 );
        }
        if (sub_2113( ref l_U1235 ))
        {
            if (NOT (IS_BULLET_TIME_ACTIVE( 1 )))
            {
                sub_40862();
            }
        }
        if ((GET_SCRIPT_STREAM_STATE( "S_CLUB_HELI_RS_STREAM", g_U2867 )) == 2)
        {
            sub_2309( "MF", "STARTING HELICOPTER AUDIO", 0 );
            PLAY_SCRIPT_STREAM_FROM_VEHICLE( g_U2866, g_U2867 );
        }
        if (NOT l_U1204)
        {
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                if ((GET_TIME_POSITION_IN_RECORDING( g_U2866 )) >= 15451.00000000)
                {
                    l_U1204 = 1;
                    sub_379( "Pausing the vehicle recording." );
                    PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
                }
            }
        }
        if ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND (sub_41199( ref l_U800, 47, 1 )))
        {
            SET_PLAYER_CONTROL( sub_551(), 0, 0 );
            l_U310 = 14;
            sub_379( "eCheckpointState = CP_FAIL_2A" );
            break;
        }
        if (IS_PED_DEAD( g_U2777 ))
        {
            l_U310 = 18;
            sub_379( "eCheckpointState = CP_SHOT_GIOVANNA" );
            break;
        }
        if (IS_PED_DEAD( l_U800._fU0 ))
        {
            l_U310 = 10;
            sub_379( "eCheckpointState = CP_TRANSITION1" );
            break;
        }
        break;
        case 10:
        if (l_U311)
        {
            sub_20693( 1, 0, 0, 1 );
            sub_31149( ref l_U1402, 1000 );
        }
        if (sub_2113( ref l_U1402 ))
        {
            sub_3605( 1996590434, 1 );
            sub_27882( g_U2777, -247122877, "giovanna" );
            ISEQ_START( -247122877 );
            WAIT( 0 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_CP_07", "VIG_14_NC_GIOV_P2_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
            sub_38454( g_U2777, 18.95540000, -24.83710000, 86.22793000, 85.58799000 );
            sub_31802( g_U2866, 156, 0, 3861.60000000, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2370[8], 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2409[8], 1065353216, 0 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
            sub_39581();
            PLAY_IMAGEFX( "TRIPLE_INTERLACE_HOLD_HARD", 4, 1 );
            PLAY_IMAGEFX( "FLASH_WHITE_2", 4, 1 );
        }
        if (l_U1402._fU16)
        {
            if (NOT IS_ANIMATED_CAMERA_PLAYING())
            {
                l_U310 = 11;
                sub_379( "eCheckpointState = CP_GAMEPLAY_2B" );
                break;
            }
        }
        break;
        case 11:
        if (l_U311)
        {
            sub_31802( g_U2866, 156, 0.80000000, 3861.60000000, 0 );
            sub_37530( 1, 1 );
            if (g_U892 != 8)
            {
                g_U892 = 8;
                sub_21340( ref l_U274, g_U892, sub_529(), g_U2216[7], g_U2331[7], g_U2370[7], g_U2409[7], 1 );
            }
            sub_38947();
            if (NOT (IS_PED_DEAD( l_U800._fU0 )))
            {
                sub_42143( l_U800._fU0 );
            }
            ENABLE_HIT_DETECTION( 0 );
            ENABLE_LAST_MAN_STANDING( 0 );
            sub_4833();
            sub_2309( "MF", "Playing Music Cue: 6.5", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_2_4", "NIGHTCLUB_01_2_4", 0, -1, -1, -1082130432, 0 );
            sub_2694( ref l_U1235 );
        }
        if ((GET_SCRIPT_STREAM_STATE( "S_CLUB_HELI_RS_STREAM", g_U2867 )) == 2)
        {
            sub_2309( "MF", "STARTING HELICOPTER AUDIO", 0 );
            PLAY_SCRIPT_STREAM_FROM_VEHICLE( g_U2866, g_U2867 );
        }
        sub_35386();
        sub_39314();
        if (NOT sub_42458())
        {
            sub_42524();
            sub_42849();
        }
        sub_39487();
        sub_43105( ref l_U844, 85, 1, 0 );
        if ((l_U335 > -1) AND (sub_2113( ref l_U1235 )))
        {
            if (NOT (IS_BULLET_TIME_ACTIVE( 1 )))
            {
                if (NOT (IS_PED_DEAD( l_U844[l_U335]._fU0 )))
                {
                    if ((GET_RANDOM_INT_IN_RANGE( 0, 100 )) < 55)
                    {
                        sub_40862();
                    }
                    else
                    {
                        sub_43357();
                        sub_31149( ref l_U1393, 500 );
                    }
                }
            }
        }
        if (NOT (sub_43583( l_U85 )))
        {
            if (sub_2113( ref l_U1393 ))
            {
                SET_RANDOM_SEED( TIMERA() );
                if ((GET_RANDOM_FLOAT_IN_RANGE( 0, 100 )) < 15)
                {
                    sub_43794();
                }
                else if ((GET_RANDOM_FLOAT_IN_RANGE( 0, 100 )) < 15)
                {
                    sub_42873();
                }
            }
        }
        if (NOT l_U1205)
        {
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                if ((GET_TIME_POSITION_IN_RECORDING( g_U2866 )) >= 14478.00000000)
                {
                    l_U1205 = 1;
                    sub_379( "Pausing the vehicle recording." );
                    PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
                }
            }
        }
        if (sub_44151( ref g_U2777, 47, 1 ))
        {
            sub_44217( ref g_U2777, 1 );
        }
        if ((sub_44267( ref l_U844 )) < 1)
        {
            l_U310 = 12;
            sub_379( "eCheckpointState = CP_TRANSITION2" );
            break;
        }
        if (sub_44414( ref l_U526, g_U2777, 0 ))
        {
            ENABLE_HIT_DETECTION( 0 );
            ENABLE_LAST_MAN_STANDING( 0 );
        }
        if (l_U526._fU68)
        {
            if (sub_44587())
            {
                SET_PLAYER_CONTROL( sub_551(), 0, 0 );
                l_U310 = 15;
                break;
            }
        }
        if (IS_PED_DEAD( g_U2777 ))
        {
            l_U310 = 18;
            sub_379( "eCheckpointState = CP_SHOT_GIOVANNA" );
            break;
        }
        if (l_U336[2]._fU80 != 0)
        {
            if (sub_44453( l_U844[2]._fU0, l_U1468 ))
            {
                if (sub_2113( ref l_U1489 ))
                {
                    SCRIPT_ASSERT( "HACK TO KILL CS IN MONSTER CLOSET.  THIS SHOULDN'T OCCUR!!!", 0 );
                    sub_2309( "MF", "HACK TO KILL CS IN MONSTER CLOSET.  THIS SHOULDN'T OCCUR!!!", 0 );
                    sub_3845( l_U844[2]._fU0 );
                }
            }
        }
        break;
        case 12:
        if (l_U311)
        {
            sub_20693( 1, 0, 0, 1 );
            sub_31149( ref l_U1411, 1000 );
            sub_658( ref l_U1420, -10.61000000, -25.36000000, 86.45000000, 10.98000000, 0.00000000, -20.18000000, 45, 1500 );
        }
        if (sub_2113( ref l_U1411 ))
        {
            sub_2309( "CO", "Playing IMAGEFX ", 0 );
            PLAY_IMAGEFX( "FLASH_GREEN_BLUE_DOUBLE", 4, 1 );
            PLAY_IMAGEFX( "EXTRA_LAYER_TINT_INTERLACE", 4, 1 );
            sub_3605( -247122877, 1 );
            sub_27882( g_U2777, 739943046, "giovanna" );
            sub_44217( ref g_U2777, 0 );
            ISEQ_START( 739943046 );
            WAIT( 0 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_CP_07", "VIG_15_NC_GMED_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
            sub_38454( g_U2777, -9.37000000, -23.97800000, 86.26500000, 173.00000000 );
            sub_28673( g_U2778 );
            sub_49205( ref g_U893[10] );
            l_U1467 = 4.00000000;
            sub_31802( g_U2866, 72, 0, 0.00000000, 0 );
            CAMERA_SNAP_POINT_AT_COORD( -10.86000000, -19.26000000, 87.97000000 );
        }
        if (l_U1411._fU16)
        {
            if (NOT IS_ANIMATED_CAMERA_PLAYING())
            {
                l_U310 = 13;
                sub_379( "eCheckpointState = CP_GAMEPLAY_2C" );
                break;
            }
        }
        break;
        case 13:
        if (l_U311)
        {
            sub_31802( g_U2866, 72, l_U1467, 0.00000000, 0 );
            sub_49416( 0, 0, 0, -859915232, -859915232, 0 );
            sub_37530( 1, 1 );
            sub_38947();
            sub_27753( ref g_U2778, 0 );
            if (g_U892 != 9)
            {
                g_U892 = 9;
                sub_21340( ref l_U274, g_U892, sub_529(), g_U2216[7], g_U2331[7], g_U2370[7], g_U2409[7], 1 );
            }
            if (NOT g_U893[10]._fU36)
            {
                sub_49205( ref g_U893[10] );
            }
            sub_49645( sub_529(), 52, -1 );
            SET_PED_PRIMARY_LOOKAT( sub_529(), g_U2777 );
            sub_1110( ref l_U1451 );
            if (l_U1411._fU16)
            {
                sub_31149( ref l_U1235, 2700 );
                sub_31149( ref l_U1244, 3400 );
            }
            else
            {
                sub_31149( ref l_U1235, 5000 );
                sub_31149( ref l_U1244, 6000 );
            }
            sub_2309( "MF", "Playing Music Cue: 6.5", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_2_4", "NIGHTCLUB_01_2_4", 0, -1, -1, -1082130432, 0 );
            CAMERA_CLEAR_POINT_AT_TARGET();
        }
        sub_35386();
        sub_39314();
        if (sub_2113( ref l_U1235 ))
        {
            if (NOT (IS_BULLET_TIME_ACTIVE( 1 )))
            {
                sub_40862();
            }
        }
        if (sub_2113( ref l_U1244 ))
        {
            sub_39581();
            l_U74 = 1;
        }
        if ((GET_SCRIPT_STREAM_STATE( "S_CLUB_HELI_RS_STREAM", g_U2867 )) == 2)
        {
            sub_2309( "MF", "STARTING HELICOPTER AUDIO", 0 );
            PLAY_SCRIPT_STREAM_FROM_VEHICLE( g_U2866, g_U2867 );
        }
        if (sub_2113( ref l_U1451 ))
        {
            sub_2309( "MF", "Clearing player looking at Giovanna and finishing ACT_INT_SEQ_ACTION06", 0 );
            CLEAR_PED_PRIMARY_LOOKAT( sub_529() );
            PED_FINISH_ACTION_INTENTION( sub_529(), 52 );
            SET_PLAYER_COMBAT_TIMER_MODE( 5 );
        }
        if (NOT l_U1206)
        {
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                if ((GET_TIME_POSITION_IN_RECORDING( g_U2866 )) >= 18209.00000000)
                {
                    l_U1206 = 1;
                    sub_379( "Pausing the vehicle recording." );
                    PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
                }
            }
        }
        if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
        {
            if (sub_44151( ref g_U2778._fU0, 47, 1 ))
            {
                sub_47404( ref g_U2778, 1 );
                SET_PLAYER_CONTROL( sub_551(), 0, 0 );
                l_U310 = 16;
                break;
            }
        }
        if (IS_PED_DEAD( g_U2777 ))
        {
            l_U310 = 18;
            sub_379( "eCheckpointState = CP_SHOT_GIOVANNA" );
            break;
        }
        if (IS_PED_DEAD( g_U2778._fU0 ))
        {
            SET_PLAYER_COMBAT_TIMER_MODE( 1 );
            l_U310 = 17;
            sub_379( "eCheckpointState = CP_OUTRO" );
            break;
        }
        break;
        case 18:
        if (l_U311)
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
            }
        }
        if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
        {
            l_U310 = 0;
            l_U314 = 1;
            AUDIO_MUSIC_SUSPEND( 5000 );
        }
        break;
        case 14:
        if (l_U311)
        {
            sub_20693( 1, 0, 0, 1 );
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
            }
            SET_PED_GORE( g_U2777, 1 );
            SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2777, 0 );
            SET_PED_AS_ONE_SHOT_KILL( g_U2777, 1 );
            sub_658( ref l_U1293, 18.57000000, -24.78000000, 86.30000000, 27.98000000, 0.00000000, -141.96000000, 1110704128, 1000 );
            sub_996( ref l_U1293 );
            sub_50802( "CLUB_RS_GIOV2_SCRIPTED_FAIL_FX", 0 );
            sub_31149( ref l_U1324, 150 );
            SHAKE_CAM( l_U1293._fU0, sub_51016(), 0.25000000 );
            TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND( sub_529(), 0, 0 ), 13, 0 );
        }
        if (sub_2113( ref l_U1324 ))
        {
            sub_31149( ref l_U1333, 1150 );
            SET_PED_SHOOTS_AT_COORD( l_U800._fU0, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U2777, 65488, 0, 0, 0 ) );
            SHAKE_CAM( l_U1293._fU0, "SMALL_EXPLOSION_SHAKE", 1 );
        }
        if (sub_2113( ref l_U1333 ))
        {
            SHAKE_CAM( l_U1293._fU0, sub_51016(), 0.03000000 );
            l_U310 = 0;
            l_U314 = 1;
            AUDIO_MUSIC_SUSPEND( 5000 );
        }
        break;
        case 15:
        if (l_U311)
        {
            sub_20693( 1, 0, 0, 1 );
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
            }
            l_U1391 = l_U844[l_U335]._fU0;
            if (sub_44453( l_U1391, l_U547[0] ))
            {
                l_U1392 = 1;
            }
            TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND( sub_529(), 0, 0 ), 13, 0 );
            sub_51379( ref l_U844 );
            if (l_U1392)
            {
                sub_38454( l_U1391, -10.47509000, -21.46595000, 86.23022000, 205.50000000 );
                sub_658( ref l_U1342, -12.51000000, -20.85000000, 87.04000000, 1.28000000, 0.00000000, -116.10000000, 1110704128, 1000 );
            }
            else
            {
                sub_38454( l_U1391, -10.60357000, -26.32164000, 86.22892000, 335.60000000 );
                sub_658( ref l_U1342, -9.20000000, -27.67000000, 86.45000000, 18.97000000, 0.00000000, 22.06000000, 1110704128, 1000 );
            }
            sub_996( ref l_U1342 );
            sub_50802( "CLUB_RS_GIOV3_SCRIPTED_FAIL_FX", 0 );
            SHAKE_CAM( l_U1342._fU0, sub_51016(), 0.25000000 );
            SET_PED_GORE( g_U2777, 1 );
            SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2777, 0 );
            SET_PED_AS_ONE_SHOT_KILL( g_U2777, 1 );
            FREEZE_PED_POSITION( g_U2777, 0 );
            sub_44979( ref l_U1391, g_U2777 );
            sub_51765( l_U1391, g_U2777, -1, 0 );
            SET_PED_CONSUMING_AMMO( l_U1391, 0 );
            sub_31149( ref l_U1373, 750 );
        }
        if (sub_2113( ref l_U1373 ))
        {
            OPEN_SEQUENCE_TASK( ref uVar3 );
            TASK_SHOOT_AT_PED( 0, g_U2777, 2000, 0, 1, 0, 0 );
            TASK_AIM_GUN_AT_PED( 0, g_U2777, -1, 0 );
            CLOSE_SEQUENCE_TASK( uVar3 );
            if (NOT (IS_PED_DEAD( l_U1391 )))
            {
                TASK_PERFORM_SEQUENCE( l_U1391, uVar3 );
            }
        }
        if ((NOT l_U1382._fU20) AND ((NOT l_U1382._fU16) AND (IS_PED_DEAD( g_U2777 ))))
        {
            sub_31149( ref l_U1382, 1000 );
            SHAKE_CAM( l_U1342._fU0, "SMALL_EXPLOSION_SHAKE", 1 );
        }
        if (sub_2113( ref l_U1382 ))
        {
            SHAKE_CAM( l_U1342._fU0, sub_51016(), 0.03000000 );
            l_U310 = 0;
            l_U314 = 1;
            AUDIO_MUSIC_SUSPEND( 5000 );
        }
        break;
        case 16:
        if (l_U311)
        {
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
            }
            sub_4561( g_U2778._fU0, "/Global/S_CLUB_VIG_15_NC/SEQ_START/GMED/FAIL_SEQUENCE/KILL" );
            sub_4561( g_U2777, "/Global/S_CLUB_VIG_15_NC/SEQ_START/GIO/FAIL_SEQUENCE/DIE" );
            WAIT( 0 );
            sub_38454( g_U2778._fU0, -11.39418000, -7.74573000, 86.23011000, 180.00000000 );
            sub_38454( g_U2777, -11.26953000, -9.30000000, 86.23022000, 5.00000000 );
            SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2777, 0 );
            SET_PED_AS_ONE_SHOT_KILL( g_U2777, 1 );
            sub_658( ref l_U1262, -11.02000000, -11.03000000, 87.41000000, 2.30000000, 0.00000000, 16.01000000, 1110704128, 1000 );
            sub_996( ref l_U1262 );
            sub_20693( 1, 0, 0, 1 );
            SHAKE_CAM( l_U1262._fU0, sub_51016(), 0.25000000 );
            TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND( sub_529(), 0, 0 ), 13, 0 );
        }
        if (sub_44151( ref g_U2778._fU0, 48, 1 ))
        {
            SET_PED_SHOOTS_AT_COORD( g_U2778._fU0, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U2777, 65488, 0, 0, 0 ) );
            SHAKE_CAM( l_U1262._fU0, "SMALL_EXPLOSION_SHAKE", 1 );
            AUDIO_MUSIC_SUSPEND( 5000 );
        }
        if (sub_44151( ref g_U2778._fU0, 49, 1 ))
        {
            sub_50802( "MISS_DEATH_FAIL_FAST_01A", 0 );
            l_U314 = 1;
            l_U310 = 0;
        }
        break;
        case 17:
        if (l_U311)
        {
            g_U1074[10] = 1;
        }
        if (g_U1095)
        {
            l_U310 = 19;
        }
        break;
        case 19:
        sub_379( "eCheckpointState = CP_FINISHED" );
        sub_52754( ref l_U800 );
        sub_52851( ref l_U844 );
        sub_53123( ref g_U2778 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U310 = 0;
        sub_379( "eCheckpointState = CP_IDLE" );
        break;
    }
    if (l_U310 != iVar2)
    {
        l_U311 = 1;
    }
    else
    {
        l_U311 = 0;
    }
    return;
}

void sub_9757()
{
    sub_379( "P_INITIALIZE_SCRIPT_DATA" );
    l_U311 = 1;
    sub_786( ref l_U773, 785, 1, 0 );
    l_U333 = 0;
    sub_786( ref l_U782, 3000, 1, 0 );
    l_U334 = 4000;
    l_U335 = -1;
    l_U1204 = 0;
    l_U1205 = 0;
    l_U1206 = 0;
    l_U1207 = 0;
    l_U1392 = 0;
    sub_786( ref l_U1333, 666, 1, 0 );
    sub_786( ref l_U1324, 666, 1, 0 );
    sub_786( ref l_U1373, 666, 1, 0 );
    sub_786( ref l_U1382, 666, 1, 0 );
    sub_786( ref l_U1244, 1700, 1, 0 );
    if (g_U892 == 9)
    {
        sub_786( ref l_U1451, 4500, 1, 0 );
    }
    else
    {
        sub_786( ref l_U1451, 2500, 1, 0 );
    }
    sub_786( ref l_U1235, 1000, 1, 0 );
    sub_786( ref l_U1489, 5000, 1, 0 );
    sub_786( ref l_U1253, 4000, 1, 0 );
    sub_786( ref l_U1393, 5000, 1, 0 );
    l_U1203 = 0;
    return;
}

void sub_10068()
{
    sub_379( "P_SET_STATIC_DATA" );
    sub_10183( ref l_U505, "TRIG_KILL_GIO_STOP_OTHERS", -10.15000000, -22.08000000, 86.41000000, 8.71000000, 11.89000000, 2.95000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10183( ref l_U526, "TRIGGER_START_R2B", 11.85000000, -24.36000000, 86.23000000, 8.49000000, 12.63000000, 3.24000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10183( ref l_U547[0], "TRIG_KILL_GIO_LEFT", -10.15000000, -21.79000000, 86.41000000, 4.10000000, 4.25000000, 2.95000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10183( ref l_U547[1], "TRIG_KILL_GIO_RIGHT", -10.17000000, -25.75000000, 86.41000000, 4.10000000, 3.76000000, 2.95000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10183( ref l_U547[2], "TRIG_KILL_GIO_BOTTOM", -10.23000000, -20.34000000, 86.41000000, 2.13000000, 3.39000000, 2.95000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10594( ref l_U611, ref l_U547 );
    sub_10183( ref l_U1468, "HACK TO KILL CS IF THEY DON'T LEAVE MONSTER CLOSET", 20.99000000, -34.05000000, 86.23000000, 5.87000000, 6.57000000, 3.24000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10183( ref l_U752, "TRIG_RS2B_Dialogue1", 21.76000000, -28.50000000, 86.19000000, 3.00000000, 3.00000000, 2.96000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11103( ref l_U1460, -2113982500, -12.48665000, -4.96388000, 87.33427000, 0.00000000, 0.00000000, -3.05000000 );
    l_U17[0] = 1037546172;
    l_U17[1] = g_U2453;
    l_U17[2] = 1049690760;
    l_U17[3] = 123419661;
    l_U17[4] = 230799837;
    SET_PED_MODEL_LOD_DISTANCES( 2145666447, 10.00000000, 80.00000000 );
    sub_11233( "SCLBAUD" );
    return;
}

void sub_10183(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_10594(int iParam0, unknown uParam1)
{
    int iVar4;
    int I;

    iVar4 = (uParam1^);
    if (iVar4 > 6)
    {
        sub_2309( "[SA]", "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
        SCRIPT_ASSERT( "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
    }
    for ( I = 0; I < iVar4; I++ )
    {
        iParam0->_fU0[I] = {(uParam1^)[I]};
    }
    iParam0->_fU508 = iVar4;
    iParam0->_fU548 = 0;
    iParam0->_fU552 = 0;
    iParam0->_fU556 = 0;
    iParam0->_fU560 = 0;
    return;
}

void sub_11103(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

void sub_11233(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_11253();
    return;
}

void sub_11253()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_11477()
{
    sub_379( "P_REQUEST_RS2A_PERSISTENT_ASSETS start" );
    sub_11539( ref l_U17, ref g_U1108 );
    sub_12948( 1194438308, ref g_U1301 );
    sub_12948( 724901397, ref g_U1301 );
    sub_12948( 406496141, ref g_U1301 );
    sub_13939( "LEVEL_S_CLUB_CP_06", ref g_U1447 );
    sub_14923( -1313172978, ref g_U1350 );
    sub_14923( -931023773, ref g_U1350 );
    sub_14923( 1476011597, ref g_U1350 );
    if (l_U312 == 1)
    {
        if ((g_U891 != 9) AND ((g_U891 != 8) AND (g_U891 != 7)))
        {
            sub_16933( "MID_09_NC_concat", 0 );
        }
    }
    if (g_U892 > 6)
    {
        REQUEST_SCRIPT_STREAM( "S_CLUB_HELI_RS_STREAM", g_U2867 );
    }
    sub_379( "P_REQUEST_RS2A_PERSISTENT_ASSETS end" );
    return;
}

void sub_11539(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_11574( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_11574(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_11609( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_11740( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_11609(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_11740( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_11740( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_11740( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_12388( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_11740( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_11740( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_11740(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_11760( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_11760(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_12388(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_12948(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_12969( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_13101( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_12969(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_13101( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_13101( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_13101( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_12388( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_13101( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_13101( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_13101(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_11760( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_13939(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_13960( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_14097( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_13960(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_14097( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_14097( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_14097( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_12388( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_14097( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_14097( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_14097(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_11760( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_14923(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_14958( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_15110( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_14958(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_15110( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_15110( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_15110( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_15110( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_12388( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_12388( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_15110( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_15110( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_15110(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_11760( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_16933(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_17282()
{
    sub_379( "P_REQUEST_RS2A_NONPERSISTENT_ASSETS start" );
    sub_11574( 2145666447, ref g_U1108 );
    sub_17396( "LEVEL/S_CLUB/s_club_vig_11_mar.act", ref g_U1964 );
    sub_17396( "LEVEL/S_CLUB/s_club_vig_11_pas.act", ref g_U1964 );
    sub_14923( -1313172978, ref g_U1350 );
    sub_14923( -931023773, ref g_U1350 );
    sub_14923( 1476011597, ref g_U1350 );
    sub_14923( 1996590434, ref g_U1350 );
    sub_14923( -247122877, ref g_U1350 );
    sub_14923( 739943046, ref g_U1350 );
    sub_18518( 69, ref g_U1903 );
    sub_18518( 156, ref g_U1903 );
    sub_18518( 72, ref g_U1903 );
    sub_13939( "LEVEL_S_CLUB_CP_07", ref g_U1447 );
    sub_12948( -1787162676, ref g_U1301 );
    sub_12948( 406496141, ref g_U1301 );
    sub_12948( 1194438308, ref g_U1301 );
    sub_379( "P_REQUEST_RS2A_NONPERSISTENT_ASSETS end" );
    return;
}

void sub_17396(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_17417( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
        sub_17556( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_17417(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being requested!!!", 0 );
                sub_17556( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ACTION_TREE asset is already loading!!!", 0 );
                sub_17556( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_ACTION_TREE_LOADED( uParam0 ))
                {
                    sub_17556( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ACTION_TREE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                    sub_12388( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being removed!!!", 0 );
                sub_17556( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_ACTION_TREE_LOADED( uParam0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
            sub_17556( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ACTION_TREE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_17556(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_11760( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ACTION_TREE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_18518(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_18539( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_18677( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_18539(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being requested!!!", 0 );
                sub_18677( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is already loading!!!", 0 );
                sub_18677( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
                {
                    sub_18677( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The VEHICLE_RECORDING asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = -1;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_12388( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being removed!!!", 0 );
                sub_18677( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_18677( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The VEHICLE_RECORDING - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_18677(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_11760( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The VEHICLE_RECORDING asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_19710(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_19830(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_19951(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_20078(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

int sub_20269(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

void sub_20412()
{
    sub_379( "P_SETUP_RS_WEATHER_AND_TOD" );
    RELEASE_TIME_OF_DAY();
    SET_WEATHER_TYPE_NOW_PERSIST( "EXTRASUNNY" );
    FREEZE_TIME_OF_DAY( 22, 0 );
    return;
}

void sub_20693(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_529() )))
        {
            SET_PLAYER_CONTROL( sub_551(), 0, uParam2 );
            SET_PED_DUCKING( sub_529(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_529() );
            }
            SET_PED_INVINCIBLE( sub_529(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

int sub_20893(unknown uParam0)
{
    sub_2309( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_5313( uParam0, sub_529() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_21340(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_2309( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_2309( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_8165( iParam1 );
        sub_21599( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_22050( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_22050( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_22282( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_22050( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_22282( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_22282( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_22050( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_22282( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_22282( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_22282( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_22050( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_22282( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_22282( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_22282( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_22282( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_23840( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_2309( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_21599(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_5529( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_2309( "TEH", "Ending context", 0 );
        sub_2309( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_22050(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_22282(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_23840(int iParam0)
{
    sub_7182( "CHECKPOINT DATA" );
    sub_23879( iParam0->_fU4 );
    sub_23902( iParam0->_fU16 );
    sub_23902( iParam0->_fU20 );
    sub_23902( iParam0->_fU24 );
    sub_23945( iParam0->_fU28 );
    sub_23945( iParam0->_fU56 );
    sub_23945( iParam0->_fU60 );
    sub_23945( iParam0->_fU64 );
    sub_23945( iParam0->_fU68 );
    sub_23945( iParam0->_fU72 );
    sub_23945( iParam0->_fU76 );
    sub_23945( iParam0->_fU80 );
    sub_23945( iParam0->_fU84 );
    sub_23945( iParam0->_fU88 );
    sub_23945( iParam0->_fU92 );
    sub_23902( iParam0->_fU32 );
    sub_23945( iParam0->_fU36 );
    sub_23945( iParam0->_fU40 );
    sub_23945( iParam0->_fU44 );
    sub_23902( iParam0->_fU136 );
    sub_24150( iParam0->_fU140 );
    sub_23945( iParam0->_fU52 );
    sub_7182( "---nRightHolsterAttachmentEnabled: " );
    sub_23945( iParam0->_fU96 );
    sub_7182( "---nRightHolsterAttachmentToggled: " );
    sub_23945( iParam0->_fU100 );
    sub_7182( "---nLeftHolsterAttachmentEnabled: " );
    sub_23945( iParam0->_fU104 );
    sub_7182( "---nLeftHolsterAttachmentToggled: " );
    sub_23945( iParam0->_fU108 );
    sub_7182( "---nRifleHolsterAttachmentEnabled: " );
    sub_23945( iParam0->_fU112 );
    sub_7182( "---nRifleHolsterAttachmentToggled: " );
    sub_23945( iParam0->_fU116 );
    sub_7182( "---nRightHandAttachmentEnabled: " );
    sub_23945( iParam0->_fU120 );
    sub_7182( "---nRightHandAttachmentToggled: " );
    sub_23945( iParam0->_fU124 );
    sub_7182( "---nLeftHandAttachmentEnabled: " );
    sub_23945( iParam0->_fU128 );
    sub_7182( "---nLeftHandAttachmentToggled: " );
    sub_23945( iParam0->_fU132 );
    sub_23945( l_U1 );
    sub_23945( 144 );
    return;
}

void sub_23879(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_23902(unknown uParam0)
{
    return;
}

void sub_23945(unknown uParam0)
{
    return;
}

void sub_24150(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

int sub_25194()
{
    if (NOT sub_25204())
    {
        return 0;
    }
    if (sub_27953())
    {
        return 0;
    }
    if (NOT sub_28098())
    {
        return 0;
    }
    return 1;
}

int sub_25204()
{
    if (NOT (DOES_PED_EXIST( g_U2778._fU0 )))
    {
        sub_25276( ref g_U2778, -11.67400000, -4.10000000, 86.27700000, -180.00000000, 1426405755, 2145666447, 406496141 );
        sub_25486( ref g_U2778 );
        sub_27753( ref g_U2778, 1 );
        sub_27812( g_U2778, 1 );
        sub_27882( g_U2778._fU0, 739943046, "gmed" );
        return 0;
    }
    return 1;
}

void sub_25276(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    sub_25325( uParam0, uParam1, uParam4, uParam7, 1194438308, 2, g_U3107, 5, 500, uParam6, 0, 0, uParam5, g_U668 );
    return;
}

void sub_25325(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29)
{
    iParam0->_fU56 = {uParam1};
    iParam0->_fU68 = uParam4;
    iParam0->_fU72 = uParam5;
    iParam0->_fU76 = uParam6;
    iParam0->_fU80 = uParam7;
    iParam0->_fU84 = {uParam8};
    iParam0->_fU116 = uParam16;
    iParam0->_fU120 = uParam17;
    iParam0->_fU124 = uParam18;
    iParam0->_fU128 = uParam19;
    iParam0->_fU132 = uParam20;
    iParam0->_fU136 = uParam21;
    iParam0->_fU140 = {uParam22};
    return;
}

void sub_25486(int iParam0)
{
    unknown uVar3;

    sub_379( "MAL_EnemyStructCreate starting" );
    sub_25601( iParam0 + 0, iParam0 + 4, iParam0->_fU56, iParam0->_fU68, iParam0->_fU72, iParam0->_fU80, iParam0->_fU84, iParam0->_fU116, iParam0->_fU120, iParam0->_fU124, 1 );
    if (NOT (ARE_STRINGS_EQUAL( iParam0 + 140, ref g_U668 )))
    {
        sub_7182( iParam0 + 140 );
        sub_27236( iParam0 + 0, iParam0 + 140 );
    }
    if (iParam0->_fU128)
    {
        sub_379( "MAL_EnemyStructCreate giving ped backup weapon" );
        sub_27365( iParam0->_fU0, iParam0->_fU76, 25000, 1, 0 );
    }
    if (iParam0->_fU132)
    {
        uVar3 = GET_WEAPON_FROM_HAND( iParam0->_fU0, 0, 0 );
        sub_27562( ref uVar3, 14, 1 );
    }
    if (iParam0->_fU136 != 0)
    {
        sub_27688( iParam0 + 0, iParam0->_fU136 );
    }
    return iParam0->_fU0;
}

void sub_25601(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19)
{
    sub_25626( uParam1, uParam2, uParam5, uParam18, 7, 3, 2, 0, 0 );
    (uParam0^) = sub_25728( uParam0, uParam1, 1, 1, uParam19 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
    }
    sub_26785( (uParam0^), uParam6, 25000, 0, 0 );
    sub_26970( uParam0, ref uParam8, uParam16, uParam17, 1 );
    sub_27134( uParam0, uParam7 );
    return (uParam0^);
}

void sub_25626(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

void sub_25728(unknown uParam0, unknown uParam1, boolean bParam2, boolean bParam3, unknown uParam4)
{
    sub_3845( (uParam0^) );
    (uParam0^) = sub_25748( uParam1 );
    if (bParam3)
    {
        while (NOT (DOES_PED_EXIST( (uParam0^) )))
        {
            WAIT( 0 );
            sub_379( "MAL_CreatePed waiting for ped to exist" );
        }
    }
    SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), uParam4 );
    sub_26662( uParam0, 32, 0 );
    SET_PED_IGNORE_LOS_CHECKS( (uParam0^), NOT bParam2 );
    SET_PED_EMOTION_STATE( (uParam0^), 1 );
    return (uParam0^);
}

void sub_25748(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_25918( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_26387( iParam0->_fU40 );
    sub_26467( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_25918(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_7182( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_26387(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_26467(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_26662(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_ATTRIBUTES( (uParam0^), uParam1, uParam2 );
    }
    return;
}

void sub_26785(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    unknown Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                sub_379( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

void sub_26970(unknown uParam0, unknown uParam1, float fParam2, float fParam3, boolean bParam4)
{
    sub_379( "MAL_SetTemplateAndRanges" );
    sub_7182( uParam1 );
    sub_23902( fParam2 );
    sub_23902( fParam3 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    if (NOT bParam4)
    {
        sub_26662( uParam0, 1, 0 );
    }
    return;
}

void sub_27134(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam1 );
    }
    return;
}

void sub_27236(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_ROOM_FOR_PED_BY_NAME( (uParam0^), uParam1 );
    }
    return;
}

void sub_27365(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    int Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
            while (Result == 0)
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
                sub_379( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

void sub_27562(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (GET_DOES_WEAPON_EXIST( (uParam0^) ))
    {
        if (bParam2)
        {
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
        else
        {
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
    }
    return;
}

void sub_27688(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PERSISTENT_PED_VARIATION_ENUM( (uParam0^), uParam1 );
    }
    return;
}

void sub_27753(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        FREEZE_PED_POSITION( iParam0->_fU0, uParam1 );
    }
    return;
}

void sub_27812(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44)
{
    if (NOT (IS_PED_DEAD( uParam0._fU0 )))
    {
        SET_PED_AS_ONE_SHOT_KILL( uParam0._fU0, uParam44 );
    }
    return;
}

void sub_27882(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        ISEQ_REGISTER_ENTITY( uParam1, uParam2, uParam0, 0 );
    }
    return;
}

int sub_27953()
{
    if (NOT (DOES_PED_EXIST( l_U800._fU0 )))
    {
        sub_25276( ref l_U800, 29.27000000, -25.37200000, 89.67700000, 91.96200000, -1208103673, 2145666447, 406496141 );
        sub_25486( ref l_U800 );
        sub_27812( l_U800, 1 );
        sub_27882( l_U800._fU0, 1996590434, "gmed" );
        return 1;
    }
    return 0;
}

int sub_28098()
{
    if (sub_30060( 28108, 28524, ref l_U1203, ref l_U844, "RSB", ref l_U1197, 1065353216 ))
    {
        return 1;
    }
    if (l_U1203 == 0)
    {
        return 1;
    }
    return 0;
}

void sub_28108()
{
    sub_25276( ref l_U844[0], 22.03000000, -31.36000000, 86.28000000, 0.00000000, 1669243307, 2145666447, 1194438308 );
    sub_25276( ref l_U844[1], 22.04000000, -32.19000000, 86.28000000, 0.00000000, -966088886, 2145666447, 1194438308 );
    sub_25276( ref l_U844[2], 22.05000000, -33.69000000, 86.28000000, 0.00000000, -49231909, 2145666447, 1194438308 );
    sub_25276( ref l_U844[3], 31.17000000, -33.92000000, 89.70000000, 347.90280000, -1912526113, 2145666447, 1194438308 );
    sub_25276( ref l_U844[4], 30.91000000, -35.05000000, 89.74000000, 0.00000000, -53194431, 2145666447, 1194438308 );
    sub_25276( ref l_U844[5], 30.77000000, -35.56000000, 89.74000000, 0.00000000, 1697260220, 2145666447, 1194438308 );
    sub_25276( ref l_U844[6], 14.77798000, -12.98676000, 86.23021000, 180.00000000, 1053392355, 2145666447, 1194438308 );
    sub_25276( ref l_U844[7], 14.69927000, -12.05642000, 86.23021000, 180.00000000, -1035023217, 2145666447, 1194438308 );
    return;
}

void sub_28524()
{
    int I;

    sub_28541( ref l_U844, 1, 0, -1 );
    sub_28621( ref l_U844, 0, -1 );
    sub_28804( ref l_U844, 0, 0, -1 );
    sub_28987( ref l_U844, 3, 1 );
    sub_29197( ref l_U844, g_U2777, 0, -1 );
    sub_29403( ref l_U844, 31186664 );
    sub_29515( ref l_U844, 1, 0, -1 );
    sub_29598( ref l_U844, 0 );
    for ( I = 0; I < l_U844; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U844[I]._fU0 )))
        {
            SET_PED_COMBAT_ATTRIBUTES( l_U844[I]._fU0, 256, 0 );
            SET_PED_FLAG_BLOCK_WOUNDED_MOVEMENT( l_U844[I]._fU0, 1 );
            SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U844[I]._fU0, 0, 0 ), 30 );
        }
    }
    sub_29843( ref l_U336[0], 0, 0 );
    sub_29843( ref l_U336[1], 12500, 1 );
    sub_29843( ref l_U336[2], 3000, 4 );
    sub_29843( ref l_U336[3], 0, 0 );
    sub_29843( ref l_U336[4], 0, 0 );
    sub_29843( ref l_U336[5], 4000, 2 );
    sub_29843( ref l_U336[6], 3000, 3 );
    sub_29843( ref l_U336[7], 3000, 5 );
    return;
}

void sub_28541(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
        sub_27753( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_28621(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
        sub_28673( (uParam0^)[I] );
    }
    return;
}

void sub_28673(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43)
{
    sub_28701( uParam0, uParam0._fU56, uParam0._fU68 );
    return;
}

void sub_28701(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47)
{
    if (NOT (IS_PED_DEAD( uParam0._fU0 )))
    {
        SET_PED_COORDS( uParam0._fU0, uParam44, 1 );
        SET_PED_HEADING( uParam0._fU0, uParam47 );
    }
    return;
}

void sub_28804(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
        sub_28854( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_28854(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_VISIBLE( iParam0->_fU0, uParam1 );
    }
    else
    {
        sub_379( "MAL_ES_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

void sub_28987(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_29023( ref (uParam0^)[I], uParam1, uParam2 );
    }
    return;
}

void sub_29023(int iParam0, unknown uParam1, unknown uParam2)
{
    sub_29041( iParam0 + 0, uParam1, uParam2 );
    return;
}

void sub_29041(unknown uParam0, unknown uParam1, unknown uParam2)
{
    sub_29055( uParam0, uParam1 );
    sub_29105( uParam0, uParam2 );
    return;
}

void sub_29055(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_ALERTNESS( (uParam0^), uParam1 );
    }
    return;
}

void sub_29105(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_EMOTION_STATE( (uParam0^), uParam1 );
    }
    return;
}

void sub_29197(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
        sub_29249( ref (uParam0^)[I]._fU0, uParam1 );
        sub_29318( ref (uParam0^)[I]._fU0, uParam1 );
    }
    return;
}

void sub_29249(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_29318(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_29403(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_29439( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_29439(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_ACCURACY( iParam0->_fU0, uParam1 );
    }
    return;
}

void sub_29515(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
        sub_27812( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_29598(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_29636( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_29636(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44)
{
    if (NOT (IS_PED_DEAD( uParam0._fU0 )))
    {
        SET_PED_VALIDATE_BULLET_CAM_HIT( uParam0._fU0, uParam44 );
    }
    return;
}

void sub_29843(int iParam0, unknown uParam1, unknown uParam2)
{
    iParam0->_fU80 = 0;
    iParam0->_fU36 = uParam1;
    iParam0->_fU40 = uParam2;
    sub_786( iParam0 + 0, iParam0->_fU36, 1, 0 );
    sub_786( iParam0 + 44, l_U334, 1, 0 );
    return;
}

int sub_30060(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    switch ((uParam2^))
    {
        case 1:
        (uParam2^) = 2;
        break;
        break;
        uParam0;
        break;
        case 2:
        if (sub_30126( uParam3, uParam4, uParam5, uParam6, 1, 0 ))
        {
            (uParam2^) = 3;
        }
        break;
        case 3:
        (uParam2^) = 0;
        return 1;
        break;
        break;
        uParam1;
        break;
    }
    return 0;
}

int sub_30126(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4, boolean bParam5)
{
    int I;

    sub_7182( uParam1 );
    if (NOT bParam4)
    {
        sub_30156( uParam2, uParam3, 1 );
        for ( I = 0; I < (uParam0^); I++ )
        {
            sub_25486( ref (uParam0^)[I] );
            sub_30373( (uParam0^)[I]._fU0, uParam2 );
        }
        sub_30651( uParam0, uParam1 );
    }
    else if ((uParam0^)[0]._fU172 == 0)
    {
        sub_30156( uParam2, uParam3, 1 );
    }
    if ((uParam0^)[0]._fU172 < (uParam0^))
    {
        sub_25486( ref (uParam0^)[(uParam0^)[0]._fU172] );
        sub_30373( (uParam0^)[(uParam0^)[0]._fU172]._fU0, uParam2 );
        (uParam0^)[0]._fU172++;
    }
    else
    {
        sub_30651( uParam0, uParam1 );
        return 1;
    }
    if (bParam5)
    {
        sub_30917( uParam0, 1, 0, -1 );
    }
    return 0;
}

void sub_30156(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_30373(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_7182( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_30156( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_30156( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_30651(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I]._fU0, ref cVar5 );
        }
    }
    return;
}

void sub_30917(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
        sub_30967( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_30967(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_FREEZE_PROCESSING( iParam0->_fU0, uParam1 );
    }
    return;
}

void sub_31149(unknown uParam0, unknown uParam1)
{
    sub_786( uParam0, uParam1, 1, 0 );
    sub_1110( uParam0 );
    return;
}

void sub_31236(unknown uParam0, unknown uParam1, unknown uParam2)
{
    sub_379( "P_SETUP_HELI" );
    if (NOT (DOES_VEHICLE_EXIST( g_U2866 )))
    {
        g_U2866 = sub_31308( 1049690760, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME( uParam0, uParam2 ), 0.00000000, 1, 0, 1 );
    }
    else if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
    {
        SET_VEHICLE_COORDS( g_U2866, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME( uParam0, uParam2 ) );
    }
    if ((NOT (IS_VEHICLE_DEAD( g_U2866 ))) AND (DOES_VEHICLE_EXIST( g_U2866 )))
    {
        SET_VEHICLE_ENGINE_ON( g_U2866, 1, 1 );
        SET_HELI_BLADES_FULL_SPEED( g_U2866 );
        SILENCE_VEHICLE( g_U2866, 1 );
        SET_VEHICLE_AS_MISSION_VEHICLE( g_U2866 );
        SET_VEHICLE_EXTRA( g_U2866, 5, 1 );
        SET_VEHICLE_INTERIORLIGHT( g_U2866, 1 );
        SET_VEHICLE_DOOR_OPEN( g_U2866, 3 );
        SET_VEHICLE_HEALTH( g_U2866, 600 );
        SET_VEHICLE_ENGINE_HEALTH( g_U2866, 600.00000000 );
        SET_VEHICLE_PETROL_TANK_HEALTH( g_U2866, 300.00000000 );
        SET_VEHICLE_CAN_BE_DAMAGED( g_U2866, 0 );
        SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED( g_U2866, 1 );
        SET_VEHICLE_PROOFS( g_U2866, 0, 1, 1, 1, 1 );
        sub_31802( g_U2866, uParam0, uParam1, uParam2, 0 );
        PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
        if (NOT (DOES_OBJECT_EXIST( l_U23 )))
        {
            l_U23 = CREATE_OBJECT( 230799837, 0.00000000, 1.00000000, 0.00000000, 0, 0 );
            ATTACH_OBJECT_TO_VEHICLE( l_U23, g_U2866, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        }
    }
    ALLOW_BULLET_CAMERA_CHEAT( 0 );
    return;
}

void sub_31308(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
        sub_25918( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

void sub_31802(unknown uParam0, unknown uParam1, unknown uParam2, float fParam3, boolean bParam4)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
            STOP_PLAYBACK_RECORDED_VEHICLE( uParam0 );
        }
    }
    sub_31853( uParam1, 1 );
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        START_PLAYBACK_RECORDED_VEHICLE( uParam0, uParam1 );
        SET_PLAYBACK_SPEED( uParam0, uParam2 );
        if (fParam3 > 0.00000000)
        {
            SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE( uParam0, fParam3 );
        }
    }
    if (bParam4)
    {
        while ((NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))) AND (NOT (IS_VEHICLE_DEAD( uParam0 ))))
        {
            sub_7182( "Waiting for vehicle to start playing recorded path." );
            WAIT( 0 );
        }
    }
    return;
}

void sub_31853(unknown uParam0, int iParam1)
{
    REQUEST_VEHICLE_RECORDING( uParam0 );
    if (iParam1 == 1)
    {
        while ((HAS_VEHICLE_RECORDING_BEEN_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_32252(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, boolean bParam6)
{
    sub_32281( ref g_U2764, uParam0, uParam3, 1421546599, 5, 2, 0, 0, 0 );
    if (NOT (DOES_PED_EXIST( g_U2777 )))
    {
        g_U2777 = sub_25748( ref g_U2764 );
    }
    if (NOT (IS_PED_DEAD( g_U2777 )))
    {
        sub_379( "Setting Giovanna crap" );
        sub_32471( ref g_U2777 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2777, 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( g_U2777, 1 );
        SET_BULLET_CAM_PREF( g_U2777, "ALL_F_06_FAILSAFE", "ALL_F_06_FAILSAFE", "ALL_F_06_FAILSAFE", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        SET_PED_AS_ONE_SHOT_KILL( g_U2777, 1 );
        SET_PED_DIES_WHEN_INJURED( g_U2777, 1 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2777, 1 );
        RESET_PED_GORE( g_U2777 );
        SET_COLLISION_BETWEEN_PEDS( g_U2777, 0 );
        SET_PED_VALIDATE_BULLET_CAM_HIT( g_U2777, 0 );
        SET_PED_USES_DYING_ANIM( g_U2777, 0 );
        if (NOT (ISEQ_QUERY_STATE( uParam4, 3 )))
        {
            sub_27882( g_U2777, uParam4, uParam5 );
            if (bParam6)
            {
                ISEQ_START( uParam4 );
            }
        }
    }
    return;
}

void sub_32281(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_32471(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_STAND_STILL( 0, -1 );
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    return;
}

void sub_32998(unknown uParam0, unknown uParam1)
{
    sub_379( "P_SETUP_PLAYER" );
    if (NOT (IS_PED_DEAD( sub_529() )))
    {
        SET_PED_DUCKING( sub_529(), 0 );
        SET_PED_INVINCIBLE( sub_529(), 1 );
        SET_ADRENALINE_AMT( 0.75000000 );
        CLEAR_PED_TASKS( sub_529() );
        SET_PED_HEALTH( sub_529(), GET_PED_MAX_HEALTH( sub_529() ), 0 );
        if (NOT (IS_PED_ATTACHED_TO_ANY_VEHICLE( sub_529() )))
        {
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                ATTACH_PED_TO_VEHICLE( sub_529(), g_U2866, 0, 0.56600000, 0.00000000, 0.80400000, -90.00000000, 0.00000000, 1, 0, 0, 1 );
                SET_VEHICLE_AS_ENTITY_SYNC_POINT( g_U2866, sub_529() );
            }
        }
        SET_PED_CAN_RAGDOLL( sub_529(), 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        ENABLE_HIT_DETECTION( 0 );
        ENABLE_LAST_MAN_STANDING( 0 );
        SET_SILHOUETTE_ACTIVE( 0 );
        SET_RAIL_RELATIVE_DIR( 2, 0 );
        SET_PLAYER_COMBAT_TIMER_MODE( 1 );
        PLAYER_SET_AIM_MODE( 2 );
        AUDIO_SET_PED_FOOTSTEPS_ON( 0 );
        SET_HOLSTER_VISIBLE( sub_529(), 0, 0 );
        SET_HOLSTER_VISIBLE( sub_529(), 1, 0 );
        SET_INSTANT_FIRE_FORCED( 1 );
        SET_PED_USES_ANIMATED_DEATH( sub_529(), 1 );
        if (NOT (ISEQ_QUERY_STATE( uParam0, 3 )))
        {
            sub_2309( "MF", "Starting Player Helicopter Interactive Sequence", 0 );
            PED_ACTION_TREE_PLAY_NODE( sub_529(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
            ISEQ_REGISTER_ENTITY( uParam0, uParam1, sub_529(), 0 );
            ISEQ_START( uParam0 );
        }
        REMOVE_ALL_PED_WEAPONS( sub_529() );
        sub_7511( sub_529(), 354276007, 25000, 0, 0 );
        SET_CAMERA_OVERRIDE( "RAIL_HELI_CAMERA", "RAIL_HELI_CAMERA_AIM", 0, 1, 1 );
    }
    return;
}

void sub_33613()
{
    sub_32281( ref g_U2736, 55.11000000, -24.06000000, 94.27000000, 0.00000000, 817667075, 26, 6, 0, 0, 1 );
    sub_32281( ref g_U2750, 54.04000000, -24.06000000, 94.27000000, 0.00000000, -383356854, 26, 6, 0, 0, 1 );
    if (NOT (ISEQ_IS_LOADED( -931023773 )))
    {
        ISEQ_REQUEST( -931023773 );
    }
    if (NOT (ISEQ_IS_LOADED( 1476011597 )))
    {
        ISEQ_REQUEST( 1476011597 );
    }
    if (NOT (DOES_PED_EXIST( g_U2763 )))
    {
        g_U2763 = sub_25748( ref g_U2750 );
    }
    if (NOT (IS_PED_DEAD( g_U2763 )))
    {
        sub_32471( ref g_U2763 );
        SET_PED_INVINCIBLE( g_U2763, 1 );
        DETACH_PED( g_U2763, 1 );
        if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
        {
            ATTACH_PED_TO_VEHICLE( g_U2763, g_U2866, 0, 0.67600000, 1.52300000, 1.50300000, 0.00000000, 0.00000000, 1, 0, 0, 1 );
        }
    }
    if (NOT (DOES_PED_EXIST( g_U2749 )))
    {
        g_U2749 = sub_25748( ref g_U2736 );
    }
    if (NOT (IS_PED_DEAD( g_U2749 )))
    {
        sub_32471( ref g_U2749 );
        SET_PED_INVINCIBLE( g_U2749, 1 );
        DETACH_PED( g_U2749, 1 );
        if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
        {
            ATTACH_PED_TO_VEHICLE( g_U2749, g_U2866, 0, -0.61500000, 1.48000000, 1.55500000, 0.00000000, 0.00000000, 1, 0, 0, 1 );
        }
    }
    if (NOT (ISEQ_QUERY_STATE( -931023773, 3 )))
    {
        sub_27882( g_U2763, -931023773, "marcello" );
        ISEQ_START( -931023773 );
    }
    if (NOT (ISEQ_QUERY_STATE( 1476011597, 3 )))
    {
        sub_27882( g_U2749, 1476011597, "passos" );
        ISEQ_START( 1476011597 );
    }
    return;
}

int sub_34339()
{
    return 1;
}

void sub_34358()
{
    if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
    {
        FREEZE_VEHICLE_POSITION( g_U2866, 1 );
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U2866, "heli_luxury", 0 );
    }
    if (NOT (IS_PED_DEAD( g_U2777 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2777, "Giov_Club_B", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U2777, 24.57800000, -25.48600000, 86.65900000, 94.25100000 );
        sub_27882( g_U2777, 1996590434, "giovanna" );
    }
    if (NOT (IS_PED_DEAD( g_U2763 )))
    {
        DETACH_PED( g_U2763, 1 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2763, "Marc_Casu", 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE( g_U2763, g_U2866, 0, 0.67600000, 1.52300000, 1.50300000, 0.00000000, 0.00000000, 1, 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U2763, "/Global/S_CLUB_VIG_11_MAR/SEQ_START/MARCELLO/IDLE" );
    }
    if (NOT (IS_PED_DEAD( g_U2749 )))
    {
        DETACH_PED( g_U2749, 1 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2749, "Pass_Club_H", 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE( g_U2749, g_U2866, 0, -0.61500000, 1.48000000, 1.55500000, 0.00000000, 0.00000000, 1, 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U2749, "/Global/S_CLUB_VIG_11_PAS/SEQ_START/PASSOS/IDLE" );
    }
    if (NOT (IS_PED_DEAD( sub_529() )))
    {
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( sub_529(), 0, 0 ), "W_AR_Rug30_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE( sub_529(), g_U2866, 0, 0.56600000, 0.00000000, 0.80400000, -90.00000000, 0.00000000, 1, 0 );
        SET_VEHICLE_AS_ENTITY_SYNC_POINT( g_U2866, sub_529() );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_529(), "/Global/S_CLUB_VIG_10_NC/SEQ_START/MAX/INITIALIZE" );
        if (IS_WEAPON_ATTACHMENT_TOGGLED( GET_WEAPON_FROM_HAND( sub_529(), 0, 0 ), 13 ))
        {
            TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND( sub_529(), 0, 0 ), 13, 0 );
            l_U24 = 0;
        }
        else
        {
            l_U24 = 1;
        }
    }
    if (NOT (IS_PED_DEAD( l_U800._fU0 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U800._fU0, "G_CS_NCSM_D", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U800._fU0, 0, 0 ), "W_PI_38_Ba_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U800._fU0, 29.27000000, -25.37200000, 89.67700000, 91.96200000 );
    }
    CUTSCENE_FORCE_GAMEPLAY_HEADING_PITCH_UPDATE();
    REGISTER_DETACH_PLAYER_FOR_CUTSCENE();
    return;
}

void sub_35254()
{
    if (l_U1208._fU52)
    {
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        sub_31802( g_U2866, 69, 0.00000000, 7169.00000000, 0 );
        CAMERA_SNAP_POINT_AT_COORD( 24.19000000, -25.37000000, 89.75000000 );
        SET_CAMERA_OVERRIDE( "RAIL_HELI_CAMERA", "RAIL_HELI_CAMERA_AIM", 0, 1, 1 );
    }
    sub_35386();
    return;
}

void sub_35386()
{
    if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
    {
        SET_VEHICLE_ENGINE_ON( g_U2866, 1, 1 );
        SET_HELI_BLADES_FULL_SPEED( g_U2866 );
    }
    return;
}

int sub_35456()
{
    FREEZE_VEHICLE_POSITION( g_U2866, 0 );
    g_U1092 = 1;
    return 1;
}

void sub_35498(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    sub_2309( "MSWW", "CutSys_CreateStandaloneCutscene", "###" );
    return sub_35652( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam7, 0, 35575, 35593, 0, 35613, 35631, uParam6 );
}

void sub_35575()
{
    return;
}

int sub_35593()
{
    return 1;
}

void sub_35613()
{
    return;
}

int sub_35631()
{
    return 1;
}

void sub_35652(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_35940(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_2309( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_2309( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_2309( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_2309( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_2309( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_2309( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_16933( iParam0->_fU0, 0 );
            sub_2309( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_20693( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_20693( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_2309( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_37181( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_20693( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_37530( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_37530( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_37181(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_529() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_529(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_529(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_529(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_529(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_529(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_37530(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_529() )))
    {
        SET_PLAYER_CONTROL( sub_551(), 1, 0 );
        SET_PED_INVINCIBLE( sub_529(), 0 );
        if (bParam0)
        {
            sub_37611();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_37611()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_529() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_529(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_529(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_529(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_529(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_38187()
{
    if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_529(), 0, 0 ) ))
    {
        ENABLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND( sub_529(), 0, 0 ), 13, 1 );
        SET_LASER_SIGHT_ATTACHMENT( GET_WEAPON_FROM_HAND( sub_529(), 0, 0 ), -1363960247 );
        if (NOT l_U24)
        {
            TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND( sub_529(), 0, 0 ), 13, 1 );
        }
        else
        {
            TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND( sub_529(), 0, 0 ), 13, 0 );
        }
    }
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2370[g_U892], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2409[g_U892], 1065353216, 0 );
    SET_ADRENALINE_AMT( 1 );
    if (g_U892 == 7)
    {
        ISEQ_START( 1996590434 );
        sub_28673( l_U800 );
        sub_38454( g_U2777, 24.57800000, -25.48600000, 86.65900000, 94.25100000 );
    }
    else if (g_U892 == 8)
    {
        ISEQ_START( -247122877 );
        sub_38454( g_U2777, 18.95540000, -24.83710000, 86.22793000, 85.58799000 );
    }
    else if (g_U892 == 9)
    {
        ISEQ_START( 739943046 );
        sub_28673( g_U2778 );
        sub_38454( g_U2777, g_U2764._fU0, g_U2764._fU12 );
    };;;
    return;
}

void sub_38454(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

int sub_38653()
{
    if (l_U272)
    {
        sub_2309( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U272 = 0;
        return 1;
        break;
    }
    sub_2309( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

void sub_38947()
{
    SET_PLAYER_CONTROL( sub_551(), 0, 256 );
    REENABLE_PLAYER_INPUT( 17 );
    REENABLE_PLAYER_INPUT( 16 );
    REENABLE_PLAYER_INPUT( 15 );
    REENABLE_PLAYER_INPUT( 14 );
    REENABLE_PLAYER_INPUT( 6 );
    REENABLE_PLAYER_INPUT( 28 );
    REENABLE_PLAYER_INPUT( 29 );
    REENABLE_PLAYER_INPUT( 4 );
    REENABLE_PLAYER_INPUT( 19 );
    REENABLE_PLAYER_INPUT( 20 );
    return;
}

void sub_39314()
{
    if (NOT l_U6._fU20)
    {
        sub_2309( "MF", "INITIAL HELI RAIL CAM SHAKE...", 0 );
        SHAKE_GAMEPLAY_CAM( sub_39379(), l_U16 );
        sub_31149( ref l_U6, l_U15 );
    }
    if (sub_2113( ref l_U6 ))
    {
        SHAKE_GAMEPLAY_CAM( sub_39379(), l_U16 );
        sub_31149( ref l_U6, l_U15 );
    }
    return;
}

string sub_39379()
{
    return "MEDIUM_EXPLOSION_SHAKE";
}

void sub_39487()
{
    unknown uVar2;

    if (NOT (IS_PED_DEAD( g_U2777 )))
    {
        if (NOT (IS_ANY_SPEECH_PLAYING( g_U2777 )))
        {
            if (HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2777 ), 1.90000000, ref uVar2 ))
            {
                if ((GET_RANDOM_INT_IN_RANGE( 0, 100 )) > 30)
                {
                    sub_39581();
                }
            }
        }
    }
    return;
}

void sub_39581()
{
    sub_2309( "MF", "P_RS_SPEECH_GVNSC1 - START", 0 );
    sub_39635( ref l_U105 );
    sub_39722( 1, g_U2777, "GIOVANNA", ref l_U105, 2, 0 );
    sub_39722( 0, sub_529(), "MAX", ref l_U105, 2, 0 );
    sub_39963( "SCLB_GVNSC1", ref l_U105, 8, 1 );
    sub_2309( "MF", "P_RS_SPEECH_GVNSC1 - END", 0 );
    return;
}

void sub_39635(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_39722(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_39963(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_39987( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_39987(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_40042( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_40042(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_40077( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_40571( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_40077(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_40571(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_40862()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    sub_39635( ref uVar2 );
    sub_39722( 0, sub_529(), "MAX", ref uVar2, 2, 0 );
    sub_39722( 1, g_U2749, "PASSOS", ref uVar2, 2, 0 );
    sub_39963( "SCLB_HRPGC", ref uVar2, 8, 1 );
    PED_SET_ACTION_INTENTION( g_U2749, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    return;
}

int sub_41199(int iParam0, unknown uParam1, boolean bParam2)
{
    if ((sub_41216( iParam0->_fU0, uParam1 )) == 1)
    {
        if (bParam2)
        {
            sub_41284( iParam0 + 0, uParam1 );
        }
        return 1;
    }
    return 0;
}

int sub_41216(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 );
    }
    return 0;
}

void sub_41284(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

void sub_42143(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

void sub_42458()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

void sub_42524()
{
    if (NOT (IS_PED_DEAD( sub_529() )))
    {
        if (NOT l_U54)
        {
            if (NOT (IS_ANY_SPEECH_PLAYING( sub_529() )))
            {
                if (TIME_SINCE_LAST_MONOLOGUE() > 500)
                {
                    if (IS_PED_RELOADING( sub_529() ))
                    {
                        l_U54 = 1;
                        if ((l_U74 == 1) || ((GET_WEAPON_AMMO_IN_CLIP( GET_WEAPON_FROM_HAND( sub_529(), 0, 0 ) )) < 2))
                        {
                            sub_31149( ref l_U65, 400 );
                        }
                        else if ((GET_RANDOM_INT_IN_RANGE( 0, 100 )) < 45)
                        {
                            sub_31149( ref l_U65, 400 );
                        }
                    }
                }
            }
        }
        if (sub_2113( ref l_U65 ))
        {
            sub_39635( ref l_U55 );
            sub_39722( 0, sub_529(), "MAX", ref l_U55, 2, 0 );
            sub_39722( 1, sub_529(), "MAX", ref l_U55, 2, 0 );
            sub_39963( "SCLB_MCHWR", ref l_U55, 5, 1 );
            l_U74 = 0;
        }
        if (l_U54 == 1)
        {
            if (NOT (IS_PED_RELOADING( sub_529() )))
            {
                l_U54 = 0;
            }
        }
    }
    return;
}

void sub_42849()
{
    if (sub_2113( ref l_U45 ))
    {
        sub_42873();
    }
    return;
}

void sub_42873()
{
    sub_2309( "MF", "P_RS_SPEECH_VIG_10 - START", 0 );
    sub_39635( ref l_U115 );
    sub_39722( 1, sub_529(), "MAX", ref l_U115, 2, 0 );
    sub_39722( 0, sub_529(), "MAX", ref l_U115, 2, 0 );
    sub_39963( "SCLB_VIG10", ref l_U115, 8, 1 );
    PED_SET_ACTION_INTENTION( sub_529(), 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    sub_2309( "MF", "P_RS_SPEECH_VIG_10 - END", 0 );
    return;
}

void sub_43105(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_43143( ref (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_43143(int iParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( iParam0->_fU0, 0, 0 );
            }
            if (bParam3)
            {
                sub_3830( iParam0 );
            }
        }
    }
    return;
}

void sub_43357()
{
    sub_2309( "MF", "P_RS_SPEECH_HRGC - START", 0 );
    sub_39635( ref l_U85 );
    sub_39722( 1, g_U2763, "MARCELO", ref l_U85, 2, 0 );
    sub_39722( 0, sub_529(), "MAX", ref l_U85, 2, 0 );
    sub_39963( "SCLB_HRGC", ref l_U85, 8, 1 );
    PED_SET_ACTION_INTENTION( g_U2763, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    sub_2309( "MF", "P_RS_SPEECH_HRGC - END", 0 );
    return;
}

int sub_43583(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_43596( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

boolean sub_43596(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_43794()
{
    sub_2309( "MF", "P_RS_SPEECH_HRPYM - START", 0 );
    sub_39635( ref l_U75 );
    sub_39722( 1, g_U2749, "PASSOS", ref l_U75, 2, 0 );
    sub_39722( 0, sub_529(), "MAX", ref l_U75, 2, 0 );
    sub_39963( "SCLB_HRPYM", ref l_U75, 6, 1 );
    PED_SET_ACTION_INTENTION( g_U2749, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    sub_2309( "MF", "P_RS_SPEECH_HRPYM - END", 0 );
    return;
}

int sub_44151(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if ((sub_41216( (uParam0^), uParam1 )) == 1)
    {
        if (bParam2)
        {
            sub_41284( uParam0, uParam1 );
        }
        return 1;
    }
    return 0;
}

void sub_44217(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        FREEZE_PED_POSITION( (uParam0^), uParam1 );
    }
    return;
}

void sub_44267(unknown uParam0)
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_44414(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 = sub_44453( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

int sub_44453(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

int sub_44587()
{
    int iVar2;

    sub_44151( ref g_U2777, 48, 1 );
    sub_44151( ref g_U2777, 49, 1 );
    if (NOT l_U333)
    {
        l_U335 = sub_44636();
        if (l_U335 > -1)
        {
            sub_379( "THREATENING ENEMY FOUND ZOMG" );
            l_U333 = 1;
            sub_44781( l_U335, -1 );
            SET_PED_AS_ONE_SHOT_KILL( l_U844[l_U335]._fU0, 1 );
            sub_45440( l_U335 );
        }
        else
        {
            sub_45766();
        }
    }
    else if (NOT IS_BULLET_CAMERA_ACTIVE())
    {
        if (sub_2113( ref l_U782 ))
        {
            if (sub_47228( ref l_U611, l_U844[l_U335]._fU0, 0 ))
            {
                sub_47404( ref l_U844[l_U335], 1 );
                return 1;
            }
            else
            {
                sub_379( "KILL TIMER DONE BUT PED NOT IN KILL ZONE" );
                sub_786( ref l_U782, 3000, 1, 0 );
            }
        }
    }
    if (sub_47228( ref l_U611, l_U844[l_U335]._fU0, 0 ))
    {
        if ((NOT l_U782._fU20) AND (sub_47556()))
        {
            sub_47658( l_U335 );
            sub_31149( ref l_U782, 3000 );
            sub_31149( ref l_U1235, 1000 );
            sub_31149( ref l_U1253, l_U782._fU12 + 1000 );
            sub_39581();
            l_U74 = 1;
        }
    }
    else if (sub_44453( l_U844[l_U335]._fU0, l_U505 ))
    {
        ;
    }
    else if (NOT (IS_PED_DEAD( l_U844[l_U335]._fU0 )))
    {
        sub_48022( "THREATENING ENEMY IS NO LONGER IN THREATENING AREA WTF" );
    }
    else if (IS_PED_DEAD( l_U844[l_U335]._fU0 ))
    {
        sub_786( ref l_U782, 3000, 1, 0 );
        iVar2 = sub_44636();
        if (iVar2 > -1)
        {
            sub_379( "Threatening enemy is dead, but another is still in the Threatening Area.  Waiting until it's clear." );
        }
        else if (sub_47556())
        {
            sub_379( "Giovanna has stopped reacting, restarting the advance" );
            sub_48318();
            l_U333 = 0;
        }
    };;;;;
    return 0;
}

int sub_44636()
{
    int Result;

    for ( Result = 0; Result < l_U336; Result++ )
    {
        if (sub_44453( l_U844[Result]._fU0, l_U505 ))
        {
            return Result;
        }
    }
    return -1;
}

void sub_44781(unknown uParam0, int iParam1)
{
    float fVar4;
    float fVar5;
    float fVar6;
    unknown uVar7;

    if (NOT (IS_PED_DEAD( l_U844[uParam0]._fU0 )))
    {
        fVar4 = sub_44836( l_U844[uParam0]._fU0, l_U315 );
        fVar5 = sub_44836( l_U844[uParam0]._fU0, l_U321 );
        fVar6 = sub_44836( l_U844[uParam0]._fU0, l_U327 );
        sub_44979( ref l_U844[uParam0]._fU0, g_U2777 );
        SET_PED_PATH_CAN_AVOID_LINE_OF_FIRE( l_U844[uParam0]._fU0, 0 );
        OPEN_SEQUENCE_TASK( ref uVar7 );
        if ((iParam1 == 0) || ((fVar4 < fVar6) AND (fVar4 < fVar5)))
        {
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U315, 3, -1, 0.50000000, 0, 0 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U318, 3, -1, 0.50000000, 0, 0 );
        }
        else if ((iParam1 == 1) || ((fVar5 < fVar6) AND (fVar5 < fVar4)))
        {
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U321, 3, -1, 0.50000000, 0, 0 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U324, 3, -1, 0.50000000, 0, 0 );
        }
        else if ((iParam1 == 2) || ((fVar6 < fVar5) AND (fVar6 < fVar4)))
        {
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U327, 3, -1, 0.50000000, 0, 0 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U330, 3, -1, 0.50000000, 0, 0 );
        };;;
        TASK_TURN_PED_TO_FACE_COORD( 0, -9.37238500, -24.13131000, 87.54951000, 0, 1085905306 );
        TASK_AIM_GUN_AT_COORD( 0, -9.62762600, -24.17870000, 86.77893000, -1, 0 );
        CLOSE_SEQUENCE_TASK( uVar7 );
        TASK_PERFORM_SEQUENCE( l_U844[uParam0]._fU0, uVar7 );
        CLEAR_SEQUENCE_TASK( uVar7 );
        sub_45385( "Enemy made run to Giovanna:", uParam0 );
    }
    return;
}

void sub_44836(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    else
    {
        return -1.00000000;
    }
    return VDIST( uVar6, uParam1 );
}

void sub_44979(unknown uParam0, unknown uParam1)
{
    sub_29249( uParam0, uParam1 );
    sub_29318( uParam0, uParam1 );
    return;
}

void sub_45385(unknown uParam0, unknown uParam1)
{
    return;
}

void sub_45440(int iParam0)
{
    int I;

    for ( I = 0; I < l_U336; I++ )
    {
        if ((l_U336[I]._fU80 != 0) AND (I != iParam0))
        {
            if (l_U336[I]._fU80 != 2)
            {
                sub_45514( I );
                l_U336[I]._fU80 = 2;
            }
            sub_786( ref l_U336[I]._fU44, l_U334, 1, 0 );
        }
    }
    return;
}

void sub_45514(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( l_U844[uParam0]._fU0 )))
    {
        CLEAR_PED_TASKS( l_U844[uParam0]._fU0 );
        sub_45582( ref l_U844[uParam0]._fU0 );
        sub_29055( ref l_U844[uParam0]._fU0, 3 );
        TASK_COMBAT_MOVE_TO_COVER_COORDS( l_U844[uParam0]._fU0, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U844[uParam0]._fU0 ), sub_529() );
        SET_PED_FLAG_LOCK_TO_COVER( l_U844[uParam0]._fU0, 1 );
    }
    return;
}

void sub_45582(unknown uParam0)
{
    sub_44979( uParam0, sub_529() );
    return;
}

void sub_45766()
{
    int I;

    for ( I = 0; I < l_U336; I++ )
    {
        sub_45794( I );
    }
    return;
}

void sub_45794(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( l_U844[uParam0]._fU0 )))
    {
        switch (l_U336[uParam0]._fU80)
        {
            case 0:
            sub_45892( uParam0 );
            break;
            case 1:
            uVar3 = nil;
            if (HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U844[uParam0]._fU0 ), 6.00000000, ref uVar3 ))
            {
                if ((sub_46610( 0, 1 )) == 0)
                {
                    sub_45514( uParam0 );
                    l_U336[uParam0]._fU80 = 2;
                }
                else
                {
                    sub_46694( uParam0 );
                    l_U336[uParam0]._fU80 = 3;
                }
                sub_31149( ref l_U336[uParam0]._fU44, l_U334 );
            }
            break;
            case 3:
            case 2:
            if (sub_2113( ref l_U336[uParam0]._fU44 ))
            {
                sub_44781( uParam0, -1 );
                l_U336[uParam0]._fU80 = 1;
            }
            break;
            case 5:
            sub_379( "P_R2B_HandleEnemy: Enemy is in DEAD state but is not dead.  WHY IS THIS HAPPENING?!" );
            break;
        }
    }
    else if (l_U336[uParam0]._fU80 != 5)
    {
        l_U336[uParam0]._fU80 = 5;
    }
    return;
}

void sub_45892(int iParam0)
{
    if (NOT (IS_PED_DEAD( l_U844[iParam0]._fU0 )))
    {
        if (((sub_45947( ref l_U844 )) >= l_U336[iParam0]._fU40) || (sub_2113( ref l_U336[iParam0]._fU0 )))
        {
            sub_27753( ref l_U844[iParam0], 0 );
            sub_28854( ref l_U844[iParam0], 1 );
            if ((iParam0 == 4) || (iParam0 == 0))
            {
                sub_44781( iParam0, 2 );
            }
            else if (iParam0 == 3)
            {
                sub_44781( iParam0, 1 );
            }
            else
            {
                sub_44781( iParam0, -1 );
            }
            sub_46158( iParam0 );
            l_U336[iParam0]._fU80 = 1;
            if (iParam0 == 2)
            {
                sub_2309( "MF", "STARTING SAFETY CLEANUP TIMER", 0 );
                sub_1110( ref l_U1489 );
            }
        }
    }
    return;
}

void sub_45947(unknown uParam0)
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I]._fU0 ))
        {
            if (IS_PED_DEAD( (uParam0^)[I]._fU0 ))
            {
                Result++;
            }
        }
    }
    return Result;
}

void sub_46158(unknown uParam0)
{
    int iVar3;
    int iVar4;
    int I;

    sub_45385( "P_R2B_FindNextToUnblock", uParam0 );
    iVar3 = -1;
    iVar4 = l_U336[uParam0]._fU40 + 1;
    sub_45385( "Desired Threshold", iVar4 );
    for ( I = 0; I < l_U336; I++ )
    {
        if (l_U336[I]._fU40 == iVar4)
        {
            if ((NOT l_U336[I]._fU0._fU16) AND (NOT l_U336[I]._fU0._fU20))
            {
                iVar3 = I;
                sub_45385( "DESIRED THRESHOLD FOUND", iVar3 );
            }
        }
    }
    if (iVar3 > -1)
    {
        sub_46378( iVar3 );
        if (iVar3 < (l_U336 - 1))
        {
            sub_379( "Recursion begun!" );
            sub_46158( uParam0 );
        }
    }
    return;
}

void sub_46378(unknown uParam0)
{
    sub_31149( ref l_U336[uParam0]._fU0, l_U336[uParam0]._fU36 );
    return;
}

void sub_46610(unknown uParam0, int iParam1)
{
    int Result;

    Result = GET_RANDOM_INT_IN_RANGE( uParam0, iParam1 + 1 );
    if (Result > iParam1)
    {
        Result = iParam1;
    }
    return Result;
}

void sub_46694(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( l_U844[uParam0]._fU0 )))
    {
        CLEAR_PED_TASKS( l_U844[uParam0]._fU0 );
        sub_45582( ref l_U844[uParam0]._fU0 );
        sub_29055( ref l_U844[uParam0]._fU0, 3 );
        sub_46803( ref l_U844[uParam0], -256437761, 0, 0, 0 );
    }
    return;
}

void sub_46803(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    unknown uVar7;

    if ((NOT (IS_PED_DEAD( sub_529() ))) AND (NOT (IS_PED_DEAD( iParam0->_fU0 ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar7 );
        TASK_SHOOT_AT_PED( 0, sub_529(), -1, uParam1, uParam2, uParam4, uParam3 );
        CLOSE_SEQUENCE_TASK( uVar7 );
        TASK_PERFORM_SEQUENCE( iParam0->_fU0, uVar7 );
        CLEAR_SEQUENCE_TASK( uVar7 );
    }
    return;
}

void sub_47228(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int I;
    int J;

    Result = 0;
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        for ( I = 0; I < iParam0->_fU508; I++ )
        {
            if (sub_44453( uParam1, iParam0->_fU0[I] ))
            {
                Result = 1;
            }
        }
    }
    if ((uParam2) AND (Result))
    {
        for ( J = 0; J < iParam0->_fU508; J++ )
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( ref iParam0->_fU0[J]._fU0, 0 );
        }
    }
    iParam0->_fU552 = 1;
    return Result;
}

void sub_47404(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_INVINCIBLE( iParam0->_fU0, uParam1 );
    }
    return;
}

int sub_47556()
{
    if ((sub_41216( g_U2777, 47 )) == 3)
    {
        return 1;
    }
    if (((sub_41216( g_U2777, 49 )) == 3) || ((sub_41216( g_U2777, 48 )) == 3))
    {
        return 0;
    }
    return 1;
}

void sub_47658(unknown uParam0)
{
    if ((sub_44453( l_U844[uParam0]._fU0, l_U547[2] )) || (sub_44453( l_U844[uParam0]._fU0, l_U547[0] )))
    {
        PED_SET_ACTION_INTENTION( g_U2777, 48, 3000, 0.00000000, 0.00000000, 0.00000000 );
    }
    else if (sub_44453( l_U844[uParam0]._fU0, l_U547[1] ))
    {
        PED_SET_ACTION_INTENTION( g_U2777, 49, 3000, 0.00000000, 0.00000000, 0.00000000 );
    }
    return;
}

void sub_48022(unknown uParam0)
{
    int I;

    for ( I = 0; I < 500; I++ )
    {
        sub_379( uParam0 );
    }
    return;
}

void sub_48318()
{
    int iVar2;
    int I;

    iVar2 = 0;
    for ( I = 0; I < l_U336; I++ )
    {
        if ((l_U336[I]._fU80 != 0) AND (NOT (IS_PED_DEAD( l_U844[I]._fU0 ))))
        {
            if ((l_U336[I]._fU80 == 3) || (l_U336[I]._fU80 == 2))
            {
                sub_31149( ref l_U336[I]._fU44, iVar2 * 500 );
                iVar2++;
            }
        }
    }
    return;
}

void sub_49205(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

void sub_49416(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

void sub_49645(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_SET_ACTION_INTENTION( uParam0, uParam1, uParam2, g_U665 );
    }
    return;
}

void sub_50802(unknown uParam0, boolean bParam1)
{
    sub_3367( ref l_U273 );
    l_U273 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
    SETUP_BULLET_CAMERA_SCENE( l_U273, uParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
    if (bParam1)
    {
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    }
    return;
}

string sub_51016()
{
    return "WOBBLY_SHAKE";
}

void sub_51379(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_32471( ref (uParam0^)[I]._fU0 );
    }
    return;
}

void sub_51765(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( uParam0 ))))
    {
        TASK_AIM_GUN_AT_PED( uParam0, uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_52754(int iParam0)
{
    if (DOES_PED_EXIST( iParam0->_fU0 ))
    {
        sub_32281( ref g_U3372[0], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU0 ), (GET_PED_HEADING( iParam0->_fU0 )) + 180.00000000, 1347258909, 7, 3, 2, 0, 0 );
    }
    g_U3371 = 1;
    return;
}

void sub_52851(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (I == 0)
        {
            sub_32281( ref g_U3389[0], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( (uParam0^)[I]._fU0 ), (GET_PED_HEADING( (uParam0^)[I]._fU0 )) + 180.00000000, -1914461942, 7, 3, 2, 0, 0 );
        }
        if (I == 2)
        {
            sub_32281( ref g_U3389[1], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( (uParam0^)[I]._fU0 ), (GET_PED_HEADING( (uParam0^)[I]._fU0 )) + 180.00000000, 1032497982, 7, 3, 2, 0, 0 );
        }
        if (I == 6)
        {
            sub_32281( ref g_U3389[2], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( (uParam0^)[I]._fU0 ), (GET_PED_HEADING( (uParam0^)[I]._fU0 )) + 180.00000000, -1179674552, 7, 3, 2, 0, 0 );
        }
    }
    g_U3388 = 1;
    return;
}

void sub_53123(int iParam0)
{
    if (DOES_PED_EXIST( iParam0->_fU0 ))
    {
        sub_32281( ref g_U3434[0], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU0 ), (GET_PED_HEADING( iParam0->_fU0 )) + 180.00000000, 134325340, 7, 3, 2, 0, 0 );
    }
    g_U3433 = 1;
    return;
}

void sub_53339()
{
    sub_379( "P_RELEASE_RS2A_ASSETS" );
    sub_53384( ref l_U17, ref g_U1108 );
    sub_53419( 2145666447, ref g_U1108 );
    sub_53822( -1313172978, ref g_U1350 );
    sub_53822( -931023773, ref g_U1350 );
    sub_53822( 1476011597, ref g_U1350 );
    sub_53822( 1996590434, ref g_U1350 );
    sub_53822( -247122877, ref g_U1350 );
    sub_53822( 739943046, ref g_U1350 );
    sub_54122( 69, ref g_U1903 );
    sub_54122( 156, ref g_U1903 );
    sub_54122( 72, ref g_U1903 );
    sub_54325( "LEVEL_S_CLUB_CP_06", ref g_U1447 );
    sub_54325( "LEVEL_S_CLUB_CP_07", ref g_U1447 );
    sub_54533( 1194438308, ref g_U1301 );
    sub_54533( -1787162676, ref g_U1301 );
    sub_54533( 406496141, ref g_U1301 );
    sub_54756( "LEVEL/S_CLUB/s_club_vig_11_mar.act", ref g_U1964 );
    sub_54756( "LEVEL/S_CLUB/s_club_vig_11_pas.act", ref g_U1964 );
    return;
}

void sub_53384(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_53419( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_53419(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_53531( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_53531(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_53822(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_53531( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

void sub_54122(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_53531( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_54325(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_53531( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_54533(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_53531( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_54756(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_53531( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U21 = 0;
    l_U22 = 0;
    l_U23 = 1500;
    l_U34 = 0;
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = 0;
    l_U40 = 0;
    l_U41 = 0;
    l_U42 = 0;
    l_U43 = 0;
    l_U44 = 0;
    l_U45 = 0;
    l_U807 = -1;
    l_U808 = {64536, 64536, 64536};
    l_U847 = 0;
    l_U849 = 0;
    l_U1571 = {43.10000000, -69.11000000, -0.94000000};
    l_U1574 = {0.00000000, 0.00000000, 38.70000000};
    l_U2436 = 500;
    sub_239( "MF", "Script s_club_VIPRoom.sc is starting up...", 0 );
    l_U847 = 1;
    l_U34 = 0;
    while (IS_EXITFLAG_SET() == 0)
    {
        sub_314();
        if (l_U849 == 0)
        {
            sub_9846();
        }
        sub_69668();
        WAIT( 0 );
    }
    sub_3022();
    sub_61159();
    sub_70060();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( ref g_U893[2]._fU0 );
    sub_239( "MF", "Script s_club_VIPRoom.sc is terminating...", 0 );
    return;
}

void sub_239(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_314()
{
    if (g_U892 == 2)
    {
        switch (l_U849)
        {
            case 0:
            if ((g_U3360 == 1) || (IS_PED_DEAD( sub_396() )))
            {
                sub_483( 0 );
                sub_576( 0 );
                AUDIO_MUSIC_SUSPEND( 5000 );
                l_U849 = 1;
                sub_239( "MF", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            else if (sub_739())
            {
                l_U849 = 3;
                sub_239( "MF", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 1:
            if (sub_1225())
            {
                l_U849 = 2;
            }
            else if ((sub_1265( 0 )) == 1)
            {
                l_U849 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_396() )))
            {
                l_U849 = 3;
                sub_239( "MF", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_239( "MF", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_396() ))) AND (NOT (IS_PLAYER_DEAD( sub_418() ))))
            {
                SET_PLAYER_CONTROL( sub_418(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_396() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_396(), 0 );
                }
                SET_PED_PROOFS( sub_396(), 0, 0, 0, 0, 0 );
            }
            DO_SCREEN_FADE_OUT( 0 );
            sub_2817( "CLUB_TIMEOUT_SCRIPTED_FAIL_FX" );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            sub_3022();
            if (g_U893[3]._fU36 == 1)
            {
                SET_EXITFLAG_FOR_SCRIPT( g_U893[3]._fU32 );
                sub_5168( ref g_U893[3] );
                g_U1074[3] = 0;
            }
            sub_5230( "MID_04_NC_concat" );
            SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY_WINDY" );
            FREEZE_TIME_OF_DAY( 21, 0 );
            l_U849 = 4;
            sub_239( "MF", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_239( "MF", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_5592( ref l_U811, sub_396() );
            SET_INTERIOR_ACTIVE( GET_INTERIOR_FROM_NAME( ref g_U2480, 0 ), 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( GET_INTERIOR_FROM_NAME( ref g_U2480, 0 ), GET_HASH_KEY( ref g_U2512 ) );
            l_U849 = 5;
            sub_239( "MF", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_239( "MF", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U847 = 1;
            l_U849 = 0;
            sub_239( "MF", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_396()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_418() );
    }
    return 0;
}

void sub_418()
{
    return GET_PLAYER_ID();
}

void sub_483(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

void sub_576(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 3) AND (g_U1[I] >= 1))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

int sub_739()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_396() )))
        {
            SET_PED_FORCED_TO_WALK( sub_396(), 0 );
            SET_PLAYER_FORCED_AIM( sub_418(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_418(), 1 );
            if ((IS_PED_VISIBLE( sub_396() )) == 0)
            {
                SET_PED_VISIBLE( sub_396(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_1225()
{
    return g_U648;
}

int sub_1265(int iParam0)
{
    iParam0 = 1;
    switch (l_U22)
    {
        case 0:
        if (NOT (sub_1322( ref l_U24 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_396() )))
            {
                l_U23 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_1426( ref l_U24, l_U23, 1, 1 );
            sub_1560( ref l_U24 );
        }
        if (sub_1678( ref l_U24 ))
        {
            sub_239( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_396() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_418() )))
            {
                SET_PLAYER_CONTROL( sub_418(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U22 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U22 = 2;
            }
            else
            {
                l_U22 = 3;
            }
        }
        break;
        case 2:
        sub_239( "NS", "Player will QUIT", 0 );
        sub_2159();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_239( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_2159();
        return 1;
        break;
    }
    return 0;
}

int sub_1322(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_1426(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_1560(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_1678(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_2159()
{
    sub_239( "NS", "P_PostFailRetryCleanup", 0 );
    sub_2207( ref l_U24 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_418() )))
    {
        SET_PLAYER_CONTROL( sub_418(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U21 = 0;
    l_U21 = l_U21;
    l_U22 = 0;
    return;
}

void sub_2207(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_2817(unknown uParam0)
{
    sub_239( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    sub_2900( ref l_U35 );
    l_U34 = 1;
    return;
}

void sub_2900(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

void sub_3022()
{
    sub_239( "MF", "P_CLEANUP_VIP", 0 );
    ISEQ_UNREGISTER_ENTITY( 816576289, "VIP_SHOT_CIV" );
    ISEQ_UNREGISTER_ENTITY( 816576289, "VIP_RUN_CIV_A" );
    ISEQ_UNREGISTER_ENTITY( 816576289, "VIP_RUN_CIV_B" );
    ISEQ_UNREGISTER_ENTITY( 816576289, "VIP_RUN_CIV_C" );
    ISEQ_UNREGISTER_ENTITY( 816576289, "VIP_RUN_CIV_D" );
    ISEQ_TERMINATE( 816576289 );
    sub_3219( 816576289, ref g_U1350 );
    ISEQ_UNREGISTER_ENTITY( -1700261605, "CS1" );
    ISEQ_UNREGISTER_ENTITY( -1700261605, "CS2" );
    ISEQ_UNREGISTER_ENTITY( -1700261605, "GMED1" );
    ISEQ_UNREGISTER_ENTITY( -1700261605, "FLGE1" );
    ISEQ_UNREGISTER_ENTITY( -1700261605, "FLGE2" );
    ISEQ_TERMINATE( -1700261605 );
    sub_3219( -1700261605, ref g_U1350 );
    ISEQ_UNREGISTER_ENTITY( -1404259228, "GMED1" );
    ISEQ_UNREGISTER_ENTITY( -1404259228, "GMED2" );
    ISEQ_UNREGISTER_ENTITY( -1404259228, "GMED3" );
    ISEQ_UNREGISTER_ENTITY( -1404259228, "GMED4" );
    ISEQ_UNREGISTER_ENTITY( -1404259228, "FLGE1" );
    ISEQ_TERMINATE( -1404259228 );
    sub_3219( -1404259228, ref g_U1350 );
    ISEQ_UNREGISTER_ENTITY( -671715858, "CIV_1" );
    ISEQ_TERMINATE( -671715858 );
    sub_3219( -671715858, ref g_U1350 );
    ISEQ_UNREGISTER_ENTITY( -921546714, "CIV_2" );
    ISEQ_TERMINATE( -921546714 );
    sub_3219( -921546714, ref g_U1350 );
    ISEQ_UNREGISTER_ENTITY( -506138981, "Max" );
    ISEQ_TERMINATE( -506138981 );
    sub_3219( -506138981, ref g_U1350 );
    ISEQ_UNREGISTER_ENTITY( -2074831912, "player" );
    ISEQ_TERMINATE( -2074831912 );
    sub_3219( -2074831912, ref g_U1350 );
    ISEQ_UNREGISTER_ENTITY( -1239976099, "player" );
    ISEQ_TERMINATE( -1239976099 );
    sub_3219( -1239976099, ref g_U1350 );
    ISEQ_UNREGISTER_ENTITY( 996082158, "player" );
    ISEQ_TERMINATE( 996082158 );
    sub_3219( 996082158, ref g_U1350 );
    ISEQ_UNREGISTER_ENTITY( 277457984, "player" );
    ISEQ_TERMINATE( 277457984 );
    sub_3219( 277457984, ref g_U1350 );
    ISEQ_UNREGISTER_ENTITY( -2129777527, "Civ3" );
    ISEQ_UNREGISTER_ENTITY( -2129777527, "Civ5" );
    ISEQ_TERMINATE( -2129777527 );
    sub_3219( -2129777527, ref g_U1350 );
    ISEQ_UNREGISTER_ENTITY( 1875151350, "Civ4" );
    ISEQ_UNREGISTER_ENTITY( 1875151350, "Civ5" );
    ISEQ_TERMINATE( 1875151350 );
    sub_3219( 1875151350, ref g_U1350 );
    ISEQ_UNREGISTER_ENTITY( -1746599655, "GMED2" );
    ISEQ_UNREGISTER_ENTITY( -1746599655, "GMED3" );
    ISEQ_TERMINATE( -1746599655 );
    sub_3219( -1746599655, ref g_U1350 );
    sub_4358( g_U3515 );
    sub_4436( ref l_U1317 );
    sub_4436( ref l_U1342 );
    sub_4436( ref l_U1372 );
    sub_4436( ref l_U1401 );
    sub_4436( ref l_U1431 );
    sub_4436( ref l_U1450 );
    sub_4436( ref l_U1479 );
    sub_4436( ref l_U1748 );
    sub_4436( ref l_U1980 );
    sub_4436( ref l_U2063 );
    sub_4579( ref l_U1919 );
    sub_4579( ref l_U2010 );
    sub_4579( ref l_U2093 );
    sub_4579( ref l_U2133 );
    sub_4708( l_U2238 );
    sub_4708( g_U777._fU0 );
    sub_4708( g_U831._fU0 );
    sub_2900( ref g_U3339 );
    if (((CUTSCENE_NAMED_IS_LOADING( "MID_03_NC_concat" )) == 1) || ((CUTSCENE_IS_LOADED( "MID_03_NC_concat" )) == 1))
    {
        CLEAR_NAMED_CUTSCENE( "MID_03_NC_concat" );
    }
    sub_4876( ref g_U3340 );
    sub_4876( ref g_U3350 );
    sub_4920( l_U1570 );
    ENABLE_WALLA_ZONE( "S_CLUB_WZ_PATIO_PANIC", 0 );
    ENABLE_WALLA_ZONE( "S_CLUB_WZ_PATIO_PANIC_CS", 0 );
    ENABLE_WALLA_ZONE( "S_CLUB_WZ_COAT_CHECK_HOSTAGES", 0 );
    ENABLE_WALLA_ZONE( "S_CLUB_WZ_LOUNGE_HOSTAGES_02", 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    return;
}

void sub_3219(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_3331( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

int sub_3331(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_4358(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_4436(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_4358( (uParam0^)[I] );
    }
    return;
}

void sub_4579(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_4609( ref (uParam0^)[I] );
    }
    return;
}

void sub_4609(int iParam0)
{
    if ((DOES_OBJECT_EXIST( iParam0->_fU24 )) == 1)
    {
        DELETE_SIMPLE_PED( iParam0 + 24 );
    }
    return;
}

void sub_4708(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_4876(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

void sub_4920(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_5168(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_5230(unknown uParam0)
{
    while (CUTSCENE_NAMED_IS_LOADING( uParam0 ))
    {
        WAIT( 0 );
        sub_5299( "Waiting for loading to complete..." );
    }
    if (CUTSCENE_IS_LOADED( uParam0 ))
    {
        sub_5299( "Unloading cutscene..." );
        CLEAR_NAMED_CUTSCENE( uParam0 );
    }
    while (CUTSCENE_IS_LOADED( uParam0 ))
    {
        WAIT( 0 );
        sub_5299( "Waiting for cutscene to Unload..." );
    }
    return;
}

void sub_5299(unknown uParam0)
{
    return;
}

void sub_5592(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_239( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_5776( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_6853( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_7145( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_7492( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_7145( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_7492( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_7145( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_7492( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_7777( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_7492( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_7777( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_7492( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_8270( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_8431( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_396(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_239( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_5776(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_5808( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_5808(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_6853(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_7145(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_5299( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_7492(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_7777(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_5299( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_8270(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_8431(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_5808( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_8503( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_8503(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_9846()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;

    iVar2 = l_U847;
    sub_9863();
    sub_10258();
    switch (l_U847)
    {
        case 0: break;
        case 1:
        sub_239( "MF", "eCheckpointState = CPS_INITIALIZE_SCRIPT_DATA", 0 );
        sub_10691();
        sub_10887();
        sub_19368( "SCLBAUD" );
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U847 = 2;
        sub_239( "MF", "eCheckpointState = CPS_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_239( "MF", "eCheckpointState = CPS_INITIAL_REQUEST_ASSETS", 0 );
        if (g_U892 < 2)
        {
            if (((CUTSCENE_NAMED_IS_LOADING( "MID_03_NC_concat" )) == 0) AND ((CUTSCENE_IS_LOADED( "MID_03_NC_concat" )) == 0))
            {
                PRE_STREAM_SEAMLESS_CUTSCENE( "MID_03_NC_concat" );
            }
        }
        sub_19718();
        l_U847 = 3;
        sub_239( "MF", "eCheckpointState = CPS_INITIAL_LOADING_ASSETS", 0 );
        case 3:
        if ((sub_25793( ref g_U1350 )) AND ((sub_25666( ref g_U1447 )) AND ((sub_25545( ref g_U1301 )) AND (sub_25425( ref g_U1108 )))))
        {
            l_U847 = 4;
            sub_239( "SP", "eCheckpointState = CPS_SETUP_START_POINT", 0 );
            break;
        }
        return;
        case 4:
        sub_239( "SP", "eCheckpointState = CPS_SETUP_START_POINT", 0 );
        if ((l_U811._fU0 == 0) AND (g_U891 == 2))
        {
            l_U847 = 5;
            sub_239( "MF", "eCheckpointState = CPS_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        }
        else
        {
            l_U847 = 7;
            sub_239( "MF", "eCheckpointState = CPS_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 5:
        sub_239( "MF", "eCheckpointState = CPS_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        g_U1074[2] = 1;
        if (NOT (sub_26340( ref l_U811 )))
        {
            sub_7777( sub_396(), 68019059, 200, 0, 0 );
            l_U847 = 6;
            sub_239( "MF", "eCheckpointState = CPS_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U847 = 7;
            sub_239( "MF", "eCheckpointState = CPS_SPAWN_PEDS", 0 );
        }
        break;
        case 6:
        if (NOT (IS_PED_DEAD( sub_396() )))
        {
            if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_396(), 0, 0 ) ))
            {
                l_U847 = 7;
                sub_239( "MF", "eCheckpointState = CPS_SPAWN_PEDS", 0 );
            }
        }
        break;
        case 7:
        if (sub_26784() == 1)
        {
            l_U847 = 8;
        }
        break;
        case 8:
        if (g_U1074[2])
        {
            if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
            {
                l_U847 = 9;
                sub_239( "MF", "eCheckpointState = CPS_MID_03", 0 );
            }
        }
        break;
        case 9:
        if (l_U848)
        {
            sub_28744();
            sub_30134();
            sub_30767();
            sub_32326();
            sub_32854();
            sub_33590();
            sub_34118();
            sub_35501();
            sub_39845( ref l_U2400, "MID_03_NC_concat", 35849, 35874, 36890, 37121, 37180, 38783, 250, 0 );
            l_U2400._fU64 = 0;
            l_U2400._fU104 = 0;
            if (g_U892 < 2)
            {
                PLAY_IMAGEFX( "GAMMA_SATURATION_COLOR_ZOOM", 4, 1 );
                sub_40315( ref l_U1253, 275 );
                l_U2400._fU4 = 2;
                l_U2400._fU104 = 0;
            }
            else
            {
                l_U1253._fU16 = 1;
                l_U2400._fU4 = 7;
            }
        }
        sub_1678( ref l_U1253 );
        if (l_U1253._fU16)
        {
            if ((sub_40416( ref l_U2400 )) == 1)
            {
                l_U847 = 10;
                sub_239( "MF", "eCheckpointState = CPS_VIP_ROOM_COMBAT", 0 );
            }
        }
        break;
        case 10:
        if (l_U848 == 1)
        {
            if (NOT l_U811._fU0)
            {
                g_U892 = 2;
                sub_42891( ref l_U811, 2, sub_396(), g_U2216[2], g_U2331[2], g_U2370[2], g_U2409[2], 1 );
            }
            l_U1753 = 0;
            l_U1754 = 0;
            l_U1755 = 0;
            l_U1897 = 0;
            sub_46516();
            sub_46774();
            SET_PLAYER_FORCED_AIM_MAINTAIN_DIRECTION( sub_418(), 0, 0 );
            sub_22288( -2074831912, ref g_U1350 );
            sub_22288( -1239976099, ref g_U1350 );
            sub_22288( 996082158, ref g_U1350 );
            sub_22288( 277457984, ref g_U1350 );
        }
        sub_47099();
        if (NOT l_U1435)
        {
            if (NOT (IS_PED_DEAD( l_U1450[0] )))
            {
                if ((PED_GET_ACTION_INTENTION_STATUS( l_U1450[0], 47 )) == 3)
                {
                    sub_239( "MF", "Creating vignette corpses and performing cleanup", 0 );
                    PED_FINISH_ACTION_INTENTION( l_U1450[0], 47 );
                    SET_PED_CORPSE_FROM_ANIM( l_U1450[0], "LEVEL_S_CLUB_CP_02", "L_CLUB_12G_CMED_TRIP_M3", 1.00000000, 1 );
                    ADD_BLOOD_POOL( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U1450[0] ), 1.00000000, 4.00000000, 60.00000000 );
                    l_U1435 = 1;
                }
            }
        }
        if (NOT l_U2239)
        {
            if (NOT (sub_48043( l_U1321 )))
            {
                sub_48080();
                sub_2207( ref g_U3340 );
                sub_2207( ref g_U3350 );
                l_U2239 = 1;
            }
        }
        if (NOT l_U850._fU64)
        {
            if (sub_48361( ref l_U1317, 1 ))
            {
                if (sub_48361( ref l_U1342, 0 ))
                {
                    if (NOT (sub_1322( ref l_U2250 )))
                    {
                        sub_40315( ref l_U2250, 1500 );
                    }
                }
            }
        }
        if (sub_1678( ref l_U2250 ))
        {
            sub_48619( "SCLB_MADDA", ref l_U2240 );
        }
        if (sub_49729( ref l_U934, 0 ))
        {
            if (((sub_10000( ref l_U1342 )) == 0) AND ((sub_10000( ref l_U1317 )) == 0))
            {
                sub_49858();
                sub_2207( ref g_U3340 );
                sub_2207( ref g_U3350 );
                if (sub_48361( ref l_U1342, 0 ))
                {
                    if ((l_U2250._fU16) AND (TIME_SINCE_LAST_MONOLOGUE() > 1000))
                    {
                        sub_48619( "SCLB_MVOUS", ref l_U2259 );
                    }
                }
            }
            else
            {
                sub_239( "MF", "Cleaning: piVIP_REINFORCEMENT_CS_WAVE_1", 0 );
                sub_4436( ref l_U1372 );
            }
            SET_WEATHER_TYPE_PERSIST( "EXTRASUNNY" );
            SET_WEATHER_TRANSITION_SPEED( 1.00000000 );
            SET_WEATHER_TRANSITION_IMMEDIATE( 1 );
        }
        if (((sub_10000( ref l_U1372 )) == 0) AND ((sub_48361( ref l_U1342, 1 )) AND (sub_48361( ref l_U1317, 1 ))))
        {
            if (l_U2310._fU16)
            {
                if (NOT (IS_ANY_SPEECH_PLAYING( sub_396() )))
                {
                    if (NOT IS_PLAYER_SHOOTDODGING())
                    {
                        if (TIME_SINCE_LAST_MONOLOGUE() > 1000)
                        {
                            if (sub_49729( ref l_U2279, 0 ))
                            {
                                sub_239( "MF", "Playing: SCLB_MGBTB", 0 );
                                sub_48619( "SCLB_MGBTB", ref l_U2269 );
                            }
                        }
                    }
                }
            }
        }
        if (((sub_10000( ref l_U1372 )) == 0) AND ((sub_48361( ref l_U1342, 1 )) AND (sub_48361( ref l_U1317, 1 ))))
        {
            if (sub_49729( ref l_U2319, 0 ))
            {
                sub_40315( ref l_U2310, 40000 );
            }
        }
        if (TIME_SINCE_LAST_MONOLOGUE() > 1000)
        {
            if (sub_1678( ref l_U2310 ))
            {
                sub_239( "MF", "Playing: SCLB_MADVP", 0 );
                sub_48619( "SCLB_MADVP", ref l_U2300 );
                sub_40315( ref g_U3340, 30000 );
            }
        }
        if (TIME_SINCE_LAST_MONOLOGUE() > 1000)
        {
            if (l_U2310._fU16)
            {
                if (NOT IS_PLAYER_SHOOTDODGING())
                {
                    if (sub_49729( ref l_U2350, 0 ))
                    {
                        sub_239( "MF", "Playing: SCLB_MGBDF", 0 );
                        sub_48619( "SCLB_MGBDF", ref l_U2340 );
                    }
                }
            }
        }
        if (sub_49729( ref l_U850, 0 ))
        {
            sub_50971();
        }
        if (sub_49729( ref l_U955, 0 ))
        {
            sub_51369();
            ENABLE_WALLA_ZONE( "S_CLUB_WZ_PATIO_PANIC", 1 );
            ENABLE_WALLA_ZONE( "S_CLUB_WZ_LOUNGE_HOSTAGES_02", 1 );
            sub_2207( ref g_U3340 );
            sub_2207( ref g_U3350 );
            sub_2207( ref l_U2310 );
        }
        if (NOT l_U1753)
        {
            if ((sub_10317( sub_396(), l_U976 )) || (sub_51909()))
            {
                ENABLE_WALLA_ZONE( "S_CLUB_WZ_PATIO_PANIC_CS", 1 );
                sub_52031();
                l_U1753 = 1;
            }
        }
        if (NOT l_U1754)
        {
            if ((sub_10317( sub_396(), l_U976 )) || (sub_52195()))
            {
                sub_52357();
                l_U1754 = 1;
            }
        }
        if (l_U1754)
        {
            sub_52549();
        }
        if (l_U1753)
        {
            if (NOT l_U1755)
            {
                if ((sub_47203( l_U1401[1], 48 )) == 3)
                {
                    sub_52835( ref l_U1401[1] );
                    sub_53616( l_U1401[1], 406496141, 25000, 0, 0 );
                    if (NOT (IS_PED_DEAD( l_U1401[1] )))
                    {
                        SET_PED_AS_ONE_SHOT_KILL( l_U1401[1], 0 );
                    }
                    l_U1755 = 1;
                }
            }
        }
        if (NOT l_U1897)
        {
            if ((sub_10317( sub_396(), l_U976 )) || (sub_53844()))
            {
                ENABLE_WALLA_ZONE( "S_CLUB_WZ_COAT_CHECK_HOSTAGES", 1 );
                sub_53995();
                l_U1897 = 1;
            }
        }
        if (l_U1897 == 1)
        {
            if (sub_26807( ref l_U1980, ref l_U1983, -1, 1, 1, 0, 1 ))
            {
                sub_54981();
            }
        }
        if (l_U1897 == 1)
        {
            if (sub_26807( ref l_U2063, ref l_U2066, -1, 1, 1, 0, 1 ))
            {
                sub_55394();
            }
        }
        if (NOT l_U1434)
        {
            if (NOT (sub_10317( sub_396(), l_U1959 )))
            {
                if (l_U1897)
                {
                    if (NOT (ISEQ_QUERY_STATE( -1404259228, 3 )))
                    {
                        ENABLE_WALLA_ZONE( "S_CLUB_WZ_COAT_CHECK_HOSTAGES", 0 );
                        sub_55803();
                        sub_56097();
                        l_U1434 = 1;
                    }
                }
            }
        }
        if (sub_10317( sub_396(), l_U1959 ))
        {
            sub_56606();
        }
        if (NOT l_U1569)
        {
            if (sub_56720())
            {
                if (NOT (sub_56849( ref l_U1483 )))
                {
                    sub_18889( ref l_U1483, 1 );
                }
                if (NOT (sub_56849( ref l_U1578 )))
                {
                    sub_18889( ref l_U1578, 1 );
                }
            }
        }
        else if (NOT sub_56720())
        {
            if (sub_56849( ref l_U1483 ))
            {
                sub_18889( ref l_U1483, 0 );
            }
            if (sub_56849( ref l_U1578 ))
            {
                sub_18889( ref l_U1578, 0 );
            }
        }
        if (sub_56983( ref l_U1483 ))
        {
            if (NOT g_U1102)
            {
                l_U1694 = 1;
                g_U1102 = 1;
            }
            sub_41526( 1, 0, 0, 1 );
            CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAM_GND_15_F_CAM", 1, 37.93000000, -61.12000000, -0.32000000, 0.00000000, 0, 0 );
            FOUND_EXPLORATION_ITEM( "sclb_SoccerBody" );
            sub_38459( sub_396(), 37.78000000, -62.18000000, -2.00000000, 320.00000000 );
            if (NOT l_U1482)
            {
                sub_483( 0 );
                sub_48619( "SCLB_MSCDB", ref uVar3 );
                l_U1482 = 1;
            }
            l_U1569 = 1;
        }
        if (sub_59346( ref l_U1483 ))
        {
            sub_48619( "EXPLORE_ITEM", ref l_U2390 );
        }
        if (sub_56983( ref l_U1578 ))
        {
            g_U1102 = 1;
            sub_41526( 1, 0, 0, 1 );
            CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAM_GND_25_F_CAM", 1, 42.69000000, -69.44000000, -0.40000000, -53.20000000, 0, 0 );
            FOUND_EXPLORATION_ITEM( "sclb_ClubFlyer" );
            sub_59720( 41.91743000, -69.88730000, -2.06253100, -35.33000000, 25.40000000, -4.60000000 );
            if (NOT l_U1577)
            {
                sub_483( 0 );
                sub_48619( "SCLB_MSPCF", ref uVar13 );
                l_U1577 = 1;
            }
            l_U1569 = 1;
        }
        if (sub_59346( ref l_U1578 ))
        {
            sub_48619( "EXPLORE_ITEM", ref l_U2390 );
        }
        if (l_U1569)
        {
            if (NOT IS_ANIMATED_CAMERA_PLAYING())
            {
                sub_42403( 1, 1 );
                sub_57942( ref l_U1578, 1 );
                sub_57942( ref l_U1483, 1 );
                l_U1569 = 0;
                if (l_U1694 == 1)
                {
                    g_U1102 = 0;
                }
                if (NOT g_U1102)
                {
                    sub_40315( ref g_U3350, 15000 );
                    sub_40315( ref g_U3340, 55000 );
                }
            }
        }
        if (sub_59987())
        {
            if (sub_56720())
            {
                if (TIME_SINCE_LAST_MONOLOGUE() > 2000)
                {
                    if ((l_U2310._fU16) AND (NOT (IS_ANY_SPEECH_PLAYING( sub_396() ))))
                    {
                        sub_239( "MF", "Playing Speech: SSTD_MFSP", 0 );
                        sub_48619( ref g_U3540, ref uVar23 );
                    }
                    sub_2207( ref g_U3529 );
                }
            }
        }
        if ((sub_49729( ref l_U976, 0 )) == 1)
        {
            sub_30549( ref g_U3255, 0 );
            sub_30549( ref g_U3262, 0 );
            sub_30685( ref g_U3255, 0 );
            sub_30685( ref g_U3262, 0 );
            sub_60297( ref g_U3255, 0 );
            sub_60297( ref g_U3262, 0 );
        }
        if (NOT l_U1244)
        {
            if (l_U976._fU64)
            {
                if (sub_60462( ref l_U1060, 0 ))
                {
                    if ((NOT (IS_SPHERE_VISIBLE( 46.71000000, -49.35000000, 1.69000000, 1.50000000, 0 ))) || ((((sub_60629( ref g_U3262 )) > (0.01000000 * -1)) AND ((sub_60629( ref g_U3262 )) < 0.01000000)) AND (((sub_60629( ref g_U3255 )) > (0.01000000 * -1)) AND ((sub_60629( ref g_U3255 )) < 0.01000000))))
                    {
                        sub_60802( ref g_U3255, 1, 1 );
                        sub_60802( ref g_U3262, 1, 1 );
                        sub_30186( ref g_U3255, 1 );
                        sub_30186( ref g_U3262, 1 );
                        sub_60900( -671715858, 1 );
                        sub_60900( -921546714, 1 );
                        sub_61131( "LEVEL_S_CLUB_CP_01" );
                        sub_61159();
                        sub_4436( ref l_U1450 );
                        sub_4436( ref l_U1479 );
                        sub_4436( ref l_U1317 );
                        sub_4436( ref l_U1342 );
                        sub_61479( g_U2478, ref g_U1108 );
                        sub_61702( ref g_U893[3] );
                        l_U1244 = 1;
                    }
                }
            }
        }
        if (sub_10278( ref l_U913, sub_396(), 0 ))
        {
            BULLET_CAMERA_PRELOAD_TEXT_BINK( "MISS_DEATH_FALL_01A", 1 );
            g_U3339 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
            SETUP_BULLET_CAMERA_SCENE( g_U3339, "MISS_DEATH_FALL_01A", 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
            SET_CAM_ACTIVE( g_U3339, 1 );
            g_U3360 = 1;
            if (NOT (IS_PED_DEAD( sub_396() )))
            {
                SET_PED_PROOFS( sub_396(), 1, 1, 1, 1, 1 );
            }
        }
        if (TIME_SINCE_LAST_MONOLOGUE() > 1500)
        {
            if ((sub_1322( ref g_U3340 )) == 0)
            {
                if ((NOT l_U2239) AND (sub_48361( ref l_U1317, 0 )))
                {
                    sub_239( "MF", "Starting mission failed timer...", 0 );
                    sub_1426( ref g_U3350, g_U3359, 1, 0 );
                    sub_1560( ref g_U3350 );
                    sub_1426( ref g_U3340, g_U3349, 1, 0 );
                    sub_1560( ref g_U3340 );
                }
                if ((NOT l_U934._fU64) AND ((sub_48361( ref l_U1342, 0 )) AND (sub_48361( ref l_U1317, 0 ))))
                {
                    sub_239( "MF", "Starting mission failed timer...", 0 );
                    sub_1426( ref g_U3350, g_U3359, 1, 0 );
                    sub_1560( ref g_U3350 );
                    sub_1426( ref g_U3340, g_U3349, 1, 0 );
                    sub_1560( ref g_U3340 );
                }
                if ((NOT l_U955._fU64) AND ((l_U934._fU64) AND ((IS_PED_DEAD( l_U1372[0] )) AND ((sub_48361( ref l_U1342, 0 )) AND (sub_48361( ref l_U1317, 0 ))))))
                {
                    sub_239( "MF", "Starting mission failed timer...", 0 );
                    sub_1426( ref g_U3350, g_U3359, 1, 0 );
                    sub_1560( ref g_U3350 );
                    sub_1426( ref g_U3340, g_U3349, 1, 0 );
                    sub_1560( ref g_U3340 );
                }
                if ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND (sub_9986() < 1))
                {
                    sub_239( "MF", "Starting mission failed timer...", 0 );
                    sub_1426( ref g_U3350, g_U3359, 1, 0 );
                    sub_1560( ref g_U3350 );
                    sub_1426( ref g_U3340, g_U3349, 1, 0 );
                    sub_1560( ref g_U3340 );
                }
            }
            if (g_U1102 == 0)
            {
                if (NOT (IS_ANY_SPEECH_PLAYING( sub_396() )))
                {
                    if ((sub_1678( ref g_U3350 )) == 1)
                    {
                        sub_239( "MF", "Playing warning monologue...", 0 );
                        sub_48619( "SCLB_MTLTG", ref g_U3361 );
                    }
                }
                if ((sub_1678( ref g_U3340 )) == 1)
                {
                    if (sub_62692() == 1)
                    {
                        l_U37 = 2;
                        l_U847 = 11;
                        sub_239( "SP", "eCheckpointState = CPS_HANDLE_MID_02_FAIL2", 0 );
                    }
                    else if (sub_62692() == 2)
                    {
                        l_U38 = 2;
                        l_U847 = 12;
                        sub_239( "SP", "eCheckpointState = CPS_HANDLE_MID_02_FAIL3", 0 );
                    }
                    else if (sub_62692() == 3)
                    {
                        l_U41 = 2;
                        l_U847 = 13;
                        sub_239( "SP", "eCheckpointState = CPS_HANDLE_MID_02_FAIL6", 0 );
                    }
                    else if (sub_62692() == 4)
                    {
                        l_U44 = 2;
                        l_U847 = 14;
                        sub_239( "SP", "eCheckpointState = CPS_HANDLE_MID_02_FAIL9", 0 );
                    }
                    else
                    {
                        sub_239( "SP", "Player is outside of any fail trigger... defaulting...", 0 );
                        l_U37 = 2;
                        l_U847 = 11;
                        sub_239( "SP", "eCheckpointState = CPS_HANDLE_MID_02_FAIL2", 0 );
                    };;;;
                    return;
                }
            }
        }
        if ((NOT IS_BULLET_CAMERA_ACTIVE()) AND ((sub_48361( ref l_U1431, 1 )) AND (sub_48361( ref l_U1401, 1 ))))
        {
            if (NOT (sub_1322( ref l_U2381 )))
            {
                sub_40315( ref l_U2381, 20000 );
            }
        }
        if (sub_1322( ref l_U2381 ))
        {
            if (IS_SPHERE_VISIBLE( 42.89000000, -22.55000000, 1.43000000, 4.00000000, 1 ))
            {
                if (sub_1678( ref l_U2381 ))
                {
                    sub_239( "MF", "Playing: SCLB_MADOP", 0 );
                    sub_48619( "SCLB_MADOP", ref l_U2371 );
                }
            }
        }
        if (NOT sub_63817())
        {
            if (sub_49729( ref l_U871, 1 ))
            {
                l_U847 = 15;
                sub_239( "SP", "eCheckpointState = CPS_WAIT_FOR_BULLET_CAM", 0 );
            }
        }
        if (sub_49729( ref l_U892, 1 ))
        {
            l_U847 = 15;
            sub_239( "SP", "eCheckpointState = CPS_WAIT_FOR_BULLET_CAM", 0 );
        }
        break;
        case 11:
        if (sub_64113() == 1)
        {
            l_U847 = 0;
            sub_239( "SP", "eCheckpointState = CPS_IDLE", 0 );
            g_U3360 = 1;
        }
        break;
        case 12:
        if (sub_65629() == 1)
        {
            l_U847 = 0;
            sub_239( "SP", "eCheckpointState = CPS_IDLE", 0 );
            g_U3360 = 1;
        }
        break;
        case 13:
        if (sub_66692() == 1)
        {
            l_U847 = 0;
            sub_239( "SP", "eCheckpointState = CPS_IDLE", 0 );
            g_U3360 = 1;
        }
        break;
        case 14:
        if (sub_67745() == 1)
        {
            l_U847 = 0;
            sub_239( "SP", "eCheckpointState = CPS_IDLE", 0 );
            g_U3360 = 1;
        }
        break;
        case 15:
        if (l_U848 == 1)
        {
            sub_239( "SA", "Preventing bullet cam to gameplay...", 0 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
        }
        if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
        {
            g_U1074[3] = 1;
            l_U847 = 16;
            sub_239( "SP", "eCheckpointState = CPS_WAIT_TO_END_SCRIPT", 0 );
        }
        break;
        case 16:
        if (l_U848 == 1)
        {
            sub_60802( ref g_U3115, 1, 1 );
            sub_30186( ref g_U3115, 1 );
            sub_4579( ref l_U2010 );
            sub_4579( ref l_U2093 );
            sub_4358( l_U1980[1] );
            sub_69020();
        }
        if (g_U1104 == 1)
        {
            l_U847 = 17;
            sub_239( "SP", "eCheckpointState = CPS_FINISHED", 0 );
        }
        break;
        case 17:
        sub_239( "MF", "eCheckpointState = CPS_FINISHED", 0 );
        g_U1090 = 1;
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U847 = 0;
        sub_239( "MF", "eCheckpointState = CPS_IDLE", 0 );
        break;
    }
    if (l_U847 != iVar2)
    {
        l_U848 = 1;
    }
    else
    {
        l_U848 = 0;
    }
    return;
}

void sub_9863()
{
    if ((sub_9878( ref l_U1431, 0 )) AND (sub_9878( ref l_U1401, 0 )))
    {
        if (sub_9986() == 1)
        {
            sub_10113( ref l_U1401 );
            sub_10113( ref l_U1431 );
        }
    }
    return;
}

void sub_9878(unknown uParam0, boolean bParam1)
{
    int I;
    int Result;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((DOES_PED_EXIST( (uParam0^)[I] )) == 1)
        {
            Result = 1;
            if (NOT bParam1)
            {
                return 1;
            }
        }
        else
        {
            Result = 0;
        }
    }
    return Result;
}

void sub_9986()
{
    int Result;

    Result = (sub_10000( ref l_U1401 )) + (sub_10000( ref l_U1431 ));
    return Result;
}

void sub_10000(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_10113(unknown uParam0)
{
    int I;

    if ((sub_10000( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_10258()
{
    if (sub_10278( ref l_U1018, sub_396(), 0 ))
    {
        PLAY_IMAGEFX( "GAMMA_SATURATION_COLOR_ZOOM_X", 4, 1 );
    }
    return;
}

void sub_10278(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 = sub_10317( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

int sub_10317(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_10691()
{
    sub_239( "MF", "P_INIT_SCRIPT_VARIABLES", 0 );
    l_U2239 = 0;
    l_U1435 = 0;
    l_U2437 = 0;
    l_U848 = 1;
    g_U1104 = 0;
    l_U1244 = 0;
    g_U3360 = 0;
    l_U1434 = 0;
    l_U1569 = 0;
    sub_1426( ref l_U2310, 1500, 1, 0 );
    sub_1426( ref l_U2250, 1500, 1, 0 );
    sub_1426( ref l_U2381, 20000, 1, 0 );
    l_U1694 = 0;
    if (g_U892 == 2)
    {
        sub_2207( ref g_U3340 );
        sub_2207( ref g_U3350 );
    }
    sub_2207( ref l_U1253 );
    return;
}

void sub_10887()
{
    unknown[2] uVar2;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    unknown uVar40;
    unknown uVar41;
    unknown uVar42;
    unknown uVar43;
    unknown uVar44;

    sub_239( "MF", "P_INIT_GAMEPLAY_STRUCTS", 0 );
    sub_10973( ref l_U1277[0], 41.52000000, -58.52000000, -1.99000000, 33.00000000, 1325983343, 7, 3, 2, 0, 0 );
    sub_10973( ref l_U1277[1], 40.88000000, -61.48000000, -1.99000000, 33.00000000, -1923201019, 7, 3, 2, 0, 0 );
    sub_10973( ref l_U1277[2], 33.34000000, -70.19000000, -4.04000000, 32.37000000, 1133174296, 7, 3, 2, 0, 0 );
    sub_10973( ref l_U1344[0], 41.16000000, -54.51000000, -0.45000000, 174.00000000, -406575828, 7, 3, 2, 0, 0 );
    sub_10973( ref l_U1358[0], 44.48061000, -53.65999000, -0.23348600, 168.43000000, 1382010956, 7, 3, 2, 0, 0 );
    sub_10973( ref l_U1374[0], 40.01834000, -44.42652000, 0.79936000, 90.00000000, -1217888826, 7, 3, 2, 0, 0 );
    sub_10973( ref l_U1374[1], 46.94117000, -33.96003000, 0.84497000, 203.63370000, -250904585, 7, 3, 2, 0, 0 );
    sub_10973( ref l_U1436[0], 32.42000000, -69.41000000, -4.62000000, 37.50000000, 752164575, 4, 1, 1, 0, 0 );
    sub_10973( ref l_U1695[0], 39.77162000, -39.02316000, 0.80214000, 0.00000000, 1303366841, 4, 1, 0, 0, 0 );
    sub_10973( ref l_U1695[1], 41.59354000, -38.74335000, 0.79880000, 0.00000000, -1107837059, 5, 2, 0, 0, 0 );
    sub_10973( ref l_U1695[2], 40.45366000, -40.59378000, 0.79909000, 0.00000000, -1246391876, 5, 2, 0, 0, 0 );
    sub_10973( ref l_U1695[3], 46.44000000, -34.92000000, -0.10000000, 240.00000000, -354470668, 4, 1, 0, 0, 0 );
    sub_10973( ref l_U1452[0], 43.79000000, -64.83000000, -2.02500000, 153.00000000, -1119592564, 4, 1, 0, 0, 0 );
    sub_10973( ref l_U1452[1], 38.04000000, -57.26000000, -2.00000000, 200.00000000, 43383076, 5, 2, 0, 0, 0 );
    sub_10973( ref l_U1404[0], 38.65926000, -25.42413000, -0.19248000, 135.00000000, -403780099, 7, 3, 2, 0, 0 );
    sub_10973( ref l_U1404[1], 40.64875000, -24.52139000, -0.19248000, 0.00000000, 2077907202, 7, 3, 2, 0, 0 );
    sub_11813( ref l_U1919[0], -354470668, 43.68800000, -25.41600000, 0.80600000, 93.05700000, "level_s_club_CP_02", "VIG_03_NC_GMED", 0.10000000, 0, 1 );
    sub_11813( ref l_U1919[1], -643577458, 45.31300000, -25.63100000, 0.80600000, 125.49200000, "level_s_club_CP_02", "VIG_03_NC_GMED3", 0.10000000, 0, 1 );
    sub_11813( ref l_U1919[2], -161572873, 45.47700000, -24.71600000, 0.80600000, 125.49200000, "level_s_club_CP_02", "VIG_03_NC_FLGE_HH", 0.10000000, 0, 1 );
    sub_11813( ref l_U2010[0], 1803259048, 27.08300000, -28.65000000, 1.83800000, 0.00000000, "level_s_club_CP_02", "VIG_03B_NC_CIV1", 0, 0, 1 );
    sub_11813( ref l_U2010[1], -1557766485, 26.65600000, -27.55900000, 1.83600000, -90.00000000, "level_s_club_CP_02", "VIG_03B_NC_CIV2", 0, 0, 1 );
    sub_11813( ref l_U2010[2], 549792626, 29.22000000, -24.22000000, 1.81000000, -135.00000000, "level_s_club_CP_02", "VIG_03B_NC_CIV4", 0, 0, 1 );
    sub_10973( ref l_U1983[0], 28.77000000, -24.24000000, 0.83000000, -135.00000000, -327748143, 4, 1, 0, 0, 0 );
    sub_10973( ref l_U1983[1], 29.34200000, -28.03800000, 0.81000000, 45.00000000, -1689330283, 4, 1, 0, 0, 0 );
    sub_11813( ref l_U2093[0], -105887005, 38.31000000, -27.17000000, 0.82000000, 0.00000000, "level_s_club_CP_02", "VIG_03B_NC_B_CIV1", 0, 0, 1 );
    sub_11813( ref l_U2093[1], -1601962098, 36.29000000, -27.50000000, 0.82000000, 0.00000000, "level_s_club_CP_02", "VIG_03B_NC_B_CIV2", 0, 0, 1 );
    sub_11813( ref l_U2093[2], -2094027208, 47.09000000, -24.28000000, 0.82000000, 0.00000000, "level_s_club_CP_02", "VIG_03B_NC_B_CIV4", 0, 0, 1 );
    sub_10973( ref l_U2066[0], 46.46000000, -24.24000000, -0.17000000, 0.00000000, -643577458, 5, 2, 0, 0, 0 );
    sub_10973( ref l_U2066[1], 37.23000000, -27.57000000, -0.17000000, 0.00000000, 363747731, 4, 1, 0, 0, 0 );
    sub_11813( ref l_U2133[0], 1628984238, 41.96000000, -22.93000000, 0.82000000, 45.00000000, "DAM_DEAD", "MED_DEAD_POSE_FRONT_02", 0, 0, 1 );
    sub_11813( ref l_U2133[1], -1245682204, 48.57000000, -25.32000000, 0.82000000, 195.00000000, "level_s_club_CP_01_02", "VIG_01C_NC_CIV1_IDLE1", 0, 1, 0 );
    sub_11813( ref l_U2133[2], 286906605, 41.05000000, -23.70000000, 0.82000000, 45.00000000, "DAM_DEAD", "MED_DEAD_POSE_LEFT_01", 0, 0, 1 );
    sub_11813( ref l_U2133[3], -692023333, 40.32000000, -19.59000000, 0.82000000, 115.00000000, "level_s_club_CP_01_02", "VIG_01O_NC_CPL1_IDLE_CIV1", 0, 1, 0 );
    sub_11813( ref l_U2133[4], 572388144, 44.93000000, -20.86000000, 0.82000000, 65.00000000, "level_s_club_CP_01_02", "VIG_01C_NC_CIV1_IDLE1", 0, 0, 1 );
    sub_11813( ref l_U2133[5], -336604608, 46.03000000, -18.84000000, 0.82000000, 195.00000000, "level_s_club_CP_01_02", "VIG_01O_NC_CPL1_IDLE_CIV2", 0, 1, 0 );
    sub_11813( ref l_U2133[6], -897194603, 48.15000000, -19.89000000, 0.98000000, 45.00000000, "level_s_club_CP_01_02", "VIG_02_NC_IDLE1", 0, 0, 1 );
    sub_11813( ref l_U2133[7], -1216213616, 50.11000000, -22.12000000, 0.82000000, -116.00000000, "DAM_DEAD", "MED_DEAD_POSE_FRONT_03", 0, 0, 1 );
    sub_13518( ref l_U1321, "SUPRESS_CS_EXTRA_SPAWN", 25.46000000, -49.53000000, -4.75000000, 22.43000000, 18.50000000, 9.89000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13518( ref l_U850, "STAIR_VIP", 34.62000000, -73.40000000, -5.42000000, 3.85000000, 3.30000000, 7.00000000, 0.00000000, 0.00000000, -149.01000000, 1 );
    sub_13518( ref l_U871, "Manager_NIS", 27.42000000, -26.16000000, -1.73000000, 6.52000000, 21.78000000, 6.38000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13518( ref l_U892, "Manager_NIS_Failsafe", 27.22000000, -29.26000000, 0.00000000, 3.85000000, 13.27000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13518( ref l_U913, "FALL_DEATH", 58.28000000, -37.21000000, -6.44000000, 20.00000000, 30.00000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13518( ref l_U2279, "Speech - SCLB_MGBTB", 44.93000000, -66.39000000, -2.22000000, 3.36000000, 3.57000000, 3.03000000, 0.00000000, 0.00000000, -179.18000000, 1 );
    sub_13518( ref l_U2319, "Speech - SCLB_MADVP", 41.39000000, -64.13000000, -2.22000000, 14.47000000, 20.75000000, 3.06000000, 0.00000000, 0.00000000, -179.18000000, 1 );
    sub_13518( ref l_U2350, "Speech - SCLB_MGBDF", 25.99000000, -64.13000000, -5.69000000, 23.47000000, 26.44000000, 3.06000000, 0.00000000, 0.00000000, -179.18000000, 1 );
    sub_13518( ref l_U934, "SPAWN_VIP_REINFORCEMENTS_1", 33.35000000, -70.98000000, -5.18000000, 3.36000000, 4.66000000, 7.00000000, 0.00000000, 0.00000000, -149.89000000, 1 );
    sub_13518( ref l_U955, "SPAWN_VIP_REINFORCEMENTS_2", 46.89000000, -51.84000000, -1.43000000, 5.00000000, 4.06000000, 3.00000000, 0.00000000, 0.00000000, -179.89000000, 1 );
    sub_13518( ref l_U976, "CLOSE_BALCONY_DOORS", 42.18000000, -42.99000000, -1.43000000, 14.41000000, 3.53000000, 3.00000000, 0.00000000, 0.00000000, -179.89000000, 1 );
    sub_13518( ref l_U997, "CLAUDIO_POI", 37.62621000, -60.02418000, -2.06252100, 5.00000000, 1.50000000, 2.00000000, 0.00000000, 0.00000000, -121.30000000, 1 );
    sub_13518( ref l_U1673, "Club Flyer Exporation", 42.55000000, -69.74000000, -2.05000000, 2.24000000, 1.66000000, 2.45000000, 0.00000000, 0.00000000, -43.63000000, 1 );
    sub_13518( ref l_U1898, "CLEAN_VIG_03_B", 28.84000000, -32.04000000, 0.00000000, 3.70000000, 7.26000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13518( ref l_U1959, "BLOCK_WAVE_3", 33.71000000, -32.71000000, 0.00000000, 11.67000000, 5.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13518( ref l_U1039, "CS Wave 3 safety Cleanup", 26.75000000, -29.26000000, 0.00000000, 3.85000000, 13.27000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    array(ref uVar2, 2);
    sub_13518( ref uVar2[0], "CLEAN_VIG_03_A_00", 26.44000000, -30.12000000, 0.00000000, 6.00000000, 3.35000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13518( ref uVar2[1], "CLEAN_VIG_03_A_01", 26.45000000, -36.85000000, 0.00000000, 6.13000000, 3.35000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14925( ref l_U1756, ref uVar2 );
    sub_13518( ref l_U1201[0], "Close Balcony Doors Safety 1", 42.44000000, -39.27000000, -0.37000000, 14.12000000, 20.05000000, 3.00000000, 0.00000000, 0.00000000, -179.89000000, 1 );
    sub_13518( ref l_U1201[1], "Close Balcony Doors Safety 2", 33.71000000, -32.71000000, 0.00000000, 11.67000000, 5.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14925( ref l_U1060, ref l_U1201 );
    sub_13518( ref l_U1018, "tbImageFX_VIP01", 30.03000000, -32.71000000, 0.00000000, 11.67000000, 5.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15474();
    sub_17254( ref l_U1245[0], "tethVIP_MAIN_00", 40.34000000, -66.11000000, -2.22000000, 4.63000000, 20.12000000, 3.72000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_17254( ref l_U1245[1], "tethVIP_MAIN_01", 44.68000000, -61.52000000, -2.22000000, 5.24000000, 2.12000000, 3.72000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_17254( ref l_U1245[2], "tethVIP_MAIN_02", 44.56000000, -70.99000000, -2.22000000, 5.69000000, 2.62000000, 3.72000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_17254( ref l_U1245[3], "tethVIP_MAIN_03", 37.13000000, -64.52000000, -2.22000000, 4.73000000, 4.78000000, 14.61000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_17254( ref l_U1250, "tethVIP_WINDOW", 35.60000000, -64.68000000, -2.22000000, 2.54000000, 6.99000000, 5.47000000, 0.00000000, 0.00000000, -0.23001300, 1 );
    sub_17254( ref l_U1251, "MAIN_CLUB_AREA", 26.60000000, -61.53000000, -5.47000000, 16.93000000, 18.54000000, 3.72000000, 0.00000000, 0.00000000, -0.03999760, 1 );
    sub_17254( ref l_U1252, "tethVIP_BALCONY", 44.80000000, -38.80000000, -0.35000000, 10.46000000, 17.07000000, 3.72000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_17819( ref l_U1483, 2, 37.62621000, -60.02418000, -2.06252100, l_U997, 37.62621000, -60.02418000, -2.06252100, 3.00000000, 1, 0 );
    sub_18650( ref l_U1483, 0 );
    sub_18682( ref l_U1483, 1 );
    sub_18728( ref l_U1483, 30, "POI_CLAUDIO" );
    sub_18889( ref l_U1483, 0 );
    sub_17819( ref l_U1578, 2, l_U1571, l_U1673, l_U1571, 3.00000000, 1, 0 );
    sub_18650( ref l_U1578, 0 );
    sub_18682( ref l_U1578, 1 );
    sub_18728( ref l_U1578, 30, "POI_FLYER" );
    sub_18889( ref l_U1578, 0 );
    return;
}

void sub_10973(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_11813(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = GET_SCENE_PED_MODEL( uParam1 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU8 = {uParam2};
    iParam0->_fU20 = uParam5;
    iParam0->_fU28 = uParam6;
    iParam0->_fU32 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU40 = uParam9;
    iParam0->_fU44 = uParam10;
    iParam0->_fU48 = 1;
    return;
}

void sub_13518(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_14925(int iParam0, unknown uParam1)
{
    int iVar4;
    int I;

    iVar4 = (uParam1^);
    if (iVar4 > 6)
    {
        sub_239( "[SA]", "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
        SCRIPT_ASSERT( "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
    }
    for ( I = 0; I < iVar4; I++ )
    {
        iParam0->_fU0[I] = {(uParam1^)[I]};
    }
    iParam0->_fU508 = iVar4;
    iParam0->_fU548 = 0;
    iParam0->_fU552 = 0;
    iParam0->_fU556 = 0;
    iParam0->_fU560 = 0;
    return;
}

void sub_15474()
{
    sub_239( "SP", "P_SETUP_MID_02_FAIL_STRUCTS", 0 );
    sub_13518( ref l_U356, "TRIG_FAIL_DANCE_1", 26.97000000, -65.77000000, -5.32000000, 24.62000000, 21.82000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13518( ref l_U377, "TRIG_FAIL_DANCE_1B", 26.26000000, -54.19000000, -5.07000000, 9.00000000, 6.00000000, 4.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13518( ref l_U398, "TRIG_FAIL_DANCE_1C", 27.15000000, -73.02000000, -5.07000000, 11.65000000, 6.81000000, 4.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13518( ref l_U419, "TRIG_FAIL_DANCE_1D", 37.51000000, -76.03000000, -3.59000000, 4.00000000, 4.00000000, 4.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13518( ref l_U440, "TRIG_FAIL_DANCE_2", 24.88000000, -47.96000000, -5.08000000, 20.38000000, 21.81000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13518( ref l_U461, "TRIG_FAIL_DANCE_2A", 34.84000000, -52.84000000, -5.08000000, 4.00000000, 4.51000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13518( ref l_U482, "TRIG_FAIL_LOUNGE", 40.67000000, -66.68000000, -2.22000000, 14.28000000, 21.46000000, 4.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13518( ref l_U503, "TRIG_FAIL_LOUNGE_A", 43.51000000, -52.82000000, -2.24000000, 10.00000000, 6.79000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13518( ref l_U524, "TRIG_FAIL_PATIO", 43.08000000, -39.79000000, -0.44000000, 15.00000000, 19.30000000, 4.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13518( ref l_U545, "TRIG_FAIL_PATIO_A", 32.55000000, -33.47000000, -0.44000000, 6.56000000, 3.71000000, 4.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13518( ref l_U566, "TRIG_FAIL_ORBITAS_1", 18.68000000, 5.70000000, -1.94000000, 35.81000000, 47.05000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13518( ref l_U587, "TRIG_FAIL_ORBITAS_1A", 14.74000000, 28.10000000, -1.94000000, 29.29000000, 10.00000000, 10.00000000, 0.00000000, 0.00000000, -16.02000000, 1 );
    sub_13518( ref l_U608, "TRIG_FAIL_ORBITAS_2", 22.34000000, 41.28000000, -1.94000000, 19.64000000, 20.00000000, 10.00000000, 0.00000000, 0.00000000, -16.09000000, 1 );
    sub_13518( ref l_U629, "TRIG_FAIL_ORBITAS_2A", 12.80000000, 43.40000000, -1.94000000, 8.35000000, 16.52000000, 10.00000000, 0.00000000, 0.00000000, -44.41000000, 1 );
    sub_13518( ref l_U650, "TRIG_FAIL_BATHROOM", 9.15000000, 52.69000000, -1.94000000, 6.52000000, 8.24000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13518( ref l_U671, "TRIG_FAIL_BATHROOM_A", 12.49000000, 53.09000000, -1.94000000, 5.66000000, 5.97000000, 10.00000000, 0.00000000, 0.00000000, -44.57000000, 1 );
    sub_13518( ref l_U692, "TRIG_FAIL_KITCHEN_LOCKER", -0.83000000, 53.97000000, -1.94000000, 13.61000000, 8.49000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13518( ref l_U713, "TRIG_FAIL_KITCHEN", -9.52000000, 63.81000000, -1.94000000, 18.08000000, 11.18000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13518( ref l_U734, "TRIG_FAIL_KITCHEN_A", -20.47000000, 65.70000000, -1.94000000, 4.00000000, 9.51000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13518( ref l_U755, "TRIG_FAIL_RESTAURANT", -16.16000000, 90.72000000, -1.94000000, 42.04000000, 40.80000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13518( ref l_U776, "TRIG_FAIL_RESTAURANT_A", -14.35000000, 70.13000000, -1.94000000, 8.00000000, 1.00000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    return;
}

void sub_17254(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_17819(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31)
{
    sub_17834( iParam0, uParam30 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU80 = 1;
    iParam0->_fU116 = {uParam5};
    iParam0->_fU200 = {uParam26};
    iParam0->_fU212 = uParam29;
    iParam0->_fU320 = uParam31;
    iParam0->_fU20 = {uParam2};
    sub_18200( iParam0 );
    return;
}

void sub_17834(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_18200(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_18279( iParam0 );
    return;
}

void sub_18279(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_18338( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_18338( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_18338( iParam0, 1 );
            }
            else
            {
                sub_18338( iParam0, 0 );
            };;;
        }
        else
        {
            sub_18338( iParam0, 0 );
        }
    }
    else
    {
        sub_18338( iParam0, 0 );
    }
    return;
}

void sub_18338(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_18650(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

void sub_18682(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

void sub_18728(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_18759( iParam0 );
    return;
}

void sub_18759(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_18889(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
    sub_18931( iParam0 );
    return;
}

void sub_18931(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_18992( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_18992( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_18992(int iParam0)
{
    if (((IS_PED_DEAD( sub_396() )) == 0) AND ((IS_PLAYER_DEAD( sub_418() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_396() )) == 1) || (((IS_PED_GETTING_UP( sub_396() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_396() )) == 1) || (((IS_PED_IN_COVER( sub_396() )) == 1) || (((IS_PED_DUCKING( sub_396() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_396() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_19368(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_19388();
    return;
}

void sub_19388()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_19718()
{
    sub_239( "MF", "P_LOAD_VIP_ASSETS - START", 0 );
    sub_19776( 1208363481, ref g_U1108 );
    sub_19776( -1491672653, ref g_U1108 );
    sub_19776( g_U885, ref g_U1108 );
    sub_19776( g_U888, ref g_U1108 );
    sub_19776( g_U2478, ref g_U1108 );
    sub_19776( g_U2459, ref g_U1108 );
    sub_19776( -1043623436, ref g_U1108 );
    sub_21234( "LEVEL_S_CLUB_CP_01_02", ref g_U1447 );
    sub_21234( "LEVEL_S_CLUB_CP_02", ref g_U1447 );
    sub_21234( "EXPL_CAM", ref g_U1447 );
    sub_21234( "DAM_DEAD", ref g_U1447 );
    sub_22288( 816576289, ref g_U1350 );
    sub_22288( -1404259228, ref g_U1350 );
    sub_22288( -1700261605, ref g_U1350 );
    sub_22288( -671715858, ref g_U1350 );
    sub_22288( -921546714, ref g_U1350 );
    sub_22288( -506138981, ref g_U1350 );
    sub_22288( -2129777527, ref g_U1350 );
    sub_22288( 1875151350, ref g_U1350 );
    sub_22288( -1746599655, ref g_U1350 );
    sub_24331( 1194438308, ref g_U1301 );
    sub_24331( 406496141, ref g_U1301 );
    sub_24331( 68019059, ref g_U1301 );
    sub_19776( -1409914275, ref g_U1108 );
    sub_239( "MF", "P_LOAD_VIP_ASSETS - END", 0 );
    return;
}

void sub_19776(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_19811( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_19942( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_19811(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_19942( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_19942( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_19942( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_20590( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_19942( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_19942( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_19942(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_19962( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_19962(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_20590(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_21234(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_21255( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_21392( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_21255(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_21392( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_21392( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_21392( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_20590( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_21392( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_21392( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_21392(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_19962( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_22288(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_22323( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_22475( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_22323(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_22475( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_22475( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_22475( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_22475( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_20590( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_20590( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_22475( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_22475( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_22475(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_19962( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_24331(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_24352( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_24484( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_24352(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_24484( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_24484( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_24484( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_20590( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_24484( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_24484( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_24484(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_19962( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_25425(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_25545(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_25666(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_25793(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

int sub_26340(unknown uParam0)
{
    sub_239( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_5592( uParam0, sub_396() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

int sub_26784()
{
    if (NOT (sub_26807( ref l_U1342, ref l_U1344, -1, 0, 1, 1, 1 )))
    {
        return 0;
    }
    if (NOT (sub_26807( ref l_U1317, ref l_U1277, -1, 0, 1, 1, 1 )))
    {
        return 0;
    }
    if (NOT (sub_26807( ref l_U1372, ref l_U1358, -1, 0, 1, 1, 1 )))
    {
        return 0;
    }
    if (NOT (sub_26807( ref l_U1401, ref l_U1374, -1, 0, 1, 1, 1 )))
    {
        return 0;
    }
    if (NOT (sub_26807( ref l_U1431, ref l_U1404, -1, 0, 1, 1, 1 )))
    {
        return 0;
    }
    if (NOT (sub_26807( ref l_U1450, ref l_U1436, -1, 0, 1, 1, 1 )))
    {
        return 0;
    }
    if (NOT (sub_26807( ref l_U1748, ref l_U1695, -1, 0, 1, 0, 1 )))
    {
        return 0;
    }
    if (NOT (sub_26807( ref l_U1479, ref l_U1452, -1, 0, 0, 0, 1 )))
    {
        return 0;
    }
    return 1;
}

int sub_26807(unknown uParam0, unknown uParam1, int iParam2, boolean bParam3, boolean bParam4, int iParam5, unknown uParam6)
{
    int iVar9;
    int iVar10;
    int Result;

    iVar9 = sub_26821( uParam0, uParam1 );
    if (iParam2 == -1)
    {
        iVar10 = (uParam0^);
    }
    else
    {
        iVar10 = iParam2;
    }
    if (iVar9 < iVar10)
    {
        if ((uParam1^)[iVar9]._fU16 == 0)
        {
            SCRIPT_ASSERT( "Invalid Ped Struct!  No Model Defined! Aborting Ped Spawn", 0 );
            sub_239( "MF", "Invalid Ped Struct!  No Model Defined! Aborting Ped Spawn", 0 );
            sub_27120( iVar9 );
            return 0;
        }
        if (NOT (DOES_PED_EXIST( (uParam0^)[iVar9] )))
        {
            sub_27175( (uParam1^)[iVar9]._fU16, uParam6 );
            (uParam0^)[iVar9] = sub_27347( ref (uParam1^)[iVar9] );
            if (NOT bParam4)
            {
                SET_PED_VISIBLE( (uParam0^)[iVar9], bParam4 );
                sub_5299( "SPAWNING INVISIBLE PED!!!" );
            }
            if (iParam5 == 1)
            {
                sub_28081( (uParam0^)[iVar9] );
                sub_5299( "Deactivating Ped..." );
            }
        }
    }
    if (bParam3)
    {
        if (iVar9 == (iVar10 - 1))
        {
            sub_239( "MF", "F_HANDLE_PED_ARRAY_SPAWN: Returning true Once.  If you see this looping, you likely have unitialized ped model data in your pedstruct array.", 0 );
            Result = 1;
        }
        return Result;
    }
    else if (iVar9 >= iVar10)
    {
        return 1;
    }
    return 0;
}

void sub_26821(unknown uParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = (uParam1^);
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (DOES_PED_EXIST( (uParam0^)[I] )))
        {
            if ((uParam1^)[I]._fU16 != 0)
            {
                if (I < Result)
                {
                    Result = I;
                }
            }
        }
    }
    return Result;
}

void sub_27120(unknown uParam0)
{
    return;
}

void sub_27175(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_5299( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_27347(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_27175( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_27826( iParam0->_fU40 );
    sub_27906( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_27826(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_27906(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_28081(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_28744()
{
    sub_239( "SP", "P_CREATE_PLACEMENTS", "###" );
    sub_4708( l_U2238 );
    l_U2238 = sub_28847( -4072149, 46.00000000, -67.48000000, -0.94500000, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0, 1119092736 );
    if ((DOES_PLACEMENT_EXIST( l_U2238 )) == 1)
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U2238, ref g_U2512 );
    }
    if (g_U892 == 2)
    {
        sub_28987();
    }
    l_U1570 = sub_29718( -1043623436, l_U1571, l_U1574, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U1570 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1570, ref g_U2512 );
        FREEZE_OBJECT_POSITION( l_U1570, 1 );
    }
    sub_29986();
    return;
}

void sub_28847(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_28987()
{
    sub_239( "CO", "P_CREATE_S_CLB_GG_38_01", 0 );
    sub_29104( ref g_U777, g_U885, 1887476559, -925661285, 27.02000000, -72.84000000, -2.45000000, 1.50000000, 0.00000000, g_U776, "rm_clb_firstclub" );
    sub_29233( ref g_U777 );
    return;
}

void sub_29104(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_239( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_29233(int iParam0)
{
    sub_239( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_29294( iParam0->_fU12 )) == 1)
        {
            sub_239( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_239( "CO", "has never been collected.", 0 );
        }
        if ((sub_29294( iParam0->_fU12 )) == 0)
        {
            sub_4708( iParam0->_fU0 );
            iParam0->_fU0 = sub_28847( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_239( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_239( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_29294(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_29718(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_27175( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_29986()
{
    sub_239( "CO", "P_CREATE_S_CLB_GG_M3_01", 0 );
    sub_29104( ref g_U831, g_U888, -925015168, 960408216, 42.93000000, -66.16000000, -1.95000000, 1.50000000, 0.00000000, g_U776, "GtaMIL_clb_Int_01" );
    sub_29233( ref g_U831 );
    return;
}

void sub_30134()
{
    sub_239( "SA", "P_SETUP_GAMEPLAY()", "###" );
    sub_30186( ref g_U3122, 0 );
    sub_30398( ref g_U3122, 0, 1, 1.00000000 );
    sub_30549( ref g_U3122, 1 );
    sub_30398( ref g_U3255, 0, 1, 1.00000000 );
    sub_30549( ref g_U3255, 1 );
    sub_30398( ref g_U3262, 1, 1, 1.00000000 );
    sub_30549( ref g_U3262, 1 );
    sub_30186( ref g_U3150, 1 );
    sub_30186( ref g_U3157, 1 );
    sub_30685( ref g_U3115, 0 );
    BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 0 );
    return;
}

void sub_30186(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_30198( iParam0 )) == 0)
    {
        sub_30264( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

int sub_30198(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_30264(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_30398(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_30198( iParam0 )) == 0)
    {
        sub_30264( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

void sub_30549(int iParam0, unknown uParam1)
{
    if ((sub_30198( iParam0 )) == 0)
    {
        sub_30264( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_LATCH( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

void sub_30685(int iParam0, unknown uParam1)
{
    if ((sub_30198( iParam0 )) == 0)
    {
        sub_30264( iParam0 );
    }
    DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( iParam0->_fU0, iParam0->_fU4 ), uParam1 );
    return;
}

void sub_30767()
{
    int I;

    sub_239( "MF", "P_VIP_SETUP_FIRST_CS - START", 0 );
    sub_30829( ref l_U1271, 1.00000000, 0 );
    sub_31024( ref l_U1317, "piVIP_FIRST_CS__" );
    sub_31122( ref l_U1317 );
    sub_31330( ref l_U1317 );
    if (NOT (IS_PED_DEAD( l_U1317[0] )))
    {
        SET_PED_AI_TEMPLATE( l_U1317[0], ref g_U3099 );
        GIVE_WEAPON_TO_PED_HAND( l_U1317[0], 1194438308, 25000, 0 );
        SET_PED_ALERTNESS( l_U1317[0], 3 );
        sub_31571( ref l_U1250, l_U1317[0], 1 );
    }
    if (NOT (IS_PED_DEAD( l_U1317[1] )))
    {
        SET_PED_AI_TEMPLATE( l_U1317[1], ref g_U3099 );
        GIVE_WEAPON_TO_PED_HAND( l_U1317[1], 406496141, 25000, 0 );
        sub_31571( ref l_U1250, l_U1317[1], 1 );
        SET_PED_ALERTNESS( l_U1317[1], 3 );
    }
    if (NOT (IS_PED_DEAD( l_U1317[2] )))
    {
        SET_PED_AI_TEMPLATE( l_U1317[2], ref g_U3099 );
        GIVE_WEAPON_TO_PED_HAND( l_U1317[2], 1194438308, 25000, 0 );
        sub_31571( ref l_U1251, l_U1317[2], 1 );
        SET_PED_ALERTNESS( l_U1317[2], 3 );
        SET_PED_COMBAT_ATTRIBUTES( l_U1317[2], 1, 0 );
    }
    for ( I = 0; I < l_U1317; I++ )
    {
        sub_31884( l_U1317[I], 0, 0 );
        SET_ROOM_FOR_PED_BY_NAME( l_U1317[I], ref g_U2512 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1317[I], 1 );
        SET_PED_CAN_PLAY_LOCO_FLAVOR_STARTS( l_U1317[I], 0 );
        sub_32006( l_U1317[I], ref l_U1271 );
    }
    sub_239( "MF", "P_VIP_SETUP_FIRST_CS - END", 0 );
    return;
}

void sub_30829(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_31024(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_31122(unknown uParam0)
{
    unknown uVar3;

    uVar3 = sub_396();
    sub_31143( uParam0, uVar3 );
    return;
}

void sub_31143(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_31177( ref (uParam0^)[I], uParam1 );
        sub_31242( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_31177(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_31242(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_31330(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_31361( (uParam0^)[I] );
    }
    return;
}

void sub_31361(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_31571(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_31884(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_PATH_CAN_USE_CLIMBOVERS( uParam0, uParam1 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( uParam0, uParam2 );
    }
    return;
}

void sub_32006(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_5299( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_30829( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_30829( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_32326()
{
    sub_239( "MF", "P_VIP_SETUP_REINFORCEMENTS_WAVE_1 - START", 0 );
    if (NOT (IS_PED_DEAD( l_U1372[0] )))
    {
        sub_7777( l_U1372[0], 406496141, 25000, 0, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1372[0], 1 );
        sub_32473( ref l_U1372[0], ref g_U3099, 5.00000000, 20.00000000 );
        sub_32006( l_U1372[0], ref l_U1271 );
        SET_PED_ALERTNESS( l_U1372[0], 3 );
    }
    sub_31024( ref l_U1372, "piVIP_REINFORCE_CS_WAVE_1" );
    sub_32639( ref l_U1372, 0, 0 );
    sub_32738( ref l_U1372 );
    sub_239( "MF", "P_VIP_SETUP_REINFORCEMENTS_WAVE_1 - END", 0 );
    return;
}

void sub_32473(unknown uParam0, unknown uParam1, float fParam2, float fParam3)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    return;
}

void sub_32639(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            SET_PED_PATH_CAN_USE_CLIMBOVERS( (uParam0^)[I], uParam1 );
            SET_PED_PATH_CAN_DROP_FROM_HEIGHT( (uParam0^)[I], uParam2 );
        }
    }
    return;
}

void sub_32738(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_28081( (uParam0^)[I] );
    }
    return;
}

void sub_32854()
{
    sub_239( "MF", "P_VIP_SETUP_REINFORCEMENTS_WAVE_2 - START", 0 );
    sub_31024( ref l_U1401, "piVIP_REINFORCEMENT_CS_WAVE_2" );
    sub_31330( ref l_U1401 );
    sub_32639( ref l_U1401, 0, 0 );
    sub_32990( ref l_U1401, sub_396(), 1 );
    sub_33128( ref l_U1252, ref l_U1401, 1 );
    if (NOT (IS_PED_DEAD( l_U1401[0] )))
    {
        sub_7777( l_U1401[0], 1194438308, 25000, 0, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1401[0], 1 );
        SET_BLOCKING_OF_PED_TARGETTING( l_U1401[0], 1 );
        sub_32473( ref l_U1401[0], ref g_U3107, 5.00000000, 10.00000000 );
        sub_32006( l_U1401[0], ref l_U1271 );
        SET_PED_ALERTNESS( l_U1401[0], 3 );
        SET_PED_COMBAT_ATTRIBUTES( l_U1401[0], 1, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1401[1] )))
    {
        sub_7777( l_U1401[1], 406496141, 25000, 1, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1401[1], 1 );
        SET_BLOCKING_OF_PED_TARGETTING( l_U1401[1], 1 );
        sub_32473( ref l_U1401[1], ref g_U3107, 4.00000000, 9.00000000 );
        sub_32006( l_U1401[1], ref l_U1271 );
        SET_PED_ALERTNESS( l_U1401[1], 3 );
        SET_PED_COMBAT_ATTRIBUTES( l_U1401[1], 1, 0 );
        SET_PED_AS_ONE_SHOT_KILL( l_U1401[1], 1 );
    }
    sub_239( "MF", "P_VIP_SETUP_REINFORCEMENTS_WAVE_2 - END", 0 );
    return;
}

void sub_32990(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^)[I] ))))
        {
            REGISTER_TARGET( (uParam0^)[I], uParam1 );
            if (iParam2 == 1)
            {
                CLEAR_LOCKED_TARGET( (uParam0^)[I] );
                SET_LOCKED_TARGET( (uParam0^)[I], uParam1 );
            }
        }
    }
    return;
}

void sub_33128(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam1^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam1^)[I] )))
        {
            sub_31571( uParam0, (uParam1^)[I], uParam2 );
        }
    }
    return;
}

void sub_33590()
{
    sub_239( "MF", "P_VIP_SETUP_REINFORCEMENTS_WAVE_3 - START", 0 );
    sub_32639( ref l_U1431, 0, 0 );
    sub_31024( ref l_U1431, "piVIP_CS_WAVE_3_" );
    sub_32990( ref l_U1431, sub_396(), 1 );
    if (NOT (IS_PED_DEAD( l_U1431[0] )))
    {
        sub_7777( l_U1431[0], 1194438308, 25000, 0, 0 );
        SET_PED_ALERTNESS( l_U1431[0], 3 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1431[0], 1 );
        sub_32473( ref l_U1431[0], ref g_U3099, 5.00000000, 20.00000000 );
        sub_32006( l_U1431[0], ref l_U1271 );
        SET_ROOM_FOR_PED_BY_NAME( l_U1431[0], ref g_U2520 );
        sub_31571( ref l_U1252, l_U1431[0], 1 );
        SET_PED_COMBAT_ATTRIBUTES( l_U1431[0], 1, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1431[1] )))
    {
        sub_7777( l_U1431[1], 1194438308, 25000, 0, 0 );
        SET_PED_ALERTNESS( l_U1431[1], 3 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1431[1], 1 );
        sub_32473( ref l_U1431[1], ref g_U3099, 4.00000000, 10.00000000 );
        sub_32006( l_U1431[1], ref l_U1271 );
        SET_ROOM_FOR_PED_BY_NAME( l_U1431[1], ref g_U2520 );
        sub_31571( ref l_U1252, l_U1431[1], 1 );
        SET_PED_COMBAT_ATTRIBUTES( l_U1431[1], 1, 0 );
    }
    sub_239( "MF", "P_VIP_SETUP_REINFORCEMENTS_WAVE_3 - END", 0 );
    return;
}

void sub_34118()
{
    sub_239( "MF", "P_VIP_VIG_03_A_SETUP_CIVS - START", 0 );
    sub_34203( ref l_U1748, "piVIP_VIG_03_A_CIV", "" );
    if (NOT (IS_PED_DEAD( l_U1748[3] )))
    {
        sub_34489( l_U1748[3], 5 );
        ADD_BLOOD_POOL( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U1748[3] ), 1.00000000, 4.00000000, 60.00000000 );
    }
    sub_239( "MF", "P_VIP_VIG_03_A_SETUP_CIVS - END", 0 );
    return;
}

void sub_34203(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    sub_31024( uParam0, uParam1 );
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            SET_PED_AS_ONE_SHOT_KILL( (uParam0^)[I], 1 );
            SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( (uParam0^)[I], 1 );
            SET_PED_DIES_WHEN_INJURED( (uParam0^)[I], 1 );
            SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^)[I], 0 );
            SET_PED_RELATIONSHIP( (uParam0^)[I], 0, 0 );
            if (NOT (IS_PED_DEAD( sub_396() )))
            {
                SET_PED_PRIMARY_LOOKAT( (uParam0^)[I], sub_396() );
            }
            SET_ROOM_FOR_PED_BY_NAME( (uParam0^)[I], uParam2 );
            if ((IS_GERMAN_VERSION() == 1) || (IS_JAPANESE_GAME() == 1))
            {
                SET_PED_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP( (uParam0^)[I], 0, 0 );
                SET_PED_GORE_FROM_PLAYER( (uParam0^)[I], 0 );
            }
        }
    }
    return;
}

void sub_34489(unknown uParam0, unknown uParam1)
{
    char[32] cVar4;
    char[32] cVar12;

    StrCopy( ref cVar4, "DAM_DEAD", 32 );
    switch (uParam1)
    {
        case 0:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
        case 1:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_02", 32 );
        break;
        case 2:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_03", 32 );
        break;
        case 3:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_01", 32 );
        break;
        case 4:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_02", 32 );
        break;
        case 5:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_03", 32 );
        break;
        case 6:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_04", 32 );
        break;
        case 7:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_01", 32 );
        break;
        case 8:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_02", 32 );
        break;
        case 9:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_03", 32 );
        break;
        case 10:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_04", 32 );
        break;
        case 11:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_01", 32 );
        break;
        case 12:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_02", 32 );
        break;
        case 13:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_03", 32 );
        break;
        case 14:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_04", 32 );
        break;
        case 15:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_01", 32 );
        break;
        case 16:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_02", 32 );
        break;
        default:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
    }
    REQUEST_ANIM_DICT( ref cVar4, 0 );
    "[doubled result, dropped if not asigned]";
    while (NOT (HAS_ANIM_DICT_LOADED( ref cVar4, 0 )))
    {
        WAIT( 0 );
        sub_5299( "Waiting for anim dict to load..." );
    }
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        ENABLE_PED_PAIN( uParam0, 0 );
        OVERRIDE_MOVER_PHYSICS_ON_RAGDOLL_SLEEP( uParam0, 1 );
        SET_PED_CORPSE_FROM_ANIM( uParam0, ref cVar4, ref cVar12, 1.00000000, 1 );
    }
    return;
}

void sub_35501()
{
    sub_239( "MF", "P_VIP_SETUP_EXTRA_CS - START", 0 );
    sub_31330( ref l_U1342 );
    sub_32639( ref l_U1342, 0, 0 );
    if (NOT (IS_PED_DEAD( l_U1342[0] )))
    {
        sub_7777( l_U1342[0], 1194438308, 25000, 0, 0 );
        sub_35628( ref l_U1342, l_U1250, 1 );
        SET_ROOM_FOR_PED_BY_NAME( l_U1342[0], ref g_U2512 );
        sub_32473( ref l_U1342[0], ref g_U3099, 4.00000000, 25.00000000 );
        sub_32990( ref l_U1342, sub_396(), 1 );
        SET_PED_ALERTNESS( l_U1342[0], 3 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1342[0], 1 );
    }
    sub_239( "MF", "P_VIP_SETUP_EXTRA_CS - END", 0 );
    return;
}

void sub_35628(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_31571( ref uParam1, (uParam0^)[I], uParam2 );
    }
    return;
}

int sub_35849()
{
    sub_483( 1 );
    return 1;
}

void sub_35874()
{
    sub_239( "MF", "P_VIP_MID_03_REGISTER - START", 0 );
    if (NOT (IS_PED_DEAD( sub_396() )))
    {
        CUTSCENE_REGISTER_PED_TELEPORT( sub_396(), g_U2216[2], g_U2331[2] );
        CUTSCENE_REGISTER_ISEQ( -506138981 );
        ISEQ_REGISTER_ENTITY( -506138981, "Max", sub_396(), 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1317[0] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1317[0], "G_CS_NCSM_B1", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U1317[0], l_U1277[0]._fU0, l_U1277[0]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U1317[0], "/Global/AMED/AMED_Root/AMED_INITIALIZE_IDLE" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U1317[0], 0, 0 ), "W_PI_38_Ba_H", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1317[1] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1317[1], "G_CS_NCSM_B1^2", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U1317[1], l_U1277[1]._fU0, l_U1277[0]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U1317[1], "/Global/AMED/AMED_Root/AMED_INITIALIZE_IDLE" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U1317[1], 0, 0 ), "W_PI_38_Ba_H^1", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1342[0] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1342[0], "G_CS_NCSM_C", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U1342[0], l_U1344[0]._fU0, l_U1344[0]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U1342[0], "/Global/AMED/AMED_Root/AMED_INITIALIZE_IDLE" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U1342[0], 0, 0 ), "W_PI_38_Ba_H^2", 0 );
    }
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U3150._fU0, g_U3150._fU4 ), "p_clb_door_int_ba", 0 );
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U3157._fU0, g_U3157._fU4 ), "p_clb_door_int_bb", 0 );
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U3115._fU0, g_U3115._fU4 ), "p_clb_door_int_ca", 0 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "Sero_Club", 590685641 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "G_CS_NCSM_B1^1", 360058256 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "G_CS_NCSM_C^1", 1541151150 );
    CAMERA_POINT_AT_COORD( 30.31000000, -66.99000000, -3.46000000, 2000 );
    sub_239( "MF", "P_VIP_MID_03_REGISTER - END", 0 );
    return;
}

void sub_36890()
{
    if (l_U2400._fU52 == 1)
    {
        if (NOT IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED())
        {
            sub_239( "MF", "Allowing bullet cam to gameplay", 0 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        }
        ENABLE_WALLA_ZONE( "S_CLUB_WZ_COAT_CHECK_CS", 0 );
        ENABLE_WALLA_ZONE( "S_CLUB_WZ_COAT_CHECK_HOSTAGES", 0 );
        ENABLE_AMBIENT_ZONE( "S_CLUB_ZONE_COAT_CHECK_GUNSHOTS", 0 );
        sub_19776( g_U2478, ref g_U1108 );
    }
    return;
}

int sub_37121()
{
    sub_239( "SA", "P_VIP_MID_03_POST", 0 );
    sub_32738( ref l_U1372 );
    return 1;
}

void sub_37180()
{
    sub_239( "MF", "P_VIP_MID_03_BLEND_OUT_PREPARE - START", 0 );
    if (NOT (ISEQ_QUERY_STATE( -506138981, 3 )))
    {
        sub_37294( g_U2216[2], g_U2331[2], g_U2370[2], g_U2409[2] );
        ISEQ_REGISTER_ENTITY( -506138981, "Max", sub_396(), 0 );
        ISEQ_START( -506138981 );
        CAMERA_POINT_AT_COORD( 30.31000000, -66.99000000, -3.46000000, 2000 );
    }
    CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_CP_02", "B_OUT_MID_03_NC_FWD_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
    ENABLE_STATIC_EMITTER( "S_CLUB_SE_DANCE_CLUB_DJ_BOOTH_GEAR", 1 );
    ENABLE_STATIC_EMITTER( "S_CLUB_SE_LOUNGE_MUSIC", 1 );
    sub_31330( ref l_U1317 );
    sub_37643();
    sub_38284();
    SMASH_GLASS_IN_RADIUS( 34.10000000, -61.92000000, 0.00000000, 0.01000000, 10.50000000 );
    sub_19776( -398091261, ref g_U1108 );
    sub_239( "MF", "P_VIP_MID_03_BLEND_OUT_PREPARE - END", 0 );
    return;
}

void sub_37294(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 = sub_396();
    sub_37320( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

void sub_37320(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_37643()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;

    if (NOT (IS_PED_DEAD( l_U1317[0] )))
    {
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_PAUSE( 0, 500 );
        if (NOT (IS_PED_DEAD( sub_396() )))
        {
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 35.03000000, -63.07000000, -2.02000000, sub_396(), 3, 0, 1056964608, 0, 1, 0 );
            TASK_SHOOT_AT_PED( 0, sub_396(), 2500, 0, 0, 0, 0 );
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        if (NOT (IS_PED_DEAD( sub_396() )))
        {
            TASK_COMBAT_PED( 0, sub_396() );
        }
        CLOSE_SEQUENCE_TASK( uVar2 );
        CLEAR_PED_TASKS( l_U1317[0] );
        TASK_PERFORM_SEQUENCE( l_U1317[0], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    if (NOT (IS_PED_DEAD( l_U1317[1] )))
    {
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_PAUSE( 0, 500 );
        if (NOT (IS_PED_DEAD( sub_396() )))
        {
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 34.94000000, -66.78000000, -1.99000000, sub_396(), 3, 0, 1056964608, 0, 1, 0 );
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        if (NOT (IS_PED_DEAD( sub_396() )))
        {
            TASK_COMBAT_PED( 0, sub_396() );
        }
        CLOSE_SEQUENCE_TASK( uVar3 );
        CLEAR_PED_TASKS( l_U1317[1] );
        TASK_PERFORM_SEQUENCE( l_U1317[1], uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    if (NOT (IS_PED_DEAD( l_U1317[2] )))
    {
        OPEN_SEQUENCE_TASK( ref uVar4 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (NOT (IS_PED_DEAD( sub_396() )))
        {
            if (NOT (IS_PED_DEAD( l_U1450[0] )))
            {
                TASK_AIM_GUN_AT_PED( 0, l_U1450[0], 800, 0 );
                TASK_SHOOT_AT_PED( 0, l_U1450[0], 800, 0, 1, 0, 0 );
            }
            TASK_AIM_GUN_AT_PED( 0, sub_396(), 1500, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0, sub_396() );
        }
        CLOSE_SEQUENCE_TASK( uVar4 );
        CLEAR_PED_TASKS( l_U1317[2] );
        TASK_PERFORM_SEQUENCE( l_U1317[2], uVar4 );
        CLEAR_SEQUENCE_TASK( uVar4 );
    }
    return;
}

void sub_38284()
{
    sub_239( "MF", "P_VIP_SETUP_CIVS - START", 0 );
    sub_31330( ref l_U1450 );
    sub_34203( ref l_U1450, "piVIP_CIVS", ref g_U2512 );
    SET_PED_PROOFS( l_U1450[0], 1, 0, 0, 0, 0 );
    sub_31330( ref l_U1479 );
    sub_34203( ref l_U1479, "piVIP_CoweringCivs", ref g_U2512 );
    sub_38459( l_U1479[0], l_U1452[0]._fU0, l_U1452[0]._fU12 );
    ISEQ_REGISTER_ENTITY( -671715858, "CIV_1", l_U1479[0], 0 );
    ISEQ_START( -671715858 );
    sub_38459( l_U1479[1], l_U1452[1]._fU0, l_U1452[1]._fU12 );
    ISEQ_REGISTER_ENTITY( -921546714, "CIV_2", l_U1479[1], 0 );
    ISEQ_START( -921546714 );
    sub_239( "MF", "P_VIP_SETUP_CIVS - END", 0 );
    return;
}

void sub_38459(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

int sub_38783()
{
    if (l_U2400._fU52 == 1)
    {
        sub_1426( ref l_U2427, 400, 1, 0 );
        sub_1560( ref l_U2427 );
        sub_38833( 0 );
        if (NOT sub_39235())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
    }
    if (sub_1678( ref l_U2427 ))
    {
        sub_39478();
    }
    if (NOT l_U2437)
    {
        if (CAMERA_ANIMATED_CURRENT_TIME() > ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_CLUB_CP_02", "B_OUT_MID_03_NC_FWD_CAM" )) - (l_U2436 + 300)))
        {
            CAMERA_ANIMATED_STOP( l_U2436, 1 );
            l_U2437 = 1;
        }
    }
    if (l_U2437 == 1)
    {
        if (sub_39757())
        {
            CAMERA_CLEAR_POINT_AT_TARGET();
            return 1;
        }
    }
    return 0;
}

void sub_38833(int iParam0)
{
    sub_239( "MF", "P_GBL_CREATE_CLAUDIO_BODY - START", 0 );
    if (iParam0 == 1)
    {
        sub_10973( ref g_U3516, 37.62621000, -60.02418000, -2.06252100, 151.00000000, -2069445361, 4, 1, 1, 0, 0 );
    }
    else
    {
        sub_38981( ref g_U3516, 37.75621000, -60.02418000, -2.06252100, 151.00000000, 1659147241, 4, 1, 1, 0, 0 );
    }
    sub_4358( g_U3515 );
    g_U3515 = sub_27347( ref g_U3516 );
    if (NOT (IS_PED_DEAD( g_U3515 )))
    {
        SET_PED_CORPSE_FROM_ANIM( g_U3515, "DAM_DEAD", "MED_DEAD_POSE_BACK_01", 1.00000000, 0 );
        FREEZE_PED_POSITION( g_U3515, 1 );
    }
    sub_239( "MF", "P_GBL_CREATE_CLAUDIO_BODY - END", 0 );
    return;
}

void sub_38981(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

int sub_39235()
{
    if (l_U34)
    {
        sub_239( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U34 = 0;
        return 1;
        break;
    }
    sub_239( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

void sub_39478()
{
    sub_239( "MF", "P_VIP_CIVS_ANIM - START", 0 );
    if (NOT (IS_PED_DEAD( l_U1450[0] )))
    {
        ISEQ_REGISTER_ENTITY( 816576289, "VIP_SHOT_CIV", l_U1450[0], 0 );
    }
    ISEQ_START( 816576289 );
    sub_239( "MF", "P_VIP_CIVS_ANIM - END", 0 );
    return;
}

int sub_39757()
{
    if (((ISEQ_QUERY_STATE( -506138981, 6 )) == 1) || ((ISEQ_QUERY_STATE( -506138981, 5 )) == 1))
    {
        return 1;
    }
    return 0;
}

void sub_39845(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_239( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return sub_39970( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 39930, 39948, uParam8 );
}

void sub_39930()
{
    return;
}

int sub_39948()
{
    return 1;
}

void sub_39970(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_40315(unknown uParam0, unknown uParam1)
{
    sub_1426( uParam0, uParam1, 1, 0 );
    sub_1560( uParam0 );
    return;
}

void sub_40416(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_239( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_239( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_239( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_239( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_239( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_239( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_41194( iParam0->_fU0, 0 );
            sub_239( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_41526( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_41526( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_239( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_42054( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_41526( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_42403( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_42403( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_41194(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_41526(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_396() )))
        {
            SET_PLAYER_CONTROL( sub_418(), 0, uParam2 );
            SET_PED_DUCKING( sub_396(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_396() );
            }
            SET_PED_INVINCIBLE( sub_396(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_42054(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_396() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_396(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_396(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_396(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_396(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_396(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_42403(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_396() )))
    {
        SET_PLAYER_CONTROL( sub_418(), 1, 0 );
        SET_PED_INVINCIBLE( sub_396(), 0 );
        if (bParam0)
        {
            sub_42484();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_42484()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_396() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_396(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_396(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_396(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_396(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_42891(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_239( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_239( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_8431( iParam1 );
        sub_43150( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_43601( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_43601( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_43833( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_43601( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_43833( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_43833( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_43601( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_43833( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_43833( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_43833( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_43601( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_43833( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_43833( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_43833( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_43833( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_45391( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_239( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_43150(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_5808( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_239( "TEH", "Ending context", 0 );
        sub_239( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_43601(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_43833(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_45391(int iParam0)
{
    sub_5299( "CHECKPOINT DATA" );
    sub_45430( iParam0->_fU4 );
    sub_45453( iParam0->_fU16 );
    sub_45453( iParam0->_fU20 );
    sub_45453( iParam0->_fU24 );
    sub_27120( iParam0->_fU28 );
    sub_27120( iParam0->_fU56 );
    sub_27120( iParam0->_fU60 );
    sub_27120( iParam0->_fU64 );
    sub_27120( iParam0->_fU68 );
    sub_27120( iParam0->_fU72 );
    sub_27120( iParam0->_fU76 );
    sub_27120( iParam0->_fU80 );
    sub_27120( iParam0->_fU84 );
    sub_27120( iParam0->_fU88 );
    sub_27120( iParam0->_fU92 );
    sub_45453( iParam0->_fU32 );
    sub_27120( iParam0->_fU36 );
    sub_27120( iParam0->_fU40 );
    sub_27120( iParam0->_fU44 );
    sub_45453( iParam0->_fU136 );
    sub_45688( iParam0->_fU140 );
    sub_27120( iParam0->_fU52 );
    sub_5299( "---nRightHolsterAttachmentEnabled: " );
    sub_27120( iParam0->_fU96 );
    sub_5299( "---nRightHolsterAttachmentToggled: " );
    sub_27120( iParam0->_fU100 );
    sub_5299( "---nLeftHolsterAttachmentEnabled: " );
    sub_27120( iParam0->_fU104 );
    sub_5299( "---nLeftHolsterAttachmentToggled: " );
    sub_27120( iParam0->_fU108 );
    sub_5299( "---nRifleHolsterAttachmentEnabled: " );
    sub_27120( iParam0->_fU112 );
    sub_5299( "---nRifleHolsterAttachmentToggled: " );
    sub_27120( iParam0->_fU116 );
    sub_5299( "---nRightHandAttachmentEnabled: " );
    sub_27120( iParam0->_fU120 );
    sub_5299( "---nRightHandAttachmentToggled: " );
    sub_27120( iParam0->_fU124 );
    sub_5299( "---nLeftHandAttachmentEnabled: " );
    sub_27120( iParam0->_fU128 );
    sub_5299( "---nLeftHandAttachmentToggled: " );
    sub_27120( iParam0->_fU132 );
    sub_27120( l_U1 );
    sub_27120( 144 );
    return;
}

void sub_45430(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_45453(unknown uParam0)
{
    return;
}

void sub_45688(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_46516()
{
    sub_239( "MF", "P_VIP_VIG_03_B_START - START", 0 );
    ISEQ_REGISTER_ENTITY( -1700261605, "CS1", l_U1401[0], 0 );
    ISEQ_REGISTER_ENTITY( -1700261605, "CS2", l_U1401[1], 0 );
    ISEQ_REGISTER_ENTITY( -1700261605, "GMED1", l_U1748[0], 0 );
    ISEQ_REGISTER_ENTITY( -1700261605, "FLGE1", l_U1748[1], 0 );
    ISEQ_REGISTER_ENTITY( -1700261605, "FLGE2", l_U1748[2], 0 );
    ISEQ_START( -1700261605 );
    sub_239( "MF", "P_VIP_VIG_03_B_START - END", 0 );
    return;
}

void sub_46774()
{
    sub_239( "MF", "P_VIP_VIG_03_B_START - START", 0 );
    sub_31330( ref l_U1431 );
    if (NOT (IS_PED_DEAD( l_U1431[0] )))
    {
        FREEZE_PED_POSITION( l_U1431[0], 0 );
        ISEQ_REGISTER_ENTITY( -1404259228, "GMED2", l_U1431[0], 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1431[1] )))
    {
        FREEZE_PED_POSITION( l_U1431[1], 0 );
        ISEQ_REGISTER_ENTITY( -1404259228, "GMED3", l_U1431[1], 0 );
    }
    ISEQ_START( -1404259228 );
    sub_239( "MF", "P_VIP_VIG_03_B_START - END", 0 );
    return;
}

void sub_47099()
{
    sub_47135( ref g_U2617[0], 58, 1069547520, 1101004800, 0, -1082130432 );
    sub_47135( ref g_U2619[0], 58, 1069547520, 1101004800, 0, -1082130432 );
    sub_47135( ref g_U2621[0], 58, 1069547520, 1101004800, 0, -1082130432 );
    sub_47135( ref g_U2633[0], 58, 1069547520, 1101004800, 0, -1082130432 );
    sub_47135( ref g_U2633[1], 58, 1069547520, 1101004800, 0, -1082130432 );
    sub_47135( ref g_U2633[2], 58, 1069547520, 1101004800, 0, -1082130432 );
    sub_47135( ref g_U2628[0], 58, 1069547520, 1101004800, 0, -1082130432 );
    sub_47135( ref g_U2628[1], 58, 1069547520, 1101004800, 0, -1082130432 );
    sub_47135( ref g_U2625[0], 58, 1069547520, 1101004800, 0, -1082130432 );
    sub_47135( ref g_U2625[1], 58, 1069547520, 1101004800, 0, -1082130432 );
    sub_47135( ref g_U2623[0], 58, 1069547520, 1101004800, 0, -1082130432 );
    sub_47135( ref l_U1479[0], 58, 1069547520, 1101004800, 0, -1082130432 );
    sub_47135( ref l_U1479[1], 58, 1069547520, 1101004800, 0, -1082130432 );
    return;
}

void sub_47135(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        if (IS_PED_IN_CROSSHAIR_CYLINDER( (uParam0^), uParam2, uParam3, uParam4, uParam5 ))
        {
            if (IS_CONTROL_PRESSED( 0, 6 ))
            {
                if (NOT ((sub_47203( (uParam0^), uParam1 )) == 3))
                {
                    sub_47269( (uParam0^), uParam1, 9999999 );
                }
            }
            else
            {
                sub_47330( uParam0, uParam1 );
            }
        }
        else
        {
            sub_47330( uParam0, uParam1 );
        }
    }
    return;
}

int sub_47203(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 );
    }
    return 0;
}

void sub_47269(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_SET_ACTION_INTENTION( uParam0, uParam1, uParam2, g_U665 );
    }
    return;
}

void sub_47330(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

void sub_48043(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_10317( sub_396(), uParam0 );
}

void sub_48080()
{
    unknown uVar2;

    sub_239( "MF", "P_VIP_EXTRA_CS_ATTACK - START", 0 );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
    TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 35.03000000, -62.20000000, -2.02000000, sub_396(), 3, 1, 1056964608, 0, 1, 0 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_COMBAT_PED( 0, sub_396() );
    CLOSE_SEQUENCE_TASK( uVar2 );
    if (NOT (IS_PED_DEAD( l_U1342[0] )))
    {
        TASK_PERFORM_SEQUENCE( l_U1342[0], uVar2 );
    }
    CLEAR_SEQUENCE_TASK( uVar2 );
    sub_239( "MF", "P_VIP_EXTRA_CS_ATTACK - END", 0 );
    return;
}

int sub_48361(unknown uParam0, boolean bParam1)
{
    if ((sub_9878( uParam0, 0 )) == 1)
    {
        if (NOT bParam1)
        {
            if ((sub_10000( uParam0 )) == 0)
            {
                return 1;
            }
        }
        if (bParam1)
        {
            if ((sub_48421( uParam0 )) == (uParam0^))
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_48421(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

void sub_48619(unknown uParam0, unknown uParam1)
{
    sub_48631( uParam1 );
    sub_48711( 0, sub_396(), "MAX", uParam1, 2, 0 );
    sub_48711( 1, sub_396(), "MAX", uParam1, 2, 0 );
    sub_48936( uParam0, uParam1, 8, 1 );
    return;
}

void sub_48631(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_48711(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_48936(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_48960( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_48960(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_49015( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_49015(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_49050( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_49544( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_49050(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_49544(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_49729(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_10317( sub_396(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_49858()
{
    unknown uVar2;

    sub_239( "MF", "P_VIP_SETUP_REINFORCEMENTS_WAVE_1 - START", 0 );
    sub_31330( ref l_U1372 );
    if ((NOT (IS_PED_DEAD( sub_396() ))) AND (NOT (IS_PED_DEAD( l_U1372[0] ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, 42.07217000, -53.42815000, -0.63355100, 3, 20000, 0.25000000, 1, 0 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, 41.48053000, -53.51945000, -1.03361700, 3, 20000, 0.25000000, 1, 0 );
        TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 40.43137000, -55.76455000, -2.05216900, sub_396(), 3, 1, 1056964608, 0, 1, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0, sub_396() );
        CLOSE_SEQUENCE_TASK( uVar2 );
        SET_PED_ALERTNESS( l_U1372[0], 3 );
        CLEAR_PED_TASKS( l_U1372[0] );
        REGISTER_TARGET( l_U1372[0], sub_396() );
        TASK_PERFORM_SEQUENCE( l_U1372[0], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    sub_31571( ref l_U1245[0], l_U1372[0], 1 );
    sub_31571( ref l_U1245[2], l_U1372[0], 1 );
    sub_31571( ref l_U1245[3], l_U1372[0], 1 );
    sub_239( "MF", "P_VIP_SETUP_REINFORCEMENTS_WAVE_1 - END", 0 );
    return;
}

void sub_50971()
{
    int I;

    sub_239( "MF", "P_VIP_FIRST_CS_REMOVE_TETHERS - START", 0 );
    sub_51036( ref l_U1317 );
    sub_51036( ref l_U1342 );
    for ( I = 0; I < l_U1245; I++ )
    {
        sub_35628( ref l_U1317, l_U1245[I], 1 );
        sub_35628( ref l_U1342, l_U1245[I], 1 );
    }
    if (NOT (IS_PED_DEAD( l_U1317[0] )))
    {
        SET_PED_COMBAT_RANGE_MAX( l_U1317[0], 15.00000000 );
    }
    if (NOT (IS_PED_DEAD( l_U1317[1] )))
    {
        SET_PED_COMBAT_RANGE_MAX( l_U1317[1], 8.00000000 );
    }
    sub_239( "MF", "P_VIP_FIRST_CS_REMOVE_TETHERS - END", 0 );
    return;
}

void sub_51036(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_51067( (uParam0^)[I] );
    }
    return;
}

void sub_51067(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        RESET_PED_TETHERING( uParam0 );
    }
    return;
}

void sub_51369()
{
    unknown uVar2;
    unknown uVar3;

    sub_239( "MF", "P_VIP_REINFORCEMENTS_WAVE_2_ATTACK - START", 0 );
    sub_31330( ref l_U1401 );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    TASK_AIM_GUN_AT_PED( 0, sub_396(), 500, 0 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_SET_BLOCKING_OF_PED_TARGETTING( 0, 0 );
    TASK_COMBAT_PED( 0, sub_396() );
    CLOSE_SEQUENCE_TASK( uVar2 );
    if ((NOT (IS_PED_DEAD( sub_396() ))) AND (NOT (IS_PED_DEAD( l_U1401[0] ))))
    {
        SET_PED_ALERTNESS( l_U1401[0], 3 );
        REGISTER_TARGET( l_U1401[0], sub_396() );
        TASK_PERFORM_SEQUENCE( l_U1401[0], uVar2 );
    }
    CLEAR_SEQUENCE_TASK( uVar2 );
    OPEN_SEQUENCE_TASK( ref uVar3 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_SET_BLOCKING_OF_PED_TARGETTING( 0, 0 );
    CLOSE_SEQUENCE_TASK( uVar3 );
    if ((NOT (IS_PED_DEAD( sub_396() ))) AND (NOT (IS_PED_DEAD( l_U1401[1] ))))
    {
        SET_PED_ALERTNESS( l_U1401[1], 3 );
        REGISTER_TARGET( l_U1401[1], sub_396() );
        TASK_PERFORM_SEQUENCE( l_U1401[1], uVar3 );
    }
    CLEAR_SEQUENCE_TASK( uVar3 );
    sub_239( "MF", "P_VIP_REINFORCEMENTS_WAVE_2_ATTACK - END", 0 );
    return;
}

int sub_51909()
{
    if (NOT (IS_PED_DEAD( l_U1401[1] )))
    {
        if (IS_PED_ON_SCREEN( l_U1401[1], 1 ))
        {
            return 1;
        }
    }
    return 0;
}

void sub_52031()
{
    sub_239( "SA", "P_VIP_VIG_03_A_BODY_SEARCHER_START - START", 0 );
    sub_47269( l_U1401[1], 47, 1000 );
    sub_239( "SA", "P_VIP_VIG_03_A_BODY_SEARCHER_START - END", 0 );
    return;
}

int sub_52195()
{
    int I;

    if (NOT (IS_PED_DEAD( l_U1401[0] )))
    {
        if (IS_PED_ON_SCREEN( l_U1401[0], 1 ))
        {
            return 1;
        }
    }
    for ( I = 0; I < l_U1748; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U1748[I] )))
        {
            if (IS_PED_ON_SCREEN( l_U1748[I], 1 ))
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_52357()
{
    int I;

    sub_239( "SA", "P_VIP_VIG_03_A_CIVS_START - START", 0 );
    sub_47269( l_U1401[0], 47, 1000 );
    for ( I = 0; I < l_U1748; I++ )
    {
        sub_47269( l_U1748[I], 47, 1000 );
    }
    sub_239( "SA", "P_VIP_VIG_03_A_CIVS_START - END", 0 );
    return;
}

void sub_52549()
{
    int I;

    for ( I = 0; I < l_U1748; I++ )
    {
        if (sub_52589( ref l_U1756, l_U1748[I], 0 ))
        {
            sub_4358( l_U1748[I] );
        }
    }
    return;
}

void sub_52589(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int I;
    int J;

    Result = 0;
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        for ( I = 0; I < iParam0->_fU508; I++ )
        {
            if (sub_10317( uParam1, iParam0->_fU0[I] ))
            {
                Result = 1;
            }
        }
    }
    if ((uParam2) AND (Result))
    {
        for ( J = 0; J < iParam0->_fU508; J++ )
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( ref iParam0->_fU0[J]._fU0, 0 );
        }
    }
    iParam0->_fU552 = 1;
    return Result;
}

void sub_52835(unknown uParam0)
{
    sub_52880( "MAL_RemoveAllGunsFromPed started" );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        sub_52880( "MAL_RemoveAllGunsFromPed WEAPONHAND_LEFT" );
        sub_27120( GET_WEAPON_FROM_HAND( (uParam0^), 1, 0 ) );
        if ((GET_WEAPON_FROM_HAND( (uParam0^), 1, 0 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HAND( (uParam0^), 1, 0 ) );
        }
        sub_27120( GET_WEAPON_FROM_HAND( (uParam0^), 1, 0 ) );
        sub_52880( "MAL_RemoveAllGunsFromPed WEAPONHAND_RIGHT" );
        sub_27120( GET_WEAPON_FROM_HAND( (uParam0^), 0, 0 ) );
        if ((GET_WEAPON_FROM_HAND( (uParam0^), 0, 0 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HAND( (uParam0^), 0, 0 ) );
        }
        sub_27120( GET_WEAPON_FROM_HAND( (uParam0^), 0, 0 ) );
        sub_52880( "MAL_RemoveAllGunsFromPed WEAPONHOLSTER_PISTOL_LEFT" );
        sub_27120( GET_WEAPON_FROM_HOLSTER( (uParam0^), 1 ) );
        if ((GET_WEAPON_FROM_HOLSTER( (uParam0^), 1 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HOLSTER( (uParam0^), 1 ) );
        }
        sub_27120( GET_WEAPON_FROM_HOLSTER( (uParam0^), 1 ) );
        sub_52880( "MAL_RemoveAllGunsFromPed WEAPONHOLSTER_PISTOL_RIGHT" );
        sub_27120( GET_WEAPON_FROM_HOLSTER( (uParam0^), 0 ) );
        if ((GET_WEAPON_FROM_HOLSTER( (uParam0^), 0 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HOLSTER( (uParam0^), 0 ) );
        }
        sub_27120( GET_WEAPON_FROM_HOLSTER( (uParam0^), 0 ) );
        sub_52880( "MAL_RemoveAllGunsFromPed WEAPONHOLSTER_RIFLE" );
        sub_27120( GET_WEAPON_FROM_HOLSTER( (uParam0^), 2 ) );
        if ((GET_WEAPON_FROM_HOLSTER( (uParam0^), 2 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HOLSTER( (uParam0^), 2 ) );
        }
        sub_27120( GET_WEAPON_FROM_HOLSTER( (uParam0^), 2 ) );
    }
    sub_52880( "MAL_RemoveAllGunsFromPed ended" );
    return;
}

void sub_52880(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    return;
}

void sub_53616(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    unknown Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                sub_52880( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

int sub_53844()
{
    if (IS_SPHERE_VISIBLE( 46.63000000, -42.75000000, 1.48000000, 1.50000000, 1 ))
    {
        sub_239( "MF", "Peds are on screen", 0 );
        return 1;
    }
    return 0;
}

void sub_53995()
{
    int I;

    sub_239( "SA", "P_VIP_VIG_03_B_START - START", 0 );
    for ( I = 0; I < l_U1919; I++ )
    {
        sub_54071( ref l_U1919[I] );
    }
    for ( I = 0; I < l_U2133; I++ )
    {
        sub_54071( ref l_U2133[I] );
    }
    for ( I = 0; I < l_U1431; I++ )
    {
        sub_47269( l_U1431[I], 47, 1000 );
    }
    sub_54456( ref l_U1919 );
    sub_54456( ref l_U2133 );
    sub_239( "SA", "P_VIP_VIG_03_B_START - END", 0 );
    return;
}

int sub_54071(int iParam0)
{
    if (iParam0->_fU48 == 1)
    {
        iParam0->_fU24 = CREATE_SIMPLE_PED( iParam0->_fU0, iParam0->_fU8, iParam0->_fU20, iParam0->_fU4 );
        return 1;
        break;
    }
    SCRIPT_ASSERT( "SIMPLE PED STRUCT NOT INITIALIZED! Can Not Create Simple Ped From Unititialized Struct.", 0 );
    sub_239( "MF", "ERROR: SIMPLE PED STRUCT NOT INITIALIZED! Can Not Create Simple Ped From Unititialized Struct.", 0 );
    return 0;
}

int sub_54456(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_54493( ref (uParam0^)[I], "", "", 0 );
    }
    return 1;
}

int sub_54493(int iParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    unknown uVar6;
    unknown uVar7;

    if (NOT (IS_STRING_NULL( uParam1 )))
    {
        uVar6 = uParam1;
    }
    else
    {
        uVar6 = iParam0->_fU28;
    }
    if (NOT (IS_STRING_NULL( uParam2 )))
    {
        uVar7 = uParam2;
    }
    else
    {
        uVar7 = iParam0->_fU32;
    }
    if (iParam0->_fU48 == 1)
    {
        PLAY_SIMPLE_PED_ANIM( iParam0->_fU24, uVar7, uVar6, iParam0->_fU36, iParam0->_fU40, iParam0->_fU44 );
        SET_OBJECT_ANIM_CURRENT_TIME( iParam0->_fU24, iParam0->_fU32, iParam0->_fU28, iParam0->_fU36 );
        return 1;
        break;
    }
    if (iParam3 == 1)
    {
        SCRIPT_ASSERT( "SIMPLE PED STRUCT NOT INITIALIZED! Can Not Play Anim From Unititialized Struct.", 0 );
    }
    sub_239( "MF", "SIMPLE PED STRUCT NOT INITIALIZED! Can Not Play Anim From Unititialized Struct.", 0 );
    return 0;
}

void sub_54981()
{
    int I;

    sub_239( "MF", "P_VIP_VIG_03_C_A_START - START", 0 );
    for ( I = 0; I < l_U1980; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U1980[I] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U1980[I], ref g_U2528 );
        }
    }
    sub_55112( ref l_U1980, ref l_U1983 );
    for ( I = 0; I < l_U2010; I++ )
    {
        sub_54071( ref l_U2010[I] );
    }
    ISEQ_REGISTER_ENTITY( -2129777527, "CIV3", l_U1980[0], 0 );
    ISEQ_REGISTER_ENTITY( -2129777527, "CIV5", l_U1980[1], 0 );
    ISEQ_START( -2129777527 );
    sub_54456( ref l_U2010 );
    sub_239( "MF", "P_VIP_VIG_03_C_A_START - END", 0 );
    return;
}

void sub_55112(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_37320( (uParam0^)[I], (uParam1^)[I]._fU0, (uParam1^)[I]._fU12 );
    }
    return;
}

void sub_55394()
{
    int I;

    sub_239( "MF", "P_VIP_VIG_03_C_B_START - START", 0 );
    for ( I = 0; I < l_U2063; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U2063[I] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U2063[I], ref g_U2520 );
        }
    }
    for ( I = 0; I < l_U2093; I++ )
    {
        sub_54071( ref l_U2093[I] );
    }
    sub_55112( ref l_U2063, ref l_U2066 );
    ISEQ_REGISTER_ENTITY( 1875151350, "CIV4", l_U2063[0], 0 );
    ISEQ_REGISTER_ENTITY( 1875151350, "CIV5", l_U2063[1], 0 );
    ISEQ_START( 1875151350 );
    sub_54456( ref l_U2093 );
    sub_239( "MF", "P_VIP_VIG_03_C_B_START - END", 0 );
    return;
}

void sub_55803()
{
    sub_239( "MF", "P_VIP_VIG_03_B_PT_2_SETUP - START", 0 );
    sub_38459( l_U1431[0], 28.16200000, -33.25900000, 0.79300000, -90.00000000 );
    sub_38459( l_U1431[1], 28.66300000, -33.71000000, 0.79300000, -90.00000000 );
    if (NOT (IS_PED_DEAD( l_U1431[0] )))
    {
        ISEQ_REGISTER_ENTITY( -1746599655, "GMED2", l_U1431[0], 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1431[1] )))
    {
        ISEQ_REGISTER_ENTITY( -1746599655, "GMED3", l_U1431[1], 0 );
    }
    ISEQ_START( -1746599655 );
    sub_239( "MF", "P_VIP_VIG_03_B_PT_2_SETUP - END", 0 );
    return;
}

void sub_56097()
{
    unknown uVar2;
    unknown uVar3;

    sub_239( "MF", "P_VIP_REINFORCEMENT_WAVE_3_ATTACK - START", 0 );
    sub_31330( ref l_U1431 );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, 32.15819000, -32.21772000, 0.80936600, sub_396(), 1, 1092616192, 1101004800, -1082130432, 3 );
    TASK_COMBAT_PED( 0, sub_396() );
    CLOSE_SEQUENCE_TASK( uVar2 );
    if ((NOT (IS_PED_DEAD( sub_396() ))) AND (NOT (IS_PED_DEAD( l_U1431[0] ))))
    {
        REGISTER_TARGET( l_U1431[0], sub_396() );
        TASK_PERFORM_SEQUENCE( l_U1431[0], uVar2 );
    }
    CLEAR_SEQUENCE_TASK( uVar2 );
    OPEN_SEQUENCE_TASK( ref uVar3 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, 34.49000000, -34.35000000, -0.10000000, sub_396(), 1, 1092616192, 1101004800, -1082130432, 3 );
    TASK_COMBAT_PED( 0, sub_396() );
    CLOSE_SEQUENCE_TASK( uVar3 );
    if ((NOT (IS_PED_DEAD( sub_396() ))) AND (NOT (IS_PED_DEAD( l_U1431[1] ))))
    {
        REGISTER_TARGET( l_U1431[1], sub_396() );
        TASK_PERFORM_SEQUENCE( l_U1431[1], uVar3 );
    }
    CLEAR_SEQUENCE_TASK( uVar3 );
    sub_33128( ref l_U1252, ref l_U1431, 1 );
    sub_239( "MF", "P_VIP_REINFORCEMENT_WAVE_3_ATTACK - END", 0 );
    return;
}

void sub_56606()
{
    int I;

    for ( I = 0; I < l_U1431; I++ )
    {
        if ((NOT (IS_PED_ON_SCREEN( l_U1431[I], 1 ))) AND (sub_10317( l_U1431[I], l_U1039 )))
        {
            sub_4358( l_U1431[I] );
        }
    }
    return;
}

int sub_56720()
{
    if (((sub_10000( ref l_U1372 )) > 0) || ((NOT (sub_48361( ref l_U1342, 0 ))) || (NOT (sub_48361( ref l_U1317, 0 )))))
    {
        return 0;
    }
    if ((NOT l_U976._fU64) AND (l_U955._fU64))
    {
        if ((NOT (sub_48361( ref l_U1431, 0 ))) || (NOT (sub_48361( ref l_U1401, 0 ))))
        {
            return 0;
        }
    }
    return 1;
}

void sub_56849(int iParam0)
{
    return iParam0->_fU56;
}

int sub_56983(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_396() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_396() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_10317( sub_396(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_10317( sub_396(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_18931( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_18992( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_57865() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_57942( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_18338( iParam0, 0 );
                            sub_58013( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_18338( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_396() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_396(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_18338( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_58013( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_396() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_396(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_396() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_396(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_396() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_396(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_18338( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_58013( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_396() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_396() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_396() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_396(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_58013( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

int sub_57865()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

void sub_57942(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_18338( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_18338( iParam0, 0 );
        sub_58013( iParam0, 0 );
        if ((IS_PED_DEAD( sub_396() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_396() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_396(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_58013(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_18931( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

int sub_59346(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND ((sub_56849( iParam0 )) == 0)))
    {
        if ((sub_57865() == 1) AND (((IS_PED_RELOADING( sub_396() )) == 0) AND (((IS_PED_GETTING_UP( sub_396() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP( sub_396() )) == 0) AND (((IS_PED_IN_COVER( sub_396() )) == 0) AND (((IS_PED_DUCKING( sub_396() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_59720(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 = sub_396();
    sub_38459( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

int sub_59987()
{
    if (GET_PAYNEKILLER_AMT() > g_U3539)
    {
        sub_239( "MF", "Player picked up Payne Killers!", 0 );
        sub_27120( g_U3539 );
        sub_27120( GET_PAYNEKILLER_AMT() );
        g_U3539 = GET_PAYNEKILLER_AMT();
        return 1;
    }
    g_U3539 = GET_PAYNEKILLER_AMT();
    return 0;
}

void sub_60297(int iParam0, int iParam1)
{
    if ((sub_30198( iParam0 )) == 0)
    {
        sub_30264( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

void sub_60462(int iParam0, unknown uParam1)
{
    int Result;
    int I;
    int J;

    Result = 0;
    if (NOT (IS_PED_DEAD( sub_396() )))
    {
        for ( I = 0; I < iParam0->_fU508; I++ )
        {
            if (sub_48043( iParam0->_fU0[I] ))
            {
                Result = 1;
            }
        }
    }
    if ((uParam1) AND (Result))
    {
        for ( J = 0; J < iParam0->_fU508; J++ )
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( ref iParam0->_fU0[J]._fU0, 0 );
        }
    }
    iParam0->_fU548 = 1;
    return Result;
}

void sub_60629(int iParam0)
{
    int iVar3;
    float Result;

    if ((sub_30198( iParam0 )) == 0)
    {
        sub_30264( iParam0 );
    }
    iVar3 = 0;
    Result = 0.00000000;
    GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar3, ref Result );
    return Result;
}

void sub_60802(int iParam0, unknown uParam1, unknown uParam2)
{
    if ((sub_30198( iParam0 )) == 0)
    {
        sub_30264( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_FORCE_CLOSE( iParam0->_fU0, iParam0->_fU4, uParam1, uParam2 );
    return;
}

void sub_60900(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_61131(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

void sub_61159()
{
    sub_239( "MF", "P_CLEANUP_MPM - START", 0 );
    sub_60900( -1592279399, 0 );
    sub_60900( -74541949, 0 );
    sub_60900( 1565939729, 0 );
    sub_60900( -456021312, 0 );
    sub_60900( -1839811754, 0 );
    sub_60900( -1830975032, 0 );
    sub_60900( -1577441179, 0 );
    sub_60900( -1957067951, 1 );
    sub_4358( g_U2616 );
    sub_4358( g_U3515 );
    sub_4436( ref g_U2637 );
    sub_4436( ref g_U2617 );
    sub_4436( ref g_U2619 );
    sub_4436( ref g_U2621 );
    sub_4436( ref g_U2633 );
    sub_4436( ref g_U2625 );
    sub_4436( ref g_U2628 );
    sub_4436( ref g_U2623 );
    sub_4436( ref g_U2631 );
    sub_239( "MF", "P_CLEANUP_MPM - END", 0 );
    return;
}

void sub_61479(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_3331( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

void sub_61702(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

int sub_62692()
{
    sub_239( "SP", "F_WHERE_DID_MAX_FAIL", 0 );
    if (((sub_48043( l_U419 )) == 1) || (((sub_48043( l_U398 )) == 1) || (((sub_48043( l_U377 )) == 1) || ((sub_48043( l_U356 )) == 1))))
    {
        return 1;
    }
    else if (((sub_48043( l_U461 )) == 1) || ((sub_48043( l_U440 )) == 1))
    {
        return 2;
    }
    else if (((sub_48043( l_U503 )) == 1) || ((sub_48043( l_U482 )) == 1))
    {
        return 3;
    }
    else if (((sub_48043( l_U545 )) == 1) || ((sub_48043( l_U524 )) == 1))
    {
        return 4;
    }
    else if (((sub_48043( l_U587 )) == 1) || ((sub_48043( l_U566 )) == 1))
    {
        return 5;
    }
    else if (((sub_48043( l_U629 )) == 1) || ((sub_48043( l_U608 )) == 1))
    {
        return 6;
    }
    else if (((sub_48043( l_U671 )) == 1) || ((sub_48043( l_U650 )) == 1))
    {
        return 7;
    }
    else if ((sub_48043( l_U692 )) == 1)
    {
        return 8;
    }
    else if (((sub_48043( l_U734 )) == 1) || ((sub_48043( l_U713 )) == 1))
    {
        return 9;
    }
    else if (((sub_48043( l_U776 )) == 1) || ((sub_48043( l_U755 )) == 1))
    {
        return 10;
    };;;;;;;;;;
    return 0;
}

int sub_63817()
{
    int I;

    for ( I = 0; I < l_U1401; I++ )
    {
        if (sub_10317( l_U1401[I], l_U1959 ))
        {
            return 1;
        }
    }
    for ( I = 0; I < l_U1431; I++ )
    {
        if (sub_10317( l_U1431[I], l_U1959 ))
        {
            return 1;
        }
    }
    return 0;
}

int sub_64113()
{
    vector vVar2;
    float fVar5;

    vVar2 = {27.34800000, -64.20100000, -4.61900000};
    fVar5 = -45.00000000;
    switch (l_U37)
    {
        case 0: break;
        case 2:
        sub_239( "SP", "eMid02Fail2State = MIDSCENE_SETUP", 0 );
        sub_41526( 1, 0, 0, 1 );
        DO_SCREEN_FADE_OUT( 500 );
        l_U37 = 1;
        sub_239( "SP", "eMid02Fail2State = MIDSCENE_FIRST_FRAME", 0 );
        break;
        case 1:
        if (IS_SCREEN_FADED_OUT())
        {
            sub_38459( sub_396(), vVar2, fVar5 );
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_396(), 1, 0 ) )) AND (NOT (IS_PED_DEAD( sub_396() ))))
            {
                REMOVE_PED_WEAPON( sub_396(), GET_WEAPON_FROM_HAND( sub_396(), 1, 0 ) );
            }
            ISEQ_REGISTER_ENTITY( -2074831912, "player", sub_396(), 0 );
            ISEQ_START( -2074831912 );
            l_U37 = 3;
        }
        break;
        case 3:
        sub_239( "SP", "eMid02Fail2State = MIDSCENE_FIRST_FRAME", 0 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_FAIL", "MID_02_NC_FAIL_DANCEFLOOR1_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        DO_SCREEN_FADE_IN( 500 );
        sub_64636();
        l_U37 = 4;
        sub_239( "SP", "eMid02Fail2State = MIDSCENE_PLAYING", 0 );
        break;
        case 4:
        if (NOT (sub_1322( ref l_U797 )))
        {
            if (NOT sub_64925())
            {
                sub_239( "MF", "Max is finished talking, starting fade delay timer...", 0 );
                sub_1426( ref l_U797, 800, 1, 0 );
                sub_1560( ref l_U797 );
            }
        }
        if ((CAMERA_ANIMATED_CURRENT_TIME() > ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_CLUB_FAIL", "MID_02_NC_FAIL_DANCEFLOOR1_CAM" )) - 30)) || (sub_1678( ref l_U797 )))
        {
            sub_65194( "MISS_DEATH_FAIL_FAST_01A", 0 );
            l_U37 = 5;
            sub_239( "SP", "eMid02Fail2State = MIDSCENE_END_FADE", 0 );
        }
        break;
        case 5:
        CAMERA_ANIMATED_STOP( 3000, 0 );
        ISEQ_UNREGISTER_ENTITY( -2074831912, "player" );
        ISEQ_TERMINATE( -2074831912 );
        l_U37 = 0;
        sub_239( "SP", "eMid02Fail2State = MIDSCENE_IDLE", 0 );
        return 1;
        break;
    }
    return 0;
}

void sub_64636()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;
    string sVar13;

    sub_239( "MF", "P_FAIL_PLAY_SOLO_MONOLOGUE - START", 0 );
    iVar12 = GET_RANDOM_INT_IN_RANGE( 0, 3 );
    if (iVar12 == 0)
    {
        sVar13 = "SCLB_MID02A";
    }
    else if (iVar12 == 1)
    {
        sVar13 = "SCLB_MID02D";
    }
    else
    {
        sVar13 = "SCLB_MID02G";
    }
    sub_48619( sVar13, ref uVar2 );
    sub_239( "MF", "P_FAIL_PLAY_SOLO_MONOLOGUE - END", 0 );
    return;
}

void sub_64925()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

void sub_65194(unknown uParam0, boolean bParam1)
{
    sub_2900( ref l_U35 );
    l_U35 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
    SETUP_BULLET_CAMERA_SCENE( l_U35, uParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
    if (bParam1)
    {
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    }
    return;
}

int sub_65629()
{
    vector vVar2;
    float fVar5;

    vVar2 = {28.24600000, -46.06000000, -1.59500000};
    fVar5 = -45.00000000;
    switch (l_U38)
    {
        case 0: break;
        case 2:
        sub_239( "SP", "eMid02Fail3State = MIDSCENE_SETUP", 0 );
        sub_41526( 1, 0, 0, 1 );
        DO_SCREEN_FADE_OUT( 500 );
        l_U38 = 1;
        sub_239( "SP", "eMid02Fail3State = MIDSCENE_START_FADE", 0 );
        break;
        case 1:
        if (IS_SCREEN_FADED_OUT())
        {
            sub_38459( sub_396(), vVar2, fVar5 );
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_396(), 1, 0 ) )) AND (NOT (IS_PED_DEAD( sub_396() ))))
            {
                REMOVE_PED_WEAPON( sub_396(), GET_WEAPON_FROM_HAND( sub_396(), 1, 0 ) );
            }
            ISEQ_REGISTER_ENTITY( -1239976099, "player", sub_396(), 0 );
            ISEQ_START( -1239976099 );
            l_U38 = 3;
        }
        break;
        case 3:
        sub_239( "SP", "eMid02Fail3State = MIDSCENE_FIRST_FRAME", 0 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_FAIL", "MID_02_NC_FAIL_DANCEFLOOR2_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        DO_SCREEN_FADE_IN( 500 );
        sub_64636();
        l_U38 = 4;
        sub_239( "SP", "eMid02Fail3State = MIDSCENE_PLAYING", 0 );
        break;
        case 4:
        if (NOT (sub_1322( ref l_U797 )))
        {
            if (NOT sub_64925())
            {
                sub_239( "MF", "Max is finished talking, starting fade delay timer...", 0 );
                sub_1426( ref l_U797, 800, 1, 0 );
                sub_1560( ref l_U797 );
            }
        }
        if ((CAMERA_ANIMATED_CURRENT_TIME() > ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_CLUB_FAIL", "MID_02_NC_FAIL_DANCEFLOOR2_CAM" )) - 100)) || (sub_1678( ref l_U797 )))
        {
            sub_65194( "MISS_DEATH_FAIL_FAST_01A", 0 );
            l_U38 = 5;
            sub_239( "SP", "eMid02Fail3State = MIDSCENE_END_FADE", 0 );
        }
        break;
        case 5:
        CAMERA_ANIMATED_STOP( 3000, 0 );
        ISEQ_UNREGISTER_ENTITY( -1239976099, "player" );
        ISEQ_TERMINATE( -1239976099 );
        l_U38 = 0;
        sub_239( "SP", "eMid02Fail3State = MIDSCENE_IDLE", 0 );
        return 1;
        break;
    }
    return 0;
}

int sub_66692()
{
    vector vVar2;
    float fVar5;

    vVar2 = {39.38000000, -65.64700000, -2.00000000};
    fVar5 = -45.00000000;
    switch (l_U41)
    {
        case 0: break;
        case 2:
        sub_239( "SP", "eMid02Fail6State = MIDSCENE_SETUP", 0 );
        sub_41526( 1, 0, 0, 1 );
        DO_SCREEN_FADE_OUT( 500 );
        l_U41 = 1;
        sub_239( "SP", "eMid02Fail6State = MIDSCENE_START_FADE", 0 );
        break;
        case 1:
        if (IS_SCREEN_FADED_OUT())
        {
            sub_38459( sub_396(), vVar2, fVar5 );
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_396(), 1, 0 ) )) AND (NOT (IS_PED_DEAD( sub_396() ))))
            {
                REMOVE_PED_WEAPON( sub_396(), GET_WEAPON_FROM_HAND( sub_396(), 1, 0 ) );
            }
            ISEQ_REGISTER_ENTITY( 996082158, "player", sub_396(), 0 );
            ISEQ_START( 996082158 );
            l_U41 = 3;
        }
        break;
        case 3:
        sub_239( "SP", "eMid02Fail6State = MIDSCENE_FIRST_FRAME", 0 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_FAIL", "MID_02_NC_FAIL_LOUNGE_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        DO_SCREEN_FADE_IN( 500 );
        sub_64636();
        l_U41 = 4;
        sub_239( "SP", "eMid02Fail6State = MIDSCENE_PLAYING", 0 );
        break;
        case 4:
        if (NOT (sub_1322( ref l_U797 )))
        {
            if (NOT sub_64925())
            {
                sub_239( "MF", "Max is finished talking, starting fade delay timer...", 0 );
                sub_1426( ref l_U797, 800, 1, 0 );
                sub_1560( ref l_U797 );
            }
        }
        if ((CAMERA_ANIMATED_CURRENT_TIME() > ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_CLUB_FAIL", "MID_02_NC_FAIL_LOUNGE_CAM" )) - 100)) || (sub_1678( ref l_U797 )))
        {
            sub_65194( "MISS_DEATH_FAIL_FAST_01A", 0 );
            l_U41 = 5;
            sub_239( "SP", "eMid02Fail6State = MIDSCENE_END_FADE", 0 );
        }
        break;
        case 5:
        CAMERA_ANIMATED_STOP( 3000, 0 );
        ISEQ_UNREGISTER_ENTITY( 996082158, "player" );
        ISEQ_TERMINATE( 996082158 );
        l_U41 = 0;
        sub_239( "SP", "eMid02Fail6State = MIDSCENE_IDLE", 0 );
        return 1;
        break;
    }
    return 0;
}

int sub_67745()
{
    vector vVar2;
    float fVar5;

    vVar2 = {40.58800000, -39.50900000, -0.17800000};
    fVar5 = -45.00000000;
    switch (l_U44)
    {
        case 0: break;
        case 2:
        sub_239( "SP", "eMid02Fail9State = MIDSCENE_SETUP", 0 );
        sub_41526( 1, 0, 0, 1 );
        DO_SCREEN_FADE_OUT( 500 );
        l_U44 = 1;
        sub_239( "SP", "eMid02Fail9State = MIDSCENE_START_FADE", 0 );
        break;
        case 1:
        if (IS_SCREEN_FADED_OUT())
        {
            sub_38459( sub_396(), vVar2, fVar5 );
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_396(), 1, 0 ) )) AND (NOT (IS_PED_DEAD( sub_396() ))))
            {
                REMOVE_PED_WEAPON( sub_396(), GET_WEAPON_FROM_HAND( sub_396(), 1, 0 ) );
            }
            ISEQ_REGISTER_ENTITY( 277457984, "player", sub_396(), 0 );
            ISEQ_START( 277457984 );
            l_U44 = 3;
        }
        break;
        case 3:
        sub_239( "SP", "eMid02Fail9State = MIDSCENE_FIRST_FRAME", 0 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_FAIL", "MID_02_NC_FAIL_PATIO_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        DO_SCREEN_FADE_IN( 500 );
        sub_64636();
        l_U44 = 4;
        sub_239( "SP", "eMid02Fail9State = MIDSCENE_PLAYING", 0 );
        break;
        case 4:
        if (NOT (sub_1322( ref l_U797 )))
        {
            if (NOT sub_64925())
            {
                sub_239( "MF", "Max is finished talking, starting fade delay timer...", 0 );
                sub_1426( ref l_U797, 800, 1, 0 );
                sub_1560( ref l_U797 );
            }
        }
        if ((CAMERA_ANIMATED_CURRENT_TIME() > ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_CLUB_FAIL", "MID_02_NC_FAIL_PATIO_CAM" )) - 100)) || (sub_1678( ref l_U797 )))
        {
            sub_65194( "MISS_DEATH_FAIL_FAST_01A", 0 );
            l_U44 = 5;
            sub_239( "SP", "eMid02Fail9State = MIDSCENE_END_FADE", 0 );
        }
        break;
        case 5:
        CAMERA_ANIMATED_STOP( 3000, 0 );
        ISEQ_UNREGISTER_ENTITY( 277457984, "player" );
        ISEQ_TERMINATE( 277457984 );
        l_U44 = 0;
        sub_239( "SP", "eMid02Fail9State = MIDSCENE_IDLE", 0 );
        return 1;
        break;
    }
    return 0;
}

void sub_69020()
{
    int I;

    sub_239( "SA", "P_VIP_CLEANUP_LIVING_PEDS - START", 0 );
    for ( I = 0; I < l_U1317; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U1317[I] )))
        {
            sub_4358( l_U1317[I] );
        }
    }
    for ( I = 0; I < l_U1342; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U1342[I] )))
        {
            sub_4358( l_U1342[I] );
        }
    }
    for ( I = 0; I < l_U1372; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U1372[I] )))
        {
            sub_4358( l_U1372[I] );
        }
    }
    for ( I = 0; I < l_U1401; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U1401[I] )))
        {
            sub_4358( l_U1401[I] );
        }
    }
    for ( I = 0; I < l_U1431; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U1431[I] )))
        {
            sub_4358( l_U1431[I] );
        }
    }
    sub_239( "SA", "P_VIP_CLEANUP_LIVING_PEDS - END", 0 );
    return;
}

void sub_69668()
{
    if (NOT l_U2438)
    {
        START_WIDGET_GROUP( "Script Variable Tuner" );
        ADD_WIDGET_BOOL( "Activate Giovanna Dress Placement Debug", ref l_U2439 );
        sub_69805( ref l_U1571, "Giovanna Dress Loc", 0.01000000 );
        sub_69805( ref l_U1574, "Giovanna Dress Rot", 0.10000000 );
        STOP_WIDGET_GROUP();
        l_U2438 = 1;
    }
    if (l_U2439)
    {
        if (DOES_OBJECT_EXIST( l_U1570 ))
        {
            SET_OBJECT_COORDS( l_U1570, l_U1571 );
            SET_OBJECT_ROTATION( l_U1570, l_U1574 );
        }
    }
    return;
}

void sub_69805(int iParam0, unknown uParam1, unknown uParam2)
{
    START_WIDGET_GROUP( uParam1 );
    ADD_WIDGET_FLOAT_SLIDER( "x", iParam0 + 0, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "y", iParam0 + 4, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "z", iParam0 + 8, 60536, 5000, uParam2 );
    STOP_WIDGET_GROUP();
    return;
}

void sub_70060()
{
    sub_239( "MF", "P_RELEASE_VIP_ASSETS - START", 0 );
    sub_61479( g_U2459, ref g_U1108 );
    sub_61479( 1208363481, ref g_U1108 );
    sub_61479( -1491672653, ref g_U1108 );
    sub_61479( g_U2478, ref g_U1108 );
    sub_61479( g_U885, ref g_U1108 );
    sub_61479( g_U888, ref g_U1108 );
    sub_61479( -1043623436, ref g_U1108 );
    sub_61479( -398091261, ref g_U1108 );
    sub_70229( g_U2459 );
    sub_70229( 1208363481 );
    sub_70229( -1491672653 );
    sub_70229( g_U2478 );
    sub_70229( g_U885 );
    sub_70229( g_U888 );
    sub_70229( -1043623436 );
    sub_70229( -398091261 );
    sub_70463( "LEVEL_S_CLUB_CP_01_02", ref g_U1447 );
    sub_70463( "LEVEL_S_CLUB_CP_02", ref g_U1447 );
    sub_70463( "EXPL_CAM", ref g_U1447 );
    sub_70463( "DAM_DEAD", ref g_U1447 );
    sub_3219( 816576289, ref g_U1350 );
    sub_3219( -1404259228, ref g_U1350 );
    sub_3219( -1700261605, ref g_U1350 );
    sub_3219( -671715858, ref g_U1350 );
    sub_3219( -921546714, ref g_U1350 );
    sub_70781( 1194438308, ref g_U1301 );
    sub_70781( 406496141, ref g_U1301 );
    sub_70781( 68019059, ref g_U1301 );
    sub_61479( -1409914275, ref g_U1108 );
    sub_239( "MF", "P_RELEASE_VIP_ASSETS - END", 0 );
    return;
}

void sub_70229(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_5299( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_70463(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_3331( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_70781(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_3331( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U21 = 0;
    l_U22 = 0;
    l_U23 = 1500;
    l_U34 = 0;
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = 0;
    l_U40 = 0;
    l_U41 = 0;
    l_U42 = 0;
    l_U43 = 0;
    l_U44 = 0;
    l_U45 = 0;
    l_U807 = -1;
    l_U808 = {64536, 64536, 64536};
    l_U847 = 0;
    l_U848 = 0;
    l_U850 = 0;
    l_U1022 = 2;
    l_U1023 = 3;
    l_U1024 = 4;
    l_U1025 = 5;
    l_U1026 = 8;
    StrCopy( ref l_U1530, "02_NC_RANDOM1_concat", 32 );
    StrCopy( ref l_U1719, "MID_04_NC_concat", 32 );
    l_U1755 = 1000;
    l_U1756 = 300;
    l_U1757 = 0;
    l_U1776 = 1900;
    l_U1777 = 800;
    l_U1779 = {6.82400000, 52.33700000, -0.78300000};
    l_U1782 = {0.00000000, 0.00000000, 65.00000000};
    sub_355( "CR", "Script s_club_Theme_room is starting...", 0 );
    l_U848 = 1;
    l_U34 = 0;
    while (IS_EXITFLAG_SET() == 0)
    {
        sub_430();
        if (l_U850 == 0)
        {
            sub_9412();
            sub_56544();
        }
        WAIT( 0 );
    }
    sub_2968();
    sub_57340();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_club_Theme_room" );
    SET_EXITFLAG_RESPONSE();
    sub_355( "CR", "Script s_club_Theme_room is terminating...", 0 );
    return;
}

void sub_355(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_430()
{
    if (g_U892 == 3)
    {
        switch (l_U850)
        {
            case 0:
            if ((g_U3360) || (IS_PED_DEAD( sub_512() )))
            {
                l_U850 = 1;
                sub_355( "CR", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            else if (sub_657())
            {
                l_U850 = 3;
                sub_355( "CR", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 1:
            if (((sub_1167( 0 )) == 1) || (sub_1143()))
            {
                if (sub_1143())
                {
                    ;
                }
                l_U850 = 2;
            }
            break;
            case 2:
            sub_355( "CR", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            if (NOT (IS_PED_DEAD( sub_512() )))
            {
                l_U850 = 3;
                sub_355( "CR", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_355( "CR", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_512() ))) AND (NOT (IS_PLAYER_DEAD( sub_534() ))))
            {
                SET_PLAYER_CONTROL( sub_534(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_512() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_512(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            sub_2763( "CLUB_TIMEOUT_SCRIPTED_FAIL_FX" );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            sub_2968();
            if (g_U893[4]._fU36 == 1)
            {
                SET_EXITFLAG_FOR_SCRIPT( g_U893[4]._fU32 );
                sub_4969( ref g_U893[4] );
            }
            l_U850 = 4;
            sub_355( "CR", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_355( "CR", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_5115( ref l_U811, sub_512() );
            SET_INTERIOR_ACTIVE( GET_INTERIOR_FROM_NAME( ref g_U2488, 0 ), 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( GET_INTERIOR_FROM_NAME( ref g_U2488, 0 ), GET_HASH_KEY( ref g_U2544 ) );
            LOAD_SCENE_FOR_ROOM_BY_KEY( GET_INTERIOR_FROM_NAME( ref g_U2488, 0 ), GET_HASH_KEY( ref g_U2536 ) );
            l_U850 = 5;
            sub_355( "CR", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_355( "CR", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U848 = 1;
            l_U850 = 0;
            sub_355( "CR", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_512()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_534() );
    }
    return 0;
}

void sub_534()
{
    return GET_PLAYER_ID();
}

int sub_657()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_512() )))
        {
            SET_PED_FORCED_TO_WALK( sub_512(), 0 );
            SET_PLAYER_FORCED_AIM( sub_534(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_534(), 1 );
            if ((IS_PED_VISIBLE( sub_512() )) == 0)
            {
                SET_PED_VISIBLE( sub_512(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_1143()
{
    return g_U648;
}

int sub_1167(int iParam0)
{
    iParam0 = 1;
    switch (l_U22)
    {
        case 0:
        if (NOT (sub_1224( ref l_U24 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_512() )))
            {
                l_U23 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_1328( ref l_U24, l_U23, 1, 1 );
            sub_1462( ref l_U24 );
        }
        if (sub_1580( ref l_U24 ))
        {
            sub_355( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_512() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_534() )))
            {
                SET_PLAYER_CONTROL( sub_534(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U22 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U22 = 2;
            }
            else
            {
                l_U22 = 3;
            }
        }
        break;
        case 2:
        sub_355( "NS", "Player will QUIT", 0 );
        sub_2061();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_355( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_2061();
        return 1;
        break;
    }
    return 0;
}

int sub_1224(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_1328(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_1462(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_1580(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_2061()
{
    sub_355( "NS", "P_PostFailRetryCleanup", 0 );
    sub_2109( ref l_U24 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_534() )))
    {
        SET_PLAYER_CONTROL( sub_534(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U21 = 0;
    l_U21 = l_U21;
    l_U22 = 0;
    return;
}

void sub_2109(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_2763(unknown uParam0)
{
    sub_355( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    sub_2846( ref l_U35 );
    l_U34 = 1;
    return;
}

void sub_2846(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

void sub_2968()
{
    sub_355( "CR", "P_CLEANUP", 0 );
    ISEQ_UNREGISTER_ENTITY( -2013155889, "CS_01" );
    ISEQ_UNREGISTER_ENTITY( -2013155889, "CS_02" );
    ISEQ_UNREGISTER_ENTITY( -2013155889, "CIV" );
    ISEQ_TERMINATE( -2013155889 );
    sub_3077( 1446597130, 1 );
    sub_3077( -87549151, 1 );
    sub_3077( -1591711785, 1 );
    sub_3077( -1921859460, 1 );
    sub_3077( 1134570712, 1 );
    sub_3077( 1396472282, 1 );
    ISEQ_UNREGISTER_ENTITY( -1218938405, "player" );
    ISEQ_TERMINATE( -1218938405 );
    ISEQ_UNREGISTER_ENTITY( 1830675819, "player" );
    ISEQ_TERMINATE( 1830675819 );
    ISEQ_UNREGISTER_ENTITY( 1591920885, "player" );
    ISEQ_TERMINATE( 1591920885 );
    sub_3434( ref l_U1027 );
    sub_3434( ref l_U894 );
    sub_3434( ref l_U1043 );
    sub_3434( ref l_U1073 );
    sub_3434( ref l_U1154 );
    sub_3434( ref l_U1282 );
    sub_3434( ref l_U1445 );
    sub_3434( ref l_U1482 );
    sub_3434( ref l_U1089 );
    sub_3637( ref l_U1589 );
    sub_3670( g_U795._fU0 );
    sub_3749( l_U1778 );
    sub_3794( ref l_U1787, 0 );
    sub_3749( l_U1587 );
    sub_4688( ref g_U3340 );
    sub_4688( ref g_U3350 );
    ENABLE_WALLA_ZONE( "S_CLUB_WZ_LOUNGE_CS", 0 );
    ENABLE_WALLA_ZONE( "S_CLUB_WZ_LOUNGE_HOSTAGES", 0 );
    if ((CUTSCENE_NAMED_IS_LOADING( ref l_U1719 )) || (CUTSCENE_IS_LOADED( ref l_U1719 )))
    {
        CLEAR_NAMED_CUTSCENE( ref l_U1719 );
    }
    if ((CUTSCENE_NAMED_IS_LOADING( ref l_U1530 )) || (CUTSCENE_IS_LOADED( ref l_U1530 )))
    {
        CLEAR_NAMED_CUTSCENE( ref l_U1530 );
    }
    if (g_U892 == 3)
    {
        ENABLE_STATIC_EMITTER( "S_CLUB_SE_LOUNGE_MUSIC", 0 );
    }
    return;
}

void sub_3077(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_3434(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_3468( (uParam0^)[I] );
    }
    return;
}

void sub_3468(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_3637(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_3670( (uParam0^)[I] );
    }
    return;
}

void sub_3670(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_3749(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_3794(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_3838( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_3838( iParam0, 0 );
        sub_4038( iParam0, 0 );
        if ((IS_PED_DEAD( sub_512() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_512() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_512(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_3838(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_4038(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_4189( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_4189(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_4250( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_4250( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_4250(int iParam0)
{
    if (((IS_PED_DEAD( sub_512() )) == 0) AND ((IS_PLAYER_DEAD( sub_534() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_512() )) == 1) || (((IS_PED_GETTING_UP( sub_512() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_512() )) == 1) || (((IS_PED_IN_COVER( sub_512() )) == 1) || (((IS_PED_DUCKING( sub_512() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_512() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_4688(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

void sub_4969(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_5115(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_355( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_5299( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_6376( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_6668( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_7028( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_6668( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_7028( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_6668( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_7028( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_7313( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_7028( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_7313( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_7028( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_7806( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_7967( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_512(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_355( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_5299(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_5331( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_5331(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_6376(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_6668(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_6984( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_6984(unknown uParam0)
{
    return;
}

void sub_7028(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_7313(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_6984( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_7806(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_7967(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_5331( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_8039( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_8039(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_9412()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;

    iVar2 = l_U848;
    switch (l_U848)
    {
        case 0: break;
        case 1:
        sub_355( "CR", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
        sub_9632();
        sub_9834();
        sub_15676( "SCLBAUD" );
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U848 = 2;
        sub_355( "CR", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        case 2:
        sub_355( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        sub_15919();
        l_U848 = 3;
        sub_355( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        case 3:
        if (sub_16892() == 1)
        {
            l_U848 = 4;
            sub_355( "SP", "eCheckpointState = CP_SETUP_START_POINT", 0 );
            break;
        }
        return;
        case 4:
        sub_355( "SP", "eCheckpointState = CP_SETUP_START_POINT", 0 );
        if ((l_U847 == 0) AND (g_U891 == 3))
        {
            l_U847 = 1;
            if (NOT (sub_17422( ref l_U811 )))
            {
                sub_7313( sub_512(), 1194438308, 200, 0, 0 );
                l_U848 = 5;
                sub_355( "MF", "eCheckpointState = CP_WAIT_FOR_PLAYER_WEAPONS", 0 );
            }
            else
            {
                l_U848 = 6;
                sub_355( "MF", "eCheckpointState = CP_HANDLE_SPAWN_ENTITIES", 0 );
            }
            g_U1074[3] = 1;
        }
        else
        {
            l_U848 = 6;
            sub_355( "CR", "eCheckpointState = CP_HANDLE_SPAWN_ENTITIES", 0 );
        }
        break;
        case 5:
        if ((IS_PED_DEAD( sub_512() )) == 0)
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_512(), 0, 0 ) )) == 1)
            {
                l_U848 = 6;
                sub_355( "CR", "eCheckpointState = CP_HANDLE_SPAWN_ENTITIES", 0 );
            }
        }
        break;
        case 6:
        if (l_U849)
        {
            ENABLE_STATIC_EMITTER( "S_CLUB_SE_LOUNGE_MUSIC", 1 );
        }
        if (g_U892 != 3)
        {
            if (sub_18009())
            {
                l_U848 = 7;
                sub_355( "CR", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
            }
        }
        else if (sub_19575())
        {
            sub_19655();
            sub_21223();
            sub_21309( l_U894[0] );
            sub_21309( l_U894[1] );
            l_U848 = 7;
            sub_355( "CR", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 7:
        if (g_U1074[3] == 1)
        {
            l_U848 = 8;
            sub_355( "CR", "eCheckpointState = CP_START_MID_04_CUTSCENE", 0 );
            break;
        }
        return;
        case 8:
        sub_355( "SP", "eCheckpointState = CP_START_MID_04_CUTSCENE", 0 );
        sub_26574( ref l_U1727, "MID_04_NC_concat", 22052, 22069, 22925, 23394, 25162, 25745, 250, 0 );
        sub_26973( ref l_U1727, ref g_U2488, ref g_U2544 );
        l_U1727._fU64 = 0;
        if (g_U892 < 3)
        {
            l_U1727._fU4 = 2;
            l_U1727._fU104 = 0;
        }
        else
        {
            l_U1727._fU4 = 7;
        }
        l_U848 = 9;
        sub_355( "SP", "eCheckpointState = CP_HANDLE_MID_04_CUTSCENE", 0 );
        case 9:
        if ((sub_27152( ref l_U1727 )) == 1)
        {
            RESET_FORCED_AIM_INTENTION_DIRECTION();
            l_U848 = 10;
            sub_355( "SP", "eCheckpointState = CP_HANDLE_LOUNGE_GAMEPLAY", 0 );
        }
        else
        {
            return;
        }
        break;
        case 10:
        if (l_U849 == 1)
        {
            if (NOT (IS_PED_DEAD( l_U894[1] )))
            {
                sub_355( "RJM", "CP_HANDLE_LOUNGE_GAMEPLAY - First update, setting the runner to not use injured movement", 0 );
                SET_PED_FLAG_BLOCK_WOUNDED_MOVEMENT( l_U894[1], 1 );
            }
            sub_29725();
            sub_31268();
            if (l_U811._fU0 == 0)
            {
                g_U892 = 3;
                sub_31446( ref l_U811, g_U892, sub_512(), g_U2216[3], g_U2331[3], g_U2370[3], g_U2409[3], 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_534() )))
            {
                SET_PLAYER_FORCED_AIM_MAINTAIN_DIRECTION( sub_534(), 0, 0 );
            }
            sub_35079();
            sub_36281();
            CAMERA_CLEAR_POINT_AT_TARGET();
            PRE_STREAM_SEAMLESS_CUTSCENE( "02_NC_RANDOM1_concat" );
        }
        if (NOT l_U1711)
        {
            if ((ISEQ_QUERY_ENTITY_STATE( -2013155889, "CS_01", 6 )) || (ISEQ_QUERY_ENTITY_STATE( -2013155889, "CS_01", 5 )))
            {
                sub_36565();
                sub_36761();
                l_U1711 = 1;
            }
        }
        if (NOT l_U1588)
        {
            if (DOES_OBJECT_EXIST( DOOR_FIND_CLOSEST( g_U3171._fU0, g_U3171._fU4 ) ))
            {
                sub_355( "MF", "Doing intial setup for Anders Locked Door", 0 );
                SET_OBJECT_VISIBLE( DOOR_FIND_CLOSEST( g_U3171._fU0, g_U3171._fU4 ), 0 );
                sub_37834( ref g_U3171, 1, 1, 1065353216 );
                l_U1588 = 1;
            }
        }
        sub_37997( ref l_U894, -1054867456, 0, 1 );
        sub_37997( ref l_U1027, -1054867456, 0, 1 );
        sub_38160();
        sub_38448( ref l_U1073[0], 58, 1069547520, 1101004800, 0, -1082130432 );
        sub_38715( ref l_U1787 );
        if (DOOR_GET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U3185._fU0, g_U3185._fU4 ) ))
        {
            sub_40567( ref g_U3185, 0 );
        }
        if (DOOR_GET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U3192._fU0, g_U3192._fU4 ) ))
        {
            sub_40567( ref g_U3192, 0 );
        }
        if (l_U1713 == 1)
        {
            sub_40689();
            sub_41199();
        }
        if (NOT l_U1712)
        {
            if ((IS_SPHERE_VISIBLE( 26.71000000, 19.62000000, 0.97000000, 0.50000000, 1 )) || (sub_41725( ref l_U1636, 0 )))
            {
                sub_41855();
                ENABLE_WALLA_ZONE( "S_CLUB_WZ_LOUNGE_CS", 1 );
                ENABLE_WALLA_ZONE( "S_CLUB_WZ_LOUNGE_HOSTAGES", 1 );
                l_U1712 = 1;
            }
        }
        if (NOT l_U1713)
        {
            if ((IS_SPHERE_VISIBLE( 21.25624000, 46.39191000, 1.23702000, 1.00000000, 1 )) || ((sub_41725( ref l_U1133, 0 )) == 1))
            {
                sub_42421();
                sub_42722();
                sub_43259();
                sub_43483();
                sub_1328( ref l_U1702, 9000, 1, 0 );
                sub_1462( ref l_U1702 );
                l_U1713 = 1;
                break;
            }
        }
        if (NOT l_U1714)
        {
            if ((sub_41725( ref l_U1261, 0 )) || (sub_41725( ref l_U1240, 0 )))
            {
                sub_44086();
                l_U1714 = 1;
            }
        }
        else
        {
            sub_44393();
            sub_45055();
        }
        if (NOT l_U1715)
        {
            if (sub_41725( ref l_U1424, 0 ))
            {
                sub_45427();
                l_U1715 = 1;
            }
        }
        if (sub_41725( ref l_U1461, 0 ))
        {
            sub_45650();
            sub_1328( ref l_U1512, 1200, 1, 0 );
            sub_1328( ref l_U1521, 1600, 1, 0 );
            sub_1462( ref l_U1512 );
            sub_1462( ref l_U1521 );
        }
        if (sub_1224( ref l_U1512 ))
        {
            if (sub_1580( ref l_U1512 ))
            {
                sub_355( "RJM", "VIG_04F - Shooting girl", 0 );
                SHOOT_SINGLE_BULLET_BETWEEN_COORDS( 13.46000000, 22.40000000, 1.10000000, 30.66000000, 15.04000000, 0.55000000, 100, 1, -1074756423, 0 );
                sub_4688( ref l_U1512 );
            }
        }
        if (sub_1224( ref l_U1521 ))
        {
            if (sub_1580( ref l_U1521 ))
            {
                sub_355( "RJM", "VIG_04F - Shooting guy", 0 );
                SHOOT_SINGLE_BULLET_BETWEEN_COORDS( 13.46000000, 22.40000000, 1.10000000, 31.19000000, 12.99000000, 0.70000000, 100, 1, -1074756423, 0 );
                sub_4688( ref l_U1521 );
            }
        }
        if ((sub_1580( ref l_U1702 )) == 1)
        {
            ENABLE_WALLA_ZONE( "S_CLUB_WZ_LOUNGE_CS", 0 );
            ENABLE_WALLA_ZONE( "S_CLUB_WZ_LOUNGE_HOSTAGES", 0 );
        }
        if (sub_41725( ref l_U1594, 0 ))
        {
            sub_46332();
        }
        if (sub_41725( ref l_U1657, 0 ))
        {
            sub_46673();
        }
        if (sub_41725( ref l_U851, 0 ))
        {
            sub_47402( ref g_U893[4] );
        }
        if (sub_47433( ref l_U894, 1 ))
        {
            if (NOT IS_BULLET_CAMERA_ACTIVE())
            {
                l_U848 = 11;
                sub_355( "CR", "eCheckpointState = CP_POST_LOUNGE_GAMEPLAY", 0 );
            }
        }
        if (sub_47697( ref l_U1787 ))
        {
            sub_47931( "EXPLORE_ITEM", ref l_U1974 );
        }
        if (g_U1102 == 0)
        {
            sub_48022();
        }
        if (g_U892 == 4)
        {
            l_U848 = 15;
            sub_355( "CR", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 11:
        if (l_U849)
        {
            sub_1328( ref l_U1912, 2500, 1, 0 );
            sub_1462( ref l_U1912 );
            sub_15603( ref l_U1787, 1 );
            sub_49253();
        }
        if (NOT l_U1588)
        {
            if (DOES_OBJECT_EXIST( DOOR_FIND_CLOSEST( g_U3171._fU0, g_U3171._fU4 ) ))
            {
                sub_355( "MF", "Doing intial setup for Anders Locked Door", 0 );
                SET_OBJECT_VISIBLE( DOOR_FIND_CLOSEST( g_U3171._fU0, g_U3171._fU4 ), 0 );
                sub_37834( ref g_U3171, 1, 1, 1065353216 );
                l_U1588 = 1;
            }
        }
        sub_40689();
        sub_41199();
        sub_45055();
        if (sub_41725( ref l_U851, 0 ))
        {
            sub_47402( ref g_U893[4] );
        }
        if (sub_49253())
        {
            if (TIME_SINCE_LAST_MONOLOGUE() > 1500)
            {
                sub_355( "MF", "Playing Speech: SSTD_MFSP", 0 );
                sub_47931( ref g_U3540, ref uVar3 );
            }
        }
        if (NOT (sub_48305( l_U1678 )))
        {
            if (sub_1580( ref l_U1912 ))
            {
                sub_49686();
            }
        }
        if (NOT l_U1921)
        {
            if (sub_48305( l_U1678 ))
            {
                if (TIME_SINCE_LAST_MONOLOGUE() > 1500)
                {
                    if ((sub_41725( ref l_U1953, 0 )) || (sub_41725( ref l_U1932, 0 )))
                    {
                        sub_49876();
                        l_U1921 = 1;
                    }
                }
            }
            else if (l_U1912._fU16)
            {
                if (TIME_SINCE_LAST_MONOLOGUE() > 1500)
                {
                    if ((sub_41725( ref l_U1953, 0 )) || (sub_41725( ref l_U1932, 0 )))
                    {
                        sub_49876();
                        l_U1921 = 1;
                    }
                }
            }
        }
        if (sub_41725( ref l_U1538, 0 ))
        {
            sub_51417( ref l_U1559, "02_NC_RANDOM1_concat", 50112, 50413, 50724, 50891, 250, 0 );
            l_U1559._fU4 = 2;
        }
        if (l_U1559._fU4 != 0)
        {
            sub_27152( ref l_U1559 );
        }
        if (sub_38715( ref l_U1787 ))
        {
            g_U1102 = 1;
            sub_28262( 1, 0, 0, 1 );
            if (NOT l_U1785)
            {
                sub_355( "MF", "Starting Dress POI Dialogue Delay Timer", 0 );
                sub_1462( ref l_U1883 );
            }
            FOUND_EXPLORATION_ITEM( "sclb_FabsDress" );
            CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAM_GND_25_F_CAM", 1, 7.34000000, 52.34000000, 0.26000000, 101.00000000, 0, 0 );
            l_U1786 = 1;
            sub_51842( 8.02124500, 51.94488000, -1.21169500, 88.23753000, -33.67590000, -7.25327200 );
        }
        if (l_U1786)
        {
            if (NOT l_U1785)
            {
                if (sub_1580( ref l_U1883 ))
                {
                    sub_50129( 0 );
                    sub_50226( ref l_U1873, 0 );
                    sub_35132( ref l_U1873 );
                    sub_47931( "SCLB_MTPFD", ref l_U1873 );
                    l_U1785 = 1;
                }
            }
            if (NOT IS_ANIMATED_CAMERA_PLAYING())
            {
                sub_29139( 1, 1 );
                g_U1102 = 0;
                l_U1786 = 0;
                sub_52038( ref g_U3350, 25000 );
                sub_52038( ref g_U3340, 55000 );
                sub_3794( ref l_U1787, 1 );
            }
        }
        if (TIME_SINCE_LAST_MONOLOGUE() > 1000)
        {
            if (g_U1102 == 0)
            {
                sub_48022();
            }
        }
        if (g_U892 == 4)
        {
            l_U848 = 15;
            sub_355( "CR", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 12:
        sub_355( "SP", "eCheckpointState = CP_HANDLE_MID_02_FAIL1", 0 );
        if (sub_52253() == 1)
        {
            g_U3360 = 1;
        }
        break;
        case 13:
        sub_355( "SP", "eCheckpointState = CP_HANDLE_MID_02_FAIL7", 0 );
        if (sub_53940() == 1)
        {
            g_U3360 = 1;
        }
        break;
        case 14:
        sub_355( "SP", "eCheckpointState = CP_HANDLE_MID_02_FAIL8", 0 );
        if (sub_55196() == 1)
        {
            g_U3360 = 1;
        }
        break;
        case 15:
        sub_355( "CR", "eCheckpointState = CP_FINISHED", 0 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U848 = 0;
        sub_355( "CR", "eCheckpointState = CP_IDLE", 0 );
        break;
    }
    if (l_U848 != iVar2)
    {
        l_U849 = 1;
    }
    else
    {
        l_U849 = 0;
    }
    return;
}

void sub_9632()
{
    sub_355( "CR", "P_INIT_SCRIPT_VARIABLES", 0 );
    g_U3360 = 0;
    l_U1711 = 0;
    l_U1712 = 0;
    l_U1714 = 0;
    l_U1715 = 0;
    l_U1716 = 0;
    l_U1717 = 0;
    l_U1718 = 0;
    l_U1754 = 0;
    l_U1713 = 0;
    l_U1588 = 0;
    l_U1921 = 0;
    l_U1786 = 0;
    l_U1757 = 0;
    sub_1328( ref l_U1767, l_U1776, 1, 0 );
    sub_1328( ref l_U1883, 250, 1, 0 );
    sub_2109( ref g_U3340 );
    sub_2109( ref g_U3350 );
    sub_2109( ref l_U1702 );
    l_U1586 = 0;
    return;
}

void sub_9834()
{
    sub_355( "CR", "P_INIT_GAMEPLAY_STRUCTS", 0 );
    sub_9919( ref l_U874[0], 26.86000000, -24.82000000, 1.09000000, 0.00000000, -1689330283, 4, 1, 0, 0, 0 );
    sub_9919( ref l_U1029[0], 18.35000000, -8.65900000, 0.70000000, 225, 1068647474, 4, 1, 0, 0, 0 );
    sub_9919( ref l_U904[0], 16.31100000, -5.39500000, 0.65148000, -158.28000000, 194950328, 7, 3, 2, 0, 0 );
    sub_9919( ref l_U904[1], 15.24500000, -4.09500000, 0.65148000, -135.00000000, -790048821, 7, 3, 2, 0, 0 );
    sub_9919( ref l_U904[l_U1022], 7.37435800, 31.44125000, 0.68724100, 251.54340000, 756729003, 7, 3, 2, 0, 0 );
    sub_9919( ref l_U904[l_U1023], 14.98000000, 22.55000000, -0.45000000, 65446, -718455963, 7, 3, 2, 0, 0 );
    sub_9919( ref l_U904[l_U1024], 10.05000000, 49.94000000, -1.00000000, 127.80430000, 636210537, 7, 3, 2, 0, 0 );
    sub_9919( ref l_U904[l_U1025], 11.71000000, 50.71000000, -1.00000000, 200.80350000, 438052860, 7, 3, 2, 0, 0 );
    sub_9919( ref l_U904[6], 11.23944000, 52.42245000, -1.00000000, 311.51830000, -1774410422, 7, 3, 2, 0, 0 );
    sub_9919( ref l_U904[7], 12.93489000, 50.94887000, -1.00000000, 297.34100000, 1134956680, 7, 3, 2, 0, 0 );
    sub_9919( ref l_U904[l_U1026], 11.74000000, 23.58000000, -0.42000000, 267.99600000, -1506536291, 7, 3, 2, 0, 0 );
    sub_9919( ref l_U1046[0], 21.82000000, 19.21000000, -0.44000000, 90.00000000, -1578892574, 4, 1, 0, 0, 0 );
    sub_9919( ref l_U1046[1], 26.67000000, 20.37000000, -0.39000000, 144.00000000, 1738291095, 4, 1, 0, 0, 0 );
    sub_9919( ref l_U1075[0], 28.25700000, 5.53800000, 0.82100000, 135.00000000, 1282246441, 4, 1, 0, 0, 0 );
    sub_9919( ref l_U1093[0], 28.65300000, 7.64200000, 0.90900000, 135.00000000, 402215138, 4, 1, 0, 0, 0 );
    sub_9919( ref l_U1093[1], 26.72300000, 7.45100000, 0.88800000, -135.00000000, 382429915, 4, 1, 0, 0, 0 );
    sub_9919( ref l_U1093[2], 28.91000000, 6.97000000, 0.94000000, 135.00000000, 788603424, 4, 1, 0, 0, 0 );
    sub_9919( ref l_U1161[0], 11.35584000, 26.68100000, 0.09968300, 135.00000000, -1997216999, 4, 1, 0, 0, 0 );
    sub_9919( ref l_U1161[1], 18.08811000, 41.03663000, -0.65995300, -25.00000000, -630948878, 4, 1, 0, 0, 0 );
    sub_9919( ref l_U1161[2], 18.82108000, 31.72095000, -0.63986300, 135.00000000, 69523236, 4, 1, 0, 0, 0 );
    sub_9919( ref l_U1161[3], 11.32768000, 25.80405000, -0.03825200, -25.00000000, 1677327236, 4, 1, 0, 0, 0 );
    sub_9919( ref l_U1161[4], 16.32753000, 40.72527000, -0.82696200, 135.00000000, -1079255482, 4, 1, 0, 0, 0 );
    sub_9919( ref l_U1161[5], 20.55524000, 24.03795000, -0.22375600, -25.00000000, -90210801, 4, 1, 0, 0, 0 );
    sub_9919( ref l_U1293[0], 14.34000000, 43.94000000, -0.66000000, 135.00000000, -889283596, 4, 1, 0, 0, 0 );
    sub_9919( ref l_U1293[1], 23.37000000, 41.87000000, -0.83000000, -25.00000000, 1277064123, 4, 1, 0, 0, 0 );
    sub_9919( ref l_U1293[2], 24.86000000, 39.56000000, -1.02000000, 135.00000000, -1695873755, 4, 1, 0, 0, 0 );
    sub_9919( ref l_U1293[3], 20.34000000, 43.08000000, -1.08000000, -25.00000000, 377356498, 4, 1, 0, 0, 0 );
    sub_9919( ref l_U1293[4], 14.20000000, 42.55000000, -0.72000000, 135.00000000, -1079255482, 4, 1, 0, 0, 0 );
    sub_9919( ref l_U1293[5], 13.72000000, 37.84000000, -0.39000000, -25.00000000, -583858812, 4, 1, 0, 0, 0 );
    sub_9919( ref l_U1293[6], 12.62000000, 44.29000000, -0.44000000, 135.00000000, 788603424, 4, 1, 0, 0, 0 );
    sub_9919( ref l_U1293[7], 21.54000000, 43.38000000, -0.97000000, -25.00000000, 997406204, 4, 1, 0, 0, 0 );
    sub_9919( ref l_U1293[8], 25.22000000, 38.41000000, -1.04000000, 135.00000000, -90210801, 4, 1, 0, 0, 0 );
    sub_9919( ref l_U1293[9], 22.85000000, 42.72000000, -1.10000000, -25.00000000, 382429915, 4, 1, 0, 0, 0 );
    sub_9919( ref l_U1447[0], 11.23000000, 31.79000000, 0.69000000, 0.00000000, -719873220, 4, 1, 0, 0, 0 );
    sub_9919( ref l_U1485[0], 14.75700000, 14.19308000, -0.52213900, 270, -1465564334, 4, 1, 0, 0, 0 );
    sub_9919( ref l_U1485[1], 14.59900000, 15.26863000, -0.52213900, 270, -67362843, 5, 2, 0, 0, 0 );
    sub_11624( ref l_U1594, "Start_RetreatingCS", 21.37000000, -9.14000000, 0.80000000, 7.00000000, 4.00000000, 6.38000000, -0.06349340, 0.00296988, 44.89000000, 1 );
    sub_11624( ref l_U1636, "start_vig_04A", 20.33000000, 0.59000000, -1.47000000, 5.15000000, 5.20000000, 8.00000000, 0.00000000, 0.00000000, -137.00000000, 1 );
    sub_11624( ref l_U1133, "start_vig_04C", 27.31000000, 7.72000000, -1.47000000, 5.15000000, 14.56000000, 8.00000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_11624( ref l_U1240, "start_vig_04D", 18.84000000, 26.71000000, -1.47000000, 10.83000000, 19.64000000, 8.00000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_11624( ref l_U1261, "start_vig_04D2", 8.18000000, 31.39000000, -1.47000000, 5.00000000, 5.00000000, 8.00000000, 0.00000000, 0.00000000, 65446, 1 );
    sub_11624( ref l_U1424, "start_vig_04E", 27.42000000, 7.72000000, -1.47000000, 5.25000000, 14.40000000, 8.00000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_11624( ref l_U1461, "start_vig_04F", 27.38000000, 7.72000000, -1.47000000, 5.41000000, 16.28000000, 8.00000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_11624( ref l_U1615, "unlock_vig04D_cover", 19.71000000, 38.60000000, -1.47000000, 10.00000000, 20.00000000, 8.00000000, 0.00000000, 0.00000000, -99.40000000, 1 );
    sub_11624( ref l_U1657, "Start_LowerLevelCS", 20.31000000, 32.39000000, -1.77000000, 18.50000000, 28.00000000, 8.00000000, 0.00000000, 0.00000000, -1.33000000, 1 );
    sub_11624( ref l_U1953, "Speech SCLB_MVOGB Upper Bar", 24.70000000, 47.82000000, -1.47000000, 3.49000000, 9.15000000, 3.00000000, 0.00000000, 0.00000000, -142.42000000, 1 );
    sub_11624( ref l_U1932, "Speech SCLB_MVOGB Lower Bar", 23.41000000, 20.32000000, -1.47000000, 4.90000000, 7.12000000, 3.00000000, 0.00000000, 0.00000000, -89.65000000, 1 );
    sub_11624( ref l_U1538, "02_NC_RANDOM1_concat", 9.03000000, 47.78000000, -1.64000000, 1.92000000, 2.89000000, 4.10000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11624( ref l_U1678, "supress speech MAOLCD", 10.80000000, 44.54000000, -1.56000000, 25.70000000, 42.26000000, 3.60000000, 0.00000000, 0.00000000, -89.40000000, 1 );
    sub_12633();
    sub_11624( ref l_U851, "Load Kitchen Script", 19.32000000, 38.90000000, -1.47000000, 5.00000000, 20.00000000, 8.00000000, 0.00000000, 0.00000000, -99.40000000, 1 );
    sub_14479( ref l_U1699, "DJ Area", 12.10000000, 31.67000000, 0.05000000, 5.00000000, 5.80000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14479( ref l_U1700, "Upper Area", 20.25000000, 20.75000000, -1.97000000, 24.00000000, 20.00000000, 8.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14479( ref l_U1701, "Lower Area", 20.15000000, 40.60000000, -2.03000000, 20.00000000, 21.23000000, 8.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14706( ref l_U1787, 2, l_U1779, l_U1779, l_U1779, 1.50000000, 3.00000000, 1, 0 );
    sub_15366( ref l_U1787, 0 );
    sub_15398( ref l_U1787, 1 );
    sub_15442( ref l_U1787, 30, "POI_DRESS" );
    sub_15603( ref l_U1787, 0 );
    return;
}

void sub_9919(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_11624(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_12633()
{
    sub_355( "SP", "P_SETUP_MID_02_FAIL_STRUCTS", 0 );
    sub_11624( ref l_U356, "TRIG_FAIL_DANCE_1", 26.97000000, -65.77000000, -5.32000000, 24.62000000, 21.82000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11624( ref l_U377, "TRIG_FAIL_DANCE_1B", 26.26000000, -54.19000000, -5.07000000, 9.00000000, 6.00000000, 4.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11624( ref l_U398, "TRIG_FAIL_DANCE_1C", 27.15000000, -73.02000000, -5.07000000, 11.65000000, 6.81000000, 4.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11624( ref l_U419, "TRIG_FAIL_DANCE_1D", 37.51000000, -76.03000000, -3.59000000, 4.00000000, 4.00000000, 4.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11624( ref l_U440, "TRIG_FAIL_DANCE_2", 24.88000000, -47.96000000, -5.08000000, 20.38000000, 21.81000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11624( ref l_U461, "TRIG_FAIL_DANCE_2A", 34.84000000, -52.84000000, -5.08000000, 4.00000000, 4.51000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11624( ref l_U482, "TRIG_FAIL_LOUNGE", 40.67000000, -66.68000000, -2.22000000, 14.28000000, 21.46000000, 4.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11624( ref l_U503, "TRIG_FAIL_LOUNGE_A", 43.51000000, -52.82000000, -2.24000000, 10.00000000, 6.79000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11624( ref l_U524, "TRIG_FAIL_PATIO", 43.08000000, -39.79000000, -0.44000000, 15.00000000, 19.30000000, 4.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11624( ref l_U545, "TRIG_FAIL_PATIO_A", 32.55000000, -33.47000000, -0.44000000, 6.56000000, 3.71000000, 4.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11624( ref l_U566, "TRIG_FAIL_ORBITAS_1", 18.68000000, 5.70000000, -1.94000000, 35.81000000, 47.05000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11624( ref l_U587, "TRIG_FAIL_ORBITAS_1A", 14.74000000, 28.10000000, -1.94000000, 29.29000000, 10.00000000, 10.00000000, 0.00000000, 0.00000000, -16.02000000, 1 );
    sub_11624( ref l_U608, "TRIG_FAIL_ORBITAS_2", 22.34000000, 41.28000000, -1.94000000, 19.64000000, 20.00000000, 10.00000000, 0.00000000, 0.00000000, -16.09000000, 1 );
    sub_11624( ref l_U629, "TRIG_FAIL_ORBITAS_2A", 12.80000000, 43.40000000, -1.94000000, 8.35000000, 16.52000000, 10.00000000, 0.00000000, 0.00000000, -44.41000000, 1 );
    sub_11624( ref l_U650, "TRIG_FAIL_BATHROOM", 9.15000000, 52.69000000, -1.94000000, 6.52000000, 8.24000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11624( ref l_U671, "TRIG_FAIL_BATHROOM_A", 12.49000000, 53.09000000, -1.94000000, 5.66000000, 5.97000000, 10.00000000, 0.00000000, 0.00000000, -44.57000000, 1 );
    sub_11624( ref l_U692, "TRIG_FAIL_KITCHEN_LOCKER", -0.83000000, 53.97000000, -1.94000000, 13.61000000, 8.49000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11624( ref l_U713, "TRIG_FAIL_KITCHEN", -9.52000000, 63.81000000, -1.94000000, 18.08000000, 11.18000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11624( ref l_U734, "TRIG_FAIL_KITCHEN_A", -20.47000000, 65.70000000, -1.94000000, 4.00000000, 9.51000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11624( ref l_U755, "TRIG_FAIL_RESTAURANT", -16.16000000, 90.72000000, -1.94000000, 42.04000000, 40.80000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11624( ref l_U776, "TRIG_FAIL_RESTAURANT_A", -14.35000000, 70.13000000, -1.94000000, 8.00000000, 1.00000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    return;
}

void sub_14479(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_14706(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
    sub_14721( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
    sub_15089( iParam0 );
    return;
}

void sub_14721(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_15089(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_15168( iParam0 );
    return;
}

void sub_15168(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_3838( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_3838( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_3838( iParam0, 1 );
            }
            else
            {
                sub_3838( iParam0, 0 );
            };;;
        }
        else
        {
            sub_3838( iParam0, 0 );
        }
    }
    else
    {
        sub_3838( iParam0, 0 );
    }
    return;
}

void sub_15366(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

void sub_15398(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

void sub_15442(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_15473( iParam0 );
    return;
}

void sub_15473(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_15603(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
    sub_4189( iParam0 );
    return;
}

void sub_15676(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_15696();
    return;
}

void sub_15696()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_15919()
{
    sub_355( "SP", "P_REQUEST_ASSETS", 0 );
    if (g_U892 < 3)
    {
        if ((NOT (CUTSCENE_NAMED_IS_LOADING( "MID_04_NC_concat" ))) AND (NOT (CUTSCENE_IS_LOADED( "MID_04_NC_concat" ))))
        {
            PRE_STREAM_SEAMLESS_CUTSCENE( "MID_04_NC_concat" );
        }
        sub_16063( -398091261, 0 );
    }
    sub_16063( g_U2472, 0 );
    sub_16063( g_U2470, 0 );
    if (g_U892 == 3)
    {
        sub_16063( g_U2465, 0 );
        sub_16063( g_U2461, 0 );
    }
    sub_16063( g_U886, 0 );
    sub_16063( -1490220040, 0 );
    sub_16063( -1409914275, 0 );
    sub_16063( 520427342, 0 );
    sub_16334( -2013155889, 0 );
    sub_16334( 1446597130, 0 );
    sub_16334( -87549151, 0 );
    sub_16334( -1591711785, 0 );
    sub_16334( -1921859460, 0 );
    sub_16334( 1134570712, 0 );
    sub_16334( -1218938405, 0 );
    sub_16334( 1830675819, 0 );
    sub_16334( 1591920885, 0 );
    sub_16334( 1396472282, 0 );
    sub_16641( "EXPL_CAM", 0, 0 );
    sub_16641( "LEVEL_S_CLUB_CP_03", 0, 0 );
    sub_16746( 1194438308, 0 );
    sub_16746( 406496141, 0 );
    return;
}

void sub_16063(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_6984( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_16334(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_16641(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_16746(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

int sub_16892()
{
    if ((HAS_ANIM_DICT_LOADED( "LEVEL_S_CLUB_CP_03", 0 )) AND ((HAS_WEAPON_LOADED( 1194438308 )) AND ((HAS_WEAPON_LOADED( 406496141 )) AND ((ISEQ_IS_LOADED( 1591920885 )) AND ((ISEQ_IS_LOADED( 1830675819 )) AND ((ISEQ_IS_LOADED( -1218938405 )) AND ((ISEQ_IS_LOADED( 1134570712 )) AND ((ISEQ_IS_LOADED( -1921859460 )) AND ((ISEQ_IS_LOADED( -1591711785 )) AND ((ISEQ_IS_LOADED( -87549151 )) AND ((ISEQ_IS_LOADED( 1446597130 )) AND ((ISEQ_IS_LOADED( -2013155889 )) AND ((HAS_MODEL_LOADED( 520427342 )) AND ((HAS_MODEL_LOADED( -1409914275 )) AND ((HAS_MODEL_LOADED( -1490220040 )) AND ((HAS_MODEL_LOADED( g_U886 )) AND ((HAS_MODEL_LOADED( g_U2470 )) AND (HAS_MODEL_LOADED( g_U2472 )))))))))))))))))))
    {
        if (g_U892 < 3)
        {
            if ((HAS_MODEL_LOADED( -398091261 )) AND (CUTSCENE_IS_LOADED( "MID_04_NC_concat" )))
            {
                return 1;
            }
        }
        else if ((HAS_MODEL_LOADED( g_U2461 )) AND (HAS_MODEL_LOADED( g_U2465 )))
        {
            return 1;
        }
    }
    return 0;
}

int sub_17422(unknown uParam0)
{
    sub_355( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_5115( uParam0, sub_512() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

int sub_18009()
{
    if (NOT (sub_18032( ref l_U872, ref l_U874, -1, 0, 1, 1, 1 )))
    {
        return 0;
    }
    return 1;
}

int sub_18032(unknown uParam0, unknown uParam1, int iParam2, boolean bParam3, boolean bParam4, int iParam5, unknown uParam6)
{
    int iVar9;
    int iVar10;
    int Result;

    iVar9 = sub_18046( uParam0, uParam1 );
    if (iParam2 == -1)
    {
        iVar10 = (uParam0^);
    }
    else
    {
        iVar10 = iParam2;
    }
    if (iVar9 < iVar10)
    {
        if ((uParam1^)[iVar9]._fU16 == 0)
        {
            SCRIPT_ASSERT( "Invalid Ped Struct!  No Model Defined! Aborting Ped Spawn", 0 );
            sub_355( "MF", "Invalid Ped Struct!  No Model Defined! Aborting Ped Spawn", 0 );
            sub_18345( iVar9 );
            return 0;
        }
        if (NOT (DOES_PED_EXIST( (uParam0^)[iVar9] )))
        {
            sub_16063( (uParam1^)[iVar9]._fU16, uParam6 );
            (uParam0^)[iVar9] = sub_18412( ref (uParam1^)[iVar9] );
            if (NOT bParam4)
            {
                SET_PED_VISIBLE( (uParam0^)[iVar9], bParam4 );
                sub_6984( "SPAWNING INVISIBLE PED!!!" );
            }
            if (iParam5 == 1)
            {
                sub_19146( (uParam0^)[iVar9] );
                sub_6984( "Deactivating Ped..." );
            }
        }
    }
    if (bParam3)
    {
        if (iVar9 == (iVar10 - 1))
        {
            sub_355( "MF", "F_HANDLE_PED_ARRAY_SPAWN: Returning true Once.  If you see this looping, you likely have unitialized ped model data in your pedstruct array.", 0 );
            Result = 1;
        }
        return Result;
    }
    else if (iVar9 >= iVar10)
    {
        return 1;
    }
    return 0;
}

void sub_18046(unknown uParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = (uParam1^);
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (DOES_PED_EXIST( (uParam0^)[I] )))
        {
            if ((uParam1^)[I]._fU16 != 0)
            {
                if (I < Result)
                {
                    Result = I;
                }
            }
        }
    }
    return Result;
}

void sub_18345(unknown uParam0)
{
    return;
}

void sub_18412(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_16063( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_18891( iParam0->_fU40 );
    sub_18971( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_18891(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_18971(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_19146(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

int sub_19575()
{
    if (NOT (sub_18032( ref l_U894, ref l_U904, -1, 0, 1, 1, 1 )))
    {
        return 0;
    }
    if (NOT (sub_18032( ref l_U1027, ref l_U1029, -1, 0, 1, 1, 1 )))
    {
        return 0;
    }
    return 1;
}

void sub_19655()
{
    int I;

    sub_355( "CR", "P_LNG_SETUP_HALLWAY_CS", 0 );
    sub_19711( ref l_U888, 0.60000000, 0 );
    for ( I = 0; I < l_U894; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U894[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U894[I], 1 );
            SET_PED_AI_TEMPLATE( l_U894[I], "AIT_NORMAL" );
            SET_PED_ALERTNESS( l_U894[I], 3 );
            sub_19997( l_U894[I], ref l_U888 );
            sub_20269( l_U894[I], 0, 0 );
            switch (I)
            {
                case 0:
                GIVE_WEAPON_TO_PED_HAND( l_U894[I], 406496141, 25000, 0 );
                SET_ROOM_FOR_PED_BY_NAME( l_U894[I], ref g_U2544 );
                SET_BLOCKING_OF_PED_TARGETTING( l_U894[I], 1 );
                break;
                case 1:
                GIVE_WEAPON_TO_PED_HAND( l_U894[I], 406496141, 25000, 0 );
                SET_ROOM_FOR_PED_BY_NAME( l_U894[I], ref g_U2544 );
                SET_PED_COMBAT_ATTRIBUTES( l_U894[I], 1, 0 );
                SET_BLOCKING_OF_PED_TARGETTING( l_U894[I], 1 );
                break;
                case 2:
                GIVE_WEAPON_TO_PED_HAND( l_U894[I], 1194438308, 25000, 0 );
                SET_ROOM_FOR_PED_BY_NAME( l_U894[I], "rm_clb_backroom" );
                SET_PED_COMBAT_ATTRIBUTES( l_U894[I], 1, 0 );
                break;
                case 3:
                GIVE_WEAPON_TO_PED_HAND( l_U894[I], 406496141, 25000, 0 );
                SET_ROOM_FOR_PED_BY_NAME( l_U894[I], ref g_U2536 );
                break;
                case 4:
                GIVE_WEAPON_TO_PED_HAND( l_U894[I], 406496141, 25000, 0 );
                SET_ROOM_FOR_PED_BY_NAME( l_U894[I], ref g_U2536 );
                SET_PED_FLAG_LOCK_TO_COVER( l_U894[I], 1 );
                break;
                case 5:
                GIVE_WEAPON_TO_PED_HAND( l_U894[I], 406496141, 25000, 0 );
                SET_ROOM_FOR_PED_BY_NAME( l_U894[I], ref g_U2536 );
                SET_PED_FLAG_LOCK_TO_COVER( l_U894[I], 1 );
                break;
                case 6:
                GIVE_WEAPON_TO_PED_HAND( l_U894[I], 406496141, 25000, 0 );
                SET_ROOM_FOR_PED_BY_NAME( l_U894[I], "rm_clb_bathrmlobby" );
                break;
                case 7:
                GIVE_WEAPON_TO_PED_HAND( l_U894[I], 406496141, 25000, 0 );
                SET_ROOM_FOR_PED_BY_NAME( l_U894[I], "rm_clb_bathrmlobby" );
                break;
                case 8:
                GIVE_WEAPON_TO_PED_HAND( l_U894[I], 406496141, 25000, 0 );
                SET_ROOM_FOR_PED_BY_NAME( l_U894[I], ref g_U2536 );
                SET_PED_COMBAT_ATTRIBUTES( l_U894[I], 1, 0 );
                break;
            }
        }
    }
    sub_21049( ref l_U894 );
    sub_21121( ref l_U894, "pi_lng_cs_" );
    return;
}

void sub_19711(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_19997(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_6984( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_19711( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_19711( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_20269(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_PATH_CAN_USE_CLIMBOVERS( uParam0, uParam1 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( uParam0, uParam2 );
    }
    return;
}

void sub_21049(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_19146( (uParam0^)[I] );
    }
    return;
}

void sub_21121(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_21223()
{
    sub_355( "MF", "P_LNG_SETUP_BOUNCER - START", 0 );
    sub_21278( ref l_U1027 );
    sub_21450( ref l_U1027, "pi_lng_bouncer", ref g_U2544 );
    if (NOT (IS_PED_DEAD( l_U1027[0] )))
    {
        SET_PED_PROOFS( l_U1027[0], 1, 0, 0, 0, 0 );
    }
    sub_355( "MF", "P_LNG_SETUP_BOUNCER - END", 0 );
    return;
}

void sub_21278(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_21309( (uParam0^)[I] );
    }
    return;
}

void sub_21309(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_21450(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    sub_21121( uParam0, uParam1 );
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            SET_PED_AS_ONE_SHOT_KILL( (uParam0^)[I], 1 );
            SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( (uParam0^)[I], 1 );
            SET_PED_DIES_WHEN_INJURED( (uParam0^)[I], 1 );
            SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^)[I], 0 );
            SET_PED_RELATIONSHIP( (uParam0^)[I], 0, 0 );
            if (NOT (IS_PED_DEAD( sub_512() )))
            {
                SET_PED_PRIMARY_LOOKAT( (uParam0^)[I], sub_512() );
            }
            SET_ROOM_FOR_PED_BY_NAME( (uParam0^)[I], uParam2 );
            if ((IS_GERMAN_VERSION() == 1) || (IS_JAPANESE_GAME() == 1))
            {
                SET_PED_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP( (uParam0^)[I], 0, 0 );
                SET_PED_GORE_FROM_PLAYER( (uParam0^)[I], 0 );
            }
        }
    }
    return;
}

int sub_22052()
{
    return 1;
}

void sub_22069()
{
    sub_355( "MF", "P_LNG_MID_04_REGISTER - START", 0 );
    if (NOT (IS_PED_DEAD( sub_512() )))
    {
        CUTSCENE_REGISTER_PED_TELEPORT( sub_512(), g_U2216[3], g_U2331[3] );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_512(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( sub_512(), 0, 0 ), "W_PI_PT92_Aa_H", 0 );
    }
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "F_NC_MISC_C", -1058932863 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "F_NC_MISC_C^1", -1559429327 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "F_NC_MISC_C^2", -122539353 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "F_NC_MISC_C^3", -522008999 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "F_NC_MISC_C^4", 1677327236 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "F_NC_MISC_C^5", -351850950 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "F_NC_MISC_C^6", 1907262892 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_NC_CIVS_C", 1365359846 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_NC_CIVS_C^1", 536623463 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_NC_CIVS_C^2", -1741800805 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_NC_CIVS_C^3", -1072806887 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_NC_CIVS_C^4", -1221741293 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_NC_CIVS_C^5", -907706080 );
    if (NOT (IS_PED_DEAD( l_U872[0] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U872[0], "Alph_Club", 1 );
    }
    CUTSCENE_ENABLE_SKIP( 0 );
    CUTSCENE_REGISTER_ISEQ( -2013155889 );
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U3115._fU0, g_U3115._fU4 ), "p_clb_door_int_ca", 0 );
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U3136._fU0, g_U3136._fU4 ), "p_clb_door_int_bb", 0 );
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U3143._fU0, g_U3143._fU4 ), "p_clb_door_int_bb^1", 0 );
    CAMERA_POINT_AT_COORD( 18.48000000, -6.28000000, 2.00000000, 1000 );
    sub_355( "MF", "P_LNG_MID_04_REGISTER - END", 0 );
    return;
}

void sub_22925()
{
    if (l_U1727._fU52)
    {
        sub_16063( g_U2465, 0 );
        sub_16063( g_U2461, 0 );
    }
    if (NOT l_U1754)
    {
        if ((HAS_MODEL_LOADED( g_U2461 )) AND (HAS_MODEL_LOADED( g_U2465 )))
        {
            if (sub_18032( ref l_U1027, ref l_U1029, -1, 1, 1, 0, 1 ))
            {
                sub_21223();
                ISEQ_REGISTER_ENTITY( -2013155889, "CIV", l_U1027[0], 0 );
            }
            if (sub_18032( ref l_U894, ref l_U904, -1, 1, 1, 0, 1 ))
            {
                sub_19655();
                sub_21309( l_U894[0] );
                sub_21309( l_U894[1] );
                ISEQ_REGISTER_ENTITY( -2013155889, "CS_01", l_U894[0], 0 );
                ISEQ_REGISTER_ENTITY( -2013155889, "CS_02", l_U894[1], 0 );
            }
        }
        if ((sub_23187( ref l_U894, 1 )) AND (sub_23187( ref l_U1027, 1 )))
        {
            CUTSCENE_ENABLE_SKIP( 1 );
            l_U1754 = 1;
        }
    }
    if ((GET_CUTSCENE_TIME_MS() > 6760) AND (NOT g_U1104))
    {
        sub_355( "SA", "Setting b_Global_CleanUpVIP to TRUE.", 0 );
        g_U1104 = 1;
    }
    return;
}

void sub_23187(unknown uParam0, boolean bParam1)
{
    int I;
    int Result;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((DOES_PED_EXIST( (uParam0^)[I] )) == 1)
        {
            Result = 1;
            if (NOT bParam1)
            {
                return 1;
            }
        }
        else
        {
            Result = 0;
        }
    }
    return Result;
}

int sub_23394()
{
    sub_355( "MF", "F_LNG_MID_04_POST", 0 );
    sub_3434( ref l_U872 );
    sub_23449( -398091261 );
    sub_23585();
    sub_23730();
    sub_23840();
    sub_23985();
    sub_24130();
    sub_24272();
    sub_24414();
    g_U1104 = 1;
    return 1;
}

void sub_23449(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_6984( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_23585()
{
    sub_355( "MF", "P_LNG_SETUP_VIG_04_A_CIVS - START", 0 );
    sub_21450( ref l_U1043, "pi_lng_VIG_04A_CIVS", ref g_U2536 );
    sub_355( "MF", "P_LNG_SETUP_VIG_04_A_CIVS - END", 0 );
    return;
}

void sub_23730()
{
    sub_355( "MF", "P_LNG_SETUP_VIG_04_B_CIVS - START", 0 );
    sub_355( "MF", "P_LNG_SETUP_VIG_04_B_CIVS - END", 0 );
    return;
}

void sub_23840()
{
    sub_355( "MF", "P_LNG_SETUP_VIG_04_C_CIVS - START", 0 );
    sub_21450( ref l_U1154, "pi_lng_VIG_04C_Civs", ref g_U2536 );
    sub_355( "MF", "P_LNG_SETUP_VIG_04_C_CIVS - END", 0 );
    return;
}

void sub_23985()
{
    sub_355( "MF", "P_LNG_SETUP_VIG_04_D_CIVS - START", 0 );
    sub_21450( ref l_U1282, "pi_lng_VIG_04D_civs", ref g_U2536 );
    sub_355( "MF", "P_LNG_SETUP_VIG_04_C_CIVS - END", 0 );
    return;
}

void sub_24130()
{
    sub_355( "MF", "P_LNG_SETUP_VIG_04_E_CIV - START", 0 );
    sub_21450( ref l_U1445, "pi_lng_VIG_04E_civ", ref g_U2536 );
    sub_355( "MF", "P_LNG_SETUP_VIG_04_E_CIV - END", 0 );
    return;
}

void sub_24272()
{
    sub_355( "MF", "P_LNG_SETUP_VIG_04_F_CIV - START", 0 );
    sub_21450( ref l_U1482, "pi_lng_VIG_04F_civ", ref g_U2536 );
    sub_355( "MF", "P_LNG_SETUP_VIG_04_F_CIV - END", 0 );
    return;
}

void sub_24414()
{
    int I;

    sub_355( "MF", "P_LNG_SETUP_VIG_04_B_DEAD_CIVS - START", 0 );
    sub_21278( ref l_U1089 );
    sub_24490( ref l_U1089, 1 );
    SET_PED_COLLISION( l_U1089[0], 0 );
    SET_PED_COLLISION( l_U1089[1], 0 );
    SET_PED_COLLISION( l_U1089[2], 0 );
    sub_24645( ref l_U1089, ref l_U1093 );
    SET_PED_CORPSE_FROM_ANIM( l_U1089[0], "LEVEL_S_CLUB_CP_03", "VIG_04B_NC_DEAD_CIV1", 1.00000000, 1 );
    SET_PED_CORPSE_FROM_ANIM( l_U1089[1], "LEVEL_S_CLUB_CP_03", "VIG_04B_NC_DEAD_CIV2", 1.00000000, 1 );
    SET_PED_CORPSE_FROM_ANIM( l_U1089[2], "LEVEL_S_CLUB_CP_03", "VIG_04B_NC_DEAD_CIV3", 1.00000000, 1 );
    sub_24490( ref l_U1089, 0 );
    SET_PED_COLLISION( l_U1089[0], 1 );
    SET_PED_COLLISION( l_U1089[1], 1 );
    SET_PED_COLLISION( l_U1089[2], 1 );
    for ( I = 0; I < l_U1089; I++ )
    {
        ADD_BLOOD_POOL( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U1089[I] ), 1.00000000, 4.00000000, 60.00000000 );
    }
    sub_355( "MF", "P_LNG_SETUP_VIG_04_B_DEAD_CIVS - END", 0 );
    return;
}

void sub_24490(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_24524( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_24524(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        FREEZE_PED_POSITION( (uParam0^), uParam1 );
    }
    return;
}

void sub_24645(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_24697( (uParam0^)[I], (uParam1^)[I]._fU0, (uParam1^)[I]._fU12 );
    }
    return;
}

void sub_24697(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_25162()
{
    sub_355( "MF", "P_LNG_MID_04_BLEND_OUT_SETUP - START", 0 );
    sub_24645( ref l_U1027, ref l_U1029 );
    sub_24645( ref l_U894, ref l_U904 );
    if (NOT (IS_PED_DEAD( l_U894[0] )))
    {
        SET_BLOCKING_OF_PED_TARGETTING( l_U894[0], 0 );
    }
    if (NOT (IS_PED_DEAD( l_U894[1] )))
    {
        SET_BLOCKING_OF_PED_TARGETTING( l_U894[1], 0 );
    }
    if (NOT (ISEQ_QUERY_ENTITY_STATE( -2013155889, "CS_01", 3 )))
    {
        if (NOT (IS_PED_DEAD( l_U894[0] )))
        {
            ISEQ_REGISTER_ENTITY( -2013155889, "CS_01", l_U894[0], 0 );
        }
        if (NOT (IS_PED_DEAD( l_U894[1] )))
        {
            ISEQ_REGISTER_ENTITY( -2013155889, "CS_02", l_U894[1], 0 );
        }
        if (NOT (IS_PED_DEAD( l_U1027[0] )))
        {
            ISEQ_REGISTER_ENTITY( -2013155889, "CIV", l_U1027[0], 0 );
        }
        ISEQ_START( -2013155889 );
        CAMERA_POINT_AT_COORD( 18.48000000, -6.28000000, 2.00000000, 1000 );
    }
    SET_PLAYER_FORCED_AIM_MAINTAIN_DIRECTION( sub_534(), 1, 0 );
    CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_CP_03", "B_OUT_MID_04_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
    SET_FORCED_AIM_INTENTION_DIRECTION( -0.68078600, 0.73247100, -0.00407400 );
    ENABLE_STATIC_EMITTER( "S_CLUB_SE_DANCE_CLUB_DJ_BOOTH_GEAR", 0 );
    sub_355( "MF", "P_LNG_MID_04_BLEND_OUT_SETUP - END", 0 );
    return;
}

int sub_25745()
{
    if (l_U1727._fU52)
    {
        if (NOT sub_25769())
        {
            DO_SCREEN_FADE_IN( 100 );
        }
        sub_1462( ref l_U1767 );
    }
    if (NOT (IS_PED_DEAD( l_U894[0] )))
    {
        if ((PED_GET_ACTION_INTENTION_STATUS( l_U894[0], 47 )) == 3)
        {
            sub_355( "MF", "Having CS Shoot bouncer in the head...", 0 );
            if (NOT (IS_PED_DEAD( l_U1027[0] )))
            {
                SET_PED_SHOOTS_AT_COORD( l_U894[0], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1027[0], 65488, 0.00000000, -0.20000000, 0.00000000 ) );
            }
            PED_FINISH_ACTION_INTENTION( l_U894[0], 47 );
        }
    }
    if (sub_1580( ref l_U1767 ))
    {
        SIMULATE_PLAYER_INPUT_GAIT( sub_534(), 3, l_U1777, 0 );
    }
    if (NOT l_U1757)
    {
        if (CAMERA_ANIMATED_CURRENT_TIME() > ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_CLUB_CP_03", "B_OUT_MID_04_CAM" )) - l_U1755))
        {
            CAMERA_ANIMATED_STOP( l_U1756, 1 );
            sub_1328( ref l_U1758, l_U1756 + 10, 1, 0 );
            sub_1462( ref l_U1758 );
            l_U1757 = 1;
        }
    }
    if (sub_26353())
    {
        if (sub_1580( ref l_U1758 ))
        {
            return 1;
        }
    }
    return 0;
}

int sub_25769()
{
    if (l_U34)
    {
        sub_355( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U34 = 0;
        return 1;
        break;
    }
    sub_355( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

int sub_26353()
{
    if (NOT (sub_18032( ref l_U1043, ref l_U1046, -1, 0, 1, 1, 1 )))
    {
        return 0;
    }
    if (NOT (sub_18032( ref l_U1154, ref l_U1161, -1, 0, 1, 1, 1 )))
    {
        return 0;
    }
    if (NOT (sub_18032( ref l_U1282, ref l_U1293, -1, 0, 1, 1, 1 )))
    {
        return 0;
    }
    if (NOT (sub_18032( ref l_U1445, ref l_U1447, -1, 0, 1, 1, 1 )))
    {
        return 0;
    }
    if (NOT (sub_18032( ref l_U1482, ref l_U1485, -1, 0, 1, 1, 1 )))
    {
        return 0;
    }
    if (NOT (sub_18032( ref l_U1089, ref l_U1093, -1, 0, 1, 1, 1 )))
    {
        return 0;
    }
    return 1;
}

void sub_26574(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_355( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return sub_26695( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 26659, 26675, uParam8 );
}

void sub_26659()
{
    return;
}

int sub_26675()
{
    return 1;
}

void sub_26695(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_26973(int iParam0, unknown uParam1, unknown uParam2)
{
    iParam0->_fU68 = 1;
    iParam0->_fU72 = 1;
    iParam0->_fU76 = uParam1;
    iParam0->_fU80 = uParam2;
    iParam0->_fU24 = 1;
    return;
}

void sub_27152(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_355( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_355( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_355( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_355( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_355( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_355( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_27930( iParam0->_fU0, 0 );
            sub_355( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_28262( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_28262( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_355( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_28790( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_28262( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_29139( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_29139( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_27930(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_28262(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_512() )))
        {
            SET_PLAYER_CONTROL( sub_534(), 0, uParam2 );
            SET_PED_DUCKING( sub_512(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_512() );
            }
            SET_PED_INVINCIBLE( sub_512(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_28790(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_512() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_512(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_512(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_512(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_512(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_512(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_29139(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_512() )))
    {
        SET_PLAYER_CONTROL( sub_534(), 1, 0 );
        SET_PED_INVINCIBLE( sub_512(), 0 );
        if (bParam0)
        {
            sub_29220();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_29220()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_512() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_512(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_512(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_512(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_512(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_29725()
{
    sub_355( "CR", "P_CREATE_PLACEMENTS start", 0 );
    l_U1589[0] = sub_29818( -4072149, 19.40000000, 20.10000000, -0.08000000, 0.00000000, 0.00000000, 4.70000000, 0, 1, 1, 90.00000000 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1589[0], "rm_clb_secondclub" );
    l_U1589[1] = sub_29818( -4072149, 12.20000000, 30.22500000, 1.69000000, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0, 90.00000000 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1589[1], "rm_clb_secondclub" );
    l_U1589[2] = sub_29818( -4072149, 28.25000000, 47.37500000, -0.35000000, 0.00000000, 0.00000000, 0.75000000, 0, 1, 1, 90.00000000 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1589[2], "rm_clb_secondclub" );
    l_U1589[3] = sub_29818( -4072149, 28.65000000, 47.40000000, -0.35000000, 0.00000000, 0.00000000, 0.75000000, 0, 1, 1, 90.00000000 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1589[3], "rm_clb_secondclub" );
    sub_30224();
    l_U1778 = sub_30955( -1490220040, l_U1779, l_U1782, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U1778 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1778, ref g_U2568 );
        FREEZE_OBJECT_POSITION( l_U1778, 1 );
    }
    sub_355( "CR", "P_CREATE_PLACEMENTS end", 0 );
    return;
}

void sub_29818(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_30224()
{
    sub_355( "CO", "P_CREATE_S_CLB_GG_38_02", 0 );
    sub_30341( ref g_U795, g_U886, 2068951281, -1048610577, 11.63000000, 30.92000000, 0.90000000, 1.50000000, 0.00000000, g_U776, "GtaMILO_clb_Int_02" );
    sub_30470( ref g_U795 );
    return;
}

void sub_30341(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_355( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_30470(int iParam0)
{
    sub_355( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_30531( iParam0->_fU12 )) == 1)
        {
            sub_355( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_355( "CO", "has never been collected.", 0 );
        }
        if ((sub_30531( iParam0->_fU12 )) == 0)
        {
            sub_3670( iParam0->_fU0 );
            iParam0->_fU0 = sub_29818( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_355( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_355( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_30531(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_30955(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_16063( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_31268()
{
    sub_355( "MF", "P_LNG_START_VIG_04_B_CIVS - START", 0 );
    sub_355( "MF", "P_LNG_START_VIG_04_B_CIVS - END", 0 );
    return;
}

void sub_31446(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_355( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_355( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_7967( iParam1 );
        sub_31705( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_32156( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_32156( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_32388( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_32156( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_32388( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_32388( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_32156( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_32388( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_32388( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_32388( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_32156( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_32388( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_32388( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_32388( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_32388( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_33946( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_355( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_31705(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_5331( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_355( "TEH", "Ending context", 0 );
        sub_355( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_32156(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_32388(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_33946(int iParam0)
{
    sub_6984( "CHECKPOINT DATA" );
    sub_33985( iParam0->_fU4 );
    sub_34008( iParam0->_fU16 );
    sub_34008( iParam0->_fU20 );
    sub_34008( iParam0->_fU24 );
    sub_18345( iParam0->_fU28 );
    sub_18345( iParam0->_fU56 );
    sub_18345( iParam0->_fU60 );
    sub_18345( iParam0->_fU64 );
    sub_18345( iParam0->_fU68 );
    sub_18345( iParam0->_fU72 );
    sub_18345( iParam0->_fU76 );
    sub_18345( iParam0->_fU80 );
    sub_18345( iParam0->_fU84 );
    sub_18345( iParam0->_fU88 );
    sub_18345( iParam0->_fU92 );
    sub_34008( iParam0->_fU32 );
    sub_18345( iParam0->_fU36 );
    sub_18345( iParam0->_fU40 );
    sub_18345( iParam0->_fU44 );
    sub_34008( iParam0->_fU136 );
    sub_34243( iParam0->_fU140 );
    sub_18345( iParam0->_fU52 );
    sub_6984( "---nRightHolsterAttachmentEnabled: " );
    sub_18345( iParam0->_fU96 );
    sub_6984( "---nRightHolsterAttachmentToggled: " );
    sub_18345( iParam0->_fU100 );
    sub_6984( "---nLeftHolsterAttachmentEnabled: " );
    sub_18345( iParam0->_fU104 );
    sub_6984( "---nLeftHolsterAttachmentToggled: " );
    sub_18345( iParam0->_fU108 );
    sub_6984( "---nRifleHolsterAttachmentEnabled: " );
    sub_18345( iParam0->_fU112 );
    sub_6984( "---nRifleHolsterAttachmentToggled: " );
    sub_18345( iParam0->_fU116 );
    sub_6984( "---nRightHandAttachmentEnabled: " );
    sub_18345( iParam0->_fU120 );
    sub_6984( "---nRightHandAttachmentToggled: " );
    sub_18345( iParam0->_fU124 );
    sub_6984( "---nLeftHandAttachmentEnabled: " );
    sub_18345( iParam0->_fU128 );
    sub_6984( "---nLeftHandAttachmentToggled: " );
    sub_18345( iParam0->_fU132 );
    sub_18345( l_U1 );
    sub_18345( 144 );
    return;
}

void sub_33985(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_34008(unknown uParam0)
{
    return;
}

void sub_34243(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_35079()
{
    sub_355( "MF", "P_LNG_SPEECH_MRSB - START", 0 );
    sub_35132( ref l_U1892 );
    sub_35214( 0, sub_512(), "MAX", ref l_U1892, 2, 0 );
    sub_35214( 1, l_U1027[0], "MAX", ref l_U1892, 2, 0 );
    sub_35456( "SCLB_MRSB", ref l_U1892, 8, 1 );
    sub_355( "MF", "P_LNG_SPEECH_MRSB - END", 0 );
    return;
}

void sub_35132(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_35214(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_35456(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_35480( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_35480(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_35535( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_35535(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_35570( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_36064( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_35570(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_36064(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_36281()
{
    sub_355( "MF", "P_LNG_CREATE_ANDERS_DOOR - start", 0 );
    l_U1587 = sub_30955( 520427342, g_U3171._fU4, g_U3171._fU16, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U1587 ))
    {
        FREEZE_OBJECT_POSITION( l_U1587, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1587, ref g_U2568 );
    }
    sub_355( "MF", "P_LNG_CREATE_ANDERS_DOOR - end", 0 );
    return;
}

void sub_36565()
{
    sub_355( "MF", "P_LNG_CREATE_BODYGUARD_BODY - START", 0 );
    if (NOT (IS_PED_DEAD( l_U1027[0] )))
    {
        SET_PED_CORPSE_FROM_ANIM( l_U1027[0], "LEVEL_S_CLUB_CP_03", "b_out_mid_04_civ", 1.00000000, 0 );
    }
    sub_355( "MF", "P_LNG_CREATE_BODYGUARD_BODY - END", 0 );
    return;
}

void sub_36761()
{
    sub_355( "CR", "P_START_GAMEPLAY - Start", 0 );
    sub_36809();
    sub_37402( ref g_U3136, 1 );
    sub_37402( ref g_U3143, 1 );
    sub_37402( ref g_U3150, 1 );
    sub_37402( ref g_U3157, 1 );
    sub_37402( ref g_U3115, 1 );
    sub_355( "CR", "P_START_GAMEPLAY - End", 0 );
    return;
}

void sub_36809()
{
    unknown uVar2;
    unknown uVar3;

    sub_355( "CR", "P_STARTING_CS_ENGAGE - Start", 0 );
    if ((NOT (IS_PED_DEAD( sub_512() ))) AND (NOT (IS_PED_DEAD( l_U894[0] ))))
    {
        SET_PED_FLAG_LOCK_TO_COVER( l_U894[0], 0 );
        REGISTER_TARGET( l_U894[0], sub_512() );
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, 18.61000000, -5.57000000, 0.70000000, sub_512(), 1, 1.00000000, -1.00000000, -1082130432, 3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0, sub_512() );
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( l_U894[0], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    if (NOT (IS_PED_DEAD( sub_512() )))
    {
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, 17.81494000, -4.62247100, 0.79402200, 3, 20000, 1048576000, 0, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0, sub_512() );
        CLOSE_SEQUENCE_TASK( uVar3 );
    }
    if (NOT (IS_PED_DEAD( l_U894[1] )))
    {
        REGISTER_TARGET( l_U894[1], sub_512() );
        SET_LOCKED_TARGET( l_U894[1], sub_512() );
        SET_PED_AS_ONE_SHOT_KILL( l_U894[1], 1 );
        CLEAR_PED_TASKS( l_U894[1] );
        sub_37266( l_U894[1], 21.71000000, 4.20000000, 0.65000000, -16.00000000 );
        TASK_PERFORM_SEQUENCE( l_U894[1], uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    sub_355( "CR", "P_STARTING_CS_ENGAGE - End", 0 );
    return;
}

void sub_37266(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_37402(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_37414( iParam0 )) == 0)
    {
        sub_37480( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

int sub_37414(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_37480(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_37834(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_37414( iParam0 )) == 0)
    {
        sub_37480( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

void sub_37997(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_38034( (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_38034(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                sub_3468( uParam0 );
            }
        }
    }
    return;
}

void sub_38160()
{
    if (sub_38170() == 1)
    {
        sub_38287( ref l_U894 );
    }
    return;
}

void sub_38170()
{
    unknown Result;

    Result = sub_38184( ref l_U894 );
    return Result;
}

void sub_38184(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_38287(unknown uParam0)
{
    int I;

    if ((sub_38184( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_38448(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        if (IS_PED_IN_CROSSHAIR_CYLINDER( (uParam0^), uParam2, uParam3, uParam4, uParam5 ))
        {
            if (IS_CONTROL_PRESSED( 0, 6 ))
            {
                if (NOT ((sub_38516( (uParam0^), uParam1 )) == 3))
                {
                    sub_38582( (uParam0^), uParam1, 9999999 );
                }
            }
            else
            {
                sub_38643( uParam0, uParam1 );
            }
        }
        else
        {
            sub_38643( uParam0, uParam1 );
        }
    }
    return;
}

int sub_38516(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 );
    }
    return 0;
}

void sub_38582(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_SET_ACTION_INTENTION( uParam0, uParam1, uParam2, g_U665 );
    }
    return;
}

void sub_38643(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

int sub_38715(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_512() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_512() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_38801( sub_512(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_38801( sub_512(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_4189( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_4250( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_39642() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_3794( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_3838( iParam0, 0 );
                            sub_4038( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_3838( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_512() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_512(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_3838( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_4038( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_512() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_512(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_512() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_512(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_512() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_512(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_3838( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_4038( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_512() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_512() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_512() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_512(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_4038( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

int sub_38801(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

int sub_39642()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

void sub_40567(int iParam0, unknown uParam1)
{
    if ((sub_37414( iParam0 )) == 0)
    {
        sub_37480( iParam0 );
    }
    DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( iParam0->_fU0, iParam0->_fU4 ), uParam1 );
    return;
}

void sub_40689()
{
    if (NOT (IS_PED_DEAD( l_U1154[0] )))
    {
        if ((ISEQ_QUERY_ENTITY_STATE( -87549151, "GMED1", 6 )) || (ISEQ_QUERY_ENTITY_STATE( -87549151, "GMED1", 5 )))
        {
            sub_3468( l_U1154[0] );
        }
    }
    if (NOT (IS_PED_DEAD( l_U1154[1] )))
    {
        if ((ISEQ_QUERY_ENTITY_STATE( -87549151, "GMED2", 6 )) || (ISEQ_QUERY_ENTITY_STATE( -87549151, "GMED2", 5 )))
        {
            sub_3468( l_U1154[1] );
        }
    }
    if (NOT (IS_PED_DEAD( l_U1154[2] )))
    {
        if ((ISEQ_QUERY_ENTITY_STATE( -87549151, "GMED3", 6 )) || (ISEQ_QUERY_ENTITY_STATE( -87549151, "GMED3", 5 )))
        {
            sub_3468( l_U1154[2] );
        }
    }
    if (NOT (IS_PED_DEAD( l_U1154[3] )))
    {
        if ((ISEQ_QUERY_ENTITY_STATE( -87549151, "FLGE1", 6 )) || (ISEQ_QUERY_ENTITY_STATE( -87549151, "FLGE1", 5 )))
        {
            sub_3468( l_U1154[3] );
        }
    }
    if (NOT (IS_PED_DEAD( l_U1154[4] )))
    {
        if ((ISEQ_QUERY_ENTITY_STATE( -87549151, "FLGE2", 6 )) || (ISEQ_QUERY_ENTITY_STATE( -87549151, "FLGE2", 5 )))
        {
            sub_3468( l_U1154[4] );
        }
    }
    if (NOT (IS_PED_DEAD( l_U1154[5] )))
    {
        if ((ISEQ_QUERY_ENTITY_STATE( -87549151, "FLGE3", 6 )) || (ISEQ_QUERY_ENTITY_STATE( -87549151, "FLGE3", 5 )))
        {
            sub_3468( l_U1154[5] );
        }
    }
    return;
}

void sub_41199()
{
    if (NOT (IS_PED_DEAD( l_U1282[1] )))
    {
        if ((ISEQ_QUERY_ENTITY_STATE( -1591711785, "GMED4", 6 )) || (ISEQ_QUERY_ENTITY_STATE( -1591711785, "GMED4", 5 )))
        {
            sub_3468( l_U1282[1] );
        }
    }
    if (NOT (IS_PED_DEAD( l_U1282[2] )))
    {
        if ((ISEQ_QUERY_ENTITY_STATE( -1591711785, "GMED5", 6 )) || (ISEQ_QUERY_ENTITY_STATE( -1591711785, "GMED5", 5 )))
        {
            sub_3468( l_U1282[2] );
        }
    }
    if (NOT (IS_PED_DEAD( l_U1282[3] )))
    {
        if ((ISEQ_QUERY_ENTITY_STATE( -1591711785, "GMED6", 6 )) || (ISEQ_QUERY_ENTITY_STATE( -1591711785, "GMED6", 5 )))
        {
            sub_3468( l_U1282[3] );
        }
    }
    if (NOT (IS_PED_DEAD( l_U1282[7] )))
    {
        if ((ISEQ_QUERY_ENTITY_STATE( -1591711785, "FLGE4", 6 )) || (ISEQ_QUERY_ENTITY_STATE( -1591711785, "FLGE4", 5 )))
        {
            sub_3468( l_U1282[7] );
        }
    }
    if (NOT (IS_PED_DEAD( l_U1282[8] )))
    {
        if ((ISEQ_QUERY_ENTITY_STATE( -1591711785, "FLGE5", 6 )) || (ISEQ_QUERY_ENTITY_STATE( -1591711785, "FLGE5", 5 )))
        {
            sub_3468( l_U1282[8] );
        }
    }
    if (NOT (IS_PED_DEAD( l_U1282[9] )))
    {
        if ((ISEQ_QUERY_ENTITY_STATE( -1591711785, "FLGE6", 6 )) || (ISEQ_QUERY_ENTITY_STATE( -1591711785, "FLGE6", 5 )))
        {
            sub_3468( l_U1282[9] );
        }
    }
    return;
}

void sub_41725(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_38801( sub_512(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_41855()
{
    sub_355( "MF", "P_LNG_START_VIG_04_A - START", 0 );
    sub_21309( l_U894[l_U1023] );
    sub_21278( ref l_U1043 );
    if (NOT (IS_PED_DEAD( l_U894[l_U1023] )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U894[l_U1023], 0 );
        REGISTER_TARGET( l_U894[l_U1023], sub_512() );
        SET_LOCKED_TARGET( l_U894[l_U1023], sub_512() );
        TASK_COMBAT_PED( l_U894[l_U1023], sub_512() );
    }
    sub_42067( ref l_U1700, l_U894[l_U1023], 3 );
    ISEQ_REGISTER_ENTITY( 1446597130, "GMED1", l_U894[l_U1023], 0 );
    ISEQ_REGISTER_ENTITY( 1446597130, "GMED2", l_U1043[0], 0 );
    ISEQ_REGISTER_ENTITY( 1446597130, "GMED3", l_U1043[1], 0 );
    ISEQ_START( 1446597130 );
    sub_355( "MF", "P_LNG_START_VIG_04_A - END", 0 );
    return;
}

void sub_42067(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_42421()
{
    sub_355( "MF", "P_LNG_START_VIG_04_C - START", 0 );
    sub_21278( ref l_U1154 );
    ISEQ_REGISTER_ENTITY( -87549151, "GMED1", l_U1154[0], 0 );
    ISEQ_REGISTER_ENTITY( -87549151, "GMED2", l_U1154[1], 0 );
    ISEQ_REGISTER_ENTITY( -87549151, "GMED3", l_U1154[2], 0 );
    ISEQ_REGISTER_ENTITY( -87549151, "FLGE1", l_U1154[3], 0 );
    ISEQ_REGISTER_ENTITY( -87549151, "FLGE2", l_U1154[4], 0 );
    ISEQ_REGISTER_ENTITY( -87549151, "FLGE3", l_U1154[5], 0 );
    ISEQ_START( -87549151 );
    sub_355( "MF", "P_LNG_START_VIG_04_A - END", 0 );
    return;
}

void sub_42722()
{
    sub_355( "MF", "P_LNG_START_VIG_04_D_FROZEN - START", 0 );
    sub_21278( ref l_U1282 );
    sub_21309( l_U894[l_U1024] );
    sub_21309( l_U894[l_U1025] );
    ISEQ_REGISTER_ENTITY( -1591711785, "GMED1", l_U894[l_U1024], 0 );
    ISEQ_REGISTER_ENTITY( -1591711785, "GMED2", l_U894[l_U1025], 0 );
    ISEQ_REGISTER_ENTITY( -1591711785, "GMED3", l_U1282[0], 0 );
    ISEQ_REGISTER_ENTITY( -1591711785, "GMED4", l_U1282[1], 0 );
    ISEQ_REGISTER_ENTITY( -1591711785, "GMED5", l_U1282[2], 0 );
    ISEQ_REGISTER_ENTITY( -1591711785, "GMED6", l_U1282[3], 0 );
    ISEQ_REGISTER_ENTITY( -1591711785, "FLGE1", l_U1282[4], 0 );
    ISEQ_REGISTER_ENTITY( -1591711785, "FLGE2", l_U1282[5], 0 );
    ISEQ_REGISTER_ENTITY( -1591711785, "FLGE3", l_U1282[6], 0 );
    ISEQ_REGISTER_ENTITY( -1591711785, "FLGE4", l_U1282[7], 0 );
    ISEQ_REGISTER_ENTITY( -1591711785, "FLGE5", l_U1282[8], 0 );
    ISEQ_REGISTER_ENTITY( -1591711785, "FLGE6", l_U1282[9], 0 );
    ISEQ_START( -1591711785 );
    sub_355( "MF", "P_LNG_START_VIG_04_D_FROZEN - END", 0 );
    return;
}

void sub_43259()
{
    sub_355( "RJM", "P_LNG_START_VIG_04_D_BAR_PEDS", 0 );
    PED_SET_ACTION_INTENTION( l_U1282[1], 47, 1000, 0, 0, 0 );
    PED_SET_ACTION_INTENTION( l_U1282[2], 47, 1000, 0, 0, 0 );
    PED_SET_ACTION_INTENTION( l_U1282[3], 47, 1000, 0, 0, 0 );
    PED_SET_ACTION_INTENTION( l_U1282[7], 47, 1000, 0, 0, 0 );
    PED_SET_ACTION_INTENTION( l_U1282[8], 47, 1000, 0, 0, 0 );
    PED_SET_ACTION_INTENTION( l_U1282[9], 47, 1000, 0, 0, 0 );
    return;
}

void sub_43483()
{
    unknown uVar2;

    sub_355( "CR", "P_UPPER_FLOOR_CS_ENGAGE - Start", 0 );
    sub_21309( l_U894[l_U1022] );
    sub_21309( l_U894[l_U1023] );
    if (NOT (IS_PED_DEAD( sub_512() )))
    {
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, 12.42508000, 31.27825000, 0.68724100, 3, 20000, 1048576000, 0, 0 );
        TASK_COMBAT_PED( 0, sub_512() );
        CLOSE_SEQUENCE_TASK( uVar2 );
    }
    if (NOT (IS_PED_DEAD( l_U894[l_U1022] )))
    {
        REGISTER_TARGET( l_U894[l_U1022], sub_512() );
        SET_LOCKED_TARGET( l_U894[l_U1022], sub_512() );
        TASK_PERFORM_SEQUENCE( l_U894[l_U1022], uVar2 );
        sub_42067( ref l_U1699, l_U894[l_U1022], 1 );
    }
    CLEAR_SEQUENCE_TASK( uVar2 );
    if (NOT (IS_PED_DEAD( sub_512() )))
    {
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0, sub_512() );
        CLOSE_SEQUENCE_TASK( uVar2 );
    }
    CLEAR_SEQUENCE_TASK( uVar2 );
    if (NOT (IS_PED_DEAD( sub_512() )))
    {
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, 15.10369000, 24.48327000, -0.52216100, 3, 20000, 1048576000, 0, 0 );
        TASK_COMBAT_PED( 0, sub_512() );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar2 );
    }
    CLEAR_SEQUENCE_TASK( uVar2 );
    sub_355( "CR", "P_UPPER_FLOOR_CS_ENGAGE - End", 0 );
    return;
}

void sub_44086()
{
    sub_355( "MF", "P_LNG_START_VIG_04_D_BOOTH_AND_CS - START", 0 );
    PED_SET_ACTION_INTENTION( l_U894[l_U1024], 47, 1000, 0, 0, 0 );
    PED_SET_ACTION_INTENTION( l_U894[l_U1025], 47, 1000, 0, 0, 0 );
    PED_SET_ACTION_INTENTION( l_U1282[0], 47, 1000, 0, 0, 0 );
    PED_SET_ACTION_INTENTION( l_U1282[4], 47, 1000, 0, 0, 0 );
    PED_SET_ACTION_INTENTION( l_U1282[5], 47, 1000, 0, 0, 0 );
    PED_SET_ACTION_INTENTION( l_U1282[6], 47, 1000, 0, 0, 0 );
    sub_355( "MF", "P_LNG_START_VIG_04_D_BOOTH_AND_CS - END", 0 );
    return;
}

void sub_44393()
{
    if (NOT l_U1716)
    {
        if (NOT (IS_PED_DEAD( l_U894[l_U1024] )))
        {
            if ((ISEQ_QUERY_ENTITY_STATE( -1591711785, "GMED1", 6 )) || (ISEQ_QUERY_ENTITY_STATE( -1591711785, "GMED1", 5 )))
            {
                sub_355( "RJM", "VIG_04D GMED1 is done playing his vignette, engage the player", 0 );
                l_U1716 = 1;
                REGISTER_TARGET( l_U894[l_U1024], sub_512() );
                SET_LOCKED_TARGET( l_U894[l_U1024], sub_512() );
                TASK_COMBAT_PED( l_U894[l_U1024], sub_512() );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U894[l_U1024], 0 );
            }
        }
    }
    if (NOT l_U1717)
    {
        if (NOT (IS_PED_DEAD( l_U894[l_U1025] )))
        {
            if ((ISEQ_QUERY_ENTITY_STATE( -1591711785, "GMED2", 6 )) || (ISEQ_QUERY_ENTITY_STATE( -1591711785, "GMED2", 5 )))
            {
                sub_355( "RJM", "VIG_04D GMED2 is done playing his vignette, engage the player", 0 );
                l_U1717 = 1;
                REGISTER_TARGET( l_U894[l_U1025], sub_512() );
                SET_LOCKED_TARGET( l_U894[l_U1025], sub_512() );
                TASK_COMBAT_PED( l_U894[l_U1025], sub_512() );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U894[l_U1025], 0 );
            }
        }
    }
    if (NOT l_U1718)
    {
        if ((l_U1717) AND (l_U1716))
        {
            if (sub_41725( ref l_U1615, 0 ))
            {
                sub_355( "RJM", "Unlocking guys from cover", 0 );
                SET_PED_FLAG_LOCK_TO_COVER( l_U894[l_U1024], 0 );
                SET_PED_FLAG_LOCK_TO_COVER( l_U894[l_U1025], 0 );
                l_U1718 = 1;
            }
        }
    }
    return;
}

void sub_45055()
{
    if (NOT (IS_PED_DEAD( l_U1282[0] )))
    {
        if ((ISEQ_QUERY_ENTITY_STATE( -1591711785, "GMED3", 6 )) || (ISEQ_QUERY_ENTITY_STATE( -1591711785, "GMED3", 5 )))
        {
            sub_3468( l_U1282[0] );
        }
    }
    if (NOT (IS_PED_DEAD( l_U1282[4] )))
    {
        if ((ISEQ_QUERY_ENTITY_STATE( -1591711785, "FLGE1", 6 )) || (ISEQ_QUERY_ENTITY_STATE( -1591711785, "FLGE1", 5 )))
        {
            sub_3468( l_U1282[4] );
        }
    }
    if (NOT (IS_PED_DEAD( l_U1282[5] )))
    {
        if ((ISEQ_QUERY_ENTITY_STATE( -1591711785, "FLGE2", 6 )) || (ISEQ_QUERY_ENTITY_STATE( -1591711785, "FLGE2", 5 )))
        {
            sub_3468( l_U1282[5] );
        }
    }
    if (NOT (IS_PED_DEAD( l_U1282[6] )))
    {
        if ((ISEQ_QUERY_ENTITY_STATE( -1591711785, "FLGE3", 6 )) || (ISEQ_QUERY_ENTITY_STATE( -1591711785, "FLGE3", 5 )))
        {
            sub_3468( l_U1282[6] );
        }
    }
    return;
}

void sub_45427()
{
    sub_355( "MF", "P_LNG_START_VIG_04_E - START", 0 );
    sub_21278( ref l_U1445 );
    sub_21309( l_U894[l_U1022] );
    ISEQ_REGISTER_ENTITY( -1921859460, "GMED1", l_U894[l_U1022], 0 );
    ISEQ_REGISTER_ENTITY( -1921859460, "GMED2", l_U1445[0], 0 );
    ISEQ_START( -1921859460 );
    sub_355( "MF", "P_LNG_START_VIG_04_E - END", 0 );
    return;
}

void sub_45650()
{
    sub_355( "MF", "P_LNG_START_VIG_04_F - START", 0 );
    sub_21309( l_U894[l_U1026] );
    sub_21278( ref l_U1482 );
    if ((NOT (IS_PED_DEAD( sub_512() ))) AND (NOT (IS_PED_DEAD( l_U894[l_U1026] ))))
    {
        REGISTER_TARGET( l_U894[l_U1026], sub_512() );
        TASK_COMBAT_PED( l_U894[l_U1026], sub_512() );
    }
    sub_16334( 1134570712, 1 );
    ISEQ_REGISTER_ENTITY( 1134570712, "GMED1", l_U1482[0], 0 );
    ISEQ_REGISTER_ENTITY( 1134570712, "FLGE1", l_U1482[1], 0 );
    ISEQ_START( 1134570712 );
    sub_355( "MF", "P_LNG_START_VIG_04_F - END", 0 );
    return;
}

void sub_46332()
{
    unknown uVar2;

    sub_355( "CR", "P_STARTING_CS_SECONDARY_COMBAT - Start", 0 );
    if (NOT (IS_PED_DEAD( l_U894[0] )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( l_U894[0], 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U894[0], 0 );
    }
    if (NOT (IS_PED_DEAD( sub_512() )))
    {
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, 13.90000000, 23.66000000, -0.52000000, 4, 20000, 1048576000, 0, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar2 );
    }
    if (NOT (IS_PED_DEAD( l_U894[1] )))
    {
        TASK_PERFORM_SEQUENCE( l_U894[1], uVar2 );
        sub_42067( ref l_U1700, l_U894[1], 3 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    sub_355( "CR", "P_STARTING_CS_SECONDARY_COMBAT - End", 0 );
    return;
}

void sub_46673()
{
    unknown uVar2;

    sub_355( "CR", "P_LOWER_FLOOR_CS_ENGAGE - Start", 0 );
    sub_21309( l_U894[6] );
    sub_21309( l_U894[7] );
    if (NOT (IS_PED_DEAD( l_U894[l_U1022] )))
    {
        SET_PED_COMBAT_ATTRIBUTES( l_U894[l_U1022], 1, 0 );
        REGISTER_TARGET( l_U894[l_U1022], sub_512() );
        SET_LOCKED_TARGET( l_U894[l_U1022], sub_512() );
    }
    if (NOT (IS_PED_DEAD( sub_512() )))
    {
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, 18.22180000, 47.22741000, -1.24236400, 3, 20000, 1048576000, 0, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_MOVE_TO_COVER( 0, "GenCover", "21C6B18_84CA0313_Popover1", 0 );
        CLOSE_SEQUENCE_TASK( uVar2 );
    }
    if (NOT (IS_PED_DEAD( l_U894[6] )))
    {
        SET_PED_SUGGESTED_COVER_POINT( l_U894[6], "GenCover", "21C6B18_84CA0313_Popover1" );
        TASK_PERFORM_SEQUENCE( l_U894[6], uVar2 );
        REGISTER_TARGET( l_U894[6], sub_512() );
        SET_LOCKED_TARGET( l_U894[6], sub_512() );
        sub_42067( ref l_U1701, l_U894[6], 3 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    if (NOT (IS_PED_DEAD( sub_512() )))
    {
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_GO_STRAIGHT_TO_COORD( 0, 15.72436000, 49.54628000, -1.21312100, 4, 20000 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar2 );
    }
    if (NOT (IS_PED_DEAD( l_U894[7] )))
    {
        TASK_PERFORM_SEQUENCE( l_U894[7], uVar2 );
        REGISTER_TARGET( l_U894[7], sub_512() );
        SET_LOCKED_TARGET( l_U894[7], sub_512() );
        sub_42067( ref l_U1701, l_U894[7], 3 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    sub_355( "CR", "P_LOWER_FLOOR_CS_ENGAGE - End", 0 );
    return;
}

void sub_47402(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

int sub_47433(unknown uParam0, boolean bParam1)
{
    if ((sub_23187( uParam0, 0 )) == 1)
    {
        if (NOT bParam1)
        {
            if ((sub_38184( uParam0 )) == 0)
            {
                return 1;
            }
        }
        if (bParam1)
        {
            if ((sub_47493( uParam0 )) == (uParam0^))
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_47493(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

int sub_47697(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND ((sub_47709( iParam0 )) == 0)))
    {
        if ((sub_39642() == 1) AND (((IS_PED_RELOADING( sub_512() )) == 0) AND (((IS_PED_GETTING_UP( sub_512() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP( sub_512() )) == 0) AND (((IS_PED_IN_COVER( sub_512() )) == 0) AND (((IS_PED_DUCKING( sub_512() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_47709(int iParam0)
{
    return iParam0->_fU56;
}

void sub_47931(unknown uParam0, unknown uParam1)
{
    sub_35132( uParam1 );
    sub_35214( 0, sub_512(), "MAX", uParam1, 2, 0 );
    sub_35214( 1, sub_512(), "MAX", uParam1, 2, 0 );
    sub_35456( uParam0, uParam1, 8, 1 );
    return;
}

void sub_48022()
{
    if ((sub_1224( ref g_U3340 )) == 0)
    {
        if ((sub_47433( ref l_U894, 1 )) == 1)
        {
            sub_1328( ref g_U3350, 25000, 1, 0 );
            sub_1462( ref g_U3350 );
            sub_1328( ref g_U3340, g_U3349, 1, 0 );
            sub_1462( ref g_U3340 );
        }
    }
    if (NOT (IS_PED_DEAD( sub_512() )))
    {
        if (NOT (IS_ANY_SPEECH_PLAYING( sub_512() )))
        {
            if ((sub_1580( ref g_U3350 )) == 1)
            {
                sub_355( "MF", "Playing warning monologue...", 0 );
                sub_47931( "SCLB_MPDCS", ref g_U3361 );
            }
        }
    }
    if ((sub_1580( ref g_U3340 )) == 1)
    {
        sub_3794( ref l_U1787, 0 );
        if (sub_48255() == 7)
        {
            l_U36 = 2;
            l_U848 = 12;
            sub_355( "SP", "eCheckpointState = CP_HANDLE_MID_02_FAIL1", 0 );
        }
        else if (sub_48255() == 5)
        {
            l_U42 = 2;
            l_U848 = 13;
            sub_355( "SP", "eCheckpointState = CP_HANDLE_MID_02_FAIL7", 0 );
        }
        else if (sub_48255() == 6)
        {
            l_U43 = 2;
            l_U848 = 14;
            sub_355( "SP", "eCheckpointState = CP_HANDLE_MID_02_FAIL8", 0 );
        }
        else
        {
            sub_355( "SP", "Player is outside of any fail trigger... defaulting...", 0 );
            l_U42 = 2;
            l_U848 = 13;
            sub_355( "SP", "eCheckpointState = CP_HANDLE_MID_02_FAIL7", 0 );
        };;;
    }
    return;
}

int sub_48255()
{
    sub_355( "SP", "F_WHERE_DID_MAX_FAIL", 0 );
    if (((sub_48305( l_U419 )) == 1) || (((sub_48305( l_U398 )) == 1) || (((sub_48305( l_U377 )) == 1) || ((sub_48305( l_U356 )) == 1))))
    {
        return 1;
    }
    else if (((sub_48305( l_U461 )) == 1) || ((sub_48305( l_U440 )) == 1))
    {
        return 2;
    }
    else if (((sub_48305( l_U503 )) == 1) || ((sub_48305( l_U482 )) == 1))
    {
        return 3;
    }
    else if (((sub_48305( l_U545 )) == 1) || ((sub_48305( l_U524 )) == 1))
    {
        return 4;
    }
    else if (((sub_48305( l_U587 )) == 1) || ((sub_48305( l_U566 )) == 1))
    {
        return 5;
    }
    else if (((sub_48305( l_U629 )) == 1) || ((sub_48305( l_U608 )) == 1))
    {
        return 6;
    }
    else if (((sub_48305( l_U671 )) == 1) || ((sub_48305( l_U650 )) == 1))
    {
        return 7;
    }
    else if ((sub_48305( l_U692 )) == 1)
    {
        return 8;
    }
    else if (((sub_48305( l_U734 )) == 1) || ((sub_48305( l_U713 )) == 1))
    {
        return 9;
    }
    else if (((sub_48305( l_U776 )) == 1) || ((sub_48305( l_U755 )) == 1))
    {
        return 10;
    };;;;;;;;;;
    return 0;
}

void sub_48305(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_38801( sub_512(), uParam0 );
}

int sub_49253()
{
    if (GET_PAYNEKILLER_AMT() > g_U3539)
    {
        sub_355( "MF", "Player picked up Payne Killers!", 0 );
        sub_18345( g_U3539 );
        sub_18345( GET_PAYNEKILLER_AMT() );
        g_U3539 = GET_PAYNEKILLER_AMT();
        return 1;
    }
    g_U3539 = GET_PAYNEKILLER_AMT();
    return 0;
}

void sub_49686()
{
    sub_355( "MF", "P_LNG_SPEECH_MAOLCD - START", 0 );
    sub_47931( "SCLB_MAOLCD", ref l_U1902 );
    sub_355( "MF", "P_LNG_SPEECH_MAOLCD - END", 0 );
    return;
}

void sub_49876()
{
    sub_355( "MF", "P_LNG_SPEECH_MVOGB - START", 0 );
    sub_47931( "SCLB_MVOGB", ref l_U1922 );
    sub_355( "MF", "P_LNG_SPEECH_MVOGB - END", 0 );
    return;
}

int sub_50112()
{
    g_U1102 = 1;
    sub_50129( 0 );
    sub_50226( ref l_U1902, 0 );
    sub_50226( ref l_U1892, 0 );
    sub_50226( ref l_U1873, 0 );
    sub_50226( ref l_U1922, 0 );
    return 1;
}

void sub_50129(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

void sub_50226(int iParam0, unknown uParam1)
{
    if (NOT (sub_50240( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

boolean sub_50240(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_50413()
{
    sub_355( "MF", "P_LNG_02_NC_RANDOM_REGISTER - START", 0 );
    if (NOT (IS_PED_DEAD( sub_512() )))
    {
        CUTSCENE_REGISTER_ISEQ( 1396472282 );
        ISEQ_REGISTER_ENTITY( 1396472282, "player", sub_512(), 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( sub_512(), 0, 0 ), "W_PI_Clt1911_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( sub_512(), 9.12456500, 49.33229000, -1.21169500, 19.07391000 );
        if (DOES_OBJECT_EXIST( DOOR_FIND_CLOSEST( g_U3171._fU0, g_U3171._fU4 ) ))
        {
            SET_OBJECT_VISIBLE( DOOR_FIND_CLOSEST( g_U3171._fU0, g_U3171._fU4 ), 0 );
        }
    }
    sub_355( "MF", "P_LNG_02_NC_RANDOM_REGISTER - END", 0 );
    return;
}

void sub_50724()
{
    if (l_U1559._fU52)
    {
        CAMERA_SNAP_POINT_AT_COORD( 6.92000000, 53.16000000, 0.44000000 );
        sub_3749( l_U1587 );
    }
    if (NOT l_U1586)
    {
        if ((IS_SCREEN_FADING_OUT()) || (GET_CUTSCENE_TIME_MS() > 45500))
        {
            sub_355( "MF", "Starting player input gait...", 0 );
            SIMULATE_PLAYER_INPUT_GAIT( sub_534(), 2, 1100, 0 );
            l_U1586 = 1;
        }
    }
    return;
}

int sub_50891()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    g_U1102 = 0;
    sub_1328( ref g_U3350, 25000, 1, 0 );
    sub_1462( ref g_U3350 );
    sub_1328( ref g_U3340, g_U3349, 1, 0 );
    sub_1462( ref g_U3340 );
    sub_47931( "SCLB_MXFRENCA", ref uVar2 );
    CAMERA_CLEAR_POINT_AT_TARGET();
    if (DOES_OBJECT_EXIST( DOOR_FIND_CLOSEST( g_U3171._fU0, g_U3171._fU4 ) ))
    {
        SET_OBJECT_VISIBLE( DOOR_FIND_CLOSEST( g_U3171._fU0, g_U3171._fU4 ), 1 );
        sub_51053( ref g_U3171, 1 );
        sub_37402( ref g_U3171, 1 );
    }
    else
    {
        sub_355( "MF", "dsLoungeBathroomAndersLocked  DOES NOT EXIST", 0 );
        SCRIPT_ASSERT( "dsLoungeBathroomAndersLocked  DOES NOT EXIST", 0 );
    }
    if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "sclb_Anders1" )))
    {
        sub_355( "MF", "Setting 'sclb_Anders1' to FOUND...", 0 );
        FOUND_EXPLORATION_ITEM( "sclb_Anders1" );
    }
    return 1;
}

void sub_51053(int iParam0, int iParam1)
{
    if ((sub_37414( iParam0 )) == 0)
    {
        sub_37480( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

void sub_51417(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    sub_355( "MSWW", "CutSys_CreateStandaloneCutscene", "###" );
    return sub_26695( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam7, 0, 51494, 51512, 0, 26659, 26675, uParam6 );
}

void sub_51494()
{
    return;
}

int sub_51512()
{
    return 1;
}

void sub_51842(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 = sub_512();
    sub_37266( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

void sub_52038(unknown uParam0, unknown uParam1)
{
    sub_1328( uParam0, uParam1, 1, 0 );
    sub_1462( uParam0 );
    return;
}

int sub_52253()
{
    vector vVar2;
    vector vVar5;
    vector vVar8;
    vector vVar11;
    vector vVar14;
    float fVar17;

    vVar2 = {-0.47300000, 55.73700000, -1.21169500};
    vVar5 = {0.00000000, 0.00000000, 0.00000000};
    vVar8 = {0.09100000, 0.03900000, -0.03400000};
    vVar11 = {1.60000000, -2.50000000, -3.10000000};
    vVar14 = {9.59500000, 52.62800000, -1.20700000};
    fVar17 = -180.00000000;
    switch (l_U36)
    {
        case 0: break;
        case 2:
        sub_355( "SP", "eMid02Fail1State = MIDSCENE_SETUP", 0 );
        sub_28262( 1, 0, 0, 1 );
        DO_SCREEN_FADE_OUT( 500 );
        l_U36 = 1;
        sub_355( "SP", "eMid02Fail1State = MIDSCENE_FIRST_FRAME", 0 );
        break;
        case 1:
        if (IS_SCREEN_FADED_OUT())
        {
            sub_37266( sub_512(), vVar14, fVar17 );
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_512(), 1, 0 ) )) AND (NOT (IS_PED_DEAD( sub_512() ))))
            {
                REMOVE_PED_WEAPON( sub_512(), GET_WEAPON_FROM_HAND( sub_512(), 1, 0 ) );
            }
            sub_3749( l_U806 );
            l_U806 = sub_30955( g_U2479, vVar2, vVar5, 0, 0, 0 );
            if ((DOES_OBJECT_EXIST( l_U806 )) == 1)
            {
                if ((IS_PED_DEAD( sub_512() )) == 0)
                {
                    ATTACH_OBJECT_TO_PED( l_U806, sub_512(), 25310, vVar8, vVar11, 0 );
                }
            }
            ISEQ_REGISTER_ENTITY( -1218938405, "player", sub_512(), 0 );
            ISEQ_START( -1218938405 );
            l_U36 = 3;
        }
        break;
        case 3:
        sub_355( "SP", "eMid02Fail1State = MIDSCENE_FIRST_FRAME", 0 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_FAIL", "MID_02_NC_FAIL_BATHROOM_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        DO_SCREEN_FADE_IN( 500 );
        sub_52956();
        l_U36 = 4;
        sub_355( "SP", "eMid02Fail1State = MIDSCENE_PLAYING", 0 );
        break;
        case 4:
        if (NOT (sub_1224( ref l_U797 )))
        {
            if (NOT sub_53269())
            {
                sub_355( "MF", "Max is finished talking, starting fade delay timer...", 0 );
                sub_1328( ref l_U797, 800, 1, 0 );
                sub_1462( ref l_U797 );
            }
        }
        if ((CAMERA_ANIMATED_CURRENT_TIME() > ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_CLUB_FAIL", "MID_02_NC_FAIL_BATHROOM_CAM" )) - 100)) || (sub_1580( ref l_U797 )))
        {
            sub_53537( "MISS_DEATH_FAIL_FAST_01A", 0 );
            l_U36 = 5;
        }
        break;
        case 5:
        CAMERA_ANIMATED_STOP( 3000, 0 );
        sub_3749( l_U806 );
        ISEQ_UNREGISTER_ENTITY( -1218938405, "player" );
        ISEQ_TERMINATE( -1218938405 );
        l_U36 = 0;
        sub_355( "SP", "eMid02Fail1State = MIDSCENE_IDLE", 0 );
        return 1;
        break;
    }
    return 0;
}

void sub_52956()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;
    string sVar13;

    sub_355( "MF", "P_FAIL_PLAY_PHONE_DIALOGUE_POST_MID_04 - START", 0 );
    iVar12 = GET_RANDOM_INT_IN_RANGE( 0, 3 );
    if (iVar12 == 0)
    {
        sVar13 = "SCLB_MID02C";
    }
    else if (iVar12 == 1)
    {
        sVar13 = "SCLB_MID02F";
    }
    else
    {
        sVar13 = "SCLB_MID02J";
    }
    sub_47931( sVar13, ref uVar2 );
    sub_355( "MF", "P_FAIL_PLAY_PHONE_DIALOGUE_POST_MID_04 - END", 0 );
    return;
}

void sub_53269()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

void sub_53537(unknown uParam0, boolean bParam1)
{
    sub_2846( ref l_U35 );
    l_U35 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
    SETUP_BULLET_CAMERA_SCENE( l_U35, uParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
    if (bParam1)
    {
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    }
    return;
}

int sub_53940()
{
    vector vVar2;
    float fVar5;
    vector vVar6;
    vector vVar9;
    vector vVar12;
    vector vVar15;

    vVar2 = {13.41500000, 24.86300000, -0.51200000};
    fVar5 = -180.00000000;
    vVar6 = {-0.47300000, 55.73700000, -1.21169500};
    vVar9 = {0.00000000, 0.00000000, 0.00000000};
    vVar12 = {0.09100000, 0.03900000, -0.03400000};
    vVar15 = {1.60000000, -2.50000000, -3.10000000};
    switch (l_U42)
    {
        case 0: break;
        case 2:
        sub_355( "SP", "eMid02Fail7State = MIDSCENE_SETUP", 0 );
        sub_28262( 1, 0, 0, 1 );
        DO_SCREEN_FADE_OUT( 500 );
        l_U42 = 1;
        sub_355( "SP", "eMid02Fail7State = MIDSCENE_START_FADE", 0 );
        break;
        case 1:
        if (IS_SCREEN_FADED_OUT())
        {
            sub_37266( sub_512(), vVar2, fVar5 );
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_512(), 1, 0 ) )) AND (NOT (IS_PED_DEAD( sub_512() ))))
            {
                REMOVE_PED_WEAPON( sub_512(), GET_WEAPON_FROM_HAND( sub_512(), 1, 0 ) );
            }
            ISEQ_REGISTER_ENTITY( 1830675819, "player", sub_512(), 0 );
            ISEQ_START( 1830675819 );
            l_U42 = 3;
            sub_3749( l_U806 );
            l_U806 = sub_30955( g_U2479, vVar6, vVar9, 0, 0, 0 );
            if ((DOES_OBJECT_EXIST( l_U806 )) == 1)
            {
                if ((IS_PED_DEAD( sub_512() )) == 0)
                {
                    ATTACH_OBJECT_TO_PED( l_U806, sub_512(), 25310, vVar12, vVar15, 0 );
                }
            }
        }
        break;
        case 3:
        sub_355( "SP", "eMid02Fail7State = MIDSCENE_FIRST_FRAME", 0 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_FAIL", "MID_02_NC_FAIL_ORBITAS1_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        DO_SCREEN_FADE_IN( 500 );
        sub_52956();
        l_U42 = 4;
        sub_355( "SP", "eMid02Fail6State = MIDSCENE_PLAYING", 0 );
        break;
        case 4:
        if (NOT (sub_1224( ref l_U797 )))
        {
            if (NOT sub_53269())
            {
                sub_355( "MF", "Max is finished talking, starting fade delay timer...", 0 );
                sub_1328( ref l_U797, 800, 1, 0 );
                sub_1462( ref l_U797 );
            }
        }
        if ((CAMERA_ANIMATED_CURRENT_TIME() > ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_CLUB_FAIL", "MID_02_NC_FAIL_ORBITAS1_CAM" )) - 100)) || (sub_1580( ref l_U797 )))
        {
            sub_53537( "MISS_DEATH_FAIL_FAST_01A", 0 );
            l_U42 = 5;
            sub_355( "SP", "eMid02Fail7State = MIDSCENE_END_FADE", 0 );
        }
        break;
        case 5:
        CAMERA_ANIMATED_STOP( 3000, 0 );
        sub_3749( l_U806 );
        ISEQ_UNREGISTER_ENTITY( 1830675819, "player" );
        ISEQ_TERMINATE( 1830675819 );
        l_U42 = 0;
        sub_355( "SP", "eMid02Fail7State = MIDSCENE_IDLE", 0 );
        return 1;
        break;
    }
    return 0;
}

int sub_55196()
{
    vector vVar2;
    float fVar5;
    vector vVar6;
    vector vVar9;
    vector vVar12;
    vector vVar15;

    vVar2 = {17.85900000, 43.53000000, -1.18700000};
    fVar5 = -180.00000000;
    vVar6 = {-0.47300000, 55.73700000, -1.21169500};
    vVar9 = {0.00000000, 0.00000000, 0.00000000};
    vVar12 = {0.09100000, 0.03900000, -0.03400000};
    vVar15 = {1.60000000, -2.50000000, -3.10000000};
    switch (l_U43)
    {
        case 0: break;
        case 2:
        sub_355( "SP", "eMid02Fail8State = MIDSCENE_SETUP", 0 );
        sub_28262( 1, 0, 0, 1 );
        DO_SCREEN_FADE_OUT( 500 );
        l_U43 = 1;
        sub_355( "SP", "eMid02Fail8State = MIDSCENE_START_FADE", 0 );
        break;
        case 1:
        if (IS_SCREEN_FADED_OUT())
        {
            sub_37266( sub_512(), vVar2, fVar5 );
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_512(), 1, 0 ) )) AND (NOT (IS_PED_DEAD( sub_512() ))))
            {
                REMOVE_PED_WEAPON( sub_512(), GET_WEAPON_FROM_HAND( sub_512(), 1, 0 ) );
            }
            sub_3749( l_U806 );
            l_U806 = sub_30955( g_U2479, vVar6, vVar9, 0, 0, 0 );
            if ((DOES_OBJECT_EXIST( l_U806 )) == 1)
            {
                if ((IS_PED_DEAD( sub_512() )) == 0)
                {
                    ATTACH_OBJECT_TO_PED( l_U806, sub_512(), 25310, vVar12, vVar15, 0 );
                }
            }
            ISEQ_REGISTER_ENTITY( 1591920885, "player", sub_512(), 0 );
            ISEQ_START( 1591920885 );
            l_U43 = 3;
        }
        break;
        case 3:
        sub_355( "SP", "eMid02Fail8State = MIDSCENE_FIRST_FRAME", 0 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_FAIL", "MID_02_NC_FAIL_ORBITAS2_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        DO_SCREEN_FADE_IN( 500 );
        sub_52956();
        l_U43 = 4;
        sub_355( "SP", "eMid02Fail8State = MIDSCENE_PLAYING", 0 );
        break;
        case 4:
        if (NOT (sub_1224( ref l_U797 )))
        {
            if (NOT sub_53269())
            {
                sub_355( "MF", "Max is finished talking, starting fade delay timer...", 0 );
                sub_1328( ref l_U797, 800, 1, 0 );
                sub_1462( ref l_U797 );
            }
        }
        if ((CAMERA_ANIMATED_CURRENT_TIME() > ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_CLUB_FAIL", "MID_02_NC_FAIL_ORBITAS2_CAM" )) - 100)) || (sub_1580( ref l_U797 )))
        {
            sub_53537( "MISS_DEATH_FAIL_FAST_01A", 0 );
            l_U43 = 5;
            sub_355( "SP", "eMid02Fail8State = MIDSCENE_END_FADE", 0 );
        }
        break;
        case 5:
        CAMERA_ANIMATED_STOP( 3000, 0 );
        sub_3749( l_U806 );
        ISEQ_UNREGISTER_ENTITY( 1591920885, "player" );
        ISEQ_TERMINATE( 1591920885 );
        l_U43 = 0;
        sub_355( "SP", "eMid02Fail8State = MIDSCENE_IDLE", 0 );
        return 1;
        break;
    }
    return 0;
}

void sub_56544()
{
    if (NOT l_U1984)
    {
        START_WIDGET_GROUP( "Script Variable Tuner" );
        ADD_WIDGET_INT_SLIDER( "Animated Cam Interp Time", ref l_U1755, 0, 10000, 100 );
        ADD_WIDGET_BOOL( "Activate Giovanna Dress Placement Debug", ref l_U1985 );
        sub_56727( ref l_U1779, "Giovanna Dress Loc", 0.01000000 );
        sub_56727( ref l_U1782, "Giovanna Dress Rot", 0.10000000 );
        START_WIDGET_GROUP( "MID_04 Blend Out Tuner" );
        ADD_WIDGET_INT_SLIDER( "Input Start Time", ref l_U1776, 0, 3000, 100 );
        ADD_WIDGET_INT_SLIDER( "Input Gait Length", ref l_U1777, 0, 2000, 100 );
        ADD_WIDGET_INT_SLIDER( "Camera Stop Time", ref l_U1755, 0, 3000, 100 );
        ADD_WIDGET_INT_SLIDER( "Camera Interp Duration", ref l_U1756, 0, 3000, 100 );
        STOP_WIDGET_GROUP();
        ADD_WIDGET_BOOL( "Force Anders Cutscene", ref l_U1986 );
        STOP_WIDGET_GROUP();
        l_U1984 = 1;
    }
    if (l_U1985)
    {
        if (DOES_OBJECT_EXIST( l_U1778 ))
        {
            SET_OBJECT_COORDS( l_U1778, l_U1779 );
            SET_OBJECT_ROTATION( l_U1778, l_U1782 );
        }
    }
    if (l_U1986)
    {
        sub_3434( ref l_U894 );
        l_U848 = 11;
        sub_51417( ref l_U1559, "02_NC_RANDOM1_concat", 50112, 50413, 50724, 50891, 250, 0 );
        l_U1559._fU4 = 2;
        l_U1986 = 0;
        l_U1586 = 0;
    }
    return;
}

void sub_56727(int iParam0, unknown uParam1, unknown uParam2)
{
    START_WIDGET_GROUP( uParam1 );
    ADD_WIDGET_FLOAT_SLIDER( "x", iParam0 + 0, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "y", iParam0 + 4, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "z", iParam0 + 8, 60536, 5000, uParam2 );
    STOP_WIDGET_GROUP();
    return;
}

void sub_57340()
{
    sub_355( "CR", "P_UNLOAD_ASSETS", 0 );
    sub_23449( g_U2461 );
    sub_23449( g_U886 );
    sub_23449( g_U2465 );
    sub_23449( g_U2472 );
    sub_23449( g_U2470 );
    sub_23449( -1490220040 );
    sub_23449( 520427342 );
    sub_57454( 406496141 );
    sub_57454( 1194438308 );
    sub_23449( -1409914275 );
    sub_57512( "EXPL_CAM" );
    sub_57512( "LEVEL_S_CLUB_CP_03" );
    return;
}

void sub_57454(unknown uParam0)
{
    SET_WEAPON_AS_NO_LONGER_NEEDED( uParam0 );
    return;
}

void sub_57512(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}


void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U21 = 0;
    l_U22 = 0;
    l_U23 = 1500;
    l_U33 = -1;
    l_U34 = {64536, 64536, 64536};
    l_U46 = 150;
    l_U47 = 0.02000000;
    l_U55 = 0;
    l_U85 = 0;
    l_U267 = {0, 2, -0.50000000};
    l_U270 = 45;
    l_U272 = 0;
    l_U314 = 0;
    l_U316 = 1;
    l_U317 = 0;
    l_U1206 = 1500;
    l_U1218 = {21.92000000, 58.28000000, 81.22200000};
    l_U1221 = {0.00000000, 0.00000000, 35.89000000};
    l_U2064 = 5000;
    l_U2065 = {-20.72136000, 35.20417000, 84.99680000};
    sub_265( "GA", "Script s_club_roof.sc is starting up...", 0 );
    sub_314();
    if (g_U891 == 14)
    {
        l_U314 = 11;
        sub_4676( ref l_U1129, "02_05_NC_CONCAT", 495, 3947, 4230, 4657, 0, 1 );
        l_U1129._fU64 = 0;
        l_U1129._fU4 = 2;
        sub_5106();
        sub_11106( -3.60000000, 72.10000000, 78.86000000, 31.00000000, 0, 0 );
        WAIT( 100 );
    }
    else
    {
        l_U314 = 1;
    }
    while (NOT IS_EXITFLAG_SET())
    {
        sub_11261();
        if (l_U317 == 0)
        {
            sub_18025();
        }
        sub_61903();
        WAIT( 0 );
    }
    sub_506( 0 );
    sub_1492();
    if (g_U892 == 13)
    {
        SET_HIGHEST_ARCADE_LEVEL_UNLOCKED( 1 );
        SWITCH_TO_LEVEL_NAME( "s_stad" );
        SET_EXITFLAG_RESPONSE();
        SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_club_roof" );
    }
    sub_265( "SP", "Script s_club_roof.sc is terminating...", 0 );
    return;
}

void sub_265(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_314()
{
    sub_265( "GA", "P_RT_FILL_SCRIPT_ARRAYS start", 0 );
    l_U310[0] = 406496141;
    l_U310[1] = 1194438308;
    l_U310[2] = -168327769;
    sub_265( "GA", "P_RT_FILL_SCRIPT_ARRAYS end", 0 );
    return;
}

int sub_495()
{
    sub_506( 0 );
    sub_1492();
    AUDIO_MUSIC_SUSPEND( 16000 );
    l_U1177 = sub_3501( 1049690760, -14.46785000, 116.70220000, 77.28619000, 0.00000000, 0, 0, 0 );
    SILENCE_VEHICLE( l_U1177, 1 );
    SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
    FREEZE_TIME_OF_DAY( 22, 0 );
    DISABLE_FADE_BETWEEN_SP_LEVELS();
    return 1;
}

void sub_506(boolean bParam0)
{
    sub_265( "GA", "P_CLEANUP_RT start", 0 );
    sub_552( ref g_U3339 );
    sub_634( ref l_U451 );
    sub_634( ref l_U494 );
    sub_634( ref l_U534 );
    sub_634( ref l_U708 );
    sub_634( ref l_U876 );
    sub_634( ref l_U348 );
    sub_813( g_U813._fU0 );
    sub_813( g_U867._fU0 );
    sub_813( l_U1817 );
    sub_813( l_U1818 );
    sub_893( l_U1177 );
    sub_952( l_U1217 );
    sub_634( ref g_U3386 );
    sub_634( ref g_U3429 );
    sub_634( ref g_U3448 );
    sub_634( ref g_U3465 );
    sub_634( ref g_U3495 );
    sub_634( ref g_U3513 );
    sub_952( l_U2033 );
    if (bParam0)
    {
        if (CUTSCENE_IS_LOADED( "02_05_NC_CONCAT" ))
        {
            CLEAR_NAMED_CUTSCENE( "02_05_NC_CONCAT" );
        }
    }
    if (NOT bParam0)
    {
        sub_1130( ref g_U2868 );
    }
    RESET_PED_MODEL_LOD_DISTANCES( g_U2464 );
    ENABLE_SHOOT_DODGE_HIGH_FALL_STAIRS_DETECTION( 0 );
    sub_1239( bParam0 );
    sub_265( "GA", "P_CLEANUP_RT end", 0 );
    return;
}

void sub_552(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

void sub_634(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_668( (uParam0^)[I] );
    }
    return;
}

void sub_668(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_813(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_893(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

void sub_952(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_1130(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_1162( ref (uParam0^)[I] );
    }
    return;
}

void sub_1162(int iParam0)
{
    sub_668( iParam0->_fU0 );
    iParam0->_fU172 = 0;
    return;
}

void sub_1239(boolean bParam0)
{
    sub_265( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    if (bParam0)
    {
        ;
    }
    else
    {
        sub_265( "CCB", "Stopping the Nightclub context...", 0 );
        END_CONTEXT( "Nightclub" );
    }
    sub_265( "CCB", "Stopping the Nightclub_Rooftop context...", 0 );
    END_CONTEXT( "Nightclub_Rooftop" );
    return;
}

void sub_1492()
{
    sub_265( "GA", "P_RELEASE_RT_ASSETS start", 0 );
    sub_1550( g_U2464, ref g_U1108 );
    sub_1550( 1049690760, ref g_U1108 );
    sub_1550( g_U887, ref g_U1108 );
    sub_1550( g_U890, ref g_U1108 );
    sub_1550( -1905703607, ref g_U1108 );
    sub_1550( 286073285, ref g_U1108 );
    sub_1989( ref l_U310, ref g_U1301 );
    sub_2206( -850074815, ref g_U1350 );
    sub_2454( "level_s_club_CP_14", ref g_U1447 );
    sub_2454( "WEAP_RIFLE", ref g_U1447 );
    sub_2454( "MPED_RIFLE_CORE", ref g_U1447 );
    sub_2454( "MPED_RIFLE_COVER", ref g_U1447 );
    sub_2454( "MPED_SIDEARM_COVER", ref g_U1447 );
    sub_2454( "GETUPS_RIFLE", ref g_U1447 );
    sub_2454( "NPC_RIFLE_CORE", ref g_U1447 );
    sub_2454( "NPC_RIFLE_COVER", ref g_U1447 );
    sub_2454( "NPC_RIFLE_COVER_ENTER", ref g_U1447 );
    sub_2454( "NPC_RIFLE_COVER_RELOAD", ref g_U1447 );
    sub_2454( "NPC_RIFLE_DODGE", ref g_U1447 );
    sub_2454( "NPC_RIFLE_FLAVOR", ref g_U1447 );
    sub_2454( "NPC_RIFLE_FULLBODY", ref g_U1447 );
    sub_2454( "NPC_RIFLE_RELOAD", ref g_U1447 );
    sub_2454( "NPC_RIFLE_SEARCH", ref g_U1447 );
    sub_2454( "NPC_RIFLE_STAIRS", ref g_U1447 );
    sub_2454( "NPC_RIFLE_REACT", ref g_U1447 );
    sub_2454( "AMED_RIFL_PRONE", ref g_U1447 );
    sub_2454( "PLGE_RIFLE_CROUCH", ref g_U1447 );
    sub_2454( "AMED_RIFLE_CORE", ref g_U1447 );
    sub_2454( "AMED_RIFLE_CORE_RELOAD", ref g_U1447 );
    sub_2454( "PLGE_RIFLE_HANDSIG", ref g_U1447 );
    sub_2454( "PLGE_RIFLE_ACTIONS", ref g_U1447 );
    sub_2454( "AMED_RIFLE_KNEE", ref g_U1447 );
    sub_2454( "AMED_RIFLE_COVER", ref g_U1447 );
    sub_2454( "AMED_RIFLE_REACT", ref g_U1447 );
    sub_2454( "AMED_RIFLE_COVER_EXIT", ref g_U1447 );
    sub_2454( "EXPL_CAM", ref g_U1447 );
    sub_2454( "DAM_DEAD", ref g_U1447 );
    sub_1550( -1409914275, ref g_U1108 );
    sub_265( "GA", "P_RELEASE_RT_ASSETS end", 0 );
    return;
}

void sub_1550(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_1662( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_1662(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_1989(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_2024( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_2024(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_1662( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_2206(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_1662( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

void sub_2454(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_1662( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_3501(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
        sub_3612( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

void sub_3612(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_3717( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_3717(unknown uParam0)
{
    return;
}

void sub_3947()
{
    sub_265( "MF", "P_RT_02_05_REGISTER - START", 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U1177 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( l_U1177, "heli_luxury", 1 );
    }
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U3290._fU0, g_U3290._fU4 ), "p_clb_doorB_vip_a01", 0 );
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U3283._fU0, g_U3283._fU4 ), "p_clb_door_ext_aa", 0 );
    SET_HIGHEST_ARCADE_LEVEL_UNLOCKED( 2 );
    CUTSCENE_REGISTER_SWITCH_TO_LEVEL_NAME( "s_stad" );
    CUTSCENE_ENABLE_SKIP( 0 );
    AUD_ENABLE_PRE_BINK_SHUTDOWN( 1 );
    sub_265( "MF", "P_RT_02_05_REGISTER - END", 0 );
    return;
}

void sub_4230()
{
    if (l_U1129._fU52)
    {
        DO_SCREEN_FADE_IN( 0 );
        sub_4267( ref l_U1877, 0 );
        sub_4267( ref l_U1887, 0 );
        sub_4267( ref l_U1867, 0 );
        sub_4267( ref l_U1897, 0 );
        sub_4267( ref l_U1062, 0 );
        sub_4267( ref l_U393, 0 );
    }
    if (NOT l_U1205)
    {
        if (GET_CUTSCENE_TIME_MS() > 1400)
        {
            if (NOT (IS_PED_DEAD( sub_4492() )))
            {
                REMOVE_ALL_PED_WEAPONS( sub_4492() );
            }
            l_U1205 = 1;
        }
    }
    if (NOT (IS_VEHICLE_DEAD( l_U1177 )))
    {
        if (GET_CUTSCENE_TIME_MS() < 33000)
        {
            SET_VEHICLE_ENGINE_ON( l_U1177, 1, 1 );
            SET_HELI_BLADES_FULL_SPEED( l_U1177 );
        }
    }
    return;
}

void sub_4267(int iParam0, unknown uParam1)
{
    if (NOT (sub_4281( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

boolean sub_4281(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

int sub_4492()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_4514() );
    }
    return 0;
}

void sub_4514()
{
    return GET_PLAYER_ID();
}

int sub_4657()
{
    return 1;
}

void sub_4676(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    sub_265( "MSWW", "CutSys_CreateStandaloneCutscene", "###" );
    return sub_4822( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam7, 0, 4753, 4769, 0, 4787, 4803, uParam6 );
}

void sub_4753()
{
    return;
}

int sub_4769()
{
    return 1;
}

void sub_4787()
{
    return;
}

int sub_4803()
{
    return 1;
}

void sub_4822(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_5106()
{
    sub_265( "GA", "P_SET_STATIC_DATA start", 0 );
    sub_5192( ref l_U321[0], 21.23000000, -25.68000000, 86.60000000, -94.35000000, -1323700792, 7, 3, 2, 0, 0 );
    sub_5192( ref l_U321[1], 19.33000000, -27.68000000, 86.92000000, -73.48000000, -938982550, 7, 3, 2, 0, 0 );
    sub_5192( ref l_U424[0], 1.28000000, -12.14000000, 86.30000000, 180.00000000, 998709822, 7, 3, 2, 0, 0 );
    sub_5192( ref l_U424[1], 10.52000000, -19.69000000, 86.30000000, -94.08000000, 651981951, 7, 3, 2, 0, 0 );
    sub_5192( ref l_U454[0], -11.86000000, -3.43000000, 86.50000000, 180.00000000, -75752993, 7, 3, 2, 0, 0 );
    sub_5192( ref l_U454[1], -9.14000000, -8.16000000, 86.90000000, 180.00000000, 1570757071, 7, 3, 2, 0, 0 );
    sub_5192( ref l_U454[2], -8.82000000, -6.56000000, 87.04000000, 180.00000000, 266049038, 7, 3, 2, 0, 0 );
    sub_5192( ref l_U520[0], -25.90000000, -4.63000000, 85.00000000, 180.00000000, 2032657626, 7, 3, 2, 0, 0 );
    sub_5192( ref l_U629[0], -25.94000000, 8.91000000, 85.00000000, 180.00000000, 134325340, 7, 3, 2, 0, 0 );
    sub_5192( ref l_U629[1], -14.42000000, 19.70000000, 86.30000000, 90.00000000, -840277063, 7, 3, 2, 0, 0 );
    sub_5192( ref l_U629[2], -12.88000000, 22.80000000, 86.30000000, 45.00000000, -695131744, 7, 3, 2, 0, 0 );
    sub_5192( ref l_U629[3], -8.70000000, 21.77000000, 86.30000000, 90.00000000, 1798439109, 7, 3, 2, 0, 0 );
    sub_5192( ref l_U629[4], -26.07000000, 35.51000000, 85.00000000, 180.00000000, 168913606, 7, 3, 2, 0, 0 );
    sub_5192( ref l_U629[5], 0.06000000, 25.38000000, 85.70000000, 180.00000000, 1716727844, 7, 3, 2, 0, 0 );
    sub_5192( ref l_U810[0], -1.03000000, 25.47000000, 85.70000000, 180.00000000, -1044326283, 7, 3, 2, 0, 0 );
    sub_5192( ref l_U810[1], 2.27000000, 30.00000000, 85.70000000, 135.00000000, 574587828, 7, 3, 2, 0, 0 );
    sub_5192( ref l_U810[2], 4.03000000, 34.60000000, 85.70000000, 180.00000000, 1347258909, 7, 3, 2, 0, 0 );
    sub_5192( ref l_U810[3], -1.55000000, 31.66000000, 85.70000000, 180.00000000, -1179674552, 7, 3, 2, 0, 0 );
    sub_5192( ref l_U810[4], 16.58000000, 35.74000000, 85.70000000, 90.00000000, 1032497982, 7, 3, 2, 0, 0 );
    sub_6143( ref l_U372, "SPEEECH VIG22A", 33.72000000, -28.47000000, 85.57000000, 17.72000000, 20.26000000, 8.11000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_6143( ref l_U542, "tb_RT_MidHeliStairs", 31.30000000, -21.86000000, 89.40000000, 4.37000000, 11.87000000, 4.27000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_6143( ref l_U351, "StairEnemyActivateSafety", 37.75000000, -23.96000000, 93.65000000, 8.11000000, 11.44000000, 4.27000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_6143( ref l_U563, "tb_RT_BottomHeliStairs", 32.35000000, -28.72000000, 89.64000000, 13.55000000, 20.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_6143( ref l_U584, "tb_RT_BottomACStairs", 24.30000000, -23.69000000, 82.75000000, 23.47000000, 11.27000000, 6.41000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_6143( ref l_U605, "tb_RT_MidWayACUnits", 12.34000000, -19.29000000, 85.97000000, 5.00000000, 24.89000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_6143( ref l_U499, "Activate AC Wave 3", 2.49000000, -19.29000000, 85.97000000, 5.00000000, 24.89000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_6143( ref l_U721, "tb_RT_NearBigLetterCatwalkEntrance", -10.90000000, -9.10000000, 86.13000000, 10.00000000, 9.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_6143( ref l_U742, "tb_RT_BigLetterCatwalkEntranceBottomStairs", -20.12000000, -6.42000000, 84.92000000, 6.00000000, 2.09000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_6143( ref l_U763, "tb_RT_BigLetterCatwalkBackToBuilding", -23.73000000, 31.29000000, 84.68000000, 2.58000000, 46.49000000, 3.07000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_6143( ref l_U784, "tb_RT_ExitCatwalkToBuilding", -14.27000000, 30.39000000, 86.30000000, 3.55000000, 25.00000000, 3.14000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_6143( ref l_U888, "tb_RT_EntranceLaneToElectricalArea", -13.95000000, 22.09000000, 84.68000000, 12.00000000, 12.00000000, 3.37000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_6143( ref l_U951, "tb_RT_ReleaseAC_UnitCS", 0.20000000, 22.12000000, 85.61000000, 6.38000000, 6.03000000, 2.79000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_6143( ref l_U930, "tb_RT_TooNearAmbush", 0.94000000, 30.71000000, 85.61000000, 5.75000000, 2.67000000, 2.79000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_6143( ref l_U972, "tb_RT_StairwellDoorOuter", 12.60000000, 60.84000000, 78.15000000, 3.10000000, 2.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_6143( ref l_U993, "tb_RT_StairwellDoorInner", 12.67000000, 60.67000000, 77.90000000, 2.27000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_6143( ref l_U1014, "Suppress Shoot dodge", 12.60000000, 58.58000000, 78.15000000, 3.25000000, 5.99000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_6143( ref l_U403, "Activate_AC_Runners", 29.87000000, -20.83000000, 85.71000000, 6.99000000, 11.32000000, 6.64000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_6143( ref l_U909, "Release CS Near Fence", 0.60000000, 24.81000000, 85.61000000, 7.02000000, 2.70000000, 2.79000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_6143( ref l_U1081, "Force Exit Door Open", 17.23000000, 39.19000000, 85.61000000, 14.62000000, 23.46000000, 2.79000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_6143( ref l_U1156, "Preload_02_05", 20.35000000, 57.64000000, 80.68000000, 6.09000000, 4.07000000, 3.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_6143( ref l_U1837, "tb_RT_SPEECH_MVPGDA", 17.93000000, 55.52000000, 78.44000000, 13.75000000, 8.32000000, 7.52000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_6143( ref l_U1795, "Suppress Shootdodge Death", 29.57000000, -21.86000000, 85.51000000, 10.27000000, 9.26000000, 6.11000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_6143( ref l_U1604[0], "Fall Death 0", -25.61000000, 8.35000000, 79.82000000, 94.91000000, 20.00000000, 4.80000000, 0.00000000, 0.00000000, 90.37000000, 1 );
    sub_6143( ref l_U1604[1], "Fall Death 1", -17.40000000, -11.05000000, 80.58000000, 4.21000000, 4.61000000, 2.30000000, 0.00000000, 0.00000000, 90.37000000, 1 );
    sub_6143( ref l_U1604[2], "Fall Death 2", -17.40000000, 11.77000000, 77.93000000, 31.56000000, 4.61000000, 4.62000000, 0.00000000, 0.00000000, 90.37000000, 1 );
    sub_6143( ref l_U1604[3], "Fall Death 3", -18.14000000, 38.84000000, 76.49000000, 21.78000000, 4.61000000, 4.62000000, 0.00000000, 0.00000000, 90.37000000, 1 );
    sub_6143( ref l_U1604[4], "Fall Death 4", 34.10000000, -8.28000000, 83.02000000, 21.09000000, 19.54000000, 4.80000000, 0.00000000, 0.00000000, 90.37000000, 1 );
    sub_6143( ref l_U1604[5], "Fall Death 5", 60.88000000, -25.03000000, 88.47000000, 40.00000000, 15.63000000, 4.80000000, 0.00000000, 0.00000000, 90.37000000, 1 );
    sub_6143( ref l_U1731[0], "Fall Death 6", 54.05000000, -8.85000000, 88.45000000, 15.00000000, 30.00000000, 4.80000000, 0.00000000, 0.00000000, 90.37000000, 1 );
    sub_6143( ref l_U1731[1], "Fall Death 7", 59.63000000, -37.86000000, 88.47000000, 15.00000000, 20.00000000, 4.80000000, 0.00000000, 0.00000000, 90.37000000, 1 );
    sub_6143( ref l_U1731[2], "Fall Death 8", 51.77000000, -46.02000000, 90.58000000, 15.00000000, 20.00000000, 4.80000000, 0.00000000, 0.00000000, 90.37000000, 1 );
    sub_6143( ref l_U1928, "tbImageFX_Stairs01", 21.50860000, 53.07630000, 86.21000000, 4.00000000, 4.07000000, 3.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_6143( ref l_U1949, "tbImageFX_Stairs02", 21.72000000, 59.20000000, 84.48410000, 4.00000000, 4.07000000, 3.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_6143( ref l_U1970, "tbImageFX_Stairs03", 19.32430000, 51.79820000, 82.75760000, 4.00000000, 4.07000000, 3.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_6143( ref l_U1991, "tbImageFX_Stairs04", 21.71000000, 59.22000000, 81.07960000, 4.00000000, 4.07000000, 3.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_6143( ref l_U2012, "tbImageFX_Stairs05", 19.36000000, 51.83000000, 79.16960000, 4.00000000, 4.07000000, 3.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_6143( ref l_U1907, "Stairwell Stop Dialogue", 12.60000000, 53.51000000, 79.32000000, 3.25000000, 5.99000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9172( ref l_U1322, ref l_U1604 );
    sub_9172( ref l_U1463, ref l_U1731 );
    sub_9548( ref l_U805, "teth_RT_OnBuildingNearCatwalk", -14.27000000, 30.39000000, 86.30000000, 3.55000000, 25.00000000, 3.14000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9548( ref l_U806, "Valid_Enemy_Area_A", 14.85000000, 5.55000000, 84.60000000, 92.02000000, 88.75000000, 25.70000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9548( ref l_U807, "Valid_Enemy_Area_B", -24.09000000, 53.89000000, 84.60000000, 17.48000000, 18.64000000, 25.70000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_9799( ref l_U1040[0], -2113982500, -12.48665000, -4.96388000, 87.33427000, 0.00000000, 0.00000000, 3.14000000 );
    sub_9799( ref l_U1040[1], -2113982500, 22.71257000, -30.85865000, 87.39023000, 0.00000000, 0.00000000, 0.00000000 );
    sub_9799( ref l_U1040[2], 754309992, 4.83653000, 41.40447000, 87.76401000, 0.00000000, 0.00000000, 0.00000000 );
    sub_9972( ref l_U1226, 2, l_U1218, l_U1218, l_U1218, 1.50000000, 3.00000000, 1, 0 );
    sub_10805( ref l_U1226, 0 );
    sub_10852( ref l_U1226, 30, "POI_NECKLACE" );
    sub_11013( ref l_U1226, 1 );
    sub_265( "GA", "P_SET_STATIC_DATA end", 0 );
    return;
}

void sub_5192(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_6143(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_9172(int iParam0, unknown uParam1)
{
    int iVar4;
    int I;

    iVar4 = (uParam1^);
    if (iVar4 > 6)
    {
        sub_265( "[SA]", "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
        SCRIPT_ASSERT( "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
    }
    for ( I = 0; I < iVar4; I++ )
    {
        iParam0->_fU0[I] = {(uParam1^)[I]};
    }
    iParam0->_fU508 = iVar4;
    iParam0->_fU548 = 0;
    iParam0->_fU552 = 0;
    iParam0->_fU556 = 0;
    iParam0->_fU560 = 0;
    return;
}

void sub_9548(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_9799(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

void sub_9972(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
    sub_9987( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
    sub_10355( iParam0 );
    return;
}

void sub_9987(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_10355(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_10434( iParam0 );
    return;
}

void sub_10434(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_10493( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_10493( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_10493( iParam0, 1 );
            }
            else
            {
                sub_10493( iParam0, 0 );
            };;;
        }
        else
        {
            sub_10493( iParam0, 0 );
        }
    }
    else
    {
        sub_10493( iParam0, 0 );
    }
    return;
}

void sub_10493(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_10805(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

void sub_10852(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_10883( iParam0 );
    return;
}

void sub_10883(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_11013(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

void sub_11106(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 = sub_4492();
    sub_11132( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

void sub_11132(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_11261()
{
    if (g_U892 == 13)
    {
        switch (l_U317)
        {
            case 0:
            if ((g_U3360 == 1) || (IS_PED_DEAD( sub_4492() )))
            {
                sub_11369( 0 );
                sub_11462( 0 );
                AUDIO_MUSIC_SUSPEND( 5000 );
                g_U3360 = 0;
                l_U317 = 1;
                sub_265( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            else if (sub_11631())
            {
                l_U317 = 3;
                sub_265( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 1:
            if (((sub_12141( 0 )) == 1) || (sub_12117()))
            {
                if (sub_12117())
                {
                    ;
                }
                l_U317 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_4492() )))
            {
                l_U317 = 3;
                sub_265( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_265( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            SET_PLAYER_INVINCIBLE( sub_4514(), 0 );
            if ((NOT (IS_PED_DEAD( sub_4492() ))) AND (NOT (IS_PLAYER_DEAD( sub_4514() ))))
            {
                SET_PLAYER_CONTROL( sub_4514(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_4492() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_4492(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            sub_506( 1 );
            l_U317 = 4;
            sub_265( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_265( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_13816( ref l_U274, sub_4492() );
            l_U317 = 5;
            sub_265( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_265( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U314 = 1;
            l_U316 = 0;
            l_U317 = 0;
            sub_265( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

void sub_11369(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

void sub_11462(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 3) AND (g_U1[I] >= 1))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

int sub_11631()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_4492() )))
        {
            SET_PED_FORCED_TO_WALK( sub_4492(), 0 );
            SET_PLAYER_FORCED_AIM( sub_4514(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_4514(), 1 );
            if ((IS_PED_VISIBLE( sub_4492() )) == 0)
            {
                SET_PED_VISIBLE( sub_4492(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_12117()
{
    return g_U648;
}

int sub_12141(int iParam0)
{
    iParam0 = 1;
    switch (l_U22)
    {
        case 0:
        if (NOT (sub_12198( ref l_U24 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_4492() )))
            {
                l_U23 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_12302( ref l_U24, l_U23, 1, 1 );
            sub_12436( ref l_U24 );
        }
        if (sub_12554( ref l_U24 ))
        {
            sub_265( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_4492() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_4514() )))
            {
                SET_PLAYER_CONTROL( sub_4514(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U22 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U22 = 2;
            }
            else
            {
                l_U22 = 3;
            }
        }
        break;
        case 2:
        sub_265( "NS", "Player will QUIT", 0 );
        sub_13035();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_265( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_13035();
        return 1;
        break;
    }
    return 0;
}

int sub_12198(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_12302(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_12436(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_12554(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_13035()
{
    sub_265( "NS", "P_PostFailRetryCleanup", 0 );
    sub_13083( ref l_U24 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_4514() )))
    {
        SET_PLAYER_CONTROL( sub_4514(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U21 = 0;
    l_U21 = l_U21;
    l_U22 = 0;
    return;
}

void sub_13083(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_13816(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_265( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_14000( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_15077( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_15369( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_15716( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_15369( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_15716( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_15369( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_15716( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_16001( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_15716( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_16001( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_15716( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_16494( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_16655( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_4492(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_265( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_14000(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_14032( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_14032(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_15077(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_15369(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_3717( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_15716(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_16001(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_3717( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_16494(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_16655(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_14032( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_16727( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_16727(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_18025()
{
    int iVar2;
    int I;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;

    iVar2 = l_U314;
    if ((l_U314 < 12) AND (l_U314 > 3))
    {
        sub_18062();
        sub_18597();
    }
    switch (l_U314)
    {
        case 0: break;
        case 1:
        sub_265( "SP", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
        sub_19070();
        sub_5106();
        sub_19597();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U314 = 2;
        sub_265( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_265( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        sub_20131();
        sub_24740();
        l_U314 = 3;
        sub_265( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if ((sub_26986( ref g_U1301 )) AND (sub_26866( ref g_U1108 )))
        {
            if ((NOT l_U274._fU0) AND (g_U891 == 13))
            {
                g_U1101 = 1;
                l_U316 = 0;
                l_U314 = 4;
                sub_265( "SP", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
            }
            else
            {
                l_U314 = 6;
                sub_265( "SP", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
            }
        }
        break;
        case 4:
        sub_265( "GA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        if (NOT (sub_27340( ref l_U274 )))
        {
            sub_16001( sub_4492(), 1194438308, 200, 0, 0 );
            sub_15369( sub_4492(), 406496141, 1, 200, 0 );
            l_U314 = 5;
            sub_265( "MF", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U314 = 6;
            sub_265( "GA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD( sub_4492() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_4492(), 1 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_4492(), 0, 0 ) )))
            {
                if (g_U892 != 13)
                {
                    g_U892 = 13;
                    sub_27841( ref l_U274, g_U892, sub_4492(), g_U2216[13], g_U2331[13], g_U2370[13], g_U2409[13], 0 );
                }
                l_U314 = 6;
                sub_265( "GA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
            }
        }
        break;
        case 6:
        if (sub_31521())
        {
            sub_33255();
            sub_34455();
            sub_34866();
            sub_35522();
            l_U314 = 7;
            sub_265( "GA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 7:
        if (g_U1101)
        {
            l_U314 = 8;
            sub_265( "GA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 8:
        if (l_U315 == 1)
        {
            sub_36066();
            SET_WEATHER_TYPE_NOW_PERSIST( "CLOUDY" );
            FREEZE_TIME_OF_DAY( 22, 0 );
            if (NOT IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED())
            {
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            }
            if (l_U316)
            {
                if (NOT (IS_PED_DEAD( sub_4492() )))
                {
                    REMOVE_ALL_PED_WEAPONS( sub_4492() );
                }
                sub_16001( sub_4492(), 1194438308, 200, 0, 1 );
                sub_15369( sub_4492(), 406496141, 1, 200, 1 );
                AUDIO_SET_PED_FOOTSTEPS_ON( 1 );
            }
            sub_40309( ref l_U1102, "MID_16_NC_concat", 37912, 37931, 38426, 4657, 38590, 39053, 250, 0 );
            l_U1102._fU64 = 0;
            if (l_U316)
            {
                l_U1102._fU4 = 2;
            }
            else
            {
                l_U1102._fU4 = 7;
            }
        }
        if ((sub_40488( ref l_U1102 )) == 1)
        {
            l_U314 = 10;
            if (NOT l_U274._fU0)
            {
                g_U892 = 13;
                sub_27841( ref l_U274, g_U892, sub_4492(), g_U2216[13], g_U2331[13], g_U2370[13], g_U2409[13], 0 );
                sub_42660();
            }
            if (IS_ARCADE_MODE_ACTIVE() == 1)
            {
                SET_PAYNEKILLER_AMT( 1 );
            }
            else
            {
                SET_PAYNEKILLER_AMT( 0 );
            }
        }
        break;
        case 10:
        sub_42837();
        if (l_U315)
        {
            sub_44276( "MID_16_NC_concat" );
            ENABLE_SHOOT_DODGE_HIGH_FALL_STAIRS_DETECTION( 1 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        }
        sub_44511( ref l_U451, 0.00000000, 0, 1 );
        sub_44511( ref l_U494, 0.00000000, 0, 1 );
        sub_44511( ref l_U534, 0.00000000, 0, 1 );
        sub_44511( ref l_U348, 0.00000000, 0, 1 );
        sub_44511( ref l_U708, 0.00000000, 0, 1 );
        sub_44511( ref l_U876, 0.00000000, 0, 1 );
        sub_44548( sub_4492(), 70.00000000, 1, 0 );
        sub_44755();
        if (NOT l_U1816)
        {
            if (sub_45770( l_U1795 ))
            {
                sub_265( "MF", "Player can no longer die from shoot dodge deaths...", 0 );
                SET_ALLOW_PLAYER_DIE_FROM_SHOOT_DODGE( 0 );
                l_U1816 = 1;
            }
        }
        else if (NOT (sub_45770( l_U1795 )))
        {
            sub_265( "MF", "Player can once again die from shoot dodge deaths...", 0 );
            SET_ALLOW_PLAYER_DIE_FROM_SHOOT_DODGE( 1 );
            l_U1816 = 0;
        }
        if ((sub_45992( ref l_U1463, 0 )) || (sub_45992( ref l_U1322, 0 )))
        {
            SET_PLAYER_INVINCIBLE( sub_4514(), 1 );
            BULLET_CAMERA_PRELOAD_TEXT_BINK( "MISS_DEATH_FALL_01A", 1 );
            g_U3339 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
            SETUP_BULLET_CAMERA_SCENE( g_U3339, "MISS_DEATH_FALL_01A", 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
            SET_CAM_ACTIVE( g_U3339, 1 );
            g_U3360 = 1;
        }
        if (sub_46458( ref l_U403, 0 ))
        {
            sub_46559();
        }
        if (l_U319 == 1)
        {
            if (NOT l_U320)
            {
                if (sub_47073( ref l_U348, sub_4492(), 0, 1, 1, 1, 1 ))
                {
                    sub_4267( ref l_U1062, 0 );
                    for ( I = 0; I < l_U348; I++ )
                    {
                        CLEAR_PED_TASKS( l_U348[I] );
                        TASK_COMBAT_PED( l_U348[I], sub_4492() );
                    }
                    l_U320 = 1;
                }
            }
        }
        if (NOT l_U319)
        {
            if ((IS_PED_ON_SCREEN( l_U348[1], 1 )) || ((IS_PED_ON_SCREEN( l_U348[0], 1 )) || (sub_46458( ref l_U372, 0 ))))
            {
                SET_PLAYER_THREAT_REACTION( sub_4492(), 1 );
                sub_47677();
                sub_48136();
                l_U319 = 1;
            }
        }
        if (sub_46458( ref l_U584, 0 ))
        {
            sub_265( "MF", "Playing music cue: 8.2", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_2_3", "NIGHTCLUB_01_2_3", 0, 6000, -1, -1082130432, 0 );
        }
        if ((NOT l_U403._fU64) AND ((sub_48557( ref l_U348, 0 )) AND (l_U319)))
        {
            if (NOT (sub_12198( ref g_U3529 )))
            {
                sub_48853( ref g_U3529, g_U3538 );
            }
            if (sub_48889())
            {
                if ((g_U3529._fU16) || (sub_12554( ref g_U3529 )))
                {
                    if (NOT (IS_ANY_SPEECH_PLAYING( sub_4492() )))
                    {
                        sub_265( "MF", "Playing Speech: SSTD_MFSP", 0 );
                        sub_39191( ref g_U3540, ref uVar4 );
                    }
                    sub_13083( ref g_U3529 );
                }
            }
        }
        if (NOT l_U626)
        {
            if (((sub_48692( ref l_U451 )) >= 2) || (sub_45770( l_U605 )))
            {
                sub_49163();
                l_U626 = 1;
            }
        }
        if (NOT l_U498)
        {
            if (((sub_48692( ref l_U494 )) > 1) || (sub_45770( l_U499 )))
            {
                sub_49571();
                l_U498 = 1;
            }
        }
        if (sub_46458( ref l_U721, 0 ))
        {
            l_U627 = 1;
            sub_265( "MF", "Preloading Helicopter Model for ending cutscene...", 0 );
            sub_20200( 1049690760, ref g_U1108 );
        }
        if ((l_U627 != 4) AND (l_U627 != 0))
        {
            sub_49955();
        }
        if (l_U627 == 4)
        {
            if (sub_46458( ref l_U742, 0 ))
            {
                sub_265( "MF", "Music Cue: 8.3", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_1_2_3", "NIGHTCLUB_01_1_2_3", 0, 5000, 5000, -1082130432, 0 );
                sub_51117();
            }
            if (sub_46458( ref l_U763, 0 ))
            {
                sub_51880();
            }
            if (l_U763._fU64)
            {
                if (sub_46458( ref l_U784, 0 ))
                {
                    sub_265( "GA", "Player exited catwalk back to building.", 0 );
                    sub_52301( l_U708[5] );
                }
            }
        }
        if (sub_46458( ref l_U888, 0 ))
        {
            l_U808 = 1;
        }
        if ((l_U808 != 4) AND (l_U808 != 0))
        {
            sub_52397();
        }
        if (l_U808 == 4)
        {
            if (sub_46458( ref l_U930, 0 ))
            {
                sub_53895();
            }
            if (sub_46458( ref l_U909, 0 ))
            {
                if (NOT (IS_PED_DEAD( l_U876[2] )))
                {
                    SET_PED_FLAG_LOCK_TO_COVER( l_U876[2], 0 );
                    SET_PED_COMBAT_MOVEMENT( l_U876[2], 2 );
                }
            }
            if (sub_46458( ref l_U951, 0 ))
            {
                if (NOT (IS_PED_DEAD( l_U876[3] )))
                {
                    SET_PED_FLAG_LOCK_TO_COVER( l_U876[3], 0 );
                }
            }
            if (NOT l_U1156._fU64)
            {
                if (g_U3467)
                {
                    if (sub_31647( ref g_U3495, ref g_U3468, -1, 1, 1, 0, 1 ))
                    {
                        WAIT( 0 );
                        sub_54424();
                        break;
                    }
                }
                if ((sub_31536( ref g_U3495, 1 )) AND (g_U3498))
                {
                    if (sub_31647( ref g_U3513, ref g_U3499, -1, 1, 1, 0, 1 ))
                    {
                        WAIT( 0 );
                        sub_54729();
                        break;
                    }
                }
            }
        }
        if ((l_U808 == 4) AND ((l_U627 == 4) AND ((sub_31536( ref l_U534, 1 )) AND ((sub_31536( ref l_U494, 1 )) AND ((sub_31536( ref l_U451, 1 )) AND (NOT l_U318))))))
        {
            if (((((((sub_48592( ref l_U348 )) + (sub_48592( ref l_U451 ))) + (sub_48592( ref l_U494 ))) + (sub_48592( ref l_U534 ))) + (sub_48592( ref l_U708 ))) + (sub_48592( ref l_U876 ))) == 1)
            {
                sub_265( "GA", "Assigning bullet cam to last enemy in Rooftop", 0 );
                sub_55055( ref l_U348 );
                sub_55055( ref l_U451 );
                sub_55055( ref l_U494 );
                sub_55055( ref l_U534 );
                sub_55055( ref l_U708 );
                sub_55055( ref l_U876 );
                l_U318 = 1;
            }
        }
        if (NOT l_U1216)
        {
            if (sub_55249())
            {
                if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
                {
                    sub_265( "MF", "Music Cue 8.4", 0 );
                    AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_2", "NIGHTCLUB_01_2", 0, 5000, 5000, -1082130432, 0 );
                    l_U1216 = 1;
                }
            }
            else if (sub_45770( l_U1837 ))
            {
                sub_265( "MF", "Music Cue 8.4", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_2", "NIGHTCLUB_01_2", 0, 5000, 5000, -1082130432, 0 );
                l_U1216 = 1;
            }
        }
        if (NOT l_U1837._fU64)
        {
            if (TIME_SINCE_LAST_MONOLOGUE() > 1000)
            {
                if (sub_12554( ref l_U1828 ))
                {
                    sub_39191( "SCLB_MPRCA", ref l_U1887 );
                }
            }
        }
        if (TIME_SINCE_LAST_MONOLOGUE() > 1000)
        {
            if (sub_46458( ref l_U1837, 0 ))
            {
                sub_39191( "SCLB_MVPGDA", ref l_U1867 );
                sub_12436( ref l_U1858 );
            }
        }
        if (TIME_SINCE_LAST_MONOLOGUE() > 1000)
        {
            if (sub_45770( l_U1837 ))
            {
                if (sub_12554( ref l_U1858 ))
                {
                    sub_39191( "SCLB_DMDAS", ref l_U1877 );
                }
            }
        }
        if ((sub_46458( ref l_U1081, 0 )) == 1)
        {
            sub_55820( ref g_U3269, 0 );
            sub_55890( ref g_U3269, 0, 1, 1.00000000 );
        }
        if (sub_46458( ref l_U1156, 0 ))
        {
            sub_24436( "02_05_NC_CONCAT", 0 );
            WAIT( 0 );
            sub_634( ref l_U451 );
            sub_634( ref l_U494 );
            sub_634( ref l_U534 );
            sub_634( ref l_U708 );
            sub_634( ref l_U876 );
            sub_634( ref l_U348 );
            sub_1130( ref g_U2868 );
            sub_634( ref g_U3386 );
            sub_634( ref g_U3429 );
            sub_634( ref g_U3448 );
            sub_634( ref g_U3465 );
            sub_634( ref g_U3495 );
            sub_634( ref g_U3513 );
            WAIT( 0 );
            sub_1550( g_U2464, ref g_U1108 );
            sub_56227( ref g_U3269, 1 );
            sub_18448( ref g_U3269, 1 );
            sub_18374( ref g_U3283, 0 );
        }
        if (sub_46458( ref l_U993, 0 ))
        {
            if (IS_ARCADE_MODE_ACTIVE() == 1)
            {
                DISPLAY_ARCADE_MODE_LEVEL_END( "s_stad" );
                sub_265( "GA", "eCheckpointState = CP_IDLE", 0 );
                l_U314 = 0;
            }
            else if (NOT (IS_PED_DEAD( sub_4492() )))
            {
                SET_PED_FORCED_TO_WALK( sub_4492(), 1 );
                sub_56505( ref l_U1178, 0, 0 );
                sub_48853( ref l_U1196, 800 );
            }
        }
        if (sub_12554( ref l_U1196 ))
        {
            sub_265( "GA", "eCheckpointState = CP_02_05", 0 );
            l_U314 = 11;
        }
        if (sub_55249())
        {
            if (NOT IS_BULLET_CAMERA_ACTIVE())
            {
                if (NOT (sub_12198( ref l_U1819 )))
                {
                    sub_12436( ref l_U1819 );
                }
                if (NOT (sub_12198( ref l_U1828 )))
                {
                    sub_12436( ref l_U1828 );
                }
            }
        }
        if (sub_48889())
        {
            if (sub_55249())
            {
                if (TIME_SINCE_LAST_MONOLOGUE() > 1500)
                {
                    sub_265( "MF", "Playing Speech: SSTD_MFSP", 0 );
                    sub_39191( ref g_U3540, ref uVar14 );
                }
            }
        }
        if (NOT l_U1224)
        {
            if (sub_12554( ref l_U1819 ))
            {
                sub_39203( ref l_U1897 );
                sub_39191( "SCLB_MVRFTA", ref l_U1897 );
            }
            if (sub_12554( ref l_U1828 ))
            {
                sub_39203( ref l_U1887 );
                sub_39191( "SCLB_MPRCA", ref l_U1887 );
            }
        }
        if (sub_58100( ref l_U1226 ))
        {
            sub_60665( "sclb_GiovShoe", 21.33545000, 57.40003000, 81.22250000, 0.11069800, 38.35604000, -33.70912000, "EXPL_CAM_GND_15_F_CAM", 21.95000000, 57.56000000, 81.95000000, 0.98000000 );
            if (NOT l_U1225)
            {
                sub_11369( 0 );
                sub_39191( "SCLB_NSGVNHR", ref uVar24 );
                l_U1225 = 1;
            }
            l_U1224 = 1;
            sub_12436( ref l_U1312 );
        }
        if (l_U1224)
        {
            if (sub_12554( ref l_U1312 ))
            {
                CAMERA_ANIMATED_STOP( 0, 0 );
            }
            if (NOT IS_ANIMATED_CAMERA_PLAYING())
            {
                sub_60990( -1, -1, ref l_U1226 );
                l_U1224 = 0;
                if (NOT l_U1828._fU16)
                {
                    sub_48853( ref l_U1828, 15000 );
                }
            }
        }
        if (sub_46458( ref l_U1907, 0 ))
        {
            sub_265( "MF", "Stopping dialogue", 0 );
            sub_4267( ref l_U1877, 1 );
            sub_4267( ref l_U1887, 1 );
            sub_4267( ref l_U1867, 1 );
            sub_4267( ref l_U1897, 1 );
            sub_4267( ref l_U1062, 1 );
            sub_4267( ref l_U393, 1 );
        }
        if (NOT l_U1035)
        {
            if (sub_45770( l_U1014 ))
            {
                SET_PLAYER_CAN_USE_SHOOTDODGE( sub_4514(), 0 );
                l_U1035 = 1;
            }
        }
        else if (NOT (sub_45770( l_U1014 )))
        {
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_4514(), 1 );
            l_U1035 = 0;
        }
        break;
        case 11:
        if (l_U315 == 1)
        {
            sub_4676( ref l_U1129, "02_05_NC_CONCAT", 495, 3947, 4230, 4657, 0, 1 );
            l_U1129._fU64 = 0;
            l_U1129._fU4 = 2;
        }
        if ((sub_40488( ref l_U1129 )) == 1)
        {
            l_U314 = 12;
            sub_265( "GA", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 12:
        sub_265( "SP", "eCheckpointState = CP_FINISHED", 0 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U314 = 0;
        sub_265( "SP", "eCheckpointState = CP_IDLE", 0 );
        break;
        case 13:
        if (l_U315)
        {
            sub_506( 0 );
        }
        if (NOT (DOES_PED_EXIST( l_U708[4] )))
        {
            l_U708[4] = sub_32014( ref l_U629[4] );
            sub_16001( l_U708[4], 1194438308, 25000, 0, 0 );
            sub_34246( ref l_U708[4], ref g_U3107, 4.00000000, 10.00000000 );
            REGISTER_TARGET( l_U708[4], sub_4492() );
            SET_LOCKED_TARGET( l_U708[4], sub_4492() );
        }
        if ((NOT (sub_12198( ref l_U2068 ))) AND (sub_61734( ref l_U708[4] )))
        {
            sub_12302( ref l_U2068, l_U2064, 1, 0 );
            sub_12436( ref l_U2068 );
        }
        if (sub_12554( ref l_U2068 ))
        {
            sub_668( l_U708[4] );
            sub_13083( ref l_U2068 );
        }
        break;
    }
    if (l_U314 != iVar2)
    {
        l_U315 = 1;
    }
    else
    {
        l_U315 = 0;
    }
    return;
}

void sub_18062()
{
    if (NOT l_U1036[0])
    {
        if (sub_18093( ref l_U1040[0] ))
        {
            l_U1036[0] = 1;
            sub_265( "CCB", "Setting the dsRoofDoor_0 door to be CLOSED and LOCKED.", 0 );
            sub_18251( ref l_U1040[0], -120.00000000, 0.00000000 );
            sub_18374( ref l_U1040[0], 0 );
            sub_18448( ref l_U1040[1], 1 );
            sub_18448( ref l_U1040[2], 1 );
        }
    }
    return;
}

int sub_18093(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_18251(int iParam0, float fParam1, float fParam2)
{
    if ((sub_18093( iParam0 )) == 0)
    {
        sub_18277( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        ;
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

void sub_18277(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_18374(int iParam0, unknown uParam1)
{
    if ((sub_18093( iParam0 )) == 0)
    {
        sub_18277( iParam0 );
    }
    DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( iParam0->_fU0, iParam0->_fU4 ), uParam1 );
    return;
}

void sub_18448(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_18093( iParam0 )) == 0)
    {
        sub_18277( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

void sub_18597()
{
    switch (l_U1321)
    {
        case 0:
        sub_265( "CCB", "eOldPainless - STATE_CHALLENGE_IDLE", 0 );
        l_U1321 = 1;
        break;
        case 1:
        if (l_U314 >= 11)
        {
            if (SCRIPT_VAR_HASH_EXISTS( 1701971384 ))
            {
                SCRIPT_VAR_HASH_SET_INT( 1701971384, 1 );
            }
            else
            {
                sub_265( "CCB", "The OldPainless script variable is NOT valid!!!", 0 );
            }
            sub_265( "CCB", "eOldPainless - STATE_CHALLENGE_COMPLETE", 0 );
            l_U1321 = 2;
        }
        break;
        case 2: break;
    }
    return;
}

void sub_19070()
{
    sub_265( "GA", "P_INITIALIZE_SCRIPT_DATA start", 0 );
    l_U315 = 1;
    l_U318 = 0;
    l_U319 = 0;
    l_U498 = 0;
    l_U626 = 0;
    l_U627 = 0;
    l_U628 = 0;
    l_U808 = 0;
    l_U809 = 0;
    l_U320 = 0;
    l_U1035 = 0;
    l_U1216 = 0;
    l_U1816 = 0;
    l_U1205 = 0;
    sub_19212( ref l_U1036 );
    SET_PED_MODEL_LOD_DISTANCES( g_U2464, 10.00000000, 75.00000000 );
    sub_12302( ref l_U1312, 5000, 1, 0 );
    sub_12302( ref l_U1819, 4500, 1, 0 );
    sub_12302( ref l_U1828, 30000, 1, 0 );
    sub_12302( ref l_U1858, 25000, 1, 0 );
    sub_12302( ref l_U1196, 800, 1, 0 );
    sub_19400( "SCLBAUD" );
    sub_12302( ref l_U1072, 500, 1, 0 );
    sub_12302( ref l_U1207, l_U1206, 1, 0 );
    sub_265( "GA", "P_INITIALIZE_SCRIPT_DATA end", 0 );
    return;
}

void sub_19212(unknown uParam0)
{
    int I;

    sub_265( "CCB", "P_RESET_BOOL_ARRAY", 0 );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = 0;
    }
    return;
}

void sub_19400(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_19420();
    return;
}

void sub_19420()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_19597()
{
    sub_265( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U1321 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( 1701971384 )))
    {
        sub_265( "CCB", "Creating the OldPainless script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( 1701971384 );
        if (SCRIPT_VAR_HASH_EXISTS( 1701971384 ))
        {
            sub_265( "CCB", "The OldPainless script variable was successfully created...", 0 );
        }
        else
        {
            sub_265( "CCB", "The OldPainless script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
        sub_265( "CCB", "The OldPainless script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( 1701971384, 0 );
    }
    return;
}

void sub_20131()
{
    sub_265( "GA", "P_REQUEST_RT_PERSISTENT_ASSETS start", 0 );
    sub_20200( g_U2464, ref g_U1108 );
    sub_20200( g_U887, ref g_U1108 );
    sub_20200( g_U890, ref g_U1108 );
    sub_20200( -1905703607, ref g_U1108 );
    sub_20200( -1409914275, ref g_U1108 );
    sub_20200( 286073285, ref g_U1108 );
    sub_21624( ref l_U310, ref g_U1301 );
    sub_22641( "level_s_club_CP_14", ref g_U1447 );
    sub_22641( "WEAP_RIFLE", ref g_U1447 );
    sub_22641( "MPED_RIFLE_CORE", ref g_U1447 );
    sub_22641( "MPED_RIFLE_COVER", ref g_U1447 );
    sub_22641( "MPED_SIDEARM_COVER", ref g_U1447 );
    sub_22641( "GETUPS_RIFLE", ref g_U1447 );
    sub_22641( "NPC_RIFLE_CORE", ref g_U1447 );
    sub_22641( "NPC_RIFLE_COVER", ref g_U1447 );
    sub_22641( "NPC_RIFLE_COVER_ENTER", ref g_U1447 );
    sub_22641( "NPC_RIFLE_COVER_RELOAD", ref g_U1447 );
    sub_22641( "NPC_RIFLE_DODGE", ref g_U1447 );
    sub_22641( "NPC_RIFLE_FLAVOR", ref g_U1447 );
    sub_22641( "NPC_RIFLE_FULLBODY", ref g_U1447 );
    sub_22641( "NPC_RIFLE_RELOAD", ref g_U1447 );
    sub_22641( "NPC_RIFLE_SEARCH", ref g_U1447 );
    sub_22641( "NPC_RIFLE_STAIRS", ref g_U1447 );
    sub_22641( "NPC_RIFLE_REACT", ref g_U1447 );
    sub_22641( "AMED_RIFL_PRONE", ref g_U1447 );
    sub_22641( "PLGE_RIFLE_CROUCH", ref g_U1447 );
    sub_22641( "AMED_RIFLE_CORE", ref g_U1447 );
    sub_22641( "AMED_RIFLE_CORE_RELOAD", ref g_U1447 );
    sub_22641( "PLGE_RIFLE_HANDSIG", ref g_U1447 );
    sub_22641( "PLGE_RIFLE_ACTIONS", ref g_U1447 );
    sub_22641( "AMED_RIFLE_KNEE", ref g_U1447 );
    sub_22641( "AMED_RIFLE_COVER", ref g_U1447 );
    sub_22641( "AMED_RIFLE_REACT", ref g_U1447 );
    sub_22641( "AMED_RIFLE_COVER_EXIT", ref g_U1447 );
    sub_22641( "EXPL_CAM", ref g_U1447 );
    sub_22641( "DAM_DEAD", ref g_U1447 );
    if ((g_U891 != 12) AND (l_U316 == 1))
    {
        sub_24436( "mid_16_nc_concat", 0 );
    }
    sub_265( "GA", "P_REQUEST_RT_PERSISTENT_ASSETS end", 0 );
    return;
}

void sub_20200(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_20235( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_20366( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_20235(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_20366( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_20366( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_20366( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_21014( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_20366( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_20366( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_20366(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_20386( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_20386(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_21014(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_21624(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_21659( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_21659(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_21680( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_21812( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_21680(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_21812( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_21812( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_21812( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_21014( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_21812( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_21812( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_21812(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_20386( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_22641(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_22662( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_22799( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_22662(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_22799( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_22799( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_22799( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_21014( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_22799( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_22799( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_22799(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_20386( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_24436(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_24740()
{
    sub_265( "GA", "P_REQUEST_RT_NONPERSISTENT_ASSETS start", 0 );
    sub_24812( -850074815, ref g_U1350 );
    sub_265( "GA", "P_REQUEST_RT_NONPERSISTENT_ASSETS end", 0 );
    return;
}

void sub_24812(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_24847( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_24999( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_24847(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_24999( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_24999( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_24999( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_24999( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_21014( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_21014( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_24999( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_24999( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_24999(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_20386( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_26866(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_26986(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_27340(unknown uParam0)
{
    sub_265( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_13816( uParam0, sub_4492() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_27841(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_265( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_265( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_16655( iParam1 );
        sub_28100( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_28551( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_28551( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_28783( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_28551( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_28783( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_28783( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_28551( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_28783( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_28783( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_28783( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_28551( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_28783( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_28783( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_28783( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_28783( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_30341( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_265( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_28100(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_14032( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_265( "TEH", "Ending context", 0 );
        sub_265( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_28551(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_28783(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_30341(int iParam0)
{
    sub_3717( "CHECKPOINT DATA" );
    sub_30380( iParam0->_fU4 );
    sub_30403( iParam0->_fU16 );
    sub_30403( iParam0->_fU20 );
    sub_30403( iParam0->_fU24 );
    sub_30446( iParam0->_fU28 );
    sub_30446( iParam0->_fU56 );
    sub_30446( iParam0->_fU60 );
    sub_30446( iParam0->_fU64 );
    sub_30446( iParam0->_fU68 );
    sub_30446( iParam0->_fU72 );
    sub_30446( iParam0->_fU76 );
    sub_30446( iParam0->_fU80 );
    sub_30446( iParam0->_fU84 );
    sub_30446( iParam0->_fU88 );
    sub_30446( iParam0->_fU92 );
    sub_30403( iParam0->_fU32 );
    sub_30446( iParam0->_fU36 );
    sub_30446( iParam0->_fU40 );
    sub_30446( iParam0->_fU44 );
    sub_30403( iParam0->_fU136 );
    sub_30651( iParam0->_fU140 );
    sub_30446( iParam0->_fU52 );
    sub_3717( "---nRightHolsterAttachmentEnabled: " );
    sub_30446( iParam0->_fU96 );
    sub_3717( "---nRightHolsterAttachmentToggled: " );
    sub_30446( iParam0->_fU100 );
    sub_3717( "---nLeftHolsterAttachmentEnabled: " );
    sub_30446( iParam0->_fU104 );
    sub_3717( "---nLeftHolsterAttachmentToggled: " );
    sub_30446( iParam0->_fU108 );
    sub_3717( "---nRifleHolsterAttachmentEnabled: " );
    sub_30446( iParam0->_fU112 );
    sub_3717( "---nRifleHolsterAttachmentToggled: " );
    sub_30446( iParam0->_fU116 );
    sub_3717( "---nRightHandAttachmentEnabled: " );
    sub_30446( iParam0->_fU120 );
    sub_3717( "---nRightHandAttachmentToggled: " );
    sub_30446( iParam0->_fU124 );
    sub_3717( "---nLeftHandAttachmentEnabled: " );
    sub_30446( iParam0->_fU128 );
    sub_3717( "---nLeftHandAttachmentToggled: " );
    sub_30446( iParam0->_fU132 );
    sub_30446( l_U1 );
    sub_30446( 144 );
    return;
}

void sub_30380(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_30403(unknown uParam0)
{
    return;
}

void sub_30446(unknown uParam0)
{
    return;
}

void sub_30651(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

int sub_31521()
{
    if (NOT (sub_31536( ref l_U348, 1 )))
    {
        if (sub_31647( ref l_U348, ref l_U321, -1, 1, 0, 1, 1 ))
        {
            return 0;
        }
        return 0;
    }
    if (NOT (sub_31536( ref l_U451, 1 )))
    {
        if (sub_31647( ref l_U451, ref l_U424, -1, 1, 0, 1, 1 ))
        {
            return 0;
        }
        return 0;
    }
    if (NOT (sub_31536( ref l_U494, 1 )))
    {
        if (sub_31647( ref l_U494, ref l_U454, -1, 1, 0, 1, 1 ))
        {
            return 0;
        }
        return 0;
    }
    if (NOT (sub_31536( ref l_U534, 1 )))
    {
        if (sub_31647( ref l_U534, ref l_U520, -1, 1, 0, 1, 1 ))
        {
            return 0;
        }
        return 0;
    }
    return 1;
}

void sub_31536(unknown uParam0, boolean bParam1)
{
    int I;
    int Result;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((DOES_PED_EXIST( (uParam0^)[I] )) == 1)
        {
            Result = 1;
            if (NOT bParam1)
            {
                return 1;
            }
        }
        else
        {
            Result = 0;
        }
    }
    return Result;
}

int sub_31647(unknown uParam0, unknown uParam1, int iParam2, boolean bParam3, boolean bParam4, int iParam5, unknown uParam6)
{
    int iVar9;
    int iVar10;
    int Result;

    iVar9 = sub_31661( uParam0, uParam1 );
    if (iParam2 == -1)
    {
        iVar10 = (uParam0^);
    }
    else
    {
        iVar10 = iParam2;
    }
    if (iVar9 < iVar10)
    {
        if ((uParam1^)[iVar9]._fU16 == 0)
        {
            SCRIPT_ASSERT( "Invalid Ped Struct!  No Model Defined! Aborting Ped Spawn", 0 );
            sub_265( "MF", "Invalid Ped Struct!  No Model Defined! Aborting Ped Spawn", 0 );
            sub_30446( iVar9 );
            return 0;
        }
        if (NOT (DOES_PED_EXIST( (uParam0^)[iVar9] )))
        {
            sub_3612( (uParam1^)[iVar9]._fU16, uParam6 );
            (uParam0^)[iVar9] = sub_32014( ref (uParam1^)[iVar9] );
            if (NOT bParam4)
            {
                SET_PED_VISIBLE( (uParam0^)[iVar9], bParam4 );
                sub_3717( "SPAWNING INVISIBLE PED!!!" );
            }
            if (iParam5 == 1)
            {
                sub_32748( (uParam0^)[iVar9] );
                sub_3717( "Deactivating Ped..." );
            }
        }
    }
    if (bParam3)
    {
        if (iVar9 == (iVar10 - 1))
        {
            sub_265( "MF", "F_HANDLE_PED_ARRAY_SPAWN: Returning true Once.  If you see this looping, you likely have unitialized ped model data in your pedstruct array.", 0 );
            Result = 1;
        }
        return Result;
    }
    else if (iVar9 >= iVar10)
    {
        return 1;
    }
    return 0;
}

void sub_31661(unknown uParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = (uParam1^);
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (DOES_PED_EXIST( (uParam0^)[I] )))
        {
            if ((uParam1^)[I]._fU16 != 0)
            {
                if (I < Result)
                {
                    Result = I;
                }
            }
        }
    }
    return Result;
}

void sub_32014(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_3612( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_32493( iParam0->_fU40 );
    sub_32573( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_32493(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_32573(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_32748(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_33255()
{
    int I;

    sub_265( "MF", "P_RT_SETUP_AC_WAVE_1 - START", 0 );
    sub_33317( ref l_U451, l_U806, 1 );
    sub_33317( ref l_U451, l_U807, 1 );
    sub_33462( ref l_U451, 0, 0 );
    sub_33579( ref l_U451, "pi_RT_AC_WAVE_1" );
    for ( I = 0; I < l_U451; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U451[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U451[I], 1 );
            sub_33741( l_U451[I], ref l_U536 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U451[0] )))
    {
        sub_16001( l_U451[0], 1194438308, 25000, 0, 0 );
        sub_34246( ref l_U451[0], ref g_U3107, 5.00000000, 20.00000000 );
    }
    if (NOT (IS_PED_DEAD( l_U451[1] )))
    {
        sub_16001( l_U451[1], 406496141, 25000, 0, 0 );
        sub_34246( ref l_U451[1], ref g_U3107, 5.00000000, 15.00000000 );
    }
    sub_265( "MF", "P_RT_SETUP_AC_WAVE_1 - END", 0 );
    return;
}

void sub_33317(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_33351( ref uParam1, (uParam0^)[I], uParam2 );
    }
    return;
}

void sub_33351(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_33462(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            SET_PED_PATH_CAN_USE_CLIMBOVERS( (uParam0^)[I], uParam1 );
            SET_PED_PATH_CAN_DROP_FROM_HEIGHT( (uParam0^)[I], uParam2 );
        }
    }
    return;
}

void sub_33579(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_33741(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_3717( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_33884( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_33884( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_33884(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_34246(unknown uParam0, unknown uParam1, float fParam2, float fParam3)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    return;
}

void sub_34455()
{
    int I;

    sub_265( "MF", "P_RT_SETUP_STAIR_ENEMY - START", 0 );
    sub_33317( ref l_U348, l_U806, 1 );
    sub_33317( ref l_U348, l_U807, 1 );
    sub_33462( ref l_U348, 0, 0 );
    sub_33579( ref l_U348, "pi_RT_STAIR_ENEMY" );
    for ( I = 0; I < l_U348; I++ )
    {
        CLEAR_PED_TASKS( l_U348[I] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U348[I], 1 );
        SET_PED_ALERTNESS( l_U348[I], 3 );
        sub_33741( l_U348[I], ref l_U536 );
    }
    if (NOT (IS_PED_DEAD( l_U348[0] )))
    {
        sub_16001( l_U348[0], 1194438308, 25000, 0, 0 );
        sub_34246( ref l_U348[0], ref g_U3099, 5.00000000, 12.00000000 );
    }
    if (NOT (IS_PED_DEAD( l_U348[1] )))
    {
        sub_16001( l_U348[1], 406496141, 25000, 0, 0 );
        sub_34246( ref l_U348[1], ref g_U3099, 4.00000000, 10.00000000 );
    }
    sub_265( "MF", "P_RT_SETUP_STAIR_ENEMY - END", 0 );
    return;
}

void sub_34866()
{
    int I;

    sub_265( "MF", "P_RT_SETUP_AC_WAVE_2 - START", 0 );
    sub_33884( ref l_U536, 1056964608, 0 );
    sub_33579( ref l_U494, "pi_RT_AC_WAVE_2" );
    sub_34970( ref l_U494, sub_4492(), 1 );
    sub_33317( ref l_U494, l_U806, 1 );
    sub_33317( ref l_U494, l_U807, 1 );
    for ( I = 0; I < l_U494; I++ )
    {
        sub_33741( l_U494[I], ref l_U536 );
        if ((NOT (IS_PED_DEAD( sub_4492() ))) AND (NOT (IS_PED_DEAD( l_U494[I] ))))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U494[I], 1 );
            SET_PED_ALERTNESS( l_U494[I], 2 );
            SET_PED_EMOTION_STATE( l_U494[I], 1 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U494[0] )))
    {
        sub_34246( ref l_U494[0], ref g_U3099, 6.00000000, 15.00000000 );
        sub_16001( l_U494[0], 406496141, 25000, 0, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U494[1] )))
    {
        sub_34246( ref l_U494[1], ref g_U3099, 6.00000000, 20.00000000 );
        sub_16001( l_U494[1], 406496141, 25000, 0, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U494[2] )))
    {
        sub_34246( ref l_U494[2], ref g_U3099, 6.00000000, 25.00000000 );
        sub_16001( l_U494[2], 1194438308, 25000, 0, 0 );
    }
    sub_265( "MF", "P_RT_SETUP_AC_WAVE_2 - END", 0 );
    return;
}

void sub_34970(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^)[I] ))))
        {
            REGISTER_TARGET( (uParam0^)[I], uParam1 );
            if (iParam2 == 1)
            {
                CLEAR_LOCKED_TARGET( (uParam0^)[I] );
                SET_LOCKED_TARGET( (uParam0^)[I], uParam1 );
            }
        }
    }
    return;
}

void sub_35522()
{
    int I;

    sub_265( "MF", "P_RT_SETUP_AC_WAVE_3 - START", 0 );
    sub_33884( ref l_U536, 1056964608, 0 );
    sub_34970( ref l_U534, sub_4492(), 1 );
    sub_33579( ref l_U534, "pi_RT_AC_WAVE_3" );
    sub_33317( ref l_U534, l_U806, 1 );
    sub_33317( ref l_U534, l_U807, 1 );
    for ( I = 0; I < l_U534; I++ )
    {
        sub_33741( l_U534[I], ref l_U536 );
        if ((NOT (IS_PED_DEAD( sub_4492() ))) AND (NOT (IS_PED_DEAD( l_U534[I] ))))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U534[I], 1 );
            SET_PED_ALERTNESS( l_U534[I], 2 );
            SET_PED_EMOTION_STATE( l_U534[I], 1 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U534[0] )))
    {
        sub_16001( l_U534[0], -168327769, 25000, 0, 0 );
        sub_34246( ref l_U534[0], ref g_U3107, 4.00000000, 9.00000000 );
    }
    sub_265( "MF", "P_RT_SETUP_AC_WAVE_3 - END", 0 );
    return;
}

void sub_36066()
{
    sub_265( "SA", "P_RT_CREATE_PLACEMENTS start", 0 );
    sub_36118();
    sub_36895();
    l_U1817 = sub_36643( -4072149, 40.91000000, -30.53000000, 92.41500000, 0.00000000, 0.00000000, 98.08000000, 0, 1, 0, 90.00000000 );
    l_U1818 = sub_36643( -4072149, 41.05000000, -30.53000000, 92.41500000, 0.00000000, 0.00000000, 98.08000000, 0, 1, 0, 90.00000000 );
    l_U1217 = sub_37145( -1905703607, l_U1218, l_U1221, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U1217 ))
    {
        FREEZE_OBJECT_POSITION( l_U1217, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1217, ref g_U2592 );
    }
    l_U2033 = sub_37452( 286073285, 51.48300000, -21.99600000, 91.16600000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U2033 ))
    {
        FREEZE_OBJECT_POSITION( l_U2033, 1 );
    }
    sub_265( "SA", "P_RT_CREATE_PLACEMENTS end", 0 );
    return;
}

void sub_36118()
{
    sub_265( "CO", "P_CREATE_S_CLB_GG_38_03", 0 );
    sub_36218( ref g_U813, g_U887, -874786300, -1287594894, -21.47000000, 52.97000000, 85.04000000, 0.00000000, 0.00000000, g_U776, "" );
    sub_36347( ref g_U813 );
    return;
}

void sub_36218(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_265( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_36347(int iParam0)
{
    sub_265( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_36408( iParam0->_fU12 )) == 1)
        {
            sub_265( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_265( "CO", "has never been collected.", 0 );
        }
        if ((sub_36408( iParam0->_fU12 )) == 0)
        {
            sub_813( iParam0->_fU0 );
            iParam0->_fU0 = sub_36643( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_265( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_265( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_36408(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_36643(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_36895()
{
    sub_265( "CO", "P_CREATE_S_CLB_GG_M3_03", 0 );
    sub_36218( ref g_U867, g_U890, 25810136, 1575318501, 45.87000000, -18.82000000, 89.75000000, 0.00000000, 0.00000000, g_U776, "" );
    sub_36347( ref g_U867 );
    return;
}

void sub_37145(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_3612( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_37452(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_3612( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

int sub_37912()
{
    return 1;
}

void sub_37931()
{
    sub_265( "MF", "P_RT_MID_16_REGISTER - START", 0 );
    CUTSCENE_REGISTER_ISEQ( -850074815 );
    sub_38001( 94722883, 0 );
    if (NOT (IS_PED_DEAD( sub_4492() )))
    {
        REGISTER_DETACH_PLAYER_FOR_CUTSCENE();
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( sub_4492(), 0, 0 ), "W_SB_Uzi_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( sub_4492(), g_U2216[13], g_U2331[13] );
        ISEQ_REGISTER_ENTITY( -850074815, "player", sub_4492(), 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
    {
        FREEZE_VEHICLE_POSITION( g_U2866, 1 );
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U2866, "heli_luxury", 0 );
    }
    sub_265( "MF", "P_RT_MID_16_REGISTER - END", 0 );
    return;
}

void sub_38001(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_38426()
{
    if (l_U1102._fU52)
    {
        AUDIO_MUSIC_SUSPEND( 8000 );
        SET_CAMERA_OVERRIDE( "", "", 0, 1, 1 );
        if (g_U3089)
        {
            APPLY_PLAYER_PRELOAD_VARIATION( sub_4492(), 0 );
            g_U3089 = 0;
        }
        REMOVE_ALL_PICKUPS_AND_PLACEMENTS_OF_TYPE( 1295434569 );
    }
    sub_38517();
    return;
}

void sub_38517()
{
    if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
    {
        SET_VEHICLE_ENGINE_ON( g_U2866, 1, 1 );
        SET_HELI_BLADES_FULL_SPEED( g_U2866 );
    }
    return;
}

void sub_38590()
{
    sub_265( "MF", "P_RT_MID_16_BLEND_OUT_PREPARE - START", 0 );
    g_U1100 = 1;
    if (g_U3089 == 1)
    {
        APPLY_PLAYER_PRELOAD_VARIATION( sub_4492(), 0 );
        g_U3089 = 0;
    }
    sub_265( "MF", "Music Cue: 8.1", 0 );
    AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_3", "NIGHTCLUB_01_3", 0, 4000, 0, -1082130432, 0 );
    if (NOT (ISEQ_QUERY_STATE( -850074815, 3 )))
    {
        ISEQ_REGISTER_ENTITY( -850074815, "player", sub_4492(), 0 );
        ISEQ_START( -850074815 );
        if (IS_DEATH_PANEL_WIPE_ALLOWED())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
    }
    if (NOT (sub_12198( ref l_U1072 )))
    {
        sub_12436( ref l_U1072 );
    }
    CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_CP_14", "B_OUT_MID_16_NC_FWD_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
    CAMERA_FREEZE_FRAME( 1, 800, 0, 0 );
    SET_PLAYER_THREAT_REACTION( sub_4492(), 0 );
    sub_265( "MF", "P_RT_MID_16_BLEND_OUT_PREPARE - END", 0 );
    return;
}

int sub_39053()
{
    if (l_U1102._fU52)
    {
        if (IS_SCREEN_FADED_OUT())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
    }
    if ((ISEQ_QUERY_ENTITY_STATE( -850074815, "player", 6 )) || (ISEQ_QUERY_ENTITY_STATE( -850074815, "player", 5 )))
    {
        return 1;
    }
    if (l_U316)
    {
        if (sub_12554( ref l_U1072 ))
        {
            sub_39191( "SCLB_B16A", ref l_U1062 );
        }
    }
    return 0;
}

void sub_39191(unknown uParam0, unknown uParam1)
{
    sub_39203( uParam1 );
    sub_39283( 0, sub_4492(), "MAX", uParam1, 2, 0 );
    sub_39283( 1, sub_4492(), "MAX", uParam1, 2, 0 );
    sub_39508( uParam0, uParam1, 8, 1 );
    return;
}

void sub_39203(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_39283(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_39508(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_39532( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_39532(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_39587( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_39587(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_39622( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_40116( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_39622(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_40116(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_40309(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_265( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return sub_4822( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 4787, 4803, uParam8 );
}

void sub_40488(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_265( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_265( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_265( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_265( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_265( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_265( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_24436( iParam0->_fU0, 0 );
            sub_265( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_41355( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_41355( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_265( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_41883( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_41355( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_42232( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_42232( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_41355(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_4492() )))
        {
            SET_PLAYER_CONTROL( sub_4514(), 0, uParam2 );
            SET_PED_DUCKING( sub_4492(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_4492() );
            }
            SET_PED_INVINCIBLE( sub_4492(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_41883(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_4492() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_4492(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_4492(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_4492(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_4492(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_4492(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_42232(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_4492() )))
    {
        SET_PLAYER_CONTROL( sub_4514(), 1, 0 );
        SET_PED_INVINCIBLE( sub_4492(), 0 );
        if (bParam0)
        {
            sub_42313();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_42313()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_4492() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_4492(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_4492(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_4492(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_4492(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_42660()
{
    sub_265( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_265( "CCB", "Starting the Nightclub_Rooftop context...", 0 );
    START_CONTEXT( "Nightclub_Rooftop" );
    return;
}

void sub_42837()
{
    if (sub_42857( ref l_U1928, sub_4492(), 0 ))
    {
        sub_43000();
    }
    if (sub_42857( ref l_U1949, sub_4492(), 0 ))
    {
        PLAY_IMAGEFX( "DISTORT_INTERLACE_MIDDLE", 4, 0 );
    }
    if (sub_42857( ref l_U1970, sub_4492(), 0 ))
    {
        PLAY_IMAGEFX( "DISTORT_INTERLACE_LEFT_HARD", 4, 0 );
    }
    if (sub_42857( ref l_U1991, sub_4492(), 0 ))
    {
        PLAY_IMAGEFX( "DISTORT_INTERLACE_MIDDLE_RIGHT", 4, 0 );
    }
    if (sub_42857( ref l_U2012, sub_4492(), 0 ))
    {
        PLAY_IMAGEFX( "TRIPLE_IMAGE_BLUR_DOWN_2", 4, 0 );
    }
    sub_43496( ref l_U2034 );
    return;
}

void sub_42857(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 = sub_42896( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

int sub_42896(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_43000()
{
    sub_43014( ref l_U2034 );
    l_U2034[0]._fU4 = "DOUBLE_TINT_BLUE_FLASH_FLICKER";
    l_U2034[0]._fU16 = 1250;
    l_U2034[0]._fU8 = 4;
    l_U2034[0]._fU32 = 0;
    l_U271 = 0;
    return;
}

void sub_43014(unknown uParam0)
{
    int I;

    sub_265( "CO", "P_INIT_IMAGEFX", 0 );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU4 = "";
        (uParam0^)[I]._fU12 = 0;
        (uParam0^)[I]._fU16 = 0;
        (uParam0^)[I]._fU20 = 0;
        (uParam0^)[I]._fU24 = 0;
        (uParam0^)[I]._fU28 = 0;
        (uParam0^)[I]._fU32 = 1;
    }
    return;
}

void sub_43496(unknown uParam0)
{
    int I;
    int J;

    switch (l_U271)
    {
        case 0:
        sub_265( "CO", "P_HANDLE_IMAGEFX", 0 );
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (uParam0^)[I]._fU32)
            {
                sub_12302( ref (uParam0^)[I]._fU36, (uParam0^)[I]._fU12, 1, 0 );
                sub_12436( ref (uParam0^)[I]._fU36 );
                if ((uParam0^)[I]._fU20 > 0)
                {
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        l_U271 = 1;
        break;
        case 1:
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (sub_12554( ref (uParam0^)[I]._fU36 ))
            {
                (uParam0^)[I]._fU0 = PLAY_IMAGEFX( (uParam0^)[I]._fU4, (uParam0^)[I]._fU8, (uParam0^)[I]._fU28 );
                if ((uParam0^)[I]._fU16 > 0)
                {
                    sub_12302( ref (uParam0^)[I]._fU72, (uParam0^)[I]._fU16, 1, 0 );
                    sub_12436( ref (uParam0^)[I]._fU72 );
                }
                if ((uParam0^)[I]._fU20 > 0)
                {
                    for ( J = I + 1; J <= (I + (uParam0^)[I]._fU20); J++ )
                    {
                        (uParam0^)[J]._fU0 = PLAY_IMAGEFX( (uParam0^)[J]._fU4, (uParam0^)[J]._fU8, (uParam0^)[I]._fU28 );
                        if ((uParam0^)[J]._fU16 > 0)
                        {
                            sub_12302( ref (uParam0^)[J]._fU72, (uParam0^)[J]._fU16, 1, 0 );
                            sub_12436( ref (uParam0^)[J]._fU72 );
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
            if (sub_12554( ref (uParam0^)[I]._fU72 ))
            {
                STOP_IMAGEFX( (uParam0^)[I]._fU0, (uParam0^)[I]._fU24 );
                (uParam0^)[I]._fU32 = 1;
                if ((uParam0^)[I]._fU20 > 0)
                {
                    if ((uParam0^)[I]._fU20 == 1)
                    {
                        STOP_IMAGEFX( (uParam0^)[I + 1]._fU0, (uParam0^)[I + 1]._fU24 );
                        (uParam0^)[I + 1]._fU32 = 1;
                    }
                    else
                    {
                        for ( J = I + 1; J <= (uParam0^)[I]._fU20; J++ )
                        {
                            STOP_IMAGEFX( (uParam0^)[J]._fU0, (uParam0^)[J]._fU24 );
                            (uParam0^)[J]._fU32 = 1;
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        break;
    }
    return;
}

void sub_44276(unknown uParam0)
{
    while (CUTSCENE_NAMED_IS_LOADING( uParam0 ))
    {
        WAIT( 0 );
        sub_3717( "Waiting for loading to complete..." );
    }
    if (CUTSCENE_IS_LOADED( uParam0 ))
    {
        sub_3717( "Unloading cutscene..." );
        CLEAR_NAMED_CUTSCENE( uParam0 );
    }
    while (CUTSCENE_IS_LOADED( uParam0 ))
    {
        WAIT( 0 );
        sub_3717( "Waiting for cutscene to Unload..." );
    }
    return;
}

void sub_44511(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_44548( (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_44548(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                sub_668( uParam0 );
            }
        }
    }
    return;
}

void sub_44755()
{
    if (g_U3371)
    {
        if (NOT (sub_31536( ref g_U3386, 1 )))
        {
            if (sub_31647( ref g_U3386, ref g_U3372, -1, 1, 1, 0, 1 ))
            {
                sub_44814();
                return;
            }
            return;
        }
    }
    if (g_U3388)
    {
        if (NOT (sub_31536( ref g_U3429, 1 )))
        {
            if (sub_31647( ref g_U3429, ref g_U3389, -1, 1, 1, 0, 1 ))
            {
                sub_45001();
                return;
            }
            return;
        }
    }
    if (g_U3433)
    {
        if (NOT (sub_31536( ref g_U3448, 1 )))
        {
            if (sub_31647( ref g_U3448, ref g_U3434, -1, 1, 1, 0, 1 ))
            {
                sub_45419();
                return;
            }
            return;
        }
    }
    if (g_U3450)
    {
        if (NOT (sub_31536( ref g_U3465, 1 )))
        {
            if (sub_31647( ref g_U3465, ref g_U3451, -1, 1, 1, 0, 1 ))
            {
                sub_45607();
                return;
            }
            return;
        }
    }
    return;
}

void sub_44814()
{
    if (NOT (IS_PED_DEAD( g_U3386[0] )))
    {
        SET_PED_CORPSE_FROM_ANIM( g_U3386[0], "DAM_DEAD", "MED_DEAD_POSE_BACK_02", 1.00000000, 0 );
        ADD_BLOOD_POOL( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U3386[0] ), 1.00000000, 4.00000000, 120.00000000 );
    }
    return;
}

void sub_45001()
{
    if (NOT (IS_PED_DEAD( g_U3429[0] )))
    {
        SET_PED_CORPSE_FROM_ANIM( g_U3429[0], "DAM_DEAD", "/MED_DEAD_POSE_RIGHT_04", 1.00000000, 0 );
        ADD_BLOOD_POOL( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U3429[0] ), 1.00000000, 4.00000000, 120.00000000 );
    }
    if (NOT (IS_PED_DEAD( g_U3429[1] )))
    {
        SET_PED_CORPSE_FROM_ANIM( g_U3429[1], "DAM_DEAD", "MED_DEAD_POSE_LEFT_02", 1.00000000, 0 );
        ADD_BLOOD_POOL( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U3429[1] ), 1.00000000, 4.00000000, 120.00000000 );
    }
    if (NOT (IS_PED_DEAD( g_U3429[2] )))
    {
        SET_PED_CORPSE_FROM_ANIM( g_U3429[2], "DAM_DEAD", "MED_DEAD_POSE_RIGHT_02", 1.00000000, 0 );
        ADD_BLOOD_POOL( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U3429[2] ), 1.00000000, 4.00000000, 120.00000000 );
    }
    return;
}

void sub_45419()
{
    if (NOT (IS_PED_DEAD( g_U3448[0] )))
    {
        SET_PED_CORPSE_FROM_ANIM( g_U3448[0], "DAM_DEAD", "MED_DEAD_POSE_RIGHT_03", 1.00000000, 0 );
        ADD_BLOOD_POOL( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U3448[0] ), 1.00000000, 4.00000000, 120.00000000 );
    }
    return;
}

void sub_45607()
{
    if (NOT (IS_PED_DEAD( g_U3465[0] )))
    {
        SET_PED_CORPSE_FROM_ANIM( g_U3465[0], "DAM_DEAD", "MED_DEAD_POSE_LEFT_02", 1.00000000, 0 );
        ADD_BLOOD_POOL( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U3465[0] ), 1.00000000, 4.00000000, 120.00000000 );
    }
    return;
}

void sub_45770(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_42896( sub_4492(), uParam0 );
}

void sub_45992(int iParam0, unknown uParam1)
{
    if (iParam0->_fU548)
    {
        return 0;
    }
    else
    {
        iParam0->_fU548 = sub_46027( iParam0, uParam1 );
    }
    return iParam0->_fU548;
}

void sub_46027(int iParam0, unknown uParam1)
{
    int Result;
    int I;
    int J;

    Result = 0;
    if (NOT (IS_PED_DEAD( sub_4492() )))
    {
        for ( I = 0; I < iParam0->_fU508; I++ )
        {
            if (sub_45770( iParam0->_fU0[I] ))
            {
                Result = 1;
            }
        }
    }
    if ((uParam1) AND (Result))
    {
        for ( J = 0; J < iParam0->_fU508; J++ )
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( ref iParam0->_fU0[J]._fU0, 0 );
        }
    }
    iParam0->_fU548 = 1;
    return Result;
}

void sub_46458(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_42896( sub_4492(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_46559()
{
    int I;
    unknown uVar3;
    unknown uVar4;

    sub_265( "MF", "P_RT_START_AC_WAVE_1 - START", 0 );
    for ( I = 0; I < l_U451; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U451[I] )))
        {
            sub_46658( l_U451[I] );
            REGISTER_TARGET( l_U451[I], sub_4492() );
            SET_PED_ALERTNESS( l_U451[I], 3 );
            SET_PED_VISIBLE( l_U451[I], 1 );
        }
    }
    OPEN_SEQUENCE_TASK( ref uVar3 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_COMBAT_PED( 0, sub_4492() );
    CLOSE_SEQUENCE_TASK( uVar3 );
    TASK_PERFORM_SEQUENCE( l_U451[0], uVar3 );
    OPEN_SEQUENCE_TASK( ref uVar4 );
    TASK_STAND_STILL( 0, 1000 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 19.36000000, -20.67000000, 86.23000000, sub_4492(), 3, 1, 1056964608, 0, 1, 0 );
    CLOSE_SEQUENCE_TASK( uVar4 );
    TASK_PERFORM_SEQUENCE( l_U451[1], uVar4 );
    CLEAR_SEQUENCE_TASK( uVar3 );
    CLEAR_SEQUENCE_TASK( uVar4 );
    sub_265( "MF", "P_RT_START_AC_WAVE_1 - END", 0 );
    return;
}

void sub_46658(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

int sub_47073(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((sub_47118( ref (uParam0^)[I], uParam1, uParam2, uParam3, uParam4, uParam5, uParam6 )) == 1)
        {
            return 1;
        }
    }
    return 0;
}

int sub_47118(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, int iParam6)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        if ((uParam3) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 1 )))
        {
            if (iParam6 == 1)
            {
                sub_265( "MF", "ped has SEEN target ped", 0 );
            }
            return 1;
        }
        else if ((uParam4) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 8 )))
        {
            if (iParam6 == 1)
            {
                sub_265( "MF", "ped has BEEN SHOT AT by target ped", 0 );
            }
            return 1;
        }
        else if ((uParam2) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 2 )))
        {
            if (iParam6 == 1)
            {
                sub_265( "MF", "ped has HEARD target ped", 0 );
            }
            return 1;
        }
        else if ((uParam5) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 4 )))
        {
            if (iParam6 == 1)
            {
                sub_265( "MF", "ped has BEEN TOLD ABOUT target ped", 0 );
            }
            return 1;
        };;;;
    }
    return 0;
}

void sub_47677()
{
    unknown uVar2;
    unknown uVar3;

    sub_265( "MF", "P_RT_START_STAIR_ENEMY - START", 0 );
    sub_47735( ref l_U348 );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_SET_BLOCKING_OF_PED_TARGETTING( 0, 0 );
    TASK_ATTACK_MOVE_WHILE_AIMING_AT_COORD( 0, 31.34000000, -30.29000000, 89.68000000, 44.49000000, -32.06000000, 93.37000000, 0, 7.00000000, 30, -1, 2 );
    TASK_COMBAT_PED( 0, sub_4492() );
    CLOSE_SEQUENCE_TASK( uVar2 );
    if (NOT (IS_PED_DEAD( l_U348[0] )))
    {
        SET_PED_VISIBLE( l_U348[0], 1 );
        TASK_PERFORM_SEQUENCE( l_U348[0], uVar2 );
    }
    OPEN_SEQUENCE_TASK( ref uVar3 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_SET_BLOCKING_OF_PED_TARGETTING( 0, 0 );
    TASK_AIM_GUN_AT_COORD( 0, 30.24000000, -25.42000000, 91.41000000, -1, 0 );
    CLOSE_SEQUENCE_TASK( uVar3 );
    if (NOT (IS_PED_DEAD( l_U348[1] )))
    {
        SET_PED_VISIBLE( l_U348[1], 1 );
        TASK_PERFORM_SEQUENCE( l_U348[1], uVar3 );
    }
    CLEAR_SEQUENCE_TASK( uVar2 );
    CLEAR_SEQUENCE_TASK( uVar3 );
    sub_4267( ref l_U393, 1 );
    sub_265( "MF", "P_RT_START_STAIR_ENEMY - END", 0 );
    return;
}

void sub_47735(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_46658( (uParam0^)[I] );
    }
    return;
}

void sub_48136()
{
    sub_265( "GA", "P_RT_PLAY_DIALOGUE_VIG22A start", 0 );
    sub_39203( ref l_U393 );
    if (NOT (IS_PED_DEAD( l_U348[0] )))
    {
        sub_39283( 1, l_U348[0], "M2_CS_62_MUS", ref l_U393, 2, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U348[1] )))
    {
        sub_39283( 2, l_U348[1], "M2_CS_63_AVG", ref l_U393, 2, 0 );
    }
    sub_39283( 0, sub_4492(), "MAX", ref l_U393, 2, 0 );
    sub_39508( "SCLB_VIG22A", ref l_U393, 8, 1 );
    sub_265( "GA", "P_RT_PLAY_DIALOGUE_VIG22A end", 0 );
    return;
}

int sub_48557(unknown uParam0, boolean bParam1)
{
    if ((sub_31536( uParam0, 0 )) == 1)
    {
        if (NOT bParam1)
        {
            if ((sub_48592( uParam0 )) == 0)
            {
                return 1;
            }
        }
        if (bParam1)
        {
            if ((sub_48692( uParam0 )) == (uParam0^))
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_48592(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_48692(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

void sub_48853(unknown uParam0, unknown uParam1)
{
    sub_12302( uParam0, uParam1, 1, 0 );
    sub_12436( uParam0 );
    return;
}

int sub_48889()
{
    if (GET_PAYNEKILLER_AMT() > g_U3539)
    {
        sub_265( "MF", "Player picked up Payne Killers!", 0 );
        sub_30446( g_U3539 );
        sub_30446( GET_PAYNEKILLER_AMT() );
        g_U3539 = GET_PAYNEKILLER_AMT();
        return 1;
    }
    g_U3539 = GET_PAYNEKILLER_AMT();
    return 0;
}

void sub_49163()
{
    vector[3] vVar2;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int I;

    sub_265( "GA", "P_RT_AC_ENEMIES_WAVE_2 start", 0 );
    array(ref vVar2, 3);
    vVar2[0] = {0.65000000, -22.06000000, 86.30000000};
    vVar2[1] = {-9.54000000, -19.06000000, 86.30000000};
    vVar2[2] = {1.74000000, -26.26000000, 86.30000000};
    sub_47735( ref l_U494 );
    for ( I = 0; I < l_U494; I++ )
    {
        if ((NOT (IS_PED_DEAD( sub_4492() ))) AND (NOT (IS_PED_DEAD( l_U494[I] ))))
        {
            OPEN_SEQUENCE_TASK( ref uVar12 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_ATTACK_MOVE( 0, vVar2[I], 5, -1, -1082130432, 3 );
            TASK_COMBAT_PED( 0, sub_4492() );
            CLOSE_SEQUENCE_TASK( uVar12 );
            TASK_PERFORM_SEQUENCE( l_U494[I], uVar12 );
            SET_PED_VISIBLE( l_U494[I], 1 );
            CLEAR_SEQUENCE_TASK( uVar12 );
        }
    }
    sub_265( "GA", "P_RT_AC_ENEMIES_WAVE_2 end", 0 );
    return;
}

void sub_49571()
{
    int I;
    unknown uVar3;

    sub_265( "MF", "P_RT_START_AC_WAVE_3 - START", 0 );
    sub_47735( ref l_U534 );
    OPEN_SEQUENCE_TASK( ref uVar3 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    if (NOT (IS_PED_DEAD( sub_4492() )))
    {
        TASK_COMBAT_PED( 0, sub_4492() );
    }
    CLOSE_SEQUENCE_TASK( uVar3 );
    for ( I = 0; I < l_U534; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U534[I] )))
        {
            SET_PED_VISIBLE( l_U534[I], 1 );
            TASK_PERFORM_SEQUENCE( l_U534[I], uVar3 );
        }
    }
    CLEAR_SEQUENCE_TASK( uVar3 );
    sub_265( "MF", "P_RT_START_AC_WAVE_3 - END", 0 );
    return;
}

void sub_49955()
{
    unknown uVar2;

    switch (l_U627)
    {
        case 1:
        sub_265( "GA", "e_RT_BLEnemySpawn = ENTITY_STATE_INIT", 0 );
        sub_33884( ref l_U715, 1056964608, 0 );
        l_U628 = 0;
        l_U627 = 2;
        sub_265( "GA", "e_RT_BLEnemySpawn = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U708[l_U628] = sub_32014( ref l_U629[l_U628] );
        sub_33741( l_U708[l_U628], ref l_U715 );
        if ((NOT (IS_PED_DEAD( sub_4492() ))) AND (NOT (IS_PED_DEAD( l_U708[l_U628] ))))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U708[l_U628], 1 );
            sub_34246( ref l_U708[l_U628], ref g_U3099, 4.00000000, 25.00000000 );
            SET_PED_ALERTNESS( l_U708[l_U628], 2 );
            SET_PED_EMOTION_STATE( l_U708[l_U628], 1 );
            REGISTER_TARGET( l_U708[l_U628], sub_4492() );
            SET_LOCKED_TARGET( l_U708[l_U628], sub_4492() );
        }
        l_U628++;
        if (l_U628 >= 6)
        {
            l_U627 = 3;
            sub_265( "GA", "e_RT_BLEnemySpawn = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        sub_33579( ref l_U708, "pi_RT_BLEnemy" );
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U715._fU0, 0 );
        sub_33317( ref l_U708, l_U806, 1 );
        sub_33317( ref l_U708, l_U807, 1 );
        sub_33462( ref l_U708, 0, 0 );
        sub_16001( l_U708[0], 406496141, 25000, 0, 0 );
        sub_16001( l_U708[1], -168327769, 25000, 0, 0 );
        sub_16001( l_U708[2], 406496141, 25000, 0, 0 );
        sub_16001( l_U708[3], 406496141, 25000, 0, 0 );
        sub_16001( l_U708[4], 1194438308, 25000, 0, 0 );
        sub_16001( l_U708[5], 1194438308, 25000, 0, 0 );
        if ((NOT (IS_PED_DEAD( sub_4492() ))) AND (NOT (IS_PED_DEAD( l_U708[0] ))))
        {
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -19.83000000, -6.51000000, 85.00000000, sub_4492(), 1, 5, -1, -1082130432, 3 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0, sub_4492() );
            CLOSE_SEQUENCE_TASK( uVar2 );
            TASK_PERFORM_SEQUENCE( l_U708[0], uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
        }
        sub_32748( l_U708[1] );
        sub_32748( l_U708[2] );
        sub_32748( l_U708[3] );
        sub_32748( l_U708[4] );
        sub_32748( l_U708[5] );
        l_U627 = 4;
        sub_265( "GA", "e_RT_BLEnemySpawn = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    return;
}

void sub_51117()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    sub_265( "GA", "P_RT_BIGLETTER_ENEMIES_WAVE2 start", 0 );
    sub_46658( l_U708[1] );
    if ((NOT (IS_PED_DEAD( sub_4492() ))) AND (NOT (IS_PED_DEAD( l_U708[1] ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -21.44000000, 10.90000000, 85.00000000, sub_4492(), 1, 4, -1, -1082130432, 3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0, sub_4492() );
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( l_U708[1], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    sub_46658( l_U708[2] );
    if ((NOT (IS_PED_DEAD( sub_4492() ))) AND (NOT (IS_PED_DEAD( l_U708[2] ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_ATTACK_MOVE( 0, -21.55000000, 36.73000000, 85.00000000, 5, -1, -1082130432, 3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0, sub_4492() );
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( l_U708[2], uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    sub_46658( l_U708[3] );
    if ((NOT (IS_PED_DEAD( sub_4492() ))) AND (NOT (IS_PED_DEAD( l_U708[3] ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar4 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_ATTACK_MOVE( 0, -25.89000000, 41.10000000, 85.00000000, 5, -1, -1082130432, 3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0, sub_4492() );
        CLOSE_SEQUENCE_TASK( uVar4 );
        TASK_PERFORM_SEQUENCE( l_U708[3], uVar4 );
        CLEAR_SEQUENCE_TASK( uVar4 );
    }
    sub_46658( l_U708[4] );
    if ((NOT (IS_PED_DEAD( sub_4492() ))) AND (NOT (IS_PED_DEAD( l_U708[4] ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar5 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -26.30000000, 18.00000000, 85.00000000, sub_4492(), 1, 5, -1, -1082130432, 3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0, sub_4492() );
        CLOSE_SEQUENCE_TASK( uVar5 );
        TASK_PERFORM_SEQUENCE( l_U708[4], uVar5 );
        CLEAR_SEQUENCE_TASK( uVar5 );
    }
    sub_265( "GA", "P_RT_BIGLETTER_ENEMIES_WAVE2 end", 0 );
    return;
}

void sub_51880()
{
    unknown uVar2;

    sub_265( "GA", "P_RT_ACTIVATE_BIGLETTER_ENEMY_FROM_ELECTRIC_AREA start", 0 );
    sub_46658( l_U708[5] );
    sub_33351( ref l_U805, l_U708[5], 1 );
    if ((NOT (IS_PED_DEAD( sub_4492() ))) AND (NOT (IS_PED_DEAD( l_U708[5] ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, -10.81000000, 21.27000000, 86.30000000, sub_4492(), 3, 1, 1056964608, 0, 1, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0, sub_4492() );
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( l_U708[5], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    sub_265( "GA", "P_RT_ACTIVATE_BIGLETTER_ENEMY_FROM_ELECTRIC_AREA end", 0 );
    return;
}

void sub_52301(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        RESET_PED_TETHERING( uParam0 );
    }
    return;
}

void sub_52397()
{
    unknown uVar2;
    unknown uVar3;

    switch (l_U808)
    {
        case 1:
        sub_265( "GA", "e_RT_ELEnemySpawn = ENTITY_STATE_INIT", 0 );
        sub_33884( ref l_U882, 1056964608, 0 );
        l_U809 = 0;
        l_U808 = 2;
        sub_265( "GA", "e_RT_ELEnemySpawn = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U876[l_U809] = sub_32014( ref l_U810[l_U809] );
        sub_33741( l_U876[l_U809], ref l_U882 );
        if ((NOT (IS_PED_DEAD( sub_4492() ))) AND (NOT (IS_PED_DEAD( l_U876[l_U809] ))))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U876[l_U809], 1 );
            SET_PED_ALERTNESS( l_U876[l_U809], 3 );
            SET_PED_EMOTION_STATE( l_U876[l_U809], 1 );
            REGISTER_TARGET( l_U876[l_U809], sub_4492() );
            SET_LOCKED_TARGET( l_U876[l_U809], sub_4492() );
        }
        l_U809++;
        if (l_U809 >= 5)
        {
            l_U808 = 3;
            sub_265( "GA", "e_RT_ELEnemySpawn = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        sub_33579( ref l_U876, "pi_RT_ELEnemy" );
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U882._fU0, 0 );
        sub_33317( ref l_U876, l_U806, 1 );
        sub_33317( ref l_U876, l_U807, 1 );
        sub_33462( ref l_U876, 0, 0 );
        sub_16001( l_U876[0], 406496141, 25000, 0, 0 );
        sub_16001( l_U876[1], 406496141, 25000, 0, 0 );
        sub_16001( l_U876[2], -168327769, 25000, 0, 0 );
        sub_16001( l_U876[3], -168327769, 25000, 0, 0 );
        sub_16001( l_U876[4], 1194438308, 25000, 0, 0 );
        if ((NOT (IS_PED_DEAD( sub_4492() ))) AND (NOT (IS_PED_DEAD( l_U876[0] ))))
        {
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -3.69000000, 22.43000000, 86.30000000, sub_4492(), 1, 4, -1, -1082130432, 3 );
            TASK_COMBAT_PED( 0, sub_4492() );
            CLOSE_SEQUENCE_TASK( uVar2 );
            sub_34246( ref l_U876[0], ref g_U3091, 4.00000000, 8.00000000 );
            TASK_PERFORM_SEQUENCE( l_U876[0], uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
        }
        if ((NOT (IS_PED_DEAD( sub_4492() ))) AND (NOT (IS_PED_DEAD( l_U876[1] ))))
        {
            OPEN_SEQUENCE_TASK( ref uVar3 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0, sub_4492() );
            CLOSE_SEQUENCE_TASK( uVar3 );
            sub_34246( ref l_U876[1], ref g_U3091, 4.00000000, 10.00000000 );
            TASK_PERFORM_SEQUENCE( l_U876[1], uVar3 );
            CLEAR_SEQUENCE_TASK( uVar3 );
        }
        if (NOT (IS_PED_DEAD( l_U876[2] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U876[2], 0 );
            SET_PED_FLAG_LOCK_TO_COVER( l_U876[2], 1 );
            TASK_COMBAT_SNAP_TO_COVER( l_U876[2], "GenCover", "8F466A58_2310D4AB_Corner2", 0 );
            SET_PED_SUGGESTED_COVER_POINT( l_U876[2], "GenCover", "8F466A58_2310D4AB_Corner2" );
            sub_34246( ref l_U876[2], ref g_U3091, 4.00000000, 20.00000000 );
            SET_PED_COMBAT_MOVEMENT( l_U876[2], 1 );
        }
        if (NOT (IS_PED_DEAD( l_U876[3] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U876[3], 0 );
            SET_PED_FLAG_LOCK_TO_COVER( l_U876[3], 1 );
            TASK_COMBAT_SNAP_TO_COVER( l_U876[3], "GenCover", "8F466A58_F6D2989E_Corner1", sub_4492() );
            SET_PED_SUGGESTED_COVER_POINT( l_U876[3], "GenCover", "8F466A58_F6D2989E_Corner1" );
            sub_34246( ref l_U876[3], ref g_U3091, 5.50000000, 15.00000000 );
            SET_PED_COMBAT_MOVEMENT( l_U876[3], 1 );
        }
        sub_32748( l_U876[4] );
        l_U808 = 4;
        sub_265( "GA", "e_RT_ELEnemySpawn = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    return;
}

void sub_53895()
{
    unknown uVar2;

    sub_265( "GA", "P_RT_UPDATE_ELECTRIC_AMBUSH_BECAUSE_PLAYER_HAS_ENGAGED start", 0 );
    if (NOT (IS_PED_DEAD( l_U876[3] )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( l_U876[3], 0 );
    }
    sub_46658( l_U876[4] );
    if ((NOT (IS_PED_DEAD( sub_4492() ))) AND (NOT (IS_PED_DEAD( l_U876[4] ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, 0.73000000, 33.56000000, 85.70000000, sub_4492(), 1, 12, -1, -1082130432, 3 );
        TASK_COMBAT_PED( 0, sub_4492() );
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( l_U876[4], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    sub_265( "GA", "P_RT_UPDATE_ELECTRIC_AMBUSH_BECAUSE_PLAYER_HAS_ENGAGED end", 0 );
    return;
}

void sub_54424()
{
    if (NOT (IS_PED_DEAD( g_U3495[0] )))
    {
        SET_PED_CORPSE_FROM_ANIM( g_U3495[0], "DAM_DEAD", "MED_DEAD_POSE_FRONT_01", 1.00000000, 0 );
        ADD_BLOOD_POOL( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U3495[0] ), 1.00000000, 4.00000000, 120.00000000 );
    }
    if (NOT (IS_PED_DEAD( g_U3495[1] )))
    {
        SET_PED_CORPSE_FROM_ANIM( g_U3495[1], "DAM_DEAD", "MED_DEAD_POSE_RIGHT_01", 1.00000000, 0 );
        ADD_BLOOD_POOL( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U3495[1] ), 1.00000000, 4.00000000, 120.00000000 );
    }
    return;
}

void sub_54729()
{
    if (NOT (IS_PED_DEAD( g_U3513[0] )))
    {
        SET_PED_CORPSE_FROM_ANIM( g_U3513[0], "DAM_DEAD", "MED_DEAD_POSE_BACK_02", 1.00000000, 0 );
        ADD_BLOOD_POOL( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U3513[0] ), 1.00000000, 4.00000000, 120.00000000 );
    }
    return;
}

void sub_55055(unknown uParam0)
{
    int I;

    if ((sub_48592( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

int sub_55249()
{
    if ((sub_48557( ref l_U876, 1 )) AND ((sub_48557( ref l_U708, 1 )) AND ((sub_48557( ref l_U534, 1 )) AND ((sub_48557( ref l_U494, 1 )) AND ((sub_48557( ref l_U451, 1 )) AND (sub_48557( ref l_U348, 1 )))))))
    {
        return 1;
    }
    return 0;
}

void sub_55820(int iParam0, unknown uParam1)
{
    if ((sub_18093( iParam0 )) == 0)
    {
        sub_18277( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_AUTO_CLOSE( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

void sub_55890(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_18093( iParam0 )) == 0)
    {
        sub_18277( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

void sub_56227(int iParam0, int iParam1)
{
    if ((sub_18093( iParam0 )) == 0)
    {
        sub_18277( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

void sub_56505(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

    sub_56517( iParam0 );
    if ((IS_PED_DEAD( sub_4492() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND( sub_4492(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if ((sub_56696( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if ((sub_56924( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND( sub_4492(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER( sub_4492(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER( sub_4492(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER( sub_4492(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD( sub_4492() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND( sub_4492(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_4492(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND( sub_4492(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_4492(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD( sub_4492() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND( sub_4492(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if ((sub_56924( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND( sub_4492(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND( sub_4492(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_4492(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

void sub_56517(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

int sub_56696(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_56924(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_58100(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_4492() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_4492() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_42896( sub_4492(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_42896( sub_4492(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_58930( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_58991( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_59301() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_59378( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_10493( iParam0, 0 );
                            sub_59449( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_10493( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_4492() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_4492(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_10493( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_59449( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_4492() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_4492(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_4492() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_4492(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_4492() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_4492(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_10493( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_59449( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_4492() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_4492() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_4492() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_4492(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_59449( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

void sub_58930(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_58991( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_58991( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_58991(int iParam0)
{
    if (((IS_PED_DEAD( sub_4492() )) == 0) AND ((IS_PLAYER_DEAD( sub_4514() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_4492() )) == 1) || (((IS_PED_GETTING_UP( sub_4492() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_4492() )) == 1) || (((IS_PED_IN_COVER( sub_4492() )) == 1) || (((IS_PED_DUCKING( sub_4492() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_4492() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

int sub_59301()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

void sub_59378(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_10493( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_10493( iParam0, 0 );
        sub_59449( iParam0, 0 );
        if ((IS_PED_DEAD( sub_4492() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_4492() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_4492(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_59449(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_58930( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_60665(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    unknown uVar14;

    sub_265( "MF", "P_GBL_EXP_ITEM_PRE_SETUP - START", 0 );
    g_U1102 = 1;
    sub_41355( 1, 0, 0, 1 );
    FOUND_EXPLORATION_ITEM( uParam0 );
    CAMERA_PLAY_ANIMATED( "EXPL_CAM", uParam7, 1, uParam8, uParam11, 0, 0 );
    uVar14 = sub_4492();
    sub_11132( uVar14, uParam1, uParam4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam5, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam6, 1065353216, 0 );
    sub_265( "MF", "P_GBL_EXP_ITEM_PRE_SETUP - END", 0 );
    return;
}

void sub_60990(unknown uParam0, unknown uParam1, unknown uParam2)
{
    sub_12302( ref g_U3350, uParam1, 1, 0 );
    sub_12436( ref g_U3350 );
    sub_12302( ref g_U3340, uParam0, 1, 0 );
    sub_12436( ref g_U3340 );
    g_U1102 = 0;
    sub_59378( uParam2, 1 );
    sub_42232( 1, 1 );
    return;
}

int sub_61734(unknown uParam0)
{
    if ((IS_PED_DEAD( (uParam0^) )) AND (DOES_PED_EXIST( (uParam0^) )))
    {
        return 1;
    }
    return 0;
}

void sub_61903()
{
    if (NOT l_U2063)
    {
        START_WIDGET_GROUP( "Railing Fall Debug" );
        ADD_WIDGET_BOOL( "Enable Railing Fall Debug", ref l_U2062 );
        ADD_WIDGET_INT_SLIDER( "Time Between Spawns", ref l_U2064, 1, 20000, 500 );
        sub_62061( ref l_U2065, "Player Position", 0.50000000 );
        sub_62061( ref l_U629[0]._fU0, "Enemy Spawn Position", 0.50000000 );
        STOP_WIDGET_GROUP();
        l_U2063 = 1;
    }
    if (l_U2062 == 1)
    {
        l_U314 = 13;
        sub_11106( l_U2065, 90.00000000, 0.00000000, 0.00000000 );
        REMOVE_ALL_PED_WEAPONS( sub_4492() );
        sub_16001( sub_4492(), 434544317, 25000, 0, 0 );
        l_U315 = 1;
        l_U2062 = 0;
    }
    if (NOT l_U2077)
    {
        START_WIDGET_GROUP( "Debug Giovanna's Shoe" );
        ADD_WIDGET_BOOL( "Enable Giovanna Shoe Debug", ref l_U2078 );
        sub_62061( ref l_U1218, "Shoe Location", 0.01000000 );
        sub_62061( ref l_U1221, "Shoe Rotation", 0.01000000 );
        STOP_WIDGET_GROUP();
        l_U2077 = 1;
    }
    if (l_U2078 == 1)
    {
        if (DOES_OBJECT_EXIST( l_U1217 ))
        {
            SET_OBJECT_COORDS( l_U1217, l_U1218 );
            SET_OBJECT_ROTATION( l_U1217, l_U1221 );
        }
    }
    return;
}

void sub_62061(int iParam0, unknown uParam1, unknown uParam2)
{
    START_WIDGET_GROUP( uParam1 );
    ADD_WIDGET_FLOAT_SLIDER( "x", iParam0 + 0, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "y", iParam0 + 4, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "z", iParam0 + 8, 60536, 5000, uParam2 );
    STOP_WIDGET_GROUP();
    return;
}


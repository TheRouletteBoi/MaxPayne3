void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U3 = 0;
    l_U4 = 0;
    l_U5 = 1500;
    StrCopy( ref l_U15, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U23, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U31 = 0;
    l_U32 = 0;
    l_U33 = 0;
    l_U34 = 0;
     /* WRITESCRIPTLOG */ sub_178( "CCB", "Script busdepot_term_fight.sc is starting...", 0 );
    while (NOT IS_EXITFLAG_SET())
    {
         /* P_HANDLE_CHECKPOINT */ sub_309();
        WAIT( 0 );
    }
     /* P_CLEANUP_ALL */ sub_85841( 0 );
     /* P_UNLOAD_ASSETS */ sub_88451();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "busdepot_term_fight" );
    SET_EXITFLAG_RESPONSE();
     /* WRITESCRIPTLOG */ sub_178( "CCB", "Script busdepot_term_fight.sc is terminating...", 0 );
    return;
}

/* WRITESCRIPTLOG */ void sub_178(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_HANDLE_CHECKPOINT */ void sub_309()
{
    if ((l_U114 < 12) AND (l_U114 > 8))
    {
        if (l_U123 > 3)
        {
             /* P_UPDATE_STANDOFF_VCPF_1 */ sub_373();
        }
    }
    if ((l_U114 < 14) AND (l_U114 > 3))
    {
         /* P_HANDLE_FAILURE */ sub_5938();
         /* P_HANDLE_AUDIO_STREAM */ sub_6111();
         /* P_HANDLE_SPEECH */ sub_6649();
         /* P_HANDLE_MUSIC */ sub_10116();
         /* P_HANDLE_SPAWN_PROPS */ sub_12026();
         /* P_HANDLE_SPAWN_VEHICLES */ sub_13338();
         /* P_HANDLE_SPAWN_STANDOFF_VCPF */ sub_15389();
         /* P_HANDLE_SP_ACHIEVEMENTS */ sub_23592();
         /* P_UPDATE_VCPF_VEHICLE1 */ sub_24162();
         /* P_UPDATE_VCPF_VEHICLE2 */ sub_25884();
    }
    if ((l_U114 < 14) AND (l_U114 > 11))
    {
         /* P_HANDLE_OUTRO_CUTSCENE_10_05 */ sub_27157();
    }
    if ( /* RESTARTING_CHECKPOINT */ sub_37207())
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )) == 0)
        {
            PED_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_1341(), "Global/Player/PlayerRoot/PLAYER_INITIALIZE_LOCO" );
        }
        l_U114 = 15;
        l_U576 = 4;
    }
    switch (l_U114)
    {
        case 0:
         /* P_INITIALIZE_SCRIPT_DATA */ sub_37873();
         /* P_INITIALIZE_SP_CHALLENGES */ sub_39368();
         /* P_SETUP_STATIC_DATA */ sub_39953();
        if ((g_U2875[11] > 0) || (g_U763 == 11))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Skipping pre-load...", 0 );
            g_U2873 = 1;
            if ((IS_SCREEN_FADING_IN()) || (IS_SCREEN_FADED_IN()))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "FADING OUT!!!", 0 );
                DO_SCREEN_FADE_OUT( 0 );
            }
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eCheckpoint - STATE_CHECKPOINT_LOAD", 0 );
            l_U114 = 2;
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eCheckpoint - STATE_CHECKPOINT_PRELOAD", 0 );
            l_U114 = 1;
        }
        break;
        case 1:
        if ( /* F_HANDLE_PRELOAD_ASSETS */ sub_41834())
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eCheckpoint - STATE_CHECKPOINT_LOAD", 0 );
            l_U114 = 2;
        }
        break;
        case 2:
        if (g_U2873)
        {
            if ( /* F_HANDLE_LOAD_ASSETS */ sub_42304())
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "eCheckpoint - STATE_CHECKPOINT_SETUP", 0 );
                l_U114 = 3;
            }
        }
        break;
        case 3:
         /* P_SETUP_GAMEPLAY */ sub_57187();
        if ((g_U2875[11] > 0) || (g_U763 == 11))
        {
            l_U131 = GET_REAL_GAME_TIMER() + 0;
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eCheckpoint - STATE_CHECKPOINT_POSTSTREAM", 0 );
            l_U114 = 5;
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eCheckpoint - STATE_CHECKPOINT_INTRO_CUTSCENE_10_04", 0 );
            l_U114 = 8;
        }
        break;
        case 5:
        if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
        {
            if (GET_REAL_GAME_TIMER() >= l_U131)
            {
                if ((g_U2875[11] > 0) || (g_U763 == 11))
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "eIntroCutscene - STATE_CUTSCENE_COMPLETE", 0 );
                    l_U123 = 7;
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "eCheckpoint - STATE_CHECKPOINT_MIDSCENE", 0 );
                    l_U114 = 9;
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "eCheckpoint - STATE_CHECKPOINT_INTRO_CUTSCENE_10_04", 0 );
                    l_U114 = 8;
                }
            }
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Waiting for stream requests...", 0 );
        }
        break;
        case 8:
        if (l_U123 >= 4)
        {
             /* F_HANDLE_INTRO_MIDSCENE */ sub_63455();
        }
        if ( /* F_HANDLE_INTRO_CUTSCENE_10_04 */ sub_67785())
        {
            CLEAR_NAMED_CUTSCENE( "10_04_BUS_CONCAT" );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eCheckpoint - STATE_CHECKPOINT_MIDSCENE", 0 );
            l_U114 = 9;
        }
        break;
        case 9:
        if ( /* F_HANDLE_INTRO_MIDSCENE */ sub_63455())
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eCheckpoint - STATE_CHECKPOINT_START", 0 );
            l_U114 = 10;
        }
        break;
        case 10:
         /* P_START_GAMEPLAY */ sub_69897();
         /* WRITESCRIPTLOG */ sub_178( "CCB", "eCheckpoint - STATE_CHECKPOINT_STANDOFF", 0 );
        l_U114 = 11;
        break;
        case 11:
         /* P_HANDLE_PLAYER_SAFETY_CHECK */ sub_75711();
         /* P_HANDLE_PED_XYZ_SAFETY_CHECK */ sub_75947( ref l_U141 );
         /* P_HANDLE_STUCK_ENEMIES */ sub_76305( ref l_U141, 0.40000000, 1.00000000, g_U2339[11], 200.00000000, ref l_U634, ref l_U74, ref l_U93, ref l_U138, 17000 );
         /* P_UPDATE_GRENADE_EVENT */ sub_77427();
         /* P_UPDATE_LAST_ENEMY */ sub_81124();
        if (l_U72 == 0)
        {
            if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0))
            {
                if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_11776( ref l_U141 )) <= 1)
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "Assigning bulletcam to last living piStandoffVCPF ped.", 0 );
                    l_U161 =  /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_81979( ref l_U141 );
                    if (IS_LAST_MAN_STAND_ANIMATED_RECOVERY_BEING_HELD() == 0)
                    {
                        HOLD_LAST_MAN_STAND_ANIMATED_RECOVERY( 1 );
                    }
                    if (((IS_PED_DEAD( l_U161 )) == 0) AND ((DOES_PED_EXIST( l_U161 )) == 1))
                    {
                        SET_BULLET_CAM_PREF( l_U161, "PIST_COMIC_BUS_01", "PIST_COMIC_BUS_01", "PIST_COMIC_BUS_01", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
                    }
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "Enabling the bullet camera tracking until grounded...", 0 );
                    BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
                    if (IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED() == 1)
                    {
                         /* WRITESCRIPTLOG */ sub_178( "CCB", "Disabling ALLOW_BULLET_CAMERA_TO_GAMEPLAY...", 0 );
                        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
                    }
                    l_U72 = 1;
                }
            }
        }
        if (NOT l_U73)
        {
            if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_11776( ref l_U141 )) <= 8)
            {
                l_U73 = 1;
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Resizing piStandoffVCPF ped combat range.", 0 );
                 /* P_RESIZE_COMBAT_RANGE */ sub_82555( ref l_U141, 12.00000000, 20.00000000 );
            }
        }
        if (l_U120 >= 3)
        {
            if (l_U72)
            {
                if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_11776( ref l_U141 )) == 0)
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "All enemies are dead... Bulletcam was set...", 0 );
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "Deactivating camera pointing...", 0 );
                    CAMERA_POINT_AT_GRENADE( 0 );
                    CAMERA_CLEAR_POINT_AT_TARGET();
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "eCheckpoint - STATE_CHECKPOINT_OUTRO_CUTSCENE_10_05", 0 );
                    l_U114 = 12;
                }
            }
            else if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_11776( ref l_U141 )) == 0)
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "All enemies are dead... The Bulletcam was never assigned!!!", 0 );
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Deactivating camera pointing...", 0 );
                CAMERA_POINT_AT_GRENADE( 0 );
                CAMERA_CLEAR_POINT_AT_TARGET();
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "eCheckpoint - STATE_CHECKPOINT_OUTRO_CUTSCENE_10_05", 0 );
                l_U114 = 12;
            }
        }
        break;
        case 12: break;
        case 14:
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
         /* WRITESCRIPTLOG */ sub_178( "CCB", "eCheckpoint - STATE_CHECKPOINT_COMPLETE", 0 );
        l_U114 = 16;
        break;
        case 15:
        switch (l_U576)
        {
            case 0: break;
            case 1:
            if (IS_DEATH_PANEL_WIPE_ALLOWED())
            {
                l_U576 = 2;
            }
            else if ( /* F_HANDLE_MIDSCENE_FAIL_01 */ sub_83319())
            {
                l_U576 = 2;
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "eFailure - STATE_FAIL_QUIT_RETRY", 0 );
            }
            break;
            case 2:
            if ( /* F_CHECK_QUIT_RETRY */ sub_84481( 0 ))
            {
                l_U576 = 3;
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "eFailure - STATE_FAIL_WAITING", 0 );
            }
            break;
            case 3:
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) || ((IS_SCREEN_FADING_IN()) || (IS_SCREEN_FADED_OUT())))
            {
                if (NOT IS_LAST_MAN_STANDING_ACTIVE())
                {
                    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )))
                    {
                         /* WRITESCRIPTLOG */ sub_178( "CCB", "Deactivating bullettime...", 0 );
                        DEACTIVATE_BULLET_TIME( 0, 0 );
                        END_POSTFX_BLENDER( 3, 0 );
                        l_U576 = 4;
                         /* WRITESCRIPTLOG */ sub_178( "CCB", "eFailure - STATE_FAIL_CLEANUP", 0 );
                    }
                    else
                    {
                         /* WRITESCRIPTLOG */ sub_178( "CCB", "Waiting for the Player ped to be valid...", 0 );
                    }
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "Waiting for the last man standing...", 0 );
                }
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Waiting for the screen to fade out...", 0 );
            }
            break;
            case 4:
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1379() )))
            {
                if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )))
                {
                    SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1379(), 0, 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            HOLD_LAST_MAN_STAND_ANIMATED_RECOVERY( 0 );
             /* P_CLEANUP_ALL */ sub_85841( 1 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Incrementing the checkpoint restart counter:", 0 );
            g_U2875[11]++;
            PRINTINT( g_U2875[11] );
            PRINTNL();
            l_U576 = 5;
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eFailure - STATE_FAIL_RESTORE", 0 );
            break;
            case 5:
            if (l_U35._fU0)
            {
                 /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_58240( ref l_U35,  /* PLAYER_PED_ID */ sub_1341() );
            }
             /* P_SETUP_PLAYER_RELATIONSHIPS */ sub_88013();
            l_U576 = 6;
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eFailure - STATE_FAIL_RESTART", 0 );
            break;
            case 6:
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "eFailure - STATE_FAIL_IDLE", 0 );
                l_U576 = 0;
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "eCheckpoint - STATE_CHECKPOINT_INIT", 0 );
                l_U114 = 0;
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Waiting for stream requests...", 0 );
            }
            break;
        }
        break;
        case 16:
        HOLD_LAST_MAN_STAND_ANIMATED_RECOVERY( 0 );
        break;
    }
    return;
}

/* P_UPDATE_STANDOFF_VCPF_1 */ void sub_373()
{
    if (NOT (IS_PED_DEAD( l_U141[1] )))
    {
        switch (l_U127)
        {
            case 0:
             /* CREATETIMER */ sub_514( ref l_U467, 0, 1, 0 );
             /* STARTTIMER */ sub_664( ref l_U467 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eStandoffVCPF_1 - STATE_EVENT_PRELOAD", 0 );
            l_U127 = 1;
            break;
            case 1:
            if ( /* F_STREAMREQ_ACTION_TREE_IS_ASSET_LOADED */ sub_886( "Vehicle/Vehicle_Car.act", ref g_U1535 ))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "eStandoffVCPF_1 - STATE_EVENT_START", 0 );
                l_U127 = 6;
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Waiting for the txtActVIG21 action tree to load...", 0 );
            }
            break;
            case 6:
            if ((g_U2875[11] > 0) || (g_U763 == 11))
            {
                if (l_U125 >= 4)
                {
                     /* P_START_STANDOFF_VCPF_BLENDOUT */ sub_1253();
                     /* P_START_STANDOFF_VCPF */ sub_1904();
                    l_U467._fU12 = 375;
                     /* RESETTIMER */ sub_4140( ref l_U467 );
                     /* STARTTIMER */ sub_664( ref l_U467 );
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "eStandoffVCPF_1 - STATE_EVENT_IN", 0 );
                    l_U127 = 7;
                }
            }
            else if ((HAS_CUTSCENE_FINISHED()) || (GET_CUTSCENE_TIME_MS() >= 59634))
            {
                 /* P_START_STANDOFF_VCPF_BLENDOUT */ sub_1253();
                 /* P_START_STANDOFF_VCPF */ sub_1904();
                l_U467._fU12 = 375;
                 /* RESETTIMER */ sub_4140( ref l_U467 );
                 /* STARTTIMER */ sub_664( ref l_U467 );
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "eStandoffVCPF_1 - STATE_EVENT_IN", 0 );
                l_U127 = 7;
            }
            break;
            case 7:
            if ( /* ISTIMERDONE */ sub_4457( ref l_U467 ))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Tasking the piStandoffVCPF_1 ped to get out.", 0 );
                if (NOT (IS_PED_DEAD( l_U141[1] )))
                {
                    OPEN_SEQUENCE_TASK( ref l_U466 );
                    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
                    if (NOT (IS_VEHICLE_DEAD( l_U452[5] )))
                    {
                        TASK_LEAVE_VEHICLE_DONT_CLOSE_DOOR( 0, l_U452[5] );
                    }
                    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
                    TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1341() );
                    CLOSE_SEQUENCE_TASK( l_U466 );
                    TASK_PERFORM_SEQUENCE( l_U141[1], l_U466 );
                    CLEAR_SEQUENCE_TASK( l_U466 );
                }
                l_U467._fU12 = 4860;
                 /* RESETTIMER */ sub_4140( ref l_U467 );
                 /* STARTTIMER */ sub_664( ref l_U467 );
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "eStandoffVCPF_1 - STATE_EVENT_01", 0 );
                l_U127 = 10;
            }
            break;
            case 10:
            if ( /* ISTIMERDONE */ sub_4457( ref l_U467 ))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Tasking the piStandoffVCPF_1 ped to throw grenade.", 0 );
                OPEN_SEQUENCE_TASK( ref l_U466 );
                TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
                TASK_AIM_GUN_AT_COORD( 0, l_U619, 1000, 0 );
                TASK_SHOOT_AT_COORD( 0, l_U619, -1, 1566631136, 0, 0 );
                CLOSE_SEQUENCE_TASK( l_U466 );
                TASK_PERFORM_SEQUENCE( l_U141[1], l_U466 );
                CLEAR_SEQUENCE_TASK( l_U466 );
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "eStandoffVCPF_1 - STATE_EVENT_02", 0 );
                l_U127 = 11;
            }
            break;
            case 11:
            if (NOT (IS_PED_DEAD( l_U141[1] )))
            {
                l_U465 = GET_WEAPON_FROM_HAND( l_U141[1], 0, 0 );
                if (GET_DOES_WEAPON_EXIST( l_U465 ))
                {
                    if ((GET_WEAPON_TYPE( l_U465 )) == g_U2863)
                    {
                         /* WRITESCRIPTLOG */ sub_178( "CCB", "The piStandoffVCPF_1 ped has the grenade...", 0 );
                        CAMERA_POINT_AT_GRENADE( 1 );
                         /* WRITESCRIPTLOG */ sub_178( "CCB", "eStandoffVCPF_1 - STATE_EVENT_03", 0 );
                        l_U127 = 12;
                    }
                }
            }
            break;
            case 12:
            if (NOT (IS_PED_DEAD( l_U141[1] )))
            {
                if (IS_PED_SHOOTING( l_U141[1] ))
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "The piStandoffVCPF_1 ped is shooting...", 0 );
                    OPEN_SEQUENCE_TASK( ref l_U466 );
                    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
                    TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 199.52000000, -41.55000000, 0.30000000,  /* PLAYER_PED_ID */ sub_1341(), 3, 0, 1056964608, 0, 1, 0 );
                    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
                    TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1341() );
                    CLOSE_SEQUENCE_TASK( l_U466 );
                    TASK_PERFORM_SEQUENCE( l_U141[1], l_U466 );
                    CLEAR_SEQUENCE_TASK( l_U466 );
                     /* CREATETIMER */ sub_514( ref l_U485, 1300, 1, 0 );
                     /* STARTTIMER */ sub_664( ref l_U485 );
                     /* CREATETIMER */ sub_514( ref l_U494, 15000, 1, 0 );
                     /* STARTTIMER */ sub_664( ref l_U494 );
                    l_U71 = 0;
                    l_U137++;
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "The grenade is being thrown by ped:", 0 );
                    PRINTINT( l_U137 );
                    PRINTNL();
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "eGrenadeEvent - STATE_GRENADE_IN_AIR", 0 );
                    l_U575 = 3;
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "eStandoffVCPF_1 - STATE_EVENT_COMPLETE", 0 );
                    l_U127 = 44;
                }
            }
            break;
            case 44: break;
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_178( "CCB", "The piStandoffVCPF_1 ped is dead!!!", 0 );
    }
    return;
}

/* CREATETIMER */ void sub_514(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_664(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* F_STREAMREQ_ACTION_TREE_IS_ASSET_LOADED */ int sub_886(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB]### The ACTION_TREE is loaded: {} ###", 1, 1281, ref (uParam1^)[I]._fU0 );
                return 1;
            }
        }
    }
    return 0;
}

/* P_START_STANDOFF_VCPF_BLENDOUT */ void sub_1253()
{
     /* WRITESCRIPTLOG */ sub_178( "CCB", "P_START_STANDOFF_VCPF_BLENDOUT", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )))
    {
        if (NOT (IS_PED_DEAD( l_U141[0] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U466 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            if (NOT (IS_VEHICLE_DEAD( l_U452[5] )))
            {
                TASK_LEAVE_VEHICLE_DONT_CLOSE_DOOR( 0, l_U452[5] );
                TASK_LEAVE_VEHICLE_IMMEDIATELY( 0, l_U452[5] );
            }
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1341() );
            CLOSE_SEQUENCE_TASK( l_U466 );
            TASK_PERFORM_SEQUENCE( l_U141[0], l_U466 );
            CLEAR_SEQUENCE_TASK( l_U466 );
        }
        if (NOT (IS_PED_DEAD( l_U141[2] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U466 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            if (NOT (IS_VEHICLE_DEAD( l_U452[5] )))
            {
                TASK_LEAVE_VEHICLE_DONT_CLOSE_DOOR( 0, l_U452[5] );
            }
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1341() );
            CLOSE_SEQUENCE_TASK( l_U466 );
            TASK_PERFORM_SEQUENCE( l_U141[2], l_U466 );
            CLEAR_SEQUENCE_TASK( l_U466 );
        }
        if (NOT (IS_PED_DEAD( l_U141[3] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U466 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            if (NOT (IS_VEHICLE_DEAD( l_U452[5] )))
            {
                TASK_LEAVE_VEHICLE_DONT_CLOSE_DOOR( 0, l_U452[5] );
            }
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1341() );
            CLOSE_SEQUENCE_TASK( l_U466 );
            TASK_PERFORM_SEQUENCE( l_U141[3], l_U466 );
            CLEAR_SEQUENCE_TASK( l_U466 );
        }
    }
    return;
}

/* PLAYER_PED_ID */ int sub_1341()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_1379() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_1379()
{
    return GET_PLAYER_ID();
}

/* P_START_STANDOFF_VCPF */ void sub_1904()
{
     /* WRITESCRIPTLOG */ sub_178( "CCB", "P_START_STANDOFF_VCPF", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )))
    {
        if (NOT (IS_PED_DEAD( l_U141[4] )))
        {
             /* P_ACTIVATEPED */ sub_2021( l_U141[4] );
            OPEN_SEQUENCE_TASK( ref l_U466 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 176.98000000, -27.68000000, 0.30000000,  /* PLAYER_PED_ID */ sub_1341(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1341() );
            CLOSE_SEQUENCE_TASK( l_U466 );
            TASK_PERFORM_SEQUENCE( l_U141[4], l_U466 );
            CLEAR_SEQUENCE_TASK( l_U466 );
        }
        if (NOT (IS_PED_DEAD( l_U141[5] )))
        {
             /* P_ACTIVATEPED */ sub_2021( l_U141[5] );
            OPEN_SEQUENCE_TASK( ref l_U466 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 168.50000000, -23.89000000, 0.30000000,  /* PLAYER_PED_ID */ sub_1341(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1341() );
            CLOSE_SEQUENCE_TASK( l_U466 );
            TASK_PERFORM_SEQUENCE( l_U141[5], l_U466 );
            CLEAR_SEQUENCE_TASK( l_U466 );
        }
        if (NOT (IS_PED_DEAD( l_U141[6] )))
        {
             /* P_ACTIVATEPED */ sub_2021( l_U141[6] );
            OPEN_SEQUENCE_TASK( ref l_U466 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 176.18000000, -25.59000000, 0.30000000,  /* PLAYER_PED_ID */ sub_1341(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1341() );
            CLOSE_SEQUENCE_TASK( l_U466 );
            TASK_PERFORM_SEQUENCE( l_U141[6], l_U466 );
            CLEAR_SEQUENCE_TASK( l_U466 );
        }
        if (NOT (IS_PED_DEAD( l_U141[7] )))
        {
             /* P_ACTIVATEPED */ sub_2021( l_U141[7] );
            OPEN_SEQUENCE_TASK( ref l_U466 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 212.31000000, -15.28000000, 0.10000000,  /* PLAYER_PED_ID */ sub_1341(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 213.54000000, -23.22000000, 0.10000000,  /* PLAYER_PED_ID */ sub_1341(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 208.74000000, -33.22000000, 0.10000000,  /* PLAYER_PED_ID */ sub_1341(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1341() );
            CLOSE_SEQUENCE_TASK( l_U466 );
            TASK_PERFORM_SEQUENCE( l_U141[7], l_U466 );
            CLEAR_SEQUENCE_TASK( l_U466 );
        }
        if (NOT (IS_PED_DEAD( l_U141[8] )))
        {
             /* P_ACTIVATEPED */ sub_2021( l_U141[8] );
            OPEN_SEQUENCE_TASK( ref l_U466 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 209.67000000, -15.28000000, 0.10000000,  /* PLAYER_PED_ID */ sub_1341(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 212.10000000, -30.67000000, 0.10000000,  /* PLAYER_PED_ID */ sub_1341(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 210.34000000, -33.22000000, 0.10000000,  /* PLAYER_PED_ID */ sub_1341(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1341() );
            CLOSE_SEQUENCE_TASK( l_U466 );
            TASK_PERFORM_SEQUENCE( l_U141[8], l_U466 );
            CLEAR_SEQUENCE_TASK( l_U466 );
        }
        if (NOT (IS_PED_DEAD( l_U141[9] )))
        {
             /* P_ACTIVATEPED */ sub_2021( l_U141[9] );
            OPEN_SEQUENCE_TASK( ref l_U466 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 211.51000000, -14.25000000, 0.10000000,  /* PLAYER_PED_ID */ sub_1341(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 214.40000000, -26.09000000, 0.10000000,  /* PLAYER_PED_ID */ sub_1341(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 211.31000000, -32.26000000, 0.10000000,  /* PLAYER_PED_ID */ sub_1341(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1341() );
            CLOSE_SEQUENCE_TASK( l_U466 );
            TASK_PERFORM_SEQUENCE( l_U141[9], l_U466 );
            CLEAR_SEQUENCE_TASK( l_U466 );
        }
        if (NOT (IS_PED_DEAD( l_U141[10] )))
        {
             /* P_ACTIVATEPED */ sub_2021( l_U141[10] );
            OPEN_SEQUENCE_TASK( ref l_U466 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 211.03000000, -15.28000000, 0.10000000,  /* PLAYER_PED_ID */ sub_1341(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 214.87000000, -33.22000000, 0.10000000,  /* PLAYER_PED_ID */ sub_1341(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1341() );
            CLOSE_SEQUENCE_TASK( l_U466 );
            TASK_PERFORM_SEQUENCE( l_U141[10], l_U466 );
            CLEAR_SEQUENCE_TASK( l_U466 );
        }
        if (NOT (IS_PED_DEAD( l_U141[11] )))
        {
             /* P_ACTIVATEPED */ sub_2021( l_U141[11] );
            OPEN_SEQUENCE_TASK( ref l_U466 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 177.31000000, 30.06000000, 0.30000000,  /* PLAYER_PED_ID */ sub_1341(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 176.98000000, -27.68000000, 0.30000000,  /* PLAYER_PED_ID */ sub_1341(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1341() );
            CLOSE_SEQUENCE_TASK( l_U466 );
            TASK_PERFORM_SEQUENCE( l_U141[11], l_U466 );
            CLEAR_SEQUENCE_TASK( l_U466 );
        }
        if (NOT (IS_PED_DEAD( l_U141[12] )))
        {
             /* P_ACTIVATEPED */ sub_2021( l_U141[12] );
            OPEN_SEQUENCE_TASK( ref l_U466 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 140.10000000, -15.43000000, 0.30000000,  /* PLAYER_PED_ID */ sub_1341(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 149.05000000, -24.78000000, 0.30000000,  /* PLAYER_PED_ID */ sub_1341(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 176.98000000, -27.68000000, 0.30000000,  /* PLAYER_PED_ID */ sub_1341(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1341() );
            CLOSE_SEQUENCE_TASK( l_U466 );
            TASK_PERFORM_SEQUENCE( l_U141[12], l_U466 );
            CLEAR_SEQUENCE_TASK( l_U466 );
        }
        if (NOT (IS_PED_DEAD( l_U141[13] )))
        {
             /* P_ACTIVATEPED */ sub_2021( l_U141[13] );
            OPEN_SEQUENCE_TASK( ref l_U466 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 140.10000000, -4.60000000, 0.30000000,  /* PLAYER_PED_ID */ sub_1341(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 176.18000000, -25.59000000, 0.30000000,  /* PLAYER_PED_ID */ sub_1341(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1341() );
            CLOSE_SEQUENCE_TASK( l_U466 );
            TASK_PERFORM_SEQUENCE( l_U141[13], l_U466 );
            CLEAR_SEQUENCE_TASK( l_U466 );
        }
    }
    return;
}

/* P_ACTIVATEPED */ void sub_2021(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

/* RESETTIMER */ void sub_4140(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* ISTIMERDONE */ int sub_4457(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_HANDLE_FAILURE */ void sub_5938()
{
    if (l_U114 > 10)
    {
        if (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() ))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eCheckpoint - STATE_CHECKPOINT_FAIL", 0 );
            l_U114 = 15;
            l_U576 = 1;
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eFailure - STATE_FAIL_MIDSCENE", 0 );
        }
    }
    return;
}

/* P_HANDLE_AUDIO_STREAM */ void sub_6111()
{
    switch (l_U117)
    {
        case 0:
        if (NOT (REQUEST_SCRIPT_AUDIO_BANK( "SCRIPT_MISSION\S_BUSDEP_RS_STANDOFF" )))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Requesting S_BUSDEP_RS_STANDOFF mission audio bank...", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "The S_BUSDEP_RS_STANDOFF mission audio bank was already requested!!!", 0 );
        }
         /* WRITESCRIPTLOG */ sub_178( "CCB", "eAudioStreamState - STATE_AUDIO_01", 0 );
        l_U117 = 1;
        break;
        case 1:
        if (REQUEST_SCRIPT_AUDIO_BANK( "SCRIPT_MISSION\S_BUSDEP_RS_STANDOFF" ))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "The S_BUSDEP_RS_STANDOFF mission audio bank was loaded...", 0 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eAudioStreamState - STATE_AUDIO_COMPLETE", 0 );
            l_U117 = 26;
        }
        break;
        case 26: break;
    }
    return;
}

/* P_HANDLE_SPEECH */ void sub_6649()
{
    if ((l_U118 < 26) AND (l_U118 > 0))
    {
        ;
    }
    switch (l_U118)
    {
        case 0:
         /* CREATETIMER */ sub_514( ref l_U548, 1000, 1, 0 );
         /* STARTTIMER */ sub_664( ref l_U548 );
         /* WRITESCRIPTLOG */ sub_178( "CCB", "eSpeech - STATE_AUDIO_01", 0 );
        l_U118 = 1;
        break;
        case 1:
        if (l_U114 >= 9)
        {
            if (l_U125 >= 6)
            {
                if (IS_SCREEN_FADED_IN())
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "Playing the SBUS_TFCA speech...", 0 );
                     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_6964( ref l_U703 );
                    if (NOT (IS_PED_DEAD( l_U141[1] )))
                    {
                         /* WRITESCRIPTLOG */ sub_178( "CCB", "Adding piStandoffVCPF_1 ped for script speech.", 0 );
                         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7170( 1, l_U141[1], "M10_CP_55_Avg", ref l_U703, 2, 0 );
                    }
                     /* PLAY_SINGLE_SPEECH */ sub_7414( "SBUS_TFCA", ref l_U703, 7, 1 );
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "eSpeech - STATE_AUDIO_02", 0 );
                    l_U118 = 2;
                }
            }
        }
        break;
        case 2:
        if (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_8368( l_U703 )))
        {
            l_U548._fU12 = 15000;
             /* RESETTIMER */ sub_4140( ref l_U548 );
             /* STARTTIMER */ sub_664( ref l_U548 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eSpeech - STATE_AUDIO_03", 0 );
            l_U118 = 3;
        }
        break;
        case 3:
        if ( /* ISTIMERDONE */ sub_4457( ref l_U548 ))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Playing the SBUS_TFCB speech...", 0 );
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_6964( ref l_U713 );
            if (NOT (IS_PED_DEAD( l_U141[4] )))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Adding piStandoffVCPF_4 ped for script speech.", 0 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7170( 1, l_U141[4], "M10_CP_53_Mus", ref l_U713, 2, 0 );
            }
             /* PLAY_SINGLE_SPEECH */ sub_7414( "SBUS_TFCB", ref l_U713, 7, 1 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eSpeech - STATE_AUDIO_04", 0 );
            l_U118 = 4;
        }
        break;
        case 4:
        if (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_8368( l_U713 )))
        {
            l_U548._fU12 = 15000;
             /* RESETTIMER */ sub_4140( ref l_U548 );
             /* STARTTIMER */ sub_664( ref l_U548 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eSpeech - STATE_AUDIO_05", 0 );
            l_U118 = 5;
        }
        break;
        case 5:
        if ( /* ISTIMERDONE */ sub_4457( ref l_U548 ))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Playing the SBUS_TFCD speech...", 0 );
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_6964( ref l_U723 );
            if (NOT (IS_PED_DEAD( l_U141[11] )))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Adding piStandoffVCPF_11 ped for script speech.", 0 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7170( 1, l_U141[11], "M10_CP_56_Avg", ref l_U723, 2, 0 );
            }
             /* PLAY_SINGLE_SPEECH */ sub_7414( "SBUS_TFCD", ref l_U723, 7, 1 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eSpeech - STATE_AUDIO_06", 0 );
            l_U118 = 6;
        }
        break;
        case 6:
        if (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_8368( l_U723 )))
        {
            l_U548._fU12 = 15000;
             /* RESETTIMER */ sub_4140( ref l_U548 );
             /* STARTTIMER */ sub_664( ref l_U548 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eSpeech - STATE_AUDIO_07", 0 );
            l_U118 = 7;
        }
        break;
        case 7:
        if ( /* ISTIMERDONE */ sub_4457( ref l_U548 ))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Playing the SBUS_TFCE speech...", 0 );
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_6964( ref l_U733 );
            if (NOT (IS_PED_DEAD( l_U141[12] )))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Adding piStandoffVCPF_12 ped for script speech.", 0 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7170( 1, l_U141[12], "M10_CP_57_Mus", ref l_U733, 2, 0 );
            }
             /* PLAY_SINGLE_SPEECH */ sub_7414( "SBUS_TFCE", ref l_U733, 7, 1 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eSpeech - STATE_AUDIO_08", 0 );
            l_U118 = 8;
        }
        break;
        case 8:
        if (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_8368( l_U733 )))
        {
            l_U548._fU12 = 15000;
             /* RESETTIMER */ sub_4140( ref l_U548 );
             /* STARTTIMER */ sub_664( ref l_U548 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eSpeech - STATE_AUDIO_09", 0 );
            l_U118 = 9;
        }
        break;
        case 9:
        if ( /* ISTIMERDONE */ sub_4457( ref l_U548 ))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Playing the SBUS_TFCF speech...", 0 );
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_6964( ref l_U743 );
            if (NOT (IS_PED_DEAD( l_U141[13] )))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Adding piStandoffVCPF_13 ped for script speech.", 0 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7170( 1, l_U141[13], "M10_CP_58_Avg", ref l_U743, 2, 0 );
            }
             /* PLAY_SINGLE_SPEECH */ sub_7414( "SBUS_TFCF", ref l_U743, 7, 1 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eSpeech - STATE_AUDIO_10", 0 );
            l_U118 = 10;
        }
        break;
        case 10:
        if (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_8368( l_U743 )))
        {
            l_U548._fU12 = 15000;
             /* RESETTIMER */ sub_4140( ref l_U548 );
             /* STARTTIMER */ sub_664( ref l_U548 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eSpeech - STATE_AUDIO_COMPLETE", 0 );
            l_U118 = 26;
        }
        break;
        case 26: break;
    }
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_6964(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_7170(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_7414(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_7459( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_7459(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_7546( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_7546(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_7598( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_8116( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_7598(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_8116(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* IS_SPEECH_CURRENTLY_PLAYING */ int sub_8368(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_8411( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

/* IS_SCRIPT_SPEECH_STRUCT_VALID */ boolean sub_8411(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

/* P_HANDLE_MUSIC */ void sub_10116()
{
    switch (l_U119)
    {
        case 0:
        l_U539._fU12 = 0;
         /* RESETTIMER */ sub_4140( ref l_U539 );
         /* STARTTIMER */ sub_664( ref l_U539 );
         /* WRITESCRIPTLOG */ sub_178( "CCB", "eMusic - STATE_AUDIO_01", 0 );
        l_U119 = 1;
        break;
        case 1:
        if ((g_U2875[11] > 0) || (g_U763 == 11))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Suspending music...", 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eMusic - STATE_AUDIO_03", 0 );
            l_U119 = 3;
        }
        else if (l_U114 >= 8)
        {
            if (l_U123 >= 4)
            {
                if (GET_CUTSCENE_TIME_MS() >= 41100)
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "Starting BUSDEPOT_ACTION_SONG_03 music track with BUSDEPOT_03_2 mood.", 0 );
                    AUDIO_MUSIC_FORCE_TRACK( "BUSDEPOT_ACTION_SONG_03", "BUSDEPOT_03_2", "", 0.00000000, 7000, 5000, -1082130432, 0 );
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "eMusic - STATE_AUDIO_02", 0 );
                    l_U119 = 2;
                }
                else if (HAS_CUTSCENE_FINISHED())
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "The cutscene was skipped...", 0 );
                    l_U539._fU12 = 0;
                     /* RESETTIMER */ sub_4140( ref l_U539 );
                     /* STARTTIMER */ sub_664( ref l_U539 );
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "eMusic - STATE_AUDIO_03", 0 );
                    l_U119 = 3;
                }
            }
        }
        break;
        case 2:
        if (GET_CUTSCENE_TIME_MS() >= 58650)
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Starting BUSDEPOT_ACTION_SONG_03 music track with BUSDEPOT_03_2_3_4 mood.", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "BUSDEPOT_ACTION_SONG_03", "BUSDEPOT_03_2_3_4", "", 0.00000000, 6000, 5000, -1082130432, 0 );
            l_U539._fU12 = 0;
             /* RESETTIMER */ sub_4140( ref l_U539 );
             /* STARTTIMER */ sub_664( ref l_U539 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eMusic - STATE_AUDIO_03", 0 );
            l_U119 = 3;
        }
        else if (HAS_CUTSCENE_FINISHED())
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "The cutscene was skipped...", 0 );
            l_U539._fU12 = 0;
             /* RESETTIMER */ sub_4140( ref l_U539 );
             /* STARTTIMER */ sub_664( ref l_U539 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eMusic - STATE_AUDIO_03", 0 );
            l_U119 = 3;
        }
        break;
        case 3:
        if (l_U114 >= 10)
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Starting BUSDEPOT_ACTION_SONG_03 music track with BUSDEPOT_03_2_3_4 mood.", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "BUSDEPOT_ACTION_SONG_03", "BUSDEPOT_03_2_3_4", 0, 0, -1, -1, -1082130432, 0 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eMusic - STATE_AUDIO_04", 0 );
            l_U119 = 4;
        }
        break;
        case 4:
        if (l_U114 >= 11)
        {
            if (l_U120 >= 3)
            {
                if (( /* F_GET_NUM_DEAD_PEDS_IN_ARRAY */ sub_11398( ref l_U141 )) >= 5)
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "Starting BUSDEPOT_ACTION_SONG_03 music track with BUSDEPOT_03_2_3_4_5 mood.", 0 );
                    AUDIO_MUSIC_FORCE_TRACK( "BUSDEPOT_ACTION_SONG_03", "BUSDEPOT_03_2_3_4_5", "", 0.00000000, 5000, 8000, -1082130432, 0 );
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "eMusic - STATE_AUDIO_05", 0 );
                    l_U119 = 5;
                }
            }
        }
        break;
        case 5:
        if (l_U114 >= 11)
        {
            if (l_U120 >= 3)
            {
                if (((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (IS_BULLET_CAMERA_RUNNING( 0 ))) || (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_11776( ref l_U141 )) == 0))
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "Suspending music...", 0 );
                    AUDIO_MUSIC_SUSPEND( 500 );
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "eMusic - STATE_AUDIO_COMPLETE", 0 );
                    l_U119 = 26;
                }
            }
        }
        break;
        case 26: break;
    }
    return;
}

/* F_GET_NUM_DEAD_PEDS_IN_ARRAY */ void sub_11398(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

/* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ void sub_11776(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

/* P_HANDLE_SPAWN_PROPS */ void sub_12026()
{
    switch (l_U122)
    {
        case 0:
        if (l_U114 >= 3)
        {
            l_U134 = 0;
            if ((g_U2875[11] > 0) || (g_U763 == 11))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "eSpawnProps - STATE_SPAWN_SETUP", 0 );
                l_U122 = 2;
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "eSpawnProps - STATE_SPAWN_IDLE", 0 );
                l_U122 = 1;
            }
        }
        break;
        case 1:
        if (l_U134 < 2)
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Spawning oiProps_:", 0 );
            PRINTINT( l_U134 );
            PRINTNL();
            l_U432[l_U134] =  /* CREATEOBJECTNOOFFSET */ sub_12362( l_U449[l_U134], l_U602[l_U134], l_U609[l_U134], 0, 0, 0 );
             /* P_SETUP_PROPS */ sub_12978( ref l_U432, l_U134 );
            l_U134++;
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eSpawnProps - STATE_SPAWN_SETUP", 0 );
            l_U122 = 2;
        }
        break;
        case 2:
        if (l_U114 >= 10)
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eSpawnProps - STATE_SPAWN_COMPLETE", 0 );
            l_U122 = 3;
        }
        break;
        case 3: break;
    }
    return;
}

/* CREATEOBJECTNOOFFSET */ void sub_12362(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_12495( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* LOADMODEL */ void sub_12495(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_12612( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* WRITE_STRING */ void sub_12612(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_SETUP_PROPS */ void sub_12978(unknown uParam0, int iParam1)
{
    if (DOES_OBJECT_EXIST( (uParam0^)[iParam1] ))
    {
        FREEZE_OBJECT_POSITION( (uParam0^)[iParam1], 1 );
        if (iParam1 == 1)
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Hiding the oiStandoffProps_1 object.", 0 );
            SET_OBJECT_VISIBLE( l_U432[1], 0 );
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_178( "CCB", "The oiTempProp object is NOT valid!!!", 0 );
    }
    return;
}

/* P_HANDLE_SPAWN_VEHICLES */ void sub_13338()
{
    switch (l_U121)
    {
        case 0:
        if (l_U114 >= 3)
        {
            if (l_U122 >= 2)
            {
                l_U133 = 0;
                if ((g_U2875[11] > 0) || (g_U763 == 11))
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "eSpawnVehicles - STATE_SPAWN_SETUP", 0 );
                    l_U121 = 2;
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "eSpawnVehicles - STATE_SPAWN_IDLE", 0 );
                    l_U121 = 1;
                }
            }
        }
        break;
        case 1:
         /* P_SPAWN_VEHICLES */ sub_13590();
         /* WRITESCRIPTLOG */ sub_178( "CCB", "eSpawnVehicles - STATE_SPAWN_SETUP", 0 );
        l_U121 = 2;
        break;
        case 2:
        if (l_U114 >= 10)
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eSpawnVehicles - STATE_SPAWN_COMPLETE", 0 );
            l_U121 = 3;
        }
        break;
        case 3: break;
    }
    return;
}

/* P_SPAWN_VEHICLES */ void sub_13590()
{
    int I;

     /* WRITESCRIPTLOG */ sub_178( "CCB", "P_SPAWN_VEHICLES", 0 );
    for ( I = 0; I <= (l_U452 - 1); I++ )
    {
         /* WRITESCRIPTLOG */ sub_178( "CCB", "Spawning viStandoffVehicles:", 0 );
        PRINTINT( I );
        PRINTNL();
        if (NOT (DOES_VEHICLE_EXIST( l_U452[I] )))
        {
            l_U452[I] =  /* CREATEVEHICLE */ sub_13780( l_U440[I], l_U577[I], l_U625[I], 0, 0, 0 );
             /* P_SETUP_VEHICLES */ sub_14103( ref l_U452, I );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "The viStandoffVehicles vehicle was already created.", 0 );
        }
    }
     /* WRITESCRIPTLOG */ sub_178( "CCB", "Enabling all vehicles to high LOD...", 0 );
    SET_ALL_VEHICLES_HIGH_LOD( 1 );
    return;
}

/* CREATEVEHICLE */ void sub_13780(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_12495( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for vehicle to exist: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

/* P_SETUP_VEHICLES */ void sub_14103(unknown uParam0, int iParam1)
{
    if (NOT (IS_VEHICLE_DEAD( (uParam0^)[iParam1] )))
    {
        SET_VEHICLE_ON_GROUND_PROPERLY( (uParam0^)[iParam1] );
        SET_VEHICLE_FREEZE_AFTER_BLOWING_UP( (uParam0^)[iParam1], 1 );
        SET_VEHICLE_CAN_BE_DAMAGED( (uParam0^)[iParam1], 1 );
        SET_VEHICLE_PROOFS( (uParam0^)[iParam1], 0, 0, 1, 0, 0 );
        if (iParam1 == 0)
        {
            SET_VEHICLE_ENGINE_HEALTH( (uParam0^)[iParam1], 400 );
            SET_VEHICLE_PETROL_TANK_HEALTH( (uParam0^)[iParam1], 200 );
        }
        else
        {
            SET_VEHICLE_ENGINE_HEALTH( (uParam0^)[iParam1], 500.00000000 );
            SET_VEHICLE_PETROL_TANK_HEALTH( (uParam0^)[iParam1], 200.00000000 );
        }
         /* WRITESCRIPTLOG */ sub_178( "CCB", "The vehicle's engine health is:", 0 );
        PRINTFLOAT( GET_VEHICLE_ENGINE_HEALTH( (uParam0^)[iParam1] ) );
        PRINTNL();
         /* WRITESCRIPTLOG */ sub_178( "CCB", "The vehicle's petrol tank health is:", 0 );
        PRINTFLOAT( GET_VEHICLE_PETROL_TANK_HEALTH( (uParam0^)[iParam1] ) );
        PRINTNL();
        SET_VEHICLE_LIGHTS( (uParam0^)[iParam1], 1 );
        SET_VEHICLE_DIRT_LEVEL( (uParam0^)[iParam1], 4.00000000 );
        if (iParam1 == 0)
        {
            l_U136 = START_PARTICLE_FX_LOOPED_ON_VEHICLE( "Veh_Rad_Steam_S", (uParam0^)[iParam1], 0.00000000, 5.75000000, 1.00000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
        }
        else if ((iParam1 == 7) || ((iParam1 == 6) || (iParam1 == 3)))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Setting vehicle extra 1...", 0 );
            SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 1, 0 );
        }
        if (iParam1 == 0)
        {
            SET_VEHICLE_COLOUR_COMBINATION( (uParam0^)[iParam1], 0 );
        }
        else if (iParam1 == 1)
        {
            SET_VEHICLE_COLOUR_COMBINATION( (uParam0^)[iParam1], 0 );
        }
        else if (iParam1 == 2)
        {
            SET_VEHICLE_COLOUR_COMBINATION( (uParam0^)[iParam1], 0 );
        }
        else if (iParam1 == 3)
        {
            SET_VEHICLE_COLOUR_COMBINATION( (uParam0^)[iParam1], 0 );
        }
        else if (iParam1 == 4)
        {
            SET_VEHICLE_COLOUR_COMBINATION( (uParam0^)[iParam1], 0 );
        }
        else if (iParam1 == 5)
        {
            FREEZE_VEHICLE_POSITION( (uParam0^)[iParam1], 1 );
            SET_VEHICLE_VISIBLE( (uParam0^)[iParam1], 0 );
            SET_VEHICLE_ENGINE_ON( (uParam0^)[iParam1], 1, 1 );
            SET_VEHICLE_COLOUR_COMBINATION( (uParam0^)[iParam1], 0 );
            SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 1, 1 );
            SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 2, 1 );
            SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 3, 0 );
            SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 4, 1 );
            SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 5, 1 );
            SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 6, 1 );
            SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 7, 1 );
            SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 8, 1 );
        }
        else if (iParam1 == 6)
        {
            SET_VEHICLE_COLOUR_COMBINATION( (uParam0^)[iParam1], 1 );
            SET_VEHICLE_VISIBLE( (uParam0^)[iParam1], 0 );
        }
        else if (iParam1 == 7)
        {
            SET_VEHICLE_COLOUR_COMBINATION( (uParam0^)[iParam1], 2 );
            SET_VEHICLE_VISIBLE( (uParam0^)[iParam1], 0 );
        };;;;;;;;
    }
    return;
}

/* P_HANDLE_SPAWN_STANDOFF_VCPF */ void sub_15389()
{
    switch (l_U120)
    {
        case 0:
        if (l_U114 >= 3)
        {
            if (l_U121 >= 2)
            {
                l_U132 = 0;
                if ((g_U2875[11] > 0) || (g_U763 == 11))
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "eSpawnStandoffVCPF - STATE_SPAWN_SETUP", 0 );
                    l_U120 = 2;
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "eSpawnStandoffVCPF - STATE_SPAWN_IDLE", 0 );
                    l_U120 = 1;
                }
            }
        }
        break;
        case 1:
        if ( /* F_STREAMREQ_MODELNAMES_IS_ASSET_LOADED */ sub_15663( g_U2106, ref g_U910 ))
        {
             /* P_SPAWN_STANDOFF_VCPF */ sub_15862();
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eSpawnStandoffVCPF - STATE_SPAWN_SETUP", 0 );
            l_U120 = 2;
        }
        break;
        case 2:
        if (l_U114 >= 10)
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eSpawnStandoffVCPF - STATE_SPAWN_COMPLETE", 0 );
            l_U120 = 3;
        }
        break;
        case 3: break;
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_ASSET_LOADED */ int sub_15663(int iParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I]._fU4 == 3)
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is loaded: {!f1}", 2, 1, -874832622, 513, (uParam1^)[I]._fU0 );
                return 1;
            }
        }
    }
    return 0;
}

/* P_SPAWN_STANDOFF_VCPF */ void sub_15862()
{
    int I;

     /* WRITESCRIPTLOG */ sub_178( "CCB", "P_SPAWN_STANDOFF_VCPF", 0 );
    for ( I = 0; I <= (l_U141 - 1); I++ )
    {
        if (NOT (DOES_PED_EXIST( l_U141[I] )))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Spawning piStandoffVCPF_:", 0 );
            PRINTINT( I );
            PRINTNL();
            if (I == 0)
            {
                if (NOT (IS_VEHICLE_DEAD( l_U452[5] )))
                {
                    l_U141[I] =  /* CREATEPEDINVEHICLE */ sub_16139( ref l_U164[I], l_U452[5], -1, 0, "/Global/VehicleCar/Driver/JEEP_JASRE_BUS/DRIVER_ANIMS/DRIVER" );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "The viStandoffVehicles_5 vehicle is NOT valid!!!", 0 );
                }
            }
            else if (I == 1)
            {
                if (NOT (IS_VEHICLE_DEAD( l_U452[5] )))
                {
                    l_U141[I] =  /* CREATEPEDINVEHICLE */ sub_16139( ref l_U164[I], l_U452[5], 2, 0, "/Global/VehicleCar/Passenger_BackRight/JEEP_JASRE_BUS/PASSENGER_ANIMS/PASSENGER" );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "The viStandoffVehicles_5 vehicle is NOT valid!!!", 0 );
                }
            }
            else if (I == 2)
            {
                if (NOT (IS_VEHICLE_DEAD( l_U452[5] )))
                {
                    l_U141[I] =  /* CREATEPEDINVEHICLE */ sub_16139( ref l_U164[I], l_U452[5], 0, 0, "/Global/VehicleCar/Passenger_FrontRight/JEEP_JASRE_BUS/PASSENGER_ANIMS/PASSENGER" );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "The viStandoffVehicles_5 vehicle is NOT valid!!!", 0 );
                }
            }
            else if (I == 3)
            {
                if (NOT (IS_VEHICLE_DEAD( l_U452[5] )))
                {
                    l_U141[I] =  /* CREATEPEDINVEHICLE */ sub_16139( ref l_U164[I], l_U452[5], 1, 0, "/Global/VehicleCar/Passenger_BackLeft/JEEP_JASRE_BUS/PASSENGER_ANIMS/PASSENGER" );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "The viStandoffVehicles_5 vehicle is NOT valid!!!", 0 );
                }
            }
            else if (I == 14)
            {
                if (NOT (IS_VEHICLE_DEAD( l_U452[6] )))
                {
                    l_U141[I] =  /* CREATEPEDINVEHICLE */ sub_16139( ref l_U164[I], l_U452[6], -1, 0, "/Global/VehicleCar/Driver/CAR_GENSEDAN/DRIVER_ANIMS/DRIVER" );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "The viStandoffVehicles_6 vehicle is NOT valid!!!", 0 );
                }
            }
            else if (I == 15)
            {
                if (NOT (IS_VEHICLE_DEAD( l_U452[6] )))
                {
                    l_U141[I] =  /* CREATEPEDINVEHICLE */ sub_16139( ref l_U164[I], l_U452[6], 0, 0, "/Global/VehicleCar/Passenger_FrontRight/CAR_GENSEDAN/PASSENGER_ANIMS/PASSENGER" );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "The viStandoffVehicles_6 vehicle is NOT valid!!!", 0 );
                }
            }
            else if (I == 16)
            {
                if (NOT (IS_VEHICLE_DEAD( l_U452[7] )))
                {
                    l_U141[I] =  /* CREATEPEDINVEHICLE */ sub_16139( ref l_U164[I], l_U452[7], -1, 0, "/Global/VehicleCar/Driver/CAR_GENSEDAN/DRIVER_ANIMS/DRIVER" );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "The viStandoffVehicles_7 vehicle is NOT valid!!!", 0 );
                }
            }
            else if (I == 17)
            {
                if (NOT (IS_VEHICLE_DEAD( l_U452[7] )))
                {
                    l_U141[I] =  /* CREATEPEDINVEHICLE */ sub_16139( ref l_U164[I], l_U452[7], 0, 0, "/Global/VehicleCar/Passenger_FrontRight/CAR_GENSEDAN/PASSENGER_ANIMS/PASSENGER" );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "The viStandoffVehicles_7 vehicle is NOT valid!!!", 0 );
                }
            }
            else
            {
                l_U141[I] =  /* CREATEPED */ sub_18455( ref l_U164[I] );
            };;;;;;;;
             /* P_SETUP_STANDOFF_VCPF */ sub_18993( ref l_U141, I );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "The piStandoffVCPF ped was already created.", 0 );
        }
    }
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_23276( ref l_U141, "piStandoffVCPF" );
    SET_PED_MODEL_LOD_DISTANCES( g_U2106, 10.00000000, 80.00000000 );
    return;
}

/* CREATEPEDINVEHICLE */ void sub_16139(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4)
{
    if ((HAS_MODEL_LOADED( iParam0->_fU16 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_12495( iParam0->_fU16, 1 );
    }
    if (((IS_VEHICLE_DEAD( uParam1 )) == 0) AND ((DOES_VEHICLE_EXIST( uParam1 )) == 1))
    {
        iParam0->_fU40 = CREATE_PED_INSIDE_VEHICLE( uParam1, iParam0->_fU24, iParam0->_fU16, uParam2, uParam4, iParam0->_fU48 );
    }
    else
    {
        SCRIPT_ASSERT( "The vehicle your trying to create a ped inside of is not valid!!!", 0 );
    }
    if (iParam3 == 1)
    {
        while ((DOES_PED_EXIST( iParam0->_fU40 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for ped created inside a vehicle to exist... ###", 0 );
            WAIT( 0 );
        }
    }
     /* SETPEDDEFAULTSTATS */ sub_16549( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_16650( iParam0->_fU40 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        iParam0->_fU44 = 1;
    }
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_16549(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_16650(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* CREATEPED */ void sub_18455(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_12495( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_16549( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_16650( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* P_SETUP_STANDOFF_VCPF */ void sub_18993(unknown uParam0, int iParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^)[iParam1] )))
    {
        if (iParam1 == 0)
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Setting up aigStandoffVCPF AI group.", 0 );
             /* P_SETUP_AI_GROUP */ sub_19117( ref l_U425, 1056964608, 0 );
            SET_GROUP_GRENADE_PARAMS( l_U425._fU0, 8000 );
            SET_GROUP_RATIO_FIRING_AT_VISIBLE( l_U425._fU0, 0.80000000 );
            SET_GROUP_RATIO_FIRING_AT_INVISIBLE( l_U425._fU0, 0.70000000 );
            SET_GROUP_FORMATION_SPACING( l_U425._fU0, 3.00000000 );
        }
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_19587( (uParam0^)[iParam1], ref l_U425 );
         /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_19988( ref (uParam0^)[iParam1], ref g_U2088, 3.00000000, 40.00000000 );
        if (iParam1 == 0)
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Giving wtLevelRifle weapon to ped.", 0 );
             /* F_GIVEPEDWEAPON */ sub_20185( (uParam0^)[iParam1], g_U2857, 25000, 0, 0 );
        }
        else if (iParam1 == 1)
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Giving wtLevelRifle weapon to ped.", 0 );
             /* F_GIVEPEDWEAPONTOHOLSTER */ sub_20666( (uParam0^)[iParam1], g_U2857, 2, 25000, 0 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Giving wtTermGrenade weapon to ped.", 0 );
            l_U465 =  /* F_GIVEPEDWEAPON */ sub_20185( (uParam0^)[iParam1], g_U2863, 25000, 0, 0 );
            if (GET_DOES_WEAPON_EXIST( l_U465 ))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "The wiGrenade weapon was given to the ped.", 0 );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "The wiGrenade weapon is NOT valid!!!", 0 );
            }
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Setting the piStandoffVCPF_1 ped to NOT lockonable...", 0 );
            SET_PED_AIM_LOCKONABLE( (uParam0^)[iParam1], 0 );
        }
        else if (iParam1 == 2)
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Giving wtLevelRifle weapon to ped.", 0 );
             /* F_GIVEPEDWEAPON */ sub_20185( (uParam0^)[iParam1], g_U2857, 25000, 0, 0 );
        }
        else if (iParam1 == 3)
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Giving wtLevelRifle weapon to ped.", 0 );
             /* F_GIVEPEDWEAPON */ sub_20185( (uParam0^)[iParam1], g_U2857, 25000, 0, 0 );
        }
        else if ((iParam1 == 17) || ((iParam1 == 14) || ((iParam1 == 13) || ((iParam1 == 10) || ((iParam1 == 7) || (iParam1 == 4))))))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Giving wtLevelPistol weapon to ped.", 0 );
             /* F_GIVEPEDWEAPON */ sub_20185( (uParam0^)[iParam1], g_U2854, 25000, 0, 0 );
        }
        else if ((iParam1 == 11) || ((iParam1 == 8) || (iParam1 == 5)))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Giving wtLevelRifle weapon to ped.", 0 );
             /* F_GIVEPEDWEAPON */ sub_20185( (uParam0^)[iParam1], g_U2857, 25000, 0, 0 );
        }
        else if ((iParam1 == 15) || ((iParam1 == 16) || ((iParam1 == 12) || ((iParam1 == 9) || (iParam1 == 6)))))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Giving wtLevelSMG weapon to ped.", 0 );
             /* F_GIVEPEDWEAPON */ sub_20185( (uParam0^)[iParam1], g_U2855, 25000, 0, 0 );
        };;;;;;;
        if (iParam1 == 0)
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Assigning ped to tebParkingRight tetherbox.", 0 );
             /* P_TETHERPED */ sub_21939( ref l_U754, (uParam0^)[iParam1], 3 );
        }
        else if (iParam1 == 2)
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Assigning ped to tebParkingLeft tetherbox.", 0 );
             /* P_TETHERPED */ sub_21939( ref l_U753, (uParam0^)[iParam1], 3 );
        }
        else if (iParam1 == 3)
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Assigning ped to tebParkingLeft tetherbox.", 0 );
             /* P_TETHERPED */ sub_21939( ref l_U753, (uParam0^)[iParam1], 3 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Assigning ped to tebCombat tetherbox.", 0 );
             /* P_TETHERPED */ sub_21939( ref l_U755, (uParam0^)[iParam1], 3 );
        };;;
        if (iParam1 == 2)
        {
            SET_PED_PROP_INDEX( (uParam0^)[iParam1], 2, 0, 0, 255 );
        }
        else if (iParam1 == 4)
        {
            SET_PED_PROP_INDEX( (uParam0^)[iParam1], 0, 2, 0, 255 );
        }
        else if (iParam1 == 5)
        {
            SET_PED_PROP_INDEX( (uParam0^)[iParam1], 0, 0, 0, 255 );
        }
        else if (iParam1 == 8)
        {
            SET_PED_PROP_INDEX( (uParam0^)[iParam1], 0, 0, 1, 255 );
        }
        else if (iParam1 == 10)
        {
            SET_PED_PROP_INDEX( (uParam0^)[iParam1], 0, 1, 0, 255 );
        }
        else if (iParam1 == 11)
        {
            SET_PED_PROP_INDEX( (uParam0^)[iParam1], 0, 0, 0, 255 );
            SET_PED_PROP_INDEX( (uParam0^)[iParam1], 2, 0, 0, 255 );
        }
        else if (iParam1 == 13)
        {
            SET_PED_PROP_INDEX( (uParam0^)[iParam1], 0, 0, 0, 255 );
            SET_PED_PROP_INDEX( (uParam0^)[iParam1], 2, 0, 0, 255 );
        }
        else if (iParam1 == 14)
        {
            ;
        }
        else if (iParam1 == 15)
        {
            ;
        }
        else if (iParam1 == 16)
        {
            ;
        }
        else if (iParam1 == 17)
        {
            ;
        };;;;;;;;;;;
        if ((iParam1 == 17) || ((iParam1 == 16) || ((iParam1 == 15) || ((iParam1 == 7) || (iParam1 == 4)))))
        {
            SET_PED_FLAG_COMBAT_LEADER( (uParam0^)[iParam1], 1 );
        }
        SET_PED_COMBAT_MOVEMENT( (uParam0^)[iParam1], 3 );
        SET_PED_COMBAT_ATTRIBUTES( (uParam0^)[iParam1], 256, 0 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( (uParam0^)[iParam1], 0 );
        SET_PED_PATH_CAN_USE_CLIMBOVERS( (uParam0^)[iParam1], 0 );
        SET_PED_EMOTION_STATE( (uParam0^)[iParam1], 1 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )))
        {
            REGISTER_TARGET( (uParam0^)[iParam1],  /* PLAYER_PED_ID */ sub_1341() );
        }
        if (iParam1 == 1)
        {
            if (GET_DOES_WEAPON_EXIST( l_U465 ))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "The piStandoffVCPF_1 ped has the wiGrenade weapon...", 0 );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "The wiGrenade weapon does NOT exist!!!", 0 );
            }
        }
        if ((iParam1 == 17) || ((iParam1 == 16) || ((iParam1 == 15) || (iParam1 == 14))))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^)[iParam1], 1 );
        }
        else
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^)[iParam1], 1 );
            TASK_STAND_STILL( (uParam0^)[iParam1], -1 );
        }
        if ((iParam1 == 17) || ((iParam1 == 16) || ((iParam1 == 15) || ((iParam1 == 14) || ((iParam1 == 3) || ((iParam1 == 2) || ((iParam1 == 1) || (iParam1 == 0))))))))
        {
            SET_PED_VISIBLE( (uParam0^)[iParam1], 0 );
        }
        else
        {
             /* P_DEACTIVATEPED */ sub_23058( (uParam0^)[iParam1] );
        }
    }
    return;
}

/* P_SETUP_AI_GROUP */ void sub_19117(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_19587(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_12612( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_19117( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_19117( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* P_SET_PED_TEMPLATE_AND_RANGES */ void sub_19988(unknown uParam0, unknown uParam1, float fParam2, float fParam3)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_20185(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_12612( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_20666(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_12612( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* P_TETHERPED */ void sub_21939(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

/* P_DEACTIVATEPED */ void sub_23058(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

/* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ void sub_23276(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

/* P_HANDLE_SP_ACHIEVEMENTS */ void sub_23592()
{
    switch (l_U777)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_178( "CCB", "ePartII - STATE_CHALLENGE_IDLE", 0 );
        l_U777 = 1;
        break;
        case 1:
        if (l_U114 >= 11)
        {
            if (l_U114 == 12)
            {
                if (SCRIPT_VAR_HASH_EXISTS( 1701971384 ))
                {
                    SCRIPT_VAR_HASH_SET_INT( 1701971384, 1 );
                    DISPLAYF( "[CCB] ### The current OldPainless value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( 1701971384 ) );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "The OldPainless script variable is NOT valid!!!", 0 );
                }
                if (NOT (HAS_ACHIEVEMENT_BEEN_PASSED( 13 )))
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "Giving the player the SP_PART_II_COMPLETE achievement.", 0 );
                    GIVE_ACHIEVEMENT_TO_PLAYER( 13 );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "The player already has the SP_PART_II_COMPLETE achievement.", 0 );
                }
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "ePartII - STATE_CHALLENGE_COMPLETE", 0 );
                l_U777 = 2;
            }
        }
        break;
        case 2: break;
    }
    return;
}

/* P_UPDATE_VCPF_VEHICLE1 */ void sub_24162()
{
    switch (l_U129)
    {
        case 0:
         /* CREATETIMER */ sub_514( ref l_U557, 0, 1, 0 );
         /* STARTTIMER */ sub_664( ref l_U557 );
         /* WRITESCRIPTLOG */ sub_178( "CCB", "eVCPFVehicle1 - STATE_EVENT_PRELOAD", 0 );
        l_U129 = 1;
        break;
        case 1:
        if (l_U120 >= 2)
        {
            if ( /* F_STREAMREQ_VEHICLE_RECORDING_IS_ASSET_LOADED */ sub_24358( 300, ref g_U1474 ))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "eVCPFVehicle1 - STATE_EVENT_START", 0 );
                l_U129 = 6;
            }
        }
        break;
        case 6:
        if ((g_U2875[11] > 0) || (g_U763 == 11))
        {
            if (l_U125 >= 4)
            {
                 /* P_START_VEHICLE_RECORDING */ sub_24680( l_U452[6], 300, 1.25000000, 5859.00000000 );
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "The vehicle1 vehicle recording duration is:", 0 );
                PRINTFLOAT( GET_TOTAL_DURATION_OF_VEHICLE_RECORDING( 300 ) );
                PRINTNL();
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "eVCPFVehicle1 - STATE_EVENT_IN", 0 );
                l_U129 = 7;
            }
        }
        else if (l_U123 >= 4)
        {
            if ((HAS_CUTSCENE_FINISHED()) || (GET_CUTSCENE_TIME_MS() >= 59634))
            {
                 /* P_START_VEHICLE_RECORDING */ sub_24680( l_U452[6], 300, 1.25000000, 5859.00000000 );
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "eVCPFVehicle1 - STATE_EVENT_IN", 0 );
                l_U129 = 7;
            }
        }
        break;
        case 7:
        if (NOT (IS_VEHICLE_DEAD( l_U452[6] )))
        {
            SET_VEHICLE_VISIBLE( l_U452[6], 1 );
        }
         /* CREATETIMER */ sub_514( ref l_U557, 6000, 1, 0 );
         /* STARTTIMER */ sub_664( ref l_U557 );
         /* WRITESCRIPTLOG */ sub_178( "CCB", "eVCPFVehicle1 - STATE_EVENT_01", 0 );
        l_U129 = 10;
        break;
        case 10:
        if ( /* ISTIMERDONE */ sub_4457( ref l_U557 ))
        {
             /* P_START_VCPF_VEHICLE1 */ sub_25345();
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eVCPFVehicle1 - STATE_EVENT_COMPLETE", 0 );
            l_U129 = 44;
        }
        break;
        case 44: break;
    }
    return;
}

/* F_STREAMREQ_VEHICLE_RECORDING_IS_ASSET_LOADED */ int sub_24358(int iParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I]._fU4 == 3)
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB]### The VEHICLE_RECORDING is loaded: {} ###", 1, 513, (uParam1^)[I]._fU0 );
                return 1;
            }
        }
    }
    return 0;
}

/* P_START_VEHICLE_RECORDING */ void sub_24680(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Stopping the vehicle recording.", 0 );
            STOP_PLAYBACK_RECORDED_VEHICLE( uParam0 );
        }
        if (HAS_VEHICLE_RECORDING_BEEN_LOADED( uParam1 ))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Starting the vehicle recording.", 0 );
            START_PLAYBACK_RECORDED_VEHICLE( uParam0, uParam1 );
            SET_PLAYBACK_SPEED( uParam0, uParam2 );
            SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE( uParam0, uParam3 );
        }
        else
        {
            SCRIPT_ASSERT( "The vehicle recording is NOT loaded!!!", 0 );
        }
    }
    return;
}

/* P_START_VCPF_VEHICLE1 */ void sub_25345()
{
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )))
    {
         /* WRITESCRIPTLOG */ sub_178( "CCB", "P_START_VCPF_VEHICLE1", 0 );
        if (NOT (IS_PED_DEAD( l_U141[14] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U466 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            if (NOT (IS_VEHICLE_DEAD( l_U452[6] )))
            {
                TASK_LEAVE_VEHICLE_IMMEDIATELY( 0, l_U452[6] );
            }
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 208.22000000, -48.47000000, 0.88000000,  /* PLAYER_PED_ID */ sub_1341(), 3, 1, 1056964608, 0, 1, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1341() );
            CLOSE_SEQUENCE_TASK( l_U466 );
            TASK_PERFORM_SEQUENCE( l_U141[14], l_U466 );
            CLEAR_SEQUENCE_TASK( l_U466 );
        }
        if (NOT (IS_PED_DEAD( l_U141[15] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U466 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            if (NOT (IS_VEHICLE_DEAD( l_U452[6] )))
            {
                TASK_LEAVE_VEHICLE_IMMEDIATELY( 0, l_U452[6] );
            }
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 184.60000000, -44.85000000, 0.02000000,  /* PLAYER_PED_ID */ sub_1341(), 3, 0, 1056964608, 0, 1, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1341() );
            CLOSE_SEQUENCE_TASK( l_U466 );
            TASK_PERFORM_SEQUENCE( l_U141[15], l_U466 );
            CLEAR_SEQUENCE_TASK( l_U466 );
        }
    }
    return;
}

/* P_UPDATE_VCPF_VEHICLE2 */ void sub_25884()
{
    switch (l_U130)
    {
        case 0:
         /* CREATETIMER */ sub_514( ref l_U566, 0, 1, 0 );
         /* STARTTIMER */ sub_664( ref l_U566 );
         /* WRITESCRIPTLOG */ sub_178( "CCB", "eVCPFVehicle2 - STATE_EVENT_PRELOAD", 0 );
        l_U130 = 1;
        break;
        case 1:
        if (l_U120 >= 2)
        {
            if ( /* F_STREAMREQ_VEHICLE_RECORDING_IS_ASSET_LOADED */ sub_24358( 301, ref g_U1474 ))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "eVCPFVehicle2 - STATE_EVENT_START", 0 );
                l_U130 = 6;
            }
        }
        break;
        case 6:
        if ((g_U2875[11] > 0) || (g_U763 == 11))
        {
            if (l_U125 >= 4)
            {
                 /* P_START_VEHICLE_RECORDING */ sub_24680( l_U452[7], 301, 1.25000000, 5859.00000000 );
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "The vehicle2 vehicle recording duration is:", 0 );
                PRINTFLOAT( GET_TOTAL_DURATION_OF_VEHICLE_RECORDING( 301 ) );
                PRINTNL();
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "eVCPFVehicle2 - STATE_EVENT_IN", 0 );
                l_U130 = 7;
            }
        }
        else if (l_U123 >= 4)
        {
            if ((HAS_CUTSCENE_FINISHED()) || (GET_CUTSCENE_TIME_MS() >= 59634))
            {
                 /* P_START_VEHICLE_RECORDING */ sub_24680( l_U452[7], 301, 1.25000000, 5859.00000000 );
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "eVCPFVehicle2 - STATE_EVENT_IN", 0 );
                l_U130 = 7;
            }
        }
        break;
        case 7:
        if (NOT (IS_VEHICLE_DEAD( l_U452[7] )))
        {
            SET_VEHICLE_VISIBLE( l_U452[7], 1 );
        }
         /* CREATETIMER */ sub_514( ref l_U566, 7000, 1, 0 );
         /* STARTTIMER */ sub_664( ref l_U566 );
         /* WRITESCRIPTLOG */ sub_178( "CCB", "eVCPFVehicle2 - STATE_EVENT_01", 0 );
        l_U130 = 10;
        break;
        case 10:
        if ( /* ISTIMERDONE */ sub_4457( ref l_U566 ))
        {
             /* P_START_VCPF_VEHICLE2 */ sub_26598();
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eVCPFVehicle2 - STATE_EVENT_COMPLETE", 0 );
            l_U130 = 44;
        }
        break;
        case 44: break;
    }
    return;
}

/* P_START_VCPF_VEHICLE2 */ void sub_26598()
{
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )))
    {
         /* WRITESCRIPTLOG */ sub_178( "CCB", "P_START_VCPF_VEHICLE2", 0 );
        if (NOT (IS_PED_DEAD( l_U141[16] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U466 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            if (NOT (IS_VEHICLE_DEAD( l_U452[7] )))
            {
                TASK_LEAVE_VEHICLE_IMMEDIATELY( 0, l_U452[7] );
            }
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 188.79000000, -45.86000000, 0.02000000,  /* PLAYER_PED_ID */ sub_1341(), 3, 0, 1056964608, 0, 1, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1341() );
            CLOSE_SEQUENCE_TASK( l_U466 );
            TASK_PERFORM_SEQUENCE( l_U141[16], l_U466 );
            CLEAR_SEQUENCE_TASK( l_U466 );
        }
        if (NOT (IS_PED_DEAD( l_U141[17] )))
        {
            OPEN_SEQUENCE_TASK( ref l_U466 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            if (NOT (IS_VEHICLE_DEAD( l_U452[7] )))
            {
                TASK_LEAVE_VEHICLE_IMMEDIATELY( 0, l_U452[7] );
            }
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 201.66000000, -41.70000000, 0.02000000,  /* PLAYER_PED_ID */ sub_1341(), 3, 0, 1056964608, 0, 1, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1341() );
            CLOSE_SEQUENCE_TASK( l_U466 );
            TASK_PERFORM_SEQUENCE( l_U141[17], l_U466 );
            CLEAR_SEQUENCE_TASK( l_U466 );
        }
    }
    return;
}

/* P_HANDLE_OUTRO_CUTSCENE_10_05 */ void sub_27157()
{
    if ((l_U124 < 7) AND (l_U124 > 3))
    {
        ;
    }
    switch (l_U124)
    {
        case 0:
        if (NOT (CUTSCENE_IS_LOADED( "10_05_BUS_concat" )))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "The 10_05_BUS_concat cutscene is NOT loaded!!!", 0 );
            PRE_STREAM_SEAMLESS_CUTSCENE( "10_05_BUS_concat" );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "The 10_05_BUS_concat cutscene is already loaded.", 0 );
        }
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_27475( 1979959192, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_27475( 1686109657, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_27475( 1049690760, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_27475( 967235939, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_27475( -866409927, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_27475( -560118084, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_27475( 819522354, ref g_U910 );
         /* WRITESCRIPTLOG */ sub_178( "CCB", "eOutroCutscene - STATE_CUTSCENE_PRELOAD", 0 );
        l_U124 = 1;
        break;
        case 1:
        if (CUTSCENE_IS_LOADED( "10_05_BUS_concat" ))
        {
            if ( /* F_STREAMREQ_MODELNAMES_IS_ASSET_LOADED */ sub_15663( 1686109657, ref g_U910 ))
            {
                if ( /* F_STREAMREQ_MODELNAMES_IS_ASSET_LOADED */ sub_15663( 1049690760, ref g_U910 ))
                {
                    if ( /* F_STREAMREQ_MODELNAMES_IS_ASSET_LOADED */ sub_15663( 967235939, ref g_U910 ))
                    {
                        if ( /* F_STREAMREQ_MODELNAMES_IS_ASSET_LOADED */ sub_15663( -866409927, ref g_U910 ))
                        {
                            if ( /* F_STREAMREQ_MODELNAMES_IS_ASSET_LOADED */ sub_15663( -560118084, ref g_U910 ))
                            {
                                if ( /* F_STREAMREQ_MODELNAMES_IS_ASSET_LOADED */ sub_15663( 819522354, ref g_U910 ))
                                {
                                    if (NOT (DOES_VEHICLE_EXIST( l_U462 )))
                                    {
                                        l_U462 =  /* CREATEVEHICLE */ sub_13780( 1979959192, 157.07400000, -36.80900000, 1.00000000, 275.01960000, 0, 0, 0 );
                                        if (NOT (IS_VEHICLE_DEAD( l_U462 )))
                                        {
                                            SET_VEHICLE_ON_GROUND_PROPERLY( l_U462 );
                                            SET_VEHICLE_PROOFS( l_U462, 1, 1, 1, 1, 1 );
                                            SET_VEHICLE_CAN_BE_DAMAGED( l_U462, 0 );
                                            SET_VEHICLE_LIGHTS( l_U462, 1 );
                                            SET_VEHICLE_DIRT_LEVEL( l_U462, 4.00000000 );
                                            SET_VEHICLE_COLOUR_COMBINATION( l_U462, 0 );
                                            SET_VEHICLE_EXTRA( l_U462, 1, 0 );
                                        }
                                    }
                                    else
                                    {
                                         /* WRITESCRIPTLOG */ sub_178( "CCB", "The viCutsceneVehicle vehicle was already created.", 0 );
                                    }
                                    if (NOT (DOES_VEHICLE_EXIST( l_U461 )))
                                    {
                                        l_U461 =  /* CREATEVEHICLE */ sub_13780( 1049690760, 177.02100000, -103.03200000, 21.42510000, 2.81000000, 0, 0, 0 );
                                    }
                                    else
                                    {
                                         /* WRITESCRIPTLOG */ sub_178( "CCB", "The viCutsceneHeli vehicle was already created.", 0 );
                                    }
                                    if (NOT (IS_VEHICLE_DEAD( l_U461 )))
                                    {
                                        FREEZE_VEHICLE_POSITION( l_U461, 1 );
                                        SET_VEHICLE_ENGINE_ON( l_U461, 1, 1 );
                                        SET_HELI_BLADES_FULL_SPEED( l_U461 );
                                        SET_VEHICLE_DOOR_OPEN( l_U461, 3 );
                                        SET_VEHICLE_DOOR_OPEN( l_U461, 2 );
                                        if (NOT (DOES_PED_EXIST( l_U163 )))
                                        {
                                            l_U163 =  /* CREATEPEDINVEHICLE */ sub_16139( ref l_U412, l_U461, -1, 0, 0 );
                                        }
                                        else
                                        {
                                             /* WRITESCRIPTLOG */ sub_178( "CCB", "The piCutsceneHeliPilot ped was already created.", 0 );
                                        }
                                        if (NOT (IS_PED_DEAD( l_U163 )))
                                        {
                                            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U163, 1 );
                                        }
                                    }
                                     /* WRITESCRIPTLOG */ sub_178( "CCB", "eOutroCutscene - STATE_CUTSCENE_IN", 0 );
                                    l_U124 = 2;
                                }
                            }
                        }
                    }
                }
            }
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Waiting for the 10_05_BUS_concat cutscene to load...", 0 );
        }
        break;
        case 2:
        if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Unlocking bus depot for arcade mode...", 0 );
            SET_HIGHEST_ARCADE_LEVEL_UNLOCKED( 13 );
            if (IS_ARCADE_MODE_ACTIVE())
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Arcade mode is active...", 0 );
                DISPLAY_ARCADE_MODE_LEVEL_END( "s_pana" );
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "eCheckpoint - STATE_CHECKPOINT_OUT", 0 );
                l_U114 = 14;
            }
            else
            {
                 /* NIS_PRE_SETUP */ sub_31520( 1, 0, 0, 1 );
                if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )))
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "Registering the Player ped to the cutscene...", 0 );
                    REGISTER_PED_PRE_SEAMLESS_CUTSCENE(  /* PLAYER_PED_ID */ sub_1341(), "player", 0 );
                    if (GET_DOES_WEAPON_EXIST( l_U464 ))
                    {
                         /* WRITESCRIPTLOG */ sub_178( "CCB", "Registering the Player ped's weapon...", 0 );
                        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U464, "W_AR_97LC_Aa_H", 1 );
                    }
                    else
                    {
                         /* WRITESCRIPTLOG */ sub_178( "CCB", "The wiPlayerRight weapon is NOT valid!!!", 0 );
                    }
                }
                if (NOT (IS_VEHICLE_DEAD( l_U461 )))
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "Registering the viCutsceneHeli vehicle to the cutscene...", 0 );
                    REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( l_U461, "heli_Luxury", 1 );
                }
                if (NOT (IS_VEHICLE_DEAD( l_U462 )))
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "Registering the viCutsceneVehicle vehicle to the cutscene...", 0 );
                    CUTSCENE_REGISTER_VEHICLE_COPY( l_U462, "CAR_DETECTIVE" );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "The viCutsceneVehicle vehicle is NOT valid!!!", 0 );
                }
                CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
                CUTSCENE_ENABLE_SKIP( 0 );
                CUTSCENE_REGISTER_SWITCH_TO_LEVEL_NAME( "s_pana" );
                AUD_ENABLE_PRE_BINK_SHUTDOWN( 1 );
                DISABLE_FADE_BETWEEN_SP_LEVELS();
                START_SEAMLESS_CUTSCENE();
                if (IS_SCREEN_FADED_OUT())
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "FADING IN!!!", 0 );
                    DO_SCREEN_FADE_IN( 500 );
                }
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "eOutroCutscene - STATE_CUTSCENE_FADEIN", 0 );
                l_U124 = 3;
            }
        }
        break;
        case 3:
        if (IS_SCREEN_FADED_IN())
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Enabling ALLOW_BULLET_CAMERA_TO_GAMEPLAY...", 0 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
             /* CLEANPED */ sub_32509( g_U2595 );
             /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( -1204387800, ref g_U910 );
             /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_33742( g_U2863, ref g_U1211 );
             /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_34076( ref g_U1968, ref g_U1369 );
             /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_34076( ref g_U1944, ref g_U1369 );
             /* P_STREAMREQ_ACTION_TREE_REMOVE */ sub_34434( ref g_U2040, ref g_U1535 );
             /* P_STREAMREQ_ACTION_TREE_REMOVE */ sub_34434( "Vehicle/Vehicle_Car.act", ref g_U1535 );
             /* P_STREAMREQ_ISEQ_REMOVE */ sub_34819( -1501041926, ref g_U1272 );
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1379() )))
            {
                SET_PLAYER_LOCKED_IN_COVER(  /* PLAYER_ID */ sub_1379(), 0 );
            }
            if (DOES_OBJECT_EXIST( l_U431 ))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Hiding the objStandoffBus object.", 0 );
                SET_OBJECT_VISIBLE( l_U431, 0 );
            }
            if (DOES_OBJECT_EXIST( l_U432[1] ))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Hiding the oiStandoffProps_1 object.", 0 );
                SET_OBJECT_VISIBLE( l_U432[1], 0 );
            }
             /* P_SPAWN_10_05_PROPS */ sub_35396();
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eOutroCutscene - STATE_CUTSCENE_IDLE", 0 );
            l_U124 = 4;
        }
        break;
        case 4:
        if (NOT l_U113)
        {
            if (GET_CUTSCENE_TIME_MS() >= 41218)
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Cleaning up assets during cutscene...", 0 );
                l_U113 = 1;
                 /* CLEANPEDARRAY */ sub_36003( ref l_U141 );
                 /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( g_U2106, ref g_U910 );
                 /* CLEANPED */ sub_32509( l_U163 );
                 /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( 1686109657, ref g_U910 );
                 /* CLEANVEHICLEARRAY */ sub_36119( ref l_U452 );
                 /* CLEANVEHICLE */ sub_36173( l_U461 );
                 /* CLEANOBJECT */ sub_36276( l_U431 );
                 /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( 89470519, ref g_U910 );
                 /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( 1049690760, ref g_U910 );
                 /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( 1572429640, ref g_U910 );
                 /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( -1522400210, ref g_U910 );
                 /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( -764000169, ref g_U910 );
                 /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( -1221193536, ref g_U910 );
                 /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( -1425703854, ref g_U910 );
                 /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( -1053689591, ref g_U910 );
                 /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_33742( g_U2862, ref g_U1211 );
                 /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_33742( g_U2863, ref g_U1211 );
                 /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_33742( g_U2854, ref g_U1211 );
                 /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_33742( g_U2856, ref g_U1211 );
                 /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_33742( g_U2855, ref g_U1211 );
                 /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_33742( g_U2857, ref g_U1211 );
                 /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_34076( ref g_U1968, ref g_U1369 );
                 /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_34076( ref g_U1944, ref g_U1369 );
                 /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_34076( "veh@car_gensedan", ref g_U1369 );
                 /* P_STREAMREQ_ACTION_TREE_REMOVE */ sub_34434( ref g_U2040, ref g_U1535 );
                 /* P_STREAMREQ_ACTION_TREE_REMOVE */ sub_34434( "Vehicle/Vehicle_Car.act", ref g_U1535 );
                 /* P_STREAMREQ_ISEQ_REMOVE */ sub_34819( -1501041926, ref g_U1272 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_36649( 300, ref g_U1474 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_36649( 301, ref g_U1474 );
            }
        }
        if (HAS_CUTSCENE_FINISHED())
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eCheckpoint - STATE_CHECKPOINT_OUT", 0 );
            l_U114 = 14;
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eOutroCutscene - STATE_CUTSCENE_COMPLETE", 0 );
            l_U124 = 7;
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Waiting for cutscene:", 0 );
            PRINTINT( GET_CUTSCENE_TIME_MS() );
            PRINTNL();
        }
        break;
        case 7: break;
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT */ void sub_27475(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 =  /* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ sub_27542( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar4 );
            PRINTNL();
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_27800( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Inserting MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ int sub_27542(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_27800( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is loading: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_27800( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                     /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_27800( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_29331( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being removed: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_27800( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_27800( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ void sub_27800(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_27861( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ int sub_27861(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID is active: {} ###", 1, 513, (uParam1^)[I] );
                if ((uParam1^)[I] == iParam0)
                {
                    DISPLAYF( "The THREADID was already requested by this thread!!!", 0 );
                    DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                    (uParam1^)[I] = nil;
                    Result = I;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The THREADID index was requested by another thread!!! {} ###", 1, 513, I );
                }
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is NOT active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

/* P_STREAMREQ_THREADID_RESET */ void sub_29331(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

/* NIS_PRE_SETUP */ void sub_31520(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1379(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1341(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1341() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1341(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* CLEANPED */ void sub_32509(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE */ void sub_32603(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_32747( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a MODEL_NAME asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Removing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ int sub_32747(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if ((uParam1^)[I] == iParam0)
            {
                DISPLAYF( "[CCB] ### The THREADID index matches the asset requested for removal: {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
            else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID index is in use and is active: {} ###", 1, 513, (uParam1^)[I] );
                Result = I;
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is in use, but is no longer active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE */ void sub_33742(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_32747( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a WEAPON_TYPE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_REMOVE */ void sub_34076(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_32747( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ANIM_DICT asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_ACTION_TREE_REMOVE */ void sub_34434(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_32747( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ACTION_TREE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_ISEQ_REMOVE */ void sub_34819(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_32747( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a ISEQ asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

/* P_SPAWN_10_05_PROPS */ void sub_35396()
{
    int I;

    for ( I = 0; I <= (l_U435 - 1); I++ )
    {
        if (NOT (DOES_OBJECT_EXIST( l_U435[I] )))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Spawning oi10_05Props object...", 0 );
            PRINTINT( I );
            PRINTNL();
            if (I == 0)
            {
                l_U435[I] =  /* CREATEOBJECTNOOFFSET */ sub_12362( 967235939, 192.00000000, -68.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            }
            else if (I == 1)
            {
                l_U435[I] =  /* CREATEOBJECTNOOFFSET */ sub_12362( -866409927, 192.00000000, -68.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            }
            else if (I == 2)
            {
                l_U435[I] =  /* CREATEOBJECTNOOFFSET */ sub_12362( -560118084, 192.00000000, -68.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            }
            else if (I == 3)
            {
                l_U435[I] =  /* CREATEOBJECTNOOFFSET */ sub_12362( 819522354, 192.00000000, -68.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            };;;;
        }
        if (DOES_OBJECT_EXIST( l_U435[I] ))
        {
            FREEZE_OBJECT_POSITION( l_U435[I], 1 );
        }
    }
    return;
}

/* CLEANPEDARRAY */ void sub_36003(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_32509( (uParam0^)[I] );
    }
    return;
}

/* CLEANVEHICLEARRAY */ void sub_36119(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANVEHICLE */ sub_36173( (uParam0^)[I] );
    }
    return;
}

/* CLEANVEHICLE */ void sub_36173(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

/* CLEANOBJECT */ void sub_36276(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ void sub_36649(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_32747( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a VEHICLE_RECORDING asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* RESTARTING_CHECKPOINT */ int sub_37207()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1341(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1379(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1379(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1341() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1341(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_37873()
{
     /* WRITESCRIPTLOG */ sub_178( "CCB", "P_INITIALIZE_SCRIPT_DATA", 0 );
     /* P_SETUP_VEHICLES_ARRAY */ sub_37949();
     /* P_SETUP_PROPS_ARRAY */ sub_38438();
    l_U115 = 0;
    l_U116 = 0;
    l_U117 = 0;
    l_U118 = 0;
    l_U119 = 0;
    l_U131 = 0;
    l_U120 = 0;
    l_U132 = 0;
    l_U127 = 0;
    l_U129 = 0;
    l_U130 = 0;
    l_U128 = 0;
    l_U72 = 0;
    l_U138 = 0;
     /* P_RESET_VECTOR_ARRAY */ sub_38626( ref l_U634 );
     /* P_RESET_BOOL_ARRAY */ sub_38747( ref l_U74 );
     /* P_RESET_BOOL_ARRAY */ sub_38747( ref l_U93 );
     /* CLEANPED */ sub_32509( l_U161 );
     /* CLEANPED */ sub_32509( l_U162 );
    l_U575 = 0;
    l_U71 = 0;
     /* CLEANPED */ sub_32509( l_U160 );
    l_U137 = 0;
    l_U139 = 0;
    l_U140 = 0;
     /* CREATETIMER */ sub_514( ref l_U494, 0, 1, 0 );
     /* STARTTIMER */ sub_664( ref l_U494 );
     /* CREATETIMER */ sub_514( ref l_U485, 0, 1, 0 );
     /* STARTTIMER */ sub_664( ref l_U485 );
     /* CREATETIMER */ sub_514( ref l_U512, 0, 1, 0 );
     /* STARTTIMER */ sub_664( ref l_U512 );
    l_U123 = 0;
    l_U112 = 0;
    l_U125 = 0;
     /* CREATETIMER */ sub_514( ref l_U476, 0, 1, 0 );
     /* STARTTIMER */ sub_664( ref l_U476 );
    l_U124 = 0;
    l_U113 = 0;
    l_U576 = 0;
    l_U126 = 0;
     /* CREATETIMER */ sub_514( ref l_U521, 0, 1, 0 );
     /* STARTTIMER */ sub_664( ref l_U521 );
    l_U121 = 0;
    l_U133 = 0;
    l_U122 = 0;
    l_U134 = 0;
    l_U602[0] = {196.89000000, -21.84000000, 0.00000000};
    l_U609[0] = {0.00000000, 0.00000000, 0.00000000};
    l_U602[1] = {191.93600000, -73.20200000, -0.65000000};
    l_U609[1] = {0.00000000, -5.24100000, 79.18300000};
    l_U616 = {194.28000000, -45.09000000, 0.10000000};
    l_U619 = {192.66000000, -75.30000000, 7.27000000};
    l_U622 = {193.12000000, -66.83000000, 3.44000000};
    l_U689[0] = {192.32000000, -72.67000000, 1.56000000};
    l_U696[0] = {193.30000000, -66.38000000, 1.51000000};
    l_U689[1] = {193.70000000, -70.67000000, 2.28000000};
    l_U696[1] = {193.09000000, -66.55000000, 1.99000000};
    return;
}

/* P_SETUP_VEHICLES_ARRAY */ void sub_37949()
{
     /* WRITESCRIPTLOG */ sub_178( "CCB", "P_SETUP_VEHICLES_ARRAY", 0 );
    l_U577[0] = {202.50000000, -27.00000000, 0.10000000};
    l_U625[0] = 59.00000000;
    l_U440[0] = 1572429640;
    l_U577[1] = {186.20000000, -57.39000000, 0.50000000};
    l_U625[1] = 275.00000000;
    l_U440[1] = -1425703854;
    l_U577[2] = {187.00000000, -50.57000000, 0.50000000};
    l_U625[2] = 85.00000000;
    l_U440[2] = -1522400210;
    l_U577[3] = {199.59000000, -57.28000000, 0.50000000};
    l_U625[3] = 70.00000000;
    l_U440[3] = -1221193536;
    l_U577[4] = {199.69000000, -52.18000000, 0.50000000};
    l_U625[4] = 260.00000000;
    l_U440[4] = -764000169;
    l_U577[5] = {198.78600000, -44.85900000, 0.80100000};
    l_U625[5] = -140.21100000;
    l_U440[5] = -1053689591;
    l_U577[6] = {188.53000000, -42.33000000, 0.50000000};
    l_U625[6] = 235.00000000;
    l_U440[6] = -1221193536;
    l_U577[7] = {197.34000000, -37.34000000, 0.50000000};
    l_U625[7] = 130.00000000;
    l_U440[7] = -1221193536;
    return;
}

/* P_SETUP_PROPS_ARRAY */ void sub_38438()
{
     /* WRITESCRIPTLOG */ sub_178( "CCB", "P_SETUP_PROPS_ARRAY", 0 );
    l_U449[0] = g_U2135;
    l_U449[1] = -634417735;
    return;
}

/* P_RESET_VECTOR_ARRAY */ void sub_38626(unknown uParam0)
{
    int I;

     /* WRITESCRIPTLOG */ sub_178( "CCB", "P_RESET_VECTOR_ARRAY", 0 );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = {0, 0, 0};
    }
    return;
}

/* P_RESET_BOOL_ARRAY */ void sub_38747(unknown uParam0)
{
    int I;

     /* WRITESCRIPTLOG */ sub_178( "CCB", "P_RESET_BOOL_ARRAY", 0 );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = 0;
    }
    return;
}

/* P_INITIALIZE_SP_CHALLENGES */ void sub_39368()
{
     /* WRITESCRIPTLOG */ sub_178( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U777 = 0;
    l_U778 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( 1701971384 )))
    {
         /* WRITESCRIPTLOG */ sub_178( "CCB", "Creating the OldPainless script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( 1701971384 );
        DISPLAYF( "[CCB] ### The current OldPainless value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( 1701971384 ) );
        if (SCRIPT_VAR_HASH_EXISTS( 1701971384 ))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "The OldPainless script variable was successfully created...", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "The OldPainless script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_178( "CCB", "The OldPainless script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( 1701971384, 0 );
        DISPLAYF( "[CCB] ### The current OldPainless value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( 1701971384 ) );
    }
    return;
}

/* P_SETUP_STATIC_DATA */ void sub_39953()
{
     /* WRITESCRIPTLOG */ sub_178( "CCB", "P_SETUP_STATIC_DATA", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_40055( ref l_U399, -72.72000000, 105.86000000, 0.00100000, -48.00000000, -430179550, 5, 2, 0, 0, 1 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_40055( ref l_U164[0], 185.08000000, -54.02000000, 0.10000000, 180.00000000, -1489714533, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_40055( ref l_U164[1], 194.28000000, -38.00000000, 0.10000000, 180.00000000, -1943434354, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_40055( ref l_U164[2], 202.00000000, -55.73000000, 0.10000000, 180.00000000, 1758818191, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_40055( ref l_U164[3], 200.08000000, -54.44000000, 0.10000000, 180.00000000, 1900580661, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_40055( ref l_U164[4], 177.10000000, -20.27000000, 0.30000000, -178.00000000, -1856339173, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_40055( ref l_U164[5], 139.61000000, -0.21000000, 0.30000000, 177.00000000, 1177889556, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_40055( ref l_U164[6], 178.54000000, 23.38000000, 0.30000000, 152.00000000, -1164059530, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_40055( ref l_U164[7], 204.73000000, 32.52000000, 0.30000000, 175.00000000, -1236728156, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_40055( ref l_U164[8], 207.06000000, 51.36000000, 0.10000000, 173.00000000, -684971413, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_40055( ref l_U164[9], 209.88000000, 59.77000000, 0.10000000, 167.00000000, 1900580661, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_40055( ref l_U164[10], 209.36000000, 81.26000000, 0.10000000, 178.00000000, 187757786, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_40055( ref l_U164[11], 171.65000000, 83.28000000, 0.30000000, -127.00000000, 130503050, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_40055( ref l_U164[12], 157.12000000, 71.43000000, 0.30000000, 175.00000000, -1489714533, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_40055( ref l_U164[13], 141.34000000, 57.12000000, 0.30000000, 175.00000000, 1758818191, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_40055( ref l_U164[14], 223.55000000, -41.71000000, 0.30000000, 125.00000000, 1429109657, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_40055( ref l_U164[15], 184.41000000, -28.60000000, 0.10000000, -180.00000000, -366823623, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_40055( ref l_U164[16], 187.67000000, -30.94000000, 0.10000000, -180.00000000, 1901166384, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_40055( ref l_U164[17], 200.40000000, -32.25000000, 0.10000000, 180.00000000, -1946189981, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCT */ sub_40995( ref l_U412, 209.57000000, -26.09000000, 1.01000000, 0.00000000, 1686109657, 7, 3, 2, 0, 0 );
     /* P_CREATETETHERBOX */ sub_41182( ref l_U753, "TETHER_PARKING_LEFT", 197.79000000, -53.07000000, -0.50000000, 15.00000000, 15.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_41182( ref l_U754, "TETHER_PARKING_RIGHT", 185.98000000, -53.03000000, -0.50000000, 15.00000000, 15.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_41182( ref l_U755, "TETHER_COMBAT", 191.89000000, -47.15000000, -0.50000000, 27.00000000, 27.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_41479( ref l_U756, "TETHER_KILL_ZONE", 187.91000000, -74.87000000, 0.00000000, 50.82000000, 20.02000000, 5.85000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_40055(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATEPEDSTRUCT */ void sub_40995(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATETETHERBOX */ void sub_41182(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATETRIGGERBOX */ void sub_41479(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* F_HANDLE_PRELOAD_ASSETS */ int sub_41834()
{
    switch (l_U115)
    {
        case 0:
        if (NOT (CUTSCENE_IS_LOADED( "10_04_BUS_CONCAT" )))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Loading the 10_04_BUS_CONCAT cutscene...", 0 );
            PRE_STREAM_SEAMLESS_CUTSCENE( "10_04_BUS_CONCAT" );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "The 10_04_BUS_CONCAT cutscene is already loaded!!!", 0 );
        }
         /* WRITESCRIPTLOG */ sub_178( "CCB", "ePreLoadAsset - STATE_LOAD_LOADING", 0 );
        l_U115 = 1;
        break;
        case 1:
         /* WRITESCRIPTLOG */ sub_178( "CCB", "ePreLoadAsset - STATE_LOAD_COMPLETE", 0 );
        l_U115 = 11;
        break;
        case 11:
        return 1;
        break;
    }
    return 0;
}

/* F_HANDLE_LOAD_ASSETS */ int sub_42304()
{
    switch (l_U116)
    {
        case 0:
         /* P_LOAD_ASSETS */ sub_42373();
         /* WRITESCRIPTLOG */ sub_178( "CCB", "eLoadAsset - STATE_LOAD_01", 0 );
        l_U116 = 2;
        break;
        case 2:
        if ( /* F_STREAMREQ_ALL_ASSETS_LOADED */ sub_53805( ref g_U910, ref g_U1211, ref g_U1272, ref g_U1369, ref g_U1474, ref g_U1535, ref g_U1704, ref g_U1757 ))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eLoadAsset - STATE_LOAD_COMPLETE", 0 );
            l_U116 = 11;
        }
        break;
        case 11:
        return 1;
        break;
    }
    return 0;
}

/* P_LOAD_ASSETS */ void sub_42373()
{
     /* WRITESCRIPTLOG */ sub_178( "CCB", "P_LOAD_ASSETS", 0 );
    if ((g_U2875[11] > 0) || (g_U763 == 11))
    {
        ;
    }
    else if (NOT (CUTSCENE_IS_LOADED( "10_04_BUS_CONCAT" )))
    {
         /* WRITESCRIPTLOG */ sub_178( "CCB", "Loading the 10_04_BUS_CONCAT cutscene...", 0 );
        PRE_STREAM_SEAMLESS_CUTSCENE( "10_04_BUS_CONCAT" );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_178( "CCB", "The 10_04_BUS_CONCAT cutscene is already loaded!!!", 0 );
    }
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_27475( -1204387800, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_27475( g_U2106, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_27475( 1572429640, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_27475( -1522400210, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_27475( -764000169, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_27475( -1221193536, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_27475( -1425703854, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_27475( 89470519, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_27475( -634417735, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_27475( g_U2135, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_27475( -1053689591, ref g_U910 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_42801( g_U2854, ref g_U1211 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_42801( g_U2856, ref g_U1211 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_42801( g_U2855, ref g_U1211 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_42801( g_U2857, ref g_U1211 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_42801( g_U2862, ref g_U1211 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_42801( g_U2863, ref g_U1211 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_44809( ref g_U1968, ref g_U1369 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_44809( ref g_U1944, ref g_U1369 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_44809( "veh@car_gensedan", ref g_U1369 );
     /* P_STREAMREQ_ACTION_TREE_INSERT */ sub_46733( ref g_U2040, ref g_U1535 );
     /* P_STREAMREQ_ACTION_TREE_INSERT */ sub_46733( "Vehicle/Vehicle_Car.act", ref g_U1535 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_48682( -1501041926, ref g_U1272 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_51484( 300, ref g_U1474 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_51484( 301, ref g_U1474 );
     /* P_LOAD_AUDIO_ASSETS */ sub_53473();
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT */ void sub_42801(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ sub_42855( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_43116( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ int sub_42855(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_43116( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is loading: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_43116( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The WEAPON_TYPE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_43116( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_29331( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being removed: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_43116( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            DISPLAYF( "The WEAPON_TYPE asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_43116( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ void sub_43116(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_27861( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_INSERT */ void sub_44809(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ sub_44861( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ANIM_DICT asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_45113( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ int sub_44861(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_45113( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_45113( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ANIM_DICT asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_45113( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_29331( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_45113( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ANIM_DICT asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ANIM_DICT: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
             /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_45113( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ void sub_45113(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_27861( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ACTION_TREE_INSERT */ void sub_46733(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ACTION_TREE_IS_INDEX_AVAILABLE */ sub_46787( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ACTION_TREE asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
         /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_47045( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ACTION_TREE_IS_INDEX_AVAILABLE */ int sub_46787(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ACTION_TREE is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_47045( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ACTION_TREE is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ACTION_TREE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_47045( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_ACTION_TREE_LOADED( uParam0 ))
                {
                    DISPLAYF( "[CCB] ### The ACTION_TREE is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ACTION_TREE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_47045( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ACTION_TREE is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ACTION_TREE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_29331( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ACTION_TREE is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_47045( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_ACTION_TREE_LOADED( uParam0 ))
        {
            DISPLAYF( "[CCB] ### The ACTION_TREE is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ACTION_TREE is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ACTION_TREE: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
             /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_47045( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ACTION_TREE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ void sub_47045(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_27861( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ACTION_TREE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ISEQ_INSERT */ void sub_48682(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 =  /* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ sub_48743( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar12 );
            PRINTNL();
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar4 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
             /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_48993( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

/* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ int sub_48743(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_48993( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is loading: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_48993( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                        DISPLAYF( "The ISEQ asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_48993( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loading: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_48993( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### Re-requesting ISEQ: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_29331( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_29331( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being removed: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_48993( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar5 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_48993( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ISEQ_THREADID_SET_ID */ void sub_48993(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_27861( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ void sub_51484(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_VEHICLE_RECORDING_IS_INDEX_AVAILABLE */ sub_51544( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing VEHICLE_RECORDING asset name: {} ###", 1, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_51814( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_VEHICLE_RECORDING_IS_INDEX_AVAILABLE */ int sub_51544(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is being requested: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_51814( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is loading: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is already loading!!!", 0 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_51814( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is already loaded: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The VEHICLE_RECORDING asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_51814( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is being requested: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The VEHICLE_RECORDING asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = -1;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_29331( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is being removed: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_51814( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is already loaded: {} ###", 1, 513, iParam0 );
            DISPLAYF( "The VEHICLE_RECORDING is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing VEHICLE_RECORDING: {} ###", 1, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_51814( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The VEHICLE_RECORDING - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ void sub_51814(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_27861( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The VEHICLE_RECORDING asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_LOAD_AUDIO_ASSETS */ void sub_53473()
{
     /* WRITESCRIPTLOG */ sub_178( "CCB", "P_LOAD_AUDIO_ASSETS", 0 );
    STOP_SCRIPT_STREAM( 0 );
    STOP_SCRIPT_STREAM( 1 );
    STOP_SCRIPT_STREAM( 2 );
     /* P_STREAMREQ_SCRIPT_STREAM_RESET_STRUCT */ sub_53567( ref g_U1704 );
    l_U135 = GET_SOUND_ID();
    return;
}

/* P_STREAMREQ_SCRIPT_STREAM_RESET_STRUCT */ void sub_53567(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        StrCopy( ref (uParam0^)[I]._fU0, "", 32 );
        (uParam0^)[I]._fU32 = 0;
         /* P_STREAMREQ_THREADID_RESET */ sub_29331( ref (uParam0^)[I]._fU36 );
    }
    return;
}

/* F_STREAMREQ_ALL_ASSETS_LOADED */ int sub_53805(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    if ( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_53849( uParam0 ))
    {
        if ( /* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ sub_54249( uParam1 ))
        {
            if ( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_54653( uParam2 ))
            {
                if ( /* F_STREAMREQ_ANIM_DICT_IS_LOADED */ sub_55069( uParam3 ))
                {
                    if ( /* F_STREAMREQ_VEHICLE_RECORDING_IS_LOADED */ sub_55462( uParam4 ))
                    {
                        if ( /* F_STREAMREQ_ACTION_TREE_IS_LOADED */ sub_55884( uParam5 ))
                        {
                            if ( /* F_STREAMREQ_SCRIPT_STREAM_IS_LOADED */ sub_56264( uParam6 ))
                            {
                                if ( /* F_STREAMREQ_AUDIO_BANK_IS_LOADED */ sub_56652( uParam7 ))
                                {
                                    return 1;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return 0;
}

/* F_STREAMREQ_MODELNAMES_IS_LOADED */ int sub_53849(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be requested: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to load: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be removed: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ int sub_54249(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be requested: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to load: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be removed: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ISEQ_IS_LOADED */ int sub_54653(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be requested: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to load: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be removed: {} ###", 1, 1281, ref uVar3 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ANIM_DICT_IS_LOADED */ int sub_55069(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be requested: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to load: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be removed: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_VEHICLE_RECORDING_IS_LOADED */ int sub_55462(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to be requested: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to load: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to be removed: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ACTION_TREE_IS_LOADED */ int sub_55884(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_LOADED */ int sub_56264(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_AUDIO_BANK_IS_LOADED */ int sub_56652(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* P_SETUP_GAMEPLAY */ void sub_57187()
{
     /* WRITESCRIPTLOG */ sub_178( "CCB", "P_SETUP_GAMEPLAY", 0 );
     /* P_SETUP_WEATHER_AND_TOD */ sub_57247();
     /* P_SPAWN_STANDOFF_BUS */ sub_57430();
     /* P_SETUP_PLAYER */ sub_57745();
    SET_CAMERA_OVERRIDE( "STANDOFF_COVER_AIM_CAMERA", "XRIFLE_97LC_AIM_CAMERA", 0, 1, 1 );
    SET_SILHOUETTE_ACTIVE( 0 );
    SET_PROJECTILE_THROW_USE_DAMPING_COMPENSATION( 1 );
    SET_ALLOWED_TO_FAIL_COVER_FOR_BLOCKING_LINE_OF_FIRE( 0 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    if ((g_U2875[11] > 0) || (g_U763 == 11))
    {
         /* P_SPAWN_PROPS */ sub_62285();
         /* P_SPAWN_VEHICLES */ sub_13590();
         /* P_SPAWN_STANDOFF_VCPF */ sub_15862();
    }
    else
    {
         /* P_SETUP_GIOVANNA */ sub_62594();
    }
    return;
}

/* P_SETUP_WEATHER_AND_TOD */ void sub_57247()
{
     /* WRITESCRIPTLOG */ sub_178( "CCB", "P_SETUP_WEATHER_AND_TOD", 0 );
     /* WRITESCRIPTLOG */ sub_178( "CCB", "Setting time of day to 7:00 AM. The weather is CLOUDY.", 0 );
    RELEASE_TIME_OF_DAY();
    SET_WEATHER_TYPE_NOW_PERSIST( "CLOUDY" );
    FREEZE_TIME_OF_DAY( 7, 0 );
    return;
}

/* P_SPAWN_STANDOFF_BUS */ void sub_57430()
{
     /* WRITESCRIPTLOG */ sub_178( "CCB", "P_SPAWN_STANDOFF_BUS", 0 );
    if (NOT (DOES_OBJECT_EXIST( l_U431 )))
    {
        l_U431 =  /* CREATEOBJECTNOOFFSET */ sub_12362( 89470519, 191.93600000, -73.20200000, -0.65000000, 0.00000000, -5.24100000, 79.18300000, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U431 ))
        {
            FREEZE_OBJECT_POSITION( l_U431, 1 );
            SET_OBJECT_VISIBLE( l_U431, 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "The objStandoffBus object is NOT valid!!!", 0 );
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_178( "CCB", "The objStandoffBus object was already created.", 0 );
    }
    return;
}

/* P_SETUP_PLAYER */ void sub_57745()
{
     /* WRITESCRIPTLOG */ sub_178( "CCB", "P_SETUP_PLAYER", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )))
    {
        SET_PED_CONSUMING_AMMO(  /* PLAYER_PED_ID */ sub_1341(), 0 );
         /* WRITESCRIPTLOG */ sub_178( "CCB", "Giving the player adrenaline fore the grenade event...", 0 );
        SET_ADRENALINE_AMT( 1.00000000 );
        SET_PED_HEALTH(  /* PLAYER_PED_ID */ sub_1341(), GET_PED_MAX_HEALTH(  /* PLAYER_PED_ID */ sub_1341() ), 0 );
        if ((g_U2875[11] > 0) || (g_U763 == 11))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Removing the player's weapons...", 0 );
            REMOVE_ALL_PED_WEAPONS(  /* PLAYER_PED_ID */ sub_1341() );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Giving the player the wtTermPlayerRifle weapon...", 0 );
            if (( /* HAS_SAVEFILE_LOADED */ sub_58088( ref l_U35 )) == 0)
            {
                l_U464 =  /* F_GIVEPEDWEAPON */ sub_20185(  /* PLAYER_PED_ID */ sub_1341(), g_U2862, 25000, 0, 0 );
            }
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Removing the player's weapons...", 0 );
            REMOVE_ALL_PED_WEAPONS(  /* PLAYER_PED_ID */ sub_1341() );
            if (GET_PAYNEKILLER_AMT() < 3)
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Setting the painkiller amount.", 0 );
                SET_PAYNEKILLER_AMT( 3 );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "The player already has the proper amount of painkillers.", 0 );
            }
        }
    }
    return;
}

/* HAS_SAVEFILE_LOADED */ int sub_58088(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_178( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_58240( uParam0,  /* PLAYER_PED_ID */ sub_1341() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_58240(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_178( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_58459( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_59623( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_20666( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_59958( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_20666( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_59958( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_20666( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_59958( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_20185( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_59958( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_20185( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_59958( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_60451( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_60653( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1341(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_178( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_58459(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_58521( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_58521(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_59623(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_59958(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_60451(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_60653(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_58521( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_60751( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_60751(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_SPAWN_PROPS */ void sub_62285()
{
    int I;

     /* WRITESCRIPTLOG */ sub_178( "CCB", "P_SPAWN_PROPS", 0 );
    for ( I = 0; I <= (l_U432 - 1); I++ )
    {
        if (NOT (DOES_OBJECT_EXIST( l_U432[I] )))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Spawning oiStandoffProps_:", 0 );
            PRINTINT( I );
            PRINTNL();
            l_U432[I] =  /* CREATEOBJECTNOOFFSET */ sub_12362( l_U449[I], l_U602[I], l_U609[I], 0, 0, 0 );
             /* P_SETUP_PROPS */ sub_12978( ref l_U432, I );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "The oiStandoffProps object was already created.", 0 );
        }
    }
    return;
}

/* P_SETUP_GIOVANNA */ void sub_62594()
{
     /* WRITESCRIPTLOG */ sub_178( "CCB", "P_SETUP_GIOVANNA", 0 );
    if (NOT (DOES_PED_EXIST( g_U2595 )))
    {
         /* WRITESCRIPTLOG */ sub_178( "CCB", "Creating the piGiovanna ped.", 0 );
        g_U2595 =  /* CREATEPED */ sub_18455( ref l_U399 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_178( "CCB", "The piGiovanna ped was already created!!!", 0 );
    }
    if (NOT (IS_PED_DEAD( g_U2595 )))
    {
        SET_PED_NAME_DEBUG( g_U2595, "piGiovanna" );
         /* WRITESCRIPTLOG */ sub_178( "CCB", "Setting the piGiovanna ped invincible.", 0 );
        SET_PED_INVINCIBLE( g_U2595, 1 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2595, 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( g_U2595, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2595, 1 );
    }
    return;
}

/* F_HANDLE_INTRO_MIDSCENE */ int sub_63455()
{
    if ((l_U125 < 39) AND (l_U125 >= 0))
    {
        ;
    }
    switch (l_U125)
    {
        case 0:
         /* NIS_PRE_SETUP */ sub_31520( 1, 0, 0, 1 );
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Stopping animated camera!!!", 0 );
            CAMERA_ANIMATED_STOP( 3000, 0 );
        }
         /* WRITESCRIPTLOG */ sub_178( "CCB", "eIntroMidscene - STATE_MIDSCENE_START", 0 );
        l_U125 = 2;
        break;
        case 2:
        if ((IS_BULLET_CAMERA_WIPE_STOPPED()) AND (IS_DEATH_PANEL_WIPE_ALLOWED()))
        {
             /* WRITESCRIPTLOG */ sub_178( "JMP", "RESUME DEATH PANEL CAMERA!", 0 );
            DO_SCREEN_FADE_IN( 500 );
        }
        if ((g_U2875[11] > 0) || (g_U763 == 11))
        {
            if (l_U114 >= 6)
            {
                 /* NIS_PRE_SETUP */ sub_31520( 1, 0, 0, 1 );
                if (DOES_OBJECT_EXIST( l_U431 ))
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "Setting the objStandoffBus object to visible...", 0 );
                    SET_OBJECT_VISIBLE( l_U431, 1 );
                }
                if (DOES_OBJECT_EXIST( l_U432[1] ))
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "Unhiding the oiStandoffProps_1 object.", 0 );
                    SET_OBJECT_VISIBLE( l_U432[1], 1 );
                }
                if (NOT (IS_VEHICLE_DEAD( l_U452[5] )))
                {
                    SET_VEHICLE_VISIBLE( l_U452[5], 1 );
                    FREEZE_VEHICLE_POSITION( l_U452[5], 0 );
                }
                if (NOT (IS_PED_DEAD( l_U141[0] )))
                {
                    SET_PED_VISIBLE( l_U141[0], 1 );
                }
                if (NOT (IS_PED_DEAD( l_U141[1] )))
                {
                    SET_PED_VISIBLE( l_U141[1], 1 );
                }
                if (NOT (IS_PED_DEAD( l_U141[2] )))
                {
                    SET_PED_VISIBLE( l_U141[2], 1 );
                }
                if (NOT (IS_PED_DEAD( l_U141[3] )))
                {
                    SET_PED_VISIBLE( l_U141[3], 1 );
                }
                if (NOT (IS_PED_DEAD( l_U141[14] )))
                {
                    SET_PED_VISIBLE( l_U141[14], 1 );
                }
                if (NOT (IS_PED_DEAD( l_U141[15] )))
                {
                    SET_PED_VISIBLE( l_U141[15], 1 );
                }
                if (NOT (IS_PED_DEAD( l_U141[16] )))
                {
                    SET_PED_VISIBLE( l_U141[16], 1 );
                }
                if (NOT (IS_PED_DEAD( l_U141[17] )))
                {
                    SET_PED_VISIBLE( l_U141[17], 1 );
                }
                if ( /* F_STREAMREQ_ISEQ_IS_ASSET_LOADED */ sub_64372( -1501041926, ref g_U1272 ))
                {
                    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )))
                    {
                        FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_1341(), 0 );
                        ISEQ_REGISTER_ENTITY( -1501041926, "entity_max",  /* PLAYER_PED_ID */ sub_1341(), 0 );
                    }
                     /* TELEPORTPED */ sub_64726(  /* PLAYER_PED_ID */ sub_1341(), g_U2339[11], g_U2466[11] );
                    ISEQ_START( -1501041926 );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "The S_RTOP_VIG_02 ISEQ is NOT loaded!!!", 0 );
                }
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "The animated camera length is:", 0 );
                PRINTINT( CAMERA_ANIMATED_LENGTH( "LEVEL_S_BUS_CP_07", "B_OUT_10_04_BUS_CAM" ) );
                PRINTNL();
                CAMERA_PLAY_ANIMATED( "LEVEL_S_BUS_CP_07", "B_OUT_10_04_BUS_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
                if ((IS_DEATH_PANEL_WIPE_ALLOWED()) || (IS_SCREEN_FADED_OUT()))
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "FADING IN!!!", 0 );
                    DO_SCREEN_FADE_IN( 500 );
                }
                l_U476._fU12 = 3000;
                 /* RESETTIMER */ sub_4140( ref l_U476 );
                 /* STARTTIMER */ sub_664( ref l_U476 );
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "eIntroMidscene - STATE_MIDSCENE_01", 0 );
                l_U125 = 6;
            }
        }
        else if (HAS_CUTSCENE_FINISHED())
        {
             /* NIS_PRE_SETUP */ sub_31520( 1, 0, 0, 1 );
            if (DOES_OBJECT_EXIST( l_U431 ))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Setting the objStandoffBus object to visible...", 0 );
                SET_OBJECT_VISIBLE( l_U431, 1 );
            }
            if (DOES_OBJECT_EXIST( l_U432[1] ))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Unhiding the oiStandoffProps_1 object.", 0 );
                SET_OBJECT_VISIBLE( l_U432[1], 1 );
            }
            if (NOT (IS_VEHICLE_DEAD( l_U452[5] )))
            {
                SET_VEHICLE_VISIBLE( l_U452[5], 1 );
                FREEZE_VEHICLE_POSITION( l_U452[5], 0 );
            }
            if (NOT (IS_PED_DEAD( l_U141[0] )))
            {
                SET_PED_VISIBLE( l_U141[0], 1 );
            }
            if (NOT (IS_PED_DEAD( l_U141[1] )))
            {
                SET_PED_VISIBLE( l_U141[1], 1 );
            }
            if (NOT (IS_PED_DEAD( l_U141[2] )))
            {
                SET_PED_VISIBLE( l_U141[2], 1 );
            }
            if (NOT (IS_PED_DEAD( l_U141[3] )))
            {
                SET_PED_VISIBLE( l_U141[3], 1 );
            }
            if (NOT (IS_PED_DEAD( l_U141[14] )))
            {
                SET_PED_VISIBLE( l_U141[14], 1 );
            }
            if (NOT (IS_PED_DEAD( l_U141[15] )))
            {
                SET_PED_VISIBLE( l_U141[15], 1 );
            }
            if (NOT (IS_PED_DEAD( l_U141[16] )))
            {
                SET_PED_VISIBLE( l_U141[16], 1 );
            }
            if (NOT (IS_PED_DEAD( l_U141[17] )))
            {
                SET_PED_VISIBLE( l_U141[17], 1 );
            }
             /* WRITESCRIPTLOG */ sub_178( "CCB", "The animated camera length is:", 0 );
            PRINTINT( CAMERA_ANIMATED_LENGTH( "LEVEL_S_BUS_CP_07", "B_OUT_10_04_BUS_CAM" ) );
            PRINTNL();
            CAMERA_PLAY_ANIMATED( "LEVEL_S_BUS_CP_07", "B_OUT_10_04_BUS_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
            if (IS_SCREEN_FADED_OUT())
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "FADING IN!!!", 0 );
                DO_SCREEN_FADE_IN( 500 );
            }
            l_U476._fU12 = 3000;
             /* RESETTIMER */ sub_4140( ref l_U476 );
             /* STARTTIMER */ sub_664( ref l_U476 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eIntroMidscene - STATE_MIDSCENE_01", 0 );
            l_U125 = 6;
        }
        break;
        case 6:
        if ( /* ISTIMERDONE */ sub_4457( ref l_U476 ))
        {
            if (ISEQ_IS_LOADED( -1501041926 ))
            {
                ISEQ_UNREGISTER_ENTITY( -1501041926, "player" );
                ISEQ_TERMINATE( -1501041926 );
                 /* P_STREAMREQ_ISEQ_REMOVE */ sub_34819( -1501041926, ref g_U1272 );
            }
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Setting the player in cover...", 0 );
                 /* TELEPORTPED */ sub_64726(  /* PLAYER_PED_ID */ sub_1341(), 192.79800000, -65.80000000, 1.19100000, g_U2466[11] );
                SNAP_PLAYER_TO_COVERLINE(  /* PLAYER_ID */ sub_1379(), "s_busdep_termfight", "SD_STANDOFF_COVERLINE_00", 0, g_U2339[11] );
            }
            l_U476._fU12 = 700;
             /* RESETTIMER */ sub_4140( ref l_U476 );
             /* STARTTIMER */ sub_664( ref l_U476 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eIntroMidscene - STATE_MIDSCENE_02", 0 );
            l_U125 = 7;
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "The animated camera current time:", 0 );
            PRINTINT( CAMERA_ANIMATED_CURRENT_TIME() );
            PRINTNL();
        }
        break;
        case 7:
        if ( /* F_IS_PED_IN_COVER */ sub_66474(  /* PLAYER_PED_ID */ sub_1341() ))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eIntroMidscene - STATE_MIDSCENE_03", 0 );
            l_U125 = 8;
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Waiting for the player to enter cover...", 0 );
        }
        break;
        case 8:
        if ( /* ISTIMERDONE */ sub_4457( ref l_U476 ))
        {
             /* P_SETUP_PLAYER_IN_COVER */ sub_66685();
            l_U476._fU12 = 1900;
             /* RESETTIMER */ sub_4140( ref l_U476 );
             /* STARTTIMER */ sub_664( ref l_U476 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eIntroMidscene - STATE_MIDSCENE_04", 0 );
            l_U125 = 9;
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "The animated camera current time:", 0 );
            PRINTINT( CAMERA_ANIMATED_CURRENT_TIME() );
            PRINTNL();
        }
        break;
        case 9:
        if (CAMERA_ANIMATED_CURRENT_TIME() >= 5600)
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eIntroMidscene - STATE_MIDSCENE_COMPLETE", 0 );
            l_U125 = 39;
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "The animated camera current time:", 0 );
            PRINTINT( CAMERA_ANIMATED_CURRENT_TIME() );
            PRINTNL();
        }
        break;
        case 39:
        return 1;
        break;
    }
    return 0;
}

/* F_STREAMREQ_ISEQ_IS_ASSET_LOADED */ int sub_64372(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int I;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if ((uParam1^)[I]._fU4 == 3)
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    ISEQ_GET_NAME( 32, ref uVar4, (uParam1^)[I]._fU0 );
                    DISPLAYF( "[CCB]### The ISEQ is loaded: {} ###", 1, 1281, ref uVar4 );
                    return 1;
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return 0;
}

/* TELEPORTPED */ void sub_64726(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* F_IS_PED_IN_COVER */ int sub_66474(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        if (IS_PED_USING_MP3_COVER_TASK( uParam0 ))
        {
            return 1;
        }
    }
    return 0;
}

/* P_SETUP_PLAYER_IN_COVER */ void sub_66685()
{
     /* WRITESCRIPTLOG */ sub_178( "CCB", "P_SETUP_PLAYER_IN_COVER", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )))
    {
        if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1379() )))
        {
            if ((g_U2875[11] > 0) || (g_U763 == 11))
            {
                ;
            }
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1379(), 1, 1 );
            SET_PED_DEFAULT_AIM_AT_COORD(  /* PLAYER_PED_ID */ sub_1341(), 193.94000000, -64.75000000, 2.81000000 );
            if (IS_PED_USING_MP3_COVER_TASK(  /* PLAYER_PED_ID */ sub_1341() ))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Locking the player in cover.", 0 );
                SET_PLAYER_LOCKED_IN_COVER(  /* PLAYER_ID */ sub_1379(), 1 );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "The player is NOT using cover!!!", 0 );
            }
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Disabling shootdodge for the player...", 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1379(), 0 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Disabling last man standing for the player...", 0 );
            USE_ANIMATED_LAST_MAN_STANDING( 1 );
            BLOCK_PLAYER_COVER_MOVEMENT_TRANSITIONS( 1 );
            if ( /* F_STREAMREQ_ACTION_TREE_IS_ASSET_LOADED */ sub_886( ref g_U2040, ref g_U1535 ))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Setting the player ped anim node to STANDOFF/STANDOFF_COVER/COVER_AIM_RIGHT_WAIT/default_cover_aim_right_modes.", 0 );
                PED_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_1341(), "/Global/STANDOFF/STANDOFF_COVER/COVER_AIM_RIGHT_WAIT/default_cover_aim_right_modes" );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "The txtStandoffCover action tree is NOT loaded!!!", 0 );
            }
        }
    }
    return;
}

/* F_HANDLE_INTRO_CUTSCENE_10_04 */ int sub_67785()
{
    if ((l_U123 < 7) AND (l_U123 > 3))
    {
        ;
    }
    switch (l_U123)
    {
        case 0:
        if (NOT (CUTSCENE_IS_LOADED( "10_04_BUS_CONCAT" )))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "The cutscene is NOT loaded!!!", 0 );
            PRE_STREAM_SEAMLESS_CUTSCENE( "10_04_BUS_CONCAT" );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "The cutscene is already loaded.", 0 );
        }
         /* NIS_PRE_SETUP */ sub_31520( 1, 0, 0, 1 );
         /* WRITESCRIPTLOG */ sub_178( "CCB", "eIntroCutscene - STATE_CUTSCENE_PRELOAD", 0 );
        l_U123 = 1;
        break;
        case 1:
        if (l_U120 >= 2)
        {
            if (l_U121 >= 2)
            {
                if (CUTSCENE_IS_LOADED( "10_04_BUS_CONCAT" ))
                {
                    if (NOT (IS_PED_DEAD( g_U2595 )))
                    {
                         /* WRITESCRIPTLOG */ sub_178( "CCB", "eIntroCutscene - STATE_CUTSCENE_IN", 0 );
                        l_U123 = 2;
                    }
                    else
                    {
                         /* WRITESCRIPTLOG */ sub_178( "CCB", "Waiting for the piGiovanna ped to be created...", 0 );
                    }
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "Waiting for the 10_04_BUS_CONCAT cutscene to load...", 0 );
                }
            }
        }
        break;
        case 2:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )))
        {
            CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_1341(), g_U2339[11], g_U2466[11] );
            ISEQ_REGISTER_ENTITY( -1501041926, "entity_max",  /* PLAYER_PED_ID */ sub_1341(), 0 );
            CUTSCENE_REGISTER_ISEQ( -1501041926 );
        }
        if (NOT (IS_PED_DEAD( g_U2595 )))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Registering the piGiovanna ped...", 0 );
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2595, "Giov_Bus", 1 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "The piGiovanna ped is NOT valid!!!", 0 );
        }
        if (NOT (IS_VEHICLE_DEAD( l_U452[5] )))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Registering the jasre vehicle...", 0 );
            CUTSCENE_REGISTER_VEHICLE_COPY( l_U452[5], "jasre" );
        }
        REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_Crac_Sold_OF^3", -1489714533 );
        REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_Crac_Sold_OF", -1943434354 );
        REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_Crac_Sold_OF^1", 1758818191 );
        REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_Crac_Sold_OF^2", 1900580661 );
        CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        CUTSCENE_ENABLE_SKIP( 0 );
        START_SEAMLESS_CUTSCENE();
        if (IS_SCREEN_FADED_OUT())
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "FADING IN!!!", 0 );
            DO_SCREEN_FADE_IN( 2000 );
        }
         /* WRITESCRIPTLOG */ sub_178( "CCB", "eIntroCutscene - STATE_CUTSCENE_FADEIN", 0 );
        l_U123 = 3;
        break;
        case 3:
        if (l_U112 == 0)
        {
            if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1379() )) == 0))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Applying player preload variation", 0 );
                APPLY_PLAYER_PRELOAD_VARIATION(  /* PLAYER_PED_ID */ sub_1341(), 0 );
            }
            l_U112 = 1;
        }
        if (IS_SCREEN_FADED_IN())
        {
            SET_FADE_MUTE_OVERRIDE( 0 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eIntroCutscene - STATE_CUTSCENE_IDLE", 0 );
            l_U123 = 4;
        }
        else if (HAS_CUTSCENE_FINISHED())
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "The cutscene was skipped before finishing fading in...", 0 );
            SET_FADE_MUTE_OVERRIDE( 0 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eIntroCutscene - STATE_CUTSCENE_IDLE", 0 );
            l_U123 = 4;
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Waiting for the screen to fade in...", 0 );
        }
        break;
        case 4:
        if (HAS_CUTSCENE_FINISHED())
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "The cutscene is finished...", 0 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Giving the player the wtTermPlayerRifle weapon...", 0 );
            if (( /* HAS_SAVEFILE_LOADED */ sub_58088( ref l_U35 )) == 0)
            {
                l_U464 =  /* F_GIVEPEDWEAPON */ sub_20185(  /* PLAYER_PED_ID */ sub_1341(), g_U2862, 25000, 0, 0 );
            }
             /* CLEANPED */ sub_32509( g_U2595 );
             /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( -1204387800, ref g_U910 );
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 0 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eIntroCutscene - STATE_CUTSCENE_COMPLETE", 0 );
            l_U123 = 7;
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Waiting for cutscene:", 0 );
            PRINTINT( GET_CUTSCENE_TIME_MS() );
            PRINTNL();
        }
        break;
        case 7:
        return 1;
        break;
    }
    return 0;
}

/* P_START_GAMEPLAY */ void sub_69897()
{
     /* WRITESCRIPTLOG */ sub_178( "CCB", "P_START_GAMEPLAY", 0 );
    g_U764 = 11;
     /* WRITESCRIPTLOG */ sub_178( "CCB", "The mceCurrentCheckpoint is:", 0 );
    PRINTINT( g_U764 );
    PRINTNL();
    if (g_U2875[11] == 0)
    {
         /* WRITESCRIPTLOG */ sub_178( "CCB", "Saving MCE_BUSENDFIGHT checkpoint data.", 0 );
         /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_70142( ref l_U35, g_U764,  /* PLAYER_PED_ID */ sub_1341(), g_U2339[11], g_U2466[11], g_U2509[11], g_U2552[11], 0 );
    }
    ACTIVATE_BULLET_TIME( 0, 0.40000000, 1 );
     /* WRITESCRIPTLOG */ sub_178( "CCB", "Set adrenaline to zero...", 0 );
    SET_ADRENALINE_AMT( 0.00000000 );
    SET_GENERATE_BULLET_SHELLS( 1 );
    SET_HIGH_RAGDOLL_LOD_LIMIT( 8 );
     /* P_START_CAMERA */ sub_74822();
     /* NIS_POST_SETUP */ sub_75105( 1, 1 );
    TOGGLE_DISPLAY_AMMO( 0 );
     /* CREATETIMER */ sub_514( ref l_U485, 1300, 1, 0 );
     /* STARTTIMER */ sub_664( ref l_U485 );
     /* CREATETIMER */ sub_514( ref l_U494, 15000, 1, 0 );
     /* STARTTIMER */ sub_664( ref l_U494 );
     /* P_START_SP_CHALLENGES */ sub_75463();
    return;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_70142(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_178( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_178( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_60653( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_70433( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_70910( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_70910( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_71170( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_70910( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_71170( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_71170( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_70910( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_71170( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_71170( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_71170( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_70910( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_71170( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_71170( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_71170( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_71170( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_72750( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_178( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_70433(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_58521( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_178( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_178( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_70910(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_71170(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_72750(int iParam0)
{
     /* WRITE_STRING */ sub_12612( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_72838( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_72915( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_72915( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_72915( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_73084( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_73084( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_73084( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_73084( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_73084( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_73084( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_73084( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_73084( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_73084( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_73084( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_73084( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_72915( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_73084( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_73084( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_73084( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_72915( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_73785( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_73084( iParam0->_fU52 );
     /* WRITE_STRING */ sub_12612( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_73084( iParam0->_fU96 );
     /* WRITE_STRING */ sub_12612( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_73084( iParam0->_fU100 );
     /* WRITE_STRING */ sub_12612( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_73084( iParam0->_fU104 );
     /* WRITE_STRING */ sub_12612( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_73084( iParam0->_fU108 );
     /* WRITE_STRING */ sub_12612( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_73084( iParam0->_fU112 );
     /* WRITE_STRING */ sub_12612( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_73084( iParam0->_fU116 );
     /* WRITE_STRING */ sub_12612( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_73084( iParam0->_fU120 );
     /* WRITE_STRING */ sub_12612( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_73084( iParam0->_fU124 );
     /* WRITE_STRING */ sub_12612( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_73084( iParam0->_fU128 );
     /* WRITE_STRING */ sub_12612( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_73084( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_73084( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_73084( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_72838(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_72915(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_73084(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_73785(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* P_START_CAMERA */ void sub_74822()
{
     /* WRITESCRIPTLOG */ sub_178( "CCB", "P_START_CAMERA", 0 );
    CLEAR_PED_DEFAULT_AIM(  /* PLAYER_PED_ID */ sub_1341() );
     /* NIS_RETURN_TO_GAMEPLAY_CAM */ sub_74904( 0, 0, 0, 93.00000000, 3.00000000, 0 );
    if (IS_ANIMATED_CAMERA_PLAYING())
    {
         /* WRITESCRIPTLOG */ sub_178( "CCB", "Stopping animated camera!!!", 0 );
        CAMERA_ANIMATED_STOP( 400, 1 );
    }
    return;
}

/* NIS_RETURN_TO_GAMEPLAY_CAM */ void sub_74904(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

/* NIS_POST_SETUP */ void sub_75105(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1379(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1341(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_75203();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_75203()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1341(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1341(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1341(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1341(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* P_START_SP_CHALLENGES */ void sub_75463()
{
     /* WRITESCRIPTLOG */ sub_178( "CCB", "P_START_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_178( "CCB", "Starting the Bus_Depot_Terminal_Fight context...", 0 );
    START_CONTEXT( "Bus_Depot_Terminal_Fight" );
    return;
}

/* P_HANDLE_PLAYER_SAFETY_CHECK */ void sub_75711()
{
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )))
    {
        if (NOT (IS_PED_USING_MP3_COVER_TASK(  /* PLAYER_PED_ID */ sub_1341() )))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "The player is NOT in cover!!! Killing the player.", 0 );
             /* P_KILL_PED */ sub_75857(  /* PLAYER_PED_ID */ sub_1341() );
        }
    }
    return;
}

/* P_KILL_PED */ void sub_75857(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

/* P_HANDLE_PED_XYZ_SAFETY_CHECK */ void sub_75947(unknown uParam0)
{
    int I;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( (uParam0^)[I] )};
            if (( /* F_ISPEDINTRIGGERBOX */ sub_76111( (uParam0^)[I], l_U756 )) || (((uVar4._fU4 > 96.00000000) || (uVar4._fU4 < -68.00000000)) || (((uVar4._fU0 > 232.00000000) || (uVar4._fU0 < 130.00000000)) || (uVar4._fU8 < -10.00000000))))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Cleaning piTempPed ped:", 0 );
                 /* CLEANPED */ sub_32509( (uParam0^)[I] );
            }
        }
    }
    return;
}

/* F_ISPEDINTRIGGERBOX */ int sub_76111(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* P_HANDLE_STUCK_ENEMIES */ void sub_76305(unknown uParam0, unknown uParam1, float fParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, int iParam11)
{
    int I;
    boolean bVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (IS_PED_SHOOTING( (uParam0^)[I] ))
                {
                    (uParam8^)[I] = 1;
                }
            }
            else
            {
                (uParam8^)[I] = 0;
            }
        }
        else
        {
            (uParam8^)[I] = 0;
        }
    }
    if (GET_REAL_GAME_TIMER() >= (uParam10^))
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (DOES_PED_EXIST( (uParam0^)[I] ))
            {
                if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
                {
                    if ((NOT (uParam8^)[I]) AND (NOT (IS_PED_SHOOTING( (uParam0^)[I] ))))
                    {
                        uVar19 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_VELOCITY( (uParam0^)[I] )};
                        if ((NOT ((uVar19._fU8 * uVar19._fU8) > fParam2)) AND ((NOT ((uVar19._fU4 * uVar19._fU4) > fParam2)) AND (NOT ((uVar19._fU0 * uVar19._fU0) > fParam2))))
                        {
                            bVar15 = false;
                        }
                        else
                        {
                            bVar15 = true;
                        }
                        if ((NOT (uParam9^)[I]) AND (NOT bVar15))
                        {
                            if (NOT (IS_PED_USING_MP3_COVER_TASK( (uParam0^)[I] )))
                            {
                                if ( /* IS_PED_IN_RANGE_OF_COORD */ sub_76724( (uParam0^)[I], (uParam7^)[I], uParam1 ))
                                {
                                    uVar16 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( (uParam0^)[I] )};
                                    if (IS_SPHERE_VISIBLE( uVar16, 2.00000000, 0 ))
                                    {
                                         /* WRITESCRIPTLOG */ sub_178( "CCB", "Killing stuck enemy!!!", 0 );
                                        PRINTINT( I );
                                        PRINTNL();
                                         /* P_KILL_PED */ sub_75857( (uParam0^)[I] );
                                    }
                                    else
                                    {
                                         /* WRITESCRIPTLOG */ sub_178( "CCB", "Cleaning stuck enemy!!!", 0 );
                                        PRINTINT( I );
                                        PRINTNL();
                                         /* CLEANPED */ sub_32509( (uParam0^)[I] );
                                    }
                                }
                            }
                        }
                    }
                }
            }
            if (DOES_PED_EXIST( (uParam0^)[I] ))
            {
                if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
                {
                    if (NOT ( /* IS_PED_IN_RANGE_OF_COORD */ sub_76724( (uParam0^)[I], uParam3, uParam6 )))
                    {
                         /* WRITESCRIPTLOG */ sub_178( "CCB", "Cleaning far away enemy!!!", 0 );
                        PRINTINT( I );
                        PRINTNL();
                         /* CLEANPED */ sub_32509( (uParam0^)[I] );
                    }
                }
            }
            if (DOES_PED_EXIST( (uParam0^)[I] ))
            {
                if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
                {
                    (uParam7^)[I] = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( (uParam0^)[I] )};
                    (uParam9^)[I] = bVar15;
                    (uParam8^)[I] = 0;
                }
                else
                {
                    (uParam7^)[I] = {0.00000000, 0.00000000, 0.00000000};
                    (uParam9^)[I] = 0;
                    (uParam8^)[I] = 0;
                }
            }
            else
            {
                (uParam7^)[I] = {0.00000000, 0.00000000, 0.00000000};
                (uParam9^)[I] = 0;
                (uParam8^)[I] = 0;
            }
        }
        (uParam10^) = GET_REAL_GAME_TIMER() + iParam11;
    }
    return;
}

/* IS_PED_IN_RANGE_OF_COORD */ int sub_76724(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if (NOT (IS_PED_DEAD( uParam0 )))
        {
            if ((GET_DISTANCE_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 ), uParam1, 1 )) <= fParam4)
            {
                return 1;
            }
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_178( "CCB", "The piTempPed ped is NOT valid!!!", 0 );
    }
    return 0;
}

/* P_UPDATE_GRENADE_EVENT */ void sub_77427()
{
    if (l_U575 < 4)
    {
        if (l_U71)
        {
            if ( /* ISTIMERDONE */ sub_4457( ref l_U503 ))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Triggering the grenade flinch.", 0 );
                PED_SET_ACTION_INTENTION(  /* PLAYER_PED_ID */ sub_1341(), 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
            }
            if ( /* ISTIMERDONE */ sub_4457( ref l_U512 ))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Stopping the camera shake.", 0 );
                STOP_GAMEPLAY_CAM_SHAKING( "SMALL_EXPLOSION_SHAKE", 0 );
            }
        }
    }
    switch (l_U575)
    {
        case 0:
        if (NOT l_U71)
        {
            if (IS_EXPLOSION_IN_AREA( 20, 196.32000000, -78.56000000, -1.95000000, 189.19000000, -60.68000000, 3.86000000 ))
            {
                l_U71 = 1;
                PLAY_SOUND_FRONTEND( l_U135, "SBUS_RS_BUS_SHAKE" );
                START_PARTICLE_FX_NON_LOOPED_AT_COORD( "BusDepot_BusRocking_S", l_U622, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
                SHAKE_GAMEPLAY_CAM( "SMALL_EXPLOSION_SHAKE", 1.50000000 );
                 /* CREATETIMER */ sub_514( ref l_U512, 1000, 1, 0 );
                 /* STARTTIMER */ sub_664( ref l_U512 );
                 /* CREATETIMER */ sub_514( ref l_U503, 20, 1, 0 );
                 /* STARTTIMER */ sub_664( ref l_U503 );
                DEACTIVATE_BULLET_TIME( 1, 0 );
                CAMERA_POINT_AT_GRENADE( 0 );
                CAMERA_CLEAR_POINT_AT_TARGET();
                if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1379() )))
                {
                    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )))
                    {
                        if (l_U137 <= 1)
                        {
                             /* WRITESCRIPTLOG */ sub_178( "CCB", "Disabling PLAYER forced aim...", 0 );
                            CLEAR_PED_DEFAULT_AIM(  /* PLAYER_PED_ID */ sub_1341() );
                            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1379(), 0, 0 );
                        }
                        SET_PED_CONSUMING_AMMO(  /* PLAYER_PED_ID */ sub_1341(), 1 );
                        l_U139 = GET_PED_HEALTH(  /* PLAYER_PED_ID */ sub_1341() );
                         /* WRITESCRIPTLOG */ sub_178( "CCB", "The player's current health is:", 0 );
                        PRINTINT( l_U139 );
                        PRINTNL();
                        l_U140 = l_U139 - 51;
                         /* WRITESCRIPTLOG */ sub_178( "CCB", "Taking 51 points of health!!!", 0 );
                        SET_PED_HEALTH(  /* PLAYER_PED_ID */ sub_1341(), l_U140, 0 );
                         /* WRITESCRIPTLOG */ sub_178( "CCB", "The player's new health is:", 0 );
                        PRINTINT( GET_PED_HEALTH(  /* PLAYER_PED_ID */ sub_1341() ) );
                        PRINTNL();
                        if ((GET_PED_HEALTH(  /* PLAYER_PED_ID */ sub_1341() )) <= 100)
                        {
                             /* WRITESCRIPTLOG */ sub_178( "CCB", "The player's health is below 100... Killing PLAYER ped!!!", 0 );
                             /* P_KILL_PED */ sub_75857(  /* PLAYER_PED_ID */ sub_1341() );
                        }
                    }
                }
                 /* CREATETIMER */ sub_514( ref l_U494, 15000, 1, 0 );
                 /* STARTTIMER */ sub_664( ref l_U494 );
            }
        }
        if ( /* ISTIMERDONE */ sub_4457( ref l_U494 ))
        {
            l_U160 =  /* GET_NEAREST_PED_IN_ARRAY_TO_COORD */ sub_78480( ref l_U141, l_U616 );
            if (NOT (IS_PED_DEAD( l_U160 )))
            {
                if (NOT (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_11776( ref l_U141 )) <= 1))
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "Tasking the piGrenadeThrower ped to throw a grenade...", 0 );
                    l_U465 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_20666( l_U160, g_U2863, 5, 1, 0 );
                    OPEN_SEQUENCE_TASK( ref l_U466 );
                    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
                    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )))
                    {
                        TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, l_U616,  /* PLAYER_PED_ID */ sub_1341(), 3, 0, 1056964608, 0, 1, 0 );
                    }
                    TASK_SELECT_WEAPON_TO_HAND( 0, l_U465, 0 );
                    TASK_SHOOT_AT_COORD( 0, l_U619, -1, 1566631136, 0, 0 );
                    CLOSE_SEQUENCE_TASK( l_U466 );
                    TASK_PERFORM_SEQUENCE( l_U160, l_U466 );
                    CLEAR_SEQUENCE_TASK( l_U466 );
                     /* CREATETIMER */ sub_514( ref l_U494, 15000, 1, 0 );
                     /* STARTTIMER */ sub_664( ref l_U494 );
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "eGrenadeEvent - STATE_GRENADE_TASK", 0 );
                    l_U575 = 1;
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "Last enemy!!!", 0 );
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "eGrenadeEvent - STATE_GRENADE_COMPLETE", 0 );
                    l_U575 = 4;
                }
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "The piGrenadeThrower ped is NOT valid!!!", 0 );
                 /* CREATETIMER */ sub_514( ref l_U494, 15000, 1, 0 );
                 /* STARTTIMER */ sub_664( ref l_U494 );
            }
        }
        break;
        case 1:
        if (NOT (IS_PED_DEAD( l_U160 )))
        {
            l_U465 = GET_WEAPON_FROM_HAND( l_U160, 0, 0 );
            if (GET_DOES_WEAPON_EXIST( l_U465 ))
            {
                if ((GET_WEAPON_TYPE( l_U465 )) == g_U2863)
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "The piGrenadeThrower ped has the grenade in hand...", 0 );
                    CAMERA_POINT_AT_GRENADE( 1 );
                    SET_PED_AS_ONE_SHOT_KILL( l_U160, 1 );
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "eGrenadeEvent - STATE_GRENADE_IN_HAND", 0 );
                    l_U575 = 2;
                }
            }
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "The piGrenadeThrower ped is NOT valid!!!", 0 );
             /* CREATETIMER */ sub_514( ref l_U494, 15000, 1, 0 );
             /* STARTTIMER */ sub_664( ref l_U494 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eGrenadeEvent - STATE_GRENADE_WAITING", 0 );
            l_U575 = 0;
        }
        break;
        case 2:
        if (NOT (IS_PED_DEAD( l_U160 )))
        {
            if (IS_PED_SHOOTING( l_U160 ))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "The piGrenadeThrower ped is shooting...", 0 );
                if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )))
                {
                    SET_PED_CONSUMING_AMMO(  /* PLAYER_PED_ID */ sub_1341(), 0 );
                     /* P_MAX_RELOAD_WEAPONS */ sub_75203();
                }
                SET_PED_AS_ONE_SHOT_KILL( l_U160, 0 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U160, 0 );
                TASK_COMBAT_PED( l_U160,  /* PLAYER_PED_ID */ sub_1341() );
                if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_11776( ref l_U141 )) > 1)
                {
                     /* WRITESCRIPTLOG */ sub_178( "CCB", "Disabling bullet camera from piGrenadeThrower ped.", 0 );
                    SET_PED_CAN_TRIGGER_BULLET_CAM( l_U160, 0 );
                }
                ACTIVATE_BULLET_TIME( 0, 0.40000000, 1 );
                 /* CREATETIMER */ sub_514( ref l_U485, 1300, 1, 0 );
                 /* STARTTIMER */ sub_664( ref l_U485 );
                l_U71 = 0;
                l_U137++;
                DISPLAYF( "[CCB]### The grenade has been thrown: iGrenadeThrow# {} ###", 1, 513, l_U137 );
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "eGrenadeEvent - STATE_GRENADE_IN_AIR", 0 );
                l_U575 = 3;
            }
        }
        else if (NOT IS_BULLET_CAMERA_ACTIVE())
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "The piGrenadeThrower ped is NOT valid!!!", 0 );
            CAMERA_CLEAR_POINT_AT_TARGET();
            CAMERA_POINT_AT_GRENADE( 0 );
            DEACTIVATE_BULLET_TIME( 1, 0 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )))
            {
                SET_PED_CONSUMING_AMMO(  /* PLAYER_PED_ID */ sub_1341(), 1 );
            }
             /* CREATETIMER */ sub_514( ref l_U494, 15000, 1, 0 );
             /* STARTTIMER */ sub_664( ref l_U494 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eGrenadeEvent - STATE_GRENADE_WAITING", 0 );
            l_U575 = 0;
        }
        break;
        case 3:
        if ((IS_EXPLOSION_IN_SPHERE( 20, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1341() ), 200.00000000 )) AND (NOT l_U71))
        {
            l_U71 = 1;
            if (l_U137 <= 1)
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Disabling PLAYER forced aim...", 0 );
                CLEAR_PED_DEFAULT_AIM(  /* PLAYER_PED_ID */ sub_1341() );
                SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1379(), 0, 0 );
            }
            if (IS_EXPLOSION_IN_SPHERE( 20, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1341() ), 10.00000000 ))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "The explosion was close to the player...", 0 );
                 /* CREATETIMER */ sub_514( ref l_U503, 20, 1, 0 );
                 /* STARTTIMER */ sub_664( ref l_U503 );
            }
            if (NOT (IS_PED_DEAD( l_U141[1] )))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Setting the piStandoffVCPF_1 ped to lockonable...", 0 );
                SET_PED_AIM_LOCKONABLE( l_U141[1], 1 );
            }
             /* CREATETIMER */ sub_514( ref l_U485, 100, 1, 0 );
             /* STARTTIMER */ sub_664( ref l_U485 );
        }
        else if ( /* ISTIMERDONE */ sub_4457( ref l_U485 ))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Resetting the grenade event...", 0 );
            DEACTIVATE_BULLET_TIME( 1, 0 );
            CAMERA_POINT_AT_GRENADE( 0 );
            CAMERA_CLEAR_POINT_AT_TARGET();
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1379() )))
            {
                if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )))
                {
                    if (l_U137 <= 1)
                    {
                        CLEAR_PED_DEFAULT_AIM(  /* PLAYER_PED_ID */ sub_1341() );
                        SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1379(), 0, 0 );
                    }
                    SET_PED_CONSUMING_AMMO(  /* PLAYER_PED_ID */ sub_1341(), 1 );
                }
            }
            if (NOT (IS_PED_DEAD( l_U141[1] )))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Setting the piStandoffVCPF_1 ped to lockonable...", 0 );
                SET_PED_AIM_LOCKONABLE( l_U141[1], 1 );
            }
             /* CREATETIMER */ sub_514( ref l_U494, 15000, 1, 0 );
             /* STARTTIMER */ sub_664( ref l_U494 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eGrenadeEvent - STATE_GRENADE_WAITING", 0 );
            l_U575 = 0;
        }
        break;
        case 4: break;
    }
    return;
}

/* GET_NEAREST_PED_IN_ARRAY_TO_COORD */ void sub_78480(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;
    unknown Result;
    float fVar8;
    float fVar9;

    fVar9 = -1.00000000;
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            fVar8 = GET_DISTANCE_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( (uParam0^)[I] ), uParam1, 1 );
            if (fVar9 < 0.00000000)
            {
                fVar9 = fVar8;
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Storing initial nearest distance from piTempSquad:", 0 );
                PRINTFLOAT( fVar9 );
                PRINTNL();
            }
            if (fVar8 <= fVar9)
            {
                DISPLAYF( "[CCB]### Storing nearest ped from piTempSquad: Index# {} ###", 1, 513, I );
                Result = (uParam0^)[I];
                fVar9 = fVar8;
            }
        }
    }
    return Result;
}

/* P_UPDATE_LAST_ENEMY */ void sub_81124()
{
    switch (l_U128)
    {
        case 0:
         /* CREATETIMER */ sub_514( ref l_U530, 0, 1, 0 );
         /* STARTTIMER */ sub_664( ref l_U530 );
         /* WRITESCRIPTLOG */ sub_178( "CCB", "eLastEnemy - STATE_EVENT_START", 0 );
        l_U128 = 6;
        break;
        case 6:
        if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_11776( ref l_U141 )) == 1)
        {
            l_U162 =  /* F_GET_LIVING_PED */ sub_81297( ref l_U141 );
             /* CREATETIMER */ sub_514( ref l_U530, 3000, 1, 0 );
             /* STARTTIMER */ sub_664( ref l_U530 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eLastEnemy - STATE_EVENT_01", 0 );
            l_U128 = 10;
        }
        break;
        case 10:
        if ( /* ISTIMERDONE */ sub_4457( ref l_U530 ))
        {
            if (NOT (IS_PED_DEAD( l_U162 )))
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "Last enemy found!!! Tasking the last enemy to go to coord and shoot.", 0 );
                OPEN_SEQUENCE_TASK( ref l_U466 );
                TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
                if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )))
                {
                    TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 193.64000000, -52.94000000, 0.00000000,  /* PLAYER_PED_ID */ sub_1341(), 3, 1, 1056964608, 0, 1, 0 );
                    TASK_SHOOT_AT_PED( 0,  /* PLAYER_PED_ID */ sub_1341(), -1, -256437761, 0, 0, 0 );
                }
                CLOSE_SEQUENCE_TASK( l_U466 );
                TASK_PERFORM_SEQUENCE( l_U162, l_U466 );
                CLEAR_SEQUENCE_TASK( l_U466 );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_178( "CCB", "The piLastEnemy ped is dead!!!", 0 );
            }
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eLastEnemy - STATE_EVENT_COMPLETE", 0 );
            l_U128 = 44;
        }
        break;
        case 44: break;
    }
    return;
}

/* F_GET_LIVING_PED */ void sub_81297(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            return (uParam0^)[I];
        }
    }
    return nil;
}

/* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ void sub_81979(unknown uParam0)
{
    int I;

    if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_11776( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

/* P_RESIZE_COMBAT_RANGE */ void sub_82555(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^)[I], uParam1 );
            SET_PED_COMBAT_RANGE_MAX( (uParam0^)[I], uParam2 );
        }
    }
    return;
}

/* F_HANDLE_MIDSCENE_FAIL_01 */ int sub_83319()
{
    if ((l_U126 < 37) AND (l_U126 >= 4))
    {
        ;
    }
    switch (l_U126)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_178( "CCB", "eFailMidscene - STATE_EVENT_INIT", 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "The player is NOT dead!!!", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "The player is dead.", 0 );
        }
         /* NIS_PRE_SETUP */ sub_31520( 1, 0, 0, 1 );
         /* WRITESCRIPTLOG */ sub_178( "CCB", "Disabling the HUD.", 0 );
        DISPLAY_HUD( 0 );
        CLEAR_PRINTS();
         /* CAM_CREATE_STATIC_CAM */ sub_83665( ref l_U463, l_U689[0], 0.00000000, 0.00000000, 0.00000000, 45.00000000 );
        if (DOES_CAM_EXIST( l_U463 ))
        {
            POINT_CAM_AT_COORD( l_U463, l_U696[0] );
        }
         /* CAM_PLAY_STATIC_CAM */ sub_83815( ref l_U463 );
         /* WRITESCRIPTLOG */ sub_178( "CCB", "Suspending music...", 0 );
        AUDIO_MUSIC_SUSPEND( 500 );
        l_U521._fU12 = 1000;
         /* RESETTIMER */ sub_4140( ref l_U521 );
         /* STARTTIMER */ sub_664( ref l_U521 );
         /* WRITESCRIPTLOG */ sub_178( "CCB", "eFailMidscene - STATE_MIDSCENE_01", 0 );
        l_U126 = 6;
        break;
        case 6:
        if ( /* ISTIMERDONE */ sub_4457( ref l_U521 ))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "Triggering the next camera shot.", 0 );
             /* CAM_CREATE_STATIC_CAM */ sub_83665( ref l_U463, l_U689[1], 0.00000000, 0.00000000, 0.00000000, 45.00000000 );
            if (DOES_CAM_EXIST( l_U463 ))
            {
                POINT_CAM_AT_COORD( l_U463, l_U696[1] );
            }
             /* CAM_PLAY_STATIC_CAM */ sub_83815( ref l_U463 );
            l_U521._fU12 = 1000;
             /* RESETTIMER */ sub_4140( ref l_U521 );
             /* STARTTIMER */ sub_664( ref l_U521 );
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eFailMidscene - STATE_MIDSCENE_02", 0 );
            l_U126 = 7;
        }
        break;
        case 7:
        if ( /* ISTIMERDONE */ sub_4457( ref l_U521 ))
        {
             /* WRITESCRIPTLOG */ sub_178( "CCB", "eFailMidscene - STATE_MIDSCENE_OUT", 0 );
            l_U126 = 38;
        }
        break;
        case 38:
         /* WRITESCRIPTLOG */ sub_178( "CCB", "eFailMidscene - STATE_MIDSCENE_COMPLETE", 0 );
        l_U126 = 39;
        break;
        case 39:
        return 1;
        break;
    }
    return 0;
}

/* CAM_CREATE_STATIC_CAM */ void sub_83665(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    (uParam0^) = CREATE_CAM_WITH_PARAMS( "DEFAULT_SCRIPTED_CAMERA", uParam1, uParam4, uParam7, 1 );
    SET_CAM_PARAMS( (uParam0^), uParam1, uParam4, uParam7, 0, 1, 1 );
    return;
}

/* CAM_PLAY_STATIC_CAM */ void sub_83815(unknown uParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( (uParam0^), 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    return;
}

/* F_CHECK_QUIT_RETRY */ int sub_84481(int iParam0)
{
    iParam0 = 1;
    switch (l_U4)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_84559( ref l_U6 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )))
            {
                l_U5 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_514( ref l_U6, l_U5, 1, 1 );
             /* STARTTIMER */ sub_664( ref l_U6 );
        }
        if ( /* ISTIMERDONE */ sub_4457( ref l_U6 ))
        {
             /* WRITESCRIPTLOG */ sub_178( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1379() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1379(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U4 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U4 = 2;
            }
            else
            {
                l_U4 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_178( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_85026();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_178( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_85026();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_84559(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_85026()
{
     /* WRITESCRIPTLOG */ sub_178( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_4140( ref l_U6 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1379() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1379(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U3 = 0;
    l_U3 = l_U3;
    l_U4 = 0;
    return;
}

/* P_CLEANUP_ALL */ void sub_85841(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_178( "CCB", "P_CLEANUP_ALL", 0 );
    SET_SILHOUETTE_ACTIVE( 1 );
     /* WRITESCRIPTLOG */ sub_178( "CCB", "Suspending music...", 0 );
    AUDIO_MUSIC_SUSPEND( 500 );
     /* WRITESCRIPTLOG */ sub_178( "CCB", "Releasing mission audio bank...", 0 );
    STOP_SOUND( l_U135, 0 );
    RELEASE_SCRIPT_AUDIO_BANK();
    REMOVE_PARTICLE_FX( l_U136 );
    if (ISEQ_IS_LOADED( -1501041926 ))
    {
        ISEQ_UNREGISTER_ENTITY( -1501041926, "player" );
        ISEQ_TERMINATE( -1501041926 );
         /* P_STREAMREQ_ISEQ_REMOVE */ sub_34819( -1501041926, ref g_U1272 );
    }
    if (NOT (IS_PED_DEAD( l_U141[1] )))
    {
        if (GET_DOES_WEAPON_EXIST( l_U465 ))
        {
            REMOVE_PED_WEAPON( l_U141[1], l_U465 );
        }
    }
     /* CLEANPEDARRAY */ sub_36003( ref l_U141 );
     /* CLEANPED */ sub_32509( l_U160 );
     /* CLEANPED */ sub_32509( l_U161 );
     /* CLEANPED */ sub_32509( l_U162 );
     /* CLEANPED */ sub_32509( g_U2595 );
     /* CLEANPED */ sub_32509( l_U163 );
     /* CLEANOBJECT */ sub_36276( l_U431 );
     /* CLEANOBJECTARRAY */ sub_86220( ref l_U432 );
     /* CLEANOBJECTARRAY */ sub_86220( ref l_U435 );
     /* CLEANVEHICLEARRAY */ sub_36119( ref l_U452 );
     /* CLEANVEHICLE */ sub_36173( l_U461 );
     /* CLEANVEHICLE */ sub_36173( l_U462 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U753._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U754._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( l_U755._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U756._fU0 );
    CAMERA_POINT_AT_GRENADE( 0 );
    CAMERA_CLEAR_POINT_AT_TARGET();
    if (DOES_CAM_EXIST( l_U463 ))
    {
        DESTROY_CAM( l_U463 );
    }
    END_POSTFX_BLENDER( 3, 0 );
    TOGGLE_DISPLAY_AMMO( 1 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1379() )))
    {
        SET_PLAYER_LOCKED_IN_COVER(  /* PLAYER_ID */ sub_1379(), 0 );
        SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1379(), 1 );
        SET_PED_CONSUMING_AMMO(  /* PLAYER_PED_ID */ sub_1341(), 1 );
    }
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    SET_PROJECTILE_THROW_USE_DAMPING_COMPENSATION( 0 );
    SET_ALLOWED_TO_FAIL_COVER_FOR_BLOCKING_LINE_OF_FIRE( 1 );
    SET_HIGH_RAGDOLL_LOD_LIMIT_TO_DEFAULT();
    USE_ANIMATED_LAST_MAN_STANDING( 0 );
    BLOCK_PLAYER_COVER_MOVEMENT_TRANSITIONS( 0 );
     /* WRITESCRIPTLOG */ sub_178( "CCB", "Disabling all vehicles to high LOD...", 0 );
    SET_ALL_VEHICLES_HIGH_LOD( 0 );
    RESET_PED_MODEL_LOD_DISTANCES( g_U2106 );
    if (CUTSCENE_IS_LOADED( "10_04_BUS_CONCAT" ))
    {
         /* WRITESCRIPTLOG */ sub_178( "CCB", "Unloading 10_04_BUS_CONCAT cutscene...", 0 );
        CLEAR_NAMED_CUTSCENE( "10_04_BUS_CONCAT" );
    }
    if (CUTSCENE_IS_LOADED( "10_05_BUS_PD_END" ))
    {
         /* WRITESCRIPTLOG */ sub_178( "CCB", "Unloading 10_05_BUS_PD_END cutscene...", 0 );
        CLEAR_NAMED_CUTSCENE( "10_05_BUS_PD_END" );
    }
    if (CUTSCENE_IS_LOADED( "10_05_BUS_concat" ))
    {
         /* WRITESCRIPTLOG */ sub_178( "CCB", "Unloading 10_05_BUS_concat cutscene...", 0 );
        CLEAR_NAMED_CUTSCENE( "10_05_BUS_concat" );
    }
    SET_CAMERA_OVERRIDE( "", "", 0, 1, 1 );
     /* P_CLEANUP_SPEECH */ sub_86973();
     /* P_STOP_SP_CHALLENGES */ sub_87573( uParam0 );
    return;
}

/* CLEANOBJECTARRAY */ void sub_86220(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* CLEANOBJECT */ sub_36276( (uParam0^)[I] );
    }
    return;
}

/* P_CLEANUP_SPEECH */ void sub_86973()
{
     /* WRITESCRIPTLOG */ sub_178( "CCB", "P_CLEANUP_SPEECH", 0 );
    if ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_8368( l_U703 ))
    {
         /* WRITESCRIPTLOG */ sub_178( "CCB", "Killing the SBUS_TFCA speech...", 0 );
         /* KILL_SPEECH */ sub_87100( ref l_U703, 0 );
    }
    if ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_8368( l_U713 ))
    {
         /* WRITESCRIPTLOG */ sub_178( "CCB", "Killing the SBUS_TFCB speech...", 0 );
         /* KILL_SPEECH */ sub_87100( ref l_U713, 0 );
    }
    if ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_8368( l_U723 ))
    {
         /* WRITESCRIPTLOG */ sub_178( "CCB", "Killing the SBUS_TFCD speech...", 0 );
         /* KILL_SPEECH */ sub_87100( ref l_U723, 0 );
    }
    if ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_8368( l_U733 ))
    {
         /* WRITESCRIPTLOG */ sub_178( "CCB", "Killing the SBUS_TFCE speech...", 0 );
         /* KILL_SPEECH */ sub_87100( ref l_U733, 0 );
    }
    if ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_8368( l_U743 ))
    {
         /* WRITESCRIPTLOG */ sub_178( "CCB", "Killing the SBUS_TFCF speech...", 0 );
         /* KILL_SPEECH */ sub_87100( ref l_U743, 0 );
    }
    return;
}

/* KILL_SPEECH */ void sub_87100(int iParam0, unknown uParam1)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_8411( (iParam0^) )))
    {
        ;
    }
    else
    {
        PRINTSTRING( "\n KILL SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
        {
            if (iParam0->_fU8 == g_U6[iParam0->_fU4])
            {
                STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
            }
        }
    }
    return;
}

/* P_STOP_SP_CHALLENGES */ void sub_87573(boolean bParam0)
{
     /* WRITESCRIPTLOG */ sub_178( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    if (bParam0)
    {
        ;
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_178( "CCB", "Stopping the Bus_Depot context...", 0 );
        END_CONTEXT( "Bus_Depot" );
    }
     /* WRITESCRIPTLOG */ sub_178( "CCB", "Stopping the Bus_Depot_Terminal_Fight context...", 0 );
    END_CONTEXT( "Bus_Depot_Terminal_Fight" );
    return;
}

/* P_SETUP_PLAYER_RELATIONSHIPS */ void sub_88013()
{
     /* WRITESCRIPTLOG */ sub_178( "SP", "P_SETUP_PLAYER_RELATIONSHIPS", 0 );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1341() )) == 0)
    {
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_1341(), 0, 1 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_1341(), 0, 2 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_1341(), 0, 6 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_1341(), 0, 7 );
    }
    return;
}

/* P_UNLOAD_ASSETS */ void sub_88451()
{
     /* WRITESCRIPTLOG */ sub_178( "CCB", "P_UNLOAD_ASSETS", 0 );
    RELEASE_SOUND_ID( l_U135 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( g_U2106, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( 89470519, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( -634417735, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( g_U2135, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( 1572429640, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( -1522400210, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( -764000169, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( -1221193536, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( -1425703854, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( -1204387800, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( 1686109657, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( 1049690760, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( -1053689591, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( 1979959192, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( 967235939, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( -866409927, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( -560118084, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_32603( 819522354, ref g_U910 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_33742( g_U2862, ref g_U1211 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_33742( g_U2863, ref g_U1211 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_33742( g_U2854, ref g_U1211 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_33742( g_U2856, ref g_U1211 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_33742( g_U2855, ref g_U1211 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_33742( g_U2857, ref g_U1211 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_34076( ref g_U1968, ref g_U1369 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_34076( ref g_U1944, ref g_U1369 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_34076( "veh@car_gensedan", ref g_U1369 );
     /* P_STREAMREQ_ACTION_TREE_REMOVE */ sub_34434( ref g_U2040, ref g_U1535 );
     /* P_STREAMREQ_ACTION_TREE_REMOVE */ sub_34434( "Vehicle/Vehicle_Car.act", ref g_U1535 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_34819( -1501041926, ref g_U1272 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_36649( 300, ref g_U1474 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_36649( 301, ref g_U1474 );
    return;
}


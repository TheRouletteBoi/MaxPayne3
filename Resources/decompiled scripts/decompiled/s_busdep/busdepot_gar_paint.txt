void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U40 = 0;
    l_U41 = 0;
    l_U42 = 1500;
    StrCopy( ref l_U52, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U60, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U68 = 0;
    l_U69 = 0;
    l_U72 = 0;
    l_U73 = 0;
    l_U74 = 0;
    l_U575 = {-49.84706000, -37.59435000, 4.97235300};
    l_U578 = 90.00000000;
    l_U581 = {-58.46000000, -23.93600000, 1.14500000};
    l_U585 = {-58.46000000, -23.93600000, 1.14500000};
    l_U614 = 0;
    l_U615 = 0;
    l_U616 = 0;
    l_U617 = 0;
    l_U618 = 0;
    l_U619 = 0;
    l_U620 = 0;
    l_U621 = 0;
    l_U622 = 0;
    l_U623 = 0;
    l_U719 = 0;
    l_U729 = 0;
    l_U730 = 0;
    l_U731 = 0;
    l_U732 = -1;
    l_U733 = -1;
    l_U735 = {-52.25000000, -33.88000000, 9.86500000};
    l_U738 = {-50.85000000, -23.13000000, 0.10000000};
    l_U741 = 220.00000000;
    l_U742 = {-52.54000000, -21.44000000, 0.10000000};
    l_U745 = 250.00000000;
    l_U746 = {-54.22000000, -23.87000000, 0.10000000};
    l_U749 = 140.00000000;
    l_U781 = {-52.35586000, -38.65434000, 6.17340300};
    l_U784 = {-4.47806500, 0.00000900, -1.80662800};
    l_U787 = 50.00000000;
    l_U788 = 100;
    l_U789 = 0;
    l_U790 = 0;
    l_U791 = 0;
    l_U792 = {-52.95000000, -37.93000000, 4.97000000};
    l_U795 = 0.00000000;
    l_U805 = 750;
    l_U815 = 1250;
    l_U825 = 3750;
    l_U835 = 1000;
    l_U863 = 3000;
    l_U873 = 6000;
    l_U883 = 0;
    l_U884 = 0;
    l_U885 = 0;
    l_U895 = 400;
    l_U896 = 1;
    l_U897 = {-52.06400000, -19.96300000, 0.00000000};
    l_U900 = 115.00000000;
    l_U901 = {-47.50000000, -16.50000000, 5.07700000};
    l_U904 = 90.00000000;
    l_U905 = 0;
    l_U906 = {-52.52500000, -21.12400000, 0.75000000};
    l_U909 = 85.00000000;
    l_U910 = 4000;
    l_U911 = 2500;
    l_U921 = 0.19500000;
    l_U922 = -4.55000000;
    l_U923 = {-57.47000000, -23.88000000, 0.00200000};
    l_U926 = 90.00000000;
    l_U927 = {-57.38000000, -23.87000000, 0.00200000};
    l_U930 = 90.00000000;
    l_U962 = {-55.67000000, -21.32000000, 4.16000000};
    l_U965 = {-40.39000000, 0.00000000, 112.04000000};
    l_U968 = 45.00000000;
    l_U969 = 1500;
    l_U970 = -43.32920000;
    l_U971 = -5.56522700;
    l_U981 = 0.00000000;
    l_U982 = -21.00000000;
    l_U983 = 0;
    l_U984 = 0;
    l_U1005 = 0;
     /* WRITESCRIPTLOG */ sub_1201( "SP", "Script busdepot_gar_paint.sc is starting...", 0 );
    l_U68 = 1;
    while (IS_EXITFLAG_SET() == 0)
    {
         /* P_HANDLE_FAILURE */ sub_1339();
        if (l_U69 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_16561();
        }
        WAIT( 0 );
    }
     /* P_CLEANUP_GARAGE */ sub_9528();
     /* P_UNLOAD_GARAGE_ASSETS */ sub_76658();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "busdepot_gar_paint" );
    SET_EXITFLAG_RESPONSE();
     /* WRITESCRIPTLOG */ sub_1201( "SP", "Script busdepot_gar_paint.sc is terminating...", 0 );
    return;
}

/* WRITESCRIPTLOG */ void sub_1201(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_HANDLE_FAILURE */ void sub_1339()
{
    switch (l_U69)
    {
        case 0:
        if (g_U764 == 4)
        {
            if ( /* RESTARTING_CHECKPOINT */ sub_1448())
            {
                 /* P_GARAGE_MPM_END */ sub_1993();
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0)
                {
                    PED_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_1744(), "Global/Player/PlayerRoot/PLAYER_INITIALIZE_LOCO" );
                }
                 /* RESETTIMER */ sub_6515( ref l_U864 );
                l_U69 = 4;
            }
            if (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() ))
            {
                 /* WRITESCRIPTLOG */ sub_1201( "SP", "Mission Failed: Player died.", 0 );
                l_U69 = 2;
                 /* WRITESCRIPTLOG */ sub_1201( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            if (((IS_PED_DEAD( g_U2595 )) == 1) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
            {
                 /* WRITESCRIPTLOG */ sub_1201( "SP", "Mission Failed:  Giovanna died.", 0 );
                l_U74 = 1;
                l_U69 = 1;
                 /* WRITESCRIPTLOG */ sub_1201( "SP", "eFailState = FAIL_WAITING_FOR_GIOVANNA", 0 );
            }
        }
        else if ((( /* IS_RESTART_ACTIVE */ sub_6952()) == 1) || ((((IS_PED_DEAD( g_U2595 )) == 1) AND ((DOES_PED_EXIST( g_U2595 )) == 1)) || ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 1)))
        {
            if (((CUTSCENE_NAMED_IS_LOADING( "10_02_bus_concat" )) == 1) || ((CUTSCENE_IS_LOADED( "10_02_bus_concat" )) == 1))
            {
                CLEAR_NAMED_CUTSCENE( "10_02_bus_concat" );
            }
             /* P_RESET_CHECKPOINT_THREAD */ sub_7098( ref g_U765[4] );
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        }
        break;
        case 1:
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eFailState = FAIL_WAITING_FOR_GIOVANNA", 0 );
        if (( /* F_HANDLE_GIO_DEATH_CAM */ sub_7231()) == 1)
        {
            l_U69 = 2;
             /* WRITESCRIPTLOG */ sub_1201( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
        }
        break;
        case 2:
        if (( /* F_CHECK_QUIT_RETRY */ sub_7934( NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) )) == 1)
        {
            l_U69 = 3;
             /* WRITESCRIPTLOG */ sub_1201( "SP", "eFailState = FAIL_WAITING_FOR_RESPAWN", 0 );
        }
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0)
        {
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            l_U69 = 4;
             /* WRITESCRIPTLOG */ sub_1201( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
        }
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
         /* P_CLEANUP_GARAGE */ sub_9528();
         /* CLEANPED */ sub_9762( g_U2595 );
        l_U69 = 5;
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
        break;
        case 5:
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
         /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_11763( ref l_U75,  /* PLAYER_PED_ID */ sub_1744() );
         /* P_SETUP_PLAYER_RELATIONSHIPS */ sub_16211();
        l_U69 = 6;
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
        break;
        case 6:
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
        l_U68 = 1;
        l_U69 = 0;
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eFailState = FAIL_IDLE", 0 );
        break;
    }
    return;
}

/* RESTARTING_CHECKPOINT */ int sub_1448()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1744(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1782(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1782(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1744() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1744(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* PLAYER_PED_ID */ int sub_1744()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_1782() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_1782()
{
    return GET_PLAYER_ID();
}

/* P_GARAGE_MPM_END */ void sub_1993()
{
    int I;
    int iVar3;
    int iVar4;
    float fVar5;

     /* WRITESCRIPTLOG */ sub_1201( "SP", "P_GARAGE_MPM_END", 0 );
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0) AND (((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1782() )) == 0) AND ((IS_PLAYER_PLAYING(  /* PLAYER_ID */ sub_1782() )) == 1)))
    {
        ISEQ_UNREGISTER_ENTITY( -1113582755, "player" );
        ISEQ_UNREGISTER_ENTITY( -1113582755, "gio" );
        ISEQ_UNREGISTER_ENTITY( -1113582755, "bus_mpm_chain" );
        ISEQ_TERMINATE( -1113582755 );
         /* P_STREAMREQ_ISEQ_REMOVE */ sub_2189( -1113582755, ref g_U1272 );
        if (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND (((( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_3256( ref l_U481 )) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_3256( ref l_U526 ))) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_3256( ref l_U558 ))) > 0))
        {
            SNAP_PLAYER_TO_COVERPOINT(  /* PLAYER_ID */ sub_1782(), "GenCover", "6AD42EEC_8DA94CCC_Corner2", 0 );
        }
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1782(), 0, 0 );
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1782(), 1, 0 );
    }
    if (NOT l_U790)
    {
        SET_CAMERA_OVERRIDE( "", "", 0, 1, 1 );
        DEACTIVATE_BULLET_TIME( 0, 0 );
    }
    ENABLE_MPM( 0 );
    ENABLE_ALL_ADRENALINE( 1 );
     /* P_TERMINATE_MPM_ENEMY_ISEQUENCES */ sub_3540();
     /* P_CREATE_PAINT_BALCONY_DOORS */ sub_3941();
    for ( I = 0; I <= 2; I++ )
    {
        if (((IS_PED_DEAD( l_U481[I] )) == 0) AND ((DOES_PED_EXIST( l_U481[I] )) == 1))
        {
            if (( /* F_ISPEDINTRIGGERBOX */ sub_4873( l_U481[I], l_U129 )) == 0)
            {
                SET_PED_HEALTH( l_U481[I], 0, 0 );
            }
            else
            {
                CLEAR_PED_TASKS( l_U481[I] );
                 /* P_PED_REGISTER_AND_LOCK_TARGET */ sub_5005( l_U481[I],  /* PLAYER_PED_ID */ sub_1744() );
                TASK_COMBAT_PED( l_U481[I],  /* PLAYER_PED_ID */ sub_1744() );
            }
            SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U481[I], 0 );
            SET_PED_CAN_PUSH_PLAYER( l_U481[I], 0 );
            SET_PED_RESIST_TO_OBJECT_COLLISION( l_U481[I], 0 );
            "[doubled result, dropped if not asigned]";
            "[doubled result, dropped if not asigned]";
        }
    }
    for ( I = 0; I <= 2; I++ )
    {
        if (((IS_PED_DEAD( l_U526[I] )) == 0) AND ((DOES_PED_EXIST( l_U526[I] )) == 1))
        {
            if (( /* F_ISPEDINTRIGGERBOX */ sub_4873( l_U526[I], l_U129 )) == 0)
            {
                SET_PED_HEALTH( l_U526[I], 0, 0 );
            }
            else
            {
                CLEAR_PED_TASKS( l_U526[I] );
                 /* P_PED_REGISTER_AND_LOCK_TARGET */ sub_5005( l_U526[I],  /* PLAYER_PED_ID */ sub_1744() );
                TASK_COMBAT_PED( l_U526[I],  /* PLAYER_PED_ID */ sub_1744() );
            }
            SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U526[I], 0 );
            SET_PED_CAN_PUSH_PLAYER( l_U526[I], 0 );
            SET_PED_RESIST_TO_OBJECT_COLLISION( l_U526[I], 0 );
            "[doubled result, dropped if not asigned]";
            "[doubled result, dropped if not asigned]";
        }
    }
    for ( I = 0; I <= 1; I++ )
    {
        if (((IS_PED_DEAD( l_U558[I] )) == 0) AND ((DOES_PED_EXIST( l_U558[I] )) == 1))
        {
            if (( /* F_ISPEDINTRIGGERBOX */ sub_4873( l_U558[I], l_U129 )) == 0)
            {
                SET_PED_HEALTH( l_U558[I], 0, 0 );
            }
            else
            {
                CLEAR_PED_TASKS( l_U558[I] );
                 /* P_PED_REGISTER_AND_LOCK_TARGET */ sub_5005( l_U558[I],  /* PLAYER_PED_ID */ sub_1744() );
                TASK_COMBAT_PED( l_U558[I],  /* PLAYER_PED_ID */ sub_1744() );
            }
            SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U558[I], 0 );
            SET_PED_CAN_PUSH_PLAYER( l_U558[I], 0 );
            SET_PED_RESIST_TO_OBJECT_COLLISION( l_U558[I], 0 );
            "[doubled result, dropped if not asigned]";
            "[doubled result, dropped if not asigned]";
        }
    }
    iVar3 = (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_3256( ref l_U481 )) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_3256( ref l_U526 ))) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_3256( ref l_U558 ));
    iVar4 = 8;
    fVar5 = 1.00000000 - ((TO_FLOAT( iVar3 )) / (TO_FLOAT( iVar4 + 1 )));
     /* P_SET_PLAYER_HEALTH_PERCENT */ sub_5740( fVar5 );
     /* P_REMOVETETHERFROMPED */ sub_5866( ref l_U297, l_U481[0] );
     /* P_TETHERPED */ sub_5963( ref l_U298, l_U481[0], 3 );
     /* P_REMOVETETHERFROMPED */ sub_5866( ref l_U297, l_U481[1] );
     /* P_TETHERPED */ sub_5963( ref l_U298, l_U481[1], 3 );
     /* P_REMOVETETHERFROMPED */ sub_5866( ref l_U297, l_U481[2] );
     /* P_GARAGE_PAINTROOM_TETHER_PED */ sub_6108( l_U481[2] );
     /* P_REMOVETETHERFROMPED */ sub_5866( ref l_U297, l_U526[0] );
     /* P_TETHERPED */ sub_5963( ref l_U302, l_U526[0], 3 );
     /* P_REMOVETETHERFROMPED */ sub_5866( ref l_U297, l_U526[1] );
     /* P_GARAGE_PAINTROOM_TETHER_PED */ sub_6108( l_U526[1] );
     /* P_REMOVETETHERFROMPED */ sub_5866( ref l_U297, l_U526[2] );
     /* P_TETHERPED */ sub_5963( ref l_U299, l_U526[2], 3 );
     /* P_REMOVETETHERFROMPED */ sub_5866( ref l_U297, l_U558[0] );
     /* P_GARAGE_PAINTROOM_TETHER_PED */ sub_6108( l_U558[0] );
     /* P_REMOVETETHERFROMPED */ sub_5866( ref l_U297, l_U558[1] );
     /* P_GARAGE_PAINTROOM_TETHER_PED */ sub_6108( l_U558[1] );
    return;
}

/* P_STREAMREQ_ISEQ_REMOVE */ void sub_2189(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_2327( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a ISEQ asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ int sub_2327(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if ((uParam1^)[I] == iParam0)
            {
                DISPLAYF( "[CCB] ### The THREADID index matches the asset requested for removal: {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
            else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID index is in use and is active: {} ###", 1, 513, (uParam1^)[I] );
                Result = I;
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is in use, but is no longer active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

/* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ void sub_3256(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

/* P_TERMINATE_MPM_ENEMY_ISEQUENCES */ void sub_3540()
{
     /* WRITESCRIPTLOG */ sub_1201( "SP", "P_TERMINATE_MPM_ENEMY_ISEQUENCES", 0 );
    ISEQ_UNREGISTER_ENTITY( -145301993, "bus_gmed_a1_pstl" );
    ISEQ_UNREGISTER_ENTITY( -145301993, "bus_gmed_b1_rifle" );
    ISEQ_UNREGISTER_ENTITY( -145301993, "bus_gmed_c1_pstl" );
    ISEQ_TERMINATE( -145301993 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_2189( -145301993, ref g_U1272 );
    ISEQ_UNREGISTER_ENTITY( 1800455693, "bus_vcpf_d1" );
    ISEQ_UNREGISTER_ENTITY( 1800455693, "bus_vcpf_e1" );
    ISEQ_UNREGISTER_ENTITY( 1800455693, "bus_vcpf_f1" );
    ISEQ_TERMINATE( 1800455693 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_2189( 1800455693, ref g_U1272 );
    ISEQ_UNREGISTER_ENTITY( 1504518854, "bus_vcpf_g1" );
    ISEQ_UNREGISTER_ENTITY( 1504518854, "bus_vcpf_h1" );
    ISEQ_TERMINATE( 1504518854 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_2189( 1504518854, ref g_U1272 );
    return;
}

/* P_CREATE_PAINT_BALCONY_DOORS */ void sub_3941()
{
     /* WRITESCRIPTLOG */ sub_1201( "SP", "P_CREATE_PAINT_BALCONY_DOORS", 0 );
    l_U609 =  /* CREATEOBJECTNOOFFSET */ sub_4057( g_U2190._fU0, g_U2190._fU4, 0.00000000, 0.00000000, 180.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( l_U610 )) == 1)
    {
        FREEZE_OBJECT_POSITION( l_U609, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U609, ref g_U1808 );
    }
    l_U610 =  /* CREATEOBJECTNOOFFSET */ sub_4057( g_U2183._fU0, g_U2183._fU4, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( l_U610 )) == 1)
    {
        FREEZE_OBJECT_POSITION( l_U610, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U610, ref g_U1808 );
    }
    return;
}

/* CREATEOBJECTNOOFFSET */ void sub_4057(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_4190( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* LOADMODEL */ void sub_4190(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_4307( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* WRITE_STRING */ void sub_4307(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* F_ISPEDINTRIGGERBOX */ int sub_4873(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* P_PED_REGISTER_AND_LOCK_TARGET */ void sub_5005(unknown uParam0, unknown uParam1)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND (((DOES_PED_EXIST( uParam0 )) == 1) AND (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))))
    {
        CLEAR_LOCKED_TARGET( uParam0 );
        REGISTER_TARGET( uParam0, uParam1 );
        SET_LOCKED_TARGET( uParam0, uParam1 );
    }
    return;
}

/* P_SET_PLAYER_HEALTH_PERCENT */ void sub_5740(unknown uParam0)
{
    int iVar3;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )))
    {
        iVar3 = (ROUND( ((GET_PED_MAX_HEALTH(  /* PLAYER_PED_ID */ sub_1744() )) - 100) * uParam0 )) + 100;
        SET_PED_HEALTH(  /* PLAYER_PED_ID */ sub_1744(), iVar3, 0 );
    }
    return;
}

/* P_REMOVETETHERFROMPED */ void sub_5866(int iParam0, unknown uParam1)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_REMOVE_BOX( uParam1, iParam0->_fU0 );
    }
    return;
}

/* P_TETHERPED */ void sub_5963(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

/* P_GARAGE_PAINTROOM_TETHER_PED */ void sub_6108(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_1201( "SP", "P_GARAGE_PAINTROOM_TETHER_PED", 0 );
     /* P_TETHERPED */ sub_5963( ref l_U298, uParam0, 3 );
     /* P_TETHERPED */ sub_5963( ref l_U299, uParam0, 3 );
     /* P_TETHERPED */ sub_5963( ref l_U300, uParam0, 3 );
     /* P_TETHERPED */ sub_5963( ref l_U301, uParam0, 3 );
     /* P_TETHERPED */ sub_5963( ref l_U302, uParam0, 3 );
    return;
}

/* RESETTIMER */ void sub_6515(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* IS_RESTART_ACTIVE */ void sub_6952()
{
    return g_U648;
}

/* P_RESET_CHECKPOINT_THREAD */ void sub_7098(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

/* F_HANDLE_GIO_DEATH_CAM */ int sub_7231()
{
    switch (l_U74)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eGioDeathCamState = DEATHCAM_SETUP", 0 );
         /* NIS_PRE_SETUP */ sub_7367( 1, 0, 0, 1 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
        BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
        l_U74 = 2;
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eGioDeathCamState = DEATHCAM_WAITING_FOR_BULLETCAM", 0 );
        case 2:
        if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
        {
            DO_SCREEN_FADE_OUT( 0 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 0 );
            l_U74 = 3;
             /* WRITESCRIPTLOG */ sub_1201( "SP", "eGioDeathCamState = DEATHCAM_FINISHED", 0 );
        }
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eGioDeathCamState = DEATHCAM_FINISHED", 0 );
        l_U74 = 0;
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eGioDeathCamState = DEATHCAM_IDLE", 0 );
        return 1;
        break;
    }
    return 0;
}

/* NIS_PRE_SETUP */ void sub_7367(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1782(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1744(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1744() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1744(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* F_CHECK_QUIT_RETRY */ int sub_7934(int iParam0)
{
    iParam0 = 1;
    switch (l_U41)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_8016( ref l_U43 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )))
            {
                l_U42 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_8150( ref l_U43, l_U42, 1, 1 );
             /* STARTTIMER */ sub_8300( ref l_U43 );
        }
        if ( /* ISTIMERDONE */ sub_8433( ref l_U43 ))
        {
             /* WRITESCRIPTLOG */ sub_1201( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1782() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1782(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U41 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U41 = 2;
            }
            else
            {
                l_U41 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_1201( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_8934();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_1201( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_8934();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_8016(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* CREATETIMER */ void sub_8150(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_8300(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* ISTIMERDONE */ int sub_8433(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_8934()
{
     /* WRITESCRIPTLOG */ sub_1201( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_6515( ref l_U43 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1782() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1782(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U40 = 0;
    l_U40 = l_U40;
    l_U41 = 0;
    return;
}

/* P_CLEANUP_GARAGE */ void sub_9528()
{
     /* WRITESCRIPTLOG */ sub_1201( "SP", "P_CLEANUP_GARAGE", 0 );
     /* P_TERMINATE_MPM_ENEMY_ISEQUENCES */ sub_3540();
    ISEQ_UNREGISTER_ENTITY( -1113582755, "player" );
    ISEQ_UNREGISTER_ENTITY( -1113582755, "gio" );
    ISEQ_UNREGISTER_ENTITY( -1113582755, "bus_mpm_chain" );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_2189( -1113582755, ref g_U1272 );
    ISEQ_UNREGISTER_ENTITY( 529194724, "player" );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_2189( 529194724, ref g_U1272 );
     /* CLEANPEDARRAY */ sub_9712( ref l_U430 );
     /* CLEANPEDARRAY */ sub_9712( ref l_U481 );
     /* CLEANPEDARRAY */ sub_9712( ref l_U526 );
     /* CLEANPEDARRAY */ sub_9712( ref l_U558 );
     /* CLEANOBJECT */ sub_9898( l_U588 );
     /* CLEANOBJECT */ sub_9898( l_U589 );
     /* CLEANOBJECT */ sub_9898( l_U734 );
     /* CLEANOBJECT */ sub_9898( l_U579 );
     /* CLEANOBJECT */ sub_9898( g_U2626 );
     /* CLEANOBJECT */ sub_9898( l_U580 );
     /* CLEANOBJECT */ sub_9898( l_U584 );
    if (l_U732 != -1)
    {
        STOP_SOUND( l_U732, 0 );
        RELEASE_SOUND_ID( l_U732 );
        l_U732 = -1;
    }
    if (l_U733 != -1)
    {
        STOP_SOUND( l_U733, 0 );
        RELEASE_SOUND_ID( l_U733 );
        l_U733 = -1;
    }
     /* CLEANOBJECT */ sub_9898( l_U609 );
     /* CLEANOBJECT */ sub_9898( l_U610 );
     /* CLEANPLACEMENT */ sub_10123( l_U611 );
     /* CLEANPLACEMENT */ sub_10123( l_U612 );
     /* CLEANPLACEMENT */ sub_10123( l_U613 );
     /* P_STREAMREQ_SCRIPT_STREAM_STOP */ sub_10222( "S_BUSDEP_MPM", ref g_U1704 );
     /* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ sub_11006( "S_BUSDEP_MPM", ref g_U1704 );
     /* CLEANPLACEMENT */ sub_10123( g_U739._fU0 );
     /* P_STOP_SP_CHALLENGES */ sub_11363();
    return;
}

/* CLEANPEDARRAY */ void sub_9712(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_9762( (uParam0^)[I] );
    }
    return;
}

/* CLEANPED */ void sub_9762(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CLEANOBJECT */ void sub_9898(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* CLEANPLACEMENT */ void sub_10123(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

/* P_STREAMREQ_SCRIPT_STREAM_STOP */ void sub_10222(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if ( /* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ sub_10272( uParam0, uParam1 ))
    {
        iVar4 =  /* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ sub_10481( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            DISPLAYF( "[CCB]### Stopping the SCRIPT_STREAM: {} ###", 1, 1281, ref (uParam1^)[iVar4]._fU0 );
            STOP_SCRIPT_STREAM( iVar4 );
        }
        else
        {
            DISPLAYF( "[CCB]### The SCRIPT_STREAM slot is NOT valid!!! {} ###", 1, 1537, uParam0 );
            SCRIPT_ASSERT( "Attempting to stop a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        DISPLAYF( "[CCB]### The SCRIPT_STREAM asset is NOT loaded!!! {} ###", 1, 1537, uParam0 );
        DISPLAYF( "Attempting to stop a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ int sub_10272(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB]### The SCRIPT_STREAM is loaded: {} ###", 1, 1281, ref (uParam1^)[I]._fU0 );
                return 1;
            }
        }
    }
    return 0;
}

/* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ int sub_10481(unknown uParam0, unknown uParam1)
{
    int Result;

    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
        {
            return Result;
        }
    }
    return -1;
}

/* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ void sub_11006(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_2327( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a SCRIPT_STREAM asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STOP_SP_CHALLENGES */ void sub_11363()
{
     /* WRITESCRIPTLOG */ sub_1201( "CCB", "P_STOP_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_1201( "CCB", "Stopping the Bus_Depot_Garage_Paint_MPM context...", 0 );
    END_CONTEXT( "Bus_Depot_Garage_Paint_MPM" );
     /* WRITESCRIPTLOG */ sub_1201( "CCB", "Stopping the Bus_Depot_Garage_Paint context...", 0 );
    END_CONTEXT( "Bus_Depot_Garage_Paint" );
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_11763(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_1201( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_11982( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_13146( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_13460( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_13895( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_13460( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_13895( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_13460( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_13895( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_14211( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_13895( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_14211( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_13895( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_14783( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_14985( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1744(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_1201( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_11982(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_12044( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_12044(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_13146(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_13460(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_4307( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_13895(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_14211(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_4307( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_14783(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_14985(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_12044( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_15083( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_15083(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_SETUP_PLAYER_RELATIONSHIPS */ void sub_16211()
{
     /* WRITESCRIPTLOG */ sub_1201( "SP", "P_SETUP_PLAYER_RELATIONSHIPS", 0 );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0)
    {
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_1744(), 0, 1 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_1744(), 0, 2 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_1744(), 0, 6 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_1744(), 0, 7 );
    }
    return;
}

/* P_HANDLE_EVENTS */ void sub_16561()
{
    int I;
    unknown uVar3;
    vector vVar4;
    float fVar7;
    vector vVar8;
    float fVar11;
    vector vVar12;
    float fVar15;
    vector vVar16;
    float fVar19;
    vector vVar20;
    float fVar23;

    vVar4 = {-49.15000000, -11.38000000, 0.04000000};
    fVar7 = 90.00000000;
    vVar8 = {-49.59000000, -11.95000000, 0.04000000};
    fVar11 = 90.00000000;
    vVar12 = {-57.69000000, -12.16000000, 0.04000000};
    fVar15 = -90.00000000;
    vVar16 = {-58.90000000, -9.89000000, 0.04000000};
    fVar19 = -180.00000000;
    vVar20 = {-59.56000000, -10.08000000, 0.04000000};
    fVar23 = -180.00000000;
     /* P_HANDLE_PAINT_SAFETY_Z_CHECK */ sub_16735();
     /* P_HANDLE_PAINT_FORKLIFT_EXPLOSION */ sub_17027();
    switch (l_U68)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eCheckpointState = CP_INIT_SCRIPT_DATA", 0 );
         /* P_INIT_SCRIPT_VARIABLES */ sub_17695();
         /* P_INIT_GAMEPLAY_STRUCTS */ sub_18073();
         /* P_ENABLE_FORKLIFT_COVERPOINT_ARRAY */ sub_17146( 0 );
         /* P_SETUP_AI_GROUP */ sub_20628( ref l_U306, 1.00000000, 0 );
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U68 = 2;
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_21158( -1204387800, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_21158( g_U2102, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_21158( g_U2110, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_21158( g_U2123, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_21158( g_U2124, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_21158( g_U2112, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_21158( g_U2113, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_21158( g_U2114, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_21158( g_U2111, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_21158( g_U2116, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_21158( g_U2117, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_21158( -2023675653, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_21158( 948292876, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_21158( -783139352, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_21158( g_U762, ref g_U910 );
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_24185( g_U2854, ref g_U1211 );
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_24185( g_U2855, ref g_U1211 );
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_24185( g_U2857, ref g_U1211 );
         /* P_STREAMREQ_ISEQ_INSERT */ sub_26152( -1113582755, ref g_U1272 );
         /* P_STREAMREQ_ISEQ_INSERT */ sub_26152( -145301993, ref g_U1272 );
         /* P_STREAMREQ_ISEQ_INSERT */ sub_26152( 1800455693, ref g_U1272 );
         /* P_STREAMREQ_ISEQ_INSERT */ sub_26152( 1504518854, ref g_U1272 );
         /* P_STREAMREQ_AUDIO_BANK_INSERT */ sub_29022( "SCRIPT_MISSION\GARAGE_DOOR", ref g_U1757 );
         /* P_STREAMREQ_SCRIPT_STREAM_INSERT */ sub_30935( "S_BUSDEP_MPM", ref g_U1704 );
        if (g_U764 < 4)
        {
            if (((CUTSCENE_NAMED_IS_LOADING( "10_02_bus_concat" )) == 0) AND ((CUTSCENE_IS_LOADED( "10_02_bus_concat" )) == 0))
            {
                PRE_STREAM_SEAMLESS_CUTSCENE( "10_02_bus_concat" );
            }
        }
        l_U68 = 3;
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if ( /* F_STREAMREQ_ALL_ASSETS_LOADED */ sub_33271( ref g_U910, ref g_U1211, ref g_U1272, ref g_U1369, ref g_U1474, ref g_U1535, ref g_U1704, ref g_U1757 ))
        {
            l_U68 = 4;
             /* WRITESCRIPTLOG */ sub_1201( "SP", "eCheckpointState = CP_SETUP_START_POINT", 0 );
            break;
        }
        return;
        case 4:
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eCheckpointState = CP_SETUP_START_POINT", 0 );
        if (g_U764 < 4)
        {
            l_U68 = 6;
             /* WRITESCRIPTLOG */ sub_1201( "SP", "eCheckpointState = CP_CREATE_CUTSCENE_ENEMIES", 0 );
        }
        else if (g_U764 == 4)
        {
             /* P_SETUP_GIOVANNA */ sub_36724();
             /* P_QUICK_SPAWN_PAINT_ENEMIES */ sub_38000();
             /* P_CREATE_PAINTROOM_OBJECTS */ sub_40658();
            if ((l_U615 == 0) AND (g_U763 == 4))
            {
                l_U615 = 1;
                if (( /* HAS_SAVEFILE_LOADED */ sub_44075( ref l_U75 )) == 0)
                {
                     /* F_GIVEPEDWEAPON */ sub_14211(  /* PLAYER_PED_ID */ sub_1744(), g_U2854, 50, 0, 0 );
                     /* F_GIVEPEDWEAPONTOHOLSTER */ sub_13460(  /* PLAYER_PED_ID */ sub_1744(), g_U2855, 0, 150, 0 );
                }
                l_U68 = 5;
                 /* WRITESCRIPTLOG */ sub_1201( "SP", "eCheckpointState = CP_WAIT_FOR_PLAYER_WEAPON", 0 );
            }
            else
            {
                l_U68 = 9;
                 /* WRITESCRIPTLOG */ sub_1201( "SP", "eCheckpointState = CP_START_CHAIN_MPM_BLEND_OUT", 0 );
            }
        }
        break;
        case 5:
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0)
        {
            uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1744(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
            {
                l_U68 = 9;
                 /* WRITESCRIPTLOG */ sub_1201( "SP", "eCheckpointState = CP_START_CHAIN_MPM_BLEND_OUT", 0 );
            }
        }
        break;
        case 6:
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eCheckpointState = CP_CREATE_CUTSCENE_ENEMIES", 0 );
        if (( /* F_HANDLE_SPAWN_CUTSCENE_ENEMIES */ sub_44644()) == 1)
        {
            l_U68 = 7;
             /* WRITESCRIPTLOG */ sub_1201( "SP", "eCheckpointState = CP_WAIT_FOR_FUEL_DEPOT_TO_HANDOFF", 0 );
        }
        break;
        case 7:
        if (g_U2866 == 1)
        {
            l_U70 = 1;
            l_U68 = 8;
             /* WRITESCRIPTLOG */ sub_1201( "SP", "eCheckpointState = CP_HANDLE_FIRE_ESCAPE_CUTSCENE", 0 );
            break;
        }
        return;
        case 8:
        if (( /* F_HANDLE_FIRE_ESCAPE_CUTSCENE */ sub_45486()) == 1)
        {
            if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
            {
                SET_PED_KEEP_TASK( g_U2595, 0 );
            }
            l_U68 = 9;
             /* WRITESCRIPTLOG */ sub_1201( "SP", "eCheckpointState = CP_START_CHAIN_MPM_BLEND_OUT", 0 );
            break;
        }
        return;
        case 9:
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eCheckpointState = CP_START_CHAIN_MPM_BLEND_OUT", 0 );
        CAMERA_POINT_AT_COORD( -51.97000000, -21.09000000, -2.00000000, 0 );
        if ((DOES_CAM_EXIST( l_U750._fU0 )) == 0)
        {
             /* NIS_CREATE_STATIC_CAM */ sub_50396( ref l_U750, l_U781, l_U784, l_U787, l_U788 );
             /* NIS_PLAY_STATIC_CAMERA */ sub_50631( ref l_U750 );
        }
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0)
        {
            CLEAR_PED_TASKS(  /* PLAYER_PED_ID */ sub_1744() );
        }
        if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2595, 1 );
            SET_ROOM_FOR_PED_BY_NAME( g_U2595, ref g_U1808 );
            CLEAR_PED_TASKS_IMMEDIATELY( g_U2595 );
        }
        if ((ISEQ_QUERY_STATE( -1113582755, 3 )) == 0)
        {
             /* TELEPORTPED */ sub_50097(  /* PLAYER_PED_ID */ sub_1744(), l_U792, l_U795 );
             /* TELEPORTPED */ sub_50097( g_U2595, l_U562._fU0, l_U562._fU12 );
            ISEQ_REGISTER_ENTITY( -1113582755, "player",  /* PLAYER_PED_ID */ sub_1744(), 0 );
            ISEQ_REGISTER_ENTITY( -1113582755, "gio", g_U2595, 0 );
            ISEQ_REGISTER_ENTITY( -1113582755, "bus_mpm_chain", l_U734, 1 );
            ISEQ_START( -1113582755 );
        }
        for ( I = 0; I <= 2; I++ )
        {
            if (((IS_PED_DEAD( l_U481[I] )) == 0) AND ((DOES_PED_EXIST( l_U481[I] )) == 1))
            {
                CLEAR_PED_TASKS( l_U481[I] );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U481[I], 0 );
                FREEZE_PED_POSITION( l_U481[I], 0 );
                SET_PED_VISIBLE( l_U481[I], 1 );
            }
        }
        if ((ISEQ_QUERY_STATE( -145301993, 3 )) == 0)
        {
             /* TELEPORTPED */ sub_50097( l_U481[0], l_U738, l_U741 );
             /* TELEPORTPED */ sub_50097( l_U481[1], l_U742, l_U745 );
             /* TELEPORTPED */ sub_50097( l_U481[2], l_U746, l_U749 );
            ISEQ_REGISTER_ENTITY( -145301993, "bus_gmed_a1_pstl", l_U481[0], 0 );
            ISEQ_REGISTER_ENTITY( -145301993, "bus_gmed_b1_rifle", l_U481[1], 0 );
            ISEQ_REGISTER_ENTITY( -145301993, "bus_gmed_c1_pstl", l_U481[2], 0 );
            ISEQ_START( -145301993 );
        }
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U981, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U982, 1065353216, 0 );
        SET_CAM_VIEW_MODE( 0 );
         /* CREATETIMER */ sub_8150( ref l_U796, l_U805, 1, 0 );
         /* STARTTIMER */ sub_8300( ref l_U796 );
         /* CREATETIMER */ sub_8150( ref l_U806, l_U815, 1, 0 );
         /* STARTTIMER */ sub_8300( ref l_U806 );
         /* CREATETIMER */ sub_8150( ref l_U826, l_U835, 1, 0 );
         /* STARTTIMER */ sub_8300( ref l_U826 );
         /* CREATETIMER */ sub_8150( ref l_U854, l_U863, 1, 0 );
         /* STARTTIMER */ sub_8300( ref l_U854 );
         /* CREATETIMER */ sub_8150( ref l_U816, l_U825, 1, 0 );
         /* STARTTIMER */ sub_8300( ref l_U816 );
         /* CREATETIMER */ sub_8150( ref l_U864, l_U873, 1, 0 );
         /* STARTTIMER */ sub_8300( ref l_U864 );
         /* P_START_SP_CHALLENGES */ sub_52895();
        l_U68 = 10;
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eCheckpointState = CP_FIRST_FRAME_MPM_BLEND_OUT", 0 );
        break;
        case 10:
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eCheckpointState = CP_FIRST_FRAME_MPM_BLEND_OUT", 0 );
        CAMERA_ENABLE_SHOULDER_MODE( 0 );
        ENABLE_HIT_DETECTION( 0 );
        ENABLE_MPM( 1 );
        ENABLE_ALL_ADRENALINE( 0 );
        SET_SILHOUETTE_ACTIVE( 0 );
         /* P_STREAMREQ_SCRIPT_STREAM_PLAY_FRONTEND */ sub_53359( "S_BUSDEP_MPM", ref g_U1704 );
        for ( I = 0; I < l_U481; I++ )
        {
            if (((IS_PED_DEAD( l_U481[I] )) == 0) AND ((DOES_PED_EXIST( l_U481[I] )) == 1))
            {
                SET_PED_ALERTNESS( l_U481[I], 2 );
            }
        }
        for ( I = 0; I < l_U526; I++ )
        {
            if (((IS_PED_DEAD( l_U526[I] )) == 0) AND ((DOES_PED_EXIST( l_U526[I] )) == 1))
            {
                SET_PED_VISIBLE( l_U526[I], 0 );
                SET_PED_ALERTNESS( l_U526[I], 2 );
            }
        }
        for ( I = 0; I < l_U558; I++ )
        {
            if (((IS_PED_DEAD( l_U558[I] )) == 0) AND ((DOES_PED_EXIST( l_U558[I] )) == 1))
            {
                SET_PED_VISIBLE( l_U558[I], 0 );
                SET_PED_ALERTNESS( l_U558[I], 2 );
            }
        }
        if ((l_U75._fU0 == 0) || (g_U764 < 4))
        {
            g_U764 = 4;
             /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_54200( ref l_U75, g_U764,  /* PLAYER_PED_ID */ sub_1744(), g_U2339[4], g_U2466[4], g_U2509[4], g_U2552[4], 1 );
        }
         /* P_GLOBAL_CREATE_PAINT_GARAGE_DOOR */ sub_58799( 1 );
         /* NIS_RETURN_TO_GAMEPLAY_CAM */ sub_59289( 1000, 1, 0, l_U981, l_U982, 0 );
        l_U68 = 11;
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eCheckpointState = CP_HANDLE_CHAIN_MPM", 0 );
        break;
        case 11:
         /* P_HANDLE_GARAGE_DOOR_SOUND */ sub_59478();
         /* P_HANDLE_PAINTROOM_BULLETCAM */ sub_59703();
        if (( /* ISTIMERDONE */ sub_8433( ref l_U796 )) == 1)
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        if (( /* ISTIMERDONE */ sub_8433( ref l_U806 )) == 1)
        {
             /* NIS_POST_SETUP */ sub_60464( 1, 1 );
             /* P_LIMIT_PLAYER_ACTIONS */ sub_60768();
            CAMERA_CLEAR_POINT_AT_TARGET();
            DISPLAY_HUD( 0 );
            ENABLE_CROSSHAIR( 1 );
            SET_CROSSHAIR_PULSE();
            SET_CAM_VIEW_MODE( 0 );
            if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0)
            {
                SET_PED_NUM_CHARGERS_OVERRIDE(  /* PLAYER_PED_ID */ sub_1744(), -1 );
            }
            if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1782() )) == 0))
            {
                SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1744(), 1 );
                SET_PED_PROOFS(  /* PLAYER_PED_ID */ sub_1744(), 1, 1, 1, 1, 1 );
                SET_PED_CONSUMING_AMMO(  /* PLAYER_PED_ID */ sub_1744(), 0 );
                SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1782(), 0 );
                if (GET_ADRENALINE_AMT() < 0.10000000)
                {
                    SET_ADRENALINE_AMT( 0.10000000 );
                }
                SET_PED_CAN_SWITCH_WEAPON(  /* PLAYER_PED_ID */ sub_1744(), 0 );
            }
            for ( I = 0; I < 3; I++ )
            {
                if (((IS_PED_DEAD( l_U481[I] )) == 0) AND ((DOES_PED_EXIST( l_U481[I] )) == 1))
                {
                    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U481[I], 0 );
                }
            }
            if (l_U790 == 0)
            {
                SET_CAMERA_OVERRIDE( "BUS_DEPOT_MPM_AIM_CAMERA", "BUS_DEPOT_MPM_AIM_CAMERA", 0, 1, 1 );
                ACTIVATE_BULLET_TIME( 0, 1065353216, 1 );
            }
            AUDIO_MUSIC_FORCE_TRACK( "BUSDEPOT_ACTION_SONG_03", "BUSDEPOT_03_2_4_5", "", 0.00000000, 1000, 5000, -1082130432, 0 );
        }
        if (l_U789 == 0)
        {
            if (( /* ISTIMERDONE */ sub_8433( ref l_U826 )) == 1)
            {
                for ( I = 0; I < l_U526; I++ )
                {
                    if (((IS_PED_DEAD( l_U526[I] )) == 0) AND ((DOES_PED_EXIST( l_U526[I] )) == 1))
                    {
                        CLEAR_PED_TASKS_IMMEDIATELY( l_U526[I] );
                        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U526[I], 0 );
                        FREEZE_PED_POSITION( l_U526[I], 0 );
                    }
                }
                 /* TELEPORTPED */ sub_50097( l_U526[0], vVar4, fVar7 );
                 /* TELEPORTPED */ sub_50097( l_U526[1], vVar8, fVar11 );
                 /* TELEPORTPED */ sub_50097( l_U526[2], vVar12, fVar15 );
                ISEQ_REGISTER_ENTITY( 1800455693, "bus_vcpf_d1", l_U526[0], 0 );
                ISEQ_REGISTER_ENTITY( 1800455693, "bus_vcpf_e1", l_U526[1], 0 );
                ISEQ_REGISTER_ENTITY( 1800455693, "bus_vcpf_f1", l_U526[2], 0 );
                ISEQ_START( 1800455693 );
                 /* CREATETIMER */ sub_8150( ref l_U836, 66, 1, 0 );
                 /* STARTTIMER */ sub_8300( ref l_U836 );
            }
            if (( /* ISTIMERDONE */ sub_8433( ref l_U836 )) == 1)
            {
                for ( I = 0; I < l_U526; I++ )
                {
                    if (((IS_PED_DEAD( l_U526[I] )) == 0) AND ((DOES_PED_EXIST( l_U526[I] )) == 1))
                    {
                        SET_PED_VISIBLE( l_U526[I], 1 );
                    }
                }
            }
            if (( /* ISTIMERDONE */ sub_8433( ref l_U854 )) == 1)
            {
                for ( I = 0; I < l_U558; I++ )
                {
                    if (((IS_PED_DEAD( l_U558[I] )) == 0) AND ((DOES_PED_EXIST( l_U558[I] )) == 1))
                    {
                        CLEAR_PED_TASKS_IMMEDIATELY( l_U558[I] );
                        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U558[I], 0 );
                        SET_PED_VISIBLE( l_U558[I], 0 );
                        FREEZE_PED_POSITION( l_U558[I], 0 );
                    }
                }
                 /* TELEPORTPED */ sub_50097( l_U558[0], vVar16, fVar19 );
                 /* TELEPORTPED */ sub_50097( l_U558[1], vVar20, fVar23 );
                ISEQ_REGISTER_ENTITY( 1504518854, "bus_vcpf_g1", l_U558[0], 0 );
                ISEQ_REGISTER_ENTITY( 1504518854, "bus_vcpf_h1", l_U558[1], 0 );
                ISEQ_START( 1504518854 );
                for ( I = 0; I < l_U558; I++ )
                {
                    if (((IS_PED_DEAD( l_U558[I] )) == 0) AND ((DOES_PED_EXIST( l_U558[I] )) == 1))
                    {
                        SET_PED_VISIBLE( l_U558[I], 0 );
                    }
                }
                 /* CREATETIMER */ sub_8150( ref l_U845, 132, 1, 0 );
                 /* STARTTIMER */ sub_8300( ref l_U845 );
            }
            if (( /* ISTIMERDONE */ sub_8433( ref l_U845 )) == 1)
            {
                for ( I = 0; I < l_U558; I++ )
                {
                    if (((IS_PED_DEAD( l_U558[I] )) == 0) AND ((DOES_PED_EXIST( l_U558[I] )) == 1))
                    {
                        SET_PED_VISIBLE( l_U558[I], 1 );
                    }
                }
            }
        }
        if (( /* ISTIMERDONE */ sub_8433( ref l_U816 )) == 1)
        {
             /* P_CLOSE_PAINT_GARAGE_DOOR */ sub_62344();
        }
        if (( /* ISTIMERDONE */ sub_8433( ref l_U864 )) == 1)
        {
             /* P_GARAGE_MPM_END */ sub_1993();
             /* CREATETIMER */ sub_8150( ref l_U886, l_U895, 1, 0 );
             /* STARTTIMER */ sub_8300( ref l_U886 );
             /* CREATETIMER */ sub_8150( ref l_U874, 1500, 1, 0 );
             /* STARTTIMER */ sub_8300( ref l_U874 );
            l_U883 = 1;
        }
        if (l_U884 == 0)
        {
            if ((IS_BULLET_CAMERA_ACTIVE() == 0) AND (l_U883 == 1))
            {
                 /* P_ONE_SHOT_KILL_END */ sub_62815();
                l_U884 = 1;
            }
        }
        if (( /* ISTIMERDONE */ sub_8433( ref l_U886 )) == 1)
        {
            if (IS_BULLET_CAMERA_ACTIVE() == 0)
            {
                SHAKE_GAMEPLAY_CAM(  /* F_CAM_SHAKE_SMALL_EXPLOSION */ sub_63299(), 0.14000000 );
            }
        }
        if (l_U791 == 0)
        {
            if (IS_BULLET_CAMERA_ACTIVE() == 1)
            {
                 /* P_STREAMREQ_SCRIPT_STREAM_STOP */ sub_10222( "S_BUSDEP_MPM", ref g_U1704 );
                 /* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ sub_11006( "S_BUSDEP_MPM", ref g_U1704 );
                l_U791 = 1;
            }
        }
        if (( /* ISTIMERDONE */ sub_8433( ref l_U874 )) == 1)
        {
            ENABLE_CROSSHAIR( 0 );
            DISPLAY_HUD( 1 );
            ENABLE_HIT_DETECTION( 1 );
            SET_SILHOUETTE_ACTIVE( 1 );
            CAMERA_ENABLE_SHOULDER_MODE( 1 );
            SET_CAM_VIEW_MODE( 1 );
            if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1782() )) == 0))
            {
                SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1744(), 0 );
                SET_PED_PROOFS(  /* PLAYER_PED_ID */ sub_1744(), 0, 0, 0, 0, 0 );
                SET_PED_CONSUMING_AMMO(  /* PLAYER_PED_ID */ sub_1744(), 1 );
                SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1782(), 1 );
                SET_PED_CAN_SWITCH_WEAPON(  /* PLAYER_PED_ID */ sub_1744(), 1 );
            }
            if ((DOES_OBJECT_EXIST( g_U2624 )) == 1)
            {
                SET_OBJECT_COLLIDE_WITH_NON_PLAYER_CHARACTER( g_U2624, 1 );
            }
             /* P_STOP_SP_CHALLENGES_MPM */ sub_63662();
            l_U68 = 12;
             /* WRITESCRIPTLOG */ sub_1201( "SP", "eCheckpointState = CP_CHAIN_MPM_FINISHED", 0 );
        }
        break;
        case 12:
         /* P_HANDLE_GARAGE_DOOR_SOUND */ sub_59478();
         /* P_HANDLE_PAINTROOM_BULLETCAM */ sub_59703();
        if (l_U791 == 0)
        {
             /* P_STREAMREQ_SCRIPT_STREAM_STOP */ sub_10222( "S_BUSDEP_MPM", ref g_U1704 );
             /* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ sub_11006( "S_BUSDEP_MPM", ref g_U1704 );
            l_U791 = 1;
        }
        if (l_U884 == 0)
        {
            if ((IS_BULLET_CAMERA_ACTIVE() == 0) AND (l_U883 == 1))
            {
                 /* P_ONE_SHOT_KILL_END */ sub_62815();
                l_U884 = 1;
            }
        }
        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1782() )) == 0))
        {
            if (IS_ROBO_TESTING() == 1)
            {
                if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_64086( ref l_U276, 0 ))
                {
                     /* P_KILL_PEDS_IN_ARRAY */ sub_64225( ref l_U481 );
                     /* P_KILL_PEDS_IN_ARRAY */ sub_64225( ref l_U526 );
                     /* P_KILL_PEDS_IN_ARRAY */ sub_64225( ref l_U558 );
                     /* WRITESCRIPTLOG */ sub_1201( "MRB", "RoboTester is killing your waves!", 0 );
                }
            }
            if (l_U885 == 0)
            {
                if (( /* F_GET_NUM_MPM_ENEMIES_ALIVE */ sub_64454()) == 0)
                {
                    AUDIO_MUSIC_FORCE_TRACK( "BUSDEPOT_ACTION_SONG_03", "BUSDEPOT_03_1", "", 0.00000000, 10000, 5000, -1082130432, 0 );
                    AUDIO_MUSIC_REQUEST_ONESHOT( "BUSDEPOT_ONESHOT_06", 0 );
                    l_U885 = 1;
                }
            }
            if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND (( /* F_GET_NUM_MPM_ENEMIES_ALIVE */ sub_64454()) == 0)))
            {
                 /* WRITESCRIPTLOG */ sub_1201( "SP", "All peds dead, starting cutscene...", 0 );
                if (((CUTSCENE_NAMED_IS_LOADING( "10_02_bus_concat" )) == 1) || ((CUTSCENE_IS_LOADED( "10_02_bus_concat" )) == 1))
                {
                    CLEAR_NAMED_CUTSCENE( "10_02_bus_concat" );
                }
                ISEQ_UNREGISTER_ENTITY( -1113582755, "player" );
                ISEQ_UNREGISTER_ENTITY( -1113582755, "gio" );
                ISEQ_UNREGISTER_ENTITY( -1113582755, "bus_mpm_chain" );
                ISEQ_TERMINATE( -1113582755 );
                 /* P_STREAMREQ_ISEQ_REMOVE */ sub_2189( -1113582755, ref g_U1272 );
                l_U71 = 1;
                l_U68 = 13;
                 /* WRITESCRIPTLOG */ sub_1201( "SP", "eCheckpointState = CP_HANDLE_TALK_TO_GIO_CUTSCENE", 0 );
            }
        }
        break;
        case 13:
         /* P_HANDLE_GARAGE_DOOR_SOUND */ sub_59478();
        if (( /* F_HANDLE_TALK_TO_GIO_CUTSCENE */ sub_65127()) == 1)
        {
            l_U73 = 1;
            l_U68 = 14;
             /* WRITESCRIPTLOG */ sub_1201( "SP", "eCheckpointState = CP_HANDLE_TALK_TO_GIO_BLENDOUT", 0 );
            break;
        }
        return;
        case 14:
         /* P_HANDLE_GARAGE_DOOR_SOUND */ sub_59478();
        if (( /* F_HANDLE_TALK_TO_GIO_BLENDOUT */ sub_68010()) == 1)
        {
            ISEQ_UNREGISTER_ENTITY( -1113582755, "player" );
            ISEQ_UNREGISTER_ENTITY( -1113582755, "gio" );
            ISEQ_UNREGISTER_ENTITY( -1113582755, "bus_mpm_chain" );
            ISEQ_TERMINATE( -1113582755 );
             /* P_STREAMREQ_ISEQ_REMOVE */ sub_2189( -1113582755, ref g_U1272 );
            ISEQ_UNREGISTER_ENTITY( -145301993, "bus_gmed_a1_pstl" );
            ISEQ_UNREGISTER_ENTITY( -145301993, "bus_gmed_b1_rifle" );
            ISEQ_UNREGISTER_ENTITY( -145301993, "bus_gmed_c1_pstl" );
            ISEQ_TERMINATE( -145301993 );
             /* P_STREAMREQ_ISEQ_REMOVE */ sub_2189( -145301993, ref g_U1272 );
            ISEQ_UNREGISTER_ENTITY( 1800455693, "bus_vcpf_d1" );
            ISEQ_UNREGISTER_ENTITY( 1800455693, "bus_vcpf_e1" );
            ISEQ_UNREGISTER_ENTITY( 1800455693, "bus_vcpf_f1" );
            ISEQ_TERMINATE( 1800455693 );
             /* P_STREAMREQ_ISEQ_REMOVE */ sub_2189( 1800455693, ref g_U1272 );
            ISEQ_UNREGISTER_ENTITY( 1504518854, "bus_vcpf_g1" );
            ISEQ_UNREGISTER_ENTITY( 1504518854, "bus_vcpf_h1" );
            ISEQ_TERMINATE( 1504518854 );
             /* P_STREAMREQ_ISEQ_REMOVE */ sub_2189( 1504518854, ref g_U1272 );
             /* P_START_CHECKPOINT_THREAD */ sub_70050( ref g_U765[5] );
             /* P_STREAMREQ_ISEQ_INSERT */ sub_26152( 529194724, ref g_U1272 );
             /* P_SETDOORAFFECTEDBYBULLETS */ sub_70123( ref g_U2218, 0 );
             /* P_SETDOORAFFECTEDBYBULLETS */ sub_70123( ref g_U2225, 0 );
            l_U68 = 15;
             /* WRITESCRIPTLOG */ sub_1201( "SP", "eCheckpointState = CP_HANDLE_EXITING_PAINTROOM", 0 );
        }
        break;
        case 15:
        if (l_U1005 == 0)
        {
            if ((( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_70438()) == 0) AND ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0))
            {
                if (((GET_DISTANCE_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1744() ), -75.20000000, -27.66000000, 0.00000000, 1 )) < 3.50000000) || ((GET_DISTANCE_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1744() ), -59.77600000, -37.13300000, 0.00000000, 1 )) < 3.50000000))
                {
                     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_70636( ref l_U995 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_70747( 0,  /* PLAYER_PED_ID */ sub_1744(), "MAX", ref l_U995, 2, 0 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_70747( 1,  /* PLAYER_PED_ID */ sub_1744(), "MAX", ref l_U995, 2, 0 );
                     /* PLAY_SINGLE_SPEECH */ sub_71017( "SBUS_MJDBPBA", ref l_U995, 7, 1 );
                    l_U1005 = 1;
                }
            }
        }
        if ((( /* F_ISPEDINTRIGGERBOX */ sub_4873(  /* PLAYER_PED_ID */ sub_1744(), l_U150 )) == 1) AND (l_U624._fU0 == 1))
        {
            if (( /* F_HANDLE_POI */ sub_71958( ref l_U624 )) == 1)
            {
                 /* CLEANOBJECT */ sub_9898( l_U584 );
                l_U72 = 1;
            }
        }
         /* P_HANDLE_FOLDING_DOOR_ACTION */ sub_73788();
         /* P_HANDLE_GARAGE_DOOR_SOUND */ sub_59478();
         /* P_HANDLE_FOLDING_DOOR_SOUND */ sub_76048();
        if ((l_U616 == 0) AND (( /* F_ISPLAYERINTRIGGERBOX */ sub_76278( l_U255 )) == 1))
        {
            if ((GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1744() )) == 0)
            {
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1744(), 1 );
                l_U616 = 1;
            }
        }
        else if ((l_U616 == 1) AND (( /* F_ISPLAYERINTRIGGERBOX */ sub_76278( l_U255 )) == 0))
        {
            if ((GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1744() )) == 1)
            {
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1744(), 0 );
                l_U616 = 0;
            }
        }
        if (g_U764 > 4)
        {
            l_U68 = 16;
             /* WRITESCRIPTLOG */ sub_1201( "SP", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 16:
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eCheckpointState = CP_FINISHED", 0 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U68 = 0;
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eCheckpointState = CP_IDLE", 0 );
        break;
    }
    return;
}

/* P_HANDLE_PAINT_SAFETY_Z_CHECK */ void sub_16735()
{
     /* P_PED_ARRAY_Z_SAFETY_CHECK */ sub_16788( ref l_U481, 0.00000000, 1, 1 );
     /* P_PED_ARRAY_Z_SAFETY_CHECK */ sub_16788( ref l_U526, 0.00000000, 1, 1 );
     /* P_PED_ARRAY_Z_SAFETY_CHECK */ sub_16788( ref l_U558, 0.00000000, 1, 1 );
    return;
}

/* P_PED_ARRAY_Z_SAFETY_CHECK */ void sub_16788(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_PED_Z_SAFETY_CHECK */ sub_16854( (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

/* P_PED_Z_SAFETY_CHECK */ void sub_16854(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                 /* CLEANPED */ sub_9762( uParam0 );
            }
        }
    }
    return;
}

/* P_HANDLE_PAINT_FORKLIFT_EXPLOSION */ void sub_17027()
{
    if (l_U623 == 0)
    {
        if ((HAS_SOMETHING_EXPLODED_IN_AREA( g_U2630, 3.00000000 )) == 1)
        {
             /* WRITESCRIPTLOG */ sub_1201( "sk", "FORKLIFT HAS EXPLODED", 0 );
             /* P_ENABLE_FORKLIFT_COVERPOINT_ARRAY */ sub_17146( 1 );
            l_U623 = 1;
        }
    }
    return;
}

/* P_ENABLE_FORKLIFT_COVERPOINT_ARRAY */ void sub_17146(int iParam0)
{
     /* WRITESCRIPTLOG */ sub_1201( "sk", "P_ENABLE_FORKLIFT_COVERPOINT_ARRAY", 0 );
    if (iParam0 == 0)
    {
        ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "PaintGarage" ), GET_HASH_KEY( "GrabSpline72" ), 0 );
        ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "PaintGarage" ), GET_HASH_KEY( "GrabSpline01" ), 1 );
    }
    else if (iParam0 == 1)
    {
        ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "PaintGarage" ), GET_HASH_KEY( "GrabSpline72" ), 1 );
        ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "PaintGarage" ), GET_HASH_KEY( "GrabSpline01" ), 0 );
    }
    return;
}

/* P_INIT_SCRIPT_VARIABLES */ void sub_17695()
{
     /* WRITESCRIPTLOG */ sub_1201( "SP", "P_INIT_SCRIPT_VARIABLES", 0 );
    l_U440 = 0;
    l_U485 = 0;
    l_U530 = 0;
    l_U561 = 0;
    l_U616 = 0;
    l_U617 = 0;
    l_U618 = 0;
    l_U619 = 0;
    l_U620 = 0;
    l_U621 = 0;
    l_U622 = 0;
    l_U623 = 0;
    l_U791 = 0;
    l_U614 = 0;
    l_U883 = 0;
    l_U884 = 0;
    l_U885 = 0;
    l_U905 = 0;
    l_U729 = 0;
    l_U719 = 0;
    l_U730 = 0;
    l_U731 = 0;
    l_U983 = 0;
    l_U984 = 0;
    l_U1005 = 0;
     /* RESETTIMER */ sub_6515( ref l_U864 );
     /* RESETTIMER */ sub_6515( ref l_U816 );
     /* RESETTIMER */ sub_6515( ref l_U826 );
     /* RESETTIMER */ sub_6515( ref l_U836 );
     /* RESETTIMER */ sub_6515( ref l_U854 );
     /* RESETTIMER */ sub_6515( ref l_U845 );
     /* RESETTIMER */ sub_6515( ref l_U806 );
     /* RESETTIMER */ sub_6515( ref l_U874 );
     /* RESETTIMER */ sub_6515( ref l_U886 );
     /* RESETTIMER */ sub_6515( ref l_U912 );
     /* RESETTIMER */ sub_6515( ref l_U710 );
     /* RESETTIMER */ sub_6515( ref l_U720 );
     /* RESETTIMER */ sub_6515( ref l_U972 );
    l_U70 = 0;
    l_U71 = 0;
    l_U73 = 0;
    l_U72 = 0;
    l_U74 = 0;
    return;
}

/* P_INIT_GAMEPLAY_STRUCTS */ void sub_18073()
{
     /* WRITESCRIPTLOG */ sub_1201( "SP", "P_INIT_GAMEPLAY_STRUCTS", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_18185( ref l_U312[0], -52.02000000, -11.70000000, 0.00000000, 180.00000000, -1288221433, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_18185( ref l_U312[1], -51.37000000, -11.20000000, 0.00000000, 180.00000000, -1093014823, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_18185( ref l_U312[2], -52.50000000, -11.26000000, 0.00000000, 180.00000000, -779842028, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_18185( ref l_U312[3], -90.46487000, -66.32333000, 0.01582100, 270.00000000, -771784984, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_18185( ref l_U312[4], -90.46487000, -67.82333000, 0.01582100, 270.00000000, -214778089, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_18185( ref l_U312[5], -90.46487000, -69.32333000, 0.01582100, 270.00000000, -563478033, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_18185( ref l_U312[6], -90.46487000, -70.82333000, 0.01582100, 270.00000000, -563478033, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_18185( ref l_U312[7], -90.46487000, -72.32333000, 0.01582100, 270.00000000, -87019350, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_18185( ref l_U312[8], -90.46487000, -73.82333000, 0.01582100, 270.00000000, -214778089, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_18185( ref l_U562, l_U575, l_U578, -1257669444, 26, 6, 0, 0, 1 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_18185( ref l_U441[0], -50.85000000, -23.13000000, 0.10000000, 180.00000000, -779842028, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_18185( ref l_U441[1], -52.54000000, -21.44000000, 0.10000000, 180.00000000, 1004606177, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_18185( ref l_U441[2], -54.22000000, -23.87000000, 0.10000000, 180.00000000, -1530806661, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_18185( ref l_U486[0], -46.97979000, -10.59078000, 0.00183600, 180.00000000, 1839156730, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_18185( ref l_U486[1], -47.97979000, -10.59078000, 0.00183600, 180.00000000, -2057158510, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_18185( ref l_U486[2], -59.97775000, -9.13687200, 0.00158400, 180.00000000, -1582768006, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_18185( ref l_U531[0], -59.97775000, -9.13687200, 0.00158400, 180.00000000, 2128162006, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_18185( ref l_U531[1], -60.97775000, -9.13687200, 0.00158400, 180.00000000, 344222721, 7, 3, 2, 0, 0 );
     /* P_CREATETRIGGERBOX */ sub_19131( ref l_U129, "TRIG_GARAGE_PAINTROOM", -56.16000000, -26.57000000, -0.07000000, 39.53000000, 26.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19131( ref l_U192, "TRIG_DELETE_MPM_REPAIR_WEAPONS", -52.60000000, -9.95000000, -1.16000000, 12.00000000, 6.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19131( ref l_U150, "TRIG_AREANEAR", -55.67000000, -23.90000000, 0.00000000, 6.00000000, 12.00000000, 3.24000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19131( ref l_U213, "TRIG_HIDE_ENEMIES", -52.49000000, -17.24000000, -0.32000000, 4.00000000, 9.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19131( ref l_U234, "TRIG_CLEAN_ENEMIES", -52.07000000, -19.97000000, 0.00000000, 2.00000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19131( ref l_U255, "TRIG_REPAIR_CUTSCENE_WALK", -63.71000000, -11.16000000, -0.18000000, 10.00000000, 10.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19131( ref l_U276, "For the good of Robo", -56.70000000, -33.64000000, 0.00000000, 6.00000000, 6.00000000, 3.24000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_19796( ref l_U297, "TETH_GARAGE_PAINT_MID", -51.56000000, -24.43000000, -0.14000000, 12.20000000, 8.05000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_19796( ref l_U298, "TETH_GARAGE_PAINTROOM_00", -48.23000000, -33.73000000, -0.07000000, 23.00000000, 11.07000000, 3.22000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_19796( ref l_U299, "TETH_GARAGE_PAINTROOM_01", -66.93000000, -30.63000000, -0.04000000, 17.00000000, 11.70000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_19796( ref l_U300, "TETH_GARAGE_PAINTROOM_02", -53.33000000, -20.74000000, -0.08000000, 10.46000000, 15.23000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_19796( ref l_U301, "TETH_GARAGE_PAINTROOM_03", -46.58000000, -22.19000000, -0.02000000, 3.18000000, 12.25000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_19796( ref l_U302, "TETH_GARAGE_PAINTROOM_04", -40.70000000, -25.00000000, -0.07000000, 8.60000000, 5.82000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATEFLEEZONE */ sub_20369( ref l_U303, "TRIG_PAINT_FLEE_01", -53.06000000, -15.28000000, -0.69000000, 8.00000000, 3.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATEFLEEZONE */ sub_20369( ref l_U304, "TRIG_PAINT_FLEE_03", -65.83000000, -28.36000000, -0.69000000, 12.00000000, 3.04000000, 4.00000000, -0.67905800, 0.03153210, -1.68001000, 1 );
     /* P_CREATEFLEEZONE */ sub_20369( ref l_U305, "TRIG_PAINT_FLEE_03", -65.83000000, -28.36000000, -0.69000000, 12.00000000, 3.04000000, 4.00000000, -0.67905800, 0.03153210, -1.68001000, 1 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_18185(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATETRIGGERBOX */ void sub_19131(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATETETHERBOX */ void sub_19796(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATEFLEEZONE */ void sub_20369(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 3, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_SETUP_AI_GROUP */ void sub_20628(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT */ void sub_21158(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 =  /* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ sub_21225( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar4 );
            PRINTNL();
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_21483( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Inserting MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ int sub_21225(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_21483( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is loading: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_21483( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                     /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_21483( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_23014( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being removed: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_21483( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_21483( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ void sub_21483(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_21544( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ int sub_21544(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID is active: {} ###", 1, 513, (uParam1^)[I] );
                if ((uParam1^)[I] == iParam0)
                {
                    DISPLAYF( "The THREADID was already requested by this thread!!!", 0 );
                    DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                    (uParam1^)[I] = nil;
                    Result = I;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The THREADID index was requested by another thread!!! {} ###", 1, 513, I );
                }
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is NOT active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

/* P_STREAMREQ_THREADID_RESET */ void sub_23014(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT */ void sub_24185(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ sub_24239( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_24500( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ int sub_24239(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_24500( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is loading: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_24500( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The WEAPON_TYPE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_24500( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_23014( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being removed: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_24500( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            DISPLAYF( "The WEAPON_TYPE asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_24500( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ void sub_24500(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_21544( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ISEQ_INSERT */ void sub_26152(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 =  /* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ sub_26213( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar12 );
            PRINTNL();
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar4 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
             /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_26463( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

/* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ int sub_26213(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_26463( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is loading: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_26463( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                        DISPLAYF( "The ISEQ asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_26463( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loading: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_26463( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### Re-requesting ISEQ: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_23014( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_23014( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being removed: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_26463( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar5 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_26463( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ISEQ_THREADID_SET_ID */ void sub_26463(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_21544( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_AUDIO_BANK_INSERT */ void sub_29022(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_AUDIO_BANK_IS_INDEX_AVAILABLE */ sub_29075( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing AUDIO_BANK asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
         /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_29330( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_AUDIO_BANK_IS_INDEX_AVAILABLE */ int sub_29075(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_29330( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_29330( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    DISPLAYF( "[CCB] ### The AUDIO_BANK is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The AUDIO_BANK asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_29330( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The AUDIO_BANK is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_23014( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_29330( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            DISPLAYF( "[CCB] ### The AUDIO_BANK is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The AUDIO_BANK is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing AUDIO_BANK: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
             /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_29330( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ void sub_29330(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_21544( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_SCRIPT_STREAM_INSERT */ void sub_30935(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_SCRIPT_STREAM_IS_INDEX_AVAILABLE */ sub_30991( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing SCRIPT_STREAM asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_31255( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_INDEX_AVAILABLE */ int sub_30991(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_31255( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is already loading!!!", 0 );
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_31255( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (Result <= 2)
                {
                    if ((GET_SCRIPT_STREAM_STATE( uParam0, Result )) == 2)
                    {
                        DISPLAYF( "[CCB] ### The SCRIPT_STREAM is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                        DISPLAYF( "The SCRIPT_STREAM asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_31255( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### The SCRIPT_STREAM is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The SCRIPT_STREAM asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                        (uParam1^)[Result]._fU32 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_23014( ref (uParam1^)[Result]._fU36 );
                        return Result;
                    }
                }
                else
                {
                    DISPLAYF( "[CCB] ### The SCRIPT_STREAM is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The SCRIPT_STREAM asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_31255( Result, uParam1, uParam2 );
                    return -1;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_31255( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (Result <= 2)
        {
            if ((GET_SCRIPT_STREAM_STATE( uParam0, iVar6 )) == 2)
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is already loaded: {} ###", 1, 1537, uParam0 );
                DISPLAYF( "The SCRIPT_STREAM asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing SCRIPT_STREAM: {} ###", 1, 1537, uParam0 );
                StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
                (uParam1^)[iVar6]._fU32 = 3;
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_31255( iVar6, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar6;
            }
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The SCRIPT_STREAM - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ void sub_31255(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_21544( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The SCRIPT_STREAM asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_ALL_ASSETS_LOADED */ int sub_33271(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    if ( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_33315( uParam0 ))
    {
        if ( /* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ sub_33715( uParam1 ))
        {
            if ( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_34119( uParam2 ))
            {
                if ( /* F_STREAMREQ_ANIM_DICT_IS_LOADED */ sub_34535( uParam3 ))
                {
                    if ( /* F_STREAMREQ_VEHICLE_RECORDING_IS_LOADED */ sub_34928( uParam4 ))
                    {
                        if ( /* F_STREAMREQ_ACTION_TREE_IS_LOADED */ sub_35350( uParam5 ))
                        {
                            if ( /* F_STREAMREQ_SCRIPT_STREAM_IS_LOADED */ sub_35730( uParam6 ))
                            {
                                if ( /* F_STREAMREQ_AUDIO_BANK_IS_LOADED */ sub_36118( uParam7 ))
                                {
                                    return 1;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return 0;
}

/* F_STREAMREQ_MODELNAMES_IS_LOADED */ int sub_33315(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be requested: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to load: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be removed: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ int sub_33715(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be requested: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to load: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be removed: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ISEQ_IS_LOADED */ int sub_34119(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be requested: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to load: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be removed: {} ###", 1, 1281, ref uVar3 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ANIM_DICT_IS_LOADED */ int sub_34535(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be requested: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to load: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be removed: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_VEHICLE_RECORDING_IS_LOADED */ int sub_34928(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to be requested: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to load: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to be removed: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ACTION_TREE_IS_LOADED */ int sub_35350(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_LOADED */ int sub_35730(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_AUDIO_BANK_IS_LOADED */ int sub_36118(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* P_SETUP_GIOVANNA */ void sub_36724()
{
     /* WRITESCRIPTLOG */ sub_1201( "SP", "P_SETUP_GIOVANNA", 0 );
    if ((((IS_PED_DEAD( g_U2595 )) == 1) AND ((DOES_PED_EXIST( g_U2595 )) == 1)) || ((DOES_PED_EXIST( g_U2595 )) == 0))
    {
         /* CLEANPED */ sub_9762( g_U2595 );
        g_U2595 =  /* CREATEPED */ sub_36846( ref l_U562 );
         /* P_SETUP_GIO_ATTRIBUTES */ sub_37559();
    }
    return;
}

/* CREATEPED */ void sub_36846(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_4190( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_37337( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_37438( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_37337(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_37438(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* P_SETUP_GIO_ATTRIBUTES */ void sub_37559()
{
     /* WRITESCRIPTLOG */ sub_1201( "SP", "P_SETUP_GIO_ATTRIBUTES", 0 );
    if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
    {
        SET_PED_NAME_DEBUG( g_U2595, "piGiovanna" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2595, 1 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( g_U2595, 0 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2595, 1 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U2595, 1 );
        SET_PED_CAN_PUSH_PLAYER( g_U2595, 1 );
        SET_PED_GORE_FROM_PLAYER( g_U2595, 1 );
        SET_PED_GORE_FROM_NPC( g_U2595, 0 );
        SET_PED_CAN_BE_TARGETTED( g_U2595, 0 );
        SET_PED_AS_ONE_SHOT_KILL( g_U2595, 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( g_U2595, 1 );
        SET_BULLET_CAM_PREF( g_U2595, "QUICKCUT_FAILSAFE_01", "QUICKCUT_FAILSAFE_01", "QUICKCUT_FAILSAFE_01", "QUICKCUT_FAILSAFE_01", 1, 0, 0, 0, 0, 0, 0, 0 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0)
        {
            SET_PED_PRIMARY_LOOKAT( g_U2595,  /* PLAYER_PED_ID */ sub_1744() );
            SET_PED_DEFAULT_AIM_AT_PED( g_U2595,  /* PLAYER_PED_ID */ sub_1744() );
        }
    }
    return;
}

/* P_QUICK_SPAWN_PAINT_ENEMIES */ void sub_38000()
{
     /* WRITESCRIPTLOG */ sub_1201( "SP", "P_QUICK_SPAWN_PAINT_ENEMIES", 0 );
    if (l_U620 == 0)
    {
        while (( /* F_SPAWN_PAINT_ENEMIES_WAVE_01 */ sub_38093()) == 0)
        {
            ;
        }
        l_U620 = 1;
    }
    if (l_U621 == 0)
    {
        while (( /* F_SPAWN_PAINT_ENEMIES_WAVE_02 */ sub_39257()) == 0)
        {
            ;
        }
        l_U621 = 1;
    }
    if (l_U622 == 0)
    {
        while (( /* F_SPAWN_PAINT_ENEMIES_WAVE_03 */ sub_39989()) == 0)
        {
            ;
        }
        l_U622 = 1;
    }
    return;
}

/* F_SPAWN_PAINT_ENEMIES_WAVE_01 */ int sub_38093()
{
    int iVar2;
    char[32] cVar3;

    iVar2 = l_U485;
     /* CLEANPED */ sub_9762( l_U481[iVar2] );
    l_U481[iVar2] =  /* CREATEPED */ sub_36846( ref l_U441[iVar2] );
     /* P_QUICK_ADD_PED_TO_GROUP */ sub_38191( l_U481[iVar2], ref l_U306 );
     /* P_TETHERPED */ sub_5963( ref l_U297, l_U481[iVar2], 3 );
     /* P_FLEEZONEADDPED */ sub_38605( ref l_U303, l_U481[iVar2], 5 );
     /* P_FLEEZONEADDPED */ sub_38605( ref l_U304, l_U481[iVar2], 5 );
     /* P_FLEEZONEADDPED */ sub_38605( ref l_U305, l_U481[iVar2], 5 );
    if (((IS_PED_DEAD( l_U481[iVar2] )) == 0) AND ((DOES_PED_EXIST( l_U481[iVar2] )) == 1))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U481[iVar2], ref g_U1808 );
        SET_PED_VISIBLE( l_U481[iVar2], 0 );
        FREEZE_PED_POSITION( l_U481[iVar2], 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U481[iVar2], 1 );
        SET_PED_AS_ONE_SHOT_KILL( l_U481[iVar2], 1 );
        SET_PED_COMBAT_RANGE_MIN( l_U481[iVar2], 5.00000000 );
        SET_PED_COMBAT_RANGE_MAX( l_U481[iVar2], 10.00000000 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( l_U481[iVar2], 0 );
        SET_PED_PATH_CAN_USE_CLIMBOVERS( l_U481[iVar2], 0 );
        if (iVar2 == 0)
        {
            SET_PED_AI_TEMPLATE( l_U481[iVar2], ref g_U2088 );
             /* F_GIVEPEDWEAPON */ sub_14211( l_U481[iVar2], g_U2855, 25000, 0, 0 );
        }
        else if (iVar2 == 1)
        {
            SET_PED_AI_TEMPLATE( l_U481[iVar2], ref g_U2088 );
             /* F_GIVEPEDWEAPON */ sub_14211( l_U481[iVar2], g_U2857, 25000, 0, 0 );
             /* F_GIVEPEDWEAPONTOHOLSTER */ sub_13460( l_U481[iVar2], g_U2854, 0, 25000, 0 );
        }
        else if (iVar2 == 2)
        {
            SET_PED_AI_TEMPLATE( l_U481[iVar2], ref g_U2088 );
             /* F_GIVEPEDWEAPON */ sub_14211( l_U481[iVar2], g_U2854, 25000, 0, 0 );
        };;;
        StrCopy( ref cVar3, "PaintEnemiesWave01 ", 32 );
        ConcatString(ref cVar3, " ", 32);
        ConcatString(ref cVar3, iVar2, 32);
        SET_PED_NAME_DEBUG( l_U481[iVar2], ref cVar3 );
        l_U485++;
    }
    if (l_U485 == 3)
    {
        return 1;
    }
    return 0;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_38191(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_4307( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_20628( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_20628( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* P_FLEEZONEADDPED */ void sub_38605(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_FLEEZONE_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_FLEEZONE_OPTION( uParam1, uParam2 );
    }
    return;
}

/* F_SPAWN_PAINT_ENEMIES_WAVE_02 */ int sub_39257()
{
    int iVar2;
    char[32] cVar3;

    iVar2 = l_U530;
     /* CLEANPED */ sub_9762( l_U526[iVar2] );
    l_U526[iVar2] =  /* CREATEPED */ sub_36846( ref l_U486[iVar2] );
     /* P_QUICK_ADD_PED_TO_GROUP */ sub_38191( l_U526[iVar2], ref l_U306 );
     /* P_TETHERPED */ sub_5963( ref l_U297, l_U526[iVar2], 3 );
     /* P_FLEEZONEADDPED */ sub_38605( ref l_U303, l_U526[iVar2], 5 );
     /* P_FLEEZONEADDPED */ sub_38605( ref l_U304, l_U526[iVar2], 5 );
     /* P_FLEEZONEADDPED */ sub_38605( ref l_U305, l_U526[iVar2], 5 );
    if (((IS_PED_DEAD( l_U526[iVar2] )) == 0) AND ((DOES_PED_EXIST( l_U526[iVar2] )) == 1))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U526[iVar2], ref g_U1816 );
        SET_PED_VISIBLE( l_U526[iVar2], 0 );
        FREEZE_PED_POSITION( l_U526[iVar2], 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U526[iVar2], 1 );
        SET_PED_AS_ONE_SHOT_KILL( l_U526[iVar2], 1 );
        SET_PED_COMBAT_RANGE_MIN( l_U526[iVar2], 5.00000000 );
        SET_PED_COMBAT_RANGE_MAX( l_U526[iVar2], 10.00000000 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( l_U526[iVar2], 0 );
        SET_PED_PATH_CAN_USE_CLIMBOVERS( l_U526[iVar2], 0 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U526[iVar2], 1 );
        SET_PED_CAN_PUSH_PLAYER( l_U526[iVar2], 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( l_U526[iVar2], 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        if (iVar2 == 0)
        {
            SET_PED_AI_TEMPLATE( l_U526[iVar2], ref g_U2088 );
             /* F_GIVEPEDWEAPON */ sub_14211( l_U526[iVar2], g_U2855, 25000, 0, 0 );
        }
        else if (iVar2 == 1)
        {
            SET_PED_AI_TEMPLATE( l_U526[iVar2], ref g_U2088 );
             /* F_GIVEPEDWEAPON */ sub_14211( l_U526[iVar2], g_U2854, 25000, 0, 0 );
        }
        else if (iVar2 == 2)
        {
            SET_PED_AI_TEMPLATE( l_U526[iVar2], ref g_U2088 );
             /* F_GIVEPEDWEAPON */ sub_14211( l_U526[iVar2], g_U2855, 25000, 0, 0 );
        };;;
        StrCopy( ref cVar3, "PaintEnemiesWave02 ", 32 );
        ConcatString(ref cVar3, " ", 32);
        ConcatString(ref cVar3, iVar2, 32);
        SET_PED_NAME_DEBUG( l_U526[iVar2], ref cVar3 );
        l_U530++;
    }
    if (l_U530 == 3)
    {
        return 1;
    }
    return 0;
}

/* F_SPAWN_PAINT_ENEMIES_WAVE_03 */ int sub_39989()
{
    int iVar2;
    char[32] cVar3;

    iVar2 = l_U561;
     /* CLEANPED */ sub_9762( l_U558[iVar2] );
    l_U558[iVar2] =  /* CREATEPED */ sub_36846( ref l_U531[iVar2] );
     /* P_QUICK_ADD_PED_TO_GROUP */ sub_38191( l_U558[iVar2], ref l_U306 );
     /* P_TETHERPED */ sub_5963( ref l_U297, l_U558[iVar2], 3 );
     /* P_FLEEZONEADDPED */ sub_38605( ref l_U303, l_U558[iVar2], 5 );
     /* P_FLEEZONEADDPED */ sub_38605( ref l_U304, l_U558[iVar2], 5 );
     /* P_FLEEZONEADDPED */ sub_38605( ref l_U305, l_U558[iVar2], 5 );
    if (((IS_PED_DEAD( l_U558[iVar2] )) == 0) AND ((DOES_PED_EXIST( l_U558[iVar2] )) == 1))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U558[iVar2], ref g_U1816 );
        SET_PED_VISIBLE( l_U558[iVar2], 0 );
        FREEZE_PED_POSITION( l_U558[iVar2], 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U558[iVar2], 1 );
        SET_PED_AS_ONE_SHOT_KILL( l_U558[iVar2], 1 );
        SET_PED_COMBAT_RANGE_MIN( l_U558[iVar2], 5.00000000 );
        SET_PED_COMBAT_RANGE_MAX( l_U558[iVar2], 10.00000000 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( l_U558[iVar2], 0 );
        SET_PED_PATH_CAN_USE_CLIMBOVERS( l_U558[iVar2], 0 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U558[iVar2], 1 );
        SET_PED_CAN_PUSH_PLAYER( l_U558[iVar2], 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( l_U558[iVar2], 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        if (iVar2 == 0)
        {
            SET_PED_AI_TEMPLATE( l_U558[iVar2], ref g_U2088 );
             /* F_GIVEPEDWEAPON */ sub_14211( l_U558[iVar2], g_U2855, 25000, 0, 0 );
        }
        else if (iVar2 == 1)
        {
            SET_PED_AI_TEMPLATE( l_U558[iVar2], ref g_U2088 );
             /* F_GIVEPEDWEAPON */ sub_14211( l_U558[iVar2], g_U2857, 25000, 0, 0 );
        }
        StrCopy( ref cVar3, "PaintEnemiesWave03 ", 32 );
        ConcatString(ref cVar3, " ", 32);
        ConcatString(ref cVar3, iVar2, 32);
        SET_PED_NAME_DEBUG( l_U558[iVar2], ref cVar3 );
        l_U561++;
    }
    if (l_U561 == 2)
    {
        return 1;
    }
    return 0;
}

/* P_CREATE_PAINTROOM_OBJECTS */ void sub_40658()
{
     /* WRITESCRIPTLOG */ sub_1201( "SP", "P_CREATE_PAINTROOM_OBJECTS", 0 );
     /* P_CREATE_PAINTROOM_OBJECTS_01 */ sub_40737();
     /* P_CREATE_PAINTROOM_OBJECTS_02 */ sub_41112();
     /* P_CREATE_FORKLIFT */ sub_42768();
     /* P_CREATE_S_BUS_GG_M4_03 */ sub_43056();
    return;
}

/* P_CREATE_PAINTROOM_OBJECTS_01 */ void sub_40737()
{
     /* WRITESCRIPTLOG */ sub_1201( "SP", "P_CREATE_PAINTROOM_OBJECTS_01", 0 );
    if ((DOES_OBJECT_EXIST( l_U734 )) == 0)
    {
         /* P_CREATE_MPM_CHAIN */ sub_40841();
    }
     /* CLEANOBJECT */ sub_9898( g_U2626 );
    g_U2626 =  /* CREATEOBJECTNOOFFSET */ sub_4057( g_U2112, -58.65000000, -18.04200000, 2.71200000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( g_U2626 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2626, ref g_U1808 );
    }
    return;
}

/* P_CREATE_MPM_CHAIN */ void sub_40841()
{
     /* WRITESCRIPTLOG */ sub_1201( "SP", "P_CREATE_MPM_CHAIN", 0 );
     /* CLEANOBJECT */ sub_9898( l_U734 );
    l_U734 =  /* CREATEOBJECTNOOFFSET */ sub_4057( g_U2110, l_U735, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );
    if ((DOES_OBJECT_EXIST( l_U734 )) == 1)
    {
        FREEZE_OBJECT_POSITION( l_U734, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U734, ref g_U1808 );
    }
    return;
}

/* P_CREATE_PAINTROOM_OBJECTS_02 */ void sub_41112()
{
     /* WRITESCRIPTLOG */ sub_1201( "SP", "P_CREATE_PAINTROOM_OBJECTS_02", 0 );
     /* CLEANOBJECT */ sub_9898( l_U579 );
    l_U579 =  /* CREATEOBJECTNOOFFSET */ sub_4057( g_U2111, -58.47100000, -23.87200000, 1.30000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( l_U579 )) == 1)
    {
        FREEZE_OBJECT_POSITION( l_U579, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U579, ref g_U1808 );
    }
     /* CLEANOBJECT */ sub_9898( l_U580 );
    l_U580 =  /* CREATEOBJECTNOOFFSET */ sub_4057( g_U2117, l_U581, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( l_U580 )) == 1)
    {
        FREEZE_OBJECT_POSITION( l_U580, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U580, ref g_U1808 );
    }
     /* P_CREATEPOISTRUCTOBJECT */ sub_41443( ref l_U624, 1, -58.42500000, -23.87500000, 1.30000000, l_U579, 1, 0, 1.50000000, 3.00000000, 0, 0 );
     /* P_SET_INTERACTIVE_TEXT */ sub_42555( ref l_U624, 30, "POI_BUSPAINT" );
    return;
}

/* P_CREATEPOISTRUCTOBJECT */ void sub_41443(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;

     /* P_CREATEBLANKPOISTRUCT */ sub_41484( iParam0, uParam10 );
    if ((DOES_OBJECT_EXIST( uParam5 )) == 1)
    {
        uVar14 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( uParam5 )};
        iParam0->_fU4 = uParam1;
        iParam0->_fU308 = uParam7;
        if (iParam0->_fU308 == 0)
        {
            iParam0->_fU100 = {uVar14};
            iParam0->_fU200 = {uVar14};
        }
        iParam0->_fU112 = uParam8;
        iParam0->_fU212 = uParam9;
        iParam0->_fU300 = uParam6;
        iParam0->_fU312 = uParam5;
        iParam0->_fU320 = uParam11;
        iParam0->_fU20 = {uParam2};
         /* P_CREATEPOIGLINT */ sub_41948( iParam0 );
    }
    else
    {
        SCRIPT_ASSERT( "[SP]### WARNING!!! (P_CreateObjectPOIStruct): Object doesn't exist! ###", 0 );
    }
    return;
}

/* P_CREATEBLANKPOISTRUCT */ void sub_41484(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

/* P_CREATEPOIGLINT */ void sub_41948(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
     /* P_INITPOIGLINT */ sub_42046( iParam0 );
    return;
}

/* P_INITPOIGLINT */ void sub_42046(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                 /* P_ENABLEPOIGLINT */ sub_42122( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                 /* P_ENABLEPOIGLINT */ sub_42122( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                 /* P_ENABLEPOIGLINT */ sub_42122( iParam0, 1 );
            }
            else
            {
                 /* P_ENABLEPOIGLINT */ sub_42122( iParam0, 0 );
            };;;
        }
        else
        {
             /* P_ENABLEPOIGLINT */ sub_42122( iParam0, 0 );
        }
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_42122( iParam0, 0 );
    }
    return;
}

/* P_ENABLEPOIGLINT */ void sub_42122(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

/* P_SET_INTERACTIVE_TEXT */ void sub_42555(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
     /* P_INITINTERACTIVETEXT */ sub_42611( iParam0 );
    return;
}

/* P_INITINTERACTIVETEXT */ void sub_42611(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

/* P_CREATE_FORKLIFT */ void sub_42768()
{
     /* WRITESCRIPTLOG */ sub_1201( "SP", "P_CREATE_FORKLIFT", 0 );
     /* CLEANOBJECT */ sub_9898( l_U588 );
    l_U588 =  /* CREATEOBJECTNOOFFSET */ sub_4057( g_U2123, g_U2630, g_U2633, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U588 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U588, ref g_U1808 );
        SET_OBJECT_PROOFS( l_U588, 1, 0, 0, 1, 1 );
    }
     /* CLEANOBJECT */ sub_9898( l_U589 );
    l_U589 =  /* CREATEOBJECTNOOFFSET */ sub_4057( g_U2124, g_U2630, g_U2633, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U589 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U589, ref g_U1808 );
        SET_OBJECT_PROOFS( l_U589, 1, 1, 1, 1, 1 );
        CAMERA_CAN_TARGET_OBJECT( 1, l_U589 );
        SET_OBJECT_TARGETTABLE( l_U589, 1 );
        SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( l_U589, 1 );
    }
    return;
}

/* P_CREATE_S_BUS_GG_M4_03 */ void sub_43056()
{
     /* WRITESCRIPTLOG */ sub_1201( "CO", "P_CREATE_S_BUS_GG_M4_03", 0 );
     /* P_CREATECOLLECTIBLESTRUCT */ sub_43193( ref g_U739, g_U762, -1569399164, 390675167, -38.85000000, -25.01000000, 0.02000000, 1.50000000, 0.00000000, 5.00000000, "Room_Paint" );
     /* P_CREATECOLLECTIBLE */ sub_43350( ref g_U739 );
    return;
}

/* P_CREATECOLLECTIBLESTRUCT */ void sub_43193(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_1201( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* P_CREATECOLLECTIBLE */ void sub_43350(int iParam0)
{
     /* WRITESCRIPTLOG */ sub_1201( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_43433( iParam0->_fU12 )) == 1)
        {
             /* WRITESCRIPTLOG */ sub_1201( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_1201( "CO", "has never been collected.", 0 );
        }
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_43433( iParam0->_fU12 )) == 0)
        {
             /* CLEANPLACEMENT */ sub_10123( iParam0->_fU0 );
            iParam0->_fU0 =  /* CREATEPLACEMENT */ sub_43703( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                     /* WRITESCRIPTLOG */ sub_1201( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_1201( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ int sub_43433(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

/* CREATEPLACEMENT */ void sub_43703(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a placement to exist: {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return Result;
}

/* HAS_SAVEFILE_LOADED */ int sub_44075(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_1201( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_11763( uParam0,  /* PLAYER_PED_ID */ sub_1744() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* F_HANDLE_SPAWN_CUTSCENE_ENEMIES */ int sub_44644()
{
    int iVar2;

     /* WRITESCRIPTLOG */ sub_1201( "SP", "F_HANDLE_SPAWN_CUTSCENE_ENEMIES", 0 );
    iVar2 = l_U440;
     /* CLEANPED */ sub_9762( l_U430[iVar2] );
    l_U430[iVar2] =  /* CREATEPED */ sub_36846( ref l_U312[iVar2] );
    if (((IS_PED_DEAD( l_U430[iVar2] )) == 0) AND ((DOES_PED_EXIST( l_U430[iVar2] )) == 1))
    {
        SET_PED_VISIBLE( l_U430[iVar2], 0 );
        SET_PED_PROOFS( l_U430[iVar2], 1, 1, 1, 1, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U430[iVar2], 1 );
        FREEZE_PED_POSITION( l_U430[iVar2], 1 );
        SET_PED_FREEZE_PROCESSING( l_U430[iVar2], 1 );
        if (iVar2 < 3)
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U430[iVar2], ref g_U1808 );
        }
        if (iVar2 == 0)
        {
             /* F_GIVEPEDWEAPON */ sub_14211( l_U430[0], g_U2857, 25000, 0, 0 );
        }
        else if (iVar2 == 1)
        {
             /* F_GIVEPEDWEAPON */ sub_14211( l_U430[1], g_U2857, 25000, 0, 0 );
        }
        else if (iVar2 == 2)
        {
             /* F_GIVEPEDWEAPON */ sub_14211( l_U430[2], g_U2857, 25000, 0, 0 );
        }
        else if (iVar2 == 3)
        {
             /* F_GIVEPEDWEAPON */ sub_14211( l_U430[3], g_U2854, 25000, 0, 0 );
        }
        else if (iVar2 == 4)
        {
             /* F_GIVEPEDWEAPON */ sub_14211( l_U430[4], g_U2854, 25000, 0, 0 );
        }
        else if (iVar2 == 5)
        {
             /* F_GIVEPEDWEAPON */ sub_14211( l_U430[5], g_U2857, 25000, 0, 0 );
        }
        else if (iVar2 == 6)
        {
             /* F_GIVEPEDWEAPON */ sub_14211( l_U430[6], g_U2857, 25000, 0, 0 );
        }
        else if (iVar2 == 7)
        {
             /* F_GIVEPEDWEAPON */ sub_14211( l_U430[7], g_U2857, 25000, 0, 0 );
        }
        else if (iVar2 == 8)
        {
             /* F_GIVEPEDWEAPON */ sub_14211( l_U430[8], g_U2857, 25000, 0, 0 );
        };;;;;;;;;
        l_U440++;
    }
    if (iVar2 == 8)
    {
        return 1;
    }
    return 0;
}

/* F_HANDLE_FIRE_ESCAPE_CUTSCENE */ int sub_45486()
{
    unknown uVar2;
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int I;

    switch (l_U70)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eFireEscapeCutsceneState = CUTSCENE_SETUP", 0 );
        if (((CUTSCENE_NAMED_IS_LOADING( "10_02_bus_concat" )) == 0) AND ((CUTSCENE_IS_LOADED( "10_02_bus_concat" )) == 0))
        {
            PRE_STREAM_SEAMLESS_CUTSCENE( "10_02_bus_concat" );
        }
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_21158( g_U2110, ref g_U910 );
         /* P_STREAMREQ_ISEQ_INSERT */ sub_26152( -1113582755, ref g_U1272 );
        l_U70 = 2;
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eFireEscapeCutsceneState = CUTSCENE_LOADING", 0 );
        break;
        case 2:
        if ((( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_34119( ref g_U1272 )) == 1) AND ((( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_33315( ref g_U910 )) == 1) AND ((CUTSCENE_IS_LOADED( "10_02_bus_concat" )) == 1)))
        {
             /* P_CREATE_MPM_CHAIN */ sub_40841();
            l_U70 = 3;
             /* WRITESCRIPTLOG */ sub_1201( "SP", "eFireEscapeCutsceneState = CUTSCENE_START", 0 );
        }
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eFireEscapeCutsceneState = CUTSCENE_START", 0 );
        CAMERA_CLEAR_POINT_AT_TARGET();
         /* NIS_PRE_SETUP */ sub_7367( 1, 0, 0, 0 );
        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1782() )) == 0))
        {
            CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_1744(), l_U792, l_U795 );
            iVar3 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_46088();
            if ((GET_DOES_WEAPON_EXIST( iVar3 )) == 1)
            {
                CUTSCENE_REGISTER_PED_WEAPON_HAND(  /* PLAYER_PED_ID */ sub_1744(), iVar3, 0 );
                REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( iVar3, "W_PI_PT92_Aa_H", 0 );
            }
        }
        if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2595, "Giov_Bus", 0 );
            CUTSCENE_REGISTER_PED_TELEPORT( g_U2595, -49.84706000, -37.59435000, 4.97235300, 90.00000000 );
        }
        for ( I = 0; I < l_U430; I++ )
        {
            if (((IS_PED_DEAD( l_U430[I] )) == 0) AND ((DOES_PED_EXIST( l_U430[I] )) == 1))
            {
                SET_PED_VISIBLE( l_U430[I], 1 );
                SET_PED_PROOFS( l_U430[I], 0, 0, 0, 0, 0 );
                FREEZE_PED_POSITION( l_U430[I], 0 );
                SET_PED_FREEZE_PROCESSING( l_U430[I], 0 );
            }
        }
        if (((IS_PED_DEAD( l_U430[0] )) == 0) AND ((DOES_PED_EXIST( l_U430[0] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U430[0], "M_Crac_Sold_JY", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U430[0], 0, 0 ), "W_AR_FAL_Aa_H^1", 0 );
        }
        if (((IS_PED_DEAD( l_U430[1] )) == 0) AND ((DOES_PED_EXIST( l_U430[1] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U430[1], "M_Crac_Sold_JY^1", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U430[1], 0, 0 ), "W_AR_FAL_Aa_H", 0 );
        }
        if (((IS_PED_DEAD( l_U430[2] )) == 0) AND ((DOES_PED_EXIST( l_U430[2] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U430[2], "M_Crac_Sold_JY^2", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U430[2], 0, 0 ), "W_AR_FAL_Aa_H^2", 0 );
        }
        if (((IS_PED_DEAD( l_U430[3] )) == 0) AND ((DOES_PED_EXIST( l_U430[3] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U430[3], "M_Crac_Sold_JY^3", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U430[3], 0, 0 ), "W_PI_PT92_Aa_H^1", 0 );
        }
        if (((IS_PED_DEAD( l_U430[4] )) == 0) AND ((DOES_PED_EXIST( l_U430[4] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U430[4], "M_Crac_Sold_JY^4", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U430[4], 0, 0 ), "W_PI_PT92_Aa_H^2", 0 );
        }
        if (((IS_PED_DEAD( l_U430[5] )) == 0) AND ((DOES_PED_EXIST( l_U430[5] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U430[5], "M_Crac_Sold_JY^5", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U430[5], 0, 0 ), "W_AR_FAL_Aa_H^5", 0 );
        }
        if (((IS_PED_DEAD( l_U430[6] )) == 0) AND ((DOES_PED_EXIST( l_U430[6] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U430[6], "M_Crac_Sold_JY^6", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U430[6], 0, 0 ), "W_AR_FAL_Aa_H^6", 0 );
        }
        if (((IS_PED_DEAD( l_U430[7] )) == 0) AND ((DOES_PED_EXIST( l_U430[7] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U430[7], "M_Crac_Sold_JY^7", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U430[7], 0, 0 ), "W_AR_FAL_Aa_H^4", 0 );
        }
        if (((IS_PED_DEAD( l_U430[8] )) == 0) AND ((DOES_PED_EXIST( l_U430[8] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U430[8], "M_Crac_Sold_JY^8", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U430[8], 0, 0 ), "W_AR_FAL_Aa_H^3", 0 );
        }
        REGISTER_HIDE_ENTITY_AT_POSITION( g_U2190._fU0, g_U2190._fU4 );
        REGISTER_HIDE_ENTITY_AT_POSITION( g_U2183._fU0, g_U2183._fU4 );
        ISEQ_REGISTER_ENTITY( -1113582755, "player",  /* PLAYER_PED_ID */ sub_1744(), 0 );
        ISEQ_REGISTER_ENTITY( -1113582755, "gio", g_U2595, 0 );
        ISEQ_REGISTER_ENTITY( -1113582755, "bus_mpm_chain", l_U734, 1 );
        CUTSCENE_REGISTER_ISEQ( -1113582755 );
        CUTSCENE_ENABLE_SKIP( 0 );
        START_SEAMLESS_CUTSCENE();
        l_U70 = 4;
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eFireEscapeCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eFireEscapeCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
         /* P_PLAYER_HOLSTER_WEAPONS */ sub_48198( ref l_U590, 1, 1 );
        iVar3 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_46088();
        if ((GET_DOES_WEAPON_EXIST( iVar3 )) == 1)
        {
            SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1744(), iVar3, 0, 1 );
            if (iVar3 == (GET_WEAPON_FROM_SLOT(  /* PLAYER_PED_ID */ sub_1744(), 0 )))
            {
                SET_WEAPON_SLOT(  /* PLAYER_PED_ID */ sub_1744(), iVar3, 1 );
            }
        }
        uVar4 =  /* F_GET_TWO_HANDED_WEAPON_FROM_PLAYER */ sub_49420();
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
             /* P_SETUP_WEAPON_AS_PICKUP_NEAR_COVER */ sub_49603( uVar4 );
        }
        REMOVE_ALL_ENVIRONMENT_BLOOD_AT_COORD( -59.92599000, -53.47547000, 0.27182000, 30.00000000 );
         /* CLEANOBJECT */ sub_9898( g_U2604 );
        l_U70 = 5;
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eFireEscapeCutsceneState = CUTSCENE_PLAYING", 0 );
        break;
        case 5:
        if (HAS_CUTSCENE_FINISHED() == 1)
        {
            if (l_U617 == 1)
            {
                 /* WRITESCRIPTLOG */ sub_1201( "SP", "Cutscene was Skipped!!!", 0 );
                 /* TELEPORTPED */ sub_50097(  /* PLAYER_PED_ID */ sub_1744(), g_U2339[4], g_U2466[4] );
                if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1782() )) == 0))
                {
                    FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_1744(), 1 );
                }
                uVar6 = GET_HASH_KEY( ref g_U1816 );
                uVar7 = GET_INTERIOR_FROM_NAME( ref g_U1864, 0 );
                SET_INTERIOR_ACTIVE( uVar7, 1, 0 );
                LOAD_SCENE_FOR_ROOM_BY_KEY( uVar7, uVar6 );
                uVar6 = GET_HASH_KEY( ref g_U1808 );
                uVar7 = GET_INTERIOR_FROM_NAME( ref g_U1856, 0 );
                SET_INTERIOR_ACTIVE( uVar7, 1, 0 );
                LOAD_SCENE_FOR_ROOM_BY_KEY( uVar7, uVar6 );
                if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1782() )) == 0))
                {
                    FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_1744(), 0 );
                }
                 /* P_QUICK_SPAWN_PAINT_ENEMIES */ sub_38000();
                 /* P_CREATE_PAINTROOM_OBJECTS */ sub_40658();
            }
             /* NIS_CREATE_STATIC_CAM */ sub_50396( ref l_U750, l_U781, l_U784, l_U787, l_U788 );
             /* NIS_PLAY_STATIC_CAMERA */ sub_50631( ref l_U750 );
            if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1782() )) == 0))
            {
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1744(), 0 );
            }
             /* CLEANPEDARRAY */ sub_9712( ref l_U430 );
            l_U70 = 0;
             /* WRITESCRIPTLOG */ sub_1201( "SP", "eFireEscapeCutsceneState = CUTSCENE_IDLE", 0 );
            return 1;
        }
        else
        {
            uVar8 = GET_CUTSCENE_SECTION_PLAYING();
            iVar9 = GET_CUTSCENE_TIME();
            iVar10 = GET_CUTSCENE_TIME_MS();
            PRINTSTRING( "[SP] SECTION: " );
            PRINTINT( uVar8 );
            PRINTSTRING( " Time: " );
            PRINTINT( iVar9 );
            PRINTSTRING( " Time MS: " );
            PRINTINT( iVar10 );
            PRINTNL();
            if (l_U617 == 0)
            {
                if ((IS_SCREEN_FADED_OUT() == 1) || (IS_SCREEN_FADING_OUT() == 1))
                {
                     /* WRITESCRIPTLOG */ sub_1201( "SP", "Cutscene was Skipped!!!", 0 );
                    CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
                    l_U617 = 1;
                }
            }
            if (l_U983 == 0)
            {
                if (iVar10 >= 68000)
                {
                    AUDIO_MUSIC_REQUEST_ONESHOT( "BUSDEPOT_ONESHOT_07", 0 );
                    l_U983 = 1;
                }
            }
            if (l_U984 == 0)
            {
                if (iVar10 >= 72200)
                {
                    AUDIO_MUSIC_PLAY_ONESHOT();
                    l_U984 = 1;
                }
            }
            if (l_U618 == 0)
            {
                if (iVar9 > 73)
                {
                    AUDIO_MUSIC_FORCE_TRACK( "BUSDEPOT_ACTION_SONG_03", "BUSDEPOT_03_2_4", "", 0.00000000, 15000, 5000, -1082130432, 0 );
                    l_U618 = 1;
                }
            }
            if (l_U619 == 0)
            {
                if (iVar9 > 79)
                {
                     /* P_CREATE_PAINTROOM_OBJECTS */ sub_40658();
                    l_U619 = 1;
                }
            }
            if (l_U619 == 1)
            {
                if ((l_U622 == 0) AND ((l_U621 == 1) AND (l_U620 == 1)))
                {
                    if (( /* F_SPAWN_PAINT_ENEMIES_WAVE_03 */ sub_39989()) == 1)
                    {
                        l_U622 = 1;
                    }
                }
                if ((l_U621 == 0) AND (l_U620 == 1))
                {
                    if (( /* F_SPAWN_PAINT_ENEMIES_WAVE_02 */ sub_39257()) == 1)
                    {
                        l_U621 = 1;
                    }
                }
                if (l_U620 == 0)
                {
                    if (( /* F_SPAWN_PAINT_ENEMIES_WAVE_01 */ sub_38093()) == 1)
                    {
                        if (((IS_PED_DEAD( l_U481[0] )) == 0) AND ((DOES_PED_EXIST( l_U481[0] )) == 1))
                        {
                            CUTSCENE_REGISTER_PED_TELEPORT( l_U481[0], l_U738, l_U741 );
                            ISEQ_REGISTER_ENTITY( -145301993, "bus_gmed_a1_pstl", l_U481[0], 0 );
                        }
                        if (((IS_PED_DEAD( l_U481[1] )) == 0) AND ((DOES_PED_EXIST( l_U481[1] )) == 1))
                        {
                            CUTSCENE_REGISTER_PED_TELEPORT( l_U481[1], l_U742, l_U745 );
                            ISEQ_REGISTER_ENTITY( -145301993, "bus_gmed_b1_rifle", l_U481[1], 0 );
                        }
                        if (((IS_PED_DEAD( l_U481[2] )) == 0) AND ((DOES_PED_EXIST( l_U481[2] )) == 1))
                        {
                            CUTSCENE_REGISTER_PED_TELEPORT( l_U481[2], l_U746, l_U749 );
                            ISEQ_REGISTER_ENTITY( -145301993, "bus_gmed_c1_pstl", l_U481[2], 0 );
                        }
                        CUTSCENE_REGISTER_ISEQ( -145301993 );
                        l_U620 = 1;
                    }
                }
            }
        }
        break;
    }
    return 0;
}

/* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ int sub_46088()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1744(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_46192( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1744(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1744(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1744(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

/* IS_WEAPON_SINGLE_HANDED */ int sub_46192(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* P_PLAYER_HOLSTER_WEAPONS */ void sub_48198(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

     /* RESET_WEAPON_CONFIG */ sub_48237( iParam0 );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1744(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_46192( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if (( /* IS_WEAPON_TWO_HANDED */ sub_48482( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1744(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1744(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1744(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1744(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1744(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1744(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1744(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1744(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1744(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if (( /* IS_WEAPON_TWO_HANDED */ sub_48482( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1744(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1744(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1744(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

/* RESET_WEAPON_CONFIG */ void sub_48237(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

/* IS_WEAPON_TWO_HANDED */ int sub_48482(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* F_GET_TWO_HANDED_WEAPON_FROM_PLAYER */ int sub_49420()
{
    unknown Result;
    unknown uVar3;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1744(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if (( /* IS_WEAPON_TWO_HANDED */ sub_48482( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1744(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
    }
    return 0;
}

/* P_SETUP_WEAPON_AS_PICKUP_NEAR_COVER */ void sub_49603(unknown uParam0)
{
    vector vVar3;
    vector vVar6;
    unknown uVar9;

     /* WRITESCRIPTLOG */ sub_1201( "SP", "P_SETUP_WEAPON_AS_PICKUP_NEAR_COVER", 0 );
    vVar3 = {-51.23000000, -31.92000000, 0.04000000};
    vVar6 = {90.00000000, 0.00000000, 70.00000000};
    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
         /* CLEANPLACEMENT */ sub_10123( l_U608 );
        l_U608 =  /* CREATEPLACEMENT */ sub_43703( GET_PICKUP_TYPE_FROM_WEAPON_TYPE( GET_WEAPON_TYPE( uParam0 ) ), vVar3, vVar6, 1, 0, 0, 1119092736 );
        if ((DOES_PLACEMENT_EXIST( l_U608 )) == 1)
        {
            ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U608, ref g_U1808 );
            uVar9 = GET_PICKUP_FROM_PLACEMENT( l_U608 );
            if ((DOES_PICKUP_EXIST( uVar9 )) == 1)
            {
                SET_PICKUP_WEAPON_DATA_FROM_WEAPON( uVar9, uParam0 );
            }
        }
        REMOVE_PED_WEAPON(  /* PLAYER_PED_ID */ sub_1744(), uParam0 );
    }
    return;
}

/* TELEPORTPED */ void sub_50097(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* NIS_CREATE_STATIC_CAM */ void sub_50396(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_8150( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref l_U52, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* NIS_PLAY_STATIC_CAMERA */ void sub_50631(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_8300( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

/* P_START_SP_CHALLENGES */ void sub_52895()
{
     /* WRITESCRIPTLOG */ sub_1201( "CCB", "P_START_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_1201( "CCB", "Starting the Bus_Depot_Garage_Paint context...", 0 );
    START_CONTEXT( "Bus_Depot_Garage_Paint" );
     /* WRITESCRIPTLOG */ sub_1201( "CCB", "Starting the Bus_Depot_Garage_Paint_MPM context...", 0 );
    START_CONTEXT( "Bus_Depot_Garage_Paint_MPM" );
    return;
}

/* P_STREAMREQ_SCRIPT_STREAM_PLAY_FRONTEND */ void sub_53359(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if ( /* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ sub_10272( uParam0, uParam1 ))
    {
        iVar4 =  /* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ sub_10481( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            DISPLAYF( "[CCB]### Playing the SCRIPT_STREAM: {} ###", 1, 1281, ref (uParam1^)[iVar4]._fU0 );
            PLAY_SCRIPT_STREAM_FRONTEND( iVar4 );
        }
        else
        {
            DISPLAYF( "[CCB]### The SCRIPT_STREAM slot is NOT valid!!! {} ###", 1, 1537, uParam0 );
            SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        DISPLAYF( "[CCB]### The SCRIPT_STREAM asset is NOT loaded!!! {} ###", 1, 1537, uParam0 );
        SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_54200(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_1201( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_1201( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_14985( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_54491( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_54968( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_54968( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_55228( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_54968( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_55228( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_55228( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_54968( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_55228( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_55228( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_55228( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_54968( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_55228( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_55228( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_55228( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_55228( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_56808( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_1201( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_54491(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_12044( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_1201( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_1201( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_54968(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_55228(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_56808(int iParam0)
{
     /* WRITE_STRING */ sub_4307( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_56896( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_56973( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_56973( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_56973( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_57142( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_57142( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_57142( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_57142( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_57142( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_57142( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_57142( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_57142( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_57142( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_57142( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_57142( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_56973( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_57142( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_57142( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_57142( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_56973( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_57843( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_57142( iParam0->_fU52 );
     /* WRITE_STRING */ sub_4307( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_57142( iParam0->_fU96 );
     /* WRITE_STRING */ sub_4307( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_57142( iParam0->_fU100 );
     /* WRITE_STRING */ sub_4307( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_57142( iParam0->_fU104 );
     /* WRITE_STRING */ sub_4307( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_57142( iParam0->_fU108 );
     /* WRITE_STRING */ sub_4307( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_57142( iParam0->_fU112 );
     /* WRITE_STRING */ sub_4307( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_57142( iParam0->_fU116 );
     /* WRITE_STRING */ sub_4307( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_57142( iParam0->_fU120 );
     /* WRITE_STRING */ sub_4307( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_57142( iParam0->_fU124 );
     /* WRITE_STRING */ sub_4307( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_57142( iParam0->_fU128 );
     /* WRITE_STRING */ sub_4307( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_57142( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_57142( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_57142( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_56896(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_56973(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_57142(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_57843(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* P_GLOBAL_CREATE_PAINT_GARAGE_DOOR */ void sub_58799(boolean bParam0)
{
    vector vVar3;
    vector vVar6;
    vector vVar9;
    vector vVar12;

     /* WRITESCRIPTLOG */ sub_1201( "SP", "P_GLOBAL_CREATE_PAINT_GARAGE_DOOR", 0 );
    vVar3 = {-54.00200000, -11.19500000, 1.50100000};
    vVar6 = {0.00000000, 0.00000000, 0.00000000};
     /* CLEANOBJECT */ sub_9898( g_U2624 );
    g_U2624 =  /* CREATEOBJECTNOOFFSET */ sub_4057( g_U2113, vVar3, vVar6, 0, 0, 1 );
    if ((DOES_OBJECT_EXIST( g_U2624 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U2624, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2624, ref g_U1816 );
        if (bParam0)
        {
            PLAY_OBJECT_ANIM( g_U2624, "BD_PAINT_DOOR02_07", "bd_objmodels", 1000.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U2624, "BD_PAINT_DOOR02_07", "bd_objmodels", 1.00000000 );
        }
    }
    vVar9 = {-54.00200000, -12.82000000, 0.00000000};
    vVar12 = {0.00000000, 0.00000000, 0.00000000};
     /* CLEANOBJECT */ sub_9898( g_U2625 );
    g_U2625 =  /* CREATEOBJECTNOOFFSET */ sub_4057( g_U2114, vVar9, vVar12, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( g_U2625 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U2625, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2625, ref g_U1816 );
        SET_OBJECT_COLLIDE_WITH_NON_PLAYER_CHARACTER( g_U2625, 0 );
    }
    return;
}

/* NIS_RETURN_TO_GAMEPLAY_CAM */ void sub_59289(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

/* P_HANDLE_GARAGE_DOOR_SOUND */ void sub_59478()
{
    if (l_U731 == 1)
    {
        if ((DOES_OBJECT_EXIST( g_U2624 )) == 1)
        {
            if ((IS_OBJECT_PLAYING_ANIM( g_U2624, "BD_PAINT_DOOR02_07", "bd_objmodels" )) == 0)
            {
                 /* WRITESCRIPTLOG */ sub_1201( "SP", "Stopping garage door sound...", 0 );
                if (l_U733 != -1)
                {
                    STOP_SOUND( l_U733, 0 );
                    RELEASE_SOUND_ID( l_U733 );
                    l_U733 = -1;
                }
                l_U731 = 0;
            }
        }
    }
    return;
}

/* P_HANDLE_PAINTROOM_BULLETCAM */ void sub_59703()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (l_U614 == 0)
    {
        if (( /* F_HAS_PED_ARRAY_SPAWNED */ sub_59761( ref l_U558, 1 )) == 1)
        {
            if (((( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_3256( ref l_U481 )) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_3256( ref l_U526 ))) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_3256( ref l_U558 ))) <= 1)
            {
                 /* WRITESCRIPTLOG */ sub_1201( "SP", "Assigning Paintroom bullet cam.", 0 );
                uVar2 =  /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_59971( ref l_U481 );
                uVar3 =  /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_59971( ref l_U526 );
                uVar4 =  /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_59971( ref l_U558 );
                if (((IS_PED_DEAD( uVar2 )) == 0) AND ((DOES_PED_EXIST( uVar2 )) == 1))
                {
                    uVar5 = uVar2;
                }
                else if (((IS_PED_DEAD( uVar3 )) == 0) AND ((DOES_PED_EXIST( uVar3 )) == 1))
                {
                    uVar5 = uVar3;
                }
                else if (((IS_PED_DEAD( uVar4 )) == 0) AND ((DOES_PED_EXIST( uVar4 )) == 1))
                {
                    uVar5 = uVar4;
                };;;
                if (((IS_PED_DEAD( uVar5 )) == 0) AND ((DOES_PED_EXIST( uVar5 )) == 1))
                {
                    SET_PED_AS_ONE_SHOT_KILL( uVar5, 0 );
                    SET_BULLET_CAM_PREF( uVar5, "PIST_CUSTOM_06_BUS_MPM", "PIST_CUSTOM_06_BUS_MPM", "PIST_CUSTOM_06_BUS_MPM", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
                    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
                }
                l_U614 = 1;
            }
        }
    }
    return;
}

/* F_HAS_PED_ARRAY_SPAWNED */ void sub_59761(unknown uParam0, boolean bParam1)
{
    int I;
    int Result;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((DOES_PED_EXIST( (uParam0^)[I] )) == 1)
        {
            Result = 1;
            if (NOT bParam1)
            {
                return 1;
            }
        }
        else
        {
            Result = 0;
        }
    }
    return Result;
}

/* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ void sub_59971(unknown uParam0)
{
    int I;

    if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_3256( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

/* NIS_POST_SETUP */ void sub_60464(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1782(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1744(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_60562();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_60562()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1744(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1744(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1744(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1744(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* P_LIMIT_PLAYER_ACTIONS */ void sub_60768()
{
     /* WRITESCRIPTLOG */ sub_1201( "SP", "P_LIMIT_PLAYER_ACTIONS", 0 );
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1782() )) == 0))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1782(), 0, 0 );
        REENABLE_PLAYER_INPUT( 14 );
        REENABLE_PLAYER_INPUT( 15 );
        REENABLE_PLAYER_INPUT( 16 );
        REENABLE_PLAYER_INPUT( 17 );
        REENABLE_PLAYER_INPUT( 6 );
        REENABLE_PLAYER_INPUT( 4 );
    }
    return;
}

/* P_CLOSE_PAINT_GARAGE_DOOR */ void sub_62344()
{
     /* WRITESCRIPTLOG */ sub_1201( "Reggie", "P_CLOSE_PAINT_GARAGE_DOOR", 0 );
    if ((DOES_OBJECT_EXIST( g_U2624 )) == 1)
    {
        PLAY_OBJECT_ANIM( g_U2624, "BD_PAINT_DOOR02_07", "bd_objmodels", 1000.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U2624, "BD_PAINT_DOOR02_07", "bd_objmodels", 1.00000000 );
        SET_OBJECT_ANIM_SPEED( g_U2624, "BD_PAINT_DOOR02_07", "bd_objmodels", -0.50000000 );
        l_U733 = GET_SOUND_ID();
        PLAY_SOUND_FROM_OBJECT( l_U733, "GARAGE_DOOR", g_U2624 );
         /* WRITESCRIPTLOG */ sub_1201( "SP", "Playing garage door sound...", 0 );
        l_U731 = 1;
    }
    return;
}

/* P_ONE_SHOT_KILL_END */ void sub_62815()
{
    int I;

     /* WRITESCRIPTLOG */ sub_1201( "SP", "P_ONE_SHOT_KILL_END", 0 );
    for ( I = 0; I < 3; I++ )
    {
        if (((IS_PED_DEAD( l_U481[I] )) == 0) AND ((DOES_PED_EXIST( l_U481[I] )) == 1))
        {
            if (IS_PED_INJURED( l_U481[I] ))
            {
                SET_PED_CORPSE( l_U481[I], 1 );
            }
            else
            {
                SET_PED_AS_ONE_SHOT_KILL( l_U481[I], 0 );
            }
        }
    }
    for ( I = 0; I < 3; I++ )
    {
        if (((IS_PED_DEAD( l_U526[I] )) == 0) AND ((DOES_PED_EXIST( l_U526[I] )) == 1))
        {
            if (IS_PED_INJURED( l_U526[I] ))
            {
                SET_PED_CORPSE( l_U526[I], 1 );
            }
            else
            {
                SET_PED_AS_ONE_SHOT_KILL( l_U526[I], 0 );
            }
        }
    }
    for ( I = 0; I < 2; I++ )
    {
        if (((IS_PED_DEAD( l_U558[I] )) == 0) AND ((DOES_PED_EXIST( l_U558[I] )) == 1))
        {
            if (IS_PED_INJURED( l_U558[I] ))
            {
                SET_PED_CORPSE( l_U558[I], 1 );
            }
            else
            {
                SET_PED_AS_ONE_SHOT_KILL( l_U558[I], 0 );
            }
        }
    }
    return;
}

/* F_CAM_SHAKE_SMALL_EXPLOSION */ string sub_63299()
{
    return "SMALL_EXPLOSION_SHAKE";
}

/* P_STOP_SP_CHALLENGES_MPM */ void sub_63662()
{
     /* WRITESCRIPTLOG */ sub_1201( "CCB", "P_STOP_SP_CHALLENGES_MPM", 0 );
     /* WRITESCRIPTLOG */ sub_1201( "CCB", "Stopping the Bus_Depot_Garage_Paint_MPM context...", 0 );
    END_CONTEXT( "Bus_Depot_Garage_Paint_MPM" );
    return;
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_64086(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_4873(  /* PLAYER_PED_ID */ sub_1744(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* P_KILL_PEDS_IN_ARRAY */ void sub_64225(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_KILL_PED */ sub_64279( (uParam0^)[I] );
    }
    return;
}

/* P_KILL_PED */ void sub_64279(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

/* F_GET_NUM_MPM_ENEMIES_ALIVE */ void sub_64454()
{
    int Result;

    Result = 0;
    Result +=  /* F_GET_NUM_LIVING_PEDS */ sub_64503( ref l_U481 );
    Result +=  /* F_GET_NUM_LIVING_PEDS */ sub_64503( ref l_U526 );
    Result +=  /* F_GET_NUM_LIVING_PEDS */ sub_64503( ref l_U558 );
    return Result;
}

/* F_GET_NUM_LIVING_PEDS */ void sub_64503(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (((IS_PED_DEAD( (uParam0^)[I] )) == 0) AND ((DOES_PED_EXIST( (uParam0^)[I] )) == 1))
        {
            Result++;
        }
    }
    return Result;
}

/* F_HANDLE_TALK_TO_GIO_CUTSCENE */ int sub_65127()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    switch (l_U71)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eTalkToGioCutsceneState = CUTSCENE_IDLE", 0 );
        break;
        case 1:
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eTalkToGioCutsceneState = CUTSCENE_SETUP", 0 );
         /* NIS_PRE_SETUP */ sub_7367( 0, 0, 0, 1 );
        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1782() )) == 0))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1782(), 0, 0 );
        }
        if (((CUTSCENE_NAMED_IS_LOADING( "mid_05_bus" )) == 0) || ((CUTSCENE_IS_LOADED( "mid_05_bus" )) == 0))
        {
            PRE_STREAM_SEAMLESS_CUTSCENE( "mid_05_bus" );
        }
         /* P_STREAMREQ_ISEQ_INSERT */ sub_26152( 651988550, ref g_U1272 );
        l_U71 = 2;
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eTalkToGioCutsceneState = CUTSCENE_LOADING", 0 );
        case 2:
        if ((( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_34119( ref g_U1272 )) == 1) AND ((CUTSCENE_IS_LOADED( "mid_05_bus" )) == 1))
        {
            l_U71 = 3;
             /* WRITESCRIPTLOG */ sub_1201( "SP", "eTalkToGioCutsceneState = CUTSCENE_START", 0 );
            break;
        }
        return 0;
        case 3:
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eTalkToGioCutsceneState = CUTSCENE_START", 0 );
         /* P_SETUP_GIOVANNA */ sub_36724();
        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0) AND ((DOES_PED_EXIST(  /* PLAYER_PED_ID */ sub_1744() )) == 1))
        {
            CLEAR_PED_TASKS(  /* PLAYER_PED_ID */ sub_1744() );
            CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_1744(), l_U897, l_U900 );
        }
        if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2595, "Giov_Bus", 0 );
            CUTSCENE_REGISTER_PED_TELEPORT( g_U2595, l_U901, l_U904 );
        }
        ISEQ_REGISTER_ENTITY( 651988550, "player",  /* PLAYER_PED_ID */ sub_1744(), 0 );
        ISEQ_REGISTER_ENTITY( 651988550, "gio", g_U2595, 0 );
        CUTSCENE_REGISTER_ISEQ( 651988550 );
        START_SEAMLESS_CUTSCENE();
        l_U71 = 4;
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eTalkToGioCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eTalkToGioCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
         /* P_PLAYER_HOLSTER_WEAPONS */ sub_48198( ref l_U111, 0, 1 );
         /* P_SET_TWO_HANDED_WEAPON_VISIBLE */ sub_66082( l_U111, 0 );
         /* P_HIDE_ENEMIES_FOR_SCENE */ sub_66214();
         /* P_CLEAN_ENEMIES_FOR_SCENE */ sub_66693();
         /* P_GATE_PED_WEAPON_CLEANUP */ sub_67098();
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        AUDIO_MUSIC_PLAY_ONESHOT();
        l_U71 = 5;
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eTalkToGioCutsceneState = CUTSCENE_PLAYING", 0 );
        break;
        case 5:
        if (HAS_CUTSCENE_FINISHED() == 1)
        {
            if (((CUTSCENE_NAMED_IS_LOADING( "mid_05_bus" )) == 1) || ((CUTSCENE_IS_LOADED( "mid_05_bus" )) == 1))
            {
                CLEAR_NAMED_CUTSCENE( "mid_05_bus" );
            }
            if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0)
            {
                SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1744(), 0 );
            }
             /* P_UNHIDE_ENEMIES_FOR_SCENE */ sub_67436();
            l_U71 = 0;
             /* WRITESCRIPTLOG */ sub_1201( "SP", "eTalkToGioCutsceneState = CUTSCENE_IDLE", 0 );
            return 1;
        }
        break;
    }
    return 0;
}

/* P_SET_TWO_HANDED_WEAPON_VISIBLE */ void sub_66082(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;

    uVar21 = uParam0._fU24._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar21, uParam18 );
    }
    uVar22 = uParam0._fU60._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar22, uParam18 );
    }
    return;
}

/* P_HIDE_ENEMIES_FOR_SCENE */ void sub_66214()
{
    int I;

     /* WRITESCRIPTLOG */ sub_1201( "SP", "P_HIDE_ENEMIES_FOR_SCENE", 0 );
    for ( I = 0; I < 3; I++ )
    {
        if ((DOES_PED_EXIST( l_U481[I] )) == 1)
        {
            if (((IS_PED_DEAD( l_U481[I] )) == 0) || ((IS_PED_DEAD( l_U481[I] )) == 1))
            {
                if (IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U481[I], ref l_U213._fU0 ))
                {
                    SET_PED_VISIBLE( l_U481[I], 0 );
                }
            }
        }
    }
    for ( I = 0; I < 3; I++ )
    {
        if ((DOES_PED_EXIST( l_U526[I] )) == 1)
        {
            if (((IS_PED_DEAD( l_U526[I] )) == 0) || ((IS_PED_DEAD( l_U526[I] )) == 1))
            {
                if (IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U526[I], ref l_U213._fU0 ))
                {
                    SET_PED_VISIBLE( l_U526[I], 0 );
                }
            }
        }
    }
    for ( I = 0; I < 2; I++ )
    {
        if ((DOES_PED_EXIST( l_U558[I] )) == 1)
        {
            if (((IS_PED_DEAD( l_U558[I] )) == 0) || ((IS_PED_DEAD( l_U558[I] )) == 1))
            {
                if (IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U558[I], ref l_U213._fU0 ))
                {
                    SET_PED_VISIBLE( l_U558[I], 0 );
                }
            }
        }
    }
    return;
}

/* P_CLEAN_ENEMIES_FOR_SCENE */ void sub_66693()
{
    int I;

     /* WRITESCRIPTLOG */ sub_1201( "NS", "P_CLEAN_ENEMIES_FOR_SCENE()", 0 );
    for ( I = 0; I < 3; I++ )
    {
        if (((IS_PED_DEAD( l_U481[I] )) == 0) || ((IS_PED_DEAD( l_U481[I] )) == 1))
        {
            if (IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U481[I], ref l_U234._fU0 ))
            {
                 /* CLEANPED */ sub_9762( l_U481[I] );
            }
        }
    }
    for ( I = 0; I < 3; I++ )
    {
        if (((IS_PED_DEAD( l_U526[I] )) == 0) || ((IS_PED_DEAD( l_U526[I] )) == 1))
        {
            if (IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U526[I], ref l_U234._fU0 ))
            {
                 /* CLEANPED */ sub_9762( l_U526[I] );
            }
        }
    }
    for ( I = 0; I < 2; I++ )
    {
        if (((IS_PED_DEAD( l_U558[I] )) == 0) || ((IS_PED_DEAD( l_U558[I] )) == 1))
        {
            if (IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U558[I], ref l_U234._fU0 ))
            {
                 /* CLEANPED */ sub_9762( l_U558[I] );
            }
        }
    }
    return;
}

/* P_GATE_PED_WEAPON_CLEANUP */ void sub_67098()
{
     /* WRITESCRIPTLOG */ sub_1201( "SP", "P_GATE_PED_WEAPON_CLEANUP", 0 );
    REMOVE_PICKUPS_OF_TYPE_IN_GAMEPLAY_HELPER_BOX( 39142315, ref l_U192._fU0 );
    REMOVE_PICKUPS_OF_TYPE_IN_GAMEPLAY_HELPER_BOX( 843762214, ref l_U192._fU0 );
    REMOVE_PICKUPS_OF_TYPE_IN_GAMEPLAY_HELPER_BOX( -46756431, ref l_U192._fU0 );
    return;
}

/* P_UNHIDE_ENEMIES_FOR_SCENE */ void sub_67436()
{
    int I;

     /* WRITESCRIPTLOG */ sub_1201( "SP", "P_UNHIDE_ENEMIES_FOR_SCENE", 0 );
    for ( I = 0; I < 3; I++ )
    {
        if ((DOES_PED_EXIST( l_U481[I] )) == 1)
        {
            if (((IS_PED_DEAD( l_U481[I] )) == 0) || ((IS_PED_DEAD( l_U481[I] )) == 1))
            {
                SET_PED_VISIBLE( l_U481[I], 1 );
            }
        }
    }
    for ( I = 0; I < 3; I++ )
    {
        if ((DOES_PED_EXIST( l_U526[I] )) == 1)
        {
            if (((IS_PED_DEAD( l_U526[I] )) == 0) || ((IS_PED_DEAD( l_U526[I] )) == 1))
            {
                SET_PED_VISIBLE( l_U526[I], 1 );
            }
        }
    }
    for ( I = 0; I < 2; I++ )
    {
        if ((DOES_PED_EXIST( l_U558[I] )) == 1)
        {
            if (((IS_PED_DEAD( l_U558[I] )) == 0) || ((IS_PED_DEAD( l_U558[I] )) == 1))
            {
                SET_PED_VISIBLE( l_U558[I], 1 );
            }
        }
    }
    return;
}

/* F_HANDLE_TALK_TO_GIO_BLENDOUT */ int sub_68010()
{
    int iVar2;
    int iVar3;
    unknown uVar4;

    iVar2 = 0;
    iVar3 = 0;
    switch (l_U73)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eTalkToGioBlendState = BLENDOUT_SETUP", 0 );
         /* NIS_PRE_SETUP */ sub_7367( 0, 0, 0, 1 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0)
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1782(), 0, 0 );
        }
        CAMERA_PLAY_ANIMATED( "LEVEL_S_BUS_CP_03", "MID_05_BUS_BLEND_OUT_MAX_CAM", 1, l_U906, l_U909, 0, 0 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0)
        {
            uVar4 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_46088();
            if (GET_DOES_WEAPON_EXIST( uVar4 ))
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1744(), uVar4, 0, 1 );
            }
        }
         /* P_SET_TWO_HANDED_WEAPON_VISIBLE */ sub_66082( l_U111, 1 );
         /* CREATETIMER */ sub_8150( ref l_U710, 4500, 1, 0 );
         /* STARTTIMER */ sub_8300( ref l_U710 );
        l_U73 = 2;
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eTalkToGioBlendState = BLENDOUT_PLAYING", 0 );
        break;
        case 2:
        if (( /* ISTIMERDONE */ sub_8433( ref l_U710 )) == 1)
        {
             /* P_ENABLE_POI */ sub_68440( ref l_U624, 1 );
             /* CLEANOBJECT */ sub_9898( l_U584 );
            l_U584 =  /* CREATEOBJECTNOOFFSET */ sub_4057( -2023675653, -58.44500000, -23.87800000, 1.30000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if ((DOES_OBJECT_EXIST( l_U584 )) == 1)
            {
                FREEZE_OBJECT_POSITION( l_U584, 1 );
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U584, ref g_U1808 );
            }
        }
        if (l_U905 == 0)
        {
            if (IS_ANIMATED_CAMERA_PLAYING() == 1)
            {
                if (CAMERA_ANIMATED_CURRENT_TIME() >= l_U910)
                {
                    SET_CAM_VIEW_MODE( 1 );
                    SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U921, 1065353216, 0 );
                    SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U922, 1065353216, 0 );
                    CAMERA_ANIMATED_STOP( l_U911, 1 );
                     /* CREATETIMER */ sub_8150( ref l_U912, l_U911, 1, 0 );
                     /* STARTTIMER */ sub_8300( ref l_U912 );
                    l_U905 = 1;
                }
            }
        }
        if (( /* ISTIMERDONE */ sub_8433( ref l_U912 )) == 1)
        {
            ISEQ_UNREGISTER_ENTITY( 651988550, "player" );
            ISEQ_UNREGISTER_ENTITY( 651988550, "gio" );
             /* P_STREAMREQ_ISEQ_REMOVE */ sub_2189( 651988550, ref g_U1272 );
             /* NIS_POST_SETUP */ sub_60464( 1, 1 );
            l_U73 = 0;
             /* WRITESCRIPTLOG */ sub_1201( "SP", "eTalkToGioBlendState = BLENDOUT_IDLE", 0 );
            return 1;
        }
        break;
    }
    return 0;
}

/* P_ENABLE_POI */ void sub_68440(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
             /* P_ENABLEPOIGLINT */ sub_42122( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_42122( iParam0, 0 );
         /* P_ENABLEPOIINTERACTIONTEXT */ sub_68526( iParam0, 0 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0)
        {
            TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_1744() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1744(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

/* P_ENABLEPOIINTERACTIONTEXT */ void sub_68526(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_68706( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

/* P_UPDATEINTERACTIONTEXTAVAILABLE */ void sub_68706(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if (( /* F_ISACTIONINGAVAILABLE */ sub_68802( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if (( /* F_ISACTIONINGAVAILABLE */ sub_68802( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

/* F_ISACTIONINGAVAILABLE */ int sub_68802(int iParam0)
{
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1782() )) == 0))
    {
        if (((IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_1744() )) == 1) || (((IS_PED_GETTING_UP(  /* PLAYER_PED_ID */ sub_1744() )) == 1) || (((IS_PED_PICKING_UP_PICKUP(  /* PLAYER_PED_ID */ sub_1744() )) == 1) || (((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_1744() )) == 1) || (((IS_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1744() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1744() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

/* P_START_CHECKPOINT_THREAD */ void sub_70050(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

/* P_SETDOORAFFECTEDBYBULLETS */ void sub_70123(int iParam0, unknown uParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_70164( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_70248( iParam0 );
    }
    DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( iParam0->_fU0, iParam0->_fU4 ), uParam1 );
    return;
}

/* F_DOESDOOREXIST */ int sub_70164(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_70248(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* IS_ANY_SPEECH_CURRENTLY_PLAYING */ void sub_70438()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_70636(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_70747(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_71017(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_71062( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_71062(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_71149( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_71149(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_71201( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_71719( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_71201(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_71719(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* F_HANDLE_POI */ int sub_71958(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1744() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_4873(  /* PLAYER_PED_ID */ sub_1744(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_4873(  /* PLAYER_PED_ID */ sub_1744(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_68706( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND (( /* F_ISACTIONINGAVAILABLE */ sub_68802( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (( /* F_HASACTIONBEENPRESSED */ sub_72855()) == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                             /* P_ENABLE_POI */ sub_68440( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                             /* P_ENABLEPOIGLINT */ sub_42122( iParam0, 0 );
                             /* P_ENABLEPOIINTERACTIONTEXT */ sub_68526( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                             /* P_ENABLEPOIGLINT */ sub_42122( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1744(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                         /* P_ENABLEPOIGLINT */ sub_42122( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_ENABLEPOIINTERACTIONTEXT */ sub_68526( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED(  /* PLAYER_PED_ID */ sub_1744(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0)
                    {
                        TASK_LOOK_AT_COORD(  /* PLAYER_PED_ID */ sub_1744(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1744(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                     /* P_ENABLEPOIGLINT */ sub_42122( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                     /* P_ENABLEPOIINTERACTIONTEXT */ sub_68526( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_1744() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1744(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                 /* P_ENABLEPOIINTERACTIONTEXT */ sub_68526( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

/* F_HASACTIONBEENPRESSED */ int sub_72855()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

/* P_HANDLE_FOLDING_DOOR_ACTION */ void sub_73788()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;

    switch (l_U72)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eNISFoldingDoorState = NIS_SETUP", 0 );
         /* NIS_PRE_SETUP */ sub_7367( 1, 0, 0, 1 );
         /* NIS_CREATE_STATIC_CAM */ sub_50396( ref l_U931, l_U962, l_U965, l_U968, l_U969 );
        SET_CAM_VIEW_MODE( 0 );
         /* P_STREAMREQ_ISEQ_INSERT */ sub_26152( 529194724, ref g_U1272 );
        l_U72 = 2;
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eNISFoldingDoorState = NIS_LOADING", 0 );
        case 2:
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eNISFoldingDoorState = NIS_LOADING", 0 );
        if (( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_34119( ref g_U1272 )) == 1)
        {
            l_U72 = 3;
             /* WRITESCRIPTLOG */ sub_1201( "SP", "eNISFoldingDoorState = NIS_START", 0 );
            break;
        }
        return;
        case 3:
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eNISFoldingDoorState = NIS_START", 0 );
        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1782() )) == 0))
        {
            CLEAR_PED_DEFAULT_AIM(  /* PLAYER_PED_ID */ sub_1744() );
            SET_PED_EMOTION_STATE(  /* PLAYER_PED_ID */ sub_1744(), 3 );
            if (( /* F_IS_PLAYER_HOLDING_SINGLE_HANDED_WEAPON */ sub_74293()) == 1)
            {
                PED_SET_ACTION_INTENTION(  /* PLAYER_PED_ID */ sub_1744(), 47, -1, 0.00000000, 0.00000000, 0.00000000 );
            }
            else
            {
                PED_SET_ACTION_INTENTION(  /* PLAYER_PED_ID */ sub_1744(), 48, -1, 0.00000000, 0.00000000, 0.00000000 );
            }
            ISEQ_REGISTER_ENTITY( 529194724, "player",  /* PLAYER_PED_ID */ sub_1744(), 0 );
            ISEQ_START( 529194724 );
        }
        l_U719 = 1;
        if (( /* F_IS_PLAYER_HOLDING_SINGLE_HANDED_WEAPON */ sub_74293()) == 1)
        {
             /* CREATETIMER */ sub_8150( ref l_U972, 1100, 1, 0 );
        }
        else
        {
             /* CREATETIMER */ sub_8150( ref l_U972, 1200, 1, 0 );
        }
         /* STARTTIMER */ sub_8300( ref l_U972 );
         /* CREATETIMER */ sub_8150( ref l_U720, 1300, 1, 0 );
         /* STARTTIMER */ sub_8300( ref l_U720 );
        l_U72 = 5;
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eNISFoldingDoorState = NIS_FIRST_FRAME", 0 );
        break;
        case 5:
         /* WRITESCRIPTLOG */ sub_1201( "SP", "NIS_FIRST_FRAME = NIS_FIRST_FRAME", 0 );
         /* NIS_PLAY_STATIC_CAMERA */ sub_50631( ref l_U931 );
        if (( /* F_IS_PLAYER_HOLDING_SINGLE_HANDED_WEAPON */ sub_74293()) == 1)
        {
             /* TELEPORTPED */ sub_50097(  /* PLAYER_PED_ID */ sub_1744(), l_U923, l_U926 );
        }
        else
        {
             /* TELEPORTPED */ sub_50097(  /* PLAYER_PED_ID */ sub_1744(), l_U927, l_U930 );
        }
        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1782() )) == 0))
        {
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_1744(), 1 );
        }
        l_U72 = 4;
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eNISFoldingDoorState = NIS_PLAYING", 0 );
        break;
        case 4:
        if (( /* ISTIMERDONE */ sub_8433( ref l_U972 )) == 1)
        {
             /* P_HANDLE_IMAGEFX_PRESS_BUTTON */ sub_74921();
            if ((DOES_OBJECT_EXIST( l_U579 )) == 1)
            {
                PLAY_SOUND_FROM_OBJECT( -1, "GARAGE_DOOR_VERTICAL_BUTTON_PRESS_1", l_U579 );
            }
        }
        if (( /* ISTIMERDONE */ sub_8433( ref l_U720 )) == 1)
        {
             /* P_TOGGLE_PAINTBAY_GARAGE_DOOR */ sub_75094();
            l_U719 = 0;
        }
        if (( /* ISTIMERDONE */ sub_8433( ref l_U931._fU48 )) == 1)
        {
            if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0)
            {
                FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_1744(), 0 );
            }
             /* NIS_RETURN_TO_GAMEPLAY_CAM */ sub_59289( 0, 0, 0, l_U970, l_U971, 0 );
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_70636( ref l_U985 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_70747( 0,  /* PLAYER_PED_ID */ sub_1744(), "MAX", ref l_U985, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_70747( 1,  /* PLAYER_PED_ID */ sub_1744(), "MAX", ref l_U985, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_71017( "SBUS_MPDSDRA", ref l_U985, 7, 1 );
             /* NIS_POST_SETUP */ sub_60464( 1, 1 );
        }
        if ((DOES_OBJECT_EXIST( g_U2626 )) == 1)
        {
            if ((IS_OBJECT_PLAYING_ANIM( g_U2626, "BD_ROLLER_HINGE", "bd_objmodels" )) == 0)
            {
                if ((( /* F_ISPEDINTRIGGERBOX */ sub_4873(  /* PLAYER_PED_ID */ sub_1744(), l_U150 )) == 1) AND ((l_U719 == 0) AND (l_U624._fU0 == 0)))
                {
                    l_U72 = 6;
                     /* WRITESCRIPTLOG */ sub_1201( "SP", "eNISFoldingDoorState = NIS_FINISHED", 0 );
                }
            }
            else
            {
                WAKE_RESTING_OBJECTS_AROUND( g_U2626 );
            }
        }
        break;
        case 6:
         /* WRITESCRIPTLOG */ sub_1201( "SP", "eNISFoldingDoorState = NIS_FINISHED", 0 );
        SET_CAM_VIEW_MODE( 1 );
         /* WRITESCRIPTLOG */ sub_1201( "GA", "Paint bay door button re-enabled.", 0 );
        l_U72 = 0;
        break;
    }
    return;
}

/* F_IS_PLAYER_HOLDING_SINGLE_HANDED_WEAPON */ int sub_74293()
{
    unknown uVar2;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1744() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1744(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_46192( uVar2 )) == 1)
            {
                return 1;
            }
        }
    }
    return 0;
}

/* P_HANDLE_IMAGEFX_PRESS_BUTTON */ void sub_74921()
{
    PLAY_IMAGEFX( "Triple_image_blur_down_2", 4, 0 );
    return;
}

/* P_TOGGLE_PAINTBAY_GARAGE_DOOR */ void sub_75094()
{
     /* WRITESCRIPTLOG */ sub_1201( "SP", "P_TOGGLE_PAINTBAY_GARAGE_DOOR", 0 );
    if ((DOES_OBJECT_EXIST( g_U2626 )) == 1)
    {
        if (l_U729 == 0)
        {
            PLAY_OBJECT_ANIM( g_U2626, "BD_ROLLER_HINGE", "bd_objmodels", 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U2626, "BD_ROLLER_HINGE", "bd_objmodels", 0 );
            SET_OBJECT_ANIM_SPEED( g_U2626, "BD_ROLLER_HINGE", "bd_objmodels", 0.20000000 );
             /* CLEANOBJECT */ sub_9898( l_U580 );
            l_U580 =  /* CREATEOBJECTNOOFFSET */ sub_4057( g_U2116, l_U581, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );
            if ((DOES_OBJECT_EXIST( l_U580 )) == 1)
            {
                FREEZE_OBJECT_POSITION( l_U580, 1 );
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U580, ref g_U1808 );
            }
             /* P_SET_INTERACTIVE_TEXT */ sub_42555( ref l_U624, 30, "POI_BUSPAINT2" );
             /* P_ENABLE_POI */ sub_68440( ref l_U624, 0 );
            l_U729 = 1;
        }
        l_U732 = GET_SOUND_ID();
        PLAY_SOUND_FROM_OBJECT( l_U732, "GARAGE_DOOR_VERTICAL", g_U2626 );
        l_U730 = 1;
    }
    return;
}

/* P_HANDLE_FOLDING_DOOR_SOUND */ void sub_76048()
{
    if (l_U730 == 1)
    {
        if ((DOES_OBJECT_EXIST( g_U2626 )) == 1)
        {
            if ((IS_OBJECT_PLAYING_ANIM( g_U2626, "BD_ROLLER_HINGE", "bd_objmodels" )) == 0)
            {
                 /* WRITESCRIPTLOG */ sub_1201( "SP", "Stopping Folding door sound...", 0 );
                if (l_U732 != -1)
                {
                    STOP_SOUND( l_U732, 0 );
                    RELEASE_SOUND_ID( l_U732 );
                    l_U732 = -1;
                }
                l_U730 = 0;
            }
        }
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_76278(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_4873(  /* PLAYER_PED_ID */ sub_1744(), uParam0 );
}

/* P_UNLOAD_GARAGE_ASSETS */ void sub_76658()
{
     /* WRITESCRIPTLOG */ sub_1201( "SP", "P_UNLOAD_GARAGE_ASSETS", 0 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_76738( g_U2123, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_76738( g_U2124, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_76738( g_U2110, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_76738( g_U2111, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_76738( g_U2116, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_76738( g_U2117, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_76738( -2023675653, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_76738( 948292876, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_76738( -783139352, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_76738( g_U762, ref g_U910 );
     /* P_STREAMREQ_AUDIO_BANK_REMOVE */ sub_77345( "SCRIPT_MISSION\GARAGE_DOOR", ref g_U1757 );
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE */ void sub_76738(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_2327( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a MODEL_NAME asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Removing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_AUDIO_BANK_REMOVE */ void sub_77345(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_2327( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a AUDIO_BANK asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}


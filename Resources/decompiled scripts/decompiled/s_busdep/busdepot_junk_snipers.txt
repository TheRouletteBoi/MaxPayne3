void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U40 = 0;
    l_U41 = 0;
    l_U42 = 1500;
    StrCopy( ref l_U52, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U60, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U86 = 0;
    l_U140 = 0;
    l_U141 = 0;
    l_U142 = 0;
    l_U143 = 0;
    l_U144 = 0;
    l_U145 = 0;
    l_U146 = 0;
    l_U147 = 0;
    l_U184 = 0;
    l_U574 = 0;
    l_U575 = 0;
    l_U612 = 0;
    l_U616 = "PIST_CUSTOM_03_BUS_ROOF";
    l_U617 = "PIST_CUSTOM_03_BUS_ROOF_ALT";
    l_U620 = 0;
    l_U621 = 0;
    l_U622 = 0;
    l_U623 = 0;
    l_U624 = 0;
    l_U625 = 0;
    l_U626 = {-13.88481000, -48.43316000, 0.00013100};
    l_U629 = 187.69310000;
    l_U630 = {-9.10000000, -59.09000000, 0.59500000};
    l_U633 = 175.00000000;
    l_U634 = -24.65515000;
    l_U635 = -1.27807000;
    l_U636 = 0;
    l_U637 = 0;
    l_U788 = {-36.79000000, -37.71000000, 10.40000000};
    l_U791 = 78.00000000;
    l_U792 = 12.00000000;
    l_U793 = 0;
    l_U794 = 0;
    l_U795 = 0;
     /* WRITESCRIPTLOG */ sub_694( "SP", "Script busdepot_junk_snipers.sc is starting up...", 0 );
    l_U144 = 1;
    while (IS_EXITFLAG_SET() == 0)
    {
         /* P_HANDLE_DEBUG_GAMEPLAY_CAM_WIDGET */ sub_832();
         /* P_HANDLE_FAILURE */ sub_1506();
        if (l_U145 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_10725();
        }
        WAIT( 0 );
    }
     /* P_CLEANUP_ALL */ sub_5242();
     /* P_UNLOAD_ASSETS */ sub_55903();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "busdepot_junk_snipers" );
     /* WRITESCRIPTLOG */ sub_694( "SP", "Script busdepot_junk_snipers.sc is terminating...", 0 );
    return;
}

/* WRITESCRIPTLOG */ void sub_694(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_HANDLE_DEBUG_GAMEPLAY_CAM_WIDGET */ void sub_832()
{
    if (l_U795 == 0)
    {
        START_WIDGET_GROUP( "Gameplay Camera Helper" );
        ADD_WIDGET_BOOL( "Updated Gameplay Camera", ref l_U794 );
        ADD_WIDGET_FLOAT_SLIDER( "Gameplay Cam Heading", ref l_U791, -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Gameplay Cam Pitch", ref l_U792, -180.00000000, 180.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Players Aim Helper" );
        ADD_WIDGET_BOOL( "Updated Players Aim Heading", ref l_U793 );
        ADD_WIDGET_FLOAT_SLIDER( "Coord X", ref l_U788._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Coord Y", ref l_U788._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Coord Z", ref l_U788._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        l_U795 = 1;
    }
    if (l_U794 == 1)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U791, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U792, 1065353216, 0 );
        l_U794 = 0;
    }
    if (l_U793 == 1)
    {
        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1339() )) == 0))
        {
            CLEAR_PED_DEFAULT_AIM(  /* PLAYER_PED_ID */ sub_1385() );
            SET_PED_DEFAULT_AIM_AT_COORD(  /* PLAYER_PED_ID */ sub_1385(), l_U788 );
        }
        l_U793 = 0;
    }
    return;
}

/* PLAYER_ID */ void sub_1339()
{
    return GET_PLAYER_ID();
}

/* PLAYER_PED_ID */ int sub_1385()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_1339() );
    }
    return 0;
}

/* P_HANDLE_FAILURE */ void sub_1506()
{
    switch (l_U145)
    {
        case 0:
        if (g_U764 == 2)
        {
            if ( /* RESTARTING_CHECKPOINT */ sub_1615())
            {
                l_U145 = 4;
            }
            if (((IS_PED_DEAD( g_U2595 )) == 1) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
            {
                 /* WRITESCRIPTLOG */ sub_694( "SP", "Mission Failed: Giovanna died.", 0 );
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 1)
                {
                    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
                }
                l_U147 = 1;
                l_U145 = 1;
                 /* WRITESCRIPTLOG */ sub_694( "SP", "eFailState = FAIL_WAITING_FOR_GIO_BULLETCAM", 0 );
            }
            if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 1)
            {
                l_U145 = 2;
                 /* WRITESCRIPTLOG */ sub_694( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
        }
        else if ((( /* IS_RESTART_ACTIVE */ sub_2372()) == 1) || ((((IS_PED_DEAD( g_U2595 )) == 1) AND ((DOES_PED_EXIST( g_U2595 )) == 1)) || ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 1)))
        {
            if (((CUTSCENE_NAMED_IS_LOADING( "mid_02_bus_v2_concat" )) == 1) || ((CUTSCENE_IS_LOADED( "mid_02_bus_v2_concat" )) == 1))
            {
                CLEAR_NAMED_CUTSCENE( "mid_02_bus_v2_concat" );
            }
             /* P_RESET_CHECKPOINT_THREAD */ sub_2530( ref g_U765[2] );
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        }
        break;
        case 1:
        if (( /* F_HANDLE_DEATH_CAM_GIO_FENCE */ sub_2611()) == 1)
        {
            l_U145 = 3;
             /* WRITESCRIPTLOG */ sub_694( "SP", "eFailState = FAIL_WAITING_FOR_RESPAWN", 0 );
        }
        break;
        case 2:
        if (( /* F_CHECK_QUIT_RETRY */ sub_3576( 0 )) == 1)
        {
            l_U145 = 3;
             /* WRITESCRIPTLOG */ sub_694( "SP", "eFailState = FAIL_WAITING_FOR_RESPAWN", 0 );
        }
        break;
        case 3:
        if ((IS_BULLET_CAMERA_ACTIVE() == 0) AND (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0) AND (IS_LAST_MAN_STANDING_ACTIVE() == 0)))
        {
            l_U145 = 4;
             /* WRITESCRIPTLOG */ sub_694( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
        }
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_694( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1339() )) == 0))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1339(), 0, 0 );
            if ((GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1385() )) == 1)
            {
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1385(), 0 );
            }
        }
        DO_SCREEN_FADE_OUT( 0 );
        DESTROY_ALL_CAMS();
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        AUDIO_MUSIC_SUSPEND( 500 );
         /* P_CLEANUP_ALL */ sub_5242();
         /* CLEANPED */ sub_4610( g_U2595 );
        l_U145 = 5;
         /* WRITESCRIPTLOG */ sub_694( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
        break;
        case 5:
         /* WRITESCRIPTLOG */ sub_694( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
         /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_5883( ref l_U148,  /* PLAYER_PED_ID */ sub_1385() );
         /* P_SETUP_PLAYER_RELATIONSHIPS */ sub_10375();
        l_U145 = 6;
         /* WRITESCRIPTLOG */ sub_694( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
        break;
        case 6:
         /* WRITESCRIPTLOG */ sub_694( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
        l_U144 = 1;
        l_U145 = 0;
         /* WRITESCRIPTLOG */ sub_694( "SP", "eFailState = FAIL_IDLE", 0 );
        break;
    }
    return;
}

/* RESTARTING_CHECKPOINT */ int sub_1615()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1385(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1339(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1339(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1385() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1385(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* IS_RESTART_ACTIVE */ void sub_2372()
{
    return g_U648;
}

/* P_RESET_CHECKPOINT_THREAD */ void sub_2530(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

/* F_HANDLE_DEATH_CAM_GIO_FENCE */ int sub_2611()
{
    int I;

    switch (l_U147)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_694( "SP", "eGioDeathCamState = DEATHCAM_SETUP", 0 );
         /* NIS_PRE_SETUP */ sub_2745( 1, 0, 0, 1 );
        AUDIO_MUSIC_SUSPEND( 5000 );
        for ( I = 0; I < l_U609; I++ )
        {
            if (((IS_PED_DEAD( l_U609[I] )) == 0) AND ((DOES_PED_EXIST( l_U609[I] )) == 1))
            {
                SET_PED_INVINCIBLE( l_U609[I], 1 );
                SET_PED_PROOFS( l_U609[I], 1, 1, 1, 1, 1 );
            }
        }
         /* CREATETIMER */ sub_3044( ref l_U552, 0, 1, 0 );
         /* STARTTIMER */ sub_3194( ref l_U552 );
        l_U147 = 2;
         /* WRITESCRIPTLOG */ sub_694( "SP", "eGioDeathCamState = DEATHCAM_PLAYING", 0 );
        case 2:
        if ((l_U552._fU16 == 1) || (( /* ISTIMERDONE */ sub_3383( ref l_U552 )) == 1))
        {
            if (( /* F_CHECK_QUIT_RETRY */ sub_3576( 0 )) == 1)
            {
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
                DO_SCREEN_FADE_OUT( 0 );
                 /* CLEANPED */ sub_4610( g_U2595 );
                 /* CLEANPEDARRAY */ sub_4699( ref l_U609 );
                l_U147 = 0;
                 /* WRITESCRIPTLOG */ sub_694( "SP", "eGioDeathCamState = DEATHCAM_IDLE", 0 );
                return 1;
            }
        }
        break;
    }
    return 0;
}

/* NIS_PRE_SETUP */ void sub_2745(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1339(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1385(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1385() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1385(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* CREATETIMER */ void sub_3044(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_3194(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* ISTIMERDONE */ int sub_3383(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* F_CHECK_QUIT_RETRY */ int sub_3576(int iParam0)
{
    iParam0 = 1;
    switch (l_U41)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_3658( ref l_U43 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )))
            {
                l_U42 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_3044( ref l_U43, l_U42, 1, 1 );
             /* STARTTIMER */ sub_3194( ref l_U43 );
        }
        if ( /* ISTIMERDONE */ sub_3383( ref l_U43 ))
        {
             /* WRITESCRIPTLOG */ sub_694( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1339() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1339(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U41 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U41 = 2;
            }
            else
            {
                l_U41 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_694( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_4141();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_694( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_4141();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_3658(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_4141()
{
     /* WRITESCRIPTLOG */ sub_694( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_4216( ref l_U43 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1339() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1339(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U40 = 0;
    l_U40 = l_U40;
    l_U41 = 0;
    return;
}

/* RESETTIMER */ void sub_4216(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* CLEANPED */ void sub_4610(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CLEANPEDARRAY */ void sub_4699(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_4610( (uParam0^)[I] );
    }
    return;
}

/* P_CLEANUP_ALL */ void sub_5242()
{
     /* WRITESCRIPTLOG */ sub_694( "SP", "P_CLEANUP_ALL", 0 );
    REMOVE_ALL_PICKUPS_AND_PLACEMENTS_OF_TYPE( 1216559076 );
    ISEQ_UNREGISTER_ENTITY( 1050158099, "gio" );
    ISEQ_TERMINATE( 1050158099 );
     /* CLEANPEDARRAY */ sub_4699( ref l_U609 );
    if (g_U764 < 2)
    {
         /* CLEANOBJECT */ sub_5363( g_U2604 );
         /* CLEANOBJECT */ sub_5363( g_U2605 );
         /* CLEANOBJECT */ sub_5363( g_U2606 );
         /* CLEANOBJECT */ sub_5363( g_U2607 );
         /* CLEANOBJECT */ sub_5363( g_U2608 );
         /* CLEANOBJECT */ sub_5363( g_U2609 );
         /* CLEANOBJECT */ sub_5363( g_U2610 );
         /* CLEANOBJECT */ sub_5363( g_U2611 );
         /* CLEANOBJECT */ sub_5363( g_U2612 );
         /* CLEANOBJECT */ sub_5363( g_U2613 );
         /* CLEANOBJECT */ sub_5363( g_U2614 );
    }
     /* CLEANPLACEMENT */ sub_5524( g_U667._fU0 );
     /* P_STOP_SP_CHALLENGES */ sub_5584();
    return;
}

/* CLEANOBJECT */ void sub_5363(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* CLEANPLACEMENT */ void sub_5524(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

/* P_STOP_SP_CHALLENGES */ void sub_5584()
{
     /* WRITESCRIPTLOG */ sub_694( "CCB", "P_STOP_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_694( "CCB", "Stopping the Bus_Depot_Junk_Snipers context...", 0 );
    END_CONTEXT( "Bus_Depot_Junk_Snipers" );
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_5883(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_694( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_6102( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_7266( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_7580( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_8059( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_7580( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_8059( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_7580( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_8059( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_8375( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_8059( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_8375( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_8059( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_8947( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_9149( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1385(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_694( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_6102(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_6164( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_6164(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_7266(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_7580(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_7984( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* WRITE_STRING */ void sub_7984(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_8059(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_8375(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_7984( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_8947(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_9149(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_6164( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_9247( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_9247(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_SETUP_PLAYER_RELATIONSHIPS */ void sub_10375()
{
     /* WRITESCRIPTLOG */ sub_694( "SP", "P_SETUP_PLAYER_RELATIONSHIPS", 0 );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0)
    {
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_1385(), 0, 1 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_1385(), 0, 2 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_1385(), 0, 6 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_1385(), 0, 7 );
    }
    return;
}

/* P_HANDLE_EVENTS */ void sub_10725()
{
    unknown uVar2;
    float fVar3;
    float fVar4;
    unknown uVar5;
    int I;

    fVar3 = -51.80159000;
    fVar4 = -12.45863000;
    switch (l_U144)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_694( "SP", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
         /* P_INITIALIZE_SCRIPT_DATA */ sub_10956();
         /* P_INITIALIZE_GAMEPLAY_STRUCTS */ sub_11255();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U144 = 2;
         /* WRITESCRIPTLOG */ sub_694( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        case 2:
         /* WRITESCRIPTLOG */ sub_694( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_12911( -1204387800, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_12911( g_U2100, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_12911( g_U2127, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_12911( g_U2109, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_12911( g_U2143, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_12911( g_U2145, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_12911( g_U2147, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_12911( g_U2107, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_12911( g_U758, ref g_U910 );
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_15854( g_U2854, ref g_U1211 );
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_15854( g_U2856, ref g_U1211 );
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_15854( g_U2855, ref g_U1211 );
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_15854( g_U2858, ref g_U1211 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_17834( ref g_U1952, ref g_U1369 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_17834( ref g_U1904, ref g_U1369 );
         /* P_STREAMREQ_ISEQ_INSERT */ sub_19731( 1050158099, ref g_U1272 );
        if (g_U764 < 2)
        {
            if (((CUTSCENE_NAMED_IS_LOADING( "mid_02_bus_v2_concat" )) == 0) AND ((CUTSCENE_IS_LOADED( "mid_02_bus_v2_concat" )) == 0))
            {
                PRE_STREAM_SEAMLESS_CUTSCENE( "mid_02_bus_v2_concat" );
            }
        }
        l_U144 = 3;
         /* WRITESCRIPTLOG */ sub_694( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        case 3:
        if (( /* F_STREAMREQ_ALL_ASSETS_LOADED */ sub_22734( ref g_U910, ref g_U1211, ref g_U1272, ref g_U1369, ref g_U1474, ref g_U1535, ref g_U1704, ref g_U1757 )) == 1)
        {
            l_U144 = 4;
             /* WRITESCRIPTLOG */ sub_694( "SP", "eCheckpointState = CP_SETUP_START_POINT", 0 );
            break;
        }
        return;
        case 4:
         /* WRITESCRIPTLOG */ sub_694( "SP", "eCheckpointState = CP_SETUP_START_POINT", 0 );
         /* P_GLOBAL_CREATE_JUNKYARD_FENCE */ sub_26095();
         /* P_GLOBAL_CREATE_FUEL_DEPOT_OBJECTS */ sub_26829( 0 );
         /* P_CREATE_S_BUS_GG_FN_02 */ sub_28203();
         /* P_SETUP_GIOVANNA */ sub_29174();
        if ((l_U184 == 0) AND (g_U763 == 2))
        {
            l_U184 = 1;
            if (( /* HAS_SAVEFILE_LOADED */ sub_30631( ref l_U148 )) == 0)
            {
                 /* F_GIVEPEDWEAPON */ sub_8375(  /* PLAYER_PED_ID */ sub_1385(), g_U2854, 200, 0, 0 );
            }
            l_U144 = 5;
             /* WRITESCRIPTLOG */ sub_694( "SP", "eCheckpointState = CP_DEBUG_GIVE_PLAYER_WEAPON", 0 );
        }
        else
        {
            l_U144 = 8;
             /* WRITESCRIPTLOG */ sub_694( "SP", "eCheckpointState = CP_HANDLE_SPAWN_SNIPER_ENEMIES", 0 );
        }
        break;
        case 5:
         /* WRITESCRIPTLOG */ sub_694( "SP", "eCheckpointState = CP_DEBUG_GIVE_PLAYER_WEAPON", 0 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0)
        {
            uVar5 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1385(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                l_U144 = 8;
                 /* WRITESCRIPTLOG */ sub_694( "SP", "eCheckpointState = CP_HANDLE_SPAWN_SNIPER_ENEMIES", 0 );
            }
            else
            {
                return;
            }
            break;
        }
        return;
        case 8:
         /* WRITESCRIPTLOG */ sub_694( "SP", "eCheckpointState = CP_HANDLE_SPAWN_SNIPER_ENEMIES", 0 );
        if (( /* F_HANDLE_SPAWN_SNIPER_ENEMIES */ sub_31260()) == 1)
        {
            if (g_U764 < 2)
            {
                l_U144 = 9;
                 /* WRITESCRIPTLOG */ sub_694( "SP", "eCheckpointState = CP_WAITING_FOR_HANDOFF", 0 );
            }
            else
            {
                l_U144 = 11;
                 /* WRITESCRIPTLOG */ sub_694( "SP", "eCheckpointState = CP_HANDLE_SNIPERS_BLENDOUT", 0 );
            }
        }
        break;
        case 9:
        if (g_U2864 == 1)
        {
            l_U146 = 1;
            l_U144 = 10;
             /* WRITESCRIPTLOG */ sub_694( "SP", "eCheckpointState = CP_HANDLE_SNIPERS_CUTSCENE", 0 );
            break;
        }
        return;
        case 10:
        if (( /* F_HANDLE_SNIPERS_CUTSCENE */ sub_33049()) == 1)
        {
            l_U144 = 11;
             /* WRITESCRIPTLOG */ sub_694( "SP", "eCheckpointState = CP_HANDLE_SNIPERS_BLENDOUT", 0 );
            break;
        }
        return;
        case 11:
        if (g_U764 == 2)
        {
            for ( I = 0; I < l_U609; I++ )
            {
                if (((IS_PED_DEAD( l_U609[I] )) == 0) AND ((DOES_PED_EXIST( l_U609[I] )) == 1))
                {
                    SET_PED_VISIBLE( l_U609[I], 1 );
                }
            }
            if ((ISEQ_QUERY_STATE( 1050158099, 3 )) == 0)
            {
                 /* TELEPORTPED */ sub_37569( g_U2595, l_U630, l_U633 );
                ISEQ_REGISTER_ENTITY( 1050158099, "gio", g_U2595, 0 );
                ISEQ_START( 1050158099 );
                 /* TELEPORTPED */ sub_37569(  /* PLAYER_PED_ID */ sub_1385(), l_U626, l_U629 );
                if ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1339() )) == 0)
                {
                    SNAP_PLAYER_TO_COVERPOINT(  /* PLAYER_ID */ sub_1339(), "GenCover", "71C76B7F_C2E1D0A7_Corner1", 1 );
                }
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U634, 1065353216, 0 );
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U635, 1065353216, 0 );
            }
            AUDIO_MUSIC_FORCE_TRACK( "BUSDEPOT_ACTION_SONG_03", "BUSDEPOT_03_2_5", "", 0.00000000, 5000, 7000, -1082130432, 0 );
        }
        else
        {
            AUDIO_MUSIC_FORCE_TRACK( "BUSDEPOT_ACTION_SONG_03", "BUSDEPOT_03_2_5", "", 0.00000000, 2000, 7000, -1082130432, 0 );
        }
        l_U144 = 12;
         /* WRITESCRIPTLOG */ sub_694( "SP", "eCheckpointState = CP_SETUP_SNIPERS_FIGHT", 0 );
        break;
        case 12:
         /* WRITESCRIPTLOG */ sub_694( "SP", "eCheckpointState = CP_SETUP_SNIPERS_FIGHT", 0 );
        if (((IS_PED_DEAD( l_U609[0] )) == 0) AND ((DOES_PED_EXIST( l_U609[0] )) == 1))
        {
            ;
        }
        if (((IS_PED_DEAD( l_U609[0] )) == 0) AND ((DOES_PED_EXIST( l_U609[0] )) == 1))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( l_U609[0], 0, 0 ) )) == 0)
            {
                l_U618 =  /* F_GIVEPEDWEAPON */ sub_8375( l_U609[0], g_U2858, 25000, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( l_U618 )) == 1)
                {
                    ENABLE_WEAPON_ATTACHMENT( l_U618, 13, 1 );
                    TOGGLE_WEAPON_ATTACHMENT( l_U618, 13, 0 );
                }
            }
        }
        if (((IS_PED_DEAD( l_U609[1] )) == 0) AND ((DOES_PED_EXIST( l_U609[1] )) == 1))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( l_U609[1], 0, 0 ) )) == 0)
            {
                l_U619 =  /* F_GIVEPEDWEAPON */ sub_8375( l_U609[1], g_U2858, 25000, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( l_U619 )) == 1)
                {
                    ENABLE_WEAPON_ATTACHMENT( l_U619, 13, 1 );
                    TOGGLE_WEAPON_ATTACHMENT( l_U619, 13, 0 );
                }
            }
        }
         /* P_ENABLE_LASERS_1 */ sub_37068();
         /* P_ENABLE_LASERS_2 */ sub_37216();
         /* P_START_SNIPERS_SHOOTING_AT_GIO */ sub_38416();
        l_U622 = 1;
         /* NIS_POST_SETUP */ sub_39493( 1, 1 );
        DO_SCREEN_FADE_IN( 0 );
        if ((l_U148._fU0 == 0) || (g_U764 < 2))
        {
            g_U764 = 2;
             /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_39881( ref l_U148, g_U764,  /* PLAYER_PED_ID */ sub_1385(), g_U2339[2], g_U2466[2], g_U2509[2], g_U2552[2], 1 );
        }
         /* CREATETIMER */ sub_3044( ref l_U435, 1200, 1, 0 );
         /* STARTTIMER */ sub_3194( ref l_U435 );
         /* CREATETIMER */ sub_3044( ref l_U453, 4000, 1, 0 );
         /* STARTTIMER */ sub_3194( ref l_U453 );
         /* CREATETIMER */ sub_3044( ref l_U462, 6250, 1, 0 );
         /* STARTTIMER */ sub_3194( ref l_U462 );
         /* CREATETIMER */ sub_3044( ref l_U444, 14000, 1, 0 );
         /* STARTTIMER */ sub_3194( ref l_U444 );
         /* CREATETIMER */ sub_3044( ref l_U480, 15000, 1, 0 );
         /* STARTTIMER */ sub_3194( ref l_U480 );
         /* CREATETIMER */ sub_3044( ref l_U489, 15000, 1, 0 );
         /* STARTTIMER */ sub_3194( ref l_U489 );
         /* P_START_SP_CHALLENGES */ sub_44617();
        l_U144 = 13;
         /* WRITESCRIPTLOG */ sub_694( "SP", "eCheckpointState = CP_HANDLE_SNIPERS_FIGHT", 0 );
        break;
        case 13:
        if (( /* ISTIMERDONE */ sub_3383( ref l_U471 )) == 1)
        {
            if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
            {
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_44924( ref l_U638 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 0,  /* PLAYER_PED_ID */ sub_1385(), "MAX", ref l_U638, 2, 0 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 1, g_U2595, "GIOVANNA", ref l_U638, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_45307( "SBUS_JYGC", ref l_U638, 7, 1 );
            }
        }
        if ((l_U444._fU16 == 0) || (( /* ISTIMERDONE */ sub_3383( ref l_U444 )) == 1))
        {
            if (l_U623 == 0)
            {
                for ( I = 0; I < l_U609; I++ )
                {
                    if (((IS_PED_DEAD( l_U609[I] )) == 0) AND (((DOES_PED_EXIST( l_U609[I] )) == 1) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))))
                    {
                        SET_PED_CAN_INITIATE_BULLET_CAM( l_U609[I], 1 );
                         /* P_PED_REGISTER_AND_LOCK_TARGET */ sub_38565( l_U609[I], g_U2595 );
                    }
                }
            }
        }
        if (( /* ISTIMERDONE */ sub_3383( ref l_U453 )) == 1)
        {
            if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
            {
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_44924( ref l_U688 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 0,  /* PLAYER_PED_ID */ sub_1385(), "MAX", ref l_U688, 2, 0 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 1, g_U2595, "GIOVANNA", ref l_U688, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_45307( "SBUS_VIG02C", ref l_U688, 7, 1 );
            }
        }
        if (l_U624 == 0)
        {
            if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND (l_U623 == 0)))
            {
                if ((l_U462._fU16 == 1) || (( /* ISTIMERDONE */ sub_3383( ref l_U462 )) == 1))
                {
                     /* P_GIO_KILLED_BY_SNIPERS */ sub_46600();
                    l_U624 = 1;
                }
            }
        }
        if (( /* F_SHOULD_GIOVANNA_TALK_MAX_CLOSE */ sub_47133()) == 1)
        {
             /* P_DIAL_GIO_TALK_MAX_CLOSE */ sub_47391();
             /* CREATETIMER */ sub_3044( ref l_U480, GET_RANDOM_INT_IN_RANGE( 20000, 25000 ), 1, 0 );
             /* STARTTIMER */ sub_3194( ref l_U480 );
             /* CREATETIMER */ sub_3044( ref l_U489, GET_RANDOM_INT_IN_RANGE( 20000, 25000 ), 1, 0 );
             /* STARTTIMER */ sub_3194( ref l_U489 );
        }
        if (( /* F_SHOULD_GIOVANNA_TALK_MAX_FAR */ sub_47786()) == 1)
        {
             /* P_DIAL_GIO_TALK_MAX_FAR */ sub_47975();
             /* CREATETIMER */ sub_3044( ref l_U489, GET_RANDOM_INT_IN_RANGE( 10000, 15000 ), 1, 0 );
             /* STARTTIMER */ sub_3194( ref l_U489 );
        }
         /* P_HANDLE_VIG_02B */ sub_48222();
        if (IS_ROBO_TESTING() == 1)
        {
            if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_49725( ref l_U413, 0 ))
            {
                 /* P_KILL_PEDS_IN_ARRAY */ sub_49864( ref l_U609 );
                 /* WRITESCRIPTLOG */ sub_694( "MRB", "Robotester has killed your Snipers", 0 );
            }
        }
        if (l_U622 == 1)
        {
            if (l_U623 == 0)
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0)
                {
                    if (( /* F_HAS_MAX_SHOT_AT_SNIPERS */ sub_50107()) == 1)
                    {
                         /* P_START_SNIPERS_SHOOTING_AT_MAX */ sub_50374();
                         /* P_START_CHECKPOINT_THREAD */ sub_51039( ref g_U765[3] );
                        l_U623 = 1;
                    }
                }
            }
        }
        if (l_U623 == 1)
        {
            if ((l_U613 == 0) AND (( /* F_ISPEDINTRIGGERBOX */ sub_47223(  /* PLAYER_PED_ID */ sub_1385(), l_U224 )) == 1))
            {
                if (((IS_PED_DEAD( l_U609[0] )) == 0) AND ((DOES_PED_EXIST( l_U609[0] )) == 1))
                {
                    CLEAR_PED_TASKS( l_U609[0] );
                    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U609[0], 1 );
                }
                if (((IS_PED_DEAD( l_U609[1] )) == 0) AND ((DOES_PED_EXIST( l_U609[1] )) == 1))
                {
                    CLEAR_PED_TASKS( l_U609[1] );
                    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U609[1], 1 );
                }
                 /* WRITESCRIPTLOG */ sub_694( "SP", "Snipers paused", 0 );
                l_U613 = 1;
            }
            else if ((l_U613 == 1) AND (( /* F_ISPEDINTRIGGERBOX */ sub_47223(  /* PLAYER_PED_ID */ sub_1385(), l_U224 )) == 0))
            {
                if (((IS_PED_DEAD( l_U609[0] )) == 0) AND ((DOES_PED_EXIST( l_U609[0] )) == 1))
                {
                    CLEAR_PED_TASKS( l_U609[0] );
                    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U609[0], 1 );
                    TASK_SHOOT_AT_PED( l_U609[0],  /* PLAYER_PED_ID */ sub_1385(), -1, 0, 0, 0, 0 );
                }
                if (((IS_PED_DEAD( l_U609[1] )) == 0) AND ((DOES_PED_EXIST( l_U609[1] )) == 1))
                {
                    CLEAR_PED_TASKS( l_U609[1] );
                    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U609[1], 1 );
                    TASK_SHOOT_AT_PED( l_U609[1],  /* PLAYER_PED_ID */ sub_1385(), -1, 0, 0, 0, 0 );
                }
                 /* WRITESCRIPTLOG */ sub_694( "SP", "Snipers resume firing at player", 0 );
                l_U613 = 0;
            }
        }
        if (l_U615 == 0)
        {
            if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_51613( ref l_U609 )) == 1)))
            {
                l_U614 =  /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_51758( ref l_U609 );
                if (((IS_PED_DEAD( l_U614 )) == 0) AND ((DOES_PED_EXIST( l_U614 )) == 1))
                {
                    FORCE_PED_TO_USE_DEATH_SUGGESTION_WHEN_SHOT( l_U614, 1, 0, 1, 1, 1 );
                    if (l_U614 == l_U609[0])
                    {
                        SET_BULLET_CAM_PREF( l_U614, l_U617, l_U617, l_U617, l_U617, 1, 0, 0, 0, 0, 0, 0, 0 );
                    }
                    else if (l_U614 == l_U609[1])
                    {
                        SET_BULLET_CAM_PREF( l_U614, l_U616, l_U616, l_U616, l_U616, 1, 0, 0, 0, 0, 0, 0, 0 );
                    }
                    l_U615 = 1;
                }
            }
        }
        if (l_U625 == 0)
        {
            if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_51613( ref l_U609 )) == 0)
            {
                AUDIO_MUSIC_FORCE_TRACK( "BUSDEPOT_ACTION_SONG_03", "BUSDEPOT_03_2", "", 0.00000000, 5000, 5000, -1082130432, 0 );
                l_U625 = 1;
            }
        }
        if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_BULLET_CAMERA_ACTIVE() == 0) AND (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_51613( ref l_U609 )) == 0)))
        {
             /* P_RESET_CONTEXTUAL_DIALOGUE */ sub_52249();
             /* CREATETIMER */ sub_3044( ref l_U471, 1500, 1, 0 );
             /* STARTTIMER */ sub_3194( ref l_U471 );
            l_U144 = 14;
             /* WRITESCRIPTLOG */ sub_694( "SP", "eCheckpointState = CP_HANDLE_LEAVE_JUNKYARD", 0 );
        }
        break;
        case 14:
         /* P_HANDLE_VIG_02B */ sub_48222();
         /* P_HANDLE_LEAVE_JUNKYARD_DIALOGUE */ sub_52476();
         /* P_HANDLE_CONTEXTUAL_DIALOGUE */ sub_54186();
        if (( /* F_ISPLAYERINTRIGGERBOX */ sub_52782( l_U329 )) == 1)
        {
            if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0)
            {
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1385(), 1 );
            }
        }
        else if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0)
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1385(), 0 );
        }
        if ((l_U543._fU20 == 0) AND ((l_U543._fU16 == 0) AND (( /* F_ISPLAYERINTRIGGERBOX */ sub_52782( l_U329 )) == 1)))
        {
             /* CREATETIMER */ sub_3044( ref l_U543, 400, 1, 0 );
             /* STARTTIMER */ sub_3194( ref l_U543 );
        }
        if ((( /* ISTIMERDONE */ sub_3383( ref l_U543 )) == 1) || (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_49725( ref l_U392, 0 )) == 1))
        {
            g_U2865 = 1;
            l_U144 = 15;
             /* WRITESCRIPTLOG */ sub_694( "SP", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 15:
         /* WRITESCRIPTLOG */ sub_694( "SP", "eCheckpointState = CP_FINISHED", 0 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U144 = 0;
         /* WRITESCRIPTLOG */ sub_694( "SP", "eCheckpointState = CP_IDLE", 0 );
        break;
    }
    return;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_10956()
{
     /* WRITESCRIPTLOG */ sub_694( "SP", "P_INITIALIZE_SCRIPT_DATA", 0 );
    l_U612 = 0;
    l_U620 = 0;
    l_U621 = 0;
    l_U622 = 0;
    l_U623 = 0;
    l_U624 = 0;
    l_U625 = 0;
    l_U636 = 0;
    l_U637 = 0;
    l_U613 = 0;
    l_U615 = 0;
    l_U574 = 0;
    l_U575 = 0;
     /* RESETTIMER */ sub_4216( ref l_U435 );
     /* RESETTIMER */ sub_4216( ref l_U462 );
     /* RESETTIMER */ sub_4216( ref l_U444 );
     /* RESETTIMER */ sub_4216( ref l_U453 );
     /* RESETTIMER */ sub_4216( ref l_U471 );
     /* RESETTIMER */ sub_4216( ref l_U480 );
     /* RESETTIMER */ sub_4216( ref l_U489 );
     /* RESETTIMER */ sub_4216( ref l_U498 );
     /* RESETTIMER */ sub_4216( ref l_U507 );
     /* RESETTIMER */ sub_4216( ref l_U516 );
     /* RESETTIMER */ sub_4216( ref l_U525 );
     /* RESETTIMER */ sub_4216( ref l_U543 );
     /* RESETTIMER */ sub_4216( ref l_U552 );
     /* RESETTIMER */ sub_4216( ref l_U534 );
    l_U146 = 0;
    l_U147 = 0;
    return;
}

/* P_INITIALIZE_GAMEPLAY_STRUCTS */ void sub_11255()
{
     /* WRITESCRIPTLOG */ sub_694( "SP", "P_INITIALIZE_GAMEPLAY_STRUCTS", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_11365( ref l_U561, l_U630, l_U633, -1257669444, 26, 6, 0, 0, 1 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_11365( ref l_U582[0], -36.79000000, -37.71000000, 10.40000000, 180.00000000, -1116083088, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_11365( ref l_U582[1], -37.17000000, -39.11000000, 10.40000000, 180.00000000, -1528292077, 7, 3, 2, 0, 0 );
     /* P_CREATETRIGGERBOX */ sub_11661( ref l_U203, "TRIG_GIO_AT_FENCE", -34.27000000, -62.80000000, -1.22000000, 4.00000000, 5.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11661( ref l_U224, "TRIG_BEHIND_BUS", -27.86000000, -62.29000000, -1.24000000, 14.34000000, 7.31000000, 4.00000000, 0.00000000, 0.00000000, 5.40000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11661( ref l_U245, "TRIG_GIO_CAN_SEE_MAX", -20.09000000, -62.23000000, -0.59000000, 32.62000000, 6.62000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11661( ref l_U266, "TRIG_GIO_FOUND_GATE_DIALOGUE_01", -19.96000000, -62.12000000, -0.33000000, 12.12000000, 5.67000000, 4.00000000, 0.00929826, -0.15665700, 5.82000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11661( ref l_U287, "TRIG_GIO_FOUND_GATE_DIALOGUE_02", -24.37000000, -62.46000000, -0.33000000, 2.00000000, 6.08000000, 4.00000000, 0.00000000, 0.00000000, 5.82000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11661( ref l_U308, "TRIG_NO_GIO_DIALOGUE", -29.99000000, -62.91000000, -0.33000000, 8.00000000, 6.08000000, 4.00000000, 0.00000000, 0.00000000, 5.82000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11661( ref l_U329, "TRIG_FORCE_MAX_WALK", -31.11000000, -63.01000000, -1.23000000, 10.62000000, 5.66000000, 4.00000000, 0.00000000, 0.00000000, 5.40000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11661( ref l_U350, "TRIG_HIDE_SEARCH_ENEMIES_01", -10.55000000, -46.74000000, -0.49000000, 1.64000000, 8.20000000, 3.00000000, 0.00000000, 0.00000000, -82.60000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11661( ref l_U371, "TRIG_HIDE_SEARCH_ENEMIES_02", -12.60000000, -49.91000000, -0.49000000, 11.70000000, 3.38000000, 3.00000000, 0.00000000, 0.00000000, -81.60000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11661( ref l_U392, "TRIG_START_FUEL_DEPOT", -37.16000000, -63.74000000, -0.60000000, 19.03000000, 5.66000000, 4.00000000, 0.00000000, 0.00000000, 5.40000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11661( ref l_U413, "TRIGGER_KILL_ALL_SNIPERS", -17.89000000, -59.74000000, -0.08000000, 8.60000000, 2.27000000, 2.97000000, 0.00000000, 0.00000000, -76.32000000, 1 );
     /* P_CREATETETHERBOX */ sub_12689( ref l_U434, "TETH_ENEMY_COMBAT_AREA", -22.49000000, -52.63000000, 0.00000000, 26.08000000, 24.21000000, 3.69000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_11365(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATETRIGGERBOX */ void sub_11661(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATETETHERBOX */ void sub_12689(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT */ void sub_12911(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 =  /* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ sub_12978( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar4 );
            PRINTNL();
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_13236( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Inserting MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ int sub_12978(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_13236( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is loading: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_13236( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                     /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_13236( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_14767( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being removed: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_13236( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_13236( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ void sub_13236(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_13297( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ int sub_13297(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID is active: {} ###", 1, 513, (uParam1^)[I] );
                if ((uParam1^)[I] == iParam0)
                {
                    DISPLAYF( "The THREADID was already requested by this thread!!!", 0 );
                    DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                    (uParam1^)[I] = nil;
                    Result = I;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The THREADID index was requested by another thread!!! {} ###", 1, 513, I );
                }
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is NOT active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

/* P_STREAMREQ_THREADID_RESET */ void sub_14767(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT */ void sub_15854(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ sub_15908( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_16169( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ int sub_15908(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_16169( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is loading: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_16169( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The WEAPON_TYPE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_16169( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_14767( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being removed: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_16169( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            DISPLAYF( "The WEAPON_TYPE asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_16169( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ void sub_16169(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_13297( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_INSERT */ void sub_17834(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ sub_17886( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ANIM_DICT asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_18138( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ int sub_17886(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_18138( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_18138( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ANIM_DICT asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_18138( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_14767( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_18138( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ANIM_DICT asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ANIM_DICT: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
             /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_18138( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ void sub_18138(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_13297( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ISEQ_INSERT */ void sub_19731(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 =  /* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ sub_19792( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar12 );
            PRINTNL();
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar4 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
             /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_20042( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

/* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ int sub_19792(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_20042( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is loading: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_20042( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                        DISPLAYF( "The ISEQ asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_20042( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loading: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_20042( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### Re-requesting ISEQ: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_14767( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_14767( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being removed: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_20042( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar5 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_20042( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ISEQ_THREADID_SET_ID */ void sub_20042(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_13297( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_ALL_ASSETS_LOADED */ int sub_22734(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    if ( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_22778( uParam0 ))
    {
        if ( /* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ sub_23178( uParam1 ))
        {
            if ( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_23582( uParam2 ))
            {
                if ( /* F_STREAMREQ_ANIM_DICT_IS_LOADED */ sub_23998( uParam3 ))
                {
                    if ( /* F_STREAMREQ_VEHICLE_RECORDING_IS_LOADED */ sub_24391( uParam4 ))
                    {
                        if ( /* F_STREAMREQ_ACTION_TREE_IS_LOADED */ sub_24813( uParam5 ))
                        {
                            if ( /* F_STREAMREQ_SCRIPT_STREAM_IS_LOADED */ sub_25193( uParam6 ))
                            {
                                if ( /* F_STREAMREQ_AUDIO_BANK_IS_LOADED */ sub_25581( uParam7 ))
                                {
                                    return 1;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return 0;
}

/* F_STREAMREQ_MODELNAMES_IS_LOADED */ int sub_22778(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be requested: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to load: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be removed: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ int sub_23178(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be requested: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to load: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be removed: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ISEQ_IS_LOADED */ int sub_23582(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be requested: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to load: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be removed: {} ###", 1, 1281, ref uVar3 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ANIM_DICT_IS_LOADED */ int sub_23998(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be requested: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to load: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be removed: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_VEHICLE_RECORDING_IS_LOADED */ int sub_24391(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to be requested: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to load: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to be removed: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ACTION_TREE_IS_LOADED */ int sub_24813(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_LOADED */ int sub_25193(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_AUDIO_BANK_IS_LOADED */ int sub_25581(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* P_GLOBAL_CREATE_JUNKYARD_FENCE */ void sub_26095()
{
     /* WRITESCRIPTLOG */ sub_694( "SP", "P_GLOBAL_CREATE_JUNKYARD_FENCE", 0 );
     /* CLEANOBJECT */ sub_5363( g_U2603 );
    g_U2603 =  /* CREATEOBJECTNOOFFSET */ sub_26232( g_U2127, -36.65540000, -63.29410000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( g_U2603 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U2603, 1 );
    }
    return;
}

/* CREATEOBJECTNOOFFSET */ void sub_26232(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_26365( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* LOADMODEL */ void sub_26365(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_7984( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_GLOBAL_CREATE_FUEL_DEPOT_OBJECTS */ void sub_26829(int iParam0)
{
     /* WRITESCRIPTLOG */ sub_694( "SP", "P_GLOBAL_CREATE_FUEL_DEPOT_OBJECTS", 0 );
     /* CLEANOBJECT */ sub_5363( g_U2608 );
    g_U2608 =  /* CREATEOBJECTNOOFFSET */ sub_26232( g_U2143, g_U2615, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    if ((DOES_OBJECT_EXIST( g_U2608 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U2608, 1 );
    }
     /* CLEANOBJECT */ sub_5363( g_U2609 );
    g_U2609 =  /* CREATEOBJECTNOOFFSET */ sub_26232( g_U2145, g_U2615, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    if ((DOES_OBJECT_EXIST( g_U2609 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U2609, 1 );
    }
    if (iParam0 == 1)
    {
         /* CLEANOBJECT */ sub_5363( g_U2606 );
        g_U2606 =  /* CREATEOBJECT */ sub_27145( g_U2128, -60.43800000, -53.14500000, 0.31200000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
        if ((DOES_OBJECT_EXIST( g_U2606 )) == 1)
        {
            FREEZE_OBJECT_POSITION( g_U2606, 1 );
            SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( g_U2606, 1 );
            SET_OBJECT_TARGETTABLE( g_U2606, 1 );
        }
         /* CLEANOBJECT */ sub_5363( g_U2607 );
        g_U2607 =  /* CREATEOBJECT */ sub_27145( g_U2128, -51.09500000, -53.14500000, 0.31200000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
        if ((DOES_OBJECT_EXIST( g_U2607 )) == 1)
        {
            FREEZE_OBJECT_POSITION( g_U2607, 1 );
            SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( g_U2607, 1 );
            SET_OBJECT_TARGETTABLE( g_U2607, 1 );
        }
    }
     /* CLEANOBJECT */ sub_5363( g_U2605 );
    g_U2605 =  /* CREATEOBJECTNOOFFSET */ sub_26232( g_U2107, -62.13600000, -49.23100000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    if ((DOES_OBJECT_EXIST( g_U2605 )) == 1)
    {
        ;
    }
     /* CLEANOBJECT */ sub_5363( g_U2610 );
    g_U2610 =  /* CREATEOBJECTNOOFFSET */ sub_26232( g_U2147, -52.94637000, -54.22243000, 4.61777400, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    if ((DOES_OBJECT_EXIST( g_U2610 )) == 1)
    {
        ;
    }
     /* CLEANOBJECT */ sub_5363( g_U2611 );
    g_U2611 =  /* CREATEOBJECTNOOFFSET */ sub_26232( g_U2147, -49.18108000, -53.25327000, 4.61777400, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    if ((DOES_OBJECT_EXIST( g_U2611 )) == 1)
    {
        ;
    }
     /* CLEANOBJECT */ sub_5363( g_U2612 );
    g_U2612 =  /* CREATEOBJECTNOOFFSET */ sub_26232( g_U2147, -56.07308000, -51.93821000, 4.61777400, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    if ((DOES_OBJECT_EXIST( g_U2612 )) == 1)
    {
        ;
    }
     /* CLEANOBJECT */ sub_5363( g_U2613 );
    g_U2613 =  /* CREATEOBJECTNOOFFSET */ sub_26232( g_U2147, -58.59797000, -54.28381000, 4.61777400, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    if ((DOES_OBJECT_EXIST( g_U2613 )) == 1)
    {
        ;
    }
     /* CLEANOBJECT */ sub_5363( g_U2614 );
    g_U2614 =  /* CREATEOBJECTNOOFFSET */ sub_26232( g_U2147, -62.33971000, -53.26115000, 4.61777400, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    if ((DOES_OBJECT_EXIST( g_U2614 )) == 1)
    {
        ;
    }
     /* CLEANOBJECT */ sub_5363( g_U2604 );
    g_U2604 =  /* CREATEOBJECT */ sub_27145( g_U2109, -56.58300000, -41.78900000, 3.28000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    if ((DOES_OBJECT_EXIST( g_U2604 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U2604, 1 );
    }
    return;
}

/* CREATEOBJECT */ void sub_27145(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_26365( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* P_CREATE_S_BUS_GG_FN_02 */ void sub_28203()
{
     /* WRITESCRIPTLOG */ sub_694( "CO", "P_CREATE_S_BUS_GG_FN_02", 0 );
     /* P_CREATECOLLECTIBLESTRUCT */ sub_28330( ref g_U667, g_U758, -1380233402, 1978811807, -22.53000000, -45.38000000, 0.51000000, 1.50000000, 0.00000000, 5.00000000, "" );
     /* P_CREATECOLLECTIBLE */ sub_28487( ref g_U667 );
    return;
}

/* P_CREATECOLLECTIBLESTRUCT */ void sub_28330(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_694( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* P_CREATECOLLECTIBLE */ void sub_28487(int iParam0)
{
     /* WRITESCRIPTLOG */ sub_694( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_28570( iParam0->_fU12 )) == 1)
        {
             /* WRITESCRIPTLOG */ sub_694( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_694( "CO", "has never been collected.", 0 );
        }
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_28570( iParam0->_fU12 )) == 0)
        {
             /* CLEANPLACEMENT */ sub_5524( iParam0->_fU0 );
            iParam0->_fU0 =  /* CREATEPLACEMENT */ sub_28840( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                     /* WRITESCRIPTLOG */ sub_694( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_694( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ int sub_28570(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

/* CREATEPLACEMENT */ void sub_28840(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a placement to exist: {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return Result;
}

/* P_SETUP_GIOVANNA */ void sub_29174()
{
     /* WRITESCRIPTLOG */ sub_694( "SP", "P_SETUP_GIOVANNA", 0 );
    if ((((IS_PED_DEAD( g_U2595 )) == 1) AND ((DOES_PED_EXIST( g_U2595 )) == 1)) || ((DOES_PED_EXIST( g_U2595 )) == 0))
    {
         /* CLEANPED */ sub_4610( g_U2595 );
        g_U2595 =  /* CREATEPED */ sub_29296( ref l_U561 );
         /* P_SETUP_GIO_ATTRIBUTES */ sub_30009();
    }
    if (NOT (IS_PED_DEAD( g_U2595 )))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( g_U2595, 1 );
        SET_BULLET_CAM_PREF( g_U2595, "GIO_KILL_CUSTOM_BUS_01", "GIO_KILL_CUSTOM_BUS_01", "GIO_KILL_CUSTOM_BUS_01", "GIO_KILL_CUSTOM_BUS_01", 0, 0, 0, 0, 0, 0, 0, 0 );
    }
    return;
}

/* CREATEPED */ void sub_29296(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_26365( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_29787( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_29888( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_29787(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_29888(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* P_SETUP_GIO_ATTRIBUTES */ void sub_30009()
{
     /* WRITESCRIPTLOG */ sub_694( "SP", "P_SETUP_GIO_ATTRIBUTES", 0 );
    if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
    {
        SET_PED_NAME_DEBUG( g_U2595, "piGiovanna" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2595, 1 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( g_U2595, 0 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2595, 1 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U2595, 1 );
        SET_PED_CAN_PUSH_PLAYER( g_U2595, 1 );
        SET_PED_GORE_FROM_PLAYER( g_U2595, 1 );
        SET_PED_GORE_FROM_NPC( g_U2595, 0 );
        SET_PED_CAN_BE_TARGETTED( g_U2595, 0 );
        SET_PED_AS_ONE_SHOT_KILL( g_U2595, 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( g_U2595, 1 );
        SET_BULLET_CAM_PREF( g_U2595, "QUICKCUT_FAILSAFE_01", "QUICKCUT_FAILSAFE_01", "QUICKCUT_FAILSAFE_01", "QUICKCUT_FAILSAFE_01", 1, 0, 0, 0, 0, 0, 0, 0 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0)
        {
            SET_PED_PRIMARY_LOOKAT( g_U2595,  /* PLAYER_PED_ID */ sub_1385() );
            SET_PED_DEFAULT_AIM_AT_PED( g_U2595,  /* PLAYER_PED_ID */ sub_1385() );
        }
    }
    return;
}

/* HAS_SAVEFILE_LOADED */ int sub_30631(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_694( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_5883( uParam0,  /* PLAYER_PED_ID */ sub_1385() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* F_HANDLE_SPAWN_SNIPER_ENEMIES */ int sub_31260()
{
    int iVar2;
    char[32] cVar3;

    iVar2 = l_U612;
    if (iVar2 == 0)
    {
         /* P_SETUP_AI_GROUP */ sub_31328( ref l_U576, 0.40000000, 0 );
    }
     /* CLEANPED */ sub_4610( l_U609[iVar2] );
    l_U609[iVar2] =  /* CREATEPED */ sub_29296( ref l_U582[iVar2] );
    if (((IS_PED_DEAD( l_U609[iVar2] )) == 0) AND ((DOES_PED_EXIST( l_U609[iVar2] )) == 1))
    {
        StrCopy( ref cVar3, "piEnemySnipers", 32 );
        ConcatString(ref cVar3, " ", 32);
        ConcatString(ref cVar3, iVar2, 32);
        SET_PED_NAME_DEBUG( l_U609[iVar2], ref cVar3 );
        SET_PED_AI_TEMPLATE( l_U609[iVar2], ref g_U2088 );
        SET_PED_COMBAT_MOVEMENT( l_U609[iVar2], 0 );
        SET_PED_HEALTH( l_U609[iVar2], 150, 0 );
        SET_PED_COMBAT_RANGE_MAX( l_U609[iVar2], 120.00000000 );
        SET_PED_ALERTNESS( l_U609[iVar2], 2 );
        SET_PED_EMOTION_STATE( l_U609[iVar2], 1 );
        SET_PED_HEARING_RANGE( l_U609[iVar2], 200.00000000 );
        SET_PED_SEEING_RANGE( l_U609[iVar2], 200.00000000, 75 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( l_U609[iVar2], 0 );
        SET_PED_PATH_CAN_USE_CLIMBOVERS( l_U609[iVar2], 0 );
        OVERRIDE_PED_FIRING_PATTERN( l_U609[iVar2], -511790439 );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_32065( l_U609[iVar2], ref l_U576 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U609[iVar2], 1 );
        SET_PED_VISIBLE( l_U609[iVar2], 0 );
        SET_PED_CAN_BE_TARGETTED( l_U609[iVar2], 0 );
        SET_PED_AIM_LOCKONABLE( l_U609[iVar2], 0 );
        SET_PED_PROOFS( l_U609[iVar2], 1, 1, 1, 1, 1 );
        SET_PED_GORE( l_U609[iVar2], 0 );
        SET_PED_RELATIONSHIP( l_U609[iVar2], 1, 0 );
        SET_PED_CAN_PUT_PLAYER_INTO_LMS( l_U609[iVar2], 0 );
        if (iVar2 == 0)
        {
            l_U618 =  /* F_GIVEPEDWEAPON */ sub_8375( l_U609[iVar2], g_U2858, 25000, 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( l_U618 )) == 1)
            {
                ENABLE_WEAPON_ATTACHMENT( l_U618, 13, 1 );
                TOGGLE_WEAPON_ATTACHMENT( l_U618, 13, 0 );
            }
        }
        else if (iVar2 == 1)
        {
            l_U619 =  /* F_GIVEPEDWEAPON */ sub_8375( l_U609[iVar2], g_U2858, 25000, 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( l_U619 )) == 1)
            {
                ENABLE_WEAPON_ATTACHMENT( l_U619, 13, 1 );
                TOGGLE_WEAPON_ATTACHMENT( l_U619, 13, 0 );
            }
        }
        l_U612++;
    }
    if (l_U612 == l_U609)
    {
        return 1;
    }
    return 0;
}

/* P_SETUP_AI_GROUP */ void sub_31328(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_32065(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_7984( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_31328( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_31328( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* F_HANDLE_SNIPERS_CUTSCENE */ int sub_33049()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;

    switch (l_U146)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_694( "SP", "eSniperCutsceneState = CUTSCENE_SETUP", 0 );
         /* NIS_PRE_SETUP */ sub_2745( 1, 0, 0, 1 );
        if (((CUTSCENE_NAMED_IS_LOADING( "mid_02_bus_v2_concat" )) == 0) AND ((CUTSCENE_IS_LOADED( "mid_02_bus_v2_concat" )) == 0))
        {
            PRE_STREAM_SEAMLESS_CUTSCENE( "mid_02_bus_v2_concat" );
        }
         /* P_STREAMREQ_ISEQ_INSERT */ sub_19731( 1050158099, ref g_U1272 );
        l_U146 = 3;
         /* WRITESCRIPTLOG */ sub_694( "SP", "eSniperCutsceneState = CUTSCENE_LOADING", 0 );
        case 3:
        if ((( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_23582( ref g_U1272 )) == 1) AND ((CUTSCENE_IS_LOADED( "mid_02_bus_v2_concat" )) == 1))
        {
            l_U146 = 4;
             /* WRITESCRIPTLOG */ sub_694( "SP", "eSniperCutsceneState = CUTSCENE_START", 0 );
            break;
        }
        return 0;
        case 4:
         /* WRITESCRIPTLOG */ sub_694( "SP", "eSniperCutsceneState = CUTSCENE_START", 0 );
        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1339() )) == 0))
        {
            CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_1385(), l_U626, l_U629 );
            CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "GenCover", "71C76B7F_C2E1D0A7_Corner1", 1, 1 );
            CUTSCENE_SET_COVER_CAMERA_DIRECTION( l_U634, l_U635 );
            CUTSCENE_OBJECT_OVERRIDE_VISIBILITY( "W_PI_PT92_Aa_H" );
        }
        if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2595, "Giov_Bus", 0 );
            CUTSCENE_REGISTER_PED_TELEPORT( g_U2595, l_U630, l_U633 );
            ISEQ_REGISTER_ENTITY( 1050158099, "gio", g_U2595, 0 );
        }
        if (((IS_PED_DEAD( l_U609[0] )) == 0) AND ((DOES_PED_EXIST( l_U609[0] )) == 1))
        {
            SET_PED_VISIBLE( l_U609[0], 1 );
            SET_PED_CAN_BE_TARGETTED( l_U609[0], 1 );
            SET_PED_AIM_LOCKONABLE( l_U609[0], 1 );
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U609[0], "M_Crac_Sold_JY^1", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U609[0], 0, 0 ), "W_AR_Rug30_Aa_H", 0 );
            CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U609[0], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
            CUTSCENE_REGISTER_PED_TELEPORT( l_U609[0], -36.56864000, -38.53708000, 10.39998000, 163.00000000 );
        }
        if (((IS_PED_DEAD( l_U609[1] )) == 0) AND ((DOES_PED_EXIST( l_U609[1] )) == 1))
        {
            SET_PED_VISIBLE( l_U609[1], 1 );
            SET_PED_CAN_BE_TARGETTED( l_U609[1], 1 );
            SET_PED_AIM_LOCKONABLE( l_U609[1], 1 );
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U609[1], "M_Crac_Sold_JY", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U609[1], 0, 0 ), "W_AR_Rug30_Aa_H^1", 0 );
            CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U609[1], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
            CUTSCENE_REGISTER_PED_TELEPORT( l_U609[1], -37.17000000, -39.11000000, 10.40000000, 163.00000000 );
        }
        CUTSCENE_REGISTER_ISEQ( 1050158099 );
        START_SEAMLESS_CUTSCENE();
        l_U146 = 5;
         /* WRITESCRIPTLOG */ sub_694( "SP", "eSniperCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        break;
        case 5:
         /* WRITESCRIPTLOG */ sub_694( "SP", "eSniperCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
         /* P_HIDE_SEARCH_ENEMIES */ sub_34475();
         /* P_PLAYER_HOLSTER_WEAPONS */ sub_34781( ref l_U185, 1, 1 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0)
        {
            uVar3 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_36157();
            if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1385(), uVar3, 0, 1 );
            }
        }
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        if ((AUDIO_MUSIC_IS_ONESHOT_PREPARED( 0 )) == 1)
        {
             /* WRITESCRIPTLOG */ sub_694( "SP", "PLAYING ONESHOT", 0 );
            AUDIO_MUSIC_PLAY_ONESHOT();
        }
        l_U146 = 6;
         /* WRITESCRIPTLOG */ sub_694( "SP", "eSniperCutsceneState = CUTSCENE_PLAYING", 0 );
        break;
        case 6:
        if (HAS_CUTSCENE_FINISHED() == 1)
        {
             /* P_UNHIDE_SEARCH_ENEMIES */ sub_36568();
            if (((CUTSCENE_NAMED_IS_LOADING( "mid_02_bus_v2_concat" )) == 1) || ((CUTSCENE_IS_LOADED( "mid_02_bus_v2_concat" )) == 1))
            {
                CLEAR_NAMED_CUTSCENE( "mid_02_bus_v2_concat" );
            }
            l_U146 = 0;
             /* WRITESCRIPTLOG */ sub_694( "SP", "eSniperCutsceneState = CUTSCENE_IDLE", 0 );
            return 1;
        }
        else
        {
            uVar4 = GET_CUTSCENE_SECTION_PLAYING();
            uVar5 = GET_CUTSCENE_TIME();
            iVar6 = GET_CUTSCENE_TIME_MS();
            PRINTSTRING( "[SP] SECTION: " );
            PRINTINT( uVar4 );
            PRINTSTRING( " Time: " );
            PRINTINT( uVar5 );
            PRINTSTRING( " Time MS: " );
            PRINTINT( iVar6 );
            PRINTNL();
            if (l_U620 == 0)
            {
                if (iVar6 >= 14100)
                {
                     /* P_ENABLE_LASERS_1 */ sub_37068();
                    l_U620 = 1;
                }
            }
            if (l_U621 == 0)
            {
                if (iVar6 >= 14400)
                {
                     /* P_ENABLE_LASERS_2 */ sub_37216();
                    l_U621 = 1;
                }
            }
        }
        break;
    }
    return 0;
}

/* P_HIDE_SEARCH_ENEMIES */ void sub_34475()
{
    int I;

     /* WRITESCRIPTLOG */ sub_694( "SP", "P_HIDE_SEARCH_ENEMIES", 0 );
    for ( I = 0; I < g_U2596; I++ )
    {
        if ((DOES_PED_EXIST( g_U2596[I] )) == 1)
        {
             /* WRITESCRIPTLOG */ sub_694( "SP", "Here 1", 0 );
            if (((IS_PED_DEAD( g_U2596[I] )) == 1) || ((IS_PED_DEAD( g_U2596[I] )) == 0))
            {
                 /* WRITESCRIPTLOG */ sub_694( "SP", "Here 2", 0 );
                if (((IS_PED_IN_GAMEPLAY_HELPER_BOX( g_U2596[I], ref l_U371._fU0 )) == 1) || ((IS_PED_IN_GAMEPLAY_HELPER_BOX( g_U2596[I], ref l_U350._fU0 )) == 1))
                {
                     /* WRITESCRIPTLOG */ sub_694( "SP", "Here 3", 0 );
                    SET_PED_VISIBLE( g_U2596[I], 0 );
                }
            }
        }
    }
    return;
}

/* P_PLAYER_HOLSTER_WEAPONS */ void sub_34781(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

     /* RESET_WEAPON_CONFIG */ sub_34820( iParam0 );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1385(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_35021( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if (( /* IS_WEAPON_TWO_HANDED */ sub_35275( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1385(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1385(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1385(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1385(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1385(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1385(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1385(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1385(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1385(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if (( /* IS_WEAPON_TWO_HANDED */ sub_35275( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1385(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1385(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1385(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

/* RESET_WEAPON_CONFIG */ void sub_34820(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

/* IS_WEAPON_SINGLE_HANDED */ int sub_35021(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* IS_WEAPON_TWO_HANDED */ int sub_35275(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ int sub_36157()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1385(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_35021( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1385(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1385(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1385(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

/* P_UNHIDE_SEARCH_ENEMIES */ void sub_36568()
{
    int I;

     /* WRITESCRIPTLOG */ sub_694( "SP", "P_UNHIDE_SEARCH_ENEMIES", 0 );
    for ( I = 0; I < g_U2596; I++ )
    {
        if ((DOES_PED_EXIST( g_U2596[I] )) == 1)
        {
            if (((IS_PED_DEAD( g_U2596[I] )) == 1) || ((IS_PED_DEAD( g_U2596[I] )) == 0))
            {
                SET_PED_VISIBLE( g_U2596[I], 1 );
            }
        }
    }
    return;
}

/* P_ENABLE_LASERS_1 */ void sub_37068()
{
     /* WRITESCRIPTLOG */ sub_694( "rw", "P_ENABLE_LASERS_1", 0 );
    if ((GET_DOES_WEAPON_EXIST( l_U618 )) == 1)
    {
        TOGGLE_WEAPON_ATTACHMENT( l_U618, 13, 1 );
        SET_LASER_SIGHT_ATTACHMENT( l_U618, -938171172 );
    }
    return;
}

/* P_ENABLE_LASERS_2 */ void sub_37216()
{
     /* WRITESCRIPTLOG */ sub_694( "rw", "P_ENABLE_LASERS_2", 0 );
    if ((GET_DOES_WEAPON_EXIST( l_U619 )) == 1)
    {
        TOGGLE_WEAPON_ATTACHMENT( l_U619, 13, 1 );
        SET_LASER_SIGHT_ATTACHMENT( l_U619, -938171172 );
    }
    return;
}

/* TELEPORTPED */ void sub_37569(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_START_SNIPERS_SHOOTING_AT_GIO */ void sub_38416()
{
    unknown uVar2;
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_694( "SP", "P_START_SNIPERS_SHOOTING_AT_GIO", 0 );
    if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
    {
        SET_PED_CAN_BE_TARGETTED( g_U2595, 1 );
         /* P_PED_REGISTER_AND_LOCK_TARGET */ sub_38565( l_U609[0], g_U2595 );
        if (((IS_PED_DEAD( l_U609[0] )) == 0) AND ((DOES_PED_EXIST( l_U609[0] )) == 1))
        {
             /* WRITESCRIPTLOG */ sub_694( "SP", "Sniper 0 Aiming at Gio", 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U609[0], 1 );
            SET_PED_IGNORE_LOS_CHECKS( l_U609[0], 1 );
            SET_PED_COMBAT_ATTRIBUTES( l_U609[0], 4096, 0 );
            SET_PED_RELATIONSHIP( l_U609[0], 2, 0 );
            SET_PED_RELATIONSHIP( l_U609[0], 2, 6 );
            SET_PED_VISIBLE( l_U609[0], 1 );
            SET_PED_CAN_BE_TARGETTED( l_U609[0], 1 );
            SET_PED_AIM_LOCKONABLE( l_U609[0], 1 );
            SET_PED_PROOFS( l_U609[0], 0, 0, 0, 0, 0 );
            SET_PED_GORE( l_U609[0], 1 );
             /* P_PED_REGISTER_AND_LOCK_TARGET */ sub_38565( l_U609[0], g_U2595 );
            SET_PED_DEFAULT_AIM_AT_PED( l_U609[0], g_U2595 );
            CLEAR_PED_TASKS_IMMEDIATELY( l_U609[0] );
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_AIM_GUN_AT_PED( 0, g_U2595, 1500, 1 );
            TASK_SHOOT_AT_PED( 0, g_U2595, -1, -511790439, 0, 1, 0 );
            CLOSE_SEQUENCE_TASK( uVar2 );
            TASK_PERFORM_SEQUENCE( l_U609[0], uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
        }
         /* P_PED_REGISTER_AND_LOCK_TARGET */ sub_38565( l_U609[1], g_U2595 );
        if (((IS_PED_DEAD( l_U609[1] )) == 0) AND ((DOES_PED_EXIST( l_U609[1] )) == 1))
        {
             /* WRITESCRIPTLOG */ sub_694( "SP", "Sniper 1 Aiming at Gio", 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U609[1], 1 );
            SET_PED_IGNORE_LOS_CHECKS( l_U609[1], 1 );
            SET_PED_COMBAT_ATTRIBUTES( l_U609[1], 4096, 0 );
            SET_PED_RELATIONSHIP( l_U609[1], 2, 0 );
            SET_PED_RELATIONSHIP( l_U609[1], 2, 6 );
            SET_PED_VISIBLE( l_U609[1], 1 );
            SET_PED_CAN_BE_TARGETTED( l_U609[1], 1 );
            SET_PED_AIM_LOCKONABLE( l_U609[1], 1 );
            SET_PED_PROOFS( l_U609[1], 0, 0, 0, 0, 0 );
            SET_PED_GORE( l_U609[1], 1 );
             /* P_PED_REGISTER_AND_LOCK_TARGET */ sub_38565( l_U609[1], g_U2595 );
            SET_PED_DEFAULT_AIM_AT_PED( l_U609[1], g_U2595 );
            CLEAR_PED_TASKS_IMMEDIATELY( l_U609[1] );
            OPEN_SEQUENCE_TASK( ref uVar3 );
            TASK_AIM_GUN_AT_PED( 0, g_U2595, 1000, 1 );
            TASK_SHOOT_AT_PED( 0, g_U2595, -1, -511790439, 0, 1, 0 );
            CLOSE_SEQUENCE_TASK( uVar3 );
            TASK_PERFORM_SEQUENCE( l_U609[1], uVar3 );
            CLEAR_SEQUENCE_TASK( uVar3 );
        }
    }
    return;
}

/* P_PED_REGISTER_AND_LOCK_TARGET */ void sub_38565(unknown uParam0, unknown uParam1)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND (((DOES_PED_EXIST( uParam0 )) == 1) AND (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))))
    {
        CLEAR_LOCKED_TARGET( uParam0 );
        REGISTER_TARGET( uParam0, uParam1 );
        SET_LOCKED_TARGET( uParam0, uParam1 );
    }
    return;
}

/* NIS_POST_SETUP */ void sub_39493(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1339(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1385(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_39591();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_39591()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1385(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1385(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1385(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1385(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_39881(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_694( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_694( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_9149( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_40172( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_40649( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_40649( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_40909( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_40649( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_40909( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_40909( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_40649( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_40909( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_40909( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_40909( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_40649( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_40909( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_40909( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_40909( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_40909( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_42489( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_694( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_40172(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_6164( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_694( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_694( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_40649(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_40909(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_42489(int iParam0)
{
     /* WRITE_STRING */ sub_7984( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_42577( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_42654( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_42654( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_42654( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_42823( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_42823( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_42823( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_42823( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_42823( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_42823( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_42823( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_42823( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_42823( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_42823( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_42823( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_42654( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_42823( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_42823( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_42823( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_42654( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_43524( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_42823( iParam0->_fU52 );
     /* WRITE_STRING */ sub_7984( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_42823( iParam0->_fU96 );
     /* WRITE_STRING */ sub_7984( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_42823( iParam0->_fU100 );
     /* WRITE_STRING */ sub_7984( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_42823( iParam0->_fU104 );
     /* WRITE_STRING */ sub_7984( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_42823( iParam0->_fU108 );
     /* WRITE_STRING */ sub_7984( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_42823( iParam0->_fU112 );
     /* WRITE_STRING */ sub_7984( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_42823( iParam0->_fU116 );
     /* WRITE_STRING */ sub_7984( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_42823( iParam0->_fU120 );
     /* WRITE_STRING */ sub_7984( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_42823( iParam0->_fU124 );
     /* WRITE_STRING */ sub_7984( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_42823( iParam0->_fU128 );
     /* WRITE_STRING */ sub_7984( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_42823( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_42823( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_42823( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_42577(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_42654(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_42823(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_43524(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* P_START_SP_CHALLENGES */ void sub_44617()
{
     /* WRITESCRIPTLOG */ sub_694( "CCB", "P_START_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_694( "CCB", "Starting the Bus_Depot_Junk_Snipers context...", 0 );
    START_CONTEXT( "Bus_Depot_Junk_Snipers" );
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_44924(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_45035(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_45307(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_45352( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_45352(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_45439( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_45439(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_45491( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_46009( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_45491(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_46009(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* P_GIO_KILLED_BY_SNIPERS */ void sub_46600()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_694( "SP", "P_GIO_KILLED_BY_SNIPERS", 0 );
    if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
    {
        if (((IS_PED_DEAD( l_U609[0] )) == 0) AND ((DOES_PED_EXIST( l_U609[0] )) == 1))
        {
             /* WRITESCRIPTLOG */ sub_694( "NS", "Sniper 0 shooting", 0 );
            uVar2 = l_U609[0];
            FORCE_PED_TO_USE_DEATH_SUGGESTION_WHEN_SHOT( l_U609[0], 0, 0, 1, 1, 1 );
            SET_PED_CAN_TRIGGER_BULLET_CAM( l_U609[0], 0 );
        }
        else if (((IS_PED_DEAD( l_U609[1] )) == 0) AND ((DOES_PED_EXIST( l_U609[1] )) == 1))
        {
             /* WRITESCRIPTLOG */ sub_694( "NS", "Sniper 1 shooting", 0 );
            uVar2 = l_U609[1];
            FORCE_PED_TO_USE_DEATH_SUGGESTION_WHEN_SHOT( l_U609[1], 0, 0, 1, 1, 1 );
            SET_PED_CAN_TRIGGER_BULLET_CAM( l_U609[1], 0 );
        }
        if (((IS_PED_DEAD( uVar2 )) == 0) AND ((DOES_PED_EXIST( uVar2 )) == 1))
        {
            SET_BULLET_CAMERA_TRACKER( uVar2 );
            CLEAR_PED_TASKS( uVar2 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( uVar2, 1 );
            SET_PED_ACCURACY( uVar2, 31186664 );
            TASK_SHOOT_AT_COORD( uVar2, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U2595, 65488, 0.00000000, 0.00000000, 0.00000000 ), -1, 0, 0, 0 );
            l_U615 = 0;
        }
        SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2595, 0 );
        SET_PED_AS_ONE_SHOT_KILL( g_U2595, 1 );
        SET_PED_GORE( g_U2595, 1 );
        SET_PED_GORE_FROM_NPC( g_U2595, 1 );
    }
    return;
}

/* F_SHOULD_GIOVANNA_TALK_MAX_CLOSE */ int sub_47133()
{
    if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
    {
        if (( /* F_ISPEDINTRIGGERBOX */ sub_47223(  /* PLAYER_PED_ID */ sub_1385(), l_U224 )) == 1)
        {
            if ((IS_PED_ON_SCREEN( g_U2595, 0 )) == 1)
            {
                if (IS_BULLET_CAMERA_ACTIVE() == 0)
                {
                    if ((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0)
                    {
                        if (( /* ISTIMERDONE */ sub_3383( ref l_U480 )) == 1)
                        {
                            return 1;
                        }
                    }
                }
            }
        }
    }
    return 0;
}

/* F_ISPEDINTRIGGERBOX */ int sub_47223(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* P_DIAL_GIO_TALK_MAX_CLOSE */ void sub_47391()
{
    int iVar2;

     /* WRITESCRIPTLOG */ sub_694( "SP", "P_DIAL_GIO_TALK_MAX_CLOSE", 0 );
    iVar2 = GET_RANDOM_INT_IN_RANGE( 0, 2 );
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
    {
        if (iVar2 == 0)
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_44924( ref l_U668 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 0,  /* PLAYER_PED_ID */ sub_1385(), "MAX", ref l_U668, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 1, g_U2595, "GIOVANNA", ref l_U668, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_45307( "SBUS_JYGB2", ref l_U668, 7, 1 );
        }
        else
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_44924( ref l_U658 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 0,  /* PLAYER_PED_ID */ sub_1385(), "MAX", ref l_U658, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 1, g_U2595, "GIOVANNA", ref l_U658, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_45307( "SBUS_JYGB1", ref l_U658, 7, 1 );
        }
    }
    return;
}

/* F_SHOULD_GIOVANNA_TALK_MAX_FAR */ int sub_47786()
{
    if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
    {
        if (( /* F_ISPEDINTRIGGERBOX */ sub_47223(  /* PLAYER_PED_ID */ sub_1385(), l_U224 )) == 0)
        {
            if ((IS_PED_ON_SCREEN( g_U2595, 0 )) == 0)
            {
                if (IS_BULLET_CAMERA_ACTIVE() == 0)
                {
                    if ((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0)
                    {
                        if (( /* ISTIMERDONE */ sub_3383( ref l_U489 )) == 1)
                        {
                            return 1;
                        }
                    }
                }
            }
        }
    }
    return 0;
}

/* P_DIAL_GIO_TALK_MAX_FAR */ void sub_47975()
{
     /* WRITESCRIPTLOG */ sub_694( "SP", "P_DIAL_GIO_TALK_MAX_FAR", 0 );
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_44924( ref l_U648 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 0,  /* PLAYER_PED_ID */ sub_1385(), "MAX", ref l_U648, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 1, g_U2595, "GIOVANNA", ref l_U648, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_45307( "SBUS_JYGG", ref l_U648, 7, 1 );
    }
    return;
}

/* P_HANDLE_VIG_02B */ void sub_48222()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    float fVar6;

    if (l_U636 == 0)
    {
        if (( /* F_ISPEDINTRIGGERBOX */ sub_47223( g_U2595, l_U203 )) == 1)
        {
            l_U636 = 1;
        }
    }
    if (l_U636 == 1)
    {
        if (((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1339() )) == 0) AND (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))))
        {
            if ((HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 8.00000000, ref iVar2 )) == 1)
            {
                uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_BULLET_IMPACT_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 8.00000000, ref iVar2 )};
                fVar6 = GET_DISTANCE_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), uVar3, 1 );
                if ((iVar2 == ( /* PLAYER_PED_ID */ sub_1385())) AND (fVar6 < 6.00000000))
                {
                    PED_SET_ACTION_INTENTION( g_U2595, 47, 500, 0.00000000, 0.00000000, 0.00000000 );
                    if ((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0)
                    {
                         /* P_DIAL_MAX_SHOOT_AT_GIO */ sub_48527();
                    }
                }
                else if ((iVar2 != ( /* PLAYER_PED_ID */ sub_1385())) AND (fVar6 < 6.00000000))
                {
                    PED_SET_ACTION_INTENTION( g_U2595, 47, 500, 0.00000000, 0.00000000, 0.00000000 );
                    if ((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0)
                    {
                         /* P_DIAL_SNIPERS_SHOOT_AT_GIO */ sub_49146();
                    }
                }
            }
            if (((IS_PLAYER_FREE_AIMING_AT_PED(  /* PLAYER_ID */ sub_1339(), g_U2595 )) == 1) AND ((IS_PLAYER_GUN_RAISED(  /* PLAYER_ID */ sub_1339() )) == 1))
            {
                PED_SET_ACTION_INTENTION( g_U2595, 48, 500, 0.00000000, 0.00000000, 0.00000000 );
                if ((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0)
                {
                     /* P_DIAL_MAX_AIM_AT_GIO */ sub_49474();
                }
            }
        }
    }
    return;
}

/* P_DIAL_MAX_SHOOT_AT_GIO */ void sub_48527()
{
     /* WRITESCRIPTLOG */ sub_694( "SP", "P_DIAL_MAX_SHOOT_AT_GIO", 0 );
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
    {
        if (( /* F_IS_ANY_GIO_REACT_DIAL_PLAYING */ sub_48649()) == 0)
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_44924( ref l_U698 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 0,  /* PLAYER_PED_ID */ sub_1385(), "MAX", ref l_U698, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 1, g_U2595, "GIOVANNA", ref l_U698, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_45307( "SBUS_VIG03P2", ref l_U698, 7, 1 );
        }
    }
    return;
}

/* F_IS_ANY_GIO_REACT_DIAL_PLAYING */ int sub_48649()
{
    if ((( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_48699( l_U768 )) == 1) AND ((( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_48699( l_U708 )) == 1) AND (( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_48699( l_U698 )) == 1)))
    {
        return 1;
    }
    return 0;
}

/* IS_SPEECH_CURRENTLY_PLAYING */ int sub_48699(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_48742( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

/* IS_SCRIPT_SPEECH_STRUCT_VALID */ boolean sub_48742(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

/* P_DIAL_SNIPERS_SHOOT_AT_GIO */ void sub_49146()
{
     /* WRITESCRIPTLOG */ sub_694( "SP", "P_DIAL_SNIPERS_SHOOT_AT_GIO", 0 );
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
    {
        if (( /* F_IS_ANY_GIO_REACT_DIAL_PLAYING */ sub_48649()) == 0)
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_44924( ref l_U708 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 0,  /* PLAYER_PED_ID */ sub_1385(), "MAX", ref l_U708, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 1, g_U2595, "GIOVANNA", ref l_U708, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_45307( "SBUS_VIG03P3", ref l_U708, 7, 1 );
        }
    }
    return;
}

/* P_DIAL_MAX_AIM_AT_GIO */ void sub_49474()
{
     /* WRITESCRIPTLOG */ sub_694( "SP", "P_DIAL_MAX_AIM_AT_GIO", 0 );
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
    {
        if (( /* F_IS_ANY_GIO_REACT_DIAL_PLAYING */ sub_48649()) == 0)
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_44924( ref l_U778 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 0,  /* PLAYER_PED_ID */ sub_1385(), "MAX", ref l_U778, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 1, g_U2595, "GIOVANNA", ref l_U778, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_45307( "SBUS_GVPATH", ref l_U778, 8, 1 );
        }
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_49725(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_47223(  /* PLAYER_PED_ID */ sub_1385(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* P_KILL_PEDS_IN_ARRAY */ void sub_49864(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_KILL_PED */ sub_49918( (uParam0^)[I] );
    }
    return;
}

/* P_KILL_PED */ void sub_49918(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

/* F_HAS_MAX_SHOT_AT_SNIPERS */ int sub_50107()
{
    unknown uVar2;

    if (((IS_PED_DEAD( l_U609[0] )) == 0) AND ((DOES_PED_EXIST( l_U609[0] )) == 1))
    {
        if ((GET_PED_AWARENESS_STATE( l_U609[0],  /* PLAYER_PED_ID */ sub_1385(), 8 )) == 1)
        {
            return 1;
        }
    }
    if (((IS_PED_DEAD( l_U609[1] )) == 0) AND ((DOES_PED_EXIST( l_U609[1] )) == 1))
    {
        if ((GET_PED_AWARENESS_STATE( l_U609[1],  /* PLAYER_PED_ID */ sub_1385(), 8 )) == 1)
        {
            return 1;
        }
    }
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0)
    {
        if ((HAS_SHOT_BEEN_FIRED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1385() ), 10.00000000, 1, ref uVar2 )) || ((IS_PED_USING_MP3_COVER_TASK(  /* PLAYER_PED_ID */ sub_1385() )) == 0))
        {
            return 1;
        }
    }
    return 0;
}

/* P_START_SNIPERS_SHOOTING_AT_MAX */ void sub_50374()
{
    unknown uVar2;
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_694( "SP", "P_START_SNIPERS_SHOOTING_AT_MAX", 0 );
    if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
    {
        SET_PED_CAN_BE_TARGETTED( g_U2595, 0 );
    }
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1339() )) == 0))
    {
        if (((IS_PED_DEAD( l_U609[0] )) == 0) AND ((DOES_PED_EXIST( l_U609[0] )) == 1))
        {
             /* WRITESCRIPTLOG */ sub_694( "SP", "Sniper 0 Aiming at Max", 0 );
             /* P_PED_REGISTER_AND_LOCK_TARGET */ sub_38565( l_U609[0],  /* PLAYER_PED_ID */ sub_1385() );
            SET_PED_ALERTNESS( l_U609[0], 1 );
            CLEAR_PED_TASKS( l_U609[0] );
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_REACT_INITIAL( 0,  /* PLAYER_PED_ID */ sub_1385() );
            TASK_AIM_GUN_AT_PED( 0,  /* PLAYER_PED_ID */ sub_1385(), 1500, 0 );
            TASK_SHOOT_AT_PED( 0,  /* PLAYER_PED_ID */ sub_1385(), 1500, 0, 0, 0, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1385() );
            CLOSE_SEQUENCE_TASK( uVar2 );
            TASK_PERFORM_SEQUENCE( l_U609[0], uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
        }
        if (((IS_PED_DEAD( l_U609[1] )) == 0) AND ((DOES_PED_EXIST( l_U609[1] )) == 1))
        {
             /* WRITESCRIPTLOG */ sub_694( "SP", "Sniper 1 Aiming at Max", 0 );
             /* P_PED_REGISTER_AND_LOCK_TARGET */ sub_38565( l_U609[1],  /* PLAYER_PED_ID */ sub_1385() );
            SET_PED_ALERTNESS( l_U609[1], 1 );
            CLEAR_PED_TASKS( l_U609[1] );
            OPEN_SEQUENCE_TASK( ref uVar3 );
            TASK_REACT_INITIAL( 0,  /* PLAYER_PED_ID */ sub_1385() );
            TASK_AIM_GUN_AT_PED( 0,  /* PLAYER_PED_ID */ sub_1385(), 1000, 0 );
            TASK_SHOOT_AT_PED( 0,  /* PLAYER_PED_ID */ sub_1385(), 2500, 0, 0, 0, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1385() );
            CLOSE_SEQUENCE_TASK( uVar3 );
            TASK_PERFORM_SEQUENCE( l_U609[1], uVar3 );
            CLEAR_SEQUENCE_TASK( uVar3 );
        }
    }
    return;
}

/* P_START_CHECKPOINT_THREAD */ void sub_51039(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

/* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ void sub_51613(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

/* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ void sub_51758(unknown uParam0)
{
    int I;

    if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_51613( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

/* P_RESET_CONTEXTUAL_DIALOGUE */ void sub_52249()
{
     /* WRITESCRIPTLOG */ sub_694( "SP", "P_RESET_CONTEXTUAL_DIALOGUE", 0 );
    l_U140 = 0;
    l_U141 = 0;
    l_U86 = 0;
    l_U142 = 0;
     /* RESETTIMER */ sub_4216( ref l_U68 );
     /* RESETTIMER */ sub_4216( ref l_U77 );
    return;
}

/* P_HANDLE_LEAVE_JUNKYARD_DIALOGUE */ void sub_52476()
{
    if (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))))
    {
        if ((IS_PED_ON_SCREEN( g_U2595, 0 )) == 1)
        {
            if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_49725( ref l_U266, 0 )) == 1)
            {
                 /* CREATETIMER */ sub_3044( ref l_U516, 2000, 1, 0 );
                 /* STARTTIMER */ sub_3194( ref l_U516 );
            }
            if (l_U574 == 0)
            {
                if ((TIME_SINCE_LAST_MONOLOGUE() > 2500) AND ((IS_MONOLOGUE_PLAYING() == 0) AND (( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_52653()) == 0)))
                {
                    if ((((l_U516._fU16 == 1) || (( /* ISTIMERDONE */ sub_3383( ref l_U516 )) == 1)) AND (( /* F_ISPLAYERINTRIGGERBOX */ sub_52782( l_U266 )) == 1)) || ((( /* F_ISPLAYERINTRIGGERBOX */ sub_52782( l_U308 )) == 0) AND (( /* F_ISPLAYERINTRIGGERBOX */ sub_52782( l_U287 )) == 1)))
                    {
                         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_44924( ref l_U738 );
                         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 0,  /* PLAYER_PED_ID */ sub_1385(), "MAX", ref l_U738, 2, 0 );
                         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 1, g_U2595, "GIOVANNA", ref l_U738, 2, 0 );
                         /* PLAY_SINGLE_SPEECH */ sub_45307( "SBUS_GSPA", ref l_U738, 7, 1 );
                         /* CREATETIMER */ sub_3044( ref l_U525, 3000, 1, 0 );
                         /* STARTTIMER */ sub_3194( ref l_U525 );
                        l_U574 = 1;
                    }
                }
            }
            if (l_U575 == 0)
            {
                if ((l_U525._fU16 == 1) || (( /* ISTIMERDONE */ sub_3383( ref l_U525 )) == 1))
                {
                    if ((TIME_SINCE_LAST_MONOLOGUE() > 2500) AND ((IS_MONOLOGUE_PLAYING() == 0) AND (( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_52653()) == 0)))
                    {
                        if ((( /* F_ISPLAYERINTRIGGERBOX */ sub_52782( l_U308 )) == 0) AND (( /* F_ISPLAYERINTRIGGERBOX */ sub_52782( l_U266 )) == 1))
                        {
                             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_44924( ref l_U748 );
                             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 0,  /* PLAYER_PED_ID */ sub_1385(), "MAX", ref l_U748, 2, 0 );
                             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 1, g_U2595, "GIOVANNA", ref l_U748, 2, 0 );
                             /* PLAY_SINGLE_SPEECH */ sub_45307( "SBUS_GATP", ref l_U748, 7, 1 );
                            l_U575 = 1;
                        }
                    }
                }
            }
        }
    }
    if (l_U498._fU20 == 0)
    {
        if (( /* F_ISPLAYERINTRIGGERBOX */ sub_52782( l_U245 )) == 0)
        {
             /* CREATETIMER */ sub_3044( ref l_U498, 25000, 1, 0 );
             /* STARTTIMER */ sub_3194( ref l_U498 );
        }
        else
        {
             /* RESETTIMER */ sub_4216( ref l_U498 );
        }
    }
    if ((TIME_SINCE_LAST_MONOLOGUE() > 2500) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_52653()) == 0) AND (( /* F_ISPLAYERINTRIGGERBOX */ sub_52782( l_U245 )) == 0))))
    {
        if (( /* ISTIMERDONE */ sub_3383( ref l_U498 )) == 1)
        {
             /* P_DIAL_GIO_CANT_SEE_MAX */ sub_53335();
             /* CREATETIMER */ sub_3044( ref l_U498, 25000, 1, 0 );
             /* STARTTIMER */ sub_3194( ref l_U498 );
        }
    }
    if (l_U507._fU20 == 0)
    {
        if (( /* F_ISPLAYERINTRIGGERBOX */ sub_52782( l_U245 )) == 1)
        {
             /* CREATETIMER */ sub_3044( ref l_U507, 25000, 1, 0 );
             /* STARTTIMER */ sub_3194( ref l_U507 );
        }
        else
        {
             /* RESETTIMER */ sub_4216( ref l_U507 );
        }
    }
    if ((TIME_SINCE_LAST_MONOLOGUE() > 2500) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_52653()) == 0) AND ((( /* F_ISPLAYERINTRIGGERBOX */ sub_52782( l_U308 )) == 0) AND (( /* F_ISPLAYERINTRIGGERBOX */ sub_52782( l_U245 )) == 1)))))
    {
        if (( /* ISTIMERDONE */ sub_3383( ref l_U507 )) == 1)
        {
             /* P_DIAL_GIO_CAN_SEE_MAX */ sub_53943();
             /* CREATETIMER */ sub_3044( ref l_U507, 25000, 1, 0 );
             /* STARTTIMER */ sub_3194( ref l_U507 );
        }
    }
    return;
}

/* IS_ANY_SPEECH_CURRENTLY_PLAYING */ void sub_52653()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_52782(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_47223(  /* PLAYER_PED_ID */ sub_1385(), uParam0 );
}

/* P_DIAL_GIO_CANT_SEE_MAX */ void sub_53335()
{
    int iVar2;

     /* WRITESCRIPTLOG */ sub_694( "SP", "P_DIAL_GIO_CANT_SEE_MAX", 0 );
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
    {
        iVar2 = GET_RANDOM_INT_IN_RANGE( 0, 3 );
        if ((l_U637 == 0) || (iVar2 == 0))
        {
            l_U637 = 1;
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_44924( ref l_U678 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 0,  /* PLAYER_PED_ID */ sub_1385(), "MAX", ref l_U678, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 1, g_U2595, "GIOVANNA", ref l_U678, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_45307( "SBUS_JYGGB", ref l_U678, 7, 1 );
        }
        else if (iVar2 == 1)
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_44924( ref l_U718 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 0,  /* PLAYER_PED_ID */ sub_1385(), "MAX", ref l_U718, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 1, g_U2595, "GIOVANNA", ref l_U718, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_45307( "SBUS_GVCAL", ref l_U718, 7, 1 );
        }
        else
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_44924( ref l_U728 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 0,  /* PLAYER_PED_ID */ sub_1385(), "MAX", ref l_U728, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 1, g_U2595, "GIOVANNA", ref l_U728, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_45307( "SBUS_GVPRA", ref l_U728, 7, 1 );
        }
    }
    return;
}

/* P_DIAL_GIO_CAN_SEE_MAX */ void sub_53943()
{
     /* WRITESCRIPTLOG */ sub_694( "SP", "P_DIAL_GIO_CAN_SEE_MAX", 0 );
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_44924( ref l_U758 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 0,  /* PLAYER_PED_ID */ sub_1385(), "MAX", ref l_U758, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 1, g_U2595, "GIOVANNA", ref l_U758, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_45307( "SBUS_GPDT", ref l_U758, 7, 1 );
    }
    return;
}

/* P_HANDLE_CONTEXTUAL_DIALOGUE */ void sub_54186()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    float fVar6;
    float fVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (l_U140 == 0)
    {
         /* CREATETIMER */ sub_3044( ref l_U68, 6000, 1, 0 );
         /* STARTTIMER */ sub_3194( ref l_U68 );
        l_U140 = 1;
    }
    if (((IS_PED_DEAD( g_U2595 )) == 0) AND (((DOES_PED_EXIST( g_U2595 )) == 1) AND ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0)))
    {
        if (((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0) AND ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)))
        {
            if ((l_U68._fU16 == 1) || (( /* ISTIMERDONE */ sub_3383( ref l_U68 )) == 1))
            {
                if ((IS_PLAYER_SHOOTDODGING() == 1) AND ((CAN_PED_SEE_OTHER_PED( g_U2595,  /* PLAYER_PED_ID */ sub_1385(), 110.00000000, 15.00000000 )) == 1))
                {
                     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_44924( ref l_U87 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 0,  /* PLAYER_PED_ID */ sub_1385(), "MAX", ref l_U87, 2, 0 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 1, g_U2595, "GIOVANNA", ref l_U87, 2, 0 );
                     /* PLAY_SINGLE_SPEECH */ sub_45307( "SBUS_GVPMAR", ref l_U87, 7, 1 );
                     /* CREATETIMER */ sub_3044( ref l_U68, 6000, 1, 0 );
                     /* STARTTIMER */ sub_3194( ref l_U68 );
                }
                if ((HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 30.00000000, ref iVar2 )) == 1)
                {
                    if (iVar2 == ( /* PLAYER_PED_ID */ sub_1385()))
                    {
                        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_BULLET_IMPACT_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 30.00000000, ref iVar2 )};
                        fVar6 = VDIST( uVar3, 0.00000000, 0.00000000, 0.00000000 );
                        if (fVar6 > 0.00000000)
                        {
                            fVar7 = VDIST( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ) );
                            if (fVar7 > 8.00000000)
                            {
                                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_44924( ref l_U97 );
                                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 0,  /* PLAYER_PED_ID */ sub_1385(), "MAX", ref l_U97, 2, 0 );
                                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 1, g_U2595, "GIOVANNA", ref l_U97, 2, 0 );
                                 /* PLAY_SINGLE_SPEECH */ sub_45307( "SBUS_GVPSC", ref l_U97, 7, 1 );
                                 /* CREATETIMER */ sub_3044( ref l_U68, 6000, 1, 0 );
                                 /* STARTTIMER */ sub_3194( ref l_U68 );
                            }
                        }
                    }
                }
            }
        }
    }
    if (((IS_PED_DEAD( g_U2595 )) == 0) AND (((DOES_PED_EXIST( g_U2595 )) == 1) AND ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0)))
    {
        if (((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0) AND ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)))
        {
            uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1385() )};
            if ((VDIST( uVar8, l_U137 )) > 0.10000000)
            {
                 /* RESETTIMER */ sub_4216( ref l_U77 );
            }
            else if ((l_U77._fU16 == 0) AND (l_U77._fU20 == 0))
            {
                 /* CREATETIMER */ sub_3044( ref l_U77, 35000, 1, 0 );
                 /* STARTTIMER */ sub_3194( ref l_U77 );
            }
            if ((l_U77._fU16 == 1) || (( /* ISTIMERDONE */ sub_3383( ref l_U77 )) == 1))
            {
                if (l_U86 < 6)
                {
                    if ((l_U143 == 0) AND (g_U764 == 6))
                    {
                         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_44924( ref l_U117 );
                         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 0,  /* PLAYER_PED_ID */ sub_1385(), "MAX", ref l_U117, 2, 0 );
                         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 1,  /* PLAYER_PED_ID */ sub_1385(), "MAX", ref l_U117, 2, 0 );
                         /* PLAY_SINGLE_SPEECH */ sub_45307( "SBUS_MJDBPBB", ref l_U117, 7, 1 );
                        l_U143 = 1;
                    }
                    else
                    {
                         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_44924( ref l_U107 );
                         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 0,  /* PLAYER_PED_ID */ sub_1385(), "MAX", ref l_U107, 2, 0 );
                         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 1, g_U2595, "GIOVANNA", ref l_U107, 2, 0 );
                         /* PLAY_SINGLE_SPEECH */ sub_45307( "SBUS_GVPSD", ref l_U107, 7, 1 );
                    }
                     /* CREATETIMER */ sub_3044( ref l_U77, 35000, 1, 0 );
                     /* STARTTIMER */ sub_3194( ref l_U77 );
                    l_U86++;
                }
            }
            l_U137 = {uVar8};
        }
    }
    if (l_U141 == 0)
    {
        l_U142 = GET_PAYNEKILLER_AMT();
        l_U141 = 1;
    }
    if (l_U142 < GET_PAYNEKILLER_AMT())
    {
        if ((( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_52653()) == 0) AND ((TIME_SINCE_LAST_MONOLOGUE() > 5000) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1385() )) == 0))))))
        {
             /* WRITESCRIPTLOG */ sub_694( "SP", "Playing Pills Monologue", 0 );
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_44924( ref l_U127 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 0,  /* PLAYER_PED_ID */ sub_1385(), "MAX", ref l_U127, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_45035( 1,  /* PLAYER_PED_ID */ sub_1385(), "MAX", ref l_U127, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_45307( "SBUS_MFSFPLS", ref l_U127, 7, 1 );
        }
    }
    l_U142 = GET_PAYNEKILLER_AMT();
    return;
}

/* P_UNLOAD_ASSETS */ void sub_55903()
{
     /* WRITESCRIPTLOG */ sub_694( "SP", "P_UNLOAD_SCRIPT_ASSETS", 0 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_55976( g_U2109, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_55976( g_U2143, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_55976( g_U2145, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_55976( g_U2147, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_55976( g_U2107, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_55976( g_U758, ref g_U910 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_57184( ref g_U1952, ref g_U1369 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_57184( ref g_U1904, ref g_U1369 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_57543( 1050158099, ref g_U1272 );
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE */ void sub_55976(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_56120( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a MODEL_NAME asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Removing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ int sub_56120(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if ((uParam1^)[I] == iParam0)
            {
                DISPLAYF( "[CCB] ### The THREADID index matches the asset requested for removal: {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
            else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID index is in use and is active: {} ###", 1, 513, (uParam1^)[I] );
                Result = I;
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is in use, but is no longer active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

/* P_STREAMREQ_ANIM_DICT_REMOVE */ void sub_57184(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_56120( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ANIM_DICT asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_ISEQ_REMOVE */ void sub_57543(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_56120( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a ISEQ asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}


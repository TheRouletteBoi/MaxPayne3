void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U40 = 0;
    l_U41 = 0;
    l_U42 = 1500;
    StrCopy( ref l_U52, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U60, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U86 = 0;
    l_U140 = 0;
    l_U141 = 0;
    l_U142 = 0;
    l_U143 = 0;
    l_U144 = 0;
    l_U145 = 0;
    l_U146 = 0;
    l_U147 = 0;
    l_U148 = 0;
    l_U149 = 0;
    l_U186 = 0;
    l_U576 = 0;
    l_U577 = 0;
    l_U578 = 0;
    l_U579 = 0;
    l_U580 = 0;
    l_U581 = 0;
    l_U632 = 8500;
    l_U633 = 13000;
    l_U643 = {-39.33000000, 36.72000000, 5.00900000};
    l_U646 = 0.00000000;
    l_U701 = {-55.91900000, 44.29300000, 0.02000000};
    l_U704 = 90.00000000;
    l_U741 = 0;
    l_U852 = 0;
     /* WRITESCRIPTLOG */ sub_546( "SP", "Script busdepot_gar_wash.sc is starting...", 0 );
    l_U144 = 1;
    while (IS_EXITFLAG_SET() == 0)
    {
         /* P_HANDLE_FAILURE */ sub_684();
        if (l_U145 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_15466();
        }
        WAIT( 0 );
    }
     /* P_CLEANUP_ALL */ sub_9540();
     /* P_UNLOAD_ASSETS */ sub_54756();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "busdepot_gar_wash" );
    SET_EXITFLAG_RESPONSE();
     /* WRITESCRIPTLOG */ sub_546( "SP", "Script busdepot_gar_wash.sc is terminating...", 0 );
    return;
}

/* WRITESCRIPTLOG */ void sub_546(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_HANDLE_FAILURE */ void sub_684()
{
    switch (l_U145)
    {
        case 0:
        if (g_U764 == 7)
        {
            if (((IS_PED_DEAD( g_U2595 )) == 1) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
            {
                 /* WRITESCRIPTLOG */ sub_546( "SP", "Mission Failed: Giovanna died.", 0 );
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
                BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
                l_U149 = 1;
                l_U145 = 1;
                 /* WRITESCRIPTLOG */ sub_546( "SP", "eFailState = FAIL_HANDLE_GIO_DEATH_CAM", 0 );
            }
            else if (( /* RESTARTING_CHECKPOINT */ sub_1060()) || ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 1))
            {
                 /* WRITESCRIPTLOG */ sub_546( "SP", "Mission Failed: Player died.", 0 );
                l_U145 = 3;
                 /* WRITESCRIPTLOG */ sub_546( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
        }
        else if (((CUTSCENE_NAMED_IS_LOADING( "vig_10b_bus_concat" )) == 1) || ((CUTSCENE_IS_LOADED( "vig_10b_bus_concat" )) == 1))
        {
            CLEAR_NAMED_CUTSCENE( "vig_10b_bus_concat" );
        }
        if (( /* IS_RESTART_ACTIVE */ sub_1758()) || ((((IS_PED_DEAD( g_U2595 )) == 1) AND ((DOES_PED_EXIST( g_U2595 )) == 1)) || ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 1)))
        {
             /* P_RESET_CHECKPOINT_THREAD */ sub_1814( ref g_U765[7] );
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        }
        break;
        case 1:
         /* WRITESCRIPTLOG */ sub_546( "SP", "eFailState = FAIL_HANDLE_GIO_DEATH_CAM", 0 );
        if (( /* F_HANDLE_GIO_DEATH_CAM */ sub_1947()) == 1)
        {
            l_U145 = 3;
             /* WRITESCRIPTLOG */ sub_546( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
        }
        break;
        case 2:
        if (( /* F_HANDLE_GIO_ABANDONED_IN_WASHBAY_NIS */ sub_3100()) == 1)
        {
            g_U2628 = 0;
            l_U145 = 4;
             /* WRITESCRIPTLOG */ sub_546( "SP", "eFailState = FAIL_WAITING_FOR_RESPAWN", 0 );
        }
        break;
        case 3:
        if (( /* IS_RESTART_ACTIVE */ sub_1758()) == 1)
        {
            l_U145 = 5;
             /* WRITESCRIPTLOG */ sub_546( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
        }
        else if (( /* F_CHECK_QUIT_RETRY */ sub_5844( NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) )) == 1)
        {
            l_U145 = 4;
             /* WRITESCRIPTLOG */ sub_546( "SP", "eFailState = FAIL_WAITING_FOR_RESPAWN", 0 );
        }
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_546( "SP", "eFailState = FAIL_WAITING_FOR_RESPAWN", 0 );
        if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0))
        {
            DO_SCREEN_FADE_OUT( 0 );
             /* KILL_ANY_MISSION_SPEECH */ sub_8759( 0 );
             /* KILL_ANY_AMBIENT_SPEECH */ sub_8959( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_995() )) == 0))
            {
                SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_957(), 0 );
                SET_PED_CONSUMING_AMMO(  /* PLAYER_PED_ID */ sub_957(), 1 );
                SET_PLAYER_CAN_CANCEL_SHOOTDODGE( 1 );
                PED_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_957(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
            }
            if (IS_PLAYER_SHOOTDODGING() == 1)
            {
                SET_PLAYER_SHOOTDODGE_GET_UP_STATE( 3 );
            }
            DEACTIVATE_BULLET_TIME( 0, 0 );
            DEACTIVATE_BULLET_TIME( 0, 1 );
            DEACTIVATE_BULLET_TIME( 1, 0 );
            DEACTIVATE_BULLET_TIME( 1, 1 );
            if ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_995() )) == 0)
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_995(), 0, 0 );
                if ((GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_957() )) == 1)
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_957(), 0 );
                }
            }
            AUDIO_MUSIC_SUSPEND( 500 );
            l_U145 = 5;
             /* WRITESCRIPTLOG */ sub_546( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
        }
        break;
        case 5:
         /* WRITESCRIPTLOG */ sub_546( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
         /* P_CLEANUP_ALL */ sub_9540();
         /* CLEANPED */ sub_3382( g_U2595 );
        l_U145 = 6;
         /* WRITESCRIPTLOG */ sub_546( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
        break;
        case 6:
         /* WRITESCRIPTLOG */ sub_546( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
         /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_11174( ref l_U150,  /* PLAYER_PED_ID */ sub_957() );
         /* P_SETUP_PLAYER_RELATIONSHIPS */ sub_15227();
        l_U144 = 1;
        l_U145 = 0;
         /* WRITESCRIPTLOG */ sub_546( "SP", "eFailState = FAIL_IDLE", 0 );
        break;
    }
    return;
}

/* PLAYER_PED_ID */ int sub_957()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_995() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_995()
{
    return GET_PLAYER_ID();
}

/* RESTARTING_CHECKPOINT */ int sub_1060()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_957(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_995(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_995(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_957() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_957(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* IS_RESTART_ACTIVE */ void sub_1758()
{
    return g_U648;
}

/* P_RESET_CHECKPOINT_THREAD */ void sub_1814(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

/* F_HANDLE_GIO_DEATH_CAM */ int sub_1947()
{
    switch (l_U149)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_546( "SP", "eGioDeathCamState = DEATHCAM_SETUP", 0 );
         /* NIS_PRE_SETUP */ sub_2083( 1, 0, 0, 1 );
         /* CREATETIMER */ sub_2267( ref l_U623, 2250, 1, 0 );
         /* STARTTIMER */ sub_2417( ref l_U623 );
        l_U149 = 2;
         /* WRITESCRIPTLOG */ sub_546( "SP", "eGioDeathCamState = DEATHCAM_WAITING_FOR_BULLETCAM", 0 );
        case 2:
        if (((l_U623._fU16 == 1) || (( /* ISTIMERDONE */ sub_2630( ref l_U623 )) == 1)) AND ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0))
        {
            DO_SCREEN_FADE_OUT( 0 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 0 );
            l_U149 = 3;
             /* WRITESCRIPTLOG */ sub_546( "SP", "eGioDeathCamState = DEATHCAM_FINISHED", 0 );
        }
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_546( "SP", "eGioDeathCamState = DEATHCAM_FINISHED", 0 );
        l_U149 = 0;
         /* WRITESCRIPTLOG */ sub_546( "SP", "eGioDeathCamState = DEATHCAM_IDLE", 0 );
        return 1;
        break;
    }
    return 0;
}

/* NIS_PRE_SETUP */ void sub_2083(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_995(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_957(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_957() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_957(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* CREATETIMER */ void sub_2267(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_2417(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* ISTIMERDONE */ int sub_2630(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* F_HANDLE_GIO_ABANDONED_IN_WASHBAY_NIS */ int sub_3100()
{
    vector vVar2;
    float fVar5;
    vector vVar6;
    float fVar9;
    vector vVar10;
    float fVar13;
    int iVar14;
    vector vVar15;
    vector vVar18;

    vVar2 = {-37.82000000, 40.96000000, 5.00000000};
    fVar5 = 45.00000000;
    vVar6 = {-50.49000000, 45.34000000, 0.00000000};
    fVar9 = 90.00000000;
    vVar10 = {-40.66000000, 42.22200000, 6.09800000};
    fVar13 = 0.00000000;
    iVar14 = 4550;
    vVar15 = {0.20000000, 0.20000000, 0.00000000};
    vVar18 = {0.20000000, -0.20000000, 0.00000000};
    switch (l_U148)
    {
        case 0: break;
        case 4:
         /* WRITESCRIPTLOG */ sub_546( "SP", "eWashbayAbandonGioNISState = NIS_START", 0 );
         /* CLEANPED */ sub_3382( g_U2595 );
        g_U2595 =  /* CREATEPED */ sub_3471( ref l_U464 );
        if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
        {
            SET_PED_NAME_DEBUG( g_U2595, "piGiovanna" );
            SET_ROOM_FOR_PED_BY_NAME( g_U2595, ref g_U1824 );
            SET_PED_VISIBLE( g_U2595, 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2595, 1 );
            SET_PED_INVINCIBLE( g_U2595, 1 );
            SET_PED_PROOFS( g_U2595, 1, 1, 1, 1, 1 );
        }
         /* CLEANPED */ sub_3382( l_U595 );
        l_U595 =  /* CREATEPED */ sub_3471( ref l_U582 );
        if (((IS_PED_DEAD( l_U595 )) == 0) AND ((DOES_PED_EXIST( l_U595 )) == 1))
        {
            SET_PED_NAME_DEBUG( l_U595, "piMid08bFailEnemy" );
            SET_ROOM_FOR_PED_BY_NAME( l_U595, ref g_U1824 );
            SET_PED_VISIBLE( l_U595, 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U595, 1 );
             /* F_GIVEPEDWEAPON */ sub_4746( l_U595, g_U2857, 25000, 0, 0 );
        }
         /* TELEPORTPED */ sub_5157( g_U2595, vVar2, fVar5 );
         /* TELEPORTPED */ sub_5157( l_U595, vVar6, fVar9 );
        ISEQ_REGISTER_ENTITY( 1748359782, "gio", g_U2595, 0 );
        ISEQ_REGISTER_ENTITY( 1748359782, "enemy", l_U595, 0 );
        ISEQ_START( 1748359782 );
        l_U148 = 6;
         /* WRITESCRIPTLOG */ sub_546( "SP", "eWashbayAbandonGioNISState = NIS_FIRST_FRAME", 0 );
        break;
        case 6:
         /* WRITESCRIPTLOG */ sub_546( "SP", "eWashbayAbandonGioNISState = NIS_FIRST_FRAME", 0 );
         /* NIS_PRE_SETUP */ sub_2083( 1, 0, 0, 1 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_BUS_CP_04", "MID_08B_BUS_3_CAM", 1, vVar10, fVar13, 0, 0 );
        if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
        {
            SET_PED_VISIBLE( g_U2595, 1 );
        }
        if (((IS_PED_DEAD( l_U595 )) == 0) AND ((DOES_PED_EXIST( l_U595 )) == 1))
        {
            SET_PED_VISIBLE( l_U595, 1 );
        }
        AUDIO_MUSIC_SUSPEND( 5000 );
         /* CLEANPEDARRAY */ sub_5609( ref l_U562 );
         /* CREATETIMER */ sub_2267( ref l_U605, 2000, 1, 0 );
         /* STARTTIMER */ sub_2417( ref l_U605 );
         /* CREATETIMER */ sub_2267( ref l_U596, iVar14, 1, 0 );
         /* STARTTIMER */ sub_2417( ref l_U596 );
         /* CREATETIMER */ sub_2267( ref l_U614, 5500, 1, 0 );
         /* STARTTIMER */ sub_2417( ref l_U614 );
        l_U148 = 7;
         /* WRITESCRIPTLOG */ sub_546( "SP", "eWashbayAbandonGioNISState = NIS_PLAYING", 0 );
        break;
        case 7:
        if ((l_U614._fU16 == 1) || (( /* ISTIMERDONE */ sub_2630( ref l_U614 )) == 1))
        {
            if (( /* F_CHECK_QUIT_RETRY */ sub_5844( 0 )) == 1)
            {
                AUDIO_MUSIC_SUSPEND( 500 );
                if (IS_ANIMATED_CAMERA_PLAYING() == 1)
                {
                    CAMERA_ANIMATED_STOP( 0, 0 );
                }
                l_U148 = 0;
                 /* WRITESCRIPTLOG */ sub_546( "SP", "eWashbayAbandonGioNISState = NIS_IDLE", 0 );
                return 1;
            }
        }
        if (( /* ISTIMERDONE */ sub_2630( ref l_U605 )) == 1)
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_6970( ref l_U832 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 0,  /* PLAYER_PED_ID */ sub_957(), "MAX", ref l_U832, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 1, g_U2595, "GIOVANNA", ref l_U832, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_7357( "SBUS_MID08BUS", ref l_U832, 7, 1 );
        }
        if (( /* ISTIMERDONE */ sub_2630( ref l_U596 )) == 1)
        {
            if (((IS_PED_DEAD( l_U595 )) == 0) AND (((DOES_PED_EXIST( l_U595 )) == 1) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))))
            {
                 /* WRITESCRIPTLOG */ sub_546( "SP", "Shooting Bullet into Gio", 0 );
                SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U2595, 14989, vVar15 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U2595, 14989, vVar18 ), 100, 1, g_U2857, 0 );
            }
        }
        break;
    }
    return 0;
}

/* CLEANPED */ void sub_3382(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CREATEPED */ void sub_3471(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_3653( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_4246( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_4347( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* LOADMODEL */ void sub_3653(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_3770( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* WRITE_STRING */ void sub_3770(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* SETPEDDEFAULTSTATS */ void sub_4246(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_4347(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_4746(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_3770( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* TELEPORTPED */ void sub_5157(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* CLEANPEDARRAY */ void sub_5609(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_3382( (uParam0^)[I] );
    }
    return;
}

/* F_CHECK_QUIT_RETRY */ int sub_5844(int iParam0)
{
    iParam0 = 1;
    switch (l_U41)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_5926( ref l_U43 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )))
            {
                l_U42 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_2267( ref l_U43, l_U42, 1, 1 );
             /* STARTTIMER */ sub_2417( ref l_U43 );
        }
        if ( /* ISTIMERDONE */ sub_2630( ref l_U43 ))
        {
             /* WRITESCRIPTLOG */ sub_546( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_995() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_995(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U41 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U41 = 2;
            }
            else
            {
                l_U41 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_546( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_6409();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_546( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_6409();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_5926(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_6409()
{
     /* WRITESCRIPTLOG */ sub_546( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_6484( ref l_U43 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_995() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_995(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U40 = 0;
    l_U40 = l_U40;
    l_U41 = 0;
    return;
}

/* RESETTIMER */ void sub_6484(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_6970(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_7081(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_7357(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_7402( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_7402(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_7489( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_7489(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_7541( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_8059( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_7541(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_8059(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* KILL_ANY_MISSION_SPEECH */ void sub_8759(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        PRINTSTRING( "\n KILL_ANY_MISSION_SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

/* KILL_ANY_AMBIENT_SPEECH */ void sub_8959(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        PRINTSTRING( "\n KILL_ANY_AMBIENT_SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 3) AND (g_U1[I] >= 1))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

/* P_CLEANUP_ALL */ void sub_9540()
{
     /* WRITESCRIPTLOG */ sub_546( "SP", "P_CLEANUP_ALL", 0 );
    ISEQ_UNREGISTER_ENTITY( 1748359782, "gio" );
    ISEQ_UNREGISTER_ENTITY( 1748359782, "enemy" );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_9640( 1748359782, ref g_U1272 );
    ISEQ_UNREGISTER_ENTITY( -1561076308, "gio" );
    ISEQ_TERMINATE( -1561076308 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_9640( -1561076308, ref g_U1272 );
    ISEQ_UNREGISTER_ENTITY( 1729910867, "gio" );
    ISEQ_TERMINATE( 1729910867 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_9640( 1729910867, ref g_U1272 );
     /* CLEANPEDARRAY */ sub_5609( ref l_U562 );
     /* CLEANPED */ sub_3382( l_U595 );
     /* CLEANPLACEMENT */ sub_10817( g_U685._fU0 );
     /* P_STOP_SP_CHALLENGES */ sub_10877();
    return;
}

/* P_STREAMREQ_ISEQ_REMOVE */ void sub_9640(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_9778( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a ISEQ asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ int sub_9778(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if ((uParam1^)[I] == iParam0)
            {
                DISPLAYF( "[CCB] ### The THREADID index matches the asset requested for removal: {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
            else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID index is in use and is active: {} ###", 1, 513, (uParam1^)[I] );
                Result = I;
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is in use, but is no longer active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

/* CLEANPLACEMENT */ void sub_10817(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

/* P_STOP_SP_CHALLENGES */ void sub_10877()
{
     /* WRITESCRIPTLOG */ sub_546( "CCB", "P_STOP_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_546( "CCB", "Stopping the Bus_Depot_Garage_Wash context...", 0 );
    END_CONTEXT( "Bus_Depot_Garage_Wash" );
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_11174(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_546( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_11393( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_12557( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_12871( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_13306( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_12871( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_13306( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_12871( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_13306( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_4746( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_13306( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_4746( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_13306( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_13799( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_14001( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_957(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_546( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_11393(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_11455( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_11455(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_12557(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_12871(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_3770( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_13306(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_13799(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_14001(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_11455( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_14099( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_14099(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_SETUP_PLAYER_RELATIONSHIPS */ void sub_15227()
{
     /* WRITESCRIPTLOG */ sub_546( "SP", "P_SETUP_PLAYER_RELATIONSHIPS", 0 );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0)
    {
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_957(), 0, 1 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_957(), 0, 2 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_957(), 0, 6 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_957(), 0, 7 );
    }
    return;
}

/* P_HANDLE_EVENTS */ void sub_15466()
{
    unknown uVar2;
    unknown uVar3;

    switch (l_U144)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_546( "SP", "eCheckpointState = CP_INIT_SCRIPT_DATA", 0 );
         /* P_INIT_SCRIPT_VARIABLES */ sub_15667();
         /* P_INIT_GAMEPLAY_STRUCTS */ sub_16009();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U144 = 2;
         /* WRITESCRIPTLOG */ sub_546( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_546( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_18626( -1204387800, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_18626( g_U2103, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_18626( g_U759, ref g_U910 );
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_21485( g_U2854, ref g_U1211 );
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_21485( g_U2856, ref g_U1211 );
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_21485( g_U2855, ref g_U1211 );
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_21485( g_U2857, ref g_U1211 );
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_21485( g_U2859, ref g_U1211 );
         /* P_STREAMREQ_ISEQ_INSERT */ sub_23480( 1748359782, ref g_U1272 );
         /* P_STREAMREQ_ISEQ_INSERT */ sub_23480( -1561076308, ref g_U1272 );
         /* P_STREAMREQ_ISEQ_INSERT */ sub_23480( 1729910867, ref g_U1272 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_26311( ref g_U1992, ref g_U1369 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_26311( ref g_U2000, ref g_U1369 );
        l_U144 = 3;
         /* WRITESCRIPTLOG */ sub_546( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if ( /* F_STREAMREQ_ALL_ASSETS_LOADED */ sub_28300( ref g_U910, ref g_U1211, ref g_U1272, ref g_U1369, ref g_U1474, ref g_U1535, ref g_U1704, ref g_U1757 ))
        {
            if ((l_U186 == 0) AND (g_U763 == 7))
            {
                l_U186 = 1;
                l_U144 = 4;
                 /* WRITESCRIPTLOG */ sub_546( "SP", "eCheckpointState = CP_DEBUG_GIVE_PLAYER_WEAPON", 0 );
            }
            else
            {
                l_U144 = 6;
                 /* WRITESCRIPTLOG */ sub_546( "SP", "eCheckpointState = CP_HANDLE_WAITING_FOR_GAMEPLAY_FLAG", 0 );
            }
        }
        break;
        case 4:
        if (( /* HAS_SAVEFILE_LOADED */ sub_31719( ref l_U150 )) == 0)
        {
             /* F_GIVEPEDWEAPON */ sub_4746(  /* PLAYER_PED_ID */ sub_957(), g_U2855, 200, 0, 0 );
        }
        l_U144 = 5;
         /* WRITESCRIPTLOG */ sub_546( "SP", "eCheckpointState = CP_DEBUG_WAIT_FOR_PLAYER_WEAPON", 0 );
        case 5:
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0)
        {
            uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_957(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
            {
                g_U2868 = 1;
                l_U144 = 6;
                 /* WRITESCRIPTLOG */ sub_546( "SP", "eCheckpointState = CP_HANDLE_WAITING_FOR_GAMEPLAY_FLAG", 0 );
            }
        }
        break;
        case 6:
        if (g_U2868 == 1)
        {
             /* P_CREATE_S_BUS_GG_FN_03 */ sub_32162();
             /* P_SETUP_GIOVANNA */ sub_33145();
             /* P_SETUP_GIO_AT_WASH_ENTRANCE */ sub_33969();
             /* P_SETUP_BUS_WASH_ENEMIES */ sub_34213();
            l_U144 = 7;
             /* WRITESCRIPTLOG */ sub_546( "SP", "eCheckpointState = CP_START_BUSWASH_FIGHT", 0 );
        }
        break;
        case 7:
         /* WRITESCRIPTLOG */ sub_546( "SP", "eCheckpointState = CP_START_BUSWASH_FIGHT", 0 );
        if ((ISEQ_QUERY_STATE( -1561076308, 3 )) == 1)
        {
            if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_995() )) == 0))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_995(), 1, 0 );
            }
            if (((CUTSCENE_NAMED_IS_LOADING( "vig_10b_bus_concat" )) == 0) AND ((CUTSCENE_IS_LOADED( "vig_10b_bus_concat" )) == 0))
            {
                 /* WRITESCRIPTLOG */ sub_546( "SP", "Prestreaming vig_10_bus_concat", 0 );
                PRE_STREAM_SEAMLESS_CUTSCENE( "vig_10b_bus_concat" );
            }
            if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0)
            {
                SET_PED_NUM_CHARGERS_OVERRIDE(  /* PLAYER_PED_ID */ sub_957(), -1 );
            }
            FORCE_CUSTOM_WIPE_BULLET_CAMERA( 0 );
             /* NIS_POST_SETUP */ sub_36853( 0, 1 );
             /* P_SETDOORAFFECTEDBYBULLETS */ sub_37162( ref g_U2267, 0 );
             /* P_SETDOORAFFECTEDBYBULLETS */ sub_37162( ref g_U2274, 0 );
            AUDIO_MUSIC_FORCE_TRACK( "BUSDEPOT_ACTION_SONG_03", "BUSDEPOT_03_1", "", 0.00000000, 3000, 5000, -1082130432, 0 );
             /* P_START_SP_CHALLENGES */ sub_37336();
             /* CREATETIMER */ sub_2267( ref l_U683, 100, 1, 0 );
             /* STARTTIMER */ sub_2417( ref l_U683 );
             /* CREATETIMER */ sub_2267( ref l_U647, 100, 1, 0 );
             /* STARTTIMER */ sub_2417( ref l_U647 );
             /* CREATETIMER */ sub_2267( ref l_U656, 100, 1, 0 );
             /* STARTTIMER */ sub_2417( ref l_U656 );
            l_U144 = 8;
             /* WRITESCRIPTLOG */ sub_546( "SP", "eCheckpointState = CP_HANDLE_BUSWASH_FIGHT", 0 );
        }
        break;
        case 8:
        if (( /* ISTIMERDONE */ sub_2630( ref l_U683 )) == 1)
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) || ((IS_SCREEN_FADING_OUT() == 1) || (IS_SCREEN_FADED_OUT() == 1)))
            {
                DO_SCREEN_FADE_IN( 0 );
            }
        }
         /* P_HANDLE_GIO_AT_WASH_ENTRANCE */ sub_37697();
        if (l_U852 == 0)
        {
            if (( /* F_ISPLAYERINTRIGGERBOX */ sub_38881( l_U376 )) == 1)
            {
                 /* P_TOGGLE_FREEZE_WASH_PEDS */ sub_39012( 1 );
                l_U852 = 1;
            }
        }
        else if (( /* F_ISPLAYERINTRIGGERBOX */ sub_38881( l_U397 )) == 1)
        {
             /* P_TOGGLE_FREEZE_WASH_PEDS */ sub_39012( 0 );
            l_U852 = 0;
        }
        if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_39461( ref l_U208, 0 )) == 1)
        {
            if (l_U577 == 0)
            {
                PED_SET_ACTION_INTENTION( g_U2595, 39, -1, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_957() ) );
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_6970( ref l_U752 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 1, g_U2595, "GIOVANNA", ref l_U752, 2, 0 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 0,  /* PLAYER_PED_ID */ sub_957(), "MAX", ref l_U752, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_7357( "SBUS_RGGF", ref l_U752, 7, 1 );
                 /* CREATETIMER */ sub_2267( ref l_U634, GET_RANDOM_INT_IN_RANGE( l_U632, l_U633 ), 1, 0 );
                 /* STARTTIMER */ sub_2417( ref l_U634 );
            }
        }
        if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_39461( ref l_U187, 0 )) == 1)
        {
            SET_CAM_VIEW_MODE( 1 );
            if ((l_U150._fU0 == 0) || (g_U764 < 7))
            {
                g_U764 = 7;
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_39860( ref l_U150, g_U764,  /* PLAYER_PED_ID */ sub_957(), g_U2339[7], g_U2466[7], g_U2509[7], g_U2552[7], 1 );
            }
             /* P_SETDOORLOCKED */ sub_18327( ref g_U2253, 1 );
        }
        if (( /* ISTIMERDONE */ sub_2630( ref l_U634 )) == 1)
        {
            if (l_U577 == 0)
            {
                if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
                {
                    if ((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0)
                    {
                        PED_SET_ACTION_INTENTION( g_U2595, 38, -1, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_957() ) );
                         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_6970( ref l_U742 );
                         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 1, g_U2595, "GIOVANNA", ref l_U742, 2, 0 );
                         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 0,  /* PLAYER_PED_ID */ sub_957(), "MAX", ref l_U742, 2, 0 );
                         /* PLAY_SINGLE_SPEECH */ sub_7357( "SBUS_RGGG", ref l_U742, 7, 1 );
                        l_U581 = 1;
                    }
                }
            }
        }
        if (l_U581 == 1)
        {
            if (( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_38085( l_U742 )) == 0)
            {
                if (l_U577 == 0)
                {
                     /* P_START_BUS_WASH_ENEMIES_DIALOGUE */ sub_44724();
                    l_U581 = 0;
                }
            }
        }
        if (( /* F_ISPLAYERINTRIGGERBOX */ sub_38881( l_U376 )) == 0)
        {
            if (l_U577 == 0)
            {
                if ((( /* F_ARE_WASH_BUS_ENEMIES_AWARE_OF_PLAYER */ sub_45067()) == 1) || (( /* F_HAS_PLAYER_SHOT */ sub_44959()) == 1))
                {
                    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_995() )) == 0))
                    {
                        SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_957(), 0 );
                        SET_CAM_VIEW_MODE( 1 );
                    }
                     /* P_START_BUS_WASH_ENEMIES_ATTACK */ sub_45292();
                    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
                    {
                        PED_SET_ACTION_INTENTION( g_U2595, 47, -1, 0.00000000, 0.00000000, 0.00000000 );
                    }
                    AUDIO_MUSIC_FORCE_TRACK( "BUSDEPOT_ACTION_SONG_03", "BUSDEPOT_03_1_4", "", 0.00000000, 2000, 15000, -1082130432, 0 );
                     /* CREATETIMER */ sub_2267( ref l_U647, 0, 1, 0 );
                     /* STARTTIMER */ sub_2417( ref l_U647 );
                     /* CREATETIMER */ sub_2267( ref l_U665, 60, 1, 0 );
                     /* STARTTIMER */ sub_2417( ref l_U665 );
                    l_U577 = 1;
                }
            }
        }
        if (l_U577 == 0)
        {
            if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_39461( ref l_U229, 0 )) == 1)
            {
                 /* P_START_BUS_WASH_ENEMIES_PATROL */ sub_45867();
                AUDIO_MUSIC_REQUEST_ONESHOT( "BUSDEPOT_ONESHOT_09", 0 );
                 /* CREATETIMER */ sub_2267( ref l_U692, 3250, 1, 0 );
                 /* STARTTIMER */ sub_2417( ref l_U692 );
            }
        }
        if (l_U577 == 0)
        {
            if ((( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_39461( ref l_U271, 0 )) == 1) || (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_39461( ref l_U250, 0 )) == 1))
            {
                 /* P_RESTORE_WASH_ENEMIES_SENSE_RANGES */ sub_46771();
            }
        }
        if (( /* ISTIMERDONE */ sub_2630( ref l_U692 )) == 1)
        {
            AUDIO_MUSIC_PLAY_ONESHOT();
        }
        if (l_U576 == 0)
        {
            if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0) AND (((IS_PED_DEAD( l_U562[0] )) == 0) AND ((DOES_PED_EXIST( l_U562[0] )) == 1)))
            {
                if (((VDIST( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_957() ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U562[0] ) )) < 25.00000000) AND (l_U577 == 1))
                {
                     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_6970( ref l_U772 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 0,  /* PLAYER_PED_ID */ sub_957(), "MAX", ref l_U772, 2, 0 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 1, g_U2595, "GIOVANNA", ref l_U772, 2, 0 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 2, l_U562[0], "M10_CP_39_MUS", ref l_U772, 2, 0 );
                     /* PLAY_SINGLE_SPEECH */ sub_7357( "SBUS_RGCC", ref l_U772, 7, 1 );
                    l_U576 = 1;
                }
            }
        }
        if (l_U577 == 1)
        {
            if (l_U580 == 0)
            {
                if (( /* F_ISPLAYERINTRIGGERBOX */ sub_38881( l_U355 )) == 0)
                {
                    l_U580 = 1;
                }
            }
            if ((( /* F_ARE_ENEMIES_ON_BALCONY */ sub_47328()) == 0) AND ((( /* F_ISPLAYERINTRIGGERBOX */ sub_38881( l_U355 )) == 1) AND (l_U580 == 1)))
            {
                if (((IS_PED_DEAD( g_U2595 )) == 0) AND (((DOES_PED_EXIST( g_U2595 )) == 1) AND ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0)))
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_957() ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 1 )) < 3.00000000)
                    {
                        if ((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0)
                        {
                             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_6970( ref l_U782 );
                             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 0,  /* PLAYER_PED_ID */ sub_957(), "MAX", ref l_U782, 2, 0 );
                             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 1, g_U2595, "GIOVANNA", ref l_U782, 2, 0 );
                             /* PLAY_SINGLE_SPEECH */ sub_7357( "SBUS_GVRMG", ref l_U782, 7, 1 );
                            l_U580 = 0;
                        }
                    }
                }
            }
        }
         /* P_HANDLE_WASH_ENEMIES_RUSH_THE_PLAYER */ sub_47684();
        if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_48040( ref l_U562 )) > 0)))
        {
            if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_39461( ref l_U313, 0 )) == 1)
            {
                g_U2628 = 1;
                l_U148 = 4;
                l_U145 = 2;
                 /* WRITESCRIPTLOG */ sub_546( "SP", "eFailState = FAIL_HANDLE_GIO_ABANDONDED_NIS", 0 );
                return;
            }
        }
        if (IS_ROBO_TESTING() == 1)
        {
            if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_48040( ref l_U562 )) > 0)
            {
                if ( /* F_ISPLAYERINTRIGGERBOX */ sub_38881( l_U439 ))
                {
                     /* P_KILL_PEDS_IN_ARRAY */ sub_48326( ref l_U562 );
                     /* WRITESCRIPTLOG */ sub_546( "MRB", "RoboTester is killing your Post Washroom Enemies", 0 );
                }
            }
        }
        if (l_U578 == 0)
        {
            if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_48040( ref l_U562 )) == 1)))
            {
                uVar3 =  /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_48593( ref l_U562 );
                if (((IS_PED_DEAD( uVar3 )) == 0) AND ((DOES_PED_EXIST( uVar3 )) == 1))
                {
                    FORCE_CUSTOM_WIPE_BULLET_CAMERA( 1 );
                    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
                    l_U578 = 1;
                }
            }
        }
        if (l_U579 == 0)
        {
            if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_48040( ref l_U562 )) == 0)
            {
                AUDIO_MUSIC_SUSPEND( 15000 );
                l_U579 = 1;
            }
        }
        if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_48040( ref l_U562 )) == 0)))
        {
            l_U146 = 1;
            l_U144 = 9;
             /* WRITESCRIPTLOG */ sub_546( "SP", "eCheckpointState = CP_HANDLE_GIO_GOTO_EXIT_CUTSCENE", 0 );
        }
        break;
        case 9:
        if (( /* F_HANDLE_GIO_GOTO_EXIT_CUTSCENE */ sub_48976()) == 1)
        {
             /* P_START_CHECKPOINT_THREAD */ sub_50282( ref g_U765[8] );
            l_U147 = 1;
            l_U144 = 10;
             /* WRITESCRIPTLOG */ sub_546( "SP", "eCheckpointState = CP_HANDLE_GIO_GOTO_EXIT_BLEND", 0 );
            break;
        }
        return;
        case 10:
        if (( /* F_HANDLE_GIO_GOTO_WASH_BAY_EXIT */ sub_50418()) == 1)
        {
            FORCE_CUSTOM_WIPE_BULLET_CAMERA( 0 );
             /* P_RESET_CONTEXTUAL_DIALOGUE */ sub_51909();
             /* CREATETIMER */ sub_2267( ref l_U732, 4000, 1, 0 );
             /* STARTTIMER */ sub_2417( ref l_U732 );
             /* CREATETIMER */ sub_2267( ref l_U647, 4000, 1, 0 );
             /* STARTTIMER */ sub_2417( ref l_U647 );
             /* CREATETIMER */ sub_2267( ref l_U656, 4000, 1, 0 );
             /* STARTTIMER */ sub_2417( ref l_U656 );
             /* CREATETIMER */ sub_2267( ref l_U674, 15000, 1, 0 );
             /* STARTTIMER */ sub_2417( ref l_U674 );
            l_U144 = 11;
             /* WRITESCRIPTLOG */ sub_546( "SP", "eCheckpointState = CP_HANDLE_READY_TO_EXIT_WASHBAY", 0 );
        }
        break;
        case 11:
        if ((l_U732._fU16 == 1) || (( /* ISTIMERDONE */ sub_2630( ref l_U732 )) == 1))
        {
             /* P_HANDLE_CONTEXTUAL_DIALOGUE */ sub_52233();
        }
         /* P_HANDLE_GIO_AT_WASH_EXIT */ sub_53666();
        if (( /* F_ISPEDINTRIGGERBOX */ sub_38924(  /* PLAYER_PED_ID */ sub_957(), l_U292 )) == 1)
        {
            if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0)
            {
                if ((GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_957() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_957(), 1 );
                }
            }
        }
        else if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0)
        {
            if ((GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_957() )) == 1)
            {
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_957(), 0 );
            }
        }
        if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_39461( ref l_U418, 0 )) == 1)
        {
            if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0)
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_995(), 1, 0 );
                SIMULATE_PLAYER_INPUT_GAIT(  /* PLAYER_ID */ sub_995(), 2, 3000, 0 );
            }
            g_U2869 = 1;
             /* P_STREAMREQ_MODELNAMES_INSERT */ sub_18626( g_U2104, ref g_U910 );
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U144 = 12;
             /* WRITESCRIPTLOG */ sub_546( "SP", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 12:
         /* WRITESCRIPTLOG */ sub_546( "SP", "eCheckpointState = CP_FINISHED", 0 );
        break;
    }
    return;
}

/* P_INIT_SCRIPT_VARIABLES */ void sub_15667()
{
     /* WRITESCRIPTLOG */ sub_546( "SP", "P_INIT_SCRIPT_VARIABLES", 0 );
    l_U576 = 0;
    l_U577 = 0;
    l_U578 = 0;
    l_U579 = 0;
    l_U580 = 0;
    l_U741 = 0;
    l_U852 = 0;
    l_U581 = 0;
    l_U569[0] = 1;
    l_U569[1] = 0;
    l_U569[2] = 0;
    l_U569[3] = 0;
    l_U569[4] = 0;
    l_U569[5] = 0;
     /* RESETTIMER */ sub_6484( ref l_U647 );
     /* RESETTIMER */ sub_6484( ref l_U656 );
     /* RESETTIMER */ sub_6484( ref l_U665 );
     /* RESETTIMER */ sub_6484( ref l_U634 );
     /* RESETTIMER */ sub_6484( ref l_U674 );
     /* RESETTIMER */ sub_6484( ref l_U683 );
     /* RESETTIMER */ sub_6484( ref l_U692 );
     /* RESETTIMER */ sub_6484( ref l_U596 );
     /* RESETTIMER */ sub_6484( ref l_U605 );
     /* RESETTIMER */ sub_6484( ref l_U614 );
     /* RESETTIMER */ sub_6484( ref l_U623 );
     /* RESETTIMER */ sub_6484( ref l_U705 );
     /* RESETTIMER */ sub_6484( ref l_U714 );
     /* RESETTIMER */ sub_6484( ref l_U723 );
     /* RESETTIMER */ sub_6484( ref l_U732 );
    l_U146 = 0;
    l_U148 = 0;
    l_U147 = 0;
    l_U149 = 0;
    return;
}

/* P_INIT_GAMEPLAY_STRUCTS */ void sub_16009()
{
     /* WRITESCRIPTLOG */ sub_546( "SP", "P_INIT_GAMEPLAY_STRUCTS", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16107( ref l_U464, l_U643, l_U646, -1257669444, 26, 6, 0, 0, 1 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16107( ref l_U483[0], -65.58934000, 39.23922000, 0.00495100, 0.00000000, -1127547254, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16107( ref l_U483[1], -45.82837000, 34.94759000, 0.00495100, 86.98112000, 189167982, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16107( ref l_U483[2], -45.96658000, 37.19738000, 0.00495100, 110.37470000, 96891570, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16107( ref l_U483[3], -43.64118000, 34.88895000, 0.00495100, 353.96800000, 652797115, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16107( ref l_U483[4], -42.87599000, 37.18069000, 0.00495100, 163.68570000, 37216357, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16107( ref l_U483[5], -52.62874000, 39.42408000, 0.95301800, 81.32381000, 1109049697, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16107( ref l_U582, -51.25104000, 44.70924000, 0.00503200, 90.00000000, -1127547254, 26, 6, 0, 0, 1 );
     /* P_CREATETRIGGERBOX */ sub_16614( ref l_U187, "TRIG_WASH_CHECKPOINT", -39.16000000, 33.69000000, 5.00000000, 6.00000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16614( ref l_U208, "TRIG_WASH_ENTER_DOOR", -38.16000000, 34.57000000, 5.00000000, 3.58000000, 5.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16614( ref l_U229, "TRIG_WASH_START_PATROL", -39.16000000, 39.76000000, 4.22000000, 6.00000000, 6.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16614( ref l_U250, "TRIG_WASH_COMBAT_01", -45.73000000, 47.48000000, 2.32000000, 8.00000000, 8.00000000, 4.00000000, 0.00000000, 0.00000000, -5.53999000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16614( ref l_U271, "TRIG_WASH_COMBAT_02", -45.13000000, 40.76000000, -0.32000000, 6.00000000, 12.00000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16614( ref l_U313, "TRIG_WASH_GIO_ABANDONDED", -69.77000000, 46.87000000, 0.20000000, 3.58000000, 2.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16614( ref l_U292, "TRIG_WB_FORCE_WALK", -69.07000000, 46.11000000, -0.20000000, 5.04000000, 7.58000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16614( ref l_U334, "TRIG_WASH_REPOSITION_MAX", -60.62000000, 45.34000000, -0.70000000, 22.45000000, 8.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16614( ref l_U355, "TRIG_WASH_ON_BALCONY", -39.13000000, 40.67000000, 4.54000000, 5.61000000, 17.73000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16614( ref l_U376, "TRIG_FREEZE_WASH_PEDS", -57.36000000, 3.06000000, -0.47000000, 42.88000000, 56.66000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16614( ref l_U397, "TRIG_RE_ADD_WASH_PEDS", -42.37000000, 30.25000000, 4.34000000, 4.00000000, 3.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16614( ref l_U418, "TRIG_START_OFFICE_GAMEPLAY", -69.83000000, 46.99000000, -0.20000000, 5.00000000, 5.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_16614( ref l_U439, "ROBOTESTER is killing your enemies", -41.71000000, 2.00000000, -0.20000000, 2.00000000, 2.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_17769( ref l_U460, "TETHER_WASHBAY_1", -48.74000000, 39.44000000, 0.00000000, 9.52000000, 14.62000000, 4.48000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_17769( ref l_U461, "TETHER_WASHBAY_2", -61.28000000, 38.74000000, 0.00000000, 20.43000000, 13.23000000, 4.48000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_17769( ref l_U462, "TETHER_WASHBAY_3", -59.11000000, 46.23000000, 0.00000000, 16.00000000, 6.00000000, 4.48000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_17769( ref l_U463, "TETH_WASH_BUS", -57.08000000, 39.45000000, 0.00000000, 14.00000000, 2.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CLOSEDOOR */ sub_18070( ref g_U2253, 1 );
     /* P_SETDOORLOCKED */ sub_18327( ref g_U2253, 0 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_16107(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATETRIGGERBOX */ void sub_16614(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATETETHERBOX */ void sub_17769(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CLOSEDOOR */ void sub_18070(int iParam0, int iParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_18096( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_18180( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_18096(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_18180(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_SETDOORLOCKED */ void sub_18327(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if (( /* F_DOESDOOREXIST */ sub_18096( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_18180( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT */ void sub_18626(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 =  /* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ sub_18693( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar4 );
            PRINTNL();
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_18951( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Inserting MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ int sub_18693(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_18951( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is loading: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_18951( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                     /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_18951( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_20482( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being removed: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_18951( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_18951( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ void sub_18951(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19012( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ int sub_19012(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID is active: {} ###", 1, 513, (uParam1^)[I] );
                if ((uParam1^)[I] == iParam0)
                {
                    DISPLAYF( "The THREADID was already requested by this thread!!!", 0 );
                    DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                    (uParam1^)[I] = nil;
                    Result = I;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The THREADID index was requested by another thread!!! {} ###", 1, 513, I );
                }
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is NOT active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

/* P_STREAMREQ_THREADID_RESET */ void sub_20482(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT */ void sub_21485(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ sub_21539( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_21800( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ int sub_21539(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_21800( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is loading: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_21800( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The WEAPON_TYPE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_21800( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_20482( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being removed: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_21800( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            DISPLAYF( "The WEAPON_TYPE asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_21800( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ void sub_21800(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19012( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ISEQ_INSERT */ void sub_23480(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 =  /* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ sub_23541( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar12 );
            PRINTNL();
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar4 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
             /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_23791( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

/* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ int sub_23541(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_23791( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is loading: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_23791( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                        DISPLAYF( "The ISEQ asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_23791( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loading: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_23791( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### Re-requesting ISEQ: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_20482( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_20482( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being removed: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_23791( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar5 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_23791( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ISEQ_THREADID_SET_ID */ void sub_23791(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19012( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_INSERT */ void sub_26311(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ sub_26363( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ANIM_DICT asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_26615( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ int sub_26363(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_26615( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_26615( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ANIM_DICT asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_26615( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_20482( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_26615( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ANIM_DICT asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ANIM_DICT: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
             /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_26615( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ void sub_26615(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19012( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_ALL_ASSETS_LOADED */ int sub_28300(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    if ( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_28344( uParam0 ))
    {
        if ( /* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ sub_28744( uParam1 ))
        {
            if ( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_29148( uParam2 ))
            {
                if ( /* F_STREAMREQ_ANIM_DICT_IS_LOADED */ sub_29564( uParam3 ))
                {
                    if ( /* F_STREAMREQ_VEHICLE_RECORDING_IS_LOADED */ sub_29957( uParam4 ))
                    {
                        if ( /* F_STREAMREQ_ACTION_TREE_IS_LOADED */ sub_30379( uParam5 ))
                        {
                            if ( /* F_STREAMREQ_SCRIPT_STREAM_IS_LOADED */ sub_30759( uParam6 ))
                            {
                                if ( /* F_STREAMREQ_AUDIO_BANK_IS_LOADED */ sub_31147( uParam7 ))
                                {
                                    return 1;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return 0;
}

/* F_STREAMREQ_MODELNAMES_IS_LOADED */ int sub_28344(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be requested: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to load: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be removed: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ int sub_28744(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be requested: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to load: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be removed: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ISEQ_IS_LOADED */ int sub_29148(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be requested: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to load: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be removed: {} ###", 1, 1281, ref uVar3 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ANIM_DICT_IS_LOADED */ int sub_29564(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be requested: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to load: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be removed: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_VEHICLE_RECORDING_IS_LOADED */ int sub_29957(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to be requested: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to load: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to be removed: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ACTION_TREE_IS_LOADED */ int sub_30379(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_LOADED */ int sub_30759(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_AUDIO_BANK_IS_LOADED */ int sub_31147(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* HAS_SAVEFILE_LOADED */ int sub_31719(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_546( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_11174( uParam0,  /* PLAYER_PED_ID */ sub_957() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* P_CREATE_S_BUS_GG_FN_03 */ void sub_32162()
{
     /* WRITESCRIPTLOG */ sub_546( "CO", "P_CREATE_S_BUS_GG_FN_03", 0 );
     /* P_CREATECOLLECTIBLESTRUCT */ sub_32301( ref g_U685, g_U759, -1543980095, 1718691485, -64.16000000, 38.49000000, 1.25000000, 1.50000000, 0.00000000, -15.00000000, "Room_Carwash" );
     /* P_CREATECOLLECTIBLE */ sub_32458( ref g_U685 );
    return;
}

/* P_CREATECOLLECTIBLESTRUCT */ void sub_32301(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_546( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* P_CREATECOLLECTIBLE */ void sub_32458(int iParam0)
{
     /* WRITESCRIPTLOG */ sub_546( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_32541( iParam0->_fU12 )) == 1)
        {
             /* WRITESCRIPTLOG */ sub_546( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_546( "CO", "has never been collected.", 0 );
        }
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_32541( iParam0->_fU12 )) == 0)
        {
             /* CLEANPLACEMENT */ sub_10817( iParam0->_fU0 );
            iParam0->_fU0 =  /* CREATEPLACEMENT */ sub_32811( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                     /* WRITESCRIPTLOG */ sub_546( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_546( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ int sub_32541(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

/* CREATEPLACEMENT */ void sub_32811(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a placement to exist: {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return Result;
}

/* P_SETUP_GIOVANNA */ void sub_33145()
{
     /* WRITESCRIPTLOG */ sub_546( "SP", "P_SETUP_GIOVANNA", 0 );
    if ((((IS_PED_DEAD( g_U2595 )) == 1) AND ((DOES_PED_EXIST( g_U2595 )) == 1)) || ((DOES_PED_EXIST( g_U2595 )) == 0))
    {
         /* CLEANPED */ sub_3382( g_U2595 );
        g_U2595 =  /* CREATEPED */ sub_3471( ref l_U464 );
         /* P_SETUP_GIO_ATTRIBUTES */ sub_33277();
         /* P_SET_PED_INACTIVE */ sub_33716( g_U2595, 0 );
        SET_ROOM_FOR_PED_BY_NAME( g_U2595, ref g_U1824 );
    }
    return;
}

/* P_SETUP_GIO_ATTRIBUTES */ void sub_33277()
{
     /* WRITESCRIPTLOG */ sub_546( "SP", "P_SETUP_GIO_ATTRIBUTES", 0 );
    if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
    {
        SET_PED_NAME_DEBUG( g_U2595, "piGiovanna" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2595, 1 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( g_U2595, 0 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2595, 1 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U2595, 1 );
        SET_PED_CAN_PUSH_PLAYER( g_U2595, 1 );
        SET_PED_GORE_FROM_PLAYER( g_U2595, 1 );
        SET_PED_GORE_FROM_NPC( g_U2595, 0 );
        SET_PED_CAN_BE_TARGETTED( g_U2595, 0 );
        SET_PED_AS_ONE_SHOT_KILL( g_U2595, 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( g_U2595, 1 );
        SET_BULLET_CAM_PREF( g_U2595, "QUICKCUT_FAILSAFE_01", "QUICKCUT_FAILSAFE_01", "QUICKCUT_FAILSAFE_01", "QUICKCUT_FAILSAFE_01", 1, 0, 0, 0, 0, 0, 0, 0 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0)
        {
            SET_PED_PRIMARY_LOOKAT( g_U2595,  /* PLAYER_PED_ID */ sub_957() );
            SET_PED_DEFAULT_AIM_AT_PED( g_U2595,  /* PLAYER_PED_ID */ sub_957() );
        }
    }
    return;
}

/* P_SET_PED_INACTIVE */ void sub_33716(unknown uParam0, boolean bParam1)
{
     /* WRITESCRIPTLOG */ sub_546( "SP", "P_SET_PED_INACTIVE", 0 );
    if (bParam1)
    {
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( uParam0, 1 );
            SET_PED_VISIBLE( uParam0, 0 );
            SET_PED_INVINCIBLE( uParam0, 1 );
            FREEZE_PED_POSITION( uParam0, 1 );
            SET_PED_COLLISION( uParam0, 0 );
        }
    }
    else if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_INVINCIBLE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
    }
    return;
}

/* P_SETUP_GIO_AT_WASH_ENTRANCE */ void sub_33969()
{
     /* WRITESCRIPTLOG */ sub_546( "SP", "P_SETUP_GIO_AT_WASH_ENTRANCE", 0 );
    ISEQ_UNREGISTER_ENTITY( 1444858891, "gio" );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_9640( 1444858891, ref g_U1272 );
    if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
    {
        SET_ROOM_FOR_PED_BY_NAME( g_U2595, ref g_U1824 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2595, 1 );
         /* TELEPORTPED */ sub_5157( g_U2595, l_U643, l_U646 );
        ISEQ_REGISTER_ENTITY( -1561076308, "gio", g_U2595, 0 );
        ISEQ_START( -1561076308 );
    }
    return;
}

/* P_SETUP_BUS_WASH_ENEMIES */ void sub_34213()
{
    int I;

     /* WRITESCRIPTLOG */ sub_546( "SP", "P_SETUP_BUS_WASH_ENEMIES", 0 );
     /* P_SETUP_AI_GROUP */ sub_34298( ref l_U477, 1056964608, 0 );
    for ( I = 0; I < l_U562; I++ )
    {
         /* CLEANPED */ sub_3382( l_U562[I] );
        l_U562[I] =  /* CREATEPED */ sub_3471( ref l_U483[I] );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_34748( l_U562[I], ref l_U477 );
        if (((IS_PED_DEAD( l_U562[I] )) == 0) AND ((DOES_PED_EXIST( l_U562[I] )) == 1))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U562[I], ref g_U1824 );
            FREEZE_PED_POSITION( l_U562[I], 1 );
            SET_PED_ALERTNESS( l_U562[I], 2 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U562[I], 1 );
            SET_PED_AI_TEMPLATE( l_U562[I], ref g_U2088 );
            SET_PED_PATH_CAN_DROP_FROM_HEIGHT( l_U562[I], 0 );
            SET_PED_PATH_CAN_USE_CLIMBOVERS( l_U562[I], 0 );
            SET_PED_COMBAT_ATTRIBUTES( l_U562[I], 4096, 1 );
            SET_PED_COMBAT_ATTRIBUTES( l_U562[I], 512, 1 );
            if (I == 0)
            {
                SET_PED_SEEING_RANGE( l_U562[I], 60.00000000, 75 );
                SET_PED_HEARING_RANGE( l_U562[I], 60.00000000 );
                 /* F_GIVEPEDWEAPON */ sub_4746( l_U562[I], g_U2857, 25000, 0, 0 );
                 /* F_GIVEPEDWEAPONTOHOLSTER */ sub_12871( l_U562[I], g_U2859, 5, 25000, 0 );
            }
            else if (I == 1)
            {
                SET_PED_SEEING_RANGE( l_U562[I], 25.00000000, 75 );
                SET_PED_HEARING_RANGE( l_U562[I], 25.00000000 );
                 /* P_TETHERPED */ sub_35513( ref l_U460, l_U562[I], 1 );
                 /* P_TETHERPED */ sub_35513( ref l_U461, l_U562[I], 1 );
                 /* P_TETHERPED */ sub_35513( ref l_U462, l_U562[I], 1 );
                 /* F_GIVEPEDWEAPON */ sub_4746( l_U562[I], g_U2856, 25000, 0, 0 );
                 /* F_GIVEPEDWEAPONTOHOLSTER */ sub_12871( l_U562[I], g_U2859, 5, 25000, 0 );
            }
            else if (I == 2)
            {
                SET_PED_SEEING_RANGE( l_U562[I], 25.00000000, 75 );
                SET_PED_HEARING_RANGE( l_U562[I], 25.00000000 );
                 /* P_TETHERPED */ sub_35513( ref l_U460, l_U562[I], 1 );
                 /* P_TETHERPED */ sub_35513( ref l_U461, l_U562[I], 1 );
                 /* P_TETHERPED */ sub_35513( ref l_U462, l_U562[I], 1 );
                 /* F_GIVEPEDWEAPON */ sub_4746( l_U562[I], g_U2855, 25000, 0, 0 );
                 /* F_GIVEPEDWEAPONTOHOLSTER */ sub_12871( l_U562[I], g_U2859, 5, 25000, 0 );
            }
            else if (I == 3)
            {
                SET_PED_SEEING_RANGE( l_U562[I], 0.00000000, 75 );
                SET_PED_HEARING_RANGE( l_U562[I], 0.00000000 );
                 /* P_TETHERPED */ sub_35513( ref l_U460, l_U562[I], 1 );
                 /* P_TETHERPED */ sub_35513( ref l_U461, l_U562[I], 1 );
                 /* P_TETHERPED */ sub_35513( ref l_U462, l_U562[I], 1 );
                 /* F_GIVEPEDWEAPON */ sub_4746( l_U562[I], g_U2854, 25000, 0, 0 );
                 /* F_GIVEPEDWEAPONTOHOLSTER */ sub_12871( l_U562[I], g_U2859, 5, 25000, 0 );
            }
            else if (I == 4)
            {
                SET_PED_SEEING_RANGE( l_U562[I], 0.00000000, 75 );
                SET_PED_HEARING_RANGE( l_U562[I], 0.00000000 );
                 /* P_TETHERPED */ sub_35513( ref l_U460, l_U562[I], 1 );
                 /* P_TETHERPED */ sub_35513( ref l_U461, l_U562[I], 1 );
                 /* P_TETHERPED */ sub_35513( ref l_U462, l_U562[I], 1 );
                 /* F_GIVEPEDWEAPON */ sub_4746( l_U562[I], g_U2855, 25000, 0, 0 );
                 /* F_GIVEPEDWEAPONTOHOLSTER */ sub_12871( l_U562[I], g_U2859, 5, 25000, 0 );
            }
            else if (I == 5)
            {
                SET_PED_SEEING_RANGE( l_U562[I], 0.00000000, 75 );
                SET_PED_HEARING_RANGE( l_U562[I], 0.00000000 );
                 /* P_TETHERPED */ sub_35513( ref l_U463, l_U562[I], 1 );
                 /* F_GIVEPEDWEAPON */ sub_4746( l_U562[I], g_U2856, 25000, 0, 0 );
                 /* F_GIVEPEDWEAPONTOHOLSTER */ sub_12871( l_U562[I], g_U2859, 5, 25000, 0 );
            };;;;;;
        }
    }
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_36346( ref l_U562, "piBusWashEnemies" );
    return;
}

/* P_SETUP_AI_GROUP */ void sub_34298(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_34748(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_3770( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_34298( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_34298( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* P_TETHERPED */ void sub_35513(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

/* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ void sub_36346(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

/* NIS_POST_SETUP */ void sub_36853(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_995(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_957(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_36951();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_36951()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_957(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_957(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_957(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_957(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* P_SETDOORAFFECTEDBYBULLETS */ void sub_37162(int iParam0, unknown uParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_18096( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_18180( iParam0 );
    }
    DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( iParam0->_fU0, iParam0->_fU4 ), uParam1 );
    return;
}

/* P_START_SP_CHALLENGES */ void sub_37336()
{
     /* WRITESCRIPTLOG */ sub_546( "CCB", "P_START_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_546( "CCB", "Starting the Bus_Depot_Garage_Wash context...", 0 );
    START_CONTEXT( "Bus_Depot_Garage_Wash" );
    return;
}

/* P_HANDLE_GIO_AT_WASH_ENTRANCE */ void sub_37697()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    float fVar6;

    if (((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_995() )) == 0) AND (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))))
    {
        if ((ISEQ_IS_LOADED( -1561076308 )) == 1)
        {
            if ((ISEQ_QUERY_STATE( -1561076308, 3 )) == 1)
            {
                if ((l_U647._fU16 == 1) || (( /* ISTIMERDONE */ sub_2630( ref l_U647 )) == 1))
                {
                    uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_BULLET_IMPACT_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 3.50000000, ref uVar2 )};
                    fVar6 = VDIST( uVar3, 0.00000000, 0.00000000, 0.00000000 );
                    if (fVar6 > 0.00000000)
                    {
                        PED_SET_ACTION_INTENTION( g_U2595, 48, 500, uVar3 );
                         /* P_DIAL_MAX_SHOOT_AT_GIO */ sub_37957();
                         /* CREATETIMER */ sub_2267( ref l_U647, 2500, 1, 0 );
                         /* STARTTIMER */ sub_2417( ref l_U647 );
                    }
                }
                if (((l_U647._fU16 == 1) || (( /* ISTIMERDONE */ sub_2630( ref l_U647 )) == 1)) AND ((l_U656._fU16 == 1) || (( /* ISTIMERDONE */ sub_2630( ref l_U656 )) == 1)))
                {
                    if (((CAN_PED_SEE_OTHER_PED( g_U2595,  /* PLAYER_PED_ID */ sub_957(), 100.00000000, 20.00000000 )) == 1) AND (((IS_PLAYER_FREE_AIMING_AT_PED(  /* PLAYER_ID */ sub_995(), g_U2595 )) == 1) AND ((IS_PLAYER_GUN_RAISED(  /* PLAYER_ID */ sub_995() )) == 1)))
                    {
                        PED_SET_ACTION_INTENTION( g_U2595, 49, 500, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_957() ) );
                         /* P_DIAL_MAX_AIM_AT_GIO */ sub_38588();
                         /* CREATETIMER */ sub_2267( ref l_U656, 6000, 1, 0 );
                         /* STARTTIMER */ sub_2417( ref l_U656 );
                    }
                }
            }
        }
    }
    return;
}

/* P_DIAL_MAX_SHOOT_AT_GIO */ void sub_37957()
{
     /* WRITESCRIPTLOG */ sub_546( "SP", "P_DIAL_MAX_SHOOT_AT_GIO", 0 );
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
    {
        if ((( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_38085( l_U812 )) == 0) AND (( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_38085( l_U762 )) == 0))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_6970( ref l_U762 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 0,  /* PLAYER_PED_ID */ sub_957(), "MAX", ref l_U762, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 1, g_U2595, "GIOVANNA", ref l_U762, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_7357( "SBUS_GVPHAT", ref l_U762, 7, 1 );
        }
    }
    return;
}

/* IS_SPEECH_CURRENTLY_PLAYING */ int sub_38085(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_38128( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

/* IS_SCRIPT_SPEECH_STRUCT_VALID */ boolean sub_38128(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

/* P_DIAL_MAX_AIM_AT_GIO */ void sub_38588()
{
     /* WRITESCRIPTLOG */ sub_546( "SP", "P_DIAL_MAX_AIM_AT_GIO", 0 );
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
    {
        if ((( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_38085( l_U812 )) == 0) AND (( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_38085( l_U762 )) == 0))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_6970( ref l_U812 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 0,  /* PLAYER_PED_ID */ sub_957(), "MAX", ref l_U812, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 1, g_U2595, "GIOVANNA", ref l_U812, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_7357( "SBUS_GVPATH", ref l_U812, 8, 1 );
        }
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_38881(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_38924(  /* PLAYER_PED_ID */ sub_957(), uParam0 );
}

/* F_ISPEDINTRIGGERBOX */ int sub_38924(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* P_TOGGLE_FREEZE_WASH_PEDS */ void sub_39012(int iParam0)
{
    int I;

    if (iParam0 == 1)
    {
         /* WRITESCRIPTLOG */ sub_546( "SP", "P_TOGGLE_FREEZE_WASH_PEDS - FREEZING", 0 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_546( "SP", "P_TOGGLE_FREEZE_WASH_PEDS - UNFREEZING AND SETTING TO ROOM", 0 );
    }
    if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
    {
        FREEZE_PED_POSITION( g_U2595, iParam0 );
        SET_PED_FREEZE_PROCESSING( g_U2595, iParam0 );
        if (iParam0 == 0)
        {
            SET_ROOM_FOR_PED_BY_NAME( g_U2595, ref g_U1824 );
        }
    }
    for ( I = 0; I < l_U562; I++ )
    {
        if (((IS_PED_DEAD( l_U562[I] )) == 0) AND ((DOES_PED_EXIST( l_U562[I] )) == 1))
        {
            FREEZE_PED_POSITION( l_U562[I], iParam0 );
            SET_PED_FREEZE_PROCESSING( l_U562[I], iParam0 );
            if (iParam0 == 0)
            {
                SET_ROOM_FOR_PED_BY_NAME( l_U562[I], ref g_U1824 );
            }
        }
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_39461(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_38924(  /* PLAYER_PED_ID */ sub_957(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_39860(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_546( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_546( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_14001( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_40151( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_40628( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_40628( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_40888( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_40628( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_40888( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_40888( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_40628( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_40888( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_40888( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_40888( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_40628( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_40888( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_40888( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_40888( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_40888( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_42468( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_546( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_40151(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_11455( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_546( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_546( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_40628(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_40888(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_42468(int iParam0)
{
     /* WRITE_STRING */ sub_3770( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_42556( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_42633( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_42633( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_42633( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_42802( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_42802( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_42802( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_42802( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_42802( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_42802( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_42802( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_42802( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_42802( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_42802( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_42802( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_42633( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_42802( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_42802( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_42802( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_42633( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_43503( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_42802( iParam0->_fU52 );
     /* WRITE_STRING */ sub_3770( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_42802( iParam0->_fU96 );
     /* WRITE_STRING */ sub_3770( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_42802( iParam0->_fU100 );
     /* WRITE_STRING */ sub_3770( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_42802( iParam0->_fU104 );
     /* WRITE_STRING */ sub_3770( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_42802( iParam0->_fU108 );
     /* WRITE_STRING */ sub_3770( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_42802( iParam0->_fU112 );
     /* WRITE_STRING */ sub_3770( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_42802( iParam0->_fU116 );
     /* WRITE_STRING */ sub_3770( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_42802( iParam0->_fU120 );
     /* WRITE_STRING */ sub_3770( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_42802( iParam0->_fU124 );
     /* WRITE_STRING */ sub_3770( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_42802( iParam0->_fU128 );
     /* WRITE_STRING */ sub_3770( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_42802( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_42802( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_42802( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_42556(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_42633(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_42802(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_43503(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* P_START_BUS_WASH_ENEMIES_DIALOGUE */ void sub_44724()
{
     /* WRITESCRIPTLOG */ sub_546( "kja", "Washbay Enemy dialogue", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_6970( ref l_U842 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 1, l_U562[1], "M10_CP_67_AVG", ref l_U842, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 2, l_U562[2], "M10_CP_68_AVG", ref l_U842, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_7357( "SBUS_BDWSBAY", ref l_U842, 7, 1 );
    return;
}

/* F_HAS_PLAYER_SHOT */ int sub_44959()
{
    int iVar2;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0)
    {
        if (HAS_SHOT_BEEN_FIRED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_957() ), 2.00000000, 1, ref iVar2 ))
        {
            if (iVar2 == ( /* PLAYER_PED_ID */ sub_957()))
            {
                return 1;
            }
        }
    }
    return 0;
}

/* F_ARE_WASH_BUS_ENEMIES_AWARE_OF_PLAYER */ int sub_45067()
{
    int I;

    for ( I = 0; I < l_U562; I++ )
    {
        if (((IS_PED_DEAD( l_U562[I] )) == 0) AND ((DOES_PED_EXIST( l_U562[I] )) == 1))
        {
            if ((GET_PED_AWARENESS_STATE( l_U562[I],  /* PLAYER_PED_ID */ sub_957(), 15 )) == 1)
            {
                return 1;
            }
        }
    }
    return 0;
}

/* P_START_BUS_WASH_ENEMIES_ATTACK */ void sub_45292()
{
    int I;

     /* WRITESCRIPTLOG */ sub_546( "SP", "P_START_BUS_WASH_ENEMIES_ATTACK", 0 );
    for ( I = 0; I < l_U562; I++ )
    {
        if (((IS_PED_DEAD( l_U562[I] )) == 0) AND ((DOES_PED_EXIST( l_U562[I] )) == 1))
        {
            FREEZE_PED_POSITION( l_U562[I], 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U562[I], 0 );
            SET_PED_SEEING_RANGE( l_U562[I], 60.00000000, 75 );
            SET_PED_HEARING_RANGE( l_U562[I], 60.00000000 );
            REGISTER_TARGET( l_U562[I],  /* PLAYER_PED_ID */ sub_957() );
            if (I == 0)
            {
                ;
            }
            else if (I == 1)
            {
                ;
            }
            else if (I == 2)
            {
                ;
            }
            else if (I == 3)
            {
                ;
            }
            else if (I == 4)
            {
                ;
            }
            else if (I == 5)
            {
                ;
            };;;;;;
        }
    }
    return;
}

/* P_START_BUS_WASH_ENEMIES_PATROL */ void sub_45867()
{
    int I;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

     /* WRITESCRIPTLOG */ sub_546( "SP", "P_START_BUS_WASH_ENEMIES_PATROL", 0 );
    MARK_COVERPOINTMP3_SEARCHABLE( "GenCover", "6FCDCC24_E9181B8C_Corner1", 1 );
    MARK_COVERPOINTMP3_SEARCHABLE( "GenCover", "6FCDCC24_E9181B8C_Corner2", 1 );
    MARK_COVERPOINTMP3_SEARCHABLE( "GenCover", "6FCDCC24_3652B600_Corner2", 1 );
    MARK_COVERPOINTMP3_SEARCHABLE( "GenCover", "6FCDCC24_3652B600_Corner1", 1 );
    MARK_COVERPOINTMP3_SEARCHABLE( "GenCover", "6FCDCC24_1A2C489E_Corner2", 1 );
    for ( I = 0; I < l_U562; I++ )
    {
        if (((IS_PED_DEAD( l_U562[I] )) == 0) AND ((DOES_PED_EXIST( l_U562[I] )) == 1))
        {
            FREEZE_PED_POSITION( l_U562[I], 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U562[I], 0 );
            if (I == 0)
            {
                OPEN_SEQUENCE_TASK( ref uVar3 );
                TASK_STAND_STILL( 0, 250 );
                TASK_SEARCH_FOR_PED_AT_COVER_POINT( 0, "GenCover", "6FCDCC24_B5257E96_Corner2", 1 );
                TASK_SEARCH_FOR_UNSEEN_ENEMY( 0, 1 );
                CLOSE_SEQUENCE_TASK( uVar3 );
                TASK_PERFORM_SEQUENCE( l_U562[I], uVar3 );
                CLEAR_SEQUENCE_TASK( uVar3 );
            }
            else if (I == 1)
            {
                OPEN_SEQUENCE_TASK( ref uVar4 );
                TASK_FOLLOW_NAV_MESH_TO_COORD( 0, -65.66103000, 35.06416000, 0.00495100, 2, -1, 1048576000, 0, 0 );
                TASK_SEARCH_FOR_UNSEEN_ENEMY( 0, 1 );
                CLOSE_SEQUENCE_TASK( uVar4 );
                TASK_PERFORM_SEQUENCE( l_U562[I], uVar4 );
                CLEAR_SEQUENCE_TASK( uVar4 );
            }
            else if (I == 2)
            {
                OPEN_SEQUENCE_TASK( ref uVar5 );
                TASK_STAND_STILL( 0, 1000 );
                TASK_SMART_FOLLOW_PED( 0, l_U562[1], 0.00000000, -1.50000000, 0.00000000, 2, -1, 1056964608, 1, 1 );
                CLOSE_SEQUENCE_TASK( uVar5 );
                TASK_PERFORM_SEQUENCE( l_U562[I], uVar5 );
                CLEAR_SEQUENCE_TASK( uVar5 );
            }
            else if (I == 3)
            {
                ;
            }
            else if (I == 4)
            {
                ;
            }
            else if (I == 5)
            {
                ;
            };;;;;;
        }
    }
    return;
}

/* P_RESTORE_WASH_ENEMIES_SENSE_RANGES */ void sub_46771()
{
    int I;

     /* WRITESCRIPTLOG */ sub_546( "SP", "P_RESTORE_WASH_ENEMIES_SENSE_RANGES", 0 );
    for ( I = 0; I < l_U562; I++ )
    {
        if (((IS_PED_DEAD( l_U562[I] )) == 0) AND ((DOES_PED_EXIST( l_U562[I] )) == 1))
        {
            SET_PED_SEEING_RANGE( l_U562[I], 60.00000000, 75 );
            SET_PED_HEARING_RANGE( l_U562[I], 60.00000000 );
        }
    }
    return;
}

/* F_ARE_ENEMIES_ON_BALCONY */ int sub_47328()
{
    int I;

    for ( I = 0; I < l_U562; I++ )
    {
        if (((IS_PED_DEAD( l_U562[I] )) == 0) AND ((DOES_PED_EXIST( l_U562[I] )) == 1))
        {
            if (( /* F_ISPEDINTRIGGERBOX */ sub_38924( l_U562[I], l_U355 )) == 1)
            {
                return 1;
            }
        }
    }
    return 0;
}

/* P_HANDLE_WASH_ENEMIES_RUSH_THE_PLAYER */ void sub_47684()
{
    int I;

    for ( I = 1; I <= (l_U562 - 1); I++ )
    {
        if (l_U569[I] == 0)
        {
            if (((IS_PED_DEAD( l_U562[I - 1] )) == 1) AND ((DOES_PED_EXIST( l_U562[I - 1] )) == 1))
            {
                if (((IS_PED_DEAD( l_U562[I] )) == 0) AND ((DOES_PED_EXIST( l_U562[I] )) == 1))
                {
                     /* P_REMOVETETHERFROMPED */ sub_47869( ref l_U460, l_U562[I] );
                     /* P_REMOVETETHERFROMPED */ sub_47869( ref l_U461, l_U562[I] );
                     /* P_REMOVETETHERFROMPED */ sub_47869( ref l_U462, l_U562[I] );
                     /* P_REMOVETETHERFROMPED */ sub_47869( ref l_U463, l_U562[I] );
                }
                l_U569[I] = 1;
            }
        }
    }
    return;
}

/* P_REMOVETETHERFROMPED */ void sub_47869(int iParam0, unknown uParam1)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_REMOVE_BOX( uParam1, iParam0->_fU0 );
    }
    return;
}

/* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ void sub_48040(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

/* P_KILL_PEDS_IN_ARRAY */ void sub_48326(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_KILL_PED */ sub_48380( (uParam0^)[I] );
    }
    return;
}

/* P_KILL_PED */ void sub_48380(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

/* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ void sub_48593(unknown uParam0)
{
    int I;

    if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_48040( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

/* F_HANDLE_GIO_GOTO_EXIT_CUTSCENE */ int sub_48976()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;

    switch (l_U146)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_546( "SP", "eGioGotoExitCutsceneState = CUTSCENE_REQUEST_ASSETS", 0 );
        if (((CUTSCENE_NAMED_IS_LOADING( "vig_10b_bus_concat" )) == 0) AND ((CUTSCENE_IS_LOADED( "vig_10b_bus_concat" )) == 0))
        {
             /* WRITESCRIPTLOG */ sub_546( "SP", "Prestreaming vig_10_bus_concat #2", 0 );
            PRE_STREAM_SEAMLESS_CUTSCENE( "vig_10b_bus_concat" );
        }
        l_U146 = 2;
         /* WRITESCRIPTLOG */ sub_546( "SP", "eGioGotoExitCutsceneState = CUTSCENE_LOAD_ASSETS", 0 );
        case 2:
        if ((CUTSCENE_IS_LOADED( "vig_10b_bus_concat" )) == 1)
        {
            l_U146 = 3;
             /* WRITESCRIPTLOG */ sub_546( "SP", "eGioGotoExitCutsceneState = CUTSCENE_START", 0 );
            break;
        }
        return 0;
        case 3:
         /* WRITESCRIPTLOG */ sub_546( "SP", "eGioGotoExitCutsceneState = CUTSCENE_START", 0 );
        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_995() )) == 0))
        {
            ;
        }
        if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
        {
            PED_SET_ACTION_INTENTION( g_U2595, 56, -1, 0.00000000, 0.00000000, 0.00000000 );
        }
        if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
        {
            CUTSCENE_REGISTER_PED_TELEPORT( g_U2595, l_U701, l_U704 );
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2595, "Giov_Bus", 0 );
        }
        ISEQ_REGISTER_ENTITY( 1729910867, "gio", g_U2595, 0 );
        CUTSCENE_REGISTER_ISEQ( 1729910867 );
        START_SEAMLESS_CUTSCENE();
        l_U146 = 4;
         /* WRITESCRIPTLOG */ sub_546( "SP", "eGioGotoExitCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_546( "SP", "eGioGotoExitCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_995() )) == 0))
        {
            SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_957(), 0 );
        }
        if ((IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED() == 0) AND ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0))
        {
            START_PANEL_WIPE( 300, 6 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        }
        DO_SCREEN_FADE_IN( 0 );
        l_U146 = 5;
         /* WRITESCRIPTLOG */ sub_546( "SP", "eGioGotoExitCutsceneState = CUTSCENE_PLAYING", 0 );
        break;
        case 5:
        if (HAS_CUTSCENE_FINISHED() == 1)
        {
            if (((CUTSCENE_NAMED_IS_LOADING( "vig_10b_bus_concat" )) == 1) AND ((CUTSCENE_IS_LOADED( "vig_10b_bus_concat" )) == 1))
            {
                CLEAR_NAMED_CUTSCENE( "vig_10b_bus_concat" );
            }
            l_U146 = 0;
             /* WRITESCRIPTLOG */ sub_546( "SP", "eGioGotoExitCutsceneState = CUTSCENE_IDLE", 0 );
            return 1;
        }
        else
        {
            uVar2 = GET_CUTSCENE_SECTION_PLAYING();
            uVar3 = GET_CUTSCENE_TIME();
            uVar4 = GET_CUTSCENE_TIME_MS();
        }
        break;
    }
    return 0;
}

/* P_START_CHECKPOINT_THREAD */ void sub_50282(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

/* F_HANDLE_GIO_GOTO_WASH_BAY_EXIT */ int sub_50418()
{
    vector vVar2;
    float fVar5;

    vVar2 = {-57.20000000, 45.12000000, 1.70000000};
    fVar5 = 180.00000000;
    switch (l_U147)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_546( "SP", "eGioToWashBayExitNISState = NIS_IDLE", 0 );
        break;
        case 1:
         /* WRITESCRIPTLOG */ sub_546( "SP", "eGioToWashBayExitNISState = NIS_SETUP", 0 );
         /* NIS_PRE_SETUP */ sub_2083( 1, 0, 0, 1 );
        ISEQ_UNREGISTER_ENTITY( 1748359782, "gio" );
        ISEQ_UNREGISTER_ENTITY( 1748359782, "enemy" );
         /* P_STREAMREQ_ISEQ_REMOVE */ sub_9640( 1748359782, ref g_U1272 );
        ISEQ_UNREGISTER_ENTITY( -1561076308, "gio" );
        ISEQ_TERMINATE( -1561076308 );
         /* P_STREAMREQ_ISEQ_REMOVE */ sub_9640( -1561076308, ref g_U1272 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_BUS_CP_04", "VIG_10B_BUS_WALK_TO_COVER_CAM", 1, vVar2, fVar5, 0, 0 );
         /* P_REPOSITION_PLAYER_IN_WASHBAY */ sub_50810();
         /* CREATETIMER */ sub_2267( ref l_U705, 500, 1, 0 );
         /* STARTTIMER */ sub_2417( ref l_U705 );
         /* CREATETIMER */ sub_2267( ref l_U714, 4000, 1, 0 );
         /* STARTTIMER */ sub_2417( ref l_U714 );
        l_U147 = 6;
         /* WRITESCRIPTLOG */ sub_546( "SP", "eGioToWashBayExitNISState = NIS_FIRST_FRAME", 0 );
        break;
        case 6:
         /* CREATETIMER */ sub_2267( ref l_U723, 30, 1, 0 );
         /* STARTTIMER */ sub_2417( ref l_U723 );
        l_U147 = 7;
         /* WRITESCRIPTLOG */ sub_546( "SP", "eGioToWashBayExitNISState = NIS_PLAYING", 0 );
        break;
        case 7:
        if (( /* ISTIMERDONE */ sub_2630( ref l_U723 )) == 1)
        {
            if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_995() )) == 0))
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_957(), 0 );
            }
        }
        if (( /* ISTIMERDONE */ sub_2630( ref l_U705 )) == 1)
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_6970( ref l_U792 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 0,  /* PLAYER_PED_ID */ sub_957(), "MAX", ref l_U792, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 1, g_U2595, "GIOVANNA", ref l_U792, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_7357( "SBUS_GVDBC", ref l_U792, 7, 1 );
        }
        if (( /* ISTIMERDONE */ sub_2630( ref l_U714 )) == 1)
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_6970( ref l_U822 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 0,  /* PLAYER_PED_ID */ sub_957(), "MAX", ref l_U822, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 1,  /* PLAYER_PED_ID */ sub_957(), "MAX", ref l_U822, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_7357( "SBUS_WBAERDA", ref l_U822, 7, 1 );
        }
        if (l_U741 == 0)
        {
            if ((CAMERA_ANIMATED_CURRENT_TIME() + 30) > (CAMERA_ANIMATED_LENGTH( "LEVEL_S_BUS_CP_04", "VIG_10B_BUS_WALK_TO_COVER_CAM" )))
            {
                if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_995() )) == 0))
                {
                    SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_957(), 1 );
                }
                l_U741 = 1;
            }
        }
        if (IS_ANIMATED_CAMERA_PLAYING() == 0)
        {
            SET_CAM_VIEW_MODE( 1 );
             /* NIS_POST_SETUP */ sub_36853( 1, 1 );
            l_U147 = 0;
             /* WRITESCRIPTLOG */ sub_546( "SP", "eGioToWashBayExitNISState = NIS_IDLE", 0 );
            return 1;
        }
        break;
    }
    return 0;
}

/* P_REPOSITION_PLAYER_IN_WASHBAY */ void sub_50810()
{
    vector vVar2;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    vector vVar10;
    float fVar13;

     /* WRITESCRIPTLOG */ sub_546( "SP", "P_REPOSITION_PLAYER_IN_WASHBAY", 0 );
    vVar2 = {-67.12000000, 44.99000000, 2.16000000};
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_995() )) == 0))
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_957() )};
        iVar9 = GET_GROUND_Z_FOR_3D_COORD( uVar5, ref uVar8 );
        if (iVar9 == 1)
        {
            uVar5._fU8 = uVar8;
        }
        else
        {
            uVar5._fU8 -= 1.00000000;
        }
         /* TELEPORTPED */ sub_5157(  /* PLAYER_PED_ID */ sub_957(), uVar5, 0.00000000 );
    }
    if (( /* F_ISPLAYERINTRIGGERBOX */ sub_38881( l_U334 )) == 1)
    {
        vVar10 = {-59.72548000, 43.74585000, 0.00500400};
        fVar13 = 84.52828000;
         /* TELEPORTPED */ sub_5157(  /* PLAYER_PED_ID */ sub_957(), vVar10, fVar13 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( 5.36160900, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( -6.45476500, 1065353216, 0 );
    }
    else if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
    {
        CAMERA_SNAP_POINT_AT_COORD( vVar2 );
    }
    return;
}

/* P_RESET_CONTEXTUAL_DIALOGUE */ void sub_51909()
{
     /* WRITESCRIPTLOG */ sub_546( "SP", "P_RESET_CONTEXTUAL_DIALOGUE", 0 );
    l_U140 = 0;
    l_U141 = 0;
    l_U86 = 0;
    l_U142 = 0;
     /* RESETTIMER */ sub_6484( ref l_U68 );
     /* RESETTIMER */ sub_6484( ref l_U77 );
    return;
}

/* P_HANDLE_CONTEXTUAL_DIALOGUE */ void sub_52233()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    float fVar6;
    float fVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (l_U140 == 0)
    {
         /* CREATETIMER */ sub_2267( ref l_U68, 6000, 1, 0 );
         /* STARTTIMER */ sub_2417( ref l_U68 );
        l_U140 = 1;
    }
    if (((IS_PED_DEAD( g_U2595 )) == 0) AND (((DOES_PED_EXIST( g_U2595 )) == 1) AND ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0)))
    {
        if (((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0) AND ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)))
        {
            if ((l_U68._fU16 == 1) || (( /* ISTIMERDONE */ sub_2630( ref l_U68 )) == 1))
            {
                if ((IS_PLAYER_SHOOTDODGING() == 1) AND ((CAN_PED_SEE_OTHER_PED( g_U2595,  /* PLAYER_PED_ID */ sub_957(), 110.00000000, 15.00000000 )) == 1))
                {
                     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_6970( ref l_U87 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 0,  /* PLAYER_PED_ID */ sub_957(), "MAX", ref l_U87, 2, 0 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 1, g_U2595, "GIOVANNA", ref l_U87, 2, 0 );
                     /* PLAY_SINGLE_SPEECH */ sub_7357( "SBUS_GVPMAR", ref l_U87, 7, 1 );
                     /* CREATETIMER */ sub_2267( ref l_U68, 6000, 1, 0 );
                     /* STARTTIMER */ sub_2417( ref l_U68 );
                }
                if ((HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 30.00000000, ref iVar2 )) == 1)
                {
                    if (iVar2 == ( /* PLAYER_PED_ID */ sub_957()))
                    {
                        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_BULLET_IMPACT_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 30.00000000, ref iVar2 )};
                        fVar6 = VDIST( uVar3, 0.00000000, 0.00000000, 0.00000000 );
                        if (fVar6 > 0.00000000)
                        {
                            fVar7 = VDIST( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ) );
                            if (fVar7 > 8.00000000)
                            {
                                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_6970( ref l_U97 );
                                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 0,  /* PLAYER_PED_ID */ sub_957(), "MAX", ref l_U97, 2, 0 );
                                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 1, g_U2595, "GIOVANNA", ref l_U97, 2, 0 );
                                 /* PLAY_SINGLE_SPEECH */ sub_7357( "SBUS_GVPSC", ref l_U97, 7, 1 );
                                 /* CREATETIMER */ sub_2267( ref l_U68, 6000, 1, 0 );
                                 /* STARTTIMER */ sub_2417( ref l_U68 );
                            }
                        }
                    }
                }
            }
        }
    }
    if (((IS_PED_DEAD( g_U2595 )) == 0) AND (((DOES_PED_EXIST( g_U2595 )) == 1) AND ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0)))
    {
        if (((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0) AND ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)))
        {
            uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_957() )};
            if ((VDIST( uVar8, l_U137 )) > 0.10000000)
            {
                 /* RESETTIMER */ sub_6484( ref l_U77 );
            }
            else if ((l_U77._fU16 == 0) AND (l_U77._fU20 == 0))
            {
                 /* CREATETIMER */ sub_2267( ref l_U77, 35000, 1, 0 );
                 /* STARTTIMER */ sub_2417( ref l_U77 );
            }
            if ((l_U77._fU16 == 1) || (( /* ISTIMERDONE */ sub_2630( ref l_U77 )) == 1))
            {
                if (l_U86 < 6)
                {
                    if ((l_U143 == 0) AND (g_U764 == 6))
                    {
                         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_6970( ref l_U117 );
                         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 0,  /* PLAYER_PED_ID */ sub_957(), "MAX", ref l_U117, 2, 0 );
                         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 1,  /* PLAYER_PED_ID */ sub_957(), "MAX", ref l_U117, 2, 0 );
                         /* PLAY_SINGLE_SPEECH */ sub_7357( "SBUS_MJDBPBB", ref l_U117, 7, 1 );
                        l_U143 = 1;
                    }
                    else
                    {
                         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_6970( ref l_U107 );
                         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 0,  /* PLAYER_PED_ID */ sub_957(), "MAX", ref l_U107, 2, 0 );
                         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 1, g_U2595, "GIOVANNA", ref l_U107, 2, 0 );
                         /* PLAY_SINGLE_SPEECH */ sub_7357( "SBUS_GVPSD", ref l_U107, 7, 1 );
                    }
                     /* CREATETIMER */ sub_2267( ref l_U77, 35000, 1, 0 );
                     /* STARTTIMER */ sub_2417( ref l_U77 );
                    l_U86++;
                }
            }
            l_U137 = {uVar8};
        }
    }
    if (l_U141 == 0)
    {
        l_U142 = GET_PAYNEKILLER_AMT();
        l_U141 = 1;
    }
    if (l_U142 < GET_PAYNEKILLER_AMT())
    {
        if ((( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_53425()) == 0) AND ((TIME_SINCE_LAST_MONOLOGUE() > 5000) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0))))))
        {
             /* WRITESCRIPTLOG */ sub_546( "SP", "Playing Pills Monologue", 0 );
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_6970( ref l_U127 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 0,  /* PLAYER_PED_ID */ sub_957(), "MAX", ref l_U127, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 1,  /* PLAYER_PED_ID */ sub_957(), "MAX", ref l_U127, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_7357( "SBUS_MFSFPLS", ref l_U127, 7, 1 );
        }
    }
    l_U142 = GET_PAYNEKILLER_AMT();
    return;
}

/* IS_ANY_SPEECH_CURRENTLY_PLAYING */ void sub_53425()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

/* P_HANDLE_GIO_AT_WASH_EXIT */ void sub_53666()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    float fVar6;

    if ((ISEQ_IS_LOADED( 1729910867 )) == 1)
    {
        if ((ISEQ_QUERY_STATE( 1729910867, 3 )) == 1)
        {
            if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_957() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
            {
                if ((l_U647._fU16 == 1) || (( /* ISTIMERDONE */ sub_2630( ref l_U647 )) == 1))
                {
                    if ((HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 4.00000000, ref uVar2 )) == 1)
                    {
                        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_BULLET_IMPACT_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 4.00000000, ref uVar2 )};
                        fVar6 = VDIST( uVar3, 0.00000000, 0.00000000, 0.00000000 );
                        if (fVar6 > 0.00000000)
                        {
                            PED_SET_ACTION_INTENTION( g_U2595, 48, 500, uVar3 );
                             /* P_DIAL_MAX_SHOOT_AT_GIO */ sub_37957();
                             /* CREATETIMER */ sub_2267( ref l_U647, 2500, 1, 0 );
                             /* STARTTIMER */ sub_2417( ref l_U647 );
                        }
                    }
                }
                if (((l_U647._fU16 == 1) || (( /* ISTIMERDONE */ sub_2630( ref l_U647 )) == 1)) AND ((l_U656._fU16 == 1) || (( /* ISTIMERDONE */ sub_2630( ref l_U656 )) == 1)))
                {
                    if (((CAN_PED_SEE_OTHER_PED( g_U2595,  /* PLAYER_PED_ID */ sub_957(), 100.00000000, 20.00000000 )) == 1) AND (((IS_PLAYER_FREE_AIMING_AT_PED(  /* PLAYER_ID */ sub_995(), g_U2595 )) == 1) AND ((IS_PLAYER_GUN_RAISED(  /* PLAYER_ID */ sub_995() )) == 1)))
                    {
                        PED_SET_ACTION_INTENTION( g_U2595, 49, 500, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_957() ) );
                         /* P_DIAL_MAX_AIM_AT_GIO */ sub_38588();
                         /* CREATETIMER */ sub_2267( ref l_U656, 6000, 1, 0 );
                         /* STARTTIMER */ sub_2417( ref l_U656 );
                    }
                }
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_957() ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 1 )) > 6.00000000)
                    {
                        if ((l_U674._fU16 == 1) || (( /* ISTIMERDONE */ sub_2630( ref l_U674 )) == 1))
                        {
                            if ((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0)
                            {
                                PED_SET_ACTION_INTENTION( g_U2595, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
                                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_6970( ref l_U802 );
                                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 0,  /* PLAYER_PED_ID */ sub_957(), "MAX", ref l_U802, 2, 0 );
                                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_7081( 1, g_U2595, "GIOVANNA", ref l_U802, 2, 0 );
                                 /* PLAY_SINGLE_SPEECH */ sub_7357( "SBUS_GVWMEW", ref l_U802, 7, 1 );
                                 /* CREATETIMER */ sub_2267( ref l_U674, 25000, 1, 0 );
                                 /* STARTTIMER */ sub_2417( ref l_U674 );
                            }
                        }
                    }
                }
            }
        }
    }
    return;
}

/* P_UNLOAD_ASSETS */ void sub_54756()
{
     /* WRITESCRIPTLOG */ sub_546( "SP", "P_UNLOAD_ASSETS", 0 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_54822( g_U2103, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_54822( g_U2103, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_54822( g_U759, ref g_U910 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_55306( ref g_U1992, ref g_U1369 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_55306( ref g_U2000, ref g_U1369 );
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE */ void sub_54822(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_9778( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a MODEL_NAME asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Removing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_REMOVE */ void sub_55306(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_9778( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ANIM_DICT asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}


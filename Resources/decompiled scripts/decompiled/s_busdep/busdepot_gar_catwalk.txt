void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U40 = 0;
    l_U41 = 0;
    l_U42 = 1500;
    StrCopy( ref l_U52, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U60, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U86 = {-48.86700000, -3.21700000, 0.28500000};
    l_U89 = {-62.95700000, 22.56530000, 0.28500000};
    l_U110 = 300;
    l_U111 = 0.41000000;
    l_U112 = 0.43000000;
    l_U407 = {-48.40881000, 30.16530000, 4.95247200};
    l_U410 = {-55.23871000, 28.67000000, 4.79310800};
    l_U413 = {-49.52864000, 28.60562000, 4.79182700};
    l_U416 = {-62.09500000, 1.07200000, 7.60000000};
    l_U419 = 300.00000000;
    l_U420 = {-49.41200000, 17.53000000, 7.60000000};
    l_U423 = 120.00000000;
    l_U424 = {-48.48600000, -2.24900000, 0.25200000};
    l_U427 = {-90.00000000, 0.00000000, 0.00000000};
    l_U430 = {-64.10700000, 20.34100000, 0.25200000};
    l_U433 = {90.00000000, 0.00000000, 0.00000000};
    l_U436 = 3.50000000;
    l_U456 = 0;
    l_U457 = 0;
    l_U458 = 0;
    l_U459 = 0;
    l_U461 = 0;
    l_U481 = 0;
    l_U535 = 0;
    l_U536 = 0;
    l_U537 = 0;
    l_U538 = 0;
    l_U539 = 0;
    l_U540 = 0;
    l_U544 = 0;
    l_U545 = 0;
    l_U582 = 0;
    l_U773 = 0;
    l_U820 = 0;
    l_U840 = 0;
    l_U841 = 0;
    l_U842 = -1;
    l_U843 = -1;
    l_U844 = -1;
    l_U845 = 0;
    l_U846 = 0;
    l_U847 = 0;
    l_U848 = 0;
    l_U849 = 0;
    l_U850 = 0;
    l_U851 = 0;
    l_U910 = {-49.10700000, 6.39800000, 6.05500000};
    l_U913 = -90.00000000;
    l_U914 = {-61.57365000, 7.02749000, 6.00006900};
    l_U917 = 265.00000000;
    l_U918 = {-61.90730000, 6.17865000, 6.00006900};
    l_U921 = 265.00000000;
    l_U922 = {-49.80000000, 0.42300000, 0.00500000};
    l_U925 = 0.00000000;
    l_U926 = {-48.60000000, 0.23100000, 1.00000000};
    l_U929 = 0.00000000;
    l_U930 = 0;
    l_U931 = 750;
    l_U932 = 1000;
    l_U942 = 80.00000000;
    l_U943 = 25.00000000;
    l_U944 = 2000;
    l_U945 = 70.00000000;
    l_U948 = 0.85000000;
    l_U1028 = 750;
    l_U1056 = 7500;
    l_U1469 = 0;
    l_U1633 = 0;
    l_U1634 = 4700;
    l_U1635 = 7200;
     /* WRITESCRIPTLOG */ sub_1099( "SP", "Script busdepot_gar_catwalk.sc is starting...", 0 );
    l_U539 = 1;
     /* P_SETUP_IMAGEFX_WIDGETS */ sub_1223();
    while (IS_EXITFLAG_SET() == 0)
    {
         /* P_HANDLE_FAILURE */ sub_1445();
        if (l_U540 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_17566();
        }
        WAIT( 0 );
    }
     /* P_CLEANUP_ALL */ sub_9841();
     /* P_UNLOAD_ASSETS */ sub_100751();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "busdepot_gar_catwalk" );
    SET_EXITFLAG_RESPONSE();
     /* WRITESCRIPTLOG */ sub_1099( "SP", "Script busdepot_gar_catwalk.sc is terminating...", 0 );
    return;
}

/* WRITESCRIPTLOG */ void sub_1099(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_SETUP_IMAGEFX_WIDGETS */ void sub_1223()
{
     /* WRITESCRIPTLOG */ sub_1099( "CO", "P_INITIALIZE_CATWALK_EFFECTS", 0 );
    START_WIDGET_GROUP( "IMAGE FX" );
    ADD_WIDGET_INT_SLIDER( "Start 1 FX", ref l_U1633, 0, 20000, 1000 );
    ADD_WIDGET_INT_SLIDER( "Start 2 FX", ref l_U1634, 0, 20000, 1000 );
    ADD_WIDGET_INT_SLIDER( "Start 3 FX", ref l_U1635, 0, 20000, 1000 );
    STOP_WIDGET_GROUP();
    return;
}

/* P_HANDLE_FAILURE */ void sub_1445()
{
    switch (l_U540)
    {
        case 0:
        if (g_U764 == 6)
        {
            if ( /* RESTARTING_CHECKPOINT */ sub_1562())
            {
                l_U540 = 6;
            }
            if ((l_U845 == 1) || (((IS_PED_DEAD( g_U2595 )) == 1) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
            {
                 /* WRITESCRIPTLOG */ sub_1099( "SP", "Mission Failed: Giovanna died.", 0 );
                if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0) || ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 1))
                {
                    if (l_U845 == 1)
                    {
                        l_U542 = 1;
                        l_U540 = 2;
                         /* WRITESCRIPTLOG */ sub_1099( "SP", "eFailState = FAIL_HANDLE_GIO_DEATH_CUTSCENE", 0 );
                    }
                    else
                    {
                        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
                        BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
                        l_U545 = 1;
                        l_U540 = 1;
                         /* WRITESCRIPTLOG */ sub_1099( "SP", "eFailState = FAIL_HANDLE_GIO_DEATH_CAM", 0 );
                    }
                }
            }
            else if ((( /* IS_RESTART_ACTIVE */ sub_2419()) == 1) || ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 1))
            {
                 /* WRITESCRIPTLOG */ sub_1099( "SP", "Mission Failed: Player died.", 0 );
                l_U540 = 4;
                 /* WRITESCRIPTLOG */ sub_1099( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            if (l_U458 == 1)
            {
                 /* WRITESCRIPTLOG */ sub_1099( "SP", "Mission Failed: Player crushed by bus.", 0 );
                l_U540 = 3;
                 /* WRITESCRIPTLOG */ sub_1099( "SP", "eFailState = FAIL_HANDLE_PLAYER_CRUSHED", 0 );
            }
        }
        else if ((( /* IS_RESTART_ACTIVE */ sub_2419()) == 1) || ((((IS_PED_DEAD( g_U2595 )) == 1) AND ((DOES_PED_EXIST( g_U2595 )) == 1)) || ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 1)))
        {
             /* P_RESET_CHECKPOINT_THREAD */ sub_2760( ref g_U765[6] );
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        }
        break;
        case 2:
        if (( /* F_HANDLE_GIO_CATWALK_DEATH_CUTSCENE */ sub_2841()) == 1)
        {
            l_U540 = 4;
             /* WRITESCRIPTLOG */ sub_1099( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
        }
        break;
        case 1:
        if (( /* F_HANDLE_GIO_DEATH_CAM */ sub_6766()) == 1)
        {
            l_U540 = 4;
             /* WRITESCRIPTLOG */ sub_1099( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
        }
        break;
        case 3:
        if (( /* ISTIMERDONE */ sub_7296( ref l_U446 )) == 1)
        {
            l_U540 = 4;
             /* WRITESCRIPTLOG */ sub_1099( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
        }
        break;
        case 4:
        if (( /* IS_RESTART_ACTIVE */ sub_2419()) == 1)
        {
            l_U540 = 6;
             /* WRITESCRIPTLOG */ sub_1099( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
        }
        else if (( /* F_CHECK_QUIT_RETRY */ sub_7910( 0 )) == 1)
        {
            l_U540 = 5;
             /* WRITESCRIPTLOG */ sub_1099( "SP", "eFailState = FAIL_WAITING_FOR_RESPAWN", 0 );
        }
        break;
        case 5:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eFailState = FAIL_WAITING_FOR_RESPAWN", 0 );
        if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0))
        {
            DO_SCREEN_FADE_OUT( 0 );
             /* KILL_ANY_MISSION_SPEECH */ sub_9073( 0 );
             /* KILL_ANY_AMBIENT_SPEECH */ sub_9273( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            DISPLAY_HUD( 0 );
            if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1896() )) == 0))
            {
                SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1858(), 0 );
                SET_PED_PROOFS(  /* PLAYER_PED_ID */ sub_1858(), 0, 0, 0, 0, 0 );
                SET_PED_CONSUMING_AMMO(  /* PLAYER_PED_ID */ sub_1858(), 1 );
                SET_PLAYER_CAN_CANCEL_SHOOTDODGE( 1 );
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1858(), 1 );
                FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_1858(), 0 );
            }
            if (IS_PLAYER_SHOOTDODGING() == 1)
            {
                SET_PLAYER_SHOOTDODGE_GET_UP_STATE( 3 );
            }
            DEACTIVATE_BULLET_TIME( 0, 0 );
            DEACTIVATE_BULLET_TIME( 0, 1 );
            DEACTIVATE_BULLET_TIME( 1, 0 );
            DEACTIVATE_BULLET_TIME( 1, 1 );
            if ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1896() )) == 0)
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1896(), 0, 0 );
                if ((GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1858() )) == 1)
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1858(), 0 );
                }
            }
            AUDIO_MUSIC_SUSPEND( 500 );
            l_U540 = 6;
             /* WRITESCRIPTLOG */ sub_1099( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
        }
        break;
        case 6:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
         /* P_CLEANUP_ALL */ sub_9841();
         /* CLEANPED */ sub_3790( g_U2595 );
        l_U540 = 7;
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
        break;
        case 7:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
         /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_12879( ref l_U546,  /* PLAYER_PED_ID */ sub_1858() );
         /* P_SETUP_PLAYER_RELATIONSHIPS */ sub_17327();
        l_U539 = 1;
        l_U540 = 0;
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eFailState = FAIL_IDLE", 0 );
        break;
    }
    return;
}

/* RESTARTING_CHECKPOINT */ int sub_1562()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1858(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1896(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1896(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1858() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1858(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* PLAYER_PED_ID */ int sub_1858()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_1896() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_1896()
{
    return GET_PLAYER_ID();
}

/* IS_RESTART_ACTIVE */ void sub_2419()
{
    return g_U648;
}

/* P_RESET_CHECKPOINT_THREAD */ void sub_2760(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

/* F_HANDLE_GIO_CATWALK_DEATH_CUTSCENE */ int sub_2841()
{
    unknown uVar2;
    unknown uVar3;
    int iVar4;
    int I;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;

    switch (l_U542)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCatwalkDeathCutsceneState = CUTSCENE_IDLE", 0 );
        break;
        case 1:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCatwalkDeathCutsceneState = CUTSCENE_REQUEST_ASSETS", 0 );
        if (((CUTSCENE_NAMED_IS_LOADING( "mid_08a_bus" )) == 0) AND ((CUTSCENE_IS_LOADED( "mid_08a_bus" )) == 0))
        {
            PRE_STREAM_SEAMLESS_CUTSCENE( "mid_08a_bus" );
        }
        l_U542 = 2;
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCatwalkDeathCutsceneState = CUTSCENE_LOAD_ASSETS", 0 );
        case 2:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCatwalkDeathCutsceneState = CUTSCENE_LOAD_ASSETS", 0 );
        if ((CUTSCENE_IS_LOADED( "mid_08a_bus" )) == 1)
        {
            l_U542 = 4;
             /* WRITESCRIPTLOG */ sub_1099( "SP", "eCatwalkDeathCutsceneState = CUTSCENE_START", 0 );
            break;
        }
        return 0;
        case 4:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCatwalkDeathCutsceneState = CUTSCENE_START", 0 );
         /* NIS_PRE_SETUP */ sub_3442( 1, 0, 0, 1 );
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_3650( ref uVar14, -46.32688000, 12.25922000, 6.05528900, 0.00000000, -1257669444, 5, 2, 0, 0, 1 );
         /* CLEANPED */ sub_3790( l_U909 );
        l_U909 =  /* CREATEPED */ sub_3877( ref uVar14 );
        if (((IS_PED_DEAD( l_U909 )) == 0) AND ((DOES_PED_EXIST( l_U909 )) == 1))
        {
            SET_PED_NAME_DEBUG( l_U909, "piMid08aGio" );
            SET_ROOM_FOR_PED_BY_NAME( l_U909, ref g_U1816 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U909, 1 );
            SET_PED_VISIBLE( l_U909, 0 );
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U909, "Giov_Bus", 1 );
        }
        CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        START_SEAMLESS_CUTSCENE();
        l_U542 = 5;
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCatwalkDeathCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        break;
        case 5:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCatwalkDeathCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
         /* P_END_CATWALK_MPM */ sub_5152();
         /* CLEANPED */ sub_3790( g_U2595 );
        if (((IS_PED_DEAD( l_U909 )) == 0) AND ((DOES_PED_EXIST( l_U909 )) == 1))
        {
            SET_PED_VISIBLE( l_U909, 1 );
            SET_PED_GORE( l_U909, 0 );
        }
        for ( I = 0; I < l_U770; I++ )
        {
            if (((IS_PED_DEAD( l_U770[I] )) == 0) AND (((DOES_PED_EXIST( l_U770[I] )) == 1) AND (((IS_PED_DEAD( l_U909 )) == 0) AND ((DOES_PED_EXIST( l_U909 )) == 1))))
            {
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U770[I], 1 );
                SET_PED_PRIMARY_LOOKAT( l_U770[I], l_U909 );
                CLEAR_PED_TASKS( l_U770[I] );
                TASK_AIM_GUN_AT_PED( l_U770[I], l_U909, -1, 1 );
            }
        }
        DO_SCREEN_FADE_IN( 0 );
        l_U542 = 6;
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCatwalkDeathCutsceneState = CUTSCENE_PLAYING", 0 );
        break;
        case 6:
        if (HAS_CUTSCENE_FINISHED() == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
            if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)
            {
                PED_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_1858(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
            }
             /* CLEANPED */ sub_3790( l_U909 );
             /* NIS_POST_SETUP */ sub_5727( 1, 1 );
            l_U542 = 0;
             /* WRITESCRIPTLOG */ sub_1099( "SP", "eCatwalkDeathCutsceneState = CUTSCENE_IDLE", 0 );
            return 1;
        }
        else
        {
            uVar2 = GET_CUTSCENE_SECTION_PLAYING();
            uVar3 = GET_CUTSCENE_TIME();
            iVar4 = GET_CUTSCENE_TIME_MS();
            PRINTSTRING( "[SP] SECTION: " );
            PRINTINT( uVar2 );
            PRINTSTRING( " Time: " );
            PRINTINT( uVar3 );
            PRINTSTRING( " Time MS: " );
            PRINTINT( iVar4 );
            PRINTNL();
            if (l_U959 == 0)
            {
                if (iVar4 >= 1000)
                {
                    for ( I = 0; I < l_U770; I++ )
                    {
                        if (((IS_PED_DEAD( l_U770[I] )) == 0) AND (((DOES_PED_EXIST( l_U770[I] )) == 1) AND (((IS_PED_DEAD( l_U909 )) == 0) AND ((DOES_PED_EXIST( l_U909 )) == 1))))
                        {
                            SET_PED_GORE( l_U909, 1 );
                            SET_PED_GORE_FROM_NPC( l_U909, 1 );
                            uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U909, 14989, -0.20000000, 0.10000000, -0.20000000 )};
                            uVar11 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U909, 48898, 0.00000000, 0.00000000, 0.10000000 )};
                            CLEAR_PED_TASKS( l_U770[I] );
                            if (I == 0)
                            {
                                OPEN_SEQUENCE_TASK( ref uVar6 );
                                TASK_AIM_GUN_AT_COORD( 0, uVar8, 800, 0 );
                                TASK_SHOOT_AT_COORD( 0, uVar8, 1000, 0, 0, 0 );
                                CLOSE_SEQUENCE_TASK( uVar6 );
                                TASK_PERFORM_SEQUENCE( l_U770[I], uVar6 );
                                CLEAR_SEQUENCE_TASK( uVar6 );
                            }
                            else if (I == 1)
                            {
                                OPEN_SEQUENCE_TASK( ref uVar7 );
                                TASK_AIM_GUN_AT_COORD( 0, uVar11, 750, 0 );
                                TASK_SHOOT_AT_COORD( 0, uVar11, 1500, 0, 0, 0 );
                                CLOSE_SEQUENCE_TASK( uVar7 );
                                TASK_PERFORM_SEQUENCE( l_U770[I], uVar7 );
                                CLEAR_SEQUENCE_TASK( uVar7 );
                            }
                        }
                    }
                    l_U959 = 1;
                }
            }
            if (l_U960 == 0)
            {
                if (iVar4 >= 3000)
                {
                    AUDIO_MUSIC_SUSPEND( 4000 );
                    l_U960 = 1;
                }
            }
        }
        break;
    }
    return 0;
}

/* NIS_PRE_SETUP */ void sub_3442(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1896(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1858(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1858() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1858(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_3650(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* CLEANPED */ void sub_3790(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CREATEPED */ void sub_3877(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_4059( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_4652( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_4753( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* LOADMODEL */ void sub_4059(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_4176( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* WRITE_STRING */ void sub_4176(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* SETPEDDEFAULTSTATS */ void sub_4652(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_4753(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* P_END_CATWALK_MPM */ void sub_5152()
{
     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_END_CATWALK_MPM", 0 );
    DEACTIVATE_BULLET_TIME( 0, 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    DEACTIVATE_BULLET_TIME( 0, 1 );
    DEACTIVATE_BULLET_TIME( 1, 1 );
    ENABLE_MPM( 0 );
    ENABLE_ALL_ADRENALINE( 1 );
    SET_PED_CONSUMING_AMMO(  /* PLAYER_PED_ID */ sub_1858(), 1 );
    return;
}

/* NIS_POST_SETUP */ void sub_5727(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1896(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1858(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_5825();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_5825()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1858(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1858(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1858(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1858(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* F_HANDLE_GIO_DEATH_CAM */ int sub_6766()
{
    switch (l_U545)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eGioDeathCamState = DEATHCAM_SETUP", 0 );
         /* NIS_PRE_SETUP */ sub_3442( 1, 0, 0, 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
        BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
         /* CREATETIMER */ sub_6933( ref l_U852, 2250, 1, 0 );
         /* STARTTIMER */ sub_7083( ref l_U852 );
        l_U545 = 2;
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eGioDeathCamState = DEATHCAM_WAITING_FOR_BULLETCAM", 0 );
        case 2:
        if (((l_U852._fU16 == 1) || (( /* ISTIMERDONE */ sub_7296( ref l_U852 )) == 1)) AND ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0))
        {
            DO_SCREEN_FADE_OUT( 0 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 0 );
            l_U545 = 3;
             /* WRITESCRIPTLOG */ sub_1099( "SP", "eGioDeathCamState = DEATHCAM_FINISHED", 0 );
        }
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eGioDeathCamState = DEATHCAM_FINISHED", 0 );
        l_U545 = 0;
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eGioDeathCamState = DEATHCAM_IDLE", 0 );
        return 1;
        break;
    }
    return 0;
}

/* CREATETIMER */ void sub_6933(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_7083(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* ISTIMERDONE */ int sub_7296(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* F_CHECK_QUIT_RETRY */ int sub_7910(int iParam0)
{
    iParam0 = 1;
    switch (l_U41)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_7992( ref l_U43 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )))
            {
                l_U42 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_6933( ref l_U43, l_U42, 1, 1 );
             /* STARTTIMER */ sub_7083( ref l_U43 );
        }
        if ( /* ISTIMERDONE */ sub_7296( ref l_U43 ))
        {
             /* WRITESCRIPTLOG */ sub_1099( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1896() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1896(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U41 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U41 = 2;
            }
            else
            {
                l_U41 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_1099( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_8475();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_1099( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_8475();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_7992(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_8475()
{
     /* WRITESCRIPTLOG */ sub_1099( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_8550( ref l_U43 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1896() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1896(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U40 = 0;
    l_U40 = l_U40;
    l_U41 = 0;
    return;
}

/* RESETTIMER */ void sub_8550(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* KILL_ANY_MISSION_SPEECH */ void sub_9073(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        PRINTSTRING( "\n KILL_ANY_MISSION_SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

/* KILL_ANY_AMBIENT_SPEECH */ void sub_9273(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        PRINTSTRING( "\n KILL_ANY_AMBIENT_SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 3) AND (g_U1[I] >= 1))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

/* P_CLEANUP_ALL */ void sub_9841()
{
    int I;

     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_CLEANUP_ALL", 0 );
    ISEQ_UNREGISTER_ENTITY( -1241350080, "mid07_enemy1" );
    ISEQ_UNREGISTER_ENTITY( -1241350080, "mid07_enemy2" );
    ISEQ_TERMINATE( -1241350080 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_9969( -1241350080, ref g_U1272 );
    ISEQ_UNREGISTER_ENTITY( -1571917792, "player" );
    ISEQ_TERMINATE( -1571917792 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_9969( -1571917792, ref g_U1272 );
    ISEQ_UNREGISTER_ENTITY( -949706482, "gio" );
    ISEQ_TERMINATE( -949706482 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_9969( -949706482, ref g_U1272 );
    ISEQ_UNREGISTER_ENTITY( 1444858891, "gio" );
    ISEQ_TERMINATE( 1444858891 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_9969( 1444858891, ref g_U1272 );
    ISEQ_UNREGISTER_ENTITY( -1947292213, "max" );
    ISEQ_TERMINATE( -1947292213 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_9969( -1947292213, ref g_U1272 );
    ISEQ_UNREGISTER_ENTITY( 1255748779, "max" );
    ISEQ_TERMINATE( 1255748779 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_9969( 1255748779, ref g_U1272 );
     /* CLEANPEDARRAY */ sub_11259( ref l_U770 );
     /* CLEANPEDARRAY */ sub_11259( ref g_U2760 );
     /* CLEANPED */ sub_3790( l_U909 );
    if (g_U764 >= 6)
    {
         /* CLEANPEDARRAY */ sub_11259( ref g_U2738 );
         /* CLEANPLACEMENT */ sub_11378( g_U2841 );
         /* CLEANPLACEMENT */ sub_11378( g_U2842 );
         /* CLEANOBJECT */ sub_11453( g_U2624 );
         /* CLEANOBJECT */ sub_11453( g_U2625 );
         /* CLEANOBJECT */ sub_11453( g_U2626 );
         /* CLEANOBJECT */ sub_11453( g_U2846 );
         /* CLEANOBJECT */ sub_11453( g_U2843 );
         /* CLEANOBJECT */ sub_11453( g_U2844 );
         /* P_CLEANUP_BUS */ sub_11565( g_U2642 );
         /* P_CLEANUP_BUS */ sub_11565( g_U2689 );
        for ( I = 0; I < 5; I++ )
        {
             /* CLEANOBJECT */ sub_11453( g_U2768[I] );
        }
         /* CLEANOBJECT */ sub_11453( l_U946 );
        for ( I = 0; I < 9; I++ )
        {
             /* CLEANOBJECT */ sub_11453( g_U2774[I] );
        }
         /* CLEANOBJECT */ sub_11453( g_U2845 );
         /* CLEANOBJECT */ sub_11453( g_U2849 );
         /* CLEANOBJECT */ sub_11453( g_U2847 );
         /* CLEANOBJECT */ sub_11453( g_U2848 );
         /* CLEANPLACEMENT */ sub_11378( l_U1197 );
    }
    if (l_U842 != -1)
    {
        STOP_SOUND( l_U842, 0 );
        RELEASE_SOUND_ID( l_U842 );
        l_U842 = -1;
    }
    if (l_U843 != -1)
    {
        STOP_SOUND( l_U843, 0 );
        RELEASE_SOUND_ID( l_U843 );
        l_U843 = -1;
    }
    if (l_U844 != -1)
    {
        STOP_SOUND( l_U844, 0 );
        RELEASE_SOUND_ID( l_U844 );
        l_U844 = -1;
    }
     /* CLEANPLACEMENT */ sub_11378( g_U703._fU0 );
     /* P_CLEAN_IMAGEFX */ sub_11972( ref l_U1470 );
     /* P_CLEAN_MOVIE */ sub_12056( ref l_U1198 );
     /* P_STOP_SP_CHALLENGES */ sub_12467();
    return;
}

/* P_STREAMREQ_ISEQ_REMOVE */ void sub_9969(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_10107( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a ISEQ asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ int sub_10107(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if ((uParam1^)[I] == iParam0)
            {
                DISPLAYF( "[CCB] ### The THREADID index matches the asset requested for removal: {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
            else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID index is in use and is active: {} ###", 1, 513, (uParam1^)[I] );
                Result = I;
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is in use, but is no longer active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

/* CLEANPEDARRAY */ void sub_11259(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_3790( (uParam0^)[I] );
    }
    return;
}

/* CLEANPLACEMENT */ void sub_11378(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

/* CLEANOBJECT */ void sub_11453(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* P_CLEANUP_BUS */ void sub_11565(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46)
{
     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_CLEANUP_BUS", 0 );
     /* CLEANOBJECT */ sub_11453( uParam0._fU4 );
     /* CLEANOBJECT */ sub_11453( uParam0._fU8 );
     /* CLEANOBJECT */ sub_11453( uParam0._fU12 );
     /* CLEANOBJECT */ sub_11453( uParam0._fU16 );
     /* CLEANOBJECT */ sub_11453( uParam0._fU20 );
     /* CLEANOBJECT */ sub_11453( uParam0._fU24 );
    return;
}

/* P_CLEAN_IMAGEFX */ void sub_11972(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        STOP_IMAGEFX( (uParam0^)[I]._fU0, 0 );
    }
    return;
}

/* P_CLEAN_MOVIE */ void sub_12056(int iParam0)
{
     /* WRITESCRIPTLOG */ sub_1099( "rw", "P_CLEAN_MOVIE", 0 );
     /* CLEANOBJECT */ sub_11453( iParam0->_fU40 );
     /* TERMINATEISEQ */ sub_12129( iParam0->_fU76, 1 );
    if (IS_SCRIPT_MOVIE_PLAYING( 2 ))
    {
        STOP_MOVIE( 2 );
    }
    RELEASE_MOVIE( 2 );
    return;
}

/* TERMINATEISEQ */ void sub_12129(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            DISPLAYF( "[SP]### Waiting for interactive sequence to terminate: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_STOP_SP_CHALLENGES */ void sub_12467()
{
     /* WRITESCRIPTLOG */ sub_1099( "CCB", "P_STOP_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_1099( "CCB", "Stopping the Bus_Depot_Garage_Repair_Catwalk context...", 0 );
    END_CONTEXT( "Bus_Depot_Garage_Repair_Catwalk" );
     /* WRITESCRIPTLOG */ sub_1099( "CCB", "Stopping the Bus_Depot_Garage_Repair context...", 0 );
    END_CONTEXT( "Bus_Depot_Garage_Repair" );
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_12879(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_1099( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_13098( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_14262( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_14576( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_15011( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_14576( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_15011( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_14576( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_15011( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_15327( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_15011( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_15327( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_15011( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_15899( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_16101( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1858(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_1099( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_13098(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_13160( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_13160(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_14262(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_14576(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_4176( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_15011(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_15327(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_4176( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_15899(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_16101(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_13160( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_16199( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_16199(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_SETUP_PLAYER_RELATIONSHIPS */ void sub_17327()
{
     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_SETUP_PLAYER_RELATIONSHIPS", 0 );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)
    {
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_1858(), 0, 1 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_1858(), 0, 2 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_1858(), 0, 6 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_1858(), 0, 7 );
    }
    return;
}

/* P_HANDLE_EVENTS */ void sub_17566()
{
    unknown uVar2;
    int I;

     /* P_MONITOR_TV */ sub_17598( ref l_U1198 );
    if (l_U1469 == 0)
    {
        if (l_U1198._fU940 == 8)
        {
             /* WRITESCRIPTLOG */ sub_1099( "SP", "Playing turned off TV dialogue...", 0 );
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_24964( ref l_U1187 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 0,  /* PLAYER_PED_ID */ sub_1858(), "MAX", ref l_U1187, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 1,  /* PLAYER_PED_ID */ sub_1858(), "MAX", ref l_U1187, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_25346( "SBUS_TRNOFFTV", ref l_U1187, 7, 1 );
            l_U1469 = 0;
        }
    }
    if ((l_U539 <= 18) AND (l_U539 >= 11))
    {
         /* P_HANDLE_FALLING_BUSSES */ sub_26270();
         /* P_HANDLE_GARAGE_FORKLIFT_EXPLOSION */ sub_35811();
         /* P_HANDLE_FALLING_PEDS */ sub_36222();
    }
    switch (l_U539)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_IDLE", 0 );
        break;
        case 1:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_INIT_SCRIPT_DATA", 0 );
         /* P_INIT_SCRIPT_VARIABLES */ sub_36769();
         /* P_INIT_GAMEPLAY_STRUCTS */ sub_37606();
         /* P_INITIALIZE_SP_CHALLENGES */ sub_39053();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U539 = 2;
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_39783( -1204387800, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_39783( g_U2103, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_39783( g_U2112, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_39783( g_U2113, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_39783( g_U2114, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_39783( g_U2115, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_39783( g_U2126, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_39783( g_U2125, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_39783( g_U2120, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_39783( g_U2121, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_39783( g_U2122, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_39783( g_U2118, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_39783( g_U2119, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_39783( g_U2123, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_39783( g_U2124, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_39783( 1490301961, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_39783( g_U2148, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_39783( g_U2149, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_39783( g_U2150, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_39783( g_U2168, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ sub_42879( ref g_U2152, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ sub_42879( ref g_U2158, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_39783( -1409914275, ref g_U910 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_39783( g_U760, ref g_U910 );
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_43026( g_U2854, ref g_U1211 );
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_43026( g_U2856, ref g_U1211 );
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_43026( g_U2855, ref g_U1211 );
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_43026( g_U2857, ref g_U1211 );
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_43026( g_U2859, ref g_U1211 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_45033( "CRUSH_IMMINENT", ref g_U1369 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_45033( ref g_U1888, ref g_U1369 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_45033( ref g_U1992, ref g_U1369 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_45033( ref g_U2000, ref g_U1369 );
         /* P_STREAMREQ_ISEQ_INSERT */ sub_46956( -1241350080, ref g_U1272 );
         /* P_STREAMREQ_ISEQ_INSERT */ sub_46956( -1571917792, ref g_U1272 );
         /* P_STREAMREQ_ISEQ_INSERT */ sub_46956( -949706482, ref g_U1272 );
         /* P_STREAMREQ_ISEQ_INSERT */ sub_46956( 1444858891, ref g_U1272 );
         /* P_STREAMREQ_ISEQ_INSERT */ sub_46956( -1561076308, ref g_U1272 );
         /* P_STREAMREQ_ISEQ_INSERT */ sub_46956( 759434161, ref g_U1272 );
         /* P_STREAMREQ_AUDIO_BANK_INSERT */ sub_49858( "SCRIPT_MISSION\S_BUSDEP_GARAGE", ref g_U1757 );
        if (g_U764 < 6)
        {
            if (((CUTSCENE_NAMED_IS_LOADING( "mid_07_bus_concat" )) == 0) AND ((CUTSCENE_IS_LOADED( "mid_07_bus_concat" )) == 0))
            {
                PRE_STREAM_SEAMLESS_CUTSCENE( "mid_07_bus_concat" );
            }
        }
        l_U539 = 3;
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if ( /* F_STREAMREQ_ALL_ASSETS_LOADED */ sub_51956( ref g_U910, ref g_U1211, ref g_U1272, ref g_U1369, ref g_U1474, ref g_U1535, ref g_U1704, ref g_U1757 ))
        {
            l_U539 = 4;
             /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_SETUP_START_POINT", 0 );
            break;
        }
        return;
        case 4:
        if ((l_U582 == 0) AND (g_U763 == 6))
        {
            l_U582 = 1;
            if (( /* HAS_SAVEFILE_LOADED */ sub_55292( ref l_U546 )) == 0)
            {
                 /* F_GIVEPEDWEAPON */ sub_15327(  /* PLAYER_PED_ID */ sub_1858(), g_U2855, 200, 0, 0 );
            }
            l_U539 = 5;
             /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_WAIT_FOR_PLAYER_WEAPON", 0 );
        }
        else if (g_U764 < 6)
        {
            l_U539 = 7;
             /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_HANDLE_SPAWN_CATWALK_ENEMIES", 0 );
        }
        else
        {
            l_U539 = 6;
             /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_SETUP_GARAGE_REPAIR_OBJECTS", 0 );
        }
         /* P_CREATETVSTRUCT */ sub_55742();
        break;
        case 5:
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)
        {
            uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1858(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
            {
                l_U539 = 6;
                 /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_SETUP_GARAGE_REPAIR_OBJECTS", 0 );
            }
        }
        break;
        case 6:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_SETUP_GARAGE_REPAIR_OBJECTS", 0 );
        if (( /* F_HANDLE_CREATE_GARAGE_REPAIR_OBJECTS */ sub_57973()) == 1)
        {
            l_U539 = 7;
             /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_HANDLE_SPAWN_CATWALK_ENEMIES", 0 );
        }
        break;
        case 7:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_HANDLE_SPAWN_CATWALK_ENEMIES", 0 );
        if (( /* F_HANDLE_SPAWN_CATWALK_ENEMIES */ sub_64968()) == 1)
        {
             /* P_SETUP_GIOVANNA */ sub_65668();
            l_U539 = 8;
             /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_HANDLE_SPAWN_POST_CATWALK_ENEMIES", 0 );
        }
        break;
        case 8:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_HANDLE_SPAWN_POST_CATWALK_ENEMIES", 0 );
        if (( /* F_HANDLE_SPAWN_POST_CATWALK_ENEMIES */ sub_66417()) == 1)
        {
            if (g_U764 < 6)
            {
                l_U541 = 1;
                l_U539 = 9;
                 /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_HANDLE_CATWALK_CUTSCENE", 0 );
            }
            else
            {
                l_U543 = 1;
                l_U539 = 10;
                 /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_HANDLE_CATWALK_BLENDOUT", 0 );
            }
        }
        break;
        case 9:
        if (( /* F_HANDLE_CATWALK_CUTSCENE */ sub_67870()) == 1)
        {
            l_U543 = 1;
            l_U539 = 10;
             /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_HANDLE_CATWALK_BLENDOUT", 0 );
            break;
        }
        return;
        case 10:
        if (( /* F_HANDLE_CATWALK_BLENDOUT */ sub_72140()) == 1)
        {
            l_U539 = 11;
             /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_START_CATWALK_FIGHT", 0 );
        }
        break;
        case 11:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_START_CATWALK_FIGHT", 0 );
        if (((CUTSCENE_NAMED_IS_LOADING( "mid_08a_bus" )) == 0) AND ((CUTSCENE_IS_LOADED( "mid_08a_bus" )) == 0))
        {
            PRE_STREAM_SEAMLESS_CUTSCENE( "mid_08a_bus" );
        }
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)
        {
            SET_PED_NUM_CHARGERS_OVERRIDE(  /* PLAYER_PED_ID */ sub_1858(), 2 );
        }
         /* P_START_SP_CHALLENGES_CATWALK */ sub_80349();
         /* CREATETIMER */ sub_6933( ref l_U1010, 4000, 1, 0 );
         /* STARTTIMER */ sub_7083( ref l_U1010 );
         /* CREATETIMER */ sub_6933( ref l_U861, 2500, 1, 0 );
         /* STARTTIMER */ sub_7083( ref l_U861 );
        l_U539 = 12;
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_HANDLE_CATWALK_FIGHT", 0 );
        break;
        case 12:
         /* P_HANDLE_VIG_08A */ sub_80645();
         /* P_HANDLE_ENEMY_STAND_CATWALK_EVENT */ sub_81676();
        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0) AND (( /* ISTIMERDONE */ sub_7296( ref l_U1010 )) == 1))
        {
            CLEAR_PED_DEFAULT_AIM(  /* PLAYER_PED_ID */ sub_1858() );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1896(), 0, 0 );
        }
        if (l_U906 == 0)
        {
            if (( /* F_HAS_PLAYER_SAVED_GIOVANNA */ sub_84293()) == 1)
            {
                 /* RESETTIMER */ sub_8550( ref l_U861 );
                if (l_U958 == 1)
                {
                     /* CREATETIMER */ sub_6933( ref l_U870, 1500, 1, 0 );
                     /* STARTTIMER */ sub_7083( ref l_U870 );
                }
                else
                {
                     /* P_END_CATWALK_MPM */ sub_5152();
                }
                l_U906 = 1;
            }
        }
        if (( /* ISTIMERDONE */ sub_7296( ref l_U861 )) == 1)
        {
            for ( I = 0; I < l_U770; I++ )
            {
                if (((IS_PED_DEAD( l_U770[I] )) == 0) AND ((DOES_PED_EXIST( l_U770[I] )) == 1))
                {
                    SET_PED_CONSUMING_AMMO( l_U770[I], 0 );
                    SET_PED_COMBAT_RANGE( l_U770[I], 0 );
                    SET_PED_COMBAT_MOVEMENT( l_U770[I], 0 );
                    SET_PED_INVINCIBLE( l_U770[I], 1 );
                    SET_PED_PROOFS( l_U770[I], 1, 1, 1, 1, 1 );
                }
            }
            if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
            {
                SET_PED_INVINCIBLE( g_U2595, 1 );
                SET_PED_PROOFS( g_U2595, 1, 1, 1, 1, 1 );
            }
            l_U845 = 1;
        }
        if (( /* ISTIMERDONE */ sub_7296( ref l_U870 )) == 1)
        {
             /* P_END_CATWALK_MPM */ sub_5152();
        }
        if (IS_ROBO_TESTING() == 1)
        {
            if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_84404( ref l_U770 )) > 0)
            {
                if ( /* F_ISPLAYERINTRIGGERBOX */ sub_85032( l_U688 ))
                {
                     /* P_KILL_PEDS_IN_ARRAY */ sub_85097( ref l_U770 );
                     /* WRITESCRIPTLOG */ sub_1099( "MRB", "RoboTester is killing your Repair Enemies", 0 );
                }
            }
        }
        if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_84404( ref l_U770 )) == 0)
        {
            for ( I = 0; I < 5; I++ )
            {
                if ((DOES_OBJECT_EXIST( g_U2768[I] )) == 1)
                {
                    FORCE_UPDATE_OBJECT_PHYSICAL_STATE( g_U2768[I] );
                }
            }
            if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1896() )) == 0))
            {
                TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_1858() );
                CLEAR_PED_DEFAULT_AIM(  /* PLAYER_PED_ID */ sub_1858() );
                SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1896(), 0, 0 );
            }
            if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
            {
                SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2595, 1 );
                SET_PED_GORE( g_U2595, 0 );
                SET_PED_AS_ONE_SHOT_KILL( g_U2595, 0 );
            }
            l_U539 = 13;
             /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_SETUP_POST_CATWALK_FIGHT", 0 );
        }
        break;
        case 13:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_SETUP_POST_CATWALK_FIGHT", 0 );
        if (((CUTSCENE_NAMED_IS_LOADING( "mid_08a_bus" )) == 1) || ((CUTSCENE_IS_LOADED( "mid_08a_bus" )) == 1))
        {
            CLEAR_NAMED_CUTSCENE( "mid_08a_bus" );
        }
         /* P_HANDLE_VIG_08A */ sub_80645();
         /* P_STOP_SP_CHALLENGES_CATWALK */ sub_85663();
         /* P_SETUP_GIO_ATTRIBUTES */ sub_65800();
         /* P_START_POST_CATWALK_ENEMIES */ sub_85857();
         /* CREATETIMER */ sub_6933( ref l_U888, 1000, 1, 0 );
         /* STARTTIMER */ sub_7083( ref l_U888 );
        l_U539 = 14;
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_HANDLE_POST_CATWALK_FIGHT", 0 );
        break;
        case 14:
         /* P_HANDLE_VIG_08A */ sub_80645();
         /* P_HANDLE_ENEMY_STAND_CATWALK_EVENT */ sub_81676();
        if (( /* ISTIMERDONE */ sub_7296( ref l_U870 )) == 1)
        {
             /* P_END_CATWALK_MPM */ sub_5152();
        }
        if (( /* ISTIMERDONE */ sub_7296( ref l_U879 )) == 1)
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_24964( ref l_U1057 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 0,  /* PLAYER_PED_ID */ sub_1858(), "MAX", ref l_U1057, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 1, g_U2595, "GIOVANNA", ref l_U1057, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 2, g_U2760[0], "M10_CP_32_AVG", ref l_U1057, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_25346( "SBUS_RGCB", ref l_U1057, 7, 1 );
        }
        if (( /* ISTIMERDONE */ sub_7296( ref l_U888 )) == 1)
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_24964( ref l_U1147 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 0,  /* PLAYER_PED_ID */ sub_1858(), "MAX", ref l_U1147, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 1, g_U2595, "GIOVANNA", ref l_U1147, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_25346( "SBUS_GS3ME", ref l_U1147, 7, 1 );
        }
        if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_84404( ref g_U2760 )) == 1)
        {
            if (l_U846 == 0)
            {
                l_U821 =  /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_87304( ref g_U2760 );
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
                BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
                 /* P_MAKE_LAST_LIVING_PED_PSYCHO */ sub_87498( l_U821 );
                l_U846 = 1;
            }
            else
            {
                 /* P_MAKE_PED_PSYCHO */ sub_87801( l_U821 );
            }
        }
        if (IS_ROBO_TESTING() == 1)
        {
            if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_84404( ref g_U2760 )) > 0)
            {
                if ( /* F_ISPLAYERINTRIGGERBOX */ sub_85032( l_U709 ))
                {
                     /* P_KILL_PEDS_IN_ARRAY */ sub_85097( ref g_U2760 );
                     /* WRITESCRIPTLOG */ sub_1099( "MRB", "RoboTester is killing your Post Catwalk Enemies", 0 );
                }
            }
        }
        if (l_U963 == 0)
        {
            if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_84404( ref g_U2760 )) == 0)
            {
                AUDIO_MUSIC_FORCE_TRACK( "BUSDEPOT_ACTION_SONG_03", "BUSDEPOT_03_1", "", 0.00000000, 3000, 5000, -1082130432, 0 );
                l_U963 = 1;
            }
        }
        if (((g_U2689._fU0 == 4) || (g_U2689._fU0 == 0)) AND (((g_U2642._fU0 == 4) || (g_U2642._fU0 == 0)) AND ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_84404( ref g_U2760 )) == 0)))))
        {
             /* P_START_CHECKPOINT_THREAD */ sub_88222( ref g_U765[7] );
            l_U544 = 1;
            l_U539 = 15;
             /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_HANDLE_LOWERING_STAIRS_NIS", 0 );
        }
        break;
        case 15:
        if (( /* F_HANDLE_GIO_LOWER_STAIRS_NIS */ sub_88355()) == 1)
        {
             /* P_RESET_CONTEXTUAL_DIALOGUE */ sub_95322();
             /* CREATETIMER */ sub_6933( ref l_U965, 15000, 1, 0 );
             /* STARTTIMER */ sub_7083( ref l_U965 );
            l_U539 = 16;
             /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_HANDLE_LEAVE_REPAIR_GARAGE", 0 );
        }
        break;
        case 16:
         /* P_HANDLE_VIG_09 */ sub_95549();
        if (l_U964 == 0)
        {
             /* P_HANDLE_CONTEXTUAL_DIALOGUE */ sub_96811();
        }
        if ((DOES_OBJECT_EXIST( g_U2849 )) == 1)
        {
            if (l_U840 == 0)
            {
                if ((GET_OBJECT_ANIM_CURRENT_TIME( g_U2849, "p_bd_stacas_aa", ref g_U1888 )) > 0.90000000)
                {
                    START_PARTICLE_FX_NON_LOOPED_AT_COORD( "BusDepot_StairLower_Impact_S", -55.30000000, 30.17000000, 0.03000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
                    l_U840 = 1;
                }
            }
            if (l_U841 == 0)
            {
                if ((IS_OBJECT_PLAYING_ANIM( g_U2849, "p_bd_stacas_aa", ref g_U1888 )) == 0)
                {
                    if (l_U844 != -1)
                    {
                         /* WRITESCRIPTLOG */ sub_1099( "SP", "Stopping sidStaircaseAlarm sound...", 0 );
                        STOP_SOUND( l_U844, 0 );
                        l_U844 = -1;
                    }
                    if (l_U842 != -1)
                    {
                         /* WRITESCRIPTLOG */ sub_1099( "SP", "Stopping sidStaircase sound...", 0 );
                        STOP_SOUND( l_U842, 0 );
                        l_U842 = -1;
                    }
                    if (l_U843 != -1)
                    {
                         /* WRITESCRIPTLOG */ sub_1099( "SP", "Stopping sidStaircaseGears sound...", 0 );
                        STOP_SOUND( l_U843, 0 );
                        l_U843 = -1;
                    }
                    if (( /* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ sub_92241( "VIG_09_BUS_GIO_STAIRS", ref g_U1704 )) == 1)
                    {
                         /* WRITESCRIPTLOG */ sub_1099( "SP", "Stopping VIG_09_BUS_GIO_STAIRS script stream...", 0 );
                         /* P_STREAMREQ_SCRIPT_STREAM_STOP */ sub_98816( "VIG_09_BUS_GIO_STAIRS", ref g_U1704 );
                         /* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ sub_99309( "VIG_09_BUS_GIO_STAIRS", ref g_U1704 );
                    }
                    l_U841 = 1;
                }
            }
        }
        if ((( /* F_ISPEDINTRIGGERBOX */ sub_19066(  /* PLAYER_PED_ID */ sub_1858(), l_U625 )) == 0) AND (((GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1858() )) == 1) AND (( /* F_ISPEDINTRIGGERBOX */ sub_19066(  /* PLAYER_PED_ID */ sub_1858(), l_U646 )) == 1)))
        {
             /* WRITESCRIPTLOG */ sub_1099( "GA", "Removing Force Player to walk.", 0 );
            if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)
            {
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1858(), 0 );
                SET_CAM_VIEW_MODE( 1 );
            }
        }
        else if (((GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1858() )) == 0) AND ( /* F_ISPEDINTRIGGERBOX */ sub_19066(  /* PLAYER_PED_ID */ sub_1858(), l_U625 )))
        {
             /* WRITESCRIPTLOG */ sub_1099( "GA", "Force Player to walk.", 0 );
            if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1896(), 0, 0 );
                REENABLE_PLAYER_INPUT( 4 );
                REENABLE_PLAYER_INPUT( 6 );
                REENABLE_PLAYER_INPUT( 29 );
                REENABLE_PLAYER_INPUT( 19 );
                REENABLE_PLAYER_INPUT( 14 );
                REENABLE_PLAYER_INPUT( 15 );
                REENABLE_PLAYER_INPUT( 16 );
                REENABLE_PLAYER_INPUT( 17 );
                REENABLE_PLAYER_INPUT( 8 );
                REENABLE_PLAYER_INPUT( 9 );
                REENABLE_PLAYER_INPUT( 10 );
                REENABLE_PLAYER_INPUT( 11 );
                REENABLE_PLAYER_INPUT( 12 );
                REENABLE_PLAYER_INPUT( 13 );
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1858(), 1 );
            }
        }
        if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
        {
            if ((ISEQ_QUERY_ENTITY_STATE( 1444858891, "gio", 3 )) == 0)
            {
                 /* WRITESCRIPTLOG */ sub_1099( "GA", "Giovanna has reached the wash bay.", 0 );
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)
                {
                    SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1896(), 0, 0 );
                    SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1896(), 1, 0 );
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1858(), 0 );
                }
                SET_CAM_VIEW_MODE( 1 );
                 /* CREATETIMER */ sub_6933( ref l_U974, 15000, 1, 0 );
                 /* STARTTIMER */ sub_7083( ref l_U974 );
                g_U2868 = 1;
                l_U539 = 17;
                 /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_HANDLE_WAIT_FOR_SHUTDOWN", 0 );
            }
        }
        break;
        case 17:
        if (g_U764 == 6)
        {
            if ((l_U974._fU16 == 1) || (( /* ISTIMERDONE */ sub_7296( ref l_U974 )) == 1))
            {
                if (((IS_PED_DEAD( g_U2595 )) == 0) AND (((DOES_PED_EXIST( g_U2595 )) == 1) AND ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)))
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1858() ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 1 )) > 4.00000000)
                    {
                         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_24964( ref l_U1167 );
                         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 1, g_U2595, "GIOVANNA", ref l_U1167, 2, 0 );
                         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 0,  /* PLAYER_PED_ID */ sub_1858(), "MAX", ref l_U1167, 2, 0 );
                         /* PLAY_SINGLE_SPEECH */ sub_25346( "SBUS_GVTWA", ref l_U1167, 7, 1 );
                         /* CREATETIMER */ sub_6933( ref l_U974, 25000, 1, 0 );
                         /* STARTTIMER */ sub_7083( ref l_U974 );
                    }
                }
            }
        }
        if (g_U764 > 6)
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U539 = 18;
             /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 18:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_FINISHED", 0 );
        l_U539 = 0;
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCheckpointState = CP_IDLE", 0 );
        break;
    }
    return;
}

/* P_MONITOR_TV */ void sub_17598(int iParam0)
{
    if (DOES_OBJECT_EXIST( iParam0->_fU40 ))
    {
        if ((GET_OBJECT_HEALTH( iParam0->_fU40 )) < 1000.00000000)
        {
            if (iParam0->_fU4)
            {
                 /* CLEANOBJECT */ sub_11453( iParam0->_fU40 );
            }
            if ((ref iParam0->_fU496->_fU0) == 1)
            {
                 /* P_ENABLE_POI */ sub_17712( iParam0 + 496, 0 );
            }
        }
    }
    switch (iParam0->_fU940)
    {
        case 0:
        if (DOES_OBJECT_EXIST( iParam0->_fU40 ))
        {
            if (((GET_OBJECT_HEALTH( iParam0->_fU40 )) == 1000.00000000) AND ((( /* ENEMIES_DETECTED */ sub_18827()) == 0) AND (iParam0->_fU0 == 0)))
            {
                if ((IS_SCRIPT_MOVIE_PLAYING( 2 )) == 0)
                {
                    if ( /* F_HANDLE_POI */ sub_18965( iParam0 + 496 ))
                    {
                        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )))
                        {
                            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1896(), 0, 0 );
                            REENABLE_PLAYER_INPUT( 30 );
                        }
                        iParam0->_fU944 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1858(), 0, 0 );
                        if (iParam0->_fU1072)
                        {
                            if ( /* IS_WEAPON_TWO_HANDED */ sub_20924( iParam0->_fU944 ))
                            {
                                 /* P_PLAYER_UNHOLSTER_FOR_TV */ sub_21233( iParam0 );
                            }
                        }
                        else
                        {
                             /* P_PLAYER_HOLSTER_FOR_TV */ sub_21422();
                        }
                        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )))
                        {
                            if (IS_PED_DUAL_WIELDING(  /* PLAYER_PED_ID */ sub_1858() ))
                            {
                                 /* CREATETIMER */ sub_6933( ref l_U68, 1200, 1, 0 );
                            }
                            else
                            {
                                 /* CREATETIMER */ sub_6933( ref l_U68, 500, 1, 0 );
                            }
                        }
                         /* LOADISEQ */ sub_21590( iParam0->_fU76, 0 );
                         /* STARTTIMER */ sub_7083( ref l_U68 );
                        iParam0->_fU940 = 1;
                    }
                }
            }
        }
        break;
        case 1:
        if (( /* ISTIMERDONE */ sub_7296( ref l_U68 )) AND ( /* ARE_WEAPONS_HOLSTERED */ sub_21906( iParam0 )))
        {
            if (( /* IS_VALID_ISEQ */ sub_22020( iParam0 )) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() ))))
            {
                ISEQ_REGISTER_ENTITY( iParam0->_fU76, "Max",  /* PLAYER_PED_ID */ sub_1858(), 0 );
            }
            if ( /* IS_VALID_ISEQ */ sub_22020( iParam0 ))
            {
                ISEQ_START( iParam0->_fU76 );
            }
             /* P_ENABLE_POI */ sub_17712( iParam0 + 496, 0 );
            iParam0->_fU940 = 2;
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_1099( "rw", "waiting for weapon to holster", 0 );
        }
        break;
        case 2:
        if ( /* IS_VALID_ISEQ */ sub_22020( iParam0 ))
        {
            CAMERA_PLAY_ANIMATED( iParam0->_fU100, iParam0->_fU96, 0, iParam0->_fU108, iParam0->_fU120, 0, 0 );
             /* TELEPORTPED */ sub_22262(  /* PLAYER_PED_ID */ sub_1858(), iParam0->_fU80, iParam0->_fU92 );
        }
        PRELOAD_MOVIE( 2, iParam0 + 8, 0,  /* F_ALLOCATE_FROM_CUTSCENE_HEAP */ sub_22339() );
        if ( /* IS_VALID_ISEQ */ sub_22020( iParam0 ))
        {
             /* CREATETIMER */ sub_6933( iParam0 + 840, iParam0->_fU916, 1, 0 );
        }
        else
        {
             /* CREATETIMER */ sub_6933( iParam0 + 840, 0, 1, 0 );
        }
         /* STARTTIMER */ sub_7083( iParam0 + 840 );
        iParam0->_fU940 = 3;
        break;
        case 3:
        if ( /* ISTIMERDONE */ sub_7296( iParam0 + 840 ))
        {
             /* RESETTIMER */ sub_8550( iParam0 + 840 );
            if ( /* IS_VALID_ISEQ */ sub_22020( iParam0 ))
            {
                ISEQ_UNREGISTER_ENTITY( iParam0->_fU76, "Max" );
                ISEQ_TERMINATE( iParam0->_fU76 );
            }
            CAMERA_ANIMATED_STOP( 0, 0 );
            iParam0->_fU124 = CREATE_CAM_WITH_PARAMS( "DEFAULT_SCRIPTED_CAMERA", iParam0->_fU128, iParam0->_fU140, 45, 0 );
            if (iParam0->_fU924 != 0)
            {
                SET_CAM_FAR_DOF( iParam0->_fU124, iParam0->_fU924, iParam0->_fU928 );
                SET_CAM_DOF_STRENGTH( iParam0->_fU124, iParam0->_fU932 );
            }
            SET_CAM_ACTIVE( iParam0->_fU124, 1 );
            RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )))
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1858(), 0 );
                DISPLAY_HUD( 0 );
            }
            if ((iParam0->_fU912 == 0) AND ((DOES_OBJECT_EXIST( iParam0->_fU40 )) == 1))
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU40, iParam0 + 44 );
                FREEZE_OBJECT_POSITION( iParam0->_fU40, 1 );
                SET_OBJECT_COLLISION( iParam0->_fU40, 0 );
            }
             /* P_ENABLE_POI */ sub_17712( iParam0 + 496, 0 );
             /* P_ENABLE_POI */ sub_17712( iParam0 + 152, 1 );
            if ((IS_SCRIPT_MOVIE_PLAYING( 2 )) == 0)
            {
                SET_MOVIE_LOOP( 2, 0 );
                PLAY_MOVIE( 2, 0 );
                AUDIO_ENABLE_TV_MOVIE( 1 );
            }
            if ((NOT ( /* HASTIMERBEENACTIVATED */ sub_7992( iParam0 + 876 ))) AND (( /* IS_VALID_ISEQ */ sub_22020( iParam0 )) AND (iParam0->_fU920 > 0)))
            {
                 /* CREATETIMER */ sub_6933( iParam0 + 876, iParam0->_fU920, 1, 0 );
                 /* STARTTIMER */ sub_7083( iParam0 + 876 );
            }
            STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
            iParam0->_fU940 = 4;
        }
        break;
        case 4:
        if ( /* ISTIMERDONE */ sub_7296( iParam0 + 876 ))
        {
             /* LOADISEQ */ sub_21590( iParam0->_fU76, 0 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )))
            {
                ISEQ_REGISTER_ENTITY( iParam0->_fU76, "Max",  /* PLAYER_PED_ID */ sub_1858(), 0 );
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1858(), 1 );
            }
             /* TELEPORTPED */ sub_22262(  /* PLAYER_PED_ID */ sub_1858(), iParam0->_fU80, iParam0->_fU92 );
            if ( /* IS_VALID_ISEQ */ sub_22020( iParam0 ))
            {
                SET_CAM_ACTIVE( iParam0->_fU124, 0 );
                CAMERA_PLAY_ANIMATED( iParam0->_fU100, iParam0->_fU96, 0, iParam0->_fU108, iParam0->_fU120, 0, 0 );
                ISEQ_START( iParam0->_fU76 );
            }
            CLEAR_PED_PRIMARY_LOOKAT(  /* PLAYER_PED_ID */ sub_1858() );
            SET_COORD_PRIMARY_LOOKAT(  /* PLAYER_PED_ID */ sub_1858(), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ) );
             /* RESETTIMER */ sub_8550( iParam0 + 840 );
             /* CREATETIMER */ sub_6933( iParam0 + 840, iParam0->_fU916, 1, 0 );
             /* STARTTIMER */ sub_7083( iParam0 + 840 );
             /* P_ENABLE_POI */ sub_17712( iParam0 + 496, 0 );
             /* P_ENABLE_POI */ sub_17712( iParam0 + 152, 0 );
        }
        if ( /* ISTIMERDONE */ sub_7296( iParam0 + 840 ))
        {
             /* RESETTIMER */ sub_8550( iParam0 + 840 );
            if ( /* IS_VALID_ISEQ */ sub_22020( iParam0 ))
            {
                ISEQ_UNREGISTER_ENTITY( iParam0->_fU76, "Max" );
                ISEQ_TERMINATE( iParam0->_fU76 );
            }
            if ( /* IS_VALID_ISEQ */ sub_22020( iParam0 ))
            {
                if (IS_ANIMATED_CAMERA_PLAYING())
                {
                    CAMERA_ANIMATED_STOP( 0, 0 );
                }
            }
            if ((DOES_CAM_EXIST( iParam0->_fU124 )) == 0)
            {
                iParam0->_fU124 = CREATE_CAM_WITH_PARAMS( "DEFAULT_SCRIPTED_CAMERA", iParam0->_fU128, iParam0->_fU140, 45, 0 );
                if (iParam0->_fU924 != 0)
                {
                    SET_CAM_FAR_DOF( iParam0->_fU124, iParam0->_fU924, iParam0->_fU928 );
                    SET_CAM_DOF_STRENGTH( iParam0->_fU124, iParam0->_fU932 );
                }
            }
            SET_CAM_ACTIVE( iParam0->_fU124, 1 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1896(), 0, 0 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(  /* PLAYER_PED_ID */ sub_1858(), 1 );
                REENABLE_PLAYER_INPUT( 30 );
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1858(), 0 );
                DISPLAY_HUD( 0 );
            }
            RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
            if ((iParam0->_fU912 == 0) AND ((DOES_OBJECT_EXIST( iParam0->_fU40 )) == 1))
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU40, iParam0 + 44 );
                FREEZE_OBJECT_POSITION( iParam0->_fU40, 1 );
                SET_OBJECT_COLLISION( iParam0->_fU40, 0 );
            }
             /* P_ENABLE_POI */ sub_17712( iParam0 + 152, 1 );
        }
        if (( /* ENEMIES_DETECTED */ sub_18827()) || ((( /* IS_MOVIE_FINISHED */ sub_23750( iParam0 )) AND ((ref iParam0->_fU152->_fU0) == 1)) || ( /* F_HANDLE_POI */ sub_18965( iParam0 + 152 ))))
        {
             /* TELEPORTPED */ sub_22262(  /* PLAYER_PED_ID */ sub_1858(), iParam0->_fU1012, iParam0->_fU1024 );
             /* P_ENABLE_POI */ sub_17712( iParam0 + 152, 0 );
            if ( /* IS_VALID_ISEQ */ sub_22020( iParam0 ))
            {
                 /* CREATETIMER */ sub_6933( iParam0 + 1028, iParam0->_fU1064, 1, 0 );
            }
            else
            {
                 /* CREATETIMER */ sub_6933( iParam0 + 1028, iParam0->_fU1068, 1, 0 );
            }
             /* STARTTIMER */ sub_7083( iParam0 + 1028 );
            if ( /* IS_VALID_ISEQ */ sub_22020( iParam0 ))
            {
                 /* LOADISEQ */ sub_21590( iParam0->_fU1008, 0 );
                ISEQ_REGISTER_ENTITY( iParam0->_fU1008, "Max",  /* PLAYER_PED_ID */ sub_1858(), 0 );
                ISEQ_START( iParam0->_fU1008 );
            }
            iParam0->_fU940 = 5;
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )))
        {
            SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1858(), 1 );
        }
        if ( /* IS_VALID_ISEQ */ sub_22020( iParam0 ))
        {
            CAMERA_PLAY_ANIMATED( iParam0->_fU100, iParam0->_fU104, 0, iParam0->_fU108, iParam0->_fU120, 0, 0 );
            iParam0->_fU1080 = 1;
        }
        SET_CAM_ACTIVE( iParam0->_fU124, 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        iParam0->_fU940 = 6;
        break;
        case 6:
        if ( /* ISTIMERDONE */ sub_7296( iParam0 + 1028 ))
        {
            if ( /* IS_VALID_ISEQ */ sub_22020( iParam0 ))
            {
                ISEQ_UNREGISTER_ENTITY( iParam0->_fU1008, "Max" );
                ISEQ_TERMINATE( iParam0->_fU1008 );
            }
            iParam0->_fU0 = 1;
            DISPLAY_HUD( 1 );
            DESTROY_CAM( iParam0->_fU124 );
            STOP_MOVIE( 2 );
            AUDIO_ENABLE_TV_MOVIE( 0 );
            RELEASE_MOVIE( 2 );
            if (iParam0->_fU912 == 0)
            {
                 /* CLEANOBJECT */ sub_11453( iParam0->_fU40 );
            }
             /* CREATETIMER */ sub_6933( ref l_U77, 750, 1, 0 );
             /* STARTTIMER */ sub_7083( ref l_U77 );
            iParam0->_fU940 = 7;
        }
        break;
        case 7:
        if ( /* ISTIMERDONE */ sub_7296( ref l_U77 ))
        {
            if (iParam0->_fU1072 == 0)
            {
                 /* P_PLAYER_UNHOLSTER_FOR_TV */ sub_21233( iParam0 );
            }
            iParam0->_fU940 = 8;
        }
        break;
        case 8:
        if ( /* HAS_UNHOLSTERED_WEAPON */ sub_24426( iParam0 ))
        {
            DESTROY_CAM( iParam0->_fU124 );
            if ( /* IS_VALID_ISEQ */ sub_22020( iParam0 ))
            {
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU1076, 1065353216, 0 );
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( 0, 1065353216, 0 );
            }
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )))
            {
                CLEAR_PED_PRIMARY_LOOKAT(  /* PLAYER_PED_ID */ sub_1858() );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(  /* PLAYER_PED_ID */ sub_1858(), 0 );
            }
            iParam0->_fU940 = 0;
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_1099( "rw", " waiting to reholster weapon ", 0 );
        }
        break;
        default: break;
    }
    if ((iParam0->_fU1080) AND ((CAMERA_ANIMATED_CURRENT_TIME() > ((CAMERA_ANIMATED_LENGTH( iParam0->_fU100, iParam0->_fU104 )) - ( /* GET_TV_FREEZE_VALUE */ sub_24718()))) AND (IS_ANIMATED_CAMERA_PLAYING())))
    {
        iParam0->_fU1080 = 0;
         /* P_RUN_EXIT_CAM */ sub_24785();
    }
    return;
}

/* P_ENABLE_POI */ void sub_17712(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
             /* P_ENABLEPOIGLINT */ sub_17771( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_17771( iParam0, 0 );
         /* P_ENABLEPOIINTERACTIONTEXT */ sub_17990( iParam0, 0 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)
        {
            TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_1858() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1858(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

/* P_ENABLEPOIGLINT */ void sub_17771(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

/* P_ENABLEPOIINTERACTIONTEXT */ void sub_17990(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_18170( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

/* P_UPDATEINTERACTIONTEXTAVAILABLE */ void sub_18170(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if (( /* F_ISACTIONINGAVAILABLE */ sub_18266( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if (( /* F_ISACTIONINGAVAILABLE */ sub_18266( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

/* F_ISACTIONINGAVAILABLE */ int sub_18266(int iParam0)
{
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1896() )) == 0))
    {
        if (((IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_1858() )) == 1) || (((IS_PED_GETTING_UP(  /* PLAYER_PED_ID */ sub_1858() )) == 1) || (((IS_PED_PICKING_UP_PICKUP(  /* PLAYER_PED_ID */ sub_1858() )) == 1) || (((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_1858() )) == 1) || (((IS_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1858() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1858() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

/* ENEMIES_DETECTED */ int sub_18827()
{
    float fVar2;

    fVar2 = 50.00000000;
    fVar2 = 4.00000000;
    if (IS_PED_IN_SPHERE_AREA_OF_ANY_ENEMY_PEDS(  /* PLAYER_PED_ID */ sub_1858(), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1858() ), fVar2, 0 ))
    {
        return 1;
    }
    return 0;
}

/* F_HANDLE_POI */ int sub_18965(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1858() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_19066(  /* PLAYER_PED_ID */ sub_1858(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_19066(  /* PLAYER_PED_ID */ sub_1858(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_18170( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND (( /* F_ISACTIONINGAVAILABLE */ sub_18266( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (( /* F_HASACTIONBEENPRESSED */ sub_19929()) == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                             /* P_ENABLE_POI */ sub_17712( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                             /* P_ENABLEPOIGLINT */ sub_17771( iParam0, 0 );
                             /* P_ENABLEPOIINTERACTIONTEXT */ sub_17990( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                             /* P_ENABLEPOIGLINT */ sub_17771( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1858(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                         /* P_ENABLEPOIGLINT */ sub_17771( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_ENABLEPOIINTERACTIONTEXT */ sub_17990( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED(  /* PLAYER_PED_ID */ sub_1858(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)
                    {
                        TASK_LOOK_AT_COORD(  /* PLAYER_PED_ID */ sub_1858(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1858(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                     /* P_ENABLEPOIGLINT */ sub_17771( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                     /* P_ENABLEPOIINTERACTIONTEXT */ sub_17990( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_1858() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1858(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                 /* P_ENABLEPOIINTERACTIONTEXT */ sub_17990( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

/* F_ISPEDINTRIGGERBOX */ int sub_19066(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* F_HASACTIONBEENPRESSED */ int sub_19929()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

/* IS_WEAPON_TWO_HANDED */ int sub_20924(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* P_PLAYER_UNHOLSTER_FOR_TV */ void sub_21233(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )))
    {
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1858(), 0 ) ))
        {
            iParam0->_fU944 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1858(), 0 );
        }
        else if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1858(), 1 ) ))
        {
            iParam0->_fU944 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1858(), 1 );
        }
        SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1858(), iParam0->_fU944, 0, iVar3 );
    }
    return;
}

/* P_PLAYER_HOLSTER_FOR_TV */ void sub_21422()
{
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )))
    {
        SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1858(), 0, 0, 0 );
        SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1858(), 0, 1, 0 );
    }
    return;
}

/* LOADISEQ */ void sub_21590(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                DISPLAYF( "[SP]### Waiting for interactive sequence to be loaded: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* ARE_WEAPONS_HOLSTERED */ int sub_21906(int iParam0)
{
    if ((iParam0->_fU1072 == 1) || ((GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1858(), 0, 0 )) != iParam0->_fU944))
    {
        return 1;
    }
    return 0;
}

/* IS_VALID_ISEQ */ int sub_22020(unknown uParam0)
{
    return 1;
    return 0;
}

/* TELEPORTPED */ void sub_22262(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* F_ALLOCATE_FROM_CUTSCENE_HEAP */ int sub_22339()
{
    return 1;
    return 0;
}

/* IS_MOVIE_FINISHED */ int sub_23750(int iParam0)
{
    if ( /* IS_VALID_ISEQ */ sub_22020( iParam0 ))
    {
        if ((GET_SCRIPT_MOVIE_FRAMES_REMAINING( 2 )) < ((iParam0->_fU1068 / 1000) * 30.00000000))
        {
            return 1;
        }
    }
    else if ((IS_PAUSE_MENU_ACTIVE() == 0) AND ((IS_SCRIPT_MOVIE_PLAYING( 2 )) == 0))
    {
        return 1;
    }
    return 0;
}

/* HAS_UNHOLSTERED_WEAPON */ int sub_24426(int iParam0)
{
    if ((iParam0->_fU1072) || ((GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1858(), 0, 0 )) == iParam0->_fU944))
    {
        return 1;
    }
    return 0;
}

/* GET_TV_FREEZE_VALUE */ int sub_24718()
{
    return 1500;
}

/* P_RUN_EXIT_CAM */ void sub_24785()
{
    int iVar2;

    iVar2 = 1500;
    iVar2 = 500;
    CAMERA_FREEZE_FRAME( 1, iVar2, 1500, 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1896(), 1, 0 );
    }
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_24964(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_25075(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_25346(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_25391( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_25391(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_25478( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_25478(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_25530( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_26048( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_25530(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_26048(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* P_HANDLE_FALLING_BUSSES */ void sub_26270()
{
    int iVar2;
    int iVar3;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)
    {
        if ((g_U2642._fU0 == 0) AND (((DOES_OBJECT_EXIST( g_U2642._fU20 )) == 1) AND ((DOES_OBJECT_EXIST( g_U2642._fU12 )) == 1)))
        {
            iVar2 = 0;
            if ((HAS_OBJECT_BEEN_DAMAGED_BY_PED( g_U2642._fU12,  /* PLAYER_PED_ID */ sub_1858() )) == 1)
            {
                PLAY_SOUND_FROM_OBJECT( -1, "BUS_LIFT_PANEL", g_U2642._fU12 );
                START_PARTICLE_FX_NON_LOOPED_ON_OBJECT( "BusDepot_Elec_Box_S", g_U2642._fU12, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
                iVar2 = 1;
            }
            else if ((HAS_OBJECT_BEEN_DAMAGED_BY_PED( g_U2642._fU20,  /* PLAYER_PED_ID */ sub_1858() )) == 1)
            {
                PLAY_SOUND_FROM_OBJECT( -1, "BUS_LIFT_PANEL", g_U2642._fU20 );
                START_PARTICLE_FX_NON_LOOPED_ON_OBJECT( "BusDepot_Elec_Box_S", g_U2642._fU20, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
                iVar2 = 1;
            }
            if (iVar2 == 1)
            {
                 /* CLEANOBJECT */ sub_11453( g_U2642._fU16 );
                 /* CLEANOBJECT */ sub_11453( g_U2642._fU24 );
                GENERATE_OBJECT_CRUSH_IMMINENT_EVENT( g_U2642._fU4 );
                g_U2642._fU0 = 1;
            }
        }
    }
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)
    {
        if ((g_U2689._fU0 == 0) AND (((DOES_OBJECT_EXIST( g_U2689._fU20 )) == 1) AND ((DOES_OBJECT_EXIST( g_U2689._fU12 )) == 1)))
        {
            iVar3 = 0;
            if ((HAS_OBJECT_BEEN_DAMAGED_BY_PED( g_U2689._fU12,  /* PLAYER_PED_ID */ sub_1858() )) == 1)
            {
                PLAY_SOUND_FROM_OBJECT( -1, "BUS_LIFT_PANEL", g_U2689._fU12 );
                START_PARTICLE_FX_NON_LOOPED_ON_OBJECT( "BusDepot_Elec_Box_S", g_U2689._fU12, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
                iVar3 = 1;
            }
            else if ((HAS_OBJECT_BEEN_DAMAGED_BY_PED( g_U2689._fU20,  /* PLAYER_PED_ID */ sub_1858() )) == 1)
            {
                PLAY_SOUND_FROM_OBJECT( -1, "BUS_LIFT_PANEL", g_U2689._fU20 );
                START_PARTICLE_FX_NON_LOOPED_ON_OBJECT( "BusDepot_Elec_Box_S", g_U2689._fU20, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
                iVar3 = 1;
            }
            if (iVar3 == 1)
            {
                 /* CLEANOBJECT */ sub_11453( g_U2689._fU16 );
                 /* CLEANOBJECT */ sub_11453( g_U2689._fU24 );
                GENERATE_OBJECT_CRUSH_IMMINENT_EVENT( g_U2689._fU4 );
                g_U2689._fU0 = 1;
            }
        }
    }
     /* P_HANDLE_BUS_CRUSH */ sub_27102( ref g_U2642 );
     /* P_HANDLE_BUS_CRUSH */ sub_27102( ref g_U2689 );
    if ((g_U2642._fU0 == 2) || (( /* ISTIMERDONE */ sub_7296( ref g_U2642._fU152 )) == 1))
    {
        if ((DOES_OBJECT_EXIST( g_U2642._fU4 )) == 1)
        {
            FORCE_UPDATE_OBJECT_PHYSICAL_STATE( g_U2642._fU4 );
        }
    }
    if ((g_U2689._fU0 == 2) || (( /* ISTIMERDONE */ sub_7296( ref g_U2689._fU152 )) == 1))
    {
        if ((DOES_OBJECT_EXIST( g_U2689._fU4 )) == 1)
        {
            FORCE_UPDATE_OBJECT_PHYSICAL_STATE( g_U2689._fU4 );
        }
    }
    if (g_U2642._fU148 == 0)
    {
        if (g_U2642._fU0 == 4)
        {
             /* P_CLOSE_BUS_COVER */ sub_34796( 1 );
            g_U2642._fU148 = 1;
        }
    }
    if (g_U2689._fU148 == 0)
    {
        if (g_U2689._fU0 == 4)
        {
             /* P_FAR_BUS_COVER */ sub_35319( 1 );
            g_U2689._fU148 = 1;
        }
    }
    return;
}

/* P_HANDLE_BUS_CRUSH */ void sub_27102(int iParam0)
{
    int I;
    float fVar4;
    vector vVar5;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

    switch (iParam0->_fU0)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "Falling Bus Current Status = EBS_START", 0 );
        if ((DOES_OBJECT_EXIST( iParam0->_fU4 )) == 1)
        {
            iParam0->_fU48 = 0;
            iParam0->_fU52 = 0;
            iParam0->_fU140 = 0;
            iParam0->_fU144 = 0;
            iParam0->_fU28 = GET_OBJECT_BONE_INDEX( iParam0->_fU4, "BusCrs_Ab_Anim" );
            iParam0->_fU32 = GET_OBJECT_MASS( iParam0->_fU4 );
            if (iParam0->_fU28 != -1)
            {
                PLAY_OBJECT_ANIM( iParam0->_fU4, "P_BD_BusCrs_Ab_H", ref g_U1976, 0.00000000, 0, 1 );
                SET_OBJECT_ANIM_SPEED( iParam0->_fU4, "P_BD_BusCrs_Ab_H", ref g_U1976, 1.00000000 );
                PLAY_OBJECT_ANIM( iParam0->_fU8, "P_BD_BusCrs_Ac_H", ref g_U1976, 0.00000000, 0, 1 );
                SET_OBJECT_ANIM_SPEED( iParam0->_fU8, "P_BD_BusCrs_Ac_H", ref g_U1976, 1.00000000 );
                iParam0->_fU36 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_BONE_COORDS( iParam0->_fU4, iParam0->_fU28, 0 )};
                if (iParam0->_fU4 == g_U2642._fU4)
                {
                    PLAY_SOUND_FROM_OBJECT( -1, "BUS_LIFT_FAIL", iParam0->_fU4 );
                     /* P_START_PARTICLE_FX_ON_OBJECT */ sub_27606( ref l_U113[0] );
                     /* P_START_PARTICLE_FX_ON_OBJECT */ sub_27606( ref l_U113[1] );
                     /* P_START_PARTICLE_FX_ON_OBJECT */ sub_27606( ref l_U113[2] );
                     /* P_START_PARTICLE_FX_ON_OBJECT */ sub_27606( ref l_U113[3] );
                }
                else
                {
                    PLAY_SOUND_FROM_OBJECT( -1, "BUS_LIFT_FAIL", iParam0->_fU4 );
                     /* P_START_PARTICLE_FX_ON_OBJECT */ sub_27606( ref l_U113[4] );
                     /* P_START_PARTICLE_FX_ON_OBJECT */ sub_27606( ref l_U113[5] );
                     /* P_START_PARTICLE_FX_ON_OBJECT */ sub_27606( ref l_U113[6] );
                     /* P_START_PARTICLE_FX_ON_OBJECT */ sub_27606( ref l_U113[7] );
                }
                iParam0->_fU0 = 2;
                 /* WRITESCRIPTLOG */ sub_1099( "SP", "Falling Bus Current Status = EBS_FALLING", 0 );
            }
        }
        if ((DOES_OBJECT_EXIST( iParam0->_fU12 )) == 1)
        {
            CAMERA_CAN_TARGET_OBJECT( 0, iParam0->_fU12 );
        }
        if ((DOES_OBJECT_EXIST( iParam0->_fU20 )) == 1)
        {
            CAMERA_CAN_TARGET_OBJECT( 0, iParam0->_fU20 );
        }
        break;
        case 2:
         /* P_CHECK_PLAYER_UNDER_BUS */ sub_28228( iParam0 );
        if ((DOES_OBJECT_EXIST( iParam0->_fU4 )) == 1)
        {
            fVar4 = GET_OBJECT_ANIM_CURRENT_TIME( iParam0->_fU4, "P_BD_BusCrs_Ab_H", ref g_U1976 );
            vVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_BONE_COORDS( iParam0->_fU4, iParam0->_fU28, 0 )};
        }
        uVar8 = {(vVar5 - iParam0->_fU36) * TIMESTEP()};
        if ((NOT iParam0->_fU144) AND (fVar4 > l_U111))
        {
             /* CLEANOBJECT */ sub_11453( iParam0->_fU8 );
            iParam0->_fU8 =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2122, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU4 ), 0, 0, 0, 0, 1, 0 );
            if ((DOES_OBJECT_EXIST( iParam0->_fU8 )) == 1)
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU8, ref g_U1816 );
                PLAY_OBJECT_ANIM( iParam0->_fU8, "P_BD_BusCrs_Ad_H", ref g_U1976, 0.00000000, 0, 1 );
                SET_OBJECT_ANIM_CURRENT_TIME( iParam0->_fU8, "P_BD_BusCrs_Ad_H", ref g_U1976, fVar4 );
                SET_OBJECT_ANIM_SPEED( iParam0->_fU8, "P_BD_BusCrs_Ad_H", ref g_U1976, 1.00000000 );
            }
             /* P_BUS_WINDOW_EXPLOSION */ sub_30532( (iParam0^) );
            iParam0->_fU144 = 1;
        }
        if (fVar4 >= 0.95000000)
        {
            iParam0->_fU0 = 3;
        }
        else if (fVar4 > 0.08000000)
        {
            for ( I = 0; I < g_U2738; I++ )
            {
                if ((DOES_PED_EXIST( g_U2738[I] )) == 1)
                {
                    if (((IS_PED_DEAD( g_U2738[I] )) == 1) || ((IS_PED_DEAD( g_U2738[I] )) == 0))
                    {
                        if ((IS_PED_IN_GAMEPLAY_HELPER_BOX( g_U2738[I], (iParam0 + 56) + 0 )) == 1)
                        {
                            Temporarily_Disable_Ped_Self_Collision( g_U2738[I], 1500 );
                        }
                    }
                }
            }
            for ( I = 0; I < g_U2760; I++ )
            {
                if ((DOES_PED_EXIST( g_U2760[I] )) == 1)
                {
                    if (((IS_PED_DEAD( g_U2760[I] )) == 1) || ((IS_PED_DEAD( g_U2760[I] )) == 0))
                    {
                        if ((IS_PED_IN_GAMEPLAY_HELPER_BOX( g_U2760[I], (iParam0 + 56) + 0 )) == 1)
                        {
                            Temporarily_Disable_Ped_Self_Collision( g_U2760[I], 1500 );
                        }
                    }
                }
            }
        }
        if ((fVar4 > 0.37500000) AND (iParam0->_fU48 == 0))
        {
             /* WRITESCRIPTLOG */ sub_1099( "SP", "HANDLING BLOOD FX", 0 );
            for ( I = 0; I < g_U2738; I++ )
            {
                if ((((IS_PED_DEAD( g_U2738[I] )) == 0) || ((IS_PED_DEAD( g_U2738[I] )) == 1)) AND ((DOES_PED_EXIST( g_U2738[I] )) == 1))
                {
                    if ((IS_PED_IN_GAMEPLAY_HELPER_BOX( g_U2738[I], (iParam0 + 56) + 0 )) == 1)
                    {
                         /* WRITESCRIPTLOG */ sub_1099( "SP", "Found a ped under a falling bus...blood time!", 0 );
                        START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "blood_fall_high_death", g_U2738[I], 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 65488, 5.00000000 );
                         /* P_KILL_PED */ sub_31789( g_U2738[I] );
                        SET_ARCADEMODE_EVENT( 0, g_U2738[I] );
                         /* P_UPDATE_SP_CHALLENGES */ sub_31884();
                    }
                    else if ((( /* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ sub_32202( g_U2738[I], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU4 ) )) < 13.00000000) AND ((IS_PED_DEAD( g_U2738[I] )) == 0))
                    {
                         /* WRITESCRIPTLOG */ sub_1099( "SP", "Setting ped to react to bus crush", 0 );
                        CLEAR_PED_TASKS( g_U2738[I] );
                        PED_SET_ACTION_INTENTION( g_U2738[I], 0, 1000, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU4 ) );
                        g_U2749[I] = 1;
                    }
                }
            }
            for ( I = 0; I < g_U2760; I++ )
            {
                if ((((IS_PED_DEAD( g_U2760[I] )) == 0) || ((IS_PED_DEAD( g_U2760[I] )) == 1)) AND ((DOES_PED_EXIST( g_U2760[I] )) == 1))
                {
                    if ((IS_PED_IN_GAMEPLAY_HELPER_BOX( g_U2760[I], (iParam0 + 56) + 0 )) == 1)
                    {
                         /* WRITESCRIPTLOG */ sub_1099( "SP", "Found a ped under a falling bus...blood time!", 0 );
                        START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "blood_fall_high_death", g_U2760[I], 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 65488, 5.00000000 );
                         /* P_KILL_PED */ sub_31789( g_U2760[I] );
                        SET_ARCADEMODE_EVENT( 0, g_U2760[I] );
                         /* P_UPDATE_SP_CHALLENGES */ sub_31884();
                    }
                    else if ((( /* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ sub_32202( g_U2760[I], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU4 ) )) < 13.00000000) AND ((IS_PED_DEAD( g_U2760[I] )) == 0))
                    {
                         /* WRITESCRIPTLOG */ sub_1099( "SP", "Setting ped to react to bus crush", 0 );
                        CLEAR_PED_TASKS( g_U2760[I] );
                        PED_SET_ACTION_INTENTION( g_U2760[I], 0, 1000, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU4 ) );
                        g_U2764[I] = 1;
                    }
                }
            }
             /* P_CHECK_PLAYER_UNDER_BUS */ sub_28228( iParam0 );
            iParam0->_fU48 = 1;
        }
        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0) || ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 1))
        {
            if ((fVar4 > 0.37500000) AND (l_U456 == 1))
            {
                if (l_U457 == 0)
                {
                     /* WRITESCRIPTLOG */ sub_1099( "SP", "Starting Player Crushed by Bus FX...", 0 );
                    START_PARTICLE_FX_NON_LOOPED_AT_COORD( "blood_fall_high_death", l_U424, l_U427, l_U436 );
                    START_PARTICLE_FX_NON_LOOPED_AT_COORD( "blood_fall_high_death", l_U430, l_U433, l_U436 );
                    l_U457 = 1;
                }
            }
        }
        if ((NOT iParam0->_fU52) AND (fVar4 > 0.43750000))
        {
             /* WRITESCRIPTLOG */ sub_1099( "SP", "STARTING BUS IMPACT EFFECTS", 0 );
            uVar11 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU4 )};
            START_PARTICLE_FX_NON_LOOPED_AT_COORD( "BusDepot_BusDrop_Impact_S", uVar11._fU0, uVar11._fU4, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
            iParam0->_fU52 = 1;
            SET_PAD_SHAKE( 0, 500, 255 );
            SHAKE_GAMEPLAY_CAM( "SMALL_EXPLOSION_SHAKE", 0.20000000 );
            SHAKE_GAMEPLAY_CAM( "VIBRATE_SHAKE", 0.40000000 );
             /* CREATETIMER */ sub_6933( ref l_U92, l_U110, 1, 0 );
             /* STARTTIMER */ sub_7083( ref l_U92 );
        }
        if (iParam0->_fU140 == 0)
        {
            if (fVar4 > l_U112)
            {
                PLAY_SOUND_FROM_OBJECT( -1, "BUS_LIFT_FAIL_LANDING", iParam0->_fU4 );
                iParam0->_fU140 = 1;
            }
        }
        if (( /* ISTIMERDONE */ sub_7296( ref l_U92 )) == 1)
        {
            STOP_GAMEPLAY_CAM_SHAKING( "SMALL_EXPLOSION_SHAKE", 0 );
        }
        if ( /* ISTIMERDONE */ sub_7296( ref l_U101 ))
        {
            STOP_GAMEPLAY_CAM_SHAKING( "VIBRATE_SHAKE", 0 );
        }
        iParam0->_fU36 = {vVar5};
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "Falling Bus Current Status = EBS_POSTFALL", 0 );
        for ( I = 0; I < g_U2738; I++ )
        {
            if ((DOES_PED_EXIST( g_U2738[I] )) == 1)
            {
                if ((( /* F_ISPEDINTRIGGERBOX */ sub_19066( g_U2738[I], iParam0->_fU56 )) == 1) || ((IS_PED_RAGDOLL( g_U2738[I], 1 )) == 1))
                {
                    if ((IS_PED_DEAD( g_U2738[I] )) == 0)
                    {
                         /* WRITE_STRING */ sub_4176( "Killing ped under bus" );
                         /* P_KILL_PED */ sub_31789( g_U2738[I] );
                        SET_ARCADEMODE_EVENT( 0, g_U2738[I] );
                         /* P_UPDATE_SP_CHALLENGES */ sub_31884();
                    }
                }
                else if ((g_U2749[I] == 1) AND (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0) AND ((IS_PED_DEAD( g_U2738[I] )) == 0)))
                {
                    TASK_COMBAT_PED( g_U2738[I],  /* PLAYER_PED_ID */ sub_1858() );
                    g_U2749[I] = 0;
                }
            }
        }
        for ( I = 0; I < g_U2760; I++ )
        {
            if ((DOES_PED_EXIST( g_U2760[I] )) == 1)
            {
                if ((( /* F_ISPEDINTRIGGERBOX */ sub_19066( g_U2760[I], iParam0->_fU56 )) == 1) || ((IS_PED_RAGDOLL( g_U2760[I], 1 )) == 1))
                {
                    if (NOT (IS_PED_DEAD( g_U2760[I] )))
                    {
                         /* WRITE_STRING */ sub_4176( "Killing ped under bus" );
                         /* P_KILL_PED */ sub_31789( g_U2760[I] );
                        SET_ARCADEMODE_EVENT( 0, g_U2760[I] );
                         /* P_UPDATE_SP_CHALLENGES */ sub_31884();
                    }
                }
                else if ((g_U2764[I] == 1) AND (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0) AND ((IS_PED_DEAD( g_U2760[I] )) == 0)))
                {
                    TASK_COMBAT_PED( g_U2760[I],  /* PLAYER_PED_ID */ sub_1858() );
                    g_U2764[I] = 0;
                }
            }
        }
         /* P_CHECK_PLAYER_UNDER_BUS */ sub_28228( iParam0 );
        FORCE_UPDATE_OBJECT_PHYSICAL_STATE( iParam0->_fU4 );
        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0) || ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 1))
        {
            if (l_U456 == 1)
            {
                 /* WRITESCRIPTLOG */ sub_1099( "SP", "Starting Player Crushed Fail Bullet Cam Timer...", 0 );
                 /* CREATETIMER */ sub_6933( ref l_U437, 0, 1, 0 );
                 /* STARTTIMER */ sub_7083( ref l_U437 );
            }
        }
        iParam0->_fU0 = 4;
        break;
        case 4:
        if (( /* ISTIMERDONE */ sub_7296( ref l_U437 )) == 1)
        {
             /* WRITESCRIPTLOG */ sub_1099( "SP", "Starting Player Crushed Fail Bullet Cam...", 0 );
            l_U455 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
            SETUP_BULLET_CAMERA_SCENE( l_U455, "MISS_DEATH_FALL_01A", 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
            SET_CAM_ACTIVE( l_U455, 1 );
             /* CREATETIMER */ sub_6933( ref l_U446, 500, 1, 0 );
             /* STARTTIMER */ sub_7083( ref l_U446 );
            l_U458 = 1;
        }
        break;
    }
    return;
}

/* P_START_PARTICLE_FX_ON_OBJECT */ void sub_27606(int iParam0)
{
     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_START_PARTICLE_FX_ON_OBJECT", "###" );
    if ((DOES_OBJECT_EXIST( iParam0->_fU68 )) == 1)
    {
        if (iParam0->_fU128 == 1)
        {
             /* WRITESCRIPTLOG */ sub_1099( "SP", "START_PARTICLE_FX_LOOPED_ON_OBJECT", "###" );
            iParam0->_fU136 = START_PARTICLE_FX_LOOPED_ON_OBJECT( iParam0 + 36, iParam0->_fU68, iParam0->_fU76, iParam0->_fU88, iParam0->_fU124 );
             /* STARTTIMER */ sub_7083( iParam0 + 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_1099( "SP", "START_PARTICLE_FX_NON_LOOPED_ON_OBJECT", "###" );
            START_PARTICLE_FX_NON_LOOPED_ON_OBJECT( iParam0 + 36, iParam0->_fU68, iParam0->_fU76, iParam0->_fU88, iParam0->_fU124 );
        }
    }
    iParam0->_fU132 = 1;
    return;
}

/* P_CHECK_PLAYER_UNDER_BUS */ void sub_28228(int iParam0)
{
    if (l_U459 == 0)
    {
        START_WIDGET_GROUP( "Bus Crush Player Helper" );
        START_WIDGET_GROUP( "Close Bus Crush Player" );
        START_WIDGET_GROUP( "Animated Camera" );
        ADD_WIDGET_FLOAT_SLIDER( "Offset Pos X", ref l_U416._fU0, -5000.00000000, 5000.00000000, 0.00100000 );
        ADD_WIDGET_FLOAT_SLIDER( "Offset Pos Y", ref l_U416._fU4, -5000.00000000, 5000.00000000, 0.00100000 );
        ADD_WIDGET_FLOAT_SLIDER( "Offset Pos Z", ref l_U416._fU8, -5000.00000000, 5000.00000000, 0.00100000 );
        ADD_WIDGET_FLOAT_SLIDER( "Offset Heading", ref l_U419, -360.00000000, 360.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Player Crushed FX" );
        ADD_WIDGET_FLOAT_SLIDER( "FX Scale", ref l_U436, 0.00000000, 100.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U424._fU0, -5000.00000000, 5000.00000000, 0.00100000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U424._fU4, -5000.00000000, 5000.00000000, 0.00100000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U424._fU8, -5000.00000000, 5000.00000000, 0.00100000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot X", ref l_U427._fU0, -360.00000000, 360.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Y", ref l_U427._fU4, -360.00000000, 360.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Z", ref l_U427._fU8, -360.00000000, 360.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Far Bus Crush Player" );
        START_WIDGET_GROUP( "Animated Camera" );
        ADD_WIDGET_FLOAT_SLIDER( "Offset Pos X", ref l_U420._fU0, -5000.00000000, 5000.00000000, 0.00100000 );
        ADD_WIDGET_FLOAT_SLIDER( "Offset Pos Y", ref l_U420._fU4, -5000.00000000, 5000.00000000, 0.00100000 );
        ADD_WIDGET_FLOAT_SLIDER( "Offset Pos Z", ref l_U420._fU8, -5000.00000000, 5000.00000000, 0.00100000 );
        ADD_WIDGET_FLOAT_SLIDER( "Offset Heading", ref l_U423, -360.00000000, 360.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Player Crushed FX" );
        ADD_WIDGET_FLOAT_SLIDER( "FX Scale", ref l_U436, 0.00000000, 100.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U430._fU0, -5000.00000000, 5000.00000000, 0.00100000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U430._fU4, -5000.00000000, 5000.00000000, 0.00100000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U430._fU8, -5000.00000000, 5000.00000000, 0.00100000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot X", ref l_U433._fU0, -360.00000000, 360.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Y", ref l_U433._fU4, -360.00000000, 360.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Z", ref l_U433._fU8, -360.00000000, 360.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        l_U459 = 1;
    }
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0) || ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 1))
    {
        if (l_U456 == 0)
        {
            if (( /* F_ISPEDINTRIGGERBOX */ sub_19066(  /* PLAYER_PED_ID */ sub_1858(), iParam0->_fU56 )) == 1)
            {
                 /* WRITESCRIPTLOG */ sub_1099( "SP", "Player is under the bus when falling! Running Death Cam.", 0 );
                 /* NIS_PRE_SETUP */ sub_3442( 1, 0, 0, 1 );
                 /* KILL_ANY_MISSION_SPEECH */ sub_9073( 0 );
                 /* KILL_ANY_AMBIENT_SPEECH */ sub_9273( 0 );
                if (iParam0->_fU4 == g_U2642._fU4)
                {
                    CAMERA_PLAY_ANIMATED( "LEVEL_S_BUS_CP_04", "BUS_CRUSH_CAM", 1, l_U416, l_U419, 0, 0 );
                }
                else if (iParam0->_fU4 == g_U2689._fU4)
                {
                    CAMERA_PLAY_ANIMATED( "LEVEL_S_BUS_CP_04", "BUS_CRUSH_CAM", 1, l_U420, l_U423, 0, 0 );
                }
                 /* TELEPORTPED */ sub_22262(  /* PLAYER_PED_ID */ sub_1858(), -63.25000000, -3.31000000, 0.00100000, 75.96000000 );
                if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0) || ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 1))
                {
                    SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1858(), 1 );
                    SET_PED_PROOFS(  /* PLAYER_PED_ID */ sub_1858(), 1, 1, 1, 1, 1 );
                    SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1858(), 0 );
                    CLEAR_PED_TASKS(  /* PLAYER_PED_ID */ sub_1858() );
                    FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_1858(), 1 );
                }
                l_U456 = 1;
            }
        }
    }
    return;
}

/* CREATEOBJECTNOOFFSET */ void sub_30055(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_4059( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* P_BUS_WINDOW_EXPLOSION */ void sub_30532(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46)
{
    vector vVar49;
    int[0] iVar52;
    unknown uVar66;
    unknown uVar67;
    unknown uVar68;
    unknown uVar69;
    unknown uVar70;
    unknown uVar71;
    unknown uVar72;
    unknown uVar73;
    unknown uVar74;
    unknown uVar75;
    unknown uVar76;
    unknown uVar77;
    unknown uVar78;
    unknown uVar79;
    unknown uVar80;
    unknown uVar81;
    unknown uVar82;
    unknown uVar83;
    unknown uVar84;
    unknown uVar85;
    unknown uVar86;
    unknown uVar87;
    unknown uVar88;
    unknown uVar89;
    unknown uVar90;
    unknown uVar91;
    int I;

     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_BUS_WINDOW_EXPLOSION", 0 );
    vVar49 = {(vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( uParam0._fU4 ))) - l_U86};
    array(ref iVar52, 13);
    iVar52[0] = {(vector( -57.68585000, -2.85334100, 2.79495800)) + vVar49};
    iVar52[1] = {(vector( -54.00000000, -1.59900000, 3.20000000)) + vVar49};
    iVar52[2] = {(vector( -48.88678000, -1.60743900, 3.00000000)) + vVar49};
    iVar52[3] = {(vector( -40.52529000, -3.74309000, 3.00000000)) + vVar49};
    iVar52[4] = {(vector( -54.00000000, -6.59900000, 3.20000000)) + vVar49};
    iVar52[5] = {(vector( -48.88678000, -6.60743900, 3.00000000)) + vVar49};
    iVar52[6] = {(vector( -54.29200000, -1.69868200, 3.21105200)) + vVar49};
    iVar52[7] = {(vector( -44.90000000, -1.29576000, 3.59900000)) + vVar49};
    iVar52[8] = {(vector( -42.96821000, -1.62924000, 3.40276900)) + vVar49};
    iVar52[9] = {(vector( -44.64196000, -5.72681400, 3.40620200)) + vVar49};
    iVar52[10] = {(vector( -46.63055000, -5.80551600, 3.00387100)) + vVar49};
    iVar52[11] = {(vector( -55.80989000, -5.95886800, 3.20848300)) + vVar49};
    iVar52[12] = {(vector( -57.15919000, -4.98692300, 3.28147700)) + vVar49};
    for ( I = 0; I < iVar52; I++ )
    {
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( iVar52[I], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( uParam0._fU4 ), 0, 1, -1074756423, 0 );
    }
    return;
}

/* P_KILL_PED */ void sub_31789(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

/* P_UPDATE_SP_CHALLENGES */ void sub_31884()
{
    if (SCRIPT_VAR_HASH_EXISTS( -455945688 ))
    {
         /* WRITESCRIPTLOG */ sub_1099( "CCB", "An enemy has been crushed by a bus...", 0 );
        SCRIPT_VAR_HASH_SET_INT( -455945688, g_U2629 );
        DISPLAYF( "[CCB] ### The current CrushedByBus value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( -455945688 ) );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_1099( "CCB", "The CrushedByBus script variable is NOT valid!!!", 0 );
    }
    return;
}

/* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ void sub_32202(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    else
    {
        return -1.00000000;
    }
    return VDIST( uVar6, uParam1 );
}

/* P_CLOSE_BUS_COVER */ void sub_34796(boolean bParam0)
{
     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_CLOSE_BUS_COVER", 0 );
    if (bParam0)
    {
         /* WRITE_STRING */ sub_4176( "Close Bus has fallen, setting cover for fallen bus." );
    }
    else
    {
         /* WRITE_STRING */ sub_4176( "Close Bus is raised, setting cover for raised bus." );
    }
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "RepairGarage" ), GET_HASH_KEY( "GrabSpline102" ), bParam0 );
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "RepairGarage" ), GET_HASH_KEY( "GrabSpline103" ), bParam0 );
    ENABLE_COVERPOINTMP3( "RepairGarage", "Corner Position70", bParam0 );
    ENABLE_COVERPOINTMP3( "RepairGarage", "Corner Position71", bParam0 );
    ENABLE_COVERPOINTMP3( "RepairGarage", "Corner Position73", bParam0 );
    ENABLE_COVERPOINTMP3( "RepairGarage", "Corner Position87", bParam0 );
    return;
}

/* P_FAR_BUS_COVER */ void sub_35319(boolean bParam0)
{
     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_FAR_BUS_COVER", 0 );
    if (bParam0)
    {
         /* WRITE_STRING */ sub_4176( "Far Bus has fallen, setting cover for fallen bus." );
    }
    else
    {
         /* WRITE_STRING */ sub_4176( "Far Bus is raised, setting cover for raised bus." );
    }
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "RepairGarage" ), GET_HASH_KEY( "GrabSpline100" ), bParam0 );
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "RepairGarage" ), GET_HASH_KEY( "GrabSpline101" ), bParam0 );
    ENABLE_COVERPOINTMP3( "RepairGarage", "Corner Position61", bParam0 );
    ENABLE_COVERPOINTMP3( "RepairGarage", "Corner Position63", bParam0 );
    ENABLE_COVERPOINTMP3( "RepairGarage", "Corner Position66", bParam0 );
    ENABLE_COVERPOINTMP3( "RepairGarage", "Corner Position68", bParam0 );
    return;
}

/* P_HANDLE_GARAGE_FORKLIFT_EXPLOSION */ void sub_35811()
{
    if (g_U2851 == 0)
    {
        if ((HAS_SOMETHING_EXPLODED_IN_AREA( g_U2636, 3.00000000 )) == 1)
        {
             /* P_UPDATE_FORKLIFT_COVER */ sub_35896( 1 );
            g_U2851 = 1;
        }
    }
    return;
}

/* P_UPDATE_FORKLIFT_COVER */ void sub_35896(int iParam0)
{
     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_UPDATE_FORKLIFT_COVER", 0 );
    if (iParam0 == 0)
    {
        ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "RepairGarage" ), GET_HASH_KEY( "GrabSpline11" ), 1 );
        ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "RepairGarage" ), GET_HASH_KEY( "GrabSpline68" ), 0 );
    }
    else if (iParam0 == 1)
    {
        ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "RepairGarage" ), GET_HASH_KEY( "GrabSpline11" ), 0 );
        ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "RepairGarage" ), GET_HASH_KEY( "GrabSpline68" ), 1 );
    }
    return;
}

/* P_HANDLE_FALLING_PEDS */ void sub_36222()
{
    int I;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    for ( I = 0; I < g_U2738; I++ )
    {
        if (((IS_PED_DEAD( g_U2738[I] )) == 0) AND ((DOES_PED_EXIST( g_U2738[I] )) == 1))
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2738[I] )};
            if (uVar3._fU8 < -3.00000000)
            {
                SET_PED_HEALTH( g_U2738[I], 0, 0 );
            }
        }
    }
    for ( I = 0; I < g_U2760; I++ )
    {
        if (((IS_PED_DEAD( g_U2760[I] )) == 0) AND ((DOES_PED_EXIST( g_U2760[I] )) == 1))
        {
            uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2760[I] )};
            if (uVar6._fU8 < -3.00000000)
            {
                SET_PED_HEALTH( g_U2760[I], 0, 0 );
            }
        }
    }
    return;
}

/* P_INIT_SCRIPT_VARIABLES */ void sub_36769()
{
    int I;

     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_INIT_SCRIPT_VARIABLES", 0 );
    g_U2850 = 0;
    l_U773 = 0;
    l_U820 = 0;
    g_U2868 = 0;
    for ( I = 0; I < g_U2738; I++ )
    {
        g_U2749[I] = 0;
    }
    for ( I = 0; I < g_U2760; I++ )
    {
        g_U2764[I] = 0;
    }
    if (g_U764 == 6)
    {
        g_U2642._fU0 = g_U2736._fU0;
        g_U2689._fU0 = g_U2736._fU4;
    }
    l_U538 = 0;
    l_U1469 = 0;
    l_U840 = 0;
    l_U841 = 0;
    l_U958 = 0;
    l_U961 = 0;
    l_U959 = 0;
    l_U960 = 0;
    l_U930 = 0;
    l_U906 = 0;
    l_U907 = 0;
    l_U908 = 0;
    l_U845 = 0;
    l_U846 = 0;
    l_U962 = 0;
    l_U963 = 0;
    l_U964 = 0;
    l_U847 = 0;
    l_U848 = 0;
    g_U2851 = 0;
    l_U456 = 0;
    l_U457 = 0;
    l_U458 = 0;
     /* RESETTIMER */ sub_8550( ref l_U437 );
     /* RESETTIMER */ sub_8550( ref l_U446 );
     /* RESETTIMER */ sub_8550( ref l_U101 );
     /* RESETTIMER */ sub_8550( ref l_U92 );
     /* RESETTIMER */ sub_8550( ref l_U1019 );
     /* RESETTIMER */ sub_8550( ref l_U879 );
     /* RESETTIMER */ sub_8550( ref l_U888 );
     /* RESETTIMER */ sub_8550( ref l_U897 );
     /* RESETTIMER */ sub_8550( ref l_U861 );
     /* RESETTIMER */ sub_8550( ref l_U870 );
     /* RESETTIMER */ sub_8550( ref l_U1001 );
     /* RESETTIMER */ sub_8550( ref l_U1010 );
     /* RESETTIMER */ sub_8550( ref l_U965 );
     /* RESETTIMER */ sub_8550( ref l_U974 );
     /* RESETTIMER */ sub_8550( ref l_U983 );
     /* RESETTIMER */ sub_8550( ref l_U992 );
     /* RESETTIMER */ sub_8550( ref l_U1047 );
     /* RESETTIMER */ sub_8550( ref l_U1029 );
     /* RESETTIMER */ sub_8550( ref l_U1038 );
     /* RESETTIMER */ sub_8550( ref l_U949 );
     /* RESETTIMER */ sub_8550( ref l_U852 );
    g_U2784[0] = {-61.54202000, 6.49707800, 5.65253500};
    g_U2784[1] = {-58.52385000, 6.49707800, 5.65253500};
    g_U2784[2] = {-55.50568000, 6.49707900, 5.65253600};
    g_U2784[3] = {-52.48751000, 6.49707800, 5.65253500};
    g_U2784[4] = {-49.46930000, 6.49707800, 5.65253600};
    StrCopy( ref g_U2800[0], "p_bd_catwlk_aa", 32 );
    StrCopy( ref g_U2800[1], "p_bd_catwlk_ba", 32 );
    StrCopy( ref g_U2800[2], "p_bd_catwlk_ca", 32 );
    StrCopy( ref g_U2800[3], "p_bd_catwlk_da", 32 );
    StrCopy( ref g_U2800[4], "p_bd_catwlk_ea", 32 );
    l_U947 = 0;
    l_U541 = 0;
    l_U542 = 0;
    l_U543 = 0;
    l_U544 = 0;
    l_U545 = 0;
    return;
}

/* P_INIT_GAMEPLAY_STRUCTS */ void sub_37606()
{
     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_INIT_GAMEPLAY_STRUCTS", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3650( ref l_U730, -46.55000000, 8.48000000, 6.05000000, 0.00000000, -1257669444, 26, 6, 0, 0, 1 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3650( ref l_U743[0], -48.49000000, -13.89000000, 5.00000000, 134.00000000, -114968797, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3650( ref l_U743[1], -49.32000000, -14.08000000, 5.00000000, 134.00000000, 677494614, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3650( ref l_U780[0], -66.08000000, -13.72000000, 0.13000000, -8.12000000, 449056168, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3650( ref l_U780[1], -65.72000000, -14.59000000, 0.13000000, -0.00999940, 2144606972, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3650( ref l_U780[2], -66.99000000, -14.56000000, 0.13000000, -17.85000000, -1274479183, 7, 3, 2, 0, 0 );
     /* P_CREATETRIGGERBOX */ sub_38017( ref l_U583, "TRIG_GIO_VIG_08A_IDLE", -46.56000000, 12.51000000, 5.70000000, 2.00000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_38017( ref l_U604, "TRIG_MID_UP_STAIRS", -51.07000000, 30.50000000, 2.91000000, 6.00000000, 2.50000000, 3.00000000, 0.00000000, -33.72750000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_38017( ref l_U646, "TRIG_BASE_LOWERED_STAIRS", -56.29000000, 29.52000000, 0.00000000, 4.43000000, 3.01000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_38017( ref l_U625, "TRIG_FULL_LOWERED_STAIRS", -53.74000000, 30.07000000, 1.55000000, 6.00000000, 2.50000000, 3.00000000, 0.00000000, -33.72750000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_38017( ref l_U667, "TRIG_IMAGEFX_STAIRS", -52.23320000, 30.07000000, 2.55739000, 6.00000000, 2.50000000, 3.00000000, 0.00000000, -33.72750000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_38017( ref l_U688, "ROBOTESTER is killing your catwalk ladies", -45.09000000, 5.87000000, 0.00000000, 2.00000000, 2.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_38017( ref l_U709, "ROBOTESTER is killing your enemies", -41.71000000, 2.00000000, -0.20000000, 2.00000000, 2.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CLOSEDOOR */ sub_38642( ref g_U2253, 1 );
     /* P_SETDOORLOCKED */ sub_38899( ref g_U2253, 0 );
    return;
}

/* P_CREATETRIGGERBOX */ void sub_38017(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CLOSEDOOR */ void sub_38642(int iParam0, int iParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_38668( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_38752( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_38668(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_38752(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_SETDOORLOCKED */ void sub_38899(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if (( /* F_DOESDOOREXIST */ sub_38668( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_38752( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

/* P_INITIALIZE_SP_CHALLENGES */ void sub_39053()
{
     /* WRITESCRIPTLOG */ sub_1099( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    g_U2629 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( -455945688 )))
    {
         /* WRITESCRIPTLOG */ sub_1099( "CCB", "Creating the CrushedByBus script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( -455945688 );
        DISPLAYF( "[CCB] ### The current CrushedByBus value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( -455945688 ) );
        if (SCRIPT_VAR_HASH_EXISTS( -455945688 ))
        {
             /* WRITESCRIPTLOG */ sub_1099( "CCB", "The CrushedByBus script variable was successfully created...", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_1099( "CCB", "The CrushedByBus script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_1099( "CCB", "The CrushedByBus script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( -455945688, 0 );
        DISPLAYF( "[CCB] ### The current CrushedByBus value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( -455945688 ) );
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT */ void sub_39783(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 =  /* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ sub_39850( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar4 );
            PRINTNL();
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_40108( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Inserting MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ int sub_39850(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_40108( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is loading: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_40108( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                     /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_40108( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_41639( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being removed: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_40108( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_40108( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ void sub_40108(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_40169( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ int sub_40169(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID is active: {} ###", 1, 513, (uParam1^)[I] );
                if ((uParam1^)[I] == iParam0)
                {
                    DISPLAYF( "The THREADID was already requested by this thread!!!", 0 );
                    DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                    (uParam1^)[I] = nil;
                    Result = I;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The THREADID index was requested by another thread!!! {} ###", 1, 513, I );
                }
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is NOT active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

/* P_STREAMREQ_THREADID_RESET */ void sub_41639(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ void sub_42879(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_39783( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT */ void sub_43026(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ sub_43080( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_43341( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ int sub_43080(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_43341( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is loading: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_43341( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The WEAPON_TYPE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_43341( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_41639( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being removed: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_43341( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            DISPLAYF( "The WEAPON_TYPE asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_43341( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ void sub_43341(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_40169( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_INSERT */ void sub_45033(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ sub_45085( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ANIM_DICT asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_45337( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ int sub_45085(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_45337( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_45337( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ANIM_DICT asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_45337( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_41639( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_45337( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ANIM_DICT asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ANIM_DICT: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
             /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_45337( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ void sub_45337(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_40169( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ISEQ_INSERT */ void sub_46956(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 =  /* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ sub_47017( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar12 );
            PRINTNL();
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar4 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
             /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_47267( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

/* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ int sub_47017(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_47267( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is loading: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_47267( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                        DISPLAYF( "The ISEQ asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_47267( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loading: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_47267( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### Re-requesting ISEQ: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_41639( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_41639( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being removed: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_47267( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar5 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_47267( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ISEQ_THREADID_SET_ID */ void sub_47267(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_40169( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_AUDIO_BANK_INSERT */ void sub_49858(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_AUDIO_BANK_IS_INDEX_AVAILABLE */ sub_49911( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing AUDIO_BANK asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
         /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_50166( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_AUDIO_BANK_IS_INDEX_AVAILABLE */ int sub_49911(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_50166( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_50166( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    DISPLAYF( "[CCB] ### The AUDIO_BANK is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The AUDIO_BANK asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_50166( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The AUDIO_BANK is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_41639( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_50166( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            DISPLAYF( "[CCB] ### The AUDIO_BANK is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The AUDIO_BANK is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing AUDIO_BANK: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
             /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_50166( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ void sub_50166(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_40169( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_ALL_ASSETS_LOADED */ int sub_51956(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    if ( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_52000( uParam0 ))
    {
        if ( /* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ sub_52400( uParam1 ))
        {
            if ( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_52804( uParam2 ))
            {
                if ( /* F_STREAMREQ_ANIM_DICT_IS_LOADED */ sub_53220( uParam3 ))
                {
                    if ( /* F_STREAMREQ_VEHICLE_RECORDING_IS_LOADED */ sub_53613( uParam4 ))
                    {
                        if ( /* F_STREAMREQ_ACTION_TREE_IS_LOADED */ sub_54035( uParam5 ))
                        {
                            if ( /* F_STREAMREQ_SCRIPT_STREAM_IS_LOADED */ sub_54415( uParam6 ))
                            {
                                if ( /* F_STREAMREQ_AUDIO_BANK_IS_LOADED */ sub_54803( uParam7 ))
                                {
                                    return 1;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return 0;
}

/* F_STREAMREQ_MODELNAMES_IS_LOADED */ int sub_52000(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be requested: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to load: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be removed: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ int sub_52400(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be requested: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to load: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be removed: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ISEQ_IS_LOADED */ int sub_52804(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be requested: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to load: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be removed: {} ###", 1, 1281, ref uVar3 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ANIM_DICT_IS_LOADED */ int sub_53220(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be requested: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to load: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be removed: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_VEHICLE_RECORDING_IS_LOADED */ int sub_53613(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to be requested: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to load: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to be removed: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ACTION_TREE_IS_LOADED */ int sub_54035(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_LOADED */ int sub_54415(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_AUDIO_BANK_IS_LOADED */ int sub_54803(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* HAS_SAVEFILE_LOADED */ int sub_55292(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_1099( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_12879( uParam0,  /* PLAYER_PED_ID */ sub_1858() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* P_CREATETVSTRUCT */ void sub_55742()
{
     /* WRITESCRIPTLOG */ sub_1099( "rw", "P_CreateTvStruct", 0 );
    l_U1198._fU0 = 0;
    StrCopy( ref l_U1198._fU8, "TV_08_16x9_bus", 32 );
    l_U1198._fU40 =  /* CREATEOBJECTNOOFFSET */ sub_30055( 1490301961, -39.43351000, 24.54665000, 6.86338000, 0.00000000, 0.00000000, 90.00000000, 0, 0, 0 );
    l_U1198._fU44 = {g_U1816};
    l_U1198._fU76 = -1947292213;
    l_U1198._fU916 = 2000;
    l_U1198._fU920 = 97500;
    l_U1198._fU920 = 95700;
    l_U1198._fU80 = {-41.15600000, 24.27700000, 5.06500000};
    l_U1198._fU92 = 278.17900000;
    l_U1198._fU96 = "10_BUS_TV_TURN_ON_CAM";
    l_U1198._fU100 = "LEVEL_S_BUS_CP_04";
    l_U1198._fU104 = "10_BUS_TV_TURN_OFF_CAM";
    l_U1198._fU108 = {-41.77000000, 25.61000000, 7.12000000};
    l_U1198._fU120 = -116.93000000;
    l_U1198._fU128 = {-40.44000000, 24.53000000, 6.49000000};
    l_U1198._fU140 = {-2.40000000, 0.00000000, -90.00000000};
    l_U1198._fU1072 = 1;
    l_U1198._fU948 = -1343439341;
    l_U1198._fU952 = {-41.15600000, 24.27700000, 5.06500000};
    l_U1198._fU964 = 278.17900000;
    l_U1198._fU1004 = 2000;
    l_U1198._fU1008 = 1255748779;
    l_U1198._fU1012 = {-40.85600000, 24.47700000, 5.06500000};
    l_U1198._fU1024 = 278.17900000;
    l_U1198._fU1064 = 2250;
    l_U1198._fU1068 = 3500;
    l_U1198._fU1076 = 90.00000000;
    if (DOES_OBJECT_EXIST( l_U1198._fU40 ))
    {
        FREEZE_OBJECT_POSITION( l_U1198._fU40, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1198._fU40, ref l_U1198._fU44 );
    }
     /* P_INIT_TV_POI */ sub_56421( ref l_U1198 );
    return;
}

/* P_INIT_TV_POI */ void sub_56421(int iParam0)
{
    float fVar3;
    float fVar4;

    fVar3 = 1.10000000;
    fVar4 = 1.50000000;
    fVar3 = 2.10000000;
    fVar4 = 2.60000000;
    if (DOES_OBJECT_EXIST( iParam0->_fU40 ))
    {
        SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( iParam0->_fU40, 1 );
    }
     /* P_CREATEPOISTRUCTCOORD */ sub_56570( iParam0 + 152, 2, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), 10.00000000, 10.00000000, 0, 0 );
     /* P_SET_INTERACTIVE_TEXT */ sub_57336( iParam0 + 152, 30, "POI_STOPWATCHTV" );
     /* P_SET_POI_FORCE_WALK */ sub_57548( iParam0 + 152, 0 );
     /* P_CREATEPOISTRUCTCOORD */ sub_56570( iParam0 + 496, 2, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), fVar3, fVar4, 1, 0 );
     /* P_SET_INTERACTIVE_TEXT */ sub_57336( iParam0 + 496, 30, "POI_WATCHTV" );
     /* P_SET_POI_FORCE_WALK */ sub_57548( iParam0 + 496, 0 );
     /* RESETTIMER */ sub_8550( iParam0 + 840 );
     /* RESETTIMER */ sub_8550( iParam0 + 876 );
     /* RESETTIMER */ sub_8550( iParam0 + 968 );
     /* RESETTIMER */ sub_8550( iParam0 + 1028 );
    iParam0->_fU936 = 0;
    iParam0->_fU940 = 0;
    iParam0->_fU1080 = 0;
    return;
}

/* P_CREATEPOISTRUCTCOORD */ void sub_56570(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
     /* P_CREATEBLANKPOISTRUCT */ sub_56610( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
     /* P_CREATEPOIGLINT */ sub_57003( iParam0 );
    return;
}

/* P_CREATEBLANKPOISTRUCT */ void sub_56610(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

/* P_CREATEPOIGLINT */ void sub_57003(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
     /* P_INITPOIGLINT */ sub_57101( iParam0 );
    return;
}

/* P_INITPOIGLINT */ void sub_57101(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                 /* P_ENABLEPOIGLINT */ sub_17771( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                 /* P_ENABLEPOIGLINT */ sub_17771( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                 /* P_ENABLEPOIGLINT */ sub_17771( iParam0, 1 );
            }
            else
            {
                 /* P_ENABLEPOIGLINT */ sub_17771( iParam0, 0 );
            };;;
        }
        else
        {
             /* P_ENABLEPOIGLINT */ sub_17771( iParam0, 0 );
        }
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_17771( iParam0, 0 );
    }
    return;
}

/* P_SET_INTERACTIVE_TEXT */ void sub_57336(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
     /* P_INITINTERACTIVETEXT */ sub_57392( iParam0 );
    return;
}

/* P_INITINTERACTIVETEXT */ void sub_57392(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

/* P_SET_POI_FORCE_WALK */ void sub_57548(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

/* F_HANDLE_CREATE_GARAGE_REPAIR_OBJECTS */ int sub_57973()
{
    if (g_U2850 == 0)
    {
         /* P_GLOBAL_CREATE_PAINT_GARAGE_DOOR */ sub_58036( 0 );
    }
    else if (g_U2850 == 1)
    {
         /* P_CREATE_GARAGE_PILLS */ sub_58527();
         /* P_CREATE_S_BUS_GG_M4_01 */ sub_58964();
    }
    else if (g_U2850 == 2)
    {
         /* P_CREATE_CATWALK */ sub_59798();
    }
    else if (g_U2850 == 3)
    {
         /* P_CREATE_STAIRCASE */ sub_60708();
    }
    else if (g_U2850 == 4)
    {
         /* P_CREATE_GARAGE_FORKLIFT */ sub_61081();
    }
    else if (g_U2850 == 5)
    {
         /* P_CREATE_GARAGE_CLOSE_BUS */ sub_61406();
    }
    else if (g_U2850 == 6)
    {
         /* P_CREATE_GARAGE_FAR_BUS */ sub_63417();
    };;;;;;;
    g_U2850++;
    if (g_U2850 == 7)
    {
        return 1;
    }
    return 0;
}

/* P_GLOBAL_CREATE_PAINT_GARAGE_DOOR */ void sub_58036(boolean bParam0)
{
    vector vVar3;
    vector vVar6;
    vector vVar9;
    vector vVar12;

     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_GLOBAL_CREATE_PAINT_GARAGE_DOOR", 0 );
    vVar3 = {-54.00200000, -11.19500000, 1.50100000};
    vVar6 = {0.00000000, 0.00000000, 0.00000000};
     /* CLEANOBJECT */ sub_11453( g_U2624 );
    g_U2624 =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2113, vVar3, vVar6, 0, 0, 1 );
    if ((DOES_OBJECT_EXIST( g_U2624 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U2624, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2624, ref g_U1816 );
        if (bParam0)
        {
            PLAY_OBJECT_ANIM( g_U2624, "BD_PAINT_DOOR02_07", "bd_objmodels", 1000.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U2624, "BD_PAINT_DOOR02_07", "bd_objmodels", 1.00000000 );
        }
    }
    vVar9 = {-54.00200000, -12.82000000, 0.00000000};
    vVar12 = {0.00000000, 0.00000000, 0.00000000};
     /* CLEANOBJECT */ sub_11453( g_U2625 );
    g_U2625 =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2114, vVar9, vVar12, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( g_U2625 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U2625, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2625, ref g_U1816 );
        SET_OBJECT_COLLIDE_WITH_NON_PLAYER_CHARACTER( g_U2625, 0 );
    }
    return;
}

/* P_CREATE_GARAGE_PILLS */ void sub_58527()
{
     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_CREATE_GARAGE_PILLS", 0 );
     /* CLEANPLACEMENT */ sub_11378( g_U2841 );
    g_U2841 =  /* CREATEPLACEMENT */ sub_58651( -4072149, -42.62000000, 24.74000000, 1.11000000, 0.00000000, 0.00000000, -90.00000000, 1, 1, 1, 1119092736 );
    if (DOES_PLACEMENT_EXIST( g_U2841 ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U2841, ref g_U1816 );
    }
     /* CLEANPLACEMENT */ sub_11378( g_U2842 );
    g_U2842 =  /* CREATEPLACEMENT */ sub_58651( -4072149, -40.15200000, 23.38200000, 5.90500000, 0.00000000, 0.00000000, 1.70000000, 1, 1, 1, 1119092736 );
    if (DOES_PLACEMENT_EXIST( g_U2842 ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U2842, ref g_U1816 );
    }
    return;
}

/* CREATEPLACEMENT */ void sub_58651(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a placement to exist: {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return Result;
}

/* P_CREATE_S_BUS_GG_M4_01 */ void sub_58964()
{
     /* WRITESCRIPTLOG */ sub_1099( "CO", "P_CREATE_S_BUS_GG_M4_01", 0 );
     /* P_CREATECOLLECTIBLESTRUCT */ sub_59102( ref g_U703, g_U760, 2138151038, 937196549, -41.62000000, -11.94000000, 1.05000000, 1.50000000, 0.00000000, 20.00000000, "Room_Garage" );
     /* P_CREATECOLLECTIBLE */ sub_59259( ref g_U703 );
    return;
}

/* P_CREATECOLLECTIBLESTRUCT */ void sub_59102(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_1099( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* P_CREATECOLLECTIBLE */ void sub_59259(int iParam0)
{
     /* WRITESCRIPTLOG */ sub_1099( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_59342( iParam0->_fU12 )) == 1)
        {
             /* WRITESCRIPTLOG */ sub_1099( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_1099( "CO", "has never been collected.", 0 );
        }
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_59342( iParam0->_fU12 )) == 0)
        {
             /* CLEANPLACEMENT */ sub_11378( iParam0->_fU0 );
            iParam0->_fU0 =  /* CREATEPLACEMENT */ sub_58651( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                     /* WRITESCRIPTLOG */ sub_1099( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_1099( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ int sub_59342(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

/* P_CREATE_CATWALK */ void sub_59798()
{
    int I;
    vector vVar3;
    vector vVar6;

     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_CREATE_CATWALK", 0 );
    g_U2784[0] = {-61.54202000, 6.49707800, 5.65253500};
    g_U2784[1] = {-58.52385000, 6.49707800, 5.65253500};
    g_U2784[2] = {-55.50568000, 6.49707900, 5.65253600};
    g_U2784[3] = {-52.48751000, 6.49707800, 5.65253500};
    g_U2784[4] = {-49.46930000, 6.49707800, 5.65253600};
    StrCopy( ref g_U2800[0], "p_bd_catwlk_aa", 32 );
    StrCopy( ref g_U2800[1], "p_bd_catwlk_ba", 32 );
    StrCopy( ref g_U2800[2], "p_bd_catwlk_ca", 32 );
    StrCopy( ref g_U2800[3], "p_bd_catwlk_da", 32 );
    StrCopy( ref g_U2800[4], "p_bd_catwlk_ea", 32 );
    for ( I = 0; I < 5; I++ )
    {
        if (I > 0)
        {
             /* CLEANOBJECT */ sub_11453( g_U2768[I] );
            g_U2768[I] =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2152[I], g_U2784[I], 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
            if (DOES_OBJECT_EXIST( g_U2768[I] ))
            {
                FREEZE_OBJECT_POSITION( g_U2768[I], 1 );
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2768[I], ref g_U1816 );
                if (I == 1)
                {
                    SET_OBJECT_INVINCIBLE( g_U2768[I], 1 );
                    SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( g_U2768[I], 1 );
                }
            }
        }
    }
    for ( I = 0; I < 9; I++ )
    {
         /* CLEANOBJECT */ sub_11453( g_U2774[I] );
        if (I < 4)
        {
            g_U2774[I] =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2158[I], g_U2784[1], 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
        }
        else if (I < 7)
        {
            g_U2774[I] =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2158[I], g_U2784[3], 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
        }
        else
        {
            g_U2774[I] =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2158[I], g_U2784[2], 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
        }
        if (DOES_OBJECT_EXIST( g_U2774[I] ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2774[I], ref g_U1816 );
        }
    }
    vVar3 = {-55.75000000, 8.58600000, 0.10000000};
    vVar6 = {0.00000000, 0.00000000, 0.00000000};
     /* CLEANOBJECT */ sub_11453( g_U2845 );
    g_U2845 =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2148, vVar3, vVar6, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U2845 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2845, ref g_U1816 );
        FREEZE_OBJECT_POSITION( g_U2845, 1 );
    }
    return;
}

/* P_CREATE_STAIRCASE */ void sub_60708()
{
     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_CREATE_STAIRCASE", 0 );
     /* CLEANOBJECT */ sub_11453( g_U2849 );
    g_U2849 =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2115, l_U407, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    if ((DOES_OBJECT_EXIST( g_U2849 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U2849, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2849, ref g_U1816 );
    }
     /* CLEANOBJECT */ sub_11453( g_U2847 );
    g_U2847 =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2126, l_U410, 180, 0.00000000, 0.00000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U2847 ))
    {
        FREEZE_OBJECT_POSITION( g_U2847, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2847, ref g_U1816 );
    }
     /* CLEANOBJECT */ sub_11453( g_U2848 );
    g_U2848 =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2126, l_U413, 180, 0.00000000, 0.00000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U2848 ))
    {
        FREEZE_OBJECT_POSITION( g_U2848, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2848, ref g_U1816 );
    }
    return;
}

/* P_CREATE_GARAGE_FORKLIFT */ void sub_61081()
{
     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_CREATE_GARAGE_FORKLIFT", 0 );
     /* CLEANOBJECT */ sub_11453( g_U2843 );
    g_U2843 =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2123, g_U2636, g_U2639, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U2843 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2843, ref g_U1816 );
        SET_OBJECT_PROOFS( g_U2843, 0, 0, 0, 0, 0 );
         /* P_UPDATE_FORKLIFT_COVER */ sub_35896( 0 );
    }
     /* CLEANOBJECT */ sub_11453( g_U2844 );
    g_U2844 =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2124, g_U2636, g_U2639, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U2844 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2844, ref g_U1816 );
        SET_OBJECT_PROOFS( g_U2844, 1, 1, 1, 1, 1 );
        CAMERA_CAN_TARGET_OBJECT( 1, g_U2844 );
        SET_OBJECT_TARGETTABLE( g_U2844, 1 );
        SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( g_U2844, 1 );
    }
    return;
}

/* P_CREATE_GARAGE_CLOSE_BUS */ void sub_61406()
{
    vector vVar2;
    vector vVar5;
    vector vVar8;
    vector vVar11;

     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_CREATE_GARAGE_CLOSE_BUS", 0 );
    g_U2642._fU48 = 0;
    g_U2642._fU52 = 0;
    g_U2642._fU140 = 0;
    g_U2642._fU144 = 0;
     /* P_CREATETRIGGERBOX */ sub_38017( ref g_U2642._fU56, "TRIG_UNDER_CLOSE_BUS", -49.02000000, -3.73000000, -1.07000000, 15.45000000, 4.30000000, 7.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    vVar2 = {-55.09000000, -0.81000000, 1.32000000};
    vVar5 = {0.00000000, 0.00000000, 0.00000000};
     /* CLEANOBJECT */ sub_11453( g_U2642._fU12 );
    g_U2642._fU12 =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2118, vVar2, vVar5, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U2642._fU12 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2642._fU12, ref g_U1816 );
        SET_OBJECT_TARGETTABLE( g_U2642._fU12, 1 );
        CAMERA_CAN_TARGET_OBJECT( 1, g_U2642._fU12 );
        SET_OBJECT_HEALTH( g_U2642._fU12, 50 );
        SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( g_U2642._fU12, 1 );
    }
    if (g_U2642._fU0 == 0)
    {
         /* CLEANOBJECT */ sub_11453( g_U2642._fU16 );
        g_U2642._fU16 =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2119, vVar2, vVar5, 0, 0, 1 );
        if (DOES_OBJECT_EXIST( g_U2642._fU16 ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2642._fU16, ref g_U1816 );
        }
    }
    vVar8 = {-43.44000000, -0.81000000, 1.32000000};
    vVar11 = {0.00000000, 0.00000000, 0.00000000};
     /* CLEANOBJECT */ sub_11453( g_U2642._fU20 );
    g_U2642._fU20 =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2118, vVar8, vVar11, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U2642._fU20 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2642._fU20, ref g_U1816 );
        SET_OBJECT_TARGETTABLE( g_U2642._fU20, 1 );
        CAMERA_CAN_TARGET_OBJECT( 1, g_U2642._fU20 );
        SET_OBJECT_HEALTH( g_U2642._fU20, 50 );
        SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( g_U2642._fU20, 1 );
    }
    if (g_U2642._fU0 == 0)
    {
         /* CLEANOBJECT */ sub_11453( g_U2642._fU24 );
        g_U2642._fU24 =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2119, vVar8, vVar11, 0, 0, 1 );
        if (DOES_OBJECT_EXIST( g_U2642._fU24 ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2642._fU24, ref g_U1816 );
        }
    }
     /* CLEANOBJECT */ sub_11453( g_U2642._fU4 );
    g_U2642._fU4 =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2120, l_U86, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U2642._fU4 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2642._fU4, ref g_U1816 );
        l_U394[0] = {5.94900000, 1.92300000, 2.25100000};
        l_U394[1] = {-6.73500000, 1.92300000, 2.25100000};
        l_U394[2] = {-6.73500000, -2.95100000, 2.25100000};
        l_U394[3] = {5.94900000, -2.95100000, 2.25100000};
         /* P_SETUP_PARTICLE_FX_ON_OBJECT */ sub_62410( ref l_U113[0], "BusDepot_Hydraulics_Smoke_S", g_U2642._fU4, l_U394[0], 0.00000000, 0.00000000, 0.00000000, -1, 1065353216 );
         /* P_SETUP_PARTICLE_FX_ON_OBJECT */ sub_62410( ref l_U113[1], "BusDepot_Hydraulics_Smoke_S", g_U2642._fU4, l_U394[1], 0.00000000, 0.00000000, 0.00000000, -1, 1065353216 );
         /* P_SETUP_PARTICLE_FX_ON_OBJECT */ sub_62410( ref l_U113[2], "BusDepot_Hydraulics_Smoke_S", g_U2642._fU4, l_U394[2], 0.00000000, 0.00000000, 0.00000000, -1, 1065353216 );
         /* P_SETUP_PARTICLE_FX_ON_OBJECT */ sub_62410( ref l_U113[3], "BusDepot_Hydraulics_Smoke_S", g_U2642._fU4, l_U394[3], 0.00000000, 0.00000000, 0.00000000, -1, 1065353216 );
        if (g_U2736._fU0 == 4)
        {
            PLAY_OBJECT_ANIM( g_U2642._fU4, "P_BD_BusCrs_Ab_H", ref g_U1976, 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U2642._fU4, "P_BD_BusCrs_Ab_H", ref g_U1976, 1.00000000 );
             /* CREATETIMER */ sub_6933( ref g_U2642._fU152, 150, 1, 0 );
             /* STARTTIMER */ sub_7083( ref g_U2642._fU152 );
        }
    }
    if (g_U2736._fU0 == 4)
    {
         /* P_CREATE_BUS_TIRES */ sub_63079( ref g_U2642, l_U86, 1 );
         /* P_CLOSE_BUS_COVER */ sub_34796( 1 );
        g_U2642._fU148 = 1;
    }
    else
    {
         /* P_CREATE_BUS_TIRES */ sub_63079( ref g_U2642, l_U86, 0 );
         /* P_CLOSE_BUS_COVER */ sub_34796( 0 );
        g_U2642._fU148 = 0;
    }
    return;
}

/* P_SETUP_PARTICLE_FX_ON_OBJECT */ void sub_62410(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9, unknown uParam10)
{
     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_SETUP_PARTICLE_FX_ON_OBJECT", "###" );
    if (iParam9 > 0)
    {
        iParam0->_fU128 = 1;
         /* CREATETIMER */ sub_6933( iParam0 + 0, iParam9, 1, 0 );
    }
    else
    {
        iParam0->_fU128 = 0;
    }
    StrCopy( ref iParam0->_fU36, uParam1, 32 );
    iParam0->_fU68 = uParam2;
    iParam0->_fU72 = -1;
    iParam0->_fU88 = {uParam6};
    iParam0->_fU124 = uParam10;
    iParam0->_fU132 = 0;
    iParam0->_fU76 = {uParam3};
    if ((DOES_OBJECT_EXIST( iParam0->_fU68 )) == 1)
    {
        iParam0->_fU100 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU68 )};
        iParam0->_fU112 = {iParam0->_fU100};
    }
    return;
}

/* P_CREATE_BUS_TIRES */ void sub_63079(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
     /* CLEANOBJECT */ sub_11453( iParam0->_fU8 );
    if (bParam4)
    {
        iParam0->_fU8 =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2122, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    }
    else
    {
        iParam0->_fU8 =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2121, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU8 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU8, ref g_U1816 );
        if (bParam4 == 1)
        {
            PLAY_OBJECT_ANIM( iParam0->_fU8, "P_BD_BusCrs_Ad_H", ref g_U1976, 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( iParam0->_fU8, "P_BD_BusCrs_Ad_H", ref g_U1976, 1.00000000 );
        }
    }
    return;
}

/* P_CREATE_GARAGE_FAR_BUS */ void sub_63417()
{
    vector vVar2;
    vector vVar5;
    vector vVar8;
    vector vVar11;

     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_CREATE_GARAGE_FAR_BUS", 0 );
    g_U2689._fU48 = 0;
    g_U2689._fU52 = 0;
    g_U2689._fU140 = 0;
    g_U2689._fU144 = 0;
     /* P_CREATETRIGGERBOX */ sub_38017( ref g_U2689._fU56, "TRIG_UNDER_FAR_BUS", -63.07000000, 22.10000000, -1.07000000, 15.45000000, 4.30000000, 7.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    vVar2 = {-69.17000000, 19.11000000, 1.32000000};
    vVar5 = {0.00000000, 0.00000000, -180.00000000};
     /* CLEANOBJECT */ sub_11453( g_U2689._fU12 );
    g_U2689._fU12 =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2118, vVar2, vVar5, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U2689._fU12 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2689._fU12, ref g_U1816 );
        SET_OBJECT_TARGETTABLE( g_U2689._fU12, 1 );
        CAMERA_CAN_TARGET_OBJECT( 1, g_U2689._fU12 );
        SET_OBJECT_HEALTH( g_U2689._fU12, 50 );
        SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( g_U2689._fU12, 1 );
    }
    if (g_U2689._fU0 == 0)
    {
         /* CLEANOBJECT */ sub_11453( g_U2689._fU16 );
        g_U2689._fU16 =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2119, vVar2, vVar5, 0, 0, 1 );
        if (DOES_OBJECT_EXIST( g_U2689._fU16 ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2689._fU16, ref g_U1816 );
        }
    }
    vVar8 = {-57.53000000, 19.11000000, 1.32000000};
    vVar11 = {0.00000000, 0.00000000, -180.00000000};
     /* CLEANOBJECT */ sub_11453( g_U2689._fU20 );
    g_U2689._fU20 =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2118, vVar8, vVar11, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U2689._fU20 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2689._fU20, ref g_U1816 );
        SET_OBJECT_TARGETTABLE( g_U2689._fU20, 1 );
        CAMERA_CAN_TARGET_OBJECT( 1, g_U2689._fU20 );
        SET_OBJECT_HEALTH( g_U2689._fU20, 50 );
        SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( g_U2689._fU20, 1 );
    }
    if (g_U2689._fU0 == 0)
    {
         /* CLEANOBJECT */ sub_11453( g_U2689._fU24 );
        g_U2689._fU24 =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2119, vVar8, vVar11, 0, 0, 1 );
        if (DOES_OBJECT_EXIST( g_U2689._fU24 ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2689._fU24, ref g_U1816 );
        }
    }
     /* CLEANOBJECT */ sub_11453( g_U2689._fU4 );
    g_U2689._fU4 =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2120, l_U89, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U2689._fU4 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2689._fU4, ref g_U1816 );
         /* P_SETUP_PARTICLE_FX_ON_OBJECT */ sub_62410( ref l_U113[4], "BusDepot_Hydraulics_Smoke_S", g_U2689._fU4, l_U394[0], 0.00000000, 0.00000000, 0.00000000, -1, 1065353216 );
         /* P_SETUP_PARTICLE_FX_ON_OBJECT */ sub_62410( ref l_U113[5], "BusDepot_Hydraulics_Smoke_S", g_U2689._fU4, l_U394[1], 0.00000000, 0.00000000, 0.00000000, -1, 1065353216 );
         /* P_SETUP_PARTICLE_FX_ON_OBJECT */ sub_62410( ref l_U113[6], "BusDepot_Hydraulics_Smoke_S", g_U2689._fU4, l_U394[2], 0.00000000, 0.00000000, 0.00000000, -1, 1065353216 );
         /* P_SETUP_PARTICLE_FX_ON_OBJECT */ sub_62410( ref l_U113[7], "BusDepot_Hydraulics_Smoke_S", g_U2689._fU4, l_U394[3], 0.00000000, 0.00000000, 0.00000000, -1, 1065353216 );
        if (g_U2736._fU4 == 4)
        {
            PLAY_OBJECT_ANIM( g_U2689._fU4, "P_BD_BusCrs_Ab_H", ref g_U1976, 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U2689._fU4, "P_BD_BusCrs_Ab_H", ref g_U1976, 1.00000000 );
             /* CREATETIMER */ sub_6933( ref g_U2689._fU152, 150, 1, 0 );
             /* STARTTIMER */ sub_7083( ref g_U2689._fU152 );
        }
    }
    if (g_U2736._fU4 == 4)
    {
         /* P_CREATE_BUS_TIRES */ sub_63079( ref g_U2689, l_U89, 1 );
         /* P_FAR_BUS_COVER */ sub_35319( 1 );
        g_U2689._fU148 = 1;
    }
    else
    {
         /* P_CREATE_BUS_TIRES */ sub_63079( ref g_U2689, l_U89, 0 );
         /* P_FAR_BUS_COVER */ sub_35319( 0 );
        g_U2689._fU148 = 0;
    }
    return;
}

/* F_HANDLE_SPAWN_CATWALK_ENEMIES */ int sub_64968()
{
    int iVar2;
    char[32] cVar3;

    iVar2 = l_U773;
     /* CLEANPED */ sub_3790( l_U770[iVar2] );
    l_U770[iVar2] =  /* CREATEPED */ sub_3877( ref l_U743[iVar2] );
     /* P_SET_PED_INACTIVE */ sub_65064( l_U770[iVar2], 1 );
    if (((IS_PED_DEAD( l_U770[iVar2] )) == 0) AND ((DOES_PED_EXIST( l_U770[iVar2] )) == 1))
    {
        StrCopy( ref cVar3, "piCatwalkEnemies", 32 );
        ConcatString(ref cVar3, " ", 32);
        ConcatString(ref cVar3, iVar2, 32);
        SET_PED_NAME_DEBUG( l_U770[iVar2], ref cVar3 );
        SET_ROOM_FOR_PED_BY_NAME( l_U770[iVar2], ref g_U1816 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U770[iVar2], 1 );
        SET_PED_RELATIONSHIP( l_U770[iVar2], 1, 0 );
        SET_PED_RELATIONSHIP( l_U770[iVar2], 2, 2 );
        SET_PED_AI_TEMPLATE( l_U770[iVar2], ref g_U2088 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( l_U770[iVar2], 0 );
        SET_PED_PATH_CAN_USE_CLIMBOVERS( l_U770[iVar2], 0 );
        SET_PED_AS_ONE_SHOT_KILL( l_U770[iVar2], 1 );
        SET_PED_ALLOWED_TO_KNEEL_AND_FIRE( l_U770[iVar2], 0 );
        if (iVar2 == 0)
        {
             /* F_GIVEPEDWEAPON */ sub_15327( l_U770[iVar2], g_U2857, 25000, 0, 0 );
        }
        else if (iVar2 == 1)
        {
             /* F_GIVEPEDWEAPON */ sub_15327( l_U770[iVar2], g_U2857, 25000, 0, 0 );
        }
        l_U773++;
    }
    if (l_U773 == l_U770)
    {
        return 1;
    }
    return 0;
}

/* P_SET_PED_INACTIVE */ void sub_65064(unknown uParam0, boolean bParam1)
{
     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_SET_PED_INACTIVE", 0 );
    if (bParam1)
    {
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( uParam0, 1 );
            SET_PED_VISIBLE( uParam0, 0 );
            SET_PED_INVINCIBLE( uParam0, 1 );
            FREEZE_PED_POSITION( uParam0, 1 );
            SET_PED_COLLISION( uParam0, 0 );
        }
    }
    else if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_INVINCIBLE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
    }
    return;
}

/* P_SETUP_GIOVANNA */ void sub_65668()
{
     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_SETUP_GIOVANNA", 0 );
    if ((((IS_PED_DEAD( g_U2595 )) == 1) AND ((DOES_PED_EXIST( g_U2595 )) == 1)) || ((DOES_PED_EXIST( g_U2595 )) == 0))
    {
         /* CLEANPED */ sub_3790( g_U2595 );
        g_U2595 =  /* CREATEPED */ sub_3877( ref l_U730 );
         /* P_SETUP_GIO_ATTRIBUTES */ sub_65800();
         /* P_SET_PED_INACTIVE */ sub_65064( g_U2595, 0 );
        SET_ROOM_FOR_PED_BY_NAME( g_U2595, ref g_U1816 );
    }
    return;
}

/* P_SETUP_GIO_ATTRIBUTES */ void sub_65800()
{
     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_SETUP_GIO_ATTRIBUTES", 0 );
    if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
    {
        SET_PED_NAME_DEBUG( g_U2595, "piGiovanna" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2595, 1 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( g_U2595, 0 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2595, 1 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U2595, 1 );
        SET_PED_CAN_PUSH_PLAYER( g_U2595, 1 );
        SET_PED_GORE_FROM_PLAYER( g_U2595, 1 );
        SET_PED_GORE_FROM_NPC( g_U2595, 0 );
        SET_PED_CAN_BE_TARGETTED( g_U2595, 0 );
        SET_PED_AS_ONE_SHOT_KILL( g_U2595, 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( g_U2595, 1 );
        SET_BULLET_CAM_PREF( g_U2595, "QUICKCUT_FAILSAFE_01", "QUICKCUT_FAILSAFE_01", "QUICKCUT_FAILSAFE_01", "QUICKCUT_FAILSAFE_01", 1, 0, 0, 0, 0, 0, 0, 0 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)
        {
            SET_PED_PRIMARY_LOOKAT( g_U2595,  /* PLAYER_PED_ID */ sub_1858() );
            SET_PED_DEFAULT_AIM_AT_PED( g_U2595,  /* PLAYER_PED_ID */ sub_1858() );
        }
    }
    return;
}

/* F_HANDLE_SPAWN_POST_CATWALK_ENEMIES */ int sub_66417()
{
    int iVar2;
    char[32] cVar3;

    iVar2 = l_U820;
     /* CLEANPED */ sub_3790( g_U2760[iVar2] );
    g_U2760[iVar2] =  /* CREATEPED */ sub_3877( ref l_U780[iVar2] );
     /* P_QUICK_ADD_PED_TO_GROUP */ sub_66521( g_U2760[iVar2], ref l_U774 );
    if (((IS_PED_DEAD( g_U2760[iVar2] )) == 0) AND ((DOES_PED_EXIST( g_U2760[iVar2] )) == 1))
    {
        StrCopy( ref cVar3, "piPostCatwalkEnemies", 32 );
        ConcatString(ref cVar3, " ", 32);
        ConcatString(ref cVar3, iVar2, 32);
        SET_PED_NAME_DEBUG( g_U2760[iVar2], ref cVar3 );
        SET_ROOM_FOR_PED_BY_NAME( g_U2760[iVar2], ref g_U1808 );
        FREEZE_PED_POSITION( g_U2760[iVar2], 1 );
        SET_PED_FREEZE_PROCESSING( g_U2760[iVar2], 1 );
        SET_PED_VISIBLE( g_U2760[iVar2], 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2760[iVar2], 1 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( g_U2760[iVar2], 0 );
        SET_PED_PATH_CAN_USE_CLIMBOVERS( g_U2760[iVar2], 0 );
        SET_PED_AI_TEMPLATE( g_U2760[iVar2], ref g_U2088 );
        if (iVar2 == 0)
        {
             /* F_GIVEPEDWEAPON */ sub_15327( g_U2760[iVar2], g_U2857, 25000, 0, 0 );
        }
        else if (iVar2 == 1)
        {
             /* F_GIVEPEDWEAPON */ sub_15327( g_U2760[iVar2], g_U2857, 25000, 0, 0 );
             /* F_GIVEPEDWEAPONTOHOLSTER */ sub_14576( g_U2738[iVar2], g_U2854, 0, 25000, 0 );
        }
        else if (iVar2 == 2)
        {
             /* F_GIVEPEDWEAPON */ sub_15327( g_U2760[iVar2], g_U2855, 25000, 0, 0 );
        };;;
        l_U820++;
    }
    if (l_U820 == g_U2760)
    {
        return 1;
    }
    return 0;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_66521(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_4176( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_66691( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_66691( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* P_SETUP_AI_GROUP */ void sub_66691(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* F_HANDLE_CATWALK_CUTSCENE */ int sub_67870()
{
    unknown uVar2;
    unknown uVar3;
    int iVar4;
    int iVar5;
    int iVar6;
    int iVar7;
    unknown uVar8;

    iVar5 = 11263;
    iVar6 = 12213;
    iVar7 = 12613;
    switch (l_U541)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCatwalkCutsceneState = CUTSCENE_REQUEST_ASSETS", 0 );
        if (((CUTSCENE_NAMED_IS_LOADING( "mid_07_bus_concat" )) == 0) AND ((CUTSCENE_IS_LOADED( "mid_07_bus_concat" )) == 0))
        {
            PRE_STREAM_SEAMLESS_CUTSCENE( "mid_07_bus_concat" );
        }
        l_U541 = 2;
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCatwalkCutsceneState = CUTSCENE_LOAD_ASSETS", 0 );
        break;
        case 2:
        if ((( /* F_STREAMREQ_SCRIPT_STREAM_IS_LOADED */ sub_54415( ref g_U1704 )) == 1) AND ((( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_52804( ref g_U1272 )) == 1) AND ((CUTSCENE_IS_LOADED( "mid_07_bus_concat" )) == 1)))
        {
            l_U541 = 3;
             /* WRITESCRIPTLOG */ sub_1099( "SP", "eCatwalkCutsceneState = CUTSCENE_WAIT_FOR_HANDOFF", 0 );
            break;
        }
        return 0;
        case 3:
        if (g_U2867 == 1)
        {
            l_U541 = 4;
             /* WRITESCRIPTLOG */ sub_1099( "SP", "eCatwalkCutsceneState = CUTSCENE_START", 0 );
            break;
        }
        return 0;
        case 4:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCatwalkCutsceneState = CUTSCENE_START", 0 );
        if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
        {
            PED_SET_ACTION_INTENTION( g_U2595, 56, 1000, 0.00000000, 0.00000000, 0.00000000 );
        }
        AUDIO_MUSIC_FORCE_TRACK( "BUSDEPOT_ACTION_SONG_03", "BUSDEPOT_03_6", "", 0.00000000, 10000, 7000, -1082130432, 0 );
        ISEQ_UNREGISTER_ENTITY( 2072811238, "gio" );
        ISEQ_TERMINATE( 2072811238 );
         /* P_STREAMREQ_ISEQ_REMOVE */ sub_9969( 2072811238, ref g_U1272 );
         /* P_SETUP_GIOVANNA */ sub_65668();
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)
        {
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1858(), 1 );
            SET_PED_PROOFS(  /* PLAYER_PED_ID */ sub_1858(), 1, 1, 1, 1, 1 );
            CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_1858(), l_U922, l_U925 );
        }
        if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2595, "Giov_Bus", 0 );
            CUTSCENE_REGISTER_PED_TELEPORT( g_U2595, l_U910, l_U913 );
        }
        if (((IS_PED_DEAD( l_U770[0] )) == 0) AND ((DOES_PED_EXIST( l_U770[0] )) == 1))
        {
             /* P_SET_PED_INACTIVE */ sub_65064( l_U770[0], 0 );
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U770[0], "M_Crac_Sold_JY^1", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U770[0], 0, 0 ), "W_AR_FAL_Aa_H^1", 0 );
            CUTSCENE_REGISTER_PED_TELEPORT( l_U770[0], l_U914, l_U917 );
        }
        if (((IS_PED_DEAD( l_U770[1] )) == 0) AND ((DOES_PED_EXIST( l_U770[1] )) == 1))
        {
             /* P_SET_PED_INACTIVE */ sub_65064( l_U770[1], 0 );
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U770[1], "M_Crac_Sold_JY", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U770[1], 0, 0 ), "W_AR_FAL_Aa_H", 0 );
            CUTSCENE_REGISTER_PED_TELEPORT( l_U770[1], l_U918, l_U921 );
        }
        ISEQ_REGISTER_ENTITY( -1241350080, "mid07_enemy1", l_U770[0], 0 );
        ISEQ_REGISTER_ENTITY( -1241350080, "mid07_enemy2", l_U770[1], 0 );
        CUTSCENE_REGISTER_ISEQ( -1241350080 );
        ISEQ_REGISTER_ENTITY( -1571917792, "player",  /* PLAYER_PED_ID */ sub_1858(), 0 );
        CUTSCENE_REGISTER_ISEQ( -1571917792 );
        ISEQ_REGISTER_ENTITY( -949706482, "gio", g_U2595, 0 );
        CUTSCENE_REGISTER_ISEQ( -949706482 );
        START_SEAMLESS_CUTSCENE();
        l_U541 = 5;
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCatwalkCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        break;
        case 5:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCatwalkCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
         /* P_PLAYER_HOLSTER_WEAPONS */ sub_69437( ref l_U822, 1, 1 );
        uVar8 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_70497();
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1858(), uVar8, 0, 1 );
        }
         /* NIS_PRE_SETUP */ sub_3442( 1, 0, 0, 1 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        DO_SCREEN_FADE_IN( 0 );
        l_U541 = 6;
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCatwalkCutsceneState = CUTSCENE_PLAYING", 0 );
        break;
        case 6:
        if (HAS_CUTSCENE_FINISHED() == 1)
        {
            if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1896() )) == 0))
            {
                SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1858(), 0 );
                SET_PED_PROOFS(  /* PLAYER_PED_ID */ sub_1858(), 0, 0, 0, 0, 0 );
            }
            l_U541 = 0;
             /* WRITESCRIPTLOG */ sub_1099( "SP", "eCatwalkCutsceneState = CUTSCENE_IDLE", 0 );
            return 1;
        }
        else
        {
            uVar2 = GET_CUTSCENE_SECTION_PLAYING();
            uVar3 = GET_CUTSCENE_TIME();
            iVar4 = GET_CUTSCENE_TIME_MS();
            PRINTSTRING( "[SP] SECTION: " );
            PRINTINT( uVar2 );
            PRINTSTRING( " Time: " );
            PRINTINT( uVar3 );
            PRINTSTRING( " Time MS: " );
            PRINTINT( iVar4 );
            PRINTNL();
            if (l_U849 == 0)
            {
                if (iVar4 >= iVar5)
                {
                     /* P_BREAK_CATWALK01 */ sub_71152();
                    l_U849 = 1;
                }
            }
            if (l_U850 == 0)
            {
                if (iVar4 >= iVar6)
                {
                     /* P_BREAK_CATWALK02 */ sub_71476();
                    l_U850 = 1;
                }
            }
            if (l_U851 == 0)
            {
                if (iVar4 >= iVar7)
                {
                     /* P_BREAK_CATWALK03 */ sub_71862();
                    l_U851 = 1;
                }
            }
        }
        break;
    }
    return 0;
}

/* P_PLAYER_HOLSTER_WEAPONS */ void sub_69437(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

     /* RESET_WEAPON_CONFIG */ sub_69476( iParam0 );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1858(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_69677( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if (( /* IS_WEAPON_TWO_HANDED */ sub_20924( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1858(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1858(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1858(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1858(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1858(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1858(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1858(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1858(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1858(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if (( /* IS_WEAPON_TWO_HANDED */ sub_20924( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1858(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1858(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1858(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

/* RESET_WEAPON_CONFIG */ void sub_69476(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

/* IS_WEAPON_SINGLE_HANDED */ int sub_69677(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ int sub_70497()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1858(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_69677( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1858(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1858(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1858(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

/* P_BREAK_CATWALK01 */ void sub_71152()
{
     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_BREAK_CATWALK01", 0 );
    SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -57.25000000, 0.76000000, 8.20000000, -56.24000000, 8.00000000, 5.95000000, 0, 1, g_U2857, 0 );
    if ((DOES_OBJECT_EXIST( g_U2768[2] )) == 1)
    {
        PLAY_OBJECT_ANIM( g_U2768[2], ref g_U2800[2], ref g_U1888, 0.00000000, 0, 1 );
    }
    if ((DOES_OBJECT_EXIST( g_U2774[7] )) == 1)
    {
        PLAY_OBJECT_ANIM( g_U2774[7], "CA_ROPE_02", ref g_U1888, 0.00000000, 0, 1 );
    }
    if ((DOES_OBJECT_EXIST( g_U2774[8] )) == 1)
    {
        PLAY_OBJECT_ANIM( g_U2774[8], "CA_ROPE_03", ref g_U1888, 0.00000000, 0, 1 );
    }
    return;
}

/* P_BREAK_CATWALK02 */ void sub_71476()
{
     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_BREAK_CATWALK02", 0 );
    SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -57.25000000, 0.76000000, 8.20000000, -51.66000000, 8.01000000, 5.95000000, 0, 1, g_U2857, 0 );
    if ((DOES_OBJECT_EXIST( g_U2768[3] )) == 1)
    {
        PLAY_OBJECT_ANIM( g_U2768[3], ref g_U2800[3], ref g_U1888, 0.00000000, 0, 1 );
    }
    if ((DOES_OBJECT_EXIST( g_U2774[4] )) == 1)
    {
        PLAY_OBJECT_ANIM( g_U2774[4], "DA_WIRE_01", ref g_U1888, 0.00000000, 0, 1 );
    }
    if ((DOES_OBJECT_EXIST( g_U2774[5] )) == 1)
    {
        PLAY_OBJECT_ANIM( g_U2774[5], "DA_WIRE_02", ref g_U1888, 0.00000000, 0, 1 );
    }
    if ((DOES_OBJECT_EXIST( g_U2774[6] )) == 1)
    {
        PLAY_OBJECT_ANIM( g_U2774[6], "DA_WIRE_03", ref g_U1888, 0.00000000, 0, 1 );
    }
    return;
}

/* P_BREAK_CATWALK03 */ void sub_71862()
{
     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_BREAK_CATWALK03", 0 );
    SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -57.25000000, 0.76000000, 8.20000000, -50.24000000, 4.97000000, 5.95000000, 0, 1, g_U2857, 0 );
    if ((DOES_OBJECT_EXIST( g_U2768[4] )) == 1)
    {
        PLAY_OBJECT_ANIM( g_U2768[4], ref g_U2800[4], ref g_U1888, 0.00000000, 0, 1 );
    }
    return;
}

/* F_HANDLE_CATWALK_BLENDOUT */ int sub_72140()
{
    unknown uVar2;
    unknown uVar3;
    vector vVar4;
    vector vVar7;
    int I;

    vVar4 = {-57.61000000, 6.75000000, 6.05000000};
    vVar7 = {-58.82000000, 6.05000000, 6.14000000};
    switch (l_U543)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCatwalkBlendoutState = BLENDOUT_SETUP", 0 );
        if (g_U764 == 6)
        {
            if ((ISEQ_QUERY_STATE( -1241350080, 3 )) == 0)
            {
                 /* P_SET_PED_INACTIVE */ sub_65064( l_U770[0], 0 );
                 /* P_SET_PED_INACTIVE */ sub_65064( l_U770[1], 0 );
                 /* TELEPORTPED */ sub_22262( l_U770[0], l_U914, l_U917 );
                 /* TELEPORTPED */ sub_22262( l_U770[1], l_U918, l_U921 );
                ISEQ_REGISTER_ENTITY( -1241350080, "mid07_enemy1", l_U770[0], 0 );
                ISEQ_REGISTER_ENTITY( -1241350080, "mid07_enemy2", l_U770[1], 0 );
                ISEQ_START( -1241350080 );
            }
            if ((ISEQ_QUERY_STATE( -1571917792, 3 )) == 0)
            {
                 /* TELEPORTPED */ sub_22262(  /* PLAYER_PED_ID */ sub_1858(), l_U922, l_U925 );
                ISEQ_REGISTER_ENTITY( -1571917792, "player",  /* PLAYER_PED_ID */ sub_1858(), 0 );
                ISEQ_START( -1571917792 );
            }
            if ((ISEQ_QUERY_STATE( -949706482, 3 )) == 0)
            {
                if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
                {
                     /* TELEPORTPED */ sub_22262( g_U2595, l_U910, l_U913 );
                    ISEQ_REGISTER_ENTITY( -949706482, "gio", g_U2595, 0 );
                    ISEQ_START( -949706482 );
                }
            }
        }
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U942, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U943, 1065353216, 0 );
        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1896() )) == 0))
        {
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1896(), 1, 0 );
        }
         /* P_SETUP_CATWALK_FOR_BLENDOUT */ sub_72788();
        CAMERA_PLAY_ANIMATED( "LEVEL_S_BUS_CP_04", "B_OUT_MID_07_BUS_MAX_CAM", 1, l_U926, l_U929, 0, 0 );
        AUDIO_MUSIC_FORCE_TRACK( "BUSDEPOT_ACTION_SONG_03", "BUSDEPOT_03_6", "", 0.00000000, 2000, 5000, -1082130432, 0 );
        l_U543 = 4;
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCatwalkBlendoutState = BLENDOUT_FIRST_FRAME", 0 );
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCatwalkBlendoutState = BLENDOUT_FIRST_FRAME", 0 );
        DO_SCREEN_FADE_IN( 0 );
        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1896() )) == 0))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1896(), 0, 512 );
        }
        DISPLAY_HUD( 0 );
        for ( I = 0; I < l_U770; I++ )
        {
            if (((IS_PED_DEAD( g_U2595 )) == 0) AND (((IS_PED_DEAD( l_U770[I] )) == 0) AND ((DOES_PED_EXIST( l_U770[I] )) == 1)))
            {
                CLEAR_PED_TASKS( l_U770[I] );
                RELOAD_PED_WEAPONS( l_U770[I] );
                SET_PED_CONSUMING_AMMO( l_U770[I], 0 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U770[I], 1 );
                SET_PED_RELATIONSHIP( l_U770[I], 2, 0 );
                if (I == 0)
                {
                    OPEN_SEQUENCE_TASK( ref uVar2 );
                    TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, vVar4, g_U2595, 2, 0, 0.65000000, 4, 0, 0 );
                    TASK_AIM_GUN_AT_PED( 0, g_U2595, 1500, 0 );
                    TASK_SHOOT_AT_COORD( 0, (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ))) + (vector( 1.00000000, 0.00000000, 0.00000000)), 750, 0, 0, 0 );
                    TASK_SHOOT_AT_PED( 0, g_U2595, -1, 0, 0, 0, 0 );
                    CLOSE_SEQUENCE_TASK( uVar2 );
                    TASK_PERFORM_SEQUENCE( l_U770[I], uVar2 );
                    CLEAR_SEQUENCE_TASK( uVar2 );
                }
                else
                {
                    OPEN_SEQUENCE_TASK( ref uVar3 );
                    TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, vVar7, g_U2595, 2, 0, 0.65000000, 4, 0, 0 );
                    TASK_AIM_GUN_AT_PED( 0, g_U2595, 1500, 0 );
                    TASK_SHOOT_AT_COORD( 0, (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ))) + (vector( 0.00000000, 0.00000000, -1.00000000)), 750, 0, 0, 0 );
                    TASK_SHOOT_AT_PED( 0, g_U2595, -1, 0, 0, 0, 0 );
                    CLOSE_SEQUENCE_TASK( uVar3 );
                    TASK_PERFORM_SEQUENCE( l_U770[I], uVar3 );
                    CLEAR_SEQUENCE_TASK( uVar3 );
                }
            }
        }
        if ((l_U546._fU0 == 0) || (g_U764 < 6))
        {
            g_U764 = 6;
             /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_74489( ref l_U546, g_U764,  /* PLAYER_PED_ID */ sub_1858(), g_U2339[6], g_U2466[6], g_U2509[6], g_U2552[6], 0 );
        }
         /* P_SAVE_BUSSES_STATE */ sub_79087();
        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_24964( ref l_U1077 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 0,  /* PLAYER_PED_ID */ sub_1858(), "MAX", ref l_U1077, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 1, g_U2595, "GIOVANNA", ref l_U1077, 2, 0 );
             /* PLAY_SINGLE_SPEECH_FROM_LINE */ sub_79359( "SBUS_RGGB", 2, 1, ref l_U1077, 7, 1 );
        }
        l_U543 = 5;
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCatwalkBlendoutState = BLENDOUT_PLAYING", 0 );
        break;
        case 5:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eCatwalkBlendoutState = BLENDOUT_PLAYING", 0 );
        if (l_U930 == 0)
        {
            if (IS_ANIMATED_CAMERA_PLAYING() == 1)
            {
                if (CAMERA_ANIMATED_CURRENT_TIME() >= l_U931)
                {
                    SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1896(), 1, 0 );
                    SIMULATE_PLAYER_INPUT_GAIT( GET_PLAYER_ID(), 3, l_U944, l_U945 );
                    SET_CAM_VIEW_MODE( 1 );
                    SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U942, 1065353216, 0 );
                    SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U943, 1065353216, 0 );
                    CAMERA_ANIMATED_STOP( l_U932, 1 );
                     /* CREATETIMER */ sub_6933( ref l_U933, l_U932, 1, 0 );
                     /* STARTTIMER */ sub_7083( ref l_U933 );
                    l_U930 = 1;
                }
            }
        }
        if (( /* ISTIMERDONE */ sub_7296( ref l_U933 )) == 1)
        {
             /* NIS_POST_SETUP */ sub_5727( 1, 1 );
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            ENABLE_MPM( 1 );
            ENABLE_ALL_ADRENALINE( 0 );
            DISPLAY_HUD( 1 );
            SET_CROSSHAIR_PULSE();
            if (GET_ADRENALINE_AMT() < 0.10000000)
            {
                SET_ADRENALINE_AMT( 0.10000000 );
            }
            SET_PED_CONSUMING_AMMO(  /* PLAYER_PED_ID */ sub_1858(), 0 );
            ACTIVATE_BULLET_TIME( 0, 1065353216, 1 );
            if ((DOES_OBJECT_EXIST( g_U2768[1] )) == 1)
            {
                SET_OBJECT_INVINCIBLE( g_U2768[1], 0 );
                SET_OBJECT_TARGETTABLE( g_U2768[1], 1 );
                CAMERA_CAN_TARGET_OBJECT( 1, g_U2768[1] );
                SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( g_U2768[1], 1 );
            }
            l_U543 = 0;
             /* WRITESCRIPTLOG */ sub_1099( "SP", "eCatwalkBlendoutState = BLENDOUT_IDLE", 0 );
            return 1;
        }
        break;
    }
    return 0;
}

/* P_SETUP_CATWALK_FOR_BLENDOUT */ void sub_72788()
{
    float fVar2;
    int I;

     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_SETUP_CATWALK_FOR_BLENDOUT", 0 );
    fVar2 = 0.25000000;
    for ( I = 0; I < 5; I++ )
    {
        if ((DOES_OBJECT_EXIST( g_U2768[I] )) == 1)
        {
            if ((I < 4) AND (I > 1))
            {
                PLAY_OBJECT_ANIM( g_U2768[I], ref g_U2800[I], ref g_U1888, 0.00000000, 0, 1 );
                SET_OBJECT_ANIM_CURRENT_TIME( g_U2768[I], ref g_U2800[I], ref g_U1888, 1.00000000 );
            }
            else if (I == 4)
            {
                PLAY_OBJECT_ANIM( g_U2768[I], ref g_U2800[I], ref g_U1888, 0.00000000, 0, 1 );
                SET_OBJECT_ANIM_CURRENT_TIME( g_U2768[I], ref g_U2800[I], ref g_U1888, fVar2 );
            }
        }
    }
    if ((DOES_OBJECT_EXIST( g_U2774[4] )) == 1)
    {
        PLAY_OBJECT_ANIM( g_U2774[4], "DA_WIRE_01", ref g_U1888, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U2774[4], "DA_WIRE_01", ref g_U1888, 1.00000000 );
    }
    if ((DOES_OBJECT_EXIST( g_U2774[5] )) == 1)
    {
        PLAY_OBJECT_ANIM( g_U2774[5], "DA_WIRE_02", ref g_U1888, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U2774[5], "DA_WIRE_02", ref g_U1888, 1.00000000 );
    }
    if ((DOES_OBJECT_EXIST( g_U2774[6] )) == 1)
    {
        PLAY_OBJECT_ANIM( g_U2774[6], "DA_WIRE_03", ref g_U1888, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U2774[6], "DA_WIRE_03", ref g_U1888, 1.00000000 );
    }
    if ((DOES_OBJECT_EXIST( g_U2774[7] )) == 1)
    {
        PLAY_OBJECT_ANIM( g_U2774[7], "CA_ROPE_02", ref g_U1888, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U2774[7], "CA_ROPE_02", ref g_U1888, 1.00000000 );
    }
    if ((DOES_OBJECT_EXIST( g_U2774[8] )) == 1)
    {
        PLAY_OBJECT_ANIM( g_U2774[8], "CA_ROPE_03", ref g_U1888, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U2774[8], "CA_ROPE_03", ref g_U1888, 1.00000000 );
    }
    return;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_74489(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_1099( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_1099( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_16101( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_74780( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_75257( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_75257( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_75517( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_75257( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_75517( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_75517( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_75257( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_75517( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_75517( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_75517( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_75257( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_75517( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_75517( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_75517( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_75517( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_77097( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_1099( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_74780(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_13160( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_1099( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_1099( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_75257(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_75517(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_77097(int iParam0)
{
     /* WRITE_STRING */ sub_4176( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_77185( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_77262( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_77262( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_77262( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_77431( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_77431( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_77431( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_77431( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_77431( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_77431( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_77431( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_77431( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_77431( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_77431( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_77431( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_77262( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_77431( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_77431( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_77431( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_77262( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_78132( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_77431( iParam0->_fU52 );
     /* WRITE_STRING */ sub_4176( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_77431( iParam0->_fU96 );
     /* WRITE_STRING */ sub_4176( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_77431( iParam0->_fU100 );
     /* WRITE_STRING */ sub_4176( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_77431( iParam0->_fU104 );
     /* WRITE_STRING */ sub_4176( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_77431( iParam0->_fU108 );
     /* WRITE_STRING */ sub_4176( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_77431( iParam0->_fU112 );
     /* WRITE_STRING */ sub_4176( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_77431( iParam0->_fU116 );
     /* WRITE_STRING */ sub_4176( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_77431( iParam0->_fU120 );
     /* WRITE_STRING */ sub_4176( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_77431( iParam0->_fU124 );
     /* WRITE_STRING */ sub_4176( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_77431( iParam0->_fU128 );
     /* WRITE_STRING */ sub_4176( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_77431( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_77431( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_77431( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_77185(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_77262(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_77431(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_78132(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* P_SAVE_BUSSES_STATE */ void sub_79087()
{
     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_SAVE_BUSSES_STATE", 0 );
    if (g_U2642._fU0 == 4)
    {
        g_U2736._fU0 = 4;
    }
    else
    {
        g_U2736._fU0 = 0;
    }
    if (g_U2689._fU0 == 4)
    {
        g_U2736._fU4 = 4;
    }
    else
    {
        g_U2736._fU4 = 0;
    }
    return;
}

/* PLAY_SINGLE_SPEECH_FROM_LINE */ void sub_79359(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_LINE_FROM_BLOCK */ sub_79418( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3, uParam4, uParam5 );
}

/* PLAY_SINGLE_SPEECH_FROM_LINE_FROM_BLOCK */ void sub_79418(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    char[16] cVar9;
    char[12] cVar13;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;

    StrCopy( ref cVar9, uParam1, 16 );
    array(ref cVar13, 2);
    StrCopy( ref cVar13[0], uParam0, 16 );
    StrCopy( ref cVar13[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_25478( ref cVar13, uParam4, uParam5, 0, 1, uParam3, uParam2, ref cVar9, uParam6 );
}

/* P_START_SP_CHALLENGES_CATWALK */ void sub_80349()
{
     /* WRITESCRIPTLOG */ sub_1099( "CCB", "P_START_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_1099( "CCB", "Starting the Bus_Depot_Garage_Catwalk context...", 0 );
    START_CONTEXT( "Bus_Depot_Garage_Catwalk" );
    return;
}

/* P_HANDLE_VIG_08A */ void sub_80645()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    float fVar6;

    if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
    {
        if (( /* F_ISPEDINTRIGGERBOX */ sub_19066( g_U2595, l_U583 )) == 1)
        {
            if ((ISEQ_QUERY_STATE( -949706482, 3 )) == 1)
            {
                if ((HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 12.00000000, ref iVar2 )) == 1)
                {
                    uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_BULLET_IMPACT_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 8.00000000, ref iVar2 )};
                    fVar6 = GET_DISTANCE_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), uVar3, 1 );
                    if ((iVar2 == ( /* PLAYER_PED_ID */ sub_1858())) AND (fVar6 < 6.00000000))
                    {
                        PED_SET_ACTION_INTENTION( g_U2595, 48, 500, 0.00000000, 0.00000000, 0.00000000 );
                        if ((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0)
                        {
                             /* P_DIAL_MAX_SHOOT_AT_GIO */ sub_80910();
                        }
                    }
                    else if ((iVar2 != ( /* PLAYER_PED_ID */ sub_1858())) AND (fVar6 < 12.00000000))
                    {
                        PED_SET_ACTION_INTENTION( g_U2595, 49, 500, 0.00000000, 0.00000000, 0.00000000 );
                        if ((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0)
                        {
                             /* P_DIAL_GIO_SCREAM */ sub_81449();
                        }
                    }
                }
            }
        }
    }
    return;
}

/* P_DIAL_MAX_SHOOT_AT_GIO */ void sub_80910()
{
     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_DIAL_MAX_SHOOT_AT_GIO", 0 );
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
    {
        if ((( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_81038( l_U1177 )) == 0) AND (( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_81038( l_U1107 )) == 0))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_24964( ref l_U1107 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 0,  /* PLAYER_PED_ID */ sub_1858(), "MAX", ref l_U1107, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 1, g_U2595, "GIOVANNA", ref l_U1107, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_25346( "SBUS_VIG09", ref l_U1107, 7, 1 );
        }
    }
    return;
}

/* IS_SPEECH_CURRENTLY_PLAYING */ int sub_81038(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_81081( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

/* IS_SCRIPT_SPEECH_STRUCT_VALID */ boolean sub_81081(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

/* P_DIAL_GIO_SCREAM */ void sub_81449()
{
     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_DIAL_OF_SCREAM", 0 );
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
    {
        if (( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_81038( l_U1117 )) == 0)
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_24964( ref l_U1117 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 0,  /* PLAYER_PED_ID */ sub_1858(), "MAX", ref l_U1117, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 1, g_U2595, "GIOVANNA", ref l_U1117, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_25346( "SBUS_FDGD", ref l_U1117, 7, 1 );
        }
    }
    return;
}

/* P_HANDLE_ENEMY_STAND_CATWALK_EVENT */ void sub_81676()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;

    if (l_U958 == 0)
    {
        if ((DOES_OBJECT_EXIST( g_U2768[1] )) == 1)
        {
            if ((GET_OBJECT_HEALTH( g_U2768[1] )) < 950)
            {
                 /* P_CATWALK_BREAKS_AND_ENEMIES_FALL */ sub_81782();
                 /* CREATETIMER */ sub_6933( ref l_U1019, 1255, 1, 0 );
                 /* STARTTIMER */ sub_7083( ref l_U1019 );
                l_U958 = 1;
            }
        }
    }
    if (l_U961 == 0)
    {
        if (( /* ISTIMERDONE */ sub_7296( ref l_U1019 )) == 1)
        {
            SHAKE_GAMEPLAY_CAM( "SMALL_EXPLOSION_SHAKE", 0.10000000 );
            SET_PAD_SHAKE( 0, 200, 128 );
             /* CREATETIMER */ sub_6933( ref l_U1019, 300, 1, 0 );
             /* STARTTIMER */ sub_7083( ref l_U1019 );
            PLAY_SOUND_FROM_OBJECT( -1, "CATWALK_B_LAND", g_U2768[1] );
            l_U961 = 1;
        }
    }
    if (l_U961 == 1)
    {
        if (( /* ISTIMERDONE */ sub_7296( ref l_U1019 )) == 1)
        {
            STOP_GAMEPLAY_CAM_SHAKING( "SMALL_EXPLOSION_SHAKE", 0 );
        }
    }
    if (l_U947 == 0)
    {
        if (l_U958 == 1)
        {
            if ((DOES_OBJECT_EXIST( g_U2768[1] )) == 1)
            {
                if ((GET_OBJECT_ANIM_CURRENT_TIME( g_U2768[1], ref g_U2800[1], ref g_U1888 )) >= l_U948)
                {
                     /* CLEANOBJECT */ sub_11453( l_U946 );
                    l_U946 =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2168, -58.90000000, 6.50000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
                    if (DOES_OBJECT_EXIST( l_U946 ))
                    {
                        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U946, ref g_U1816 );
                    }
                     /* CREATETIMER */ sub_6933( ref l_U949, 35, 1, 0 );
                     /* STARTTIMER */ sub_7083( ref l_U949 );
                    l_U947 = 1;
                }
            }
        }
    }
    if (( /* ISTIMERDONE */ sub_7296( ref l_U949 )) == 1)
    {
        if ((DOES_OBJECT_EXIST( l_U946 )) == 1)
        {
            DESTROY_FRAGMENT_OBJECT( l_U946 );
        }
         /* CLEANOBJECT */ sub_11453( g_U2768[1] );
    }
    if (l_U962 == 0)
    {
        if (l_U958 == 1)
        {
            if ((DOES_OBJECT_EXIST( g_U2768[1] )) == 1)
            {
                if ((GET_OBJECT_ANIM_CURRENT_TIME( g_U2768[1], ref g_U2800[1], ref g_U1888 )) >= 0.27570000)
                {
                    FORCE_UPDATE_OBJECT_PHYSICAL_STATE( g_U2768[1] );
                    PLAY_SOUND_FROM_OBJECT( -1, "CATWALK_B_LAND", g_U2768[1] );
                    START_PARTICLE_FX_NON_LOOPED_AT_COORD( "BusDepot_Catwalk_Impact_S", -54.94000000, 6.38000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
                    l_U962 = 1;
                }
            }
        }
    }
    if (l_U907 == 1)
    {
        if (l_U908 == 0)
        {
            if ((DOES_OBJECT_EXIST( g_U2768[3] )) == 1)
            {
                if ((IS_OBJECT_PLAYING_ANIM( g_U2768[3], ref g_U2800[3], ref g_U1888 )) == 0)
                {
                     /* WRITESCRIPTLOG */ sub_1099( "SP", "Replacing Catwalk pieces", 0 );
                     /* CLEANOBJECT */ sub_11453( g_U2768[3] );
                    g_U2768[3] =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2149, -52.48751000, 6.49707800, 5.65253600, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
                    if ((DOES_OBJECT_EXIST( g_U2768[3] )) == 1)
                    {
                        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2768[3], ref g_U1816 );
                        FREEZE_OBJECT_POSITION( g_U2768[3], 1 );
                    }
                     /* CLEANOBJECT */ sub_11453( g_U2774[6] );
                    g_U2774[6] =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2150, -51.65490000, 4.20420800, 10.14561000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
                    if (DOES_OBJECT_EXIST( g_U2774[6] ))
                    {
                        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2774[6], ref g_U1816 );
                    }
                }
                l_U908 = 1;
            }
        }
    }
    if (l_U847 == 0)
    {
        if ((DOES_PED_EXIST( l_U770[0] )) == 1)
        {
            if (((IS_PED_DEAD( l_U770[0] )) == 0) || ((IS_PED_DEAD( l_U770[0] )) == 1))
            {
                uVar2 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U770[0] )};
                if (uVar2._fU8 < 1.30000000)
                {
                     /* WRITESCRIPTLOG */ sub_1099( "SP", "Catwalk guy 0 hits ground... splat", 0 );
                    START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "blood_fall_high_death", l_U770[0], 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 3228, 3.00000000 );
                    l_U847 = 1;
                }
            }
        }
    }
    if (l_U848 == 0)
    {
        if ((DOES_PED_EXIST( l_U770[1] )) == 1)
        {
            if (((IS_PED_DEAD( l_U770[1] )) == 0) || ((IS_PED_DEAD( l_U770[1] )) == 1))
            {
                uVar2 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U770[1] )};
                if (uVar2._fU8 < 1.30000000)
                {
                     /* WRITESCRIPTLOG */ sub_1099( "SP", "Catwalk guy 1 hits ground... splat", 0 );
                    START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "blood_fall_high_death", l_U770[1], 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 3228, 3.00000000 );
                    l_U848 = 1;
                }
            }
        }
    }
    return;
}

/* P_CATWALK_BREAKS_AND_ENEMIES_FALL */ void sub_81782()
{
    int I;

     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_CATWALK_BREAKS_AND_ENEMIES_FALL", 0 );
    for ( I = 0; I < l_U770; I++ )
    {
        if (((IS_PED_DEAD( l_U770[I] )) == 0) AND ((DOES_PED_EXIST( l_U770[I] )) == 1))
        {
            CLEAR_PED_TASKS( l_U770[I] );
            SET_PED_TO_RAGDOLL_WITH_FALL( l_U770[I], 0, 3000, 4, 0.00000000, 0.00000000, -1.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            GET_PED_NM_FEEDBACK( l_U770[I], 127, 0 );
            SET_PED_CORPSE( l_U770[I], 0 );
        }
        if ((((IS_PED_RAGDOLL( l_U770[I], 0 )) == 0) || ((IS_PED_RAGDOLL( l_U770[I], 0 )) == 1)) AND ((((IS_PED_INJURED( l_U770[I] )) == 0) || ((IS_PED_INJURED( l_U770[I] )) == 1)) AND ((((IS_PED_DEAD( l_U770[I] )) == 0) || ((IS_PED_DEAD( l_U770[I] )) == 1)) AND ((DOES_PED_EXIST( l_U770[I] )) == 1))))
        {
            SET_PED_TO_RAGDOLL_WITH_FALL( l_U770[I], 0, 3000, 4, 0.00000000, 0.00000000, -1.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            Temporarily_Disable_Ped_Self_Collision( l_U770[I], 1500 );
        }
    }
    if ((DOES_OBJECT_EXIST( g_U2768[1] )) == 1)
    {
        PLAY_OBJECT_ANIM( g_U2768[1], ref g_U2800[1], ref g_U1888, 0.00000000, 0, 1 );
        PLAY_SOUND_FROM_OBJECT( -1, "CATWALK_B_BREAK", g_U2768[1] );
        WAKE_RESTING_OBJECTS_AROUND( g_U2768[1] );
        SET_OBJECT_TARGETTABLE( g_U2768[1], 0 );
        CAMERA_CAN_TARGET_OBJECT( 0, g_U2768[1] );
    }
    if (DOES_OBJECT_EXIST( g_U2774[0] ))
    {
        PLAY_OBJECT_ANIM( g_U2774[0], "ba_wire_01", ref g_U1888, 0.00000000, 0, 1 );
    }
    if (DOES_OBJECT_EXIST( g_U2774[1] ))
    {
        PLAY_OBJECT_ANIM( g_U2774[1], "ba_wire_02", ref g_U1888, 0.00000000, 0, 1 );
    }
    if (DOES_OBJECT_EXIST( g_U2774[2] ))
    {
        PLAY_OBJECT_ANIM( g_U2774[2], "ba_wire_03", ref g_U1888, 0.00000000, 0, 1 );
    }
    if (DOES_OBJECT_EXIST( g_U2774[3] ))
    {
        PLAY_OBJECT_ANIM( g_U2774[3], "ba_wire_04", ref g_U1888, 0.00000000, 0, 1 );
    }
    return;
}

/* F_HAS_PLAYER_SAVED_GIOVANNA */ int sub_84293()
{
    if (((IS_PED_DEAD( g_U2595 )) == 1) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
    {
        return 0;
    }
    if ((IS_LAST_MAN_STANDING_ACTIVE() == 1) || ((IS_BULLET_CAMERA_RUNNING( 0 )) == 1))
    {
        return 0;
    }
    if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_84404( ref l_U770 )) == 0)
    {
        return 1;
    }
    if (l_U958 == 1)
    {
        return 1;
    }
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)
    {
        if (((HAS_PED_BEEN_DAMAGED_BY_PED( l_U770[1],  /* PLAYER_PED_ID */ sub_1858(), 0 )) == 1) AND (((DOES_PED_EXIST( l_U770[1] )) == 1) AND (((HAS_PED_BEEN_DAMAGED_BY_PED( l_U770[0],  /* PLAYER_PED_ID */ sub_1858(), 0 )) == 1) AND ((DOES_PED_EXIST( l_U770[0] )) == 1))))
        {
            return 1;
        }
    }
    return 0;
}

/* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ void sub_84404(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_85032(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_19066(  /* PLAYER_PED_ID */ sub_1858(), uParam0 );
}

/* P_KILL_PEDS_IN_ARRAY */ void sub_85097(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_KILL_PED */ sub_31789( (uParam0^)[I] );
    }
    return;
}

/* P_STOP_SP_CHALLENGES_CATWALK */ void sub_85663()
{
     /* WRITESCRIPTLOG */ sub_1099( "CCB", "P_STOP_SP_CHALLENGES_CATWALK", 0 );
     /* WRITESCRIPTLOG */ sub_1099( "CCB", "Stopping the Bus_Depot_Garage_Catwalk context...", 0 );
    END_CONTEXT( "Bus_Depot_Garage_Catwalk" );
    return;
}

/* P_START_POST_CATWALK_ENEMIES */ void sub_85857()
{
    int I;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_START_POST_CATWALK_ENEMIES", 0 );
     /* P_SETDOORLOCKED */ sub_38899( ref g_U2218, 0 );
     /* P_SETDOORLOCKED */ sub_38899( ref g_U2225, 0 );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)
    {
        for ( I = 0; I < g_U2760; I++ )
        {
            if (((IS_PED_DEAD( g_U2760[I] )) == 0) AND ((DOES_PED_EXIST( g_U2760[I] )) == 1))
            {
                FREEZE_PED_POSITION( g_U2760[I], 0 );
                SET_PED_FREEZE_PROCESSING( g_U2760[I], 0 );
                SET_ROOM_FOR_PED_BY_NAME( g_U2760[I], ref g_U1808 );
                CLEAR_PED_TASKS( g_U2760[I] );
                REGISTER_TARGET( g_U2760[I],  /* PLAYER_PED_ID */ sub_1858() );
                SET_PED_VISIBLE( g_U2760[I], 1 );
                if (I == 0)
                {
                    OPEN_SEQUENCE_TASK( ref uVar3 );
                    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
                    TASK_STAND_STILL( 0, 1000 );
                    TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -62.57000000, -3.33000000, 0.20000000,  /* PLAYER_PED_ID */ sub_1858(), 1, 3, 1101004800, -1082130432, 3 );
                    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
                    TASK_COMBAT_MOVE_TO_COVER_COORDS( 0, -62.57000000, -3.33000000, 0.20000000,  /* PLAYER_PED_ID */ sub_1858() );
                    TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1858() );
                    CLOSE_SEQUENCE_TASK( uVar3 );
                    CLEAR_PED_TASKS( g_U2760[I] );
                    TASK_PERFORM_SEQUENCE( g_U2760[I], uVar3 );
                    CLEAR_SEQUENCE_TASK( uVar3 );
                }
                else if (I == 1)
                {
                    OPEN_SEQUENCE_TASK( ref uVar4 );
                    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
                    TASK_STAND_STILL( 0, 1250 );
                    if (g_U2642._fU0 != 4)
                    {
                        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -62.55000000, -8.18000000, 0.10000000,  /* PLAYER_PED_ID */ sub_1858(), 1, 3, 1101004800, -1082130432, 3 );
                        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
                        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -48.19000000, -3.78000000, -0.54000000,  /* PLAYER_PED_ID */ sub_1858(), 1, 1092616192, 1101004800, -1082130432, 3 );
                    }
                    else
                    {
                        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -56.44000000, -7.51000000, 0.10000000,  /* PLAYER_PED_ID */ sub_1858(), 1, 3, 1101004800, -1082130432, 3 );
                        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
                    }
                    TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1858() );
                    CLOSE_SEQUENCE_TASK( uVar4 );
                    CLEAR_PED_TASKS( g_U2760[I] );
                    TASK_PERFORM_SEQUENCE( g_U2760[I], uVar4 );
                    CLEAR_SEQUENCE_TASK( uVar4 );
                }
                else if (I == 2)
                {
                    OPEN_SEQUENCE_TASK( ref uVar5 );
                    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
                    TASK_STAND_STILL( 0, 1500 );
                    if (g_U2642._fU0 != 4)
                    {
                        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -67.15000000, -6.98000000, 0.10000000,  /* PLAYER_PED_ID */ sub_1858(), 1, 3, 1101004800, -1082130432, 3 );
                        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
                        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -50.81000000, -3.75000000, -0.69000000,  /* PLAYER_PED_ID */ sub_1858(), 1, 1092616192, 1101004800, -1082130432, 3 );
                    }
                    else
                    {
                        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -65.67000000, 0.63000000, -0.69000000,  /* PLAYER_PED_ID */ sub_1858(), 1, 3, 1101004800, -1082130432, 3 );
                        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
                    }
                    TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1858() );
                    CLOSE_SEQUENCE_TASK( uVar5 );
                    CLEAR_PED_TASKS( g_U2760[I] );
                    TASK_PERFORM_SEQUENCE( g_U2760[I], uVar5 );
                    CLEAR_SEQUENCE_TASK( uVar5 );
                };;;
            }
        }
    }
    return;
}

/* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ void sub_87304(unknown uParam0)
{
    int I;

    if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_84404( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

/* P_MAKE_LAST_LIVING_PED_PSYCHO */ void sub_87498(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_MAKE_LAST_LIVING_PED_PSYCHO", 0 );
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0) AND (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1)))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( uParam0, 0 );
        SET_PED_COMBAT_RANGE( uParam0, 1 );
        CLEAR_PED_TASKS( uParam0 );
        TASK_ATTACK_MOVE( uParam0, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1858() ), 1092616192, 1101004800, -1082130432, 3 );
         /* P_REMOVEALLTETHERSFROMPED */ sub_87694( uParam0 );
    }
    return;
}

/* P_REMOVEALLTETHERSFROMPED */ void sub_87694(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        RESET_PED_TETHERING( uParam0 );
    }
    return;
}

/* P_MAKE_PED_PSYCHO */ void sub_87801(unknown uParam0)
{
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0) AND (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1)))
    {
        if ((GET_PED_AWARENESS_STATE( uParam0,  /* PLAYER_PED_ID */ sub_1858(), 9 )) == 1)
        {
            TASK_COMBAT_PED( uParam0,  /* PLAYER_PED_ID */ sub_1858() );
        }
    }
    return;
}

/* P_START_CHECKPOINT_THREAD */ void sub_88222(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

/* F_HANDLE_GIO_LOWER_STAIRS_NIS */ int sub_88355()
{
    vector vVar2;
    float fVar5;
    float fVar6;
    float fVar7;

    vVar2 = {-44.73500000, 27.24000000, 5.00100000};
    fVar5 = 0.00000000;
    fVar6 = 0.24779400;
    fVar7 = 2.34024600;
    switch (l_U544)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eLowerStairsNISState = NIS_SETUP", 0 );
         /* NIS_PRE_SETUP */ sub_3442( 0, 0, 0, 1 );
         /* P_STREAMREQ_ISEQ_INSERT */ sub_46956( 1444858891, ref g_U1272 );
         /* P_STREAMREQ_ISEQ_INSERT */ sub_46956( -1561076308, ref g_U1272 );
         /* P_STREAMREQ_ISEQ_INSERT */ sub_46956( -1947292213, ref g_U1272 );
         /* P_STREAMREQ_ISEQ_INSERT */ sub_46956( 1255748779, ref g_U1272 );
         /* P_STREAMREQ_SCRIPT_STREAM_INSERT */ sub_88649( "VIG_09_BUS_GIO_STAIRS", ref g_U1704 );
         /* P_INITIALIZE_CATWALK_EFFECTS */ sub_90784();
        l_U544 = 3;
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eLowerStairsNISState = NIS_LOADING", 0 );
        break;
        case 3:
        if ((( /* F_STREAMREQ_SCRIPT_STREAM_IS_LOADED */ sub_54415( ref g_U1704 )) == 1) AND (( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_52804( ref g_U1272 )) == 1))
        {
            l_U544 = 4;
             /* WRITESCRIPTLOG */ sub_1099( "SP", "eLowerStairsNISState = NIS_START", 0 );
            break;
        }
        return 0;
        case 4:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eLowerStairsNISState = NIS_START", 0 );
        ISEQ_UNREGISTER_ENTITY( -949706482, "gio" );
        ISEQ_TERMINATE( -949706482 );
         /* P_STREAMREQ_ISEQ_REMOVE */ sub_9969( -949706482, ref g_U1272 );
         /* TELEPORTPED */ sub_22262( g_U2595, vVar2, fVar5 );
        if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
        {
            CLEAR_PED_TASKS_IMMEDIATELY( g_U2595 );
            FREEZE_PED_POSITION( g_U2595, 0 );
            SET_ROOM_FOR_PED_BY_NAME( g_U2595, ref g_U1816 );
        }
         /* TELEPORTPED */ sub_22262( g_U2595, vVar2, fVar5 );
        ISEQ_REGISTER_ENTITY( 1444858891, "gio", g_U2595, 0 );
        ISEQ_START( 1444858891 );
        l_U544 = 6;
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eLowerStairsNISState = NIS_FIRST_FRAME", 0 );
        break;
        case 6:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eLowerStairsNISState = NIS_FIRST_FRAME", 0 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_BUS_CP_04", "VIG_09_GIO_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
         /* TELEPORTPED */ sub_22262(  /* PLAYER_PED_ID */ sub_1858(), -54.49835000, 13.92755000, 0.00505100, 345.07640000 );
        if (((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1896() )) == 0) AND ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0))
        {
            CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1858() );
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1896(), 0, 0 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1858(), 0 );
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1858(), 1 );
        }
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( fVar6, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fVar7, 1065353216, 0 );
         /* P_STREAMREQ_SCRIPT_STREAM_PLAY_FRONTEND */ sub_92182( "VIG_09_BUS_GIO_STAIRS", ref g_U1704 );
         /* P_SETDOORLOCKED */ sub_38899( ref g_U2218, 1 );
         /* P_SETDOORLOCKED */ sub_38899( ref g_U2225, 1 );
         /* CREATETIMER */ sub_6933( ref l_U1038, 0, 1, 0 );
         /* STARTTIMER */ sub_7083( ref l_U1038 );
         /* CREATETIMER */ sub_6933( ref l_U1047, l_U1056, 1, 0 );
         /* STARTTIMER */ sub_7083( ref l_U1047 );
         /* CREATETIMER */ sub_6933( ref l_U897, 10000, 1, 0 );
         /* STARTTIMER */ sub_7083( ref l_U897 );
        l_U544 = 5;
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eLowerStairsNISState = NIS_PLAYING", 0 );
        break;
        case 5:
         /* P_HANDLE_IMAGEFX */ sub_93107( ref l_U1470 );
        if (( /* ISTIMERDONE */ sub_7296( ref l_U1038 )) == 1)
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_24964( ref l_U1127 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 0,  /* PLAYER_PED_ID */ sub_1858(), "MAX", ref l_U1127, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 1, g_U2595, "GIOVANNA", ref l_U1127, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_25346( "SBUS_VIG9A", ref l_U1127, 7, 1 );
        }
        if (( /* ISTIMERDONE */ sub_7296( ref l_U1047 )) == 1)
        {
            l_U844 = GET_SOUND_ID();
            PLAY_SOUND_FROM_OBJECT( l_U844, "METAL_STAIRCASE_ALARM", g_U2847 );
             /* P_TOGGLE_STAIRCASE_LIGHTS */ sub_94111();
             /* CREATETIMER */ sub_6933( ref l_U1029, l_U1028, 1, 0 );
             /* STARTTIMER */ sub_7083( ref l_U1029 );
        }
        if (( /* ISTIMERDONE */ sub_7296( ref l_U1029 )) == 1)
        {
            l_U842 = GET_SOUND_ID();
            PLAY_SOUND_FROM_OBJECT( l_U842, "METAL_STAIRCASE_LOWER", g_U2849 );
            l_U843 = GET_SOUND_ID();
            PLAY_SOUND_FROM_COORD( l_U843, "METAL_STAIRCASE_GEARS", -53.96000000, 31.15000000, 4.93000000 );
            if ((DOES_OBJECT_EXIST( g_U2849 )) == 1)
            {
                PLAY_OBJECT_ANIM( g_U2849, "p_bd_stacas_aa", ref g_U1888, 0.00000000, 0, 1 );
            }
        }
        if (( /* ISTIMERDONE */ sub_7296( ref l_U897 )) == 1)
        {
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( fVar6, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( fVar7, 1065353216, 0 );
            l_U544 = 7;
             /* WRITESCRIPTLOG */ sub_1099( "SP", "eLowerStairsNISState = NIS_FINISHED", 0 );
        }
        break;
        case 7:
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eLowerStairsNISState = NIS_FINISHED", 0 );
         /* NIS_POST_SETUP */ sub_5727( 1, 1 );
        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
        {
            TASK_LOOK_AT_PED( g_U2595,  /* PLAYER_PED_ID */ sub_1858(), 20000, 64 );
        }
        l_U544 = 0;
         /* WRITESCRIPTLOG */ sub_1099( "SP", "eLowerStairsNISState = NIS_IDLE", 0 );
        return 1;
        break;
    }
    return 0;
}

/* P_STREAMREQ_SCRIPT_STREAM_INSERT */ void sub_88649(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_SCRIPT_STREAM_IS_INDEX_AVAILABLE */ sub_88705( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing SCRIPT_STREAM asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_88969( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_INDEX_AVAILABLE */ int sub_88705(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_88969( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is already loading!!!", 0 );
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_88969( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (Result <= 2)
                {
                    if ((GET_SCRIPT_STREAM_STATE( uParam0, Result )) == 2)
                    {
                        DISPLAYF( "[CCB] ### The SCRIPT_STREAM is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                        DISPLAYF( "The SCRIPT_STREAM asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_88969( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### The SCRIPT_STREAM is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The SCRIPT_STREAM asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                        (uParam1^)[Result]._fU32 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_41639( ref (uParam1^)[Result]._fU36 );
                        return Result;
                    }
                }
                else
                {
                    DISPLAYF( "[CCB] ### The SCRIPT_STREAM is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The SCRIPT_STREAM asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_88969( Result, uParam1, uParam2 );
                    return -1;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_88969( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (Result <= 2)
        {
            if ((GET_SCRIPT_STREAM_STATE( uParam0, iVar6 )) == 2)
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is already loaded: {} ###", 1, 1537, uParam0 );
                DISPLAYF( "The SCRIPT_STREAM asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing SCRIPT_STREAM: {} ###", 1, 1537, uParam0 );
                StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
                (uParam1^)[iVar6]._fU32 = 3;
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_88969( iVar6, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar6;
            }
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The SCRIPT_STREAM - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ void sub_88969(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_40169( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The SCRIPT_STREAM asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_INITIALIZE_CATWALK_EFFECTS */ void sub_90784()
{
     /* WRITESCRIPTLOG */ sub_1099( "CO", "P_INITIALIZE_CATWALK_EFFECTS", 0 );
     /* P_INIT_IMAGEFX */ sub_90871( ref l_U1470 );
    l_U1470[1]._fU4 = "GAMMA_SATURATION_COLOR_ZOOM";
    l_U1470[1]._fU12 = 0;
    l_U1470[1]._fU20 = 1;
    l_U1470[1]._fU8 = 4;
    l_U1470[1]._fU32 = 0;
    l_U1470[2]._fU4 = "EXPOSURE_DARKEN_CONTRAST_02";
    l_U1470[2]._fU16 = 1135;
    l_U1470[2]._fU8 = 4;
    l_U1470[2]._fU32 = 0;
    l_U1470[3]._fU4 = "GRADE_RED_FAST";
    l_U1470[3]._fU12 = l_U1635;
    l_U1470[3]._fU8 = 4;
    l_U1470[3]._fU32 = 0;
    l_U1470[4]._fU4 = "FLICKER_VIBRATE_ZOOM_01";
    l_U1470[4]._fU12 = l_U1635 + 100;
    l_U1470[4]._fU8 = 4;
    l_U1470[4]._fU32 = 0;
    l_U1470[5]._fU4 = "FLICKER_VIBRATE_ZOOM_01";
    l_U1470[5]._fU12 = l_U1635 + 100;
    l_U1470[5]._fU8 = 4;
    l_U1470[5]._fU32 = 0;
    l_U460 = 0;
    return;
}

/* P_INIT_IMAGEFX */ void sub_90871(unknown uParam0)
{
    int I;

     /* WRITESCRIPTLOG */ sub_1099( "CO", "P_INIT_IMAGEFX", 0 );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU4 = "";
        (uParam0^)[I]._fU12 = 0;
        (uParam0^)[I]._fU16 = 0;
        (uParam0^)[I]._fU20 = 0;
        (uParam0^)[I]._fU24 = 0;
        (uParam0^)[I]._fU28 = 0;
        (uParam0^)[I]._fU32 = 1;
    }
    return;
}

/* P_STREAMREQ_SCRIPT_STREAM_PLAY_FRONTEND */ void sub_92182(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if ( /* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ sub_92241( uParam0, uParam1 ))
    {
        iVar4 =  /* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ sub_92450( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            DISPLAYF( "[CCB]### Playing the SCRIPT_STREAM: {} ###", 1, 1281, ref (uParam1^)[iVar4]._fU0 );
            PLAY_SCRIPT_STREAM_FRONTEND( iVar4 );
        }
        else
        {
            DISPLAYF( "[CCB]### The SCRIPT_STREAM slot is NOT valid!!! {} ###", 1, 1537, uParam0 );
            SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        DISPLAYF( "[CCB]### The SCRIPT_STREAM asset is NOT loaded!!! {} ###", 1, 1537, uParam0 );
        SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ int sub_92241(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB]### The SCRIPT_STREAM is loaded: {} ###", 1, 1281, ref (uParam1^)[I]._fU0 );
                return 1;
            }
        }
    }
    return 0;
}

/* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ int sub_92450(unknown uParam0, unknown uParam1)
{
    int Result;

    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
        {
            return Result;
        }
    }
    return -1;
}

/* P_HANDLE_IMAGEFX */ void sub_93107(unknown uParam0)
{
    int I;
    int J;

    switch (l_U460)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_1099( "CO", "P_HANDLE_IMAGEFX", 0 );
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (uParam0^)[I]._fU32)
            {
                 /* CREATETIMER */ sub_6933( ref (uParam0^)[I]._fU36, (uParam0^)[I]._fU12, 1, 0 );
                 /* STARTTIMER */ sub_7083( ref (uParam0^)[I]._fU36 );
                if ((uParam0^)[I]._fU20 > 0)
                {
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        l_U460 = 1;
        break;
        case 1:
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if ( /* ISTIMERDONE */ sub_7296( ref (uParam0^)[I]._fU36 ))
            {
                (uParam0^)[I]._fU0 = PLAY_IMAGEFX( (uParam0^)[I]._fU4, (uParam0^)[I]._fU8, (uParam0^)[I]._fU28 );
                if ((uParam0^)[I]._fU16 > 0)
                {
                     /* CREATETIMER */ sub_6933( ref (uParam0^)[I]._fU72, (uParam0^)[I]._fU16, 1, 0 );
                     /* STARTTIMER */ sub_7083( ref (uParam0^)[I]._fU72 );
                }
                if ((uParam0^)[I]._fU20 > 0)
                {
                    for ( J = I + 1; J <= (I + (uParam0^)[I]._fU20); J++ )
                    {
                        PRINTSTRING( "******* [CO] ***** STARTING CHILD FOR index : " );
                        PRINTINT( J );
                        PRINTNL();
                        (uParam0^)[J]._fU0 = PLAY_IMAGEFX( (uParam0^)[J]._fU4, (uParam0^)[J]._fU8, (uParam0^)[I]._fU28 );
                        if ((uParam0^)[J]._fU16 > 0)
                        {
                             /* CREATETIMER */ sub_6933( ref (uParam0^)[J]._fU72, (uParam0^)[J]._fU16, 1, 0 );
                             /* STARTTIMER */ sub_7083( ref (uParam0^)[J]._fU72 );
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
            if ( /* ISTIMERDONE */ sub_7296( ref (uParam0^)[I]._fU72 ))
            {
                STOP_IMAGEFX( (uParam0^)[I]._fU0, (uParam0^)[I]._fU24 );
                (uParam0^)[I]._fU32 = 1;
                if ((uParam0^)[I]._fU20 > 0)
                {
                    if ((uParam0^)[I]._fU20 == 1)
                    {
                        STOP_IMAGEFX( (uParam0^)[I + 1]._fU0, (uParam0^)[I + 1]._fU24 );
                        (uParam0^)[I + 1]._fU32 = 1;
                    }
                    else
                    {
                        for ( J = I + 1; J <= (uParam0^)[I]._fU20; J++ )
                        {
                            STOP_IMAGEFX( (uParam0^)[J]._fU0, (uParam0^)[J]._fU24 );
                            (uParam0^)[J]._fU32 = 1;
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        break;
    }
    return;
}

/* P_TOGGLE_STAIRCASE_LIGHTS */ void sub_94111()
{
     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_TOGGLE_STAIRCASE_LIGHTS", 0 );
    if ((DOES_OBJECT_EXIST( g_U2847 )) == 1)
    {
        if ((GET_OBJECT_MODEL( g_U2847 )) == g_U2125)
        {
             /* WRITESCRIPTLOG */ sub_1099( "SP", "Staircase light off.", 0 );
             /* CLEANOBJECT */ sub_11453( g_U2847 );
            g_U2847 =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2126, l_U410, 180, 0.00000000, 0.00000000, 0, 0, 1 );
            if (DOES_OBJECT_EXIST( g_U2847 ))
            {
                FREEZE_OBJECT_POSITION( g_U2847, 1 );
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2847, ref g_U1816 );
            }
             /* CLEANOBJECT */ sub_11453( g_U2848 );
            g_U2848 =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2126, l_U413, 180, 0.00000000, 0.00000000, 0, 0, 1 );
            if (DOES_OBJECT_EXIST( g_U2848 ))
            {
                FREEZE_OBJECT_POSITION( g_U2848, 1 );
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2848, ref g_U1816 );
            }
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_1099( "SP", "Staircase light on.", 0 );
             /* CLEANOBJECT */ sub_11453( g_U2847 );
            g_U2847 =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2125, l_U410, 180, 0.00000000, 0.00000000, 0, 0, 1 );
            if (DOES_OBJECT_EXIST( g_U2847 ))
            {
                FREEZE_OBJECT_POSITION( g_U2847, 1 );
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2847, ref g_U1816 );
                PLAY_OBJECT_ANIM( g_U2847, "P_EL_AmbLgt_Aa_H", "bd_objmodels", 0.00000000, 1, 0 );
            }
             /* CLEANOBJECT */ sub_11453( g_U2848 );
            g_U2848 =  /* CREATEOBJECTNOOFFSET */ sub_30055( g_U2125, l_U413, 180, 0.00000000, 0.00000000, 0, 0, 1 );
            if (DOES_OBJECT_EXIST( g_U2848 ))
            {
                FREEZE_OBJECT_POSITION( g_U2848, 1 );
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2848, ref g_U1816 );
                PLAY_OBJECT_ANIM( g_U2848, "P_EL_AmbLgt_Aa_H", "bd_objmodels", 0.00000000, 1, 0 );
            }
        }
    }
    return;
}

/* P_RESET_CONTEXTUAL_DIALOGUE */ void sub_95322()
{
     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_RESET_CONTEXTUAL_DIALOGUE", 0 );
    l_U535 = 0;
    l_U536 = 0;
    l_U481 = 0;
    l_U537 = 0;
     /* RESETTIMER */ sub_8550( ref l_U463 );
     /* RESETTIMER */ sub_8550( ref l_U472 );
    return;
}

/* P_HANDLE_VIG_09 */ void sub_95549()
{
    if (((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1896() )) == 0) AND (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))))
    {
        if ((ISEQ_QUERY_STATE( 1444858891, 3 )) == 1)
        {
            if (( /* F_HAS_MAX_SHOT_NEAR_GIO */ sub_95661()) == 1)
            {
                PED_SET_ACTION_INTENTION( g_U2595, 47, 500, 0.00000000, 0.00000000, 0.00000000 );
                if ((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0)
                {
                     /* P_DIAL_MAX_SHOOT_AT_GIO */ sub_80910();
                }
            }
            if (((IS_PLAYER_FREE_AIMING_AT_PED(  /* PLAYER_ID */ sub_1896(), g_U2595 )) == 1) AND ((IS_PLAYER_GUN_RAISED(  /* PLAYER_ID */ sub_1896() )) == 1))
            {
                PED_SET_ACTION_INTENTION( g_U2595, 48, 500, 0.00000000, 0.00000000, 0.00000000 );
                if ((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0)
                {
                     /* P_DIAL_MAX_AIMS_AT_GIO */ sub_95942();
                }
            }
            if (l_U964 == 0)
            {
                if (( /* F_ISPLAYERINTRIGGERBOX */ sub_85032( l_U604 )) == 1)
                {
                    PED_SET_ACTION_INTENTION( g_U2595, 49, 1000, 0.00000000, 0.00000000, 0.00000000 );
                     /* KILL_ANY_MISSION_SPEECH */ sub_9073( 0 );
                     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_24964( ref l_U1137 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 1, g_U2595, "GIOVANNA", ref l_U1137, 2, 0 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 0,  /* PLAYER_PED_ID */ sub_1858(), "MAX", ref l_U1137, 2, 0 );
                     /* PLAY_SINGLE_SPEECH */ sub_25346( "SBUS_VIG9C", ref l_U1137, 7, 1 );
                    l_U964 = 1;
                }
            }
            if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_96358( ref l_U667,  /* PLAYER_PED_ID */ sub_1858(), 0 ))
            {
                PLAY_IMAGEFX( "DOUBLE_TINT_BLUE_FLASH", 4, 0 );
                PLAY_IMAGEFX( "FLICKER_VIBRATE_01", 4, 0 );
            }
            if (l_U964 == 0)
            {
                if ((l_U965._fU16 == 1) || (( /* ISTIMERDONE */ sub_7296( ref l_U965 )) == 1))
                {
                    if (((IS_PED_DEAD( g_U2595 )) == 0) AND (((DOES_PED_EXIST( g_U2595 )) == 1) AND ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)))
                    {
                        if ((GET_DISTANCE_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1858() ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 1 )) > 12.00000000)
                        {
                             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_24964( ref l_U1157 );
                             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 1, g_U2595, "GIOVANNA", ref l_U1157, 2, 0 );
                             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 0,  /* PLAYER_PED_ID */ sub_1858(), "MAX", ref l_U1157, 2, 0 );
                             /* PLAY_SINGLE_SPEECH */ sub_25346( "SBUS_GVWUS", ref l_U1157, 7, 1 );
                             /* CREATETIMER */ sub_6933( ref l_U965, 25000, 1, 0 );
                             /* STARTTIMER */ sub_7083( ref l_U965 );
                        }
                    }
                }
            }
        }
    }
    return;
}

/* F_HAS_MAX_SHOT_NEAR_GIO */ int sub_95661()
{
    int iVar2;

    if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
    {
        if (HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 4.00000000, ref iVar2 ))
        {
            if (iVar2 == ( /* PLAYER_PED_ID */ sub_1858()))
            {
                return 1;
            }
        }
    }
    return 0;
}

/* P_DIAL_MAX_AIMS_AT_GIO */ void sub_95942()
{
     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_DIAL_MAX_AIMS_AT_GIO", 0 );
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
    {
        if ((( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_81038( l_U1177 )) == 0) AND (( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_81038( l_U1107 )) == 0))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_24964( ref l_U1177 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 0,  /* PLAYER_PED_ID */ sub_1858(), "MAX", ref l_U1177, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 1, g_U2595, "GIOVANNA", ref l_U1177, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_25346( "SBUS_GVPATH", ref l_U1177, 8, 1 );
        }
    }
    return;
}

/* F_ISPEDINTRIGGERBOXFIRSTTIME */ void sub_96358(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 =  /* F_ISPEDINTRIGGERBOX */ sub_19066( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

/* P_HANDLE_CONTEXTUAL_DIALOGUE */ void sub_96811()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    float fVar6;
    float fVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (l_U535 == 0)
    {
         /* CREATETIMER */ sub_6933( ref l_U463, 6000, 1, 0 );
         /* STARTTIMER */ sub_7083( ref l_U463 );
        l_U535 = 1;
    }
    if (((IS_PED_DEAD( g_U2595 )) == 0) AND (((DOES_PED_EXIST( g_U2595 )) == 1) AND ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)))
    {
        if (((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0) AND ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)))
        {
            if ((l_U463._fU16 == 1) || (( /* ISTIMERDONE */ sub_7296( ref l_U463 )) == 1))
            {
                if ((IS_PLAYER_SHOOTDODGING() == 1) AND ((CAN_PED_SEE_OTHER_PED( g_U2595,  /* PLAYER_PED_ID */ sub_1858(), 110.00000000, 15.00000000 )) == 1))
                {
                     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_24964( ref l_U482 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 0,  /* PLAYER_PED_ID */ sub_1858(), "MAX", ref l_U482, 2, 0 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 1, g_U2595, "GIOVANNA", ref l_U482, 2, 0 );
                     /* PLAY_SINGLE_SPEECH */ sub_25346( "SBUS_GVPMAR", ref l_U482, 7, 1 );
                     /* CREATETIMER */ sub_6933( ref l_U463, 6000, 1, 0 );
                     /* STARTTIMER */ sub_7083( ref l_U463 );
                }
                if ((HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 30.00000000, ref iVar2 )) == 1)
                {
                    if (iVar2 == ( /* PLAYER_PED_ID */ sub_1858()))
                    {
                        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_BULLET_IMPACT_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 30.00000000, ref iVar2 )};
                        fVar6 = VDIST( uVar3, 0.00000000, 0.00000000, 0.00000000 );
                        if (fVar6 > 0.00000000)
                        {
                            fVar7 = VDIST( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ) );
                            if (fVar7 > 8.00000000)
                            {
                                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_24964( ref l_U492 );
                                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 0,  /* PLAYER_PED_ID */ sub_1858(), "MAX", ref l_U492, 2, 0 );
                                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 1, g_U2595, "GIOVANNA", ref l_U492, 2, 0 );
                                 /* PLAY_SINGLE_SPEECH */ sub_25346( "SBUS_GVPSC", ref l_U492, 7, 1 );
                                 /* CREATETIMER */ sub_6933( ref l_U463, 6000, 1, 0 );
                                 /* STARTTIMER */ sub_7083( ref l_U463 );
                            }
                        }
                    }
                }
            }
        }
    }
    if (((IS_PED_DEAD( g_U2595 )) == 0) AND (((DOES_PED_EXIST( g_U2595 )) == 1) AND ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0)))
    {
        if (((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0) AND ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)))
        {
            uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1858() )};
            if ((VDIST( uVar8, l_U532 )) > 0.10000000)
            {
                 /* RESETTIMER */ sub_8550( ref l_U472 );
            }
            else if ((l_U472._fU16 == 0) AND (l_U472._fU20 == 0))
            {
                 /* CREATETIMER */ sub_6933( ref l_U472, 35000, 1, 0 );
                 /* STARTTIMER */ sub_7083( ref l_U472 );
            }
            if ((l_U472._fU16 == 1) || (( /* ISTIMERDONE */ sub_7296( ref l_U472 )) == 1))
            {
                if (l_U481 < 6)
                {
                    if ((l_U538 == 0) AND (g_U764 == 6))
                    {
                         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_24964( ref l_U512 );
                         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 0,  /* PLAYER_PED_ID */ sub_1858(), "MAX", ref l_U512, 2, 0 );
                         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 1,  /* PLAYER_PED_ID */ sub_1858(), "MAX", ref l_U512, 2, 0 );
                         /* PLAY_SINGLE_SPEECH */ sub_25346( "SBUS_MJDBPBB", ref l_U512, 7, 1 );
                        l_U538 = 1;
                    }
                    else
                    {
                         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_24964( ref l_U502 );
                         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 0,  /* PLAYER_PED_ID */ sub_1858(), "MAX", ref l_U502, 2, 0 );
                         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 1, g_U2595, "GIOVANNA", ref l_U502, 2, 0 );
                         /* PLAY_SINGLE_SPEECH */ sub_25346( "SBUS_GVPSD", ref l_U502, 7, 1 );
                    }
                     /* CREATETIMER */ sub_6933( ref l_U472, 35000, 1, 0 );
                     /* STARTTIMER */ sub_7083( ref l_U472 );
                    l_U481++;
                }
            }
            l_U532 = {uVar8};
        }
    }
    if (l_U536 == 0)
    {
        l_U537 = GET_PAYNEKILLER_AMT();
        l_U536 = 1;
    }
    if (l_U537 < GET_PAYNEKILLER_AMT())
    {
        if ((( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_98003()) == 0) AND ((TIME_SINCE_LAST_MONOLOGUE() > 5000) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1858() )) == 0))))))
        {
             /* WRITESCRIPTLOG */ sub_1099( "SP", "Playing Pills Monologue", 0 );
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_24964( ref l_U522 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 0,  /* PLAYER_PED_ID */ sub_1858(), "MAX", ref l_U522, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_25075( 1,  /* PLAYER_PED_ID */ sub_1858(), "MAX", ref l_U522, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_25346( "SBUS_MFSFPLS", ref l_U522, 7, 1 );
        }
    }
    l_U537 = GET_PAYNEKILLER_AMT();
    return;
}

/* IS_ANY_SPEECH_CURRENTLY_PLAYING */ void sub_98003()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

/* P_STREAMREQ_SCRIPT_STREAM_STOP */ void sub_98816(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if ( /* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ sub_92241( uParam0, uParam1 ))
    {
        iVar4 =  /* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ sub_92450( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            DISPLAYF( "[CCB]### Stopping the SCRIPT_STREAM: {} ###", 1, 1281, ref (uParam1^)[iVar4]._fU0 );
            STOP_SCRIPT_STREAM( iVar4 );
        }
        else
        {
            DISPLAYF( "[CCB]### The SCRIPT_STREAM slot is NOT valid!!! {} ###", 1, 1537, uParam0 );
            SCRIPT_ASSERT( "Attempting to stop a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        DISPLAYF( "[CCB]### The SCRIPT_STREAM asset is NOT loaded!!! {} ###", 1, 1537, uParam0 );
        DISPLAYF( "Attempting to stop a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ void sub_99309(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_10107( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a SCRIPT_STREAM asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_UNLOAD_ASSETS */ void sub_100751()
{
     /* WRITESCRIPTLOG */ sub_1099( "SP", "P_UNLOAD_ASSETS", 0 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_100817( g_U2103, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_100817( g_U2112, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_100817( g_U2113, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_100817( g_U2114, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_100817( g_U2115, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_100817( g_U2126, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_100817( g_U2125, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_100817( g_U2120, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_100817( g_U2121, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_100817( g_U2122, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_100817( g_U2118, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_100817( g_U2119, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_100817( g_U2123, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_100817( g_U2124, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_100817( 1490301961, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_100817( g_U2148, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_100817( g_U2168, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_100817( g_U2149, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_100817( g_U2150, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ sub_101525( ref g_U2152, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ sub_101525( ref g_U2158, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_100817( -1409914275, ref g_U910 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_100817( g_U760, ref g_U910 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_101684( "CRUSH_IMMINENT", ref g_U1369 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_101684( ref g_U1888, ref g_U1369 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_101684( ref g_U1992, ref g_U1369 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_101684( ref g_U2000, ref g_U1369 );
     /* P_STREAMREQ_SCRIPT_STREAM_STOP */ sub_98816( "VIG_09_BUS_GIO_STAIRS", ref g_U1704 );
     /* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ sub_99309( "VIG_09_BUS_GIO_STAIRS", ref g_U1704 );
     /* P_STREAMREQ_AUDIO_BANK_REMOVE */ sub_102163( "SCRIPT_MISSION\S_BUSDEP_GARAGE", ref g_U1757 );
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE */ void sub_100817(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_10107( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a MODEL_NAME asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Removing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ void sub_101525(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_100817( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_REMOVE */ void sub_101684(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_10107( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ANIM_DICT asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_AUDIO_BANK_REMOVE */ void sub_102163(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_10107( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a AUDIO_BANK asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}


void main()
{
    unknown uVar2;
    unknown uVar3;

    l_U0 = 1;
    l_U1 = 144;
    StrCopy( ref l_U2, "Ambient_Lightning_Flash_BG_S", 32 );
    StrCopy( ref l_U10, "Ambient_Lightning_Flash_FG_S", 32 );
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 1.00000000;
    l_U25 = {0.00000000, 0.00000000, 0.00000000};
    l_U28 = {0.00000000, 0.00000000, 0.00000000};
    l_U31 = 1.00000000;
    l_U32 = 0;
    l_U33 = 0;
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0.50000000;
    l_U38 = 0;
    l_U39 = 0;
    l_U40 = {0, 0, 0};
    StrCopy( ref l_U43, "DUMMY", 32 );
    l_U51 = 1;
    l_U56 = 0;
    l_U57 = 0;
    l_U58 = 0;
    l_U61 = 0;
    l_U106 = -1;
    l_U107 = {64536, 64536, 64536};
    l_U152 = "PED_DEF";
    l_U194 = 1.00000000;
    l_U206 = 0;
    l_U247 = 0;
    l_U267 = 0;
    l_U268 = 1;
    l_U269 = 0;
    l_U270 = 1.00000000;
    l_U271 = -5.00000000;
    l_U272 = 0;
    l_U273 = 0;
    l_U274 = 0;
    l_U278 = 42;
    l_U279 = 0;
    l_U280 = 0;
    l_U281 = 0;
    l_U282 = 0;
    l_U283 = 0;
    l_U284 = 90.00000000;
    l_U285 = {0.00000000, 0.00000000, 0.00000000};
    l_U288 = {0.00000000, 0.00000000, 0.00000000};
    l_U291 = 0;
    l_U292 = 0;
    l_U293 = 0;
    l_U294 = 0;
    l_U295 = 0;
    l_U296 = 0;
    l_U297 = nil;
    l_U298 = {0.00000000, 0.00000000, 0.00000000};
    l_U301 = 0;
    l_U302 = 0;
    l_U303 = 0;
    l_U305 = 0;
    l_U306 = 0;
    l_U307 = 1500;
    l_U375 = 1;
    l_U376 = 0;
    l_U377 = 1;
    l_U378 = 0;
    l_U389 = "S_MARINA_CONTAINER_YARD_GARAGE_DOOR_BUTTON";
    l_U390 = "S_MARINA_CONTAINER_YARD_GARAGE_DOOR_OPEN";
    l_U391 = "mid_05_docks_concat";
    l_U392 = "MID_04_DOCKS_pt1";
    l_U443 = 0;
    l_U444 = {63.12078000, 17.23630000, 1.83300000};
    l_U447 = {64.37900000, 17.40000000, 1.84200000};
    l_U450 = {64.71500000, 16.17000000, 1.83500000};
    l_U453 = -150.51000000;
    l_U454 = 160.09400000;
    l_U455 = 94.65700000;
    l_U459 = {62.43300000, 6.63100000, 2.01900000};
    l_U474 = 0;
    l_U475 = 0;
    l_U755 = 0;
    l_U1086 = {95.46098000, 47.81125000, 1.80000100};
    l_U1136 = "SCRIPT_MISSION\S_MARINA_CONTAINER_YARD";
    l_U1320 = 0;
    l_U1321 = 0;
    l_U1322 = 0;
    l_U1323 = 0;
    sub_1048( "GA", "Script s_marina_ContYard.sc is starting...", 0 );
    sub_1097();
    sub_2361( 4, 1 );
    sub_2796();
    sub_5635();
    sub_6281();
    sub_7749();
    if (g_U788 == 4)
    {
        sub_1048( "SBA", "Dev menu start for s_marina_ContYard.sc", 0 );
        if (NOT (sub_7950( ref l_U317 )))
        {
            uVar2 = sub_10326( sub_8075(), 68019059, 90, 0, 1 );
            if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
            {
                SET_WEAPON_LIGHT_DATA_BY_NAME( uVar2, "Flashlight_Docks" );
                ENABLE_WEAPON_ATTACHMENT( uVar2, 14, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar2, 14, 1 );
                ENABLE_WEAPON_ATTACHMENT( uVar2, 8, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar2, 8, 1 );
            }
            uVar3 = sub_9694( sub_8075(), 1194438308, 1, 500, 1 );
        }
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U936[4], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U973[4], 1065353216, 0 );
        l_U376 = 1;
        g_U1225 = 1;
    }
    else
    {
        sub_12403( l_U392, 0 );
    }
    while (NOT g_U1225)
    {
        WAIT( 0 );
    }
    START_CONTEXT( "DOCKS_CON_YARD_TO_WET" );
    sub_1048( "GA", "Script s_marina_ContYard.sc active.", 0 );
    if (HAS_PLACEMENT_BEEN_COLLECTED( l_U1315 ))
    {
        l_U1316 = 1;
    }
    sub_12778();
    while (NOT IS_EXITFLAG_SET())
    {
        if (l_U374)
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        }
        else
        {
            sub_16634();
            sub_20104();
            if (g_U789 == 4)
            {
                sub_43043();
            }
            sub_44068();
        }
        if ((sub_44576() == 1) AND (l_U1313))
        {
            g_U1662 = 1;
        }
        WAIT( 0 );
    }
    sub_18537();
    sub_41264( 0 );
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_marina_ContYard" );
    SET_EXITFLAG_RESPONSE();
    sub_1048( "GA", "Script s_marina_ContYard.sc is terminating...", 0 );
    return;
}

void sub_1048(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_1097()
{
    sub_1048( "GA", "LOAD_ASSETS start", 0 );
    if (g_U788 == 4)
    {
        sub_1155( g_U1031 );
        sub_1155( g_U1056 );
        sub_1155( g_U1064 );
        sub_1155( g_U1093 );
        sub_1155( g_U1105 );
        sub_1155( g_U1106 );
        sub_1155( g_U1094 );
        sub_1155( g_U1100 );
        sub_1155( g_U1099 );
        sub_1155( g_U1061 );
        sub_1155( g_U1062 );
        sub_1155( g_U1059 );
        sub_1155( g_U1060 );
        sub_1155( g_U1063 );
        sub_1155( -72345008 );
    }
    else
    {
        sub_1502( g_U1031, 1 );
        sub_1502( g_U1056, 1 );
        sub_1502( g_U1064, 1 );
        sub_1502( g_U1093, 1 );
        sub_1502( g_U1105, 1 );
        sub_1502( g_U1106, 1 );
        sub_1502( g_U1094, 1 );
        sub_1502( g_U1063, 1 );
        sub_1502( -72345008, 1 );
    }
    sub_1761( -219356027, 0 );
    sub_1502( g_U774, 1 );
    STOP_SCRIPT_STREAM( 0 );
    sub_2005( "Mid_04_Docks_PT1_Blendout", 0, 1 );
    sub_2086( l_U1136, 0 );
    l_U1317 = GET_SOUND_ID();
    l_U1318 = GET_SOUND_ID();
    l_U1319 = GET_SOUND_ID();
    sub_2199( "SMARAUD" );
    sub_1502( -1784229265, 1 );
    sub_1048( "GA", "LOAD_ASSETS end", 0 );
    return;
}

void sub_1155(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_1271( "[SP]### ERROR! (BlockLoadModel) Trying to block load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    LOAD_ALL_OBJECTS_NOW();
    while ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        LOAD_ALL_OBJECTS_NOW();
        WAIT( 0 );
    }
    return;
}

void sub_1271(unknown uParam0)
{
    return;
}

void sub_1502(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_1271( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_1761(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_2005(unknown uParam0, unknown uParam1, int iParam2)
{
    if (iParam2 == 0)
    {
        REQUEST_SCRIPT_STREAM( uParam0, uParam1 );
    }
    else
    {
        while ((LOAD_SCRIPT_STREAM( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_2086(unknown uParam0, int iParam1)
{
    LOAD_SCRIPT_AUDIO_BANK( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_2199(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_2219();
    return;
}

void sub_2219()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_2361(unknown uParam0, unknown uParam1)
{
    sub_2378( 68019059, uParam1 );
    switch (uParam0)
    {
        case 0:
        case 1:
        sub_2378( -1074756423, uParam1 );
        break;
        case 2:
        sub_2378( -612753081, uParam1 );
        break;
        case 3:
        sub_2378( 1194438308, uParam1 );
        sub_2378( -612753081, uParam1 );
        break;
        case 4:
        sub_2378( 1194438308, uParam1 );
        sub_2378( -612753081, uParam1 );
        sub_2378( -168327769, uParam1 );
        sub_2378( -1074756423, uParam1 );
        break;
        case 5:
        case 6:
        sub_2378( 1194438308, uParam1 );
        sub_2378( -168327769, uParam1 );
        sub_2378( -612753081, uParam1 );
        sub_2378( -1074756423, uParam1 );
        break;
        case 7:
        case 8:
        case 9:
        sub_2378( -110877124, uParam1 );
        sub_2378( -1980065396, uParam1 );
        sub_2378( -168327769, uParam1 );
        sub_2378( 1194438308, uParam1 );
        sub_2378( -612753081, uParam1 );
        sub_2378( -1074756423, uParam1 );
        sub_2378( 1308526797, uParam1 );
        break;
    }
    return;
}

void sub_2378(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_2796()
{
    sub_1048( "GA", "P_SETUP_STATIC_DATA start", 0 );
    sub_2873( ref l_U393[0], l_U444, l_U453, -1015047309, 7, 3, 2, 0, 0 );
    sub_2873( ref l_U393[1], l_U447, l_U454, 1003622787, 7, 3, 2, 0, 0 );
    sub_2873( ref l_U393[2], l_U450, l_U455, 379492490, 7, 3, 2, 0, 0 );
    sub_2873( ref l_U504, 80.78976000, 15.08299000, 4.75393300, 0, 1243612658, 7, 3, 2, 0, 0 );
    sub_2873( ref l_U519, 80.77718000, 19.12700000, 1.80014300, 80.00000000, 1830887211, 7, 3, 2, 0, 0 );
    sub_2873( ref l_U534, 88.93834000, 13.64053000, 1.80000000, 0, 1280344819, 7, 3, 2, 0, 0 );
    sub_2873( ref l_U795, 98.75500000, 18.39440000, 1.80000000, 99.06937000, 1934291, 7, 3, 2, 0, 0 );
    sub_2873( ref l_U809, 105.45380000, 21.69389000, 1.80000000, 165.44360000, -163944303, 7, 3, 2, 0, 0 );
    sub_2873( ref l_U823, 105.29720000, 14.13414000, 1.80000000, 92.60873000, 250924998, 7, 3, 2, 0, 0 );
    sub_2873( ref l_U879, 99.46000000, 34.66000000, 1.80000000, 165.77000000, 1054060686, 7, 3, 2, 0, 0 );
    sub_2873( ref l_U893, 96.03421000, 38.41009000, 1.74396200, 260, -862974661, 7, 3, 2, 0, 0 );
    sub_2873( ref l_U844, 102.51680000, 42.29248000, 3.35028100, 180, 1622600241, 7, 3, 2, 0, 0 );
    sub_2873( ref l_U913[0], 96.93000000, 36.27000000, 1.76000000, 265, 2087017195, 7, 3, 2, 0, 0 );
    sub_2873( ref l_U913[1], 96.11500000, 36.32000000, 1.76000000, 265, 1176748703, 7, 3, 2, 0, 0 );
    sub_2873( ref l_U1071, 86.40000000, 46.36000000, 1.80000000, 285, 1541475021, 7, 3, 2, 0, 0 );
    sub_3587( ref l_U555, "TRIGGER_SECTION1_SHORTWAY", 66.80000000, 11.76000000, 1.53000000, 2.00000000, 9.00000000, 2.25000000, 0.00000000, 0.00000000, 20.00000000, 1 );
    sub_3587( ref l_U669, "TRIGGER_SECTION1_STANDAROUND", 61.70000000, 9.22000000, 1.53000000, 3.59000000, 2.23000000, 2.25000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3587( ref l_U576, "TRIGGER_SECTION1_LOWROAD", 79.60000000, 17.85500000, 1.53000000, 6.00000000, 8.00000000, 7.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3587( ref l_U597, "TRIGGER_SECTION1_HIGHROAD", 83.80000000, 10.50000000, 1.53000000, 2.07000000, 3.42000000, 5.51000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3587( ref l_U691, "TRIGGER_SECTION1_PUNISHPLAYERAGAIN", 62.88000000, 14.72000000, 1.53000000, 22.12000000, 14.87000000, 3.25000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3587( ref l_U618, "TRIG_FREE_CORNER_COVER", 70.80000000, 19.68000000, 1.53000000, 8.49000000, 5.02000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3587( ref l_U639, "TRIG_SEC2_TIMER", 88.97000000, 13.87000000, 1.60000000, 5.00000000, 6.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3587( ref l_U756, "TRIG_SECTION2_CHOKEPOINT", 93.39000000, 14.88000000, 1.60000000, 4.00000000, 4.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3587( ref l_U1006, "TRIGGER_SECTION3_FORKLIFTYARD", 99.42000000, 17.69000000, 1.53000000, 2.50000000, 3.59000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3587( ref l_U985, "TRIG_SECTION3_CORNER_START", 100.16000000, 16.33000000, 1.53000000, 7.90000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, -87.54000000, 1 );
    sub_3587( ref l_U1027, "TRIGGER_SECTION3_FORKLIFTYARDSTART", 100.03000000, 37.15000000, 1.00000000, 8.01000000, 4.00000000, 5.11000000, 0.00000000, 0.00000000, 24.00000000, 1 );
    sub_3587( ref l_U943, "TRIGGER_SECTION3_ACTIVATE", 101.70000000, 23.65000000, 1.53000000, 4.00000000, 4.40000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3587( ref l_U964, "TRIGGER_TACTICAL_COVER_ACTIVATE", 96.93000000, 23.87000000, 1.53000000, 4.00000000, 4.40000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3587( ref l_U858, "TRIG_LUMBER_PILE", 102.40400000, 41.96000000, 3.00000000, 2.25000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3587( ref l_U1137, "TRIGGER_BOX_GARAGE_ALLEY", 90.59000000, 49.09000000, 1.80000000, 6.00000000, 9.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3587( ref l_U1115, "TRIGGER_YARD_ALLEY_ENTRY", 87.40000000, 48.96000000, 1.75000000, 3.43000000, 8.82000000, 4.13000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3587( ref l_U1050, "TRIGGER_FORCE_WALK_MID_05", 65.43000000, 46.12000000, 1.64000000, 7.00000000, 3.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3587( ref l_U1158, "TRIG_GARAGE_HALFWAY", 65.40000000, 50.35000000, 1.64000000, 2.00000000, 6.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3587( ref l_U353, "TRIGGER_GARAGE_EXTERIOR", 70.14000000, 62.42600000, -0.60000000, 20.00000000, 10.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5233( ref l_U1048, "TETH_FORKLIFT_YARD", 98.79000000, 32.90000000, 1.00000000, 25.83000000, 40.55000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5322( ref l_U485, 1.00000000, 237.85000000, 123.73000000, 90.71000000, 1, 1, 1000, 1056964608, 0 );
    MARK_COVERPOINTMP3_SEARCHABLE( "ma_sec3", "YARD_CC_49", 1 );
    MARK_COVERPOINTMP3_SEARCHABLE( "ma_sec3", "Corner_Position05", 1 );
    MARK_COVERPOINTMP3_SEARCHABLE( "ma_sec3", "Corner_Position02", 1 );
    MARK_COVERPOINTMP3_SEARCHABLE( "ma_sec2", "SLP_WAREHOUSE_CC_87", 1 );
    sub_1048( "GA", "P_SETUP_STATIC_DATA end", 0 );
    return;
}

void sub_2873(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_3587(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_5233(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_5322(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_1048( "BSW", "[SP]### P_CreateLightning ###", 0 );
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = uParam5;
    iParam0->_fU20 = uParam6;
    iParam0->_fU60 = uParam7;
    iParam0->_fU64 = uParam8;
    iParam0->_fU68 = uParam9;
    return;
}

void sub_5635()
{
    sub_1048( "GA", "INITIALIZE_SCRIPT_DATA start", 0 );
    l_U374 = 0;
    g_U1011 = 0;
    g_U1010 = 0;
    l_U457 = 0;
    ENABLE_STATIC_EMITTER( "CRATE_ROOM_MUSIC", 1 );
    l_U462 = 0;
    l_U463 = 0;
    l_U464 = 0;
    l_U443 = 0;
    l_U503 = 0;
    l_U518 = 0;
    l_U533 = 0;
    l_U548 = 0;
    l_U690 = 0;
    l_U749 = 0;
    l_U750 = 0;
    l_U751 = 0;
    l_U752 = 0;
    l_U754 = 0;
    l_U753 = 0;
    l_U843 = 0;
    l_U1049 = 0;
    l_U755 = 0;
    l_U1316 = 0;
    l_U1085 = 0;
    sub_5867( ref l_U476, 1000, 1, 0 );
    sub_5867( ref l_U786, 3000, 1, 0 );
    l_U1095 = 0;
    l_U1091 = 0;
    l_U1092 = 0;
    l_U1090 = 0;
    l_U1104 = 0;
    l_U1089 = 3;
    l_U375 = 1;
    l_U376 = 0;
    l_U1312 = 0;
    l_U1313 = 0;
    l_U1191 = -1;
    l_U1190 = 0;
    l_U1100[0] = 0;
    l_U1100[1] = 0;
    l_U1100[2] = 0;
    l_U475 = 0;
    sub_6122( ref l_U730 );
    sub_1048( "GA", "INITIALIZE_SCRIPT_DATA end", 0 );
    return;
}

void sub_5867(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_6122(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_6281()
{
    vector vVar2;
    vector vVar5;

    sub_6315( "P_CREATE_PLACEMENTS", 0, 0 );
    sub_6387();
    if (NOT l_U1316)
    {
        vVar2 = {58.25000000, 3.90000000, 2.11000000};
        vVar5 = {-0.40000000, 0.00000000, 1.30000000};
        sub_6881( l_U1315 );
        l_U1315 = sub_6949( 843762214, vVar2, vVar5, 1, 0, 0, 1119092736 );
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1315, "Trns_Room_Stortrans" );
    }
    sub_6881( l_U1314 );
    l_U1314 = CREATE_AMMOBAG_PLACEMENT_ROTATE( 58.00000000, 4.34000000, 2.00000000, 0, 0, 0, 0, -1.00000000, 0, 1119092736 );
    sub_7384( l_U1314 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1314, "Trns_Room_Stortrans" );
    return;
}

void sub_6315(unknown uParam0, string sParam1, string sParam2)
{
    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "ML";
    }
    if (IS_STRING_NULL( sParam1 ))
    {
        sParam1 = "---";
    }
    sub_1048( sParam2, uParam0, sParam1 );
    return;
}

void sub_6387()
{
    sub_1048( "CO", "P_CREATE_S_MAR_GG_9M_02", 0 );
    sub_6486( ref g_U683, g_U774, -1306471529, 1901108184, 83.69000000, 10.56000000, 4.80000000, 0.00000000, 0.00000000, 1.00000000, "" );
    sub_6615( ref g_U683 );
    return;
}

void sub_6486(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_1048( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_6615(int iParam0)
{
    sub_1048( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_6676( iParam0->_fU12 )) == 1)
        {
            sub_1048( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_1048( "CO", "has never been collected.", 0 );
        }
        if ((sub_6676( iParam0->_fU12 )) == 0)
        {
            sub_6881( iParam0->_fU0 );
            iParam0->_fU0 = sub_6949( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_1048( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_1048( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_6676(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_6881(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_6949(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_7384(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        SET_AMMOBAG_REGEN_TIME( uParam0, 10.00000000 );
        SET_AMMOBAG_REGEN_RANGE( uParam0, 3.00000000 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1088031219, 45 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 954369040, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1138793073, 95 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1087746638, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1295933220, 30 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1383321053, 85 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1481241171, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1889644301, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -790090695, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1742569970, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1575030772, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1622373246, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 558118158, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1701914198, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1126469201, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 936600426, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 205668857, 0 );
    }
    return;
}

void sub_7749()
{
    sub_1048( "GA", "P_CY_PRE_LOAD_CARD_PLAYER_ASSETS start", 0 );
    sub_1761( -219356027, 0 );
    sub_1048( "GA", "P_CY_PRE_LOAD_CARD_PLAYER_ASSETS end", 0 );
    return;
}

int sub_7950(unknown uParam0)
{
    sub_1048( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_8141( uParam0, sub_8075() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

int sub_8075()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_8097() );
    }
    return 0;
}

void sub_8097()
{
    return GET_PLAYER_ID();
}

void sub_8141(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_1048( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_8325( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_9402( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_9694( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_10041( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_9694( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_10041( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_9694( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_10041( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_10326( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_10041( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_10326( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_10041( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_10819( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_10980( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_8075(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_1048( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_8325(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_8357( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_8357(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_9402(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_9694(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_1271( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_10041(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_10326(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_1271( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_10819(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_10980(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_8357( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_11052( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_11052(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_12403(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_12778()
{
    sub_1048( "GA", "P_START_GAMEPLAY start", 0 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    sub_12838( ref g_U1460, 1 );
    sub_12838( ref g_U1453, 1 );
    sub_13054( ref g_U1467, 0 );
    sub_13118( ref g_U1467, 1 );
    if (NOT (DOES_OBJECT_EXIST( g_U1532 )))
    {
        sub_13261();
    }
    sub_13784();
    sub_14392();
    sub_14499();
    sub_1048( "GA", "P_START_GAMEPLAY end", 0 );
    return;
}

void sub_12838(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_12850( iParam0 )) == 0)
    {
        sub_12916( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

int sub_12850(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_12916(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_13054(int iParam0, unknown uParam1)
{
    if ((sub_12850( iParam0 )) == 0)
    {
        sub_12916( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_LATCH( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

void sub_13118(int iParam0, int iParam1)
{
    if ((sub_12850( iParam0 )) == 0)
    {
        sub_12916( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

void sub_13261()
{
    sub_1048( "SP", "P_CREATE_WH_GARAGEDOOR", "###" );
    sub_13317( g_U1532 );
    g_U1532 = sub_13386( g_U1063, g_U1656, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );
    if ((DOES_OBJECT_EXIST( g_U1532 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U1532, ref g_U1178 );
        FREEZE_OBJECT_POSITION( g_U1532, 1 );
        PLAY_OBJECT_ANIM( g_U1532, "p_ma_botdor_aa_h", ref g_U1138, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( g_U1532, "p_ma_botdor_aa_h", ref g_U1138, 0 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U1532, "p_ma_botdor_aa_h", ref g_U1138, 0.10000000 );
    }
    return;
}

void sub_13317(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_13386(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_1502( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_13784()
{
    sub_1048( "GA", "P_CREATE_YARD_PROPS start", 0 );
    sub_13317( l_U1093 );
    l_U1093 = sub_13386( g_U1056, 103.48000000, 31.54000000, 3.12000000, 0.00000000, 90.00000000, 0.00000000, 0, 1, 0 );
    SET_OBJECT_HEALTH( l_U1093, 60 );
    SET_OBJECT_TARGETTABLE( l_U1093, 1 );
    CAMERA_CAN_TARGET_OBJECT( 1, l_U1093 );
    SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( l_U1093, 1 );
    FREEZE_OBJECT_POSITION( l_U1093, 1 );
    l_U1094 = sub_13997( g_U1064, 103.68800000, 33.01800000, 1.83600000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U1094 ))
    {
        SET_OBJECT_PROOFS( l_U1094, 1, 0, 0, 1, 1 );
        ENABLE_COVERPOINTMP3( "GenCover", "DB17D472_B7A5FF90_Corner1", 1 );
        ENABLE_COVERPOINTMP3( "GenCover", "DB17D472_B7A5FF90_Corner2", 1 );
    }
    sub_1048( "GA", "P_CREATE_YARD_PROPS end", 0 );
    return;
}

void sub_13997(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_1502( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_14392()
{
    sub_14431( ref l_U1096[2], -1784229265, g_U1570, 0, 0, g_U1575, 1, 1 );
    return;
}

void sub_14431(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_13317( (uParam0^) );
    (uParam0^) = sub_13997( uParam1, uParam2, uParam5, 0, uParam9, 0 );
    FREEZE_OBJECT_POSITION( (uParam0^), uParam8 );
    return;
}

void sub_14499()
{
    int I;

    sub_1048( "GA", "P_CY_CREATE_CARDPLAYER_CS start", 0 );
    sub_14564( ref l_U437, 1056964608, 0 );
    for ( I = 0; I <= 2; I++ )
    {
        l_U433[I] = sub_14756( ref l_U393[I] );
        if (sub_15425( l_U433[I] ))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U433[I], 1 );
            FREEZE_PED_POSITION( l_U433[I], 0 );
        }
        sub_15529( ref l_U433[I], ref g_U1602, 5, 10, 1 );
        sub_15780( l_U433[I], ref l_U437 );
        SET_PED_ALERTNESS( l_U433[I], 3 );
        sub_16066( ref l_U433[I] );
        SET_PED_PATH_CAN_AVOID_DYNAMIC_OBJECTS( l_U433[I], 0 );
    }
    sub_16243( ref l_U433, "CS_CardPlayer " );
    if ((IS_PED_DEAD( l_U433[0] )) == 0)
    {
        sub_10326( l_U433[0], -1074756423, 25000, 0, 0 );
        sub_9694( l_U433[0], -612753081, 0, 25000, 0 );
    }
    if ((IS_PED_DEAD( l_U433[1] )) == 0)
    {
        sub_10326( l_U433[1], 68019059, 25000, 0, 0 );
    }
    if ((IS_PED_DEAD( l_U433[2] )) == 0)
    {
        sub_10326( l_U433[2], -1074756423, 25000, 0, 0 );
    }
    sub_1048( "GA", "P_CY_CREATE_CARDPLAYER_CS end", 0 );
    return;
}

void sub_14564(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_14756(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_1502( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_15235( iParam0->_fU40 );
    sub_15315( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_15235(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_15315(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

int sub_15425(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (DOES_PED_EXIST( uParam0 )))
    {
        return 1;
    }
    return 0;
}

void sub_15529(unknown uParam0, unknown uParam1, float fParam2, float fParam3, boolean bParam4)
{
    sub_15566( "MAL_SetTemplateAndRanges" );
    sub_1271( uParam1 );
    sub_15602( fParam2 );
    sub_15602( fParam3 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    if (NOT bParam4)
    {
        sub_15711( uParam0, 1, 0 );
    }
    return;
}

void sub_15566(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    return;
}

void sub_15602(unknown uParam0)
{
    return;
}

void sub_15711(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_ATTRIBUTES( (uParam0^), uParam1, uParam2 );
    }
    return;
}

void sub_15780(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_1271( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_14564( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_14564( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_16066(unknown uParam0)
{
    if ((sub_16084()) AND (sub_15425( (uParam0^) )))
    {
        sub_16135( uParam0, sub_8075() );
    }
    return;
}

int sub_16084()
{
    if (sub_15425( sub_8075() ))
    {
        return 1;
    }
    return 0;
}

void sub_16135(unknown uParam0, unknown uParam1)
{
    if ((sub_15425( uParam1 )) AND (sub_15425( (uParam0^) )))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_16243(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_16634()
{
    if (g_U789 == 4)
    {
        if ((sub_16670()) || ((IS_PED_DEAD( sub_8075() )) == 1))
        {
            sub_1048( "SBA", "Player died or is restarting container yard checkpoint", "***" );
            if (sub_17177())
            {
                ;
            }
            else
            {
                sub_17211( 1 );
                while ((sub_17274( 0 )) == 0)
                {
                    WAIT( 0 );
                }
                while ((IS_PED_DEAD( sub_8075() )) == 1)
                {
                    WAIT( 0 );
                }
            }
            if ((IS_PLAYER_DEAD( sub_8097() )) == 0)
            {
                SET_PLAYER_CONTROL( sub_8097(), 0, 0 );
            }
            if (IS_DEATH_PANEL_WIPE_ALLOWED() == 0)
            {
                DO_SCREEN_FADE_OUT( 0 );
            }
            sub_18464();
            sub_18537();
            sub_8141( ref l_U317, sub_8075() );
            FREEZE_PED_POSITION( sub_8075(), 1 );
            sub_1048( "SBA", "Reloading garage interior.", "***" );
            l_U458 = GET_INTERIOR_AT_COORDS( g_U790[4] );
            LOAD_SCENE_FOR_ROOM_BY_KEY( l_U458, GET_HASH_KEY( "trns_Room_Stortrans" ) );
            LOAD_SCENE( g_U790[4] );
            MARK_INTERIOR_COLLISION_REQUIRED( l_U458 );
            sub_2796();
            sub_5635();
            sub_6281();
            sub_7749();
            sub_12778();
            l_U376 = 2;
            sub_2005( "Mid_04_Docks_PT1_Blendout", 0, 1 );
            sub_1502( -72345008, 1 );
            sub_12838( ref g_U1481, 0 );
            g_U1228 = 1;
            g_U789 = 4;
            sub_19798( ref g_U1236[5] );
            while ((GET_NUMBER_OF_THREADS_RUNNING_THIS_SCRIPT( "s_marina_BoatRepair" )) > 0)
            {
                sub_1048( "SBA", "Waiting for boat repair to unload...", "***" );
                WAIT( 0 );
            }
            while ((GET_STABLE_NUM_OF_STREAMING_REQUESTS() > 0) AND (GET_NUMBER_OF_STREAMING_REQUESTS() > 0))
            {
                sub_1048( "SBA", "Waiting for streaming...", "***" );
                WAIT( 0 );
            }
            l_U375 = 2;
            g_U1228 = 0;
            if ((IS_PLAYER_DEAD( sub_8097() )) == 0)
            {
                SET_PLAYER_CONTROL( sub_8097(), 1, 0 );
            }
            FREEZE_PED_POSITION( sub_8075(), 0 );
            if (IS_DEATH_PANEL_WIPE_ALLOWED())
            {
                DO_SCREEN_FADE_IN( 0 );
            }
        }
    }
    return;
}

int sub_16670()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_8075() )))
        {
            SET_PED_FORCED_TO_WALK( sub_8075(), 0 );
            SET_PLAYER_FORCED_AIM( sub_8097(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_8097(), 1 );
            if ((IS_PED_VISIBLE( sub_8075() )) == 0)
            {
                SET_PED_VISIBLE( sub_8075(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_17177()
{
    return g_U648;
}

void sub_17211(unknown uParam0)
{
    sub_1048( "NS", "P_SETUP_PLAYER_DEATH_CAM()", 0 );
    uParam0 = uParam0;
    return;
}

int sub_17274(int iParam0)
{
    iParam0 = 1;
    switch (l_U306)
    {
        case 0:
        if (NOT (sub_17335( ref l_U308 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_8075() )))
            {
                l_U307 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_5867( ref l_U308, l_U307, 1, 1 );
            sub_17454( ref l_U308 );
        }
        if (sub_17574( ref l_U308 ))
        {
            sub_1048( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_8075() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_8097() )))
            {
                SET_PLAYER_CONTROL( sub_8097(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U306 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U306 = 2;
            }
            else
            {
                l_U306 = 3;
            }
        }
        break;
        case 2:
        sub_1048( "NS", "Player will QUIT", 0 );
        sub_18061();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_1048( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_18061();
        return 1;
        break;
    }
    return 0;
}

int sub_17335(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_17454(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_17574(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_18061()
{
    sub_1048( "NS", "P_PostFailRetryCleanup", 0 );
    sub_6122( ref l_U308 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_8097() )))
    {
        SET_PLAYER_CONTROL( sub_8097(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U305 = 0;
    l_U305 = l_U305;
    l_U306 = 0;
    return;
}

void sub_18464()
{
    sub_1048( "NS", "P_CLEAN_UP_DEATHCAM()", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    DESTROY_ALL_CAMS();
    return;
}

void sub_18537()
{
    sub_1048( "GA", "P_CLEANUP_ALL start", 0 );
    sub_6122( ref l_U730 );
    STOP_SOUND( l_U1317, 0 );
    STOP_SOUND( l_U1319, 0 );
    STOP_SOUND( l_U1318, 0 );
    STOP_SCRIPT_STREAM( 0 );
    ENABLE_WALLA_ZONE( "S_MARINA_WZ_CONTAINER_YARD", 0 );
    CLEAR_INTERIOR_COLLISION_REQUIRED( GET_INTERIOR_AT_COORDS( g_U790[4] ) );
    sub_18702( -219356027, 0 );
    sub_6881( l_U1315 );
    sub_6881( l_U1314 );
    sub_6881( g_U683._fU0 );
    sub_13317( g_U1532 );
    sub_13317( l_U1189 );
    sub_18953();
    sub_19001();
    sub_19327( ref l_U1096 );
    sub_19389( l_U392 );
    sub_19389( l_U391 );
    sub_1048( "GA", "P_CLEANUP_ALL end", 0 );
    return;
}

void sub_18702(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_18953()
{
    sub_13317( l_U1093 );
    sub_13317( l_U1094 );
    sub_13317( l_U456 );
    return;
}

void sub_19001()
{
    sub_1048( "SBA", "P_CLEAN_ALL_CY_PEDS", 0 );
    sub_19053( l_U433[0] );
    sub_19053( l_U433[1] );
    sub_19053( l_U433[2] );
    sub_19053( l_U517 );
    sub_19053( l_U532 );
    sub_19053( l_U547 );
    sub_19053( l_U808 );
    sub_19053( l_U822 );
    sub_19053( l_U836 );
    sub_19053( l_U857 );
    sub_19053( l_U892 );
    sub_19053( l_U906 );
    sub_19247( ref l_U940 );
    sub_19053( l_U1084 );
    return;
}

void sub_19053(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_19247(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_19053( (uParam0^)[I] );
    }
    return;
}

void sub_19327(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_13317( (uParam0^)[I] );
    }
    return;
}

void sub_19389(unknown uParam0)
{
    if ((CUTSCENE_NAMED_IS_LOADING( uParam0 )) || (CUTSCENE_IS_LOADED( uParam0 )))
    {
        sub_1048( "SBA", "Clearing cutscene:", 0 );
        sub_1271( uParam0 );
        CLEAR_NAMED_CUTSCENE( uParam0 );
    }
    return;
}

void sub_19798(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_20104()
{
    unknown uVar2;

    sub_20114();
    if (NOT l_U462)
    {
        l_U462 = 1;
        if ((NOT l_U474) AND (g_U788 < 4))
        {
            sub_20414();
            l_U474 = 1;
        }
        else
        {
            sub_21557();
        }
        sub_22108();
        g_U789 = 4;
        if (NOT l_U317._fU0)
        {
            sub_22827( ref l_U317, g_U789, sub_8075(), g_U790[4], g_U899[4], g_U936[4], g_U973[4], 1 );
        }
        sub_1048( "BSW", "kick the fight off", 0 );
        l_U463 = 1;
    }
    if (l_U464)
    {
        if (sub_26483( l_U691 ))
        {
            sub_1048( "SBA", "Max left garage!  Resetting viewmode.", 0 );
            SET_CAM_VIEW_MODE( 1 );
            STOP_SCRIPT_STREAM( 0 );
            l_U464 = 0;
        }
    }
    if (sub_17574( ref l_U465 ))
    {
        if (sub_16084())
        {
            SET_PLAYER_FORCED_AIM( sub_8097(), 0, 0 );
        }
    }
    sub_26676();
    sub_27016();
    if (NOT l_U503)
    {
        sub_27268();
        l_U503 = 1;
    }
    if (NOT l_U518)
    {
        sub_28052();
        sub_22710( ref l_U712, 12000 );
    }
    if (sub_17574( ref l_U712 ))
    {
        sub_1048( "SBA", "tPlayerTooSlow timer has gone off", "***" );
        l_U749 = 1;
    }
    if ((NOT l_U690) AND ((l_U463 == 1) AND (l_U503 == 1)))
    {
        sub_5867( ref l_U660, 5000, 1, 0 );
        sub_17454( ref l_U660 );
    }
    if ((sub_26501( sub_8075(), l_U669 )) AND ((l_U533 == 0) AND ((sub_17574( ref l_U660 )) == 1)))
    {
        sub_29583();
    }
    if (l_U749)
    {
        if (NOT l_U750)
        {
            sub_29946( l_U808, 96.12415000, 16.61239000, 1.80000000, 0, 0 );
            sub_28882( ref l_U808, 3, 15 );
            sub_30202( l_U822, "GenCover", "DB17D472_B4AF2198_Corner1", 0, 1 );
            sub_30202( l_U836, "ma_sec3", "YARD_CC_53", 0, 1 );
            l_U750 = 1;
        }
        if (NOT l_U751)
        {
            if (sub_30354())
            {
                sub_30504( l_U547 );
                sub_28882( ref l_U547, 3, 30 );
                sub_1048( "SBA", "Starting tPlayerStillTooSlow timer", 0 );
                sub_22710( ref l_U721, 15000 );
                l_U751 = 1;
            }
            else if (sub_26483( l_U576 ))
            {
                if (sub_15425( l_U547 ))
                {
                    CLEAR_PED_TASKS( l_U547 );
                    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U547, 0 );
                    l_U751 = 1;
                }
            }
        }
        else if (NOT l_U752)
        {
            if (IS_PED_DEAD( l_U547 ))
            {
                if (sub_17574( ref l_U721 ))
                {
                    sub_1048( "SBA", "tPlayerStillTooSlow timer has gone off", 0 );
                    sub_30863( ref l_U808, 0 );
                    sub_30504( l_U808 );
                    l_U752 = 1;
                }
            }
        }
        if (sub_30927( ref l_U597, 0 ))
        {
            sub_1048( "SBA", "Hit tbSection1HighRoad", "***" );
            sub_31070();
            sub_31371();
        }
        if (sub_30927( ref l_U639, 0 ))
        {
            sub_17454( ref l_U786 );
            sub_1048( "SBA", "tbSec2Timer timer has started", "***" );
        }
        if (NOT l_U754)
        {
            if ((sub_17574( ref l_U786 )) || (sub_26483( l_U756 )))
            {
                sub_1048( "SBA", "Freeing up last two sec2 guys", "***" );
                sub_30863( ref l_U808, 0 );
                sub_30863( ref l_U822, 0 );
                sub_30236( ref l_U822, 0 );
                sub_30863( ref l_U836, 0 );
                sub_30236( ref l_U836, 0 );
                l_U754 = 1;
            }
        }
    }
    else if (sub_30927( ref l_U576, 0 ))
    {
        sub_1048( "SBA", "Hit tbSection1LowRoad", "***" );
        sub_6122( ref l_U712 );
        sub_32032();
        sub_5867( ref l_U777, 4000, 1, 0 );
        sub_17454( ref l_U777 );
    }
    if (sub_30927( ref l_U597, 0 ))
    {
        sub_1048( "SBA", "Hit tbSection1HighRoad", "***" );
        sub_31070();
        sub_31371();
    }
    if (sub_17574( ref l_U777 ))
    {
        sub_31445( l_U808, 94.96800000, 14.76400000, 1.80000000, 1, 0 );
        sub_31445( l_U822, 97.31000000, 16.07700000, 1.80000000, 1, 0 );
    }
    if (sub_30927( ref l_U756, 0 ))
    {
        sub_31445( l_U836, 100.43400000, 17.59300000, 1.80000000, 1, 0 );
    }
    if ((l_U751) AND (NOT l_U753))
    {
        if (sub_15425( l_U547 ))
        {
            if (sub_30927( ref l_U618, 0 ))
            {
                sub_32137( ref l_U547, sub_8075() );
                l_U753 = 1;
            }
        }
    }
    if (sub_30927( ref l_U1006, 0 ))
    {
        sub_32540();
        CLEAR_INTERIOR_COLLISION_REQUIRED( GET_INTERIOR_AT_COORDS( g_U790[4] ) );
    }
    if (sub_30927( ref l_U985, 0 ))
    {
        sub_31445( l_U892, 95.58789000, 26.82498000, 1.79997600, 1, 1 );
    }
    if (sub_30927( ref l_U964, 0 ))
    {
        sub_1048( "SBA", "Player is in tbSection3TacticalCoverActivate", 0 );
        sub_33658( l_U940[1] );
        sub_30236( ref l_U940[0], 0 );
    }
    if (sub_30927( ref l_U943, 0 ))
    {
        sub_33783();
    }
    if (sub_30927( ref l_U1027, 0 ))
    {
        sub_1048( "SBA", "Player is in tbSection3ForkliftYardStart", 0 );
        g_U1011 = 1;
        l_U1049 = 1;
        ENABLE_WALLA_ZONE( "S_MARINA_WZ_CONTAINER_YARD", 0 );
    }
    if (NOT l_U1085)
    {
        if (sub_34531() <= 1)
        {
            l_U1089 = 2;
            l_U1085 = 1;
        }
        else if (l_U1049)
        {
            l_U1089 = 0;
            l_U1085 = 1;
        }
    }
    if (l_U1089 != 3)
    {
        sub_34959();
    }
    else if ((NOT l_U1104) AND (l_U1085))
    {
        if ((sub_36329( ref g_U1467 )) > 0.40000000)
        {
            sub_1048( "SBA", "Opening and latching the final gate", 0 );
            sub_35425( ref g_U1467, 1, 0, 1065353216 );
            sub_13054( ref g_U1467, 1 );
            l_U1104 = 1;
        }
    }
    if (NOT l_U1091)
    {
        if (sub_34531() <= 1)
        {
            sub_36516();
            l_U1091 = 1;
        }
    }
    if (sub_34531() == 0)
    {
        l_U376 = 5;
        if (l_U475 == 0)
        {
            sub_22710( ref l_U730, 40000 );
            l_U475 = 1;
        }
    }
    if (sub_17574( ref l_U730 ))
    {
        sub_37223( "SMAR_MHTKMB", ref l_U739 );
    }
    if (sub_30927( ref l_U691, 0 ))
    {
        sub_17454( ref l_U476 );
    }
    if (sub_17574( ref l_U476 ))
    {
        sub_38427( ref l_U485 );
    }
    sub_38614( ref l_U485 );
    sub_38690();
    if (sub_30927( ref l_U1137, 0 ))
    {
        sub_38912( g_U1663 );
        sub_39079();
        sub_39685( ref l_U730 );
    }
    if (sub_30927( ref l_U1115, 0 ))
    {
        sub_39730();
    }
    if (l_U1312 == 0)
    {
        if (sub_16084())
        {
            if (sub_26483( l_U1050 ))
            {
                uVar2 = GET_WEAPON_FROM_HAND( sub_8075(), 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
                {
                    if ((sub_40124( uVar2 )) == 1)
                    {
                        sub_40411( 0 );
                    }
                }
            }
            if (sub_40954( l_U1050, l_U1158, 1 ))
            {
                sub_19001();
                sub_18953();
                sub_41264( 1 );
                sub_41675();
                sub_12838( ref g_U1481, 1 );
                if (sub_16084())
                {
                    SET_PED_FORCED_TO_WALK( sub_8075(), 0 );
                }
                l_U1312 = 1;
                l_U374 = 1;
            }
        }
    }
    return;
}

void sub_20114()
{
    if (l_U457 == 0)
    {
        sub_1048( "GA", "Creating Stereo prop.", 0 );
        sub_1502( -72345008, 1 );
        l_U456 = sub_13386( -72345008, 63.51000000, 19.05000000, 2.64000000, 0.00000000, 0.00000000, 15.00000000, 0, 0, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U456, ref g_U1184 );
        l_U457 = 1;
    }
    if ((DOES_OBJECT_EXIST( l_U456 )) == 1)
    {
        if ((HAS_OBJECT_BEEN_DAMAGED( l_U456 )) == 1)
        {
            sub_1048( "GA", "Stereo prop damaged, turning off music.", 0 );
            ENABLE_STATIC_EMITTER( "CRATE_ROOM_MUSIC", 0 );
        }
    }
    return;
}

void sub_20414()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;

    sub_1048( "SBA", "P_PLAY_CUTSCENE_MID_04_DOCKS start", 0 );
    sub_20477( 1, 0, 0, 0 );
    sub_20637( 0 );
    sub_12403( l_U392, 1 );
    sub_1761( -219356027, 1 );
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U1063, g_U1656 );
    if (sub_16084())
    {
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( sub_8075(), 0, 0 ), "W_PI_38_ba_h", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( sub_8075(), g_U790[4], 0.00000000 );
    }
    ISEQ_REGISTER_ENTITY( -219356027, "cs_cont_1", l_U433[0], 0 );
    ISEQ_REGISTER_ENTITY( -219356027, "cs_cont_2", l_U433[1], 0 );
    ISEQ_REGISTER_ENTITY( -219356027, "cs_cont_3", l_U433[2], 0 );
    ISEQ_REGISTER_ENTITY( -219356027, "max", sub_8075(), 0 );
    CUTSCENE_REGISTER_ISEQ( -219356027 );
    START_SEAMLESS_CUTSCENE();
    WAIT( 1 );
    SET_CAM_VIEW_MODE( 0 );
    DO_SCREEN_FADE_IN( 0 );
    sub_21052( ref uVar2, 61.46722000, 3.41898600, 3.61960100, 0.00000000, 0.00000000, -9.99994800, 1110704128, 1000 );
    sub_21260( ref uVar2 );
    while (NOT HAS_CUTSCENE_FINISHED())
    {
        WAIT( 0 );
    }
    sub_21408( g_U1532, "p_ma_botdor_aa_h", ref g_U1138, 3.50000000, 0.15000000 );
    sub_1048( "SBA", "P_PLAY_CUTSCENE_MID_04_DOCKS end", 0 );
    return;
}

void sub_20477(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_8075() )))
        {
            SET_PLAYER_CONTROL( sub_8097(), 0, uParam2 );
            SET_PED_DUCKING( sub_8075(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_8075() );
            }
            SET_PED_INVINCIBLE( sub_8075(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_20637(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

void sub_21052(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_5867( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U649, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_21260(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_17454( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

void sub_21408(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        PLAY_OBJECT_ANIM( uParam0, uParam1, uParam2, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( uParam0, uParam1, uParam2, uParam4 );
        SET_OBJECT_ANIM_SPEED( uParam0, uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_21557()
{
    sub_1048( "SBA", "P_SETUP_MID04_BLENDOUT_NO_CUTSCENE", 0 );
    sub_1761( -219356027, 1 );
    ISEQ_REGISTER_ENTITY( -219356027, "cs_cont_1", l_U433[0], 0 );
    ISEQ_REGISTER_ENTITY( -219356027, "cs_cont_2", l_U433[1], 0 );
    ISEQ_REGISTER_ENTITY( -219356027, "cs_cont_3", l_U433[2], 0 );
    ISEQ_REGISTER_ENTITY( -219356027, "max", sub_8075(), 0 );
    sub_21770( g_U790[4], 0.00000000, 0, 0 );
    ISEQ_START( -219356027 );
    sub_21408( g_U1532, "p_ma_botdor_aa_h", ref g_U1138, 2.27000000, 0.24200000 );
    sub_21975( l_U433[0], l_U393[0]._fU0, l_U393[0]._fU12 );
    sub_21975( l_U433[1], l_U393[1]._fU0, l_U393[1]._fU12 );
    sub_21975( l_U433[2], l_U393[2]._fU0, l_U393[2]._fU12 );
    return;
}

void sub_21770(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 = sub_8075();
    sub_21796( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

void sub_21796(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_21975(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_22108()
{
    sub_1048( "SBA", "P_RUN_MID04_BLENDOUT", 0 );
    sub_21975( l_U433[0], l_U393[0]._fU0, l_U393[0]._fU12 );
    sub_21975( l_U433[1], l_U393[1]._fU0, l_U393[1]._fU12 );
    sub_21975( l_U433[2], l_U393[2]._fU0, l_U393[2]._fU12 );
    if (IS_SCREEN_FADED_OUT())
    {
        DO_SCREEN_FADE_IN( 0 );
    }
    PLAY_SCRIPT_STREAM_FRONTEND( 0 );
    SET_CAM_VIEW_MODE( 0 );
    if (sub_16084())
    {
        SET_PLAYER_FORCED_AIM( sub_8097(), 1, 0 );
    }
    sub_22332( 500, 1, 0, -10.00000000, 0.00000000, 0 );
    sub_22431( 1, 0 );
    WAIT( 1 );
    sub_22710( ref l_U465, 3000 );
    l_U464 = 1;
    return;
}

void sub_22332(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

void sub_22431(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_8075() )))
    {
        SET_PLAYER_CONTROL( sub_8097(), 1, 0 );
        SET_PED_INVINCIBLE( sub_8075(), 0 );
        if (bParam0)
        {
            sub_22512();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_22512()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_8075() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_8075(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_8075(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_8075(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_8075(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_22710(unknown uParam0, unknown uParam1)
{
    sub_5867( uParam0, uParam1, 1, 0 );
    sub_17454( uParam0 );
    return;
}

void sub_22827(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_1048( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_1048( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_10980( iParam1 );
        sub_23086( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_23537( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_23537( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_23769( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_23537( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_23769( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_23769( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_23537( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_23769( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_23769( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_23769( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_23537( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_23769( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_23769( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_23769( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_23769( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_25327( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_1048( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_23086(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_8357( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_1048( "TEH", "Ending context", 0 );
        sub_1048( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_23537(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_23769(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_25327(int iParam0)
{
    sub_1271( "CHECKPOINT DATA" );
    sub_25366( iParam0->_fU4 );
    sub_15602( iParam0->_fU16 );
    sub_15602( iParam0->_fU20 );
    sub_15602( iParam0->_fU24 );
    sub_25419( iParam0->_fU28 );
    sub_25419( iParam0->_fU56 );
    sub_25419( iParam0->_fU60 );
    sub_25419( iParam0->_fU64 );
    sub_25419( iParam0->_fU68 );
    sub_25419( iParam0->_fU72 );
    sub_25419( iParam0->_fU76 );
    sub_25419( iParam0->_fU80 );
    sub_25419( iParam0->_fU84 );
    sub_25419( iParam0->_fU88 );
    sub_25419( iParam0->_fU92 );
    sub_15602( iParam0->_fU32 );
    sub_25419( iParam0->_fU36 );
    sub_25419( iParam0->_fU40 );
    sub_25419( iParam0->_fU44 );
    sub_15602( iParam0->_fU136 );
    sub_25624( iParam0->_fU140 );
    sub_25419( iParam0->_fU52 );
    sub_1271( "---nRightHolsterAttachmentEnabled: " );
    sub_25419( iParam0->_fU96 );
    sub_1271( "---nRightHolsterAttachmentToggled: " );
    sub_25419( iParam0->_fU100 );
    sub_1271( "---nLeftHolsterAttachmentEnabled: " );
    sub_25419( iParam0->_fU104 );
    sub_1271( "---nLeftHolsterAttachmentToggled: " );
    sub_25419( iParam0->_fU108 );
    sub_1271( "---nRifleHolsterAttachmentEnabled: " );
    sub_25419( iParam0->_fU112 );
    sub_1271( "---nRifleHolsterAttachmentToggled: " );
    sub_25419( iParam0->_fU116 );
    sub_1271( "---nRightHandAttachmentEnabled: " );
    sub_25419( iParam0->_fU120 );
    sub_1271( "---nRightHandAttachmentToggled: " );
    sub_25419( iParam0->_fU124 );
    sub_1271( "---nLeftHandAttachmentEnabled: " );
    sub_25419( iParam0->_fU128 );
    sub_1271( "---nLeftHandAttachmentToggled: " );
    sub_25419( iParam0->_fU132 );
    sub_25419( l_U1 );
    sub_25419( 144 );
    return;
}

void sub_25366(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_25419(unknown uParam0)
{
    return;
}

void sub_25624(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_26483(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_26501( sub_8075(), uParam0 );
}

int sub_26501(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_26676()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    int I;

    if (NOT l_U443)
    {
        uVar2 = {sub_26702( sub_8075() )};
        if ((uVar2._fU4 > 7.60000000) || ((sub_26760( ref l_U433 )) > 0))
        {
            if ((l_U1100[2]) || ((l_U1100[1]) || (l_U1100[0])))
            {
                ;
            }
            else
            {
                for ( I = 0; I <= 2; I++ )
                {
                    sub_26939( l_U433[I], 47, 1000 );
                }
            }
            l_U443 = 1;
        }
    }
    return;
}

vector sub_26702(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return "[dynamic result, ret vals = 3]";
        break;
        GET_PED_COORDS( uParam0 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        break;
    }
    return vector( 0, 0, 0);
}

void sub_26760(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

void sub_26939(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_SET_ACTION_INTENTION( uParam0, uParam1, uParam2, l_U40 );
    }
    return;
}

void sub_27016()
{
    int I;

    for ( I = 0; I <= 2; I++ )
    {
        if (NOT l_U1100[I])
        {
            if ((IS_PED_DEAD( l_U433[I] )) || ((sub_27065( l_U433[I], 47 )) == 1))
            {
                sub_27148( ref l_U433[I], 47 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U433[I], 0 );
                FREEZE_PED_POSITION( l_U433[I], 0 );
                l_U1100[I] = 1;
            }
        }
    }
    return;
}

int sub_27065(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 );
    }
    return 0;
}

void sub_27148(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

void sub_27268()
{
    unknown uVar2;

    sub_1048( "GA", "P_CreateSection1CS start", 0 );
    sub_14564( ref l_U549, 1056964608, 0 );
    l_U517 = sub_14756( ref l_U504 );
    sub_10326( l_U517, -1074756423, 25000, 0, 0 );
    sub_15780( l_U517, ref l_U549 );
    if ((NOT (IS_PED_DEAD( sub_8075() ))) AND (NOT (IS_PED_DEAD( l_U517 ))))
    {
        SET_PED_AI_TEMPLATE( l_U517, ref g_U1586 );
        REGISTER_TARGET( l_U517, sub_8075() );
        SET_PED_EMOTION_STATE( l_U517, 1 );
        sub_27463( l_U517 );
        SET_PED_FLAG_BLOCK_WOUNDED_MOVEMENT( l_U517, 1 );
    }
    l_U532 = sub_14756( ref l_U519 );
    sub_10326( l_U532, -168327769, 25000, 0, 0 );
    sub_15780( l_U532, ref l_U549 );
    if ((NOT (IS_PED_DEAD( sub_8075() ))) AND (NOT (IS_PED_DEAD( l_U532 ))))
    {
        SET_PED_AI_TEMPLATE( l_U532, ref g_U1594 );
        SET_PED_COMBAT_RANGE_MAX( l_U532, 16 );
        REGISTER_TARGET( l_U532, sub_8075() );
        SET_PED_EMOTION_STATE( l_U532, 1 );
        SET_PED_COMBAT_ATTRIBUTES( l_U532, 1, 0 );
    }
    l_U547 = sub_14756( ref l_U534 );
    sub_10326( l_U547, 1194438308, 25000, 0, 0 );
    sub_15780( l_U547, ref l_U549 );
    if ((NOT (IS_PED_DEAD( sub_8075() ))) AND (NOT (IS_PED_DEAD( l_U547 ))))
    {
        SET_PED_AI_TEMPLATE( l_U547, ref g_U1602 );
        SET_PED_COMBAT_RANGE_MIN( l_U547, 3 );
        SET_PED_COMBAT_RANGE_MAX( l_U547, 10 );
        SET_PED_EMOTION_STATE( l_U547, 1 );
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_AIM_GUN_AT_COORD( 0, 87.45934000, 17.22695000, 1.77155400, -1, 0 );
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( l_U547, uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    SET_PED_NAME_DEBUG( l_U547, "S1BehindTrailer" );
    sub_1048( "GA", "P_CreateSection1CS end", 0 );
    return;
}

void sub_27463(unknown uParam0)
{
    unknown uVar3;

    if (sub_15425( uParam0 ))
    {
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (NOT (IS_PED_DEAD( sub_8075() )))
        {
            TASK_AIM_GUN_AT_PED( 0, sub_8075(), -1, 0 );
        }
        CLOSE_SEQUENCE_TASK( uVar3 );
        CLEAR_PED_TASKS( uParam0 );
        TASK_PERFORM_SEQUENCE( uParam0, uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    return;
}

void sub_28052()
{
    unknown uVar2;

    if ((IS_PED_DEAD( l_U433[2] )) || ((IS_PED_DEAD( l_U433[1] )) || ((IS_PED_DEAD( l_U433[0] )) || (sub_26483( l_U555 )))))
    {
        sub_1048( "SBA", "P_Section1WentShortWay started", 0 );
        if ((NOT (IS_PED_DEAD( sub_8075() ))) AND (NOT (IS_PED_DEAD( l_U517 ))))
        {
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 75.45000000, 16.25000000, 4.92000000, sub_8075(), 4, 0, 0.50000000, 0.50000000, 1, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0, sub_8075() );
            CLOSE_SEQUENCE_TASK( uVar2 );
            CLEAR_PED_TASKS( l_U517 );
            TASK_PERFORM_SEQUENCE( l_U517, uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
        }
        if ((NOT (IS_PED_DEAD( sub_8075() ))) AND (NOT (IS_PED_DEAD( l_U532 ))))
        {
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_PAUSE( 0, 3000 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 75.00000000, 19.65200000, 1.80000000, sub_8075(), 3, 0, 0.50000000, 0.50000000, 1, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0, sub_8075() );
            CLOSE_SEQUENCE_TASK( uVar2 );
            TASK_PERFORM_SEQUENCE( l_U532, uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
        }
        sub_28475();
        ENABLE_WALLA_ZONE( "S_MARINA_WZ_CONTAINER_YARD", 1 );
        l_U518 = 1;
        sub_1048( "GA", "P_Section1WentShortWay end", 0 );
    }
    return;
}

void sub_28475()
{
    sub_1048( "GA", "P_CREATE_SECTION_2_CS start", 0 );
    sub_14564( ref l_U837, 1056964608, 0 );
    sub_28580( ref l_U795, ref l_U808, -168327769, "AIT_NORMAL", 0, 25000, 2, 68019059, 25000 );
    sub_15780( l_U808, ref l_U837 );
    if ((NOT (IS_PED_DEAD( sub_8075() ))) AND (NOT (IS_PED_DEAD( l_U808 ))))
    {
        sub_28882( ref l_U808, 3, 10 );
        sub_27463( l_U808 );
    }
    SET_PED_NAME_DEBUG( l_U808, "S2InCorner" );
    sub_28580( ref l_U809, ref l_U822, 1194438308, "AIT_NORMAL", 0, 25000, 2, 0, 25000 );
    sub_15780( l_U822, ref l_U837 );
    if ((NOT (IS_PED_DEAD( sub_8075() ))) AND (NOT (IS_PED_DEAD( l_U822 ))))
    {
        sub_28882( ref l_U822, 5, 20 );
        sub_27463( l_U822 );
    }
    SET_PED_NAME_DEBUG( l_U822, "S2BehindCrates" );
    sub_28580( ref l_U823, ref l_U836, -1074756423, "AIT_NORMAL", 0, 25000, 2, 0, 25000 );
    sub_15780( l_U836, ref l_U837 );
    if ((NOT (IS_PED_DEAD( sub_8075() ))) AND (NOT (IS_PED_DEAD( l_U836 ))))
    {
        sub_28882( ref l_U836, 5, 20 );
        sub_27463( l_U836 );
    }
    SET_PED_NAME_DEBUG( l_U836, "S2BehindTrailer" );
    sub_1048( "GA", "P_CREATE_SECTION_2_CS end", 0 );
    return;
}

void sub_28580(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, int iParam7, unknown uParam8)
{
    unknown uVar11;

    sub_19053( (uParam1^) );
    (uParam1^) = sub_14756( uParam0 );
    if (sub_15425( (uParam1^) ))
    {
        uVar11 = sub_10326( (uParam1^), uParam2, uParam5, 0, 1 );
        if (iParam7 != 0)
        {
            sub_9694( (uParam1^), iParam7, 0, uParam8, 0 );
        }
        SET_PED_AI_TEMPLATE( (uParam1^), uParam3 );
        SET_PED_ALERTNESS( (uParam1^), uParam6 );
        switch (uParam4)
        {
            case 0: break;
            case 1:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 13, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 13, 1 );
            break;
            case 2:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 14, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 14, 1 );
            break;
            case 3:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 12, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 12, 1 );
            break;
        }
    }
    return;
}

void sub_28882(unknown uParam0, float fParam1, float fParam2)
{
    if (sub_15425( (uParam0^) ))
    {
        if (fParam1 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam1 );
        }
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam2 );
        }
    }
    return;
}

void sub_29583()
{
    unknown uVar2;

    sub_1048( "GA", "P_Section1NearOnGroundPunishesPlayerForStandingAroundLikeALemon start", 0 );
    if ((NOT (IS_PED_DEAD( sub_8075() ))) AND ((NOT (IS_PED_DEAD( l_U532 ))) AND (l_U533 == 0)))
    {
        l_U533 = 1;
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        if (NOT (IS_PED_DEAD( sub_8075() )))
        {
            TASK_COMBAT_PED( 0, sub_8075() );
        }
        CLOSE_SEQUENCE_TASK( uVar2 );
        CLEAR_PED_TASKS( l_U532 );
        TASK_PERFORM_SEQUENCE( l_U532, uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    sub_1048( "GA", "P_Section1NearOnGroundPunishesPlayerForStandingAroundLikeALemon end", 0 );
    return;
}

void sub_29946(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4, unknown uParam5)
{
    unknown uVar8;
    unknown uVar9;

    uVar9 = nil;
    if (bParam4)
    {
        uVar9 = sub_8075();
    }
    if ((NOT (IS_PED_DEAD( sub_8075() ))) AND (NOT (IS_PED_DEAD( uParam0 ))))
    {
        sub_1048( "SBA", "P_TASK_ENEMY_MOVE_COMBAT_COVER start", "***" );
        OPEN_SEQUENCE_TASK( ref uVar8 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, uParam5 );
        TASK_COMBAT_MOVE_TO_COVER_COORDS( 0, uParam1, uVar9 );
        CLOSE_SEQUENCE_TASK( uVar8 );
        CLEAR_PED_TASKS( uParam0 );
        TASK_PERFORM_SEQUENCE( uParam0, uVar8 );
        CLEAR_SEQUENCE_TASK( uVar8 );
    }
    return;
}

void sub_30202(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (sub_15425( uParam0 ))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
        sub_30236( ref uParam0, uParam4 );
        TASK_COMBAT_SNAP_TO_COVER( uParam0, uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_30236(unknown uParam0, unknown uParam1)
{
    if (sub_15425( (uParam0^) ))
    {
        SET_PED_FLAG_LOCK_TO_COVER( (uParam0^), uParam1 );
    }
    return;
}

int sub_30354()
{
    if ((IS_PED_DEAD( l_U433[2] )) AND ((IS_PED_DEAD( l_U433[1] )) AND ((IS_PED_DEAD( l_U433[0] )) AND ((IS_PED_DEAD( l_U517 )) AND (IS_PED_DEAD( l_U532 ))))))
    {
        sub_1048( "GA", "First five guys are DEAD!", 0 );
        return 1;
    }
    return 0;
}

void sub_30504(unknown uParam0)
{
    sub_1048( "SBA", "P_START_PED_SEARCH", "***" );
    if (sub_15425( uParam0 ))
    {
        CLEAR_PED_TASKS( uParam0 );
        TASK_SEARCH_FOR_UNSEEN_ENEMY( uParam0, 1 );
        SET_PED_ALERTNESS( uParam0, 3 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( uParam0, 0 );
    }
    return;
}

void sub_30863(unknown uParam0, unknown uParam1)
{
    if (sub_15425( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), uParam1 );
    }
    return;
}

void sub_30927(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_26501( sub_8075(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_31070()
{
    unknown uVar2;

    sub_1048( "GA", "P_Section1AndIllGoTheHighRoad start", 0 );
    if ((NOT (IS_PED_DEAD( l_U547 ))) AND (l_U548 == 0))
    {
        l_U548 = 1;
        sub_21975( l_U547, 89.01728000, 12.66312000, 1.80008500, 174.65590000 );
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        if (NOT (IS_PED_DEAD( sub_8075() )))
        {
            TASK_COMBAT_PED( 0, sub_8075() );
        }
        CLOSE_SEQUENCE_TASK( uVar2 );
        CLEAR_PED_TASKS( l_U547 );
        TASK_PERFORM_SEQUENCE( l_U547, uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
        sub_1048( "MSWW", "Leaving High Road", 0 );
    }
    sub_1048( "GA", "P_Section1AndIllGoTheHighRoad end", 0 );
    return;
}

void sub_31371()
{
    sub_1048( "GA", "P_SEC2_CORENR_ACTIVATE start", 0 );
    sub_31445( l_U808, 94.96800000, 14.76400000, 1.80000000, 1, 0 );
    sub_1048( "GA", "P_SEC2_CORENR_ACTIVATE end", 0 );
    return;
}

void sub_31445(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4, unknown uParam5)
{
    unknown uVar8;

    if ((NOT (IS_PED_DEAD( sub_8075() ))) AND (NOT (IS_PED_DEAD( uParam0 ))))
    {
        sub_1048( "SBA", "P_TASK_ENEMY_MOVE_COMBAT start", "***" );
        REGISTER_TARGET( uParam0, sub_8075() );
        OPEN_SEQUENCE_TASK( ref uVar8 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (bParam4)
        {
            TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, uParam1, sub_8075(), uParam5, 8, 40, -1082130432, 3 );
        }
        else
        {
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uParam1, 3, -1, 1048576000, 0, 0 );
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0, sub_8075() );
        CLOSE_SEQUENCE_TASK( uVar8 );
        CLEAR_PED_TASKS( uParam0 );
        TASK_PERFORM_SEQUENCE( uParam0, uVar8 );
        CLEAR_SEQUENCE_TASK( uVar8 );
    }
    return;
}

void sub_32032()
{
    sub_1048( "SBA", "P_Section1OhYouGoTheLowRoad start", 0 );
    if (NOT l_U548)
    {
        sub_31445( l_U547, 88.80000000, 16.40000000, 1.80000000, 1, 1 );
    }
    sub_32137( ref l_U532, sub_8075() );
    sub_1048( "SBA", "P_Section1OhYouGoTheLowRoad end", 0 );
    return;
}

void sub_32137(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        CLEAR_PED_TASKS( (uParam0^) );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 0 );
        TASK_COMBAT_PED( (uParam0^), uParam1 );
    }
    return;
}

void sub_32540()
{
    int I;

    sub_1048( "GA", "P_CreateSection3CS start", 0 );
    if (NOT l_U843)
    {
        l_U843 = 1;
        sub_14564( ref l_U907, 1.00000000, 0 );
        sub_19053( l_U857 );
        l_U857 = sub_14756( ref l_U844 );
        sub_10326( l_U857, -1074756423, 25000, 0, 0 );
        sub_9694( l_U857, -612753081, 0, 25000, 0 );
        sub_15780( l_U857, ref l_U907 );
        sub_15529( ref l_U857, ref g_U1586, -1082130432, -1082130432, 1 );
        if ((NOT (IS_PED_DEAD( sub_8075() ))) AND (NOT (IS_PED_DEAD( l_U857 ))))
        {
            SET_PED_ALERTNESS( l_U857, 3 );
            sub_27463( l_U857 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U857, 1 );
            SET_PED_FLAG_BLOCK_WOUNDED_MOVEMENT( l_U857, 1 );
        }
        sub_19053( l_U892 );
        l_U892 = sub_14756( ref l_U879 );
        sub_10326( l_U892, -168327769, 25000, 0, 0 );
        sub_15780( l_U892, ref l_U907 );
        sub_15529( ref l_U892, ref g_U1586, 3, 12, 1 );
        if ((NOT (IS_PED_DEAD( sub_8075() ))) AND (NOT (IS_PED_DEAD( l_U892 ))))
        {
            SET_PED_ALERTNESS( l_U892, 3 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U892, 1 );
            SET_PED_COMBAT_ATTRIBUTES( l_U892, 1, 0 );
        }
        sub_19053( l_U906 );
        l_U906 = sub_14756( ref l_U893 );
        sub_10326( l_U906, -1074756423, 25000, 0, 0 );
        sub_15780( l_U906, ref l_U907 );
        sub_15529( ref l_U906, ref g_U1586, -1082130432, -1082130432, 1 );
        if ((NOT (IS_PED_DEAD( sub_8075() ))) AND (NOT (IS_PED_DEAD( l_U906 ))))
        {
            SET_PED_ALERTNESS( l_U906, 3 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U906, 1 );
        }
        for ( I = 0; I <= (l_U940 - 1); I++ )
        {
            sub_19053( l_U940[I] );
            l_U940[I] = sub_14756( ref l_U913[I] );
            sub_10326( l_U940[I], -1074756423, 25000, 0, 0 );
            sub_15780( l_U940[I], ref l_U907 );
            sub_15529( ref l_U940[I], ref g_U1586, -1082130432, -1082130432, 1 );
            sub_33229( ref l_U940[I], 3 );
        }
        sub_30202( l_U940[0], "GenCover", "DB17D472_93C2DF68_Corner1", 0, 1 );
        sub_33345( l_U940[1] );
        sub_16243( ref l_U940, "TacticalCover" );
    }
    sub_1048( "GA", "P_CreateSection3CS end", 0 );
    return;
}

void sub_33229(unknown uParam0, unknown uParam1)
{
    if (sub_15425( (uParam0^) ))
    {
        SET_PED_ALERTNESS( (uParam0^), uParam1 );
    }
    return;
}

void sub_33345(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_33658(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_33783()
{
    unknown uVar2;

    sub_1048( "SBA", "P_Section3RunAcrossTheYard start", 0 );
    if ((NOT (IS_PED_DEAD( sub_8075() ))) AND (NOT (IS_PED_DEAD( l_U906 ))))
    {
        sub_16066( ref l_U906 );
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 104.58120000, 34.94937000, 1.80005300, sub_8075(), 4, 1, 1056964608, 0, 1, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar2 );
        CLEAR_PED_TASKS( l_U906 );
        TASK_PERFORM_SEQUENCE( l_U906, uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    if ((NOT (IS_PED_DEAD( sub_8075() ))) AND (NOT (IS_PED_DEAD( l_U857 ))))
    {
        sub_30202( l_U857, "GenCover", "DB17D472_F5617DED_Popover1", 0, 0 );
    }
    sub_34073();
    l_U1090 = 1;
    sub_1048( "SBA", "P_Section3RunAcrossTheYard end", 0 );
    return;
}

void sub_34073()
{
    sub_1048( "SBA", "P_CREATE_SECTION3_SHOTGUN_GUY", "***" );
    sub_19053( l_U1084 );
    l_U1084 = sub_14756( ref l_U1071 );
    sub_10326( l_U1084, -168327769, 25000, 0, 0 );
    if (NOT (IS_PED_DEAD( l_U1084 )))
    {
        SET_PED_COMBAT_MOVEMENT( l_U1084, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1084, 1 );
        SET_PED_AI_TEMPLATE( l_U1084, ref g_U1586 );
        SET_PED_COMBAT_RANGE_MIN( l_U1084, 3 );
        SET_PED_COMBAT_RANGE_MAX( l_U1084, 20 );
        SET_PED_ALERTNESS( l_U1084, 3 );
        TASK_AIM_GUN_AT_COORD( l_U1084, 94.00000000, 48.60000000, 2.94000000, -1, 0 );
        SET_PED_COMBAT_ATTRIBUTES( l_U1084, 1, 0 );
        SET_PED_FLAG_BLOCK_WOUNDED_MOVEMENT( l_U1084, 1 );
    }
    return;
}

int sub_34531()
{
    int Result;

    if (l_U1090)
    {
        Result = (sub_34555( ref l_U433 )) + (sub_34555( ref l_U940 ));
        if (NOT (IS_PED_DEAD( l_U517 )))
        {
            Result++;
        }
        if (NOT (IS_PED_DEAD( l_U532 )))
        {
            Result++;
        }
        if (NOT (IS_PED_DEAD( l_U547 )))
        {
            Result++;
        }
        if (NOT (IS_PED_DEAD( l_U808 )))
        {
            Result++;
        }
        if (NOT (IS_PED_DEAD( l_U822 )))
        {
            Result++;
        }
        if (NOT (IS_PED_DEAD( l_U836 )))
        {
            Result++;
        }
        if (NOT (IS_PED_DEAD( l_U857 )))
        {
            Result++;
        }
        if (NOT (IS_PED_DEAD( l_U892 )))
        {
            Result++;
        }
        if (NOT (IS_PED_DEAD( l_U906 )))
        {
            Result++;
        }
        if (NOT (IS_PED_DEAD( l_U1084 )))
        {
            Result++;
        }
        return Result;
    }
    return 10;
}

void sub_34555(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_34959()
{
    unknown uVar2;

    switch (l_U1089)
    {
        case 0:
        if (sub_15425( l_U1084 ))
        {
            sub_1048( "SBA", "P_MOVE_SHOTGUN_GUY: eCYSG_State = eCYSG_ShootGate", 0 );
            PLAY_AUDIO_EVENT_FROM_PED( "NPC_MOSSBERG_SINGLESHOT", l_U1084 );
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_SHOOT_AT_COORD( 0, 94.00000000, 48.60000000, 2.94000000, 500, 1566631136, 1, 0 );
            CLOSE_SEQUENCE_TASK( uVar2 );
            CLEAR_PED_TASKS( l_U1084 );
            TASK_PERFORM_SEQUENCE( l_U1084, uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
            SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U1084 ), 94.00000000, 48.60000000, 2.94000000, 50, 1, -168327769, 0 );
            l_U1089 = 1;
        }
        break;
        case 1:
        if ((sub_35285( l_U1084, 31 )) == 7)
        {
            sub_1048( "SBA", "P_MOVE_SHOTGUN_GUY: eCYSG_State = eCYSG_RunOut", 0 );
            sub_35425( ref g_U1467, 1, 0, 1065353216 );
            sub_13054( ref g_U1467, 1 );
            SET_PED_COMBAT_MOVEMENT( l_U1084, 2 );
            sub_35594();
            l_U1089 = 3;
            sub_1048( "SBA", "P_MOVE_SHOTGUN_GUY: going to eCYSG_Done", 0 );
        }
        break;
        case 2:
        sub_1048( "SBA", "P_MOVE_SHOTGUN_GUY: eCYSG_State = eCYSG_WalkOut", 0 );
        SET_PED_COMBAT_MOVEMENT( l_U1084, 2 );
        sub_35972();
        l_U1089 = 3;
        break;
        case 3: break;
    }
    return;
}

int sub_35285(unknown uParam0, unknown uParam1)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        return GET_SCRIPT_TASK_STATUS( uParam0, uParam1 );
    }
    return 0;
}

void sub_35425(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_12850( iParam0 )) == 0)
    {
        sub_12916( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

void sub_35594()
{
    unknown uVar2;

    sub_1048( "GA", "P_CONTAINER_SHOTGUN_CS_GO_THROUGH_DOOR start", 0 );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    if (NOT (IS_PED_DEAD( sub_8075() )))
    {
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, l_U1086, sub_8075(), 1, 3, 15, -1, 3 );
    }
    CLOSE_SEQUENCE_TASK( uVar2 );
    CLEAR_PED_TASKS( l_U1084 );
    TASK_PERFORM_SEQUENCE( l_U1084, uVar2 );
    CLEAR_SEQUENCE_TASK( uVar2 );
    sub_1048( "GA", "P_CONTAINER_SHOTGUN_CS_GO_THROUGH_DOOR end", 0 );
    return;
}

void sub_35972()
{
    unknown uVar2;

    sub_1048( "SBA", "P_CONTAINER_SHOTGUN_CS_GO_THROUGH_DOOR_CAUTIOUS start", 0 );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    if (NOT (IS_PED_DEAD( sub_8075() )))
    {
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, l_U1086, sub_8075(), 0, 3, 15, -1, 2 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, 97.23406000, 46.33731000, 1.80000000, sub_8075(), 1, 8, 15, -1, 2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0, sub_8075() );
    }
    CLOSE_SEQUENCE_TASK( uVar2 );
    CLEAR_PED_TASKS( l_U1084 );
    TASK_PERFORM_SEQUENCE( l_U1084, uVar2 );
    CLEAR_SEQUENCE_TASK( uVar2 );
    sub_1048( "SBA", "P_CONTAINER_SHOTGUN_CS_GO_THROUGH_DOOR_CAUTIOUS end", 0 );
    return;
}

void sub_36329(int iParam0)
{
    int iVar3;
    float Result;

    if ((sub_12850( iParam0 )) == 0)
    {
        sub_12916( iParam0 );
    }
    iVar3 = 0;
    Result = 0.00000000;
    GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar3, ref Result );
    return Result;
}

void sub_36516()
{
    int I;

    sub_1048( "GA", "P_CY_ASSIGN_LAST_CS_BULLET_CAM start", 0 );
    for ( I = 0; I <= 2; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U433[I] )))
        {
            SET_PED_CAN_TRIGGER_BULLET_CAM( l_U433[I], 1 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U517 )))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U517, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U532 )))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U532, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U547 )))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U547, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U808 )))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U808, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U822 )))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U822, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U836 )))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U836, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U857 )))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U857, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U892 )))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U892, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U906 )))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U906, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U1084 )))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U1084, 1 );
    }
    sub_36952( ref l_U940 );
    sub_1048( "GA", "P_CY_ASSIGN_LAST_CS_BULLET_CAM end", 0 );
    return;
}

void sub_36952(unknown uParam0)
{
    int I;

    if ((sub_34555( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_37223(unknown uParam0, unknown uParam1)
{
    sub_1048( "SBA", "P_SPEECH_PLAY_MAX_MONOLOGUE", "***" );
    if (sub_16084())
    {
        sub_37292( uParam1 );
        sub_37372( 0, sub_8075(), "MAX", uParam1, 2, 0 );
        sub_37372( 1, sub_8075(), "MAX", uParam1, 2, 0 );
        sub_37597( uParam0, uParam1, 8, 1 );
    }
    return;
}

void sub_37292(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_37372(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_37597(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_37621( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_37621(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_37676( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_37676(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_37711( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_38205( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_37711(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_38205(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_38427(int iParam0)
{
    vector vVar3;

    sub_1048( "BSW", "[SP]### P_StartLightning ###", 0 );
    vVar3 = {0.00000000, 0.00000000, 0.00000000};
    if (iParam0->_fU16 == 1)
    {
        START_PARTICLE_FX_NON_LOOPED_AT_COORD( ref l_U2, iParam0->_fU4, vVar3, iParam0->_fU0 );
    }
    else
    {
        START_PARTICLE_FX_NON_LOOPED_AT_COORD( ref l_U10, iParam0->_fU4, vVar3, iParam0->_fU0 );
    }
    if (iParam0->_fU20 == 1)
    {
        sub_5867( iParam0 + 24, iParam0->_fU60, 1, 0 );
        sub_17454( iParam0 + 24 );
    }
    return;
}

void sub_38614(int iParam0)
{
    if ((sub_17574( iParam0 + 24 )) == 1)
    {
        if (iParam0->_fU68 == 0)
        {
            TRIGGER_THUNDER( iParam0->_fU64, 1 );
        }
        else
        {
            TRIGGER_LIGHTNING( 0 );
        }
    }
    return;
}

void sub_38690()
{
    if ((DOES_OBJECT_EXIST( l_U1094 )) AND (NOT l_U1095))
    {
        if (HAS_FRAGMENT_ROOT_OF_OBJECT_BEEN_DAMAGED( l_U1094 ))
        {
            sub_1048( "SBA", "Forklift done blown up", "$$$" );
            l_U1095 = 1;
            ENABLE_COVERPOINTMP3( "GenCover", "DB17D472_B7A5FF90_Corner1", 0 );
            ENABLE_COVERPOINTMP3( "GenCover", "DB17D472_B7A5FF90_Corner2", 0 );
        }
    }
    return;
}

void sub_38912(unknown uParam0, unknown uParam1, unknown uParam2)
{
    sub_1048( "SBA", "P_CREATE_CY_TO_BOATYARD_GARAGE_DOOR", "***" );
    sub_13317( g_U1660 );
    g_U1660 = sub_13386( g_U1093, uParam0, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );
    if ((DOES_OBJECT_EXIST( g_U1660 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U1660, ref g_U1192 );
        FREEZE_OBJECT_POSITION( g_U1660, 1 );
    }
    return;
}

void sub_39079()
{
    sub_1048( "GA", "P_START_GARAGE_ROOM", 0 );
    l_U1189 = sub_13997( g_U1094, 71.38000000, 57.10000000, 3.35000000, 0.00000000, 0.00000000, 180.00000000, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U1189 ))
    {
        FREEZE_OBJECT_POSITION( l_U1189, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1189, ref g_U1192 );
    }
    if (DOES_OBJECT_EXIST( g_U1660 ))
    {
        PLAY_OBJECT_ANIM( g_U1660, "P_MA_BOTDOR_CA_H", ref g_U1138, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U1660, "P_MA_BOTDOR_CA_H", ref g_U1138, 0.00000000 );
        SET_OBJECT_ANIM_SPEED( g_U1660, "P_MA_BOTDOR_CA_H", ref g_U1138, 0.00000000 );
    }
    l_U1313 = 1;
    if (NOT (DOES_PLACEMENT_EXIST( g_U1576[0] )))
    {
        g_U1576[0] = CREATE_PLACEMENT_ROTATE( -4072149, 70.45000000, 48.63000000, 2.83000000, 0, 0, 0, 0, 0, 0, 1119092736 );
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U1576[0], ref g_U1192 );
    }
    if (NOT (DOES_PLACEMENT_EXIST( g_U1579 )))
    {
        g_U1579 = CREATE_PLACEMENT_ROTATE( 1699359515, 75.36500000, 52.38000000, 2.29000000, 1.57000000, -1, 0.00000000, 0, 0, 0, 1119092736 );
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U1579, ref g_U1192 );
    }
    if (NOT (DOES_PLACEMENT_EXIST( g_U1580 )))
    {
        g_U1580 = CREATE_AMMOBAG_PLACEMENT_ROTATE( 72.63200000, 49.09000000, 1.99000000, 0.00000000, 0.00000000, 3.90000000, 0, -1, 0, 1119092736 );
        sub_7384( g_U1580 );
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U1580, ref g_U1192 );
    }
    if (CUTSCENE_IS_LOADED( l_U392 ))
    {
        CLEAR_NAMED_CUTSCENE( l_U392 );
    }
    sub_12403( l_U391, 0 );
    return;
}

void sub_39685(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

void sub_39730()
{
    sub_39749( ref l_U1048, ref l_U433, 1 );
    sub_39804( ref l_U1048, l_U517, 1 );
    sub_39804( ref l_U1048, l_U532, 1 );
    sub_39804( ref l_U1048, l_U547, 1 );
    sub_39804( ref l_U1048, l_U808, 1 );
    sub_39804( ref l_U1048, l_U822, 1 );
    sub_39804( ref l_U1048, l_U836, 1 );
    sub_39804( ref l_U1048, l_U857, 1 );
    sub_39804( ref l_U1048, l_U892, 1 );
    sub_39804( ref l_U1048, l_U906, 1 );
    sub_39804( ref l_U1048, l_U1084, 1 );
    return;
}

void sub_39749(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam1^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam1^)[I] )))
        {
            sub_39804( uParam0, (uParam1^)[I], uParam2 );
        }
    }
    return;
}

void sub_39804(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

int sub_40124(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_40411(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_8075() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND( sub_8075(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if (((sub_40491( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 = sub_40700();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_8075(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

int sub_40491(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_40700()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_8075() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_8075(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_40491( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_8075(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_8075(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_8075(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

int sub_40954(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, boolean bParam42)
{
    if (sub_16084())
    {
        if ((NOT (GET_IS_PED_FORCED_TO_WALK( sub_8075() ))) AND (sub_26483( uParam0 )))
        {
            sub_1048( "RJM", "UPDATE_FORCEWALK_AND_TRIGGER_PAIR - Force walk enabled", 0 );
            SET_PED_FORCED_TO_WALK( sub_8075(), 1 );
        }
        else if ((GET_IS_PED_FORCED_TO_WALK( sub_8075() )) AND (NOT (sub_26483( uParam0 ))))
        {
            sub_1048( "RJM", "UPDATE_FORCEWALK_AND_TRIGGER_PAIR - Force walk disabled", 0 );
            SET_PED_FORCED_TO_WALK( sub_8075(), 0 );
        }
    }
    if (sub_26483( uParam21 ))
    {
        if (bParam42)
        {
            SET_PED_FORCED_TO_WALK( sub_8075(), 0 );
        }
        return 1;
    }
    return 0;
}

void sub_41264(boolean bParam0)
{
    if (NOT bParam0)
    {
        sub_1048( "GA", "P_UNLOAD_ASSETS start", 0 );
    }
    sub_41322( g_U1031 );
    sub_41322( g_U1056 );
    sub_41322( g_U1064 );
    sub_41322( g_U1100 );
    sub_41322( g_U1099 );
    sub_41322( g_U1061 );
    sub_41322( g_U1062 );
    sub_41322( g_U1059 );
    sub_41322( g_U1060 );
    sub_41322( g_U774 );
    sub_41322( -1784229265 );
    sub_41322( -72345008 );
    if (NOT bParam0)
    {
        sub_41322( g_U1094 );
        RELEASE_SOUND_ID( l_U1317 );
        RELEASE_SOUND_ID( l_U1319 );
        RELEASE_SOUND_ID( l_U1318 );
        RELEASE_NAMED_SCRIPT_AUDIO_BANK( l_U1136 );
    }
    sub_1048( "GA", "P_UNLOAD_ASSETS end", 0 );
    return;
}

void sub_41322(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_1271( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_41675()
{
    sub_1048( "SBA", "P_PLAY_CUTSCENE_MID_05_DOCKS start", "***" );
    sub_20477( 1, 0, 0, 1 );
    sub_12403( l_U391, 1 );
    sub_41765( ref l_U1294, 1, 1 );
    sub_40411( 1 );
    if (sub_16084())
    {
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_8075(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        CUTSCENE_REGISTER_PED_TELEPORT( sub_8075(), g_U790[5], g_U899[5] );
    }
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U1481._fU0, g_U1481._fU4 );
    START_SEAMLESS_CUTSCENE();
    CUTSCENE_ENABLE_SKIP( 0 );
    while (NOT HAS_CUTSCENE_FINISHED())
    {
        WAIT( 0 );
    }
    sub_15566( "CUTSCENE FINISHED!" );
    if (DOES_OBJECT_EXIST( g_U1660 ))
    {
        PLAY_OBJECT_ANIM( g_U1660, "P_MA_BOTDOR_CA_H", ref g_U1138, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U1660, "P_MA_BOTDOR_CA_H", ref g_U1138, 1.00000000 );
    }
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U936[5], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U973[5], 1065353216, 0 );
    sub_22431( 1, 1 );
    g_U1010 = 1;
    sub_1048( "SBA", "P_PLAY_CUTSCENE_MID_05_DOCKS end", "***" );
    return;
}

void sub_41765(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

    sub_41777( iParam0 );
    if ((IS_PED_DEAD( sub_8075() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND( sub_8075(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if ((sub_40491( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if ((sub_40124( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND( sub_8075(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER( sub_8075(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER( sub_8075(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER( sub_8075(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD( sub_8075() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND( sub_8075(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_8075(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND( sub_8075(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_8075(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD( sub_8075() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND( sub_8075(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if ((sub_40124( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND( sub_8075(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND( sub_8075(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_8075(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

void sub_41777(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

void sub_43043()
{
    if (l_U377 != l_U375)
    {
        sub_1048( "TEH", "playing music:changed CUR FLAG", 0 );
        sub_25419( l_U375 );
        sub_25419( l_U376 );
        l_U377 = l_U375;
    }
    else if (l_U378 != l_U376)
    {
        sub_1048( "TEH", "playing music:changed NEW FLAG", 0 );
        sub_25419( l_U375 );
        sub_25419( l_U376 );
        l_U378 = l_U376;
    }
    switch (l_U375)
    {
        case 1:
        l_U388 = 0;
        l_U375 = 3;
        l_U376 = 3;
        AUDIO_MUSIC_FORCE_TRACK( "DOCKS_SONG_02", "DOCKS_02_3", "", 0, 5000, 5000, -1082130432, 0 );
        break;
        case 2:
        sub_1048( "TEH", "playing music: Warehouse Restart checkpoint ", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "DOCKS_SONG_02", "DOCKS_02_3", "", 0, 5000, 5000, -1082130432, 0 );
        l_U388 = 0;
        l_U375 = 3;
        l_U376 = 3;
        break;
        case 3:
        if (l_U376 == 3)
        {
            AUDIO_MUSIC_PRELOAD_ONESHOT( "DOCKS_ONESHOT_14", 0 );
            if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( 0 ))
            {
                sub_1048( "TEH", "playing music: Sussesfully preloaded DOCKS_ONESHOT_14", 0 );
                l_U388 = 1;
                l_U375 = 4;
                l_U376 = 4;
            }
        }
        break;
        case 4:
        if (l_U376 == 4)
        {
            if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( 0 ))
            {
                sub_1048( "TEH", "playing music: Sussesfully played MC_ONESHOT_PLAY_ONESHOT_14", 0 );
                AUDIO_MUSIC_PLAY_ONESHOT();
            }
            else
            {
                sub_1048( "TEH", "playing music:  MC_ONESHOT_PLAY_ONESHOT_14 wasn't loaded !", 0 );
            }
            sub_1048( "TEH", "playing music: MC_SHOOTING_STARTS", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "DOCKS_SONG_02", "DOCKS_02_3_5", "", 0, 3000, 5000, -1082130432, 0 );
            SET_STATIC_EMITTER_VOLUME( "CRATE_ROOM_MUSIC", -6.00000000 );
            l_U388 = 0;
            l_U375 = 5;
        }
        break;
        case 5:
        if (l_U376 == 5)
        {
            AUDIO_MUSIC_FORCE_TRACK( "DOCKS_SONG_02", "DOCKS_02_3", "", 0, 5000, 5000, -1082130432, 0 );
            l_U375 = 6;
        }
        break;
    }
    return;
}

void sub_44068()
{
    if (NOT l_U1320)
    {
        START_WIDGET_GROUP( "Container Yard Tuning" );
        ADD_WIDGET_BOOL( "Reset Container Yard", ref l_U1321 );
        ADD_WIDGET_BOOL( "Reset Forklift Test", ref l_U1323 );
        sub_44222( ref g_U1656, "Garage Door Position", 1036831949 );
        ADD_WIDGET_BOOL( "Create Garage Door", ref l_U1322 );
        sub_44222( ref l_U459, "Max's Start Pos", 1036831949 );
        STOP_WIDGET_GROUP();
        l_U1320 = 1;
    }
    if (l_U1321)
    {
        sub_18537();
        sub_21975( sub_8075(), g_U790[4], g_U899[4] );
        sub_2796();
        sub_5635();
        sub_12778();
        l_U1321 = 0;
    }
    if (l_U1323)
    {
        sub_18537();
        sub_21975( sub_8075(), 97.28000000, 29.08000000, 1.90000000, 270.00000000 );
        sub_2796();
        sub_5635();
        sub_13784();
        l_U1323 = 0;
    }
    if (l_U1322)
    {
        sub_13261();
        l_U1322 = 0;
    }
    return;
}

void sub_44222(int iParam0, unknown uParam1, unknown uParam2)
{
    START_WIDGET_GROUP( uParam1 );
    ADD_WIDGET_FLOAT_SLIDER( "x", iParam0 + 0, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "y", iParam0 + 4, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "z", iParam0 + 8, 60536, 5000, uParam2 );
    STOP_WIDGET_GROUP();
    return;
}

int sub_44576()
{
    if (((IS_PED_DEAD( sub_8075() )) == 0) AND ((DOES_OBJECT_EXIST( g_U1660 )) == 1))
    {
        if (((GET_DISTANCE_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_8075() ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( g_U1660 ), 1 )) > 3.00000000) AND (sub_26501( sub_8075(), l_U353 )))
        {
            return 1;
        }
    }
    return 0;
}

